{"openapi":"3.0.0","servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/taltech-lang-lab/SpeakerID/1.0.0"},{"description":"Virtual server","url":"http://localhost:8876/v1"}],"info":{"description":"API of the TalTech Speaker ID server (https://bitbucket.org/alumae/taltech-speaker-id-server).\n\nThis projects implements a trainable speaker identification system with a REST API, implemented using Kaldi. It uses i-vectors for speaker identifcation.\n\nThe main idea of the system is that it allows to enroll new speakers to the system by uploading their voice samples, and those speakers\ncan be later identified from new audio segments. Note that the server does not do speaker diarization.\n\nA typical workflow is as follows:\n  - Create training segments for each speaker, also known as person-of-interest (POI), by finding audio segments\n  where only this POI is speaking The segments should be preferably from several different audio recordings and the segments should\n  be cut into preferably into 10-20 second chunks.\n  - Create a new POI in the system, using POST reqest to `/pois`\n  - Upload the audio files where the POI is speaking, using POST request to `/enroll-poi`. You can add more training data for a POI later.\n  - Send an audio file where a single speaker is speaking for identification, using the POST request to `/identify`. The system tries to determine if any POI known to the system is speaking in the audio segment.\n  - You can modify POI data (such as ID, name), using POST request to `/pois/{poiId}`\n  \n\n\n  \n","version":"1.0.0","title":"Speaker ID API","contact":{"email":"alumae@gmail.com"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"paths":{"/pois":{"get":{"summary":"retrieves POIs","operationId":"getPois","description":"Retrieves  a list of POIs known by the system","responses":{"200":{"description":"list of all POIs","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Speaker"}}}}}}},"post":{"summary":"adds a POI","operationId":"addPoi","description":"Adds a new POI to the system","responses":{"201":{"description":"new POI created","headers":{"Location":{"description":"A link to get request for retrieving this POI","schema":{"type":"string"}}}},"404":{"description":"a POI with such ID  already exists"}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Speaker"}}},"description":"Speaker to add"}}},"/pois/{poiId}":{"get":{"summary":"retrieves info about a POI","operationId":"getPoi","parameters":[{"name":"poiId","in":"path","required":true,"description":"The ID of the POI to retrieve","schema":{"type":"string"}}],"responses":{"200":{"description":"info about the POI with the given ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Speaker"}}}},"404":{"description":"POI with such ID not found"}}},"post":{"summary":"updates POI","operationId":"updatePoi","description":"This operation allows to modify POI metadata (such as name) and add new fields. It does not allow to train the POI identification model. Use the operation `enroll-poi` to add audio data to the POI enrollment pool and retrain the POI model.","parameters":[{"name":"poiId","in":"path","required":true,"description":"The ID of the POI to modify","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Speaker"}}},"description":"POI to modify"},"responses":{"200":{"description":"Info about POI was modifies"},"404":{"description":"POI with such ID not found"}}},"delete":{"summary":"delete POI","operationId":"deletePoi","parameters":[{"name":"poiId","in":"path","required":true,"description":"The id of the POI to delete","schema":{"type":"string"}}],"responses":{"204":{"description":"Deleted"},"404":{"description":"POI with such ID not found"}}}},"/identify":{"post":{"summary":"identifies POI given one or more audio files","operationId":"identifyPOI","description":"This operation allows to send one or more audio files to the server and request the server to identify the speaker in this audio file (or a set of audio files).\nNote that if multiple audio files are uploaded, it is still assumed that they all correspond to the same speaker. I.e., identification is run using\ni-vectors averaged over all uploaded files of a single request.\n","parameters":[{"name":"uploadType","in":"query","required":true,"description":"Indicates whether a single file or several files are posted","schema":{"type":"string","enum":["media","multipart"]}}],"requestBody":{"description":"Binary data, or multipart/related (RFC 2387)","required":true,"content":{"audio/wav":{"schema":{"type":"string","format":"binary","description":"The request body is a WAV file. Only allowed when uploadType=media."}},"audio/mpeg":{"schema":{"type":"string","format":"binary","description":"The request body is a MPEG file (can be mp3, mp3, m4a, mpg, etc). Only allowed when uploadType=media."}},"multipart/related":{"schema":{"type":"string","format":"binary","description":"Format the body according to the multipart/related content type [RFC 2387]. Each part of the multipart content should specify it's own Content-Type, which should be either audio/wav or audio/mpeg."}}}},"responses":{"200":{"description":"POI was identified from the audio","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Speaker"}}}},"204":{"description":"The audio file(s) do not match any known POI with high enough confidence."}}}},"/enroll-poi":{"post":{"summary":"adds one audio file to POI's training data and retrains his/her model","operationId":"enrollPoi","parameters":[{"name":"poiId","in":"path","required":true,"description":"The ID of the POI who speaks in the uploaded audio file","schema":{"type":"string"}}],"requestBody":{"description":"Binary data of the audio file","required":true,"content":{"audio/wav":{"schema":{"type":"string","format":"binary"}},"audio/mpeg":{"schema":{"type":"string","format":"binary","description":"The request body is a MPEG file (can be mp3, mp3, m4a, mpg, etc)."}}}},"responses":{"200":{"description":"POI model updated"},"404":{"description":"POI with such ID not found"}}}}},"components":{"schemas":{"Speaker":{"required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}}}}}