openapi: 3.0.0
info:
  title: Xero Accounting API
  version: "2.1"
  description: >
    # Introduction

    The Xero Accounting API is a RESTful web service and uses the OAuth (v1.0a)
    protocol to authenticate 3rd party applications. The Accounting API exposes
    accounting and related functions of the main Xero application and can be
    used for a variety of purposes such as creating transactions like invoices
    and credit notes, right through to extracting accounting data via our
    reports endpoint.
  contact:
    name: Xero Developer Team
    url: 'https://developer.xero.com'
  x-logo:
    url: >-
      https://lh3.googleusercontent.com/-_IQ9BNy118c/AAAAAAAAAAI/AAAAAAAAAB0/yvA2ZQSg_pk/s500-c-no/photo.jpg
tags:
  - name: Accounts
    externalDocs:
      description: Accounts
      url: 'https://developer.xero.com/documentation/api/accounts/'
  - name: BankTransactions
    externalDocs:
      description: BankTransactions
      url: 'https://developer.xero.com/documentation/api/banktransactions/'
  - name: BankTransfers
    externalDocs:
      description: BankTransfers
      url: 'https://developer.xero.com/documentation/api/banktransfers/'
  - name: BrandingThemes
    externalDocs:
      description: BrandingThemes
      url: 'https://developer.xero.com/documentation/api/brandingthemes/'
  - name: Contacts
    externalDocs:
      description: Contacts
      url: 'https://developer.xero.com/documentation/api/contacts/'
  - name: ContactGroups
    externalDocs:
      description: ContactGroups
      url: 'https://developer.xero.com/documentation/api/contactgroups/'
  - name: CreditNotes
    externalDocs:
      description: CreditNotes
      url: 'https://developer.xero.com/documentation/api/creditnotes/'
  - name: Currencies
    externalDocs:
      description: Currencies
      url: 'https://developer.xero.com/documentation/api/currencies/'
  - name: Employees
    externalDocs:
      description: Employees
      url: 'https://developer.xero.com/documentation/api/employees/'
  - name: ExpenseClaims
    externalDocs:
      description: ExpenseClaims
      url: 'https://developer.xero.com/documentation/api/expenseclaims/'
  - name: Invoices
    externalDocs:
      description: Invoices
      url: 'https://developer.xero.com/documentation/api/invoices/'
  - name: Items
    externalDocs:
      description: Items
      url: 'https://developer.xero.com/documentation/api/items/'
  - name: Journals
    externalDocs:
      description: Journals
      url: 'https://developer.xero.com/documentation/api/journals/'
  - name: LinkedTransactions
    externalDocs:
      description: LinkedTransactions
      url: 'https://developer.xero.com/documentation/api/Linked-Transactions/'
  - name: ManualJournals
    externalDocs:
      description: ManualJournals
      url: 'https://developer.xero.com/documentation/api/manual-journals/'
  - name: Organisations
    externalDocs:
      description: Organsiations
      url: 'https://developer.xero.com/documentation/api/organisation/'
  - name: Overpayments
    externalDocs:
      description: Overpayments
      url: 'https://developer.xero.com/documentation/api/overpayments/'
  - name: Payments
    externalDocs:
      description: Payments
      url: 'https://developer.xero.com/documentation/api/payments/'
  - name: Prepayments
    externalDocs:
      description: Prepayments
      url: 'https://developer.xero.com/documentation/api/prepayments/'
  - name: PurchaseOrders
    externalDocs:
      description: PurchaseOrders
      url: 'https://developer.xero.com/documentation/api/purchase-orders/'
  - name: Receipts
    externalDocs:
      description: Receipts
      url: 'https://developer.xero.com/documentation/api/receipts/'
  - name: RepeatingInvoices
    externalDocs:
      description: RepeatingInvoices
      url: 'https://developer.xero.com/documentation/api/repeating-invoices/'
  - name: Reports
    externalDocs:
      description: Reports
      url: 'https://developer.xero.com/documentation/api/reports/'
  - name: TaxRates
    externalDocs:
      description: TaxRates
      url: 'https://developer.xero.com/documentation/api/tax-rates/'
  - name: TrackingCategories
    externalDocs:
      description: TrackingCategories
      url: 'https://developer.xero.com/documentation/api/tracking-categories/'
  - name: Users
    externalDocs:
      description: Users
      url: 'https://developer.xero.com/documentation/api/users/'
paths:
  /Accounts:
    x-related-model: Account
    get:
      tags:
        - Accounts
      summary: Retrieve the full chart of accounts
      description: Retrieve the chart of accounts
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          $ref: '#/components/responses/AccountsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    put:
      tags:
        - Accounts
      summary: Create new accounts
      responses:
        '200':
          $ref: '#/components/responses/AccountsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Account'
    post:
      tags:
        - Accounts
      summary: Create or update accounts
      responses:
        '200':
          $ref: '#/components/responses/AccountsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Account'
  '/Accounts/{AccountID}':
    x-related-model: Account
    get:
      tags:
        - Accounts
      summary: Retrieve a single account
      responses:
        '200':
          $ref: '#/components/responses/AccountsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
      parameters:
        - required: true
          in: path
          name: AccountID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - Accounts
      summary: Update an account
      parameters:
        - required: true
          in: path
          name: AccountID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/AccountsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Account'
    delete:
      tags:
        - Accounts
      summary: Delete an account
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/components/responses/404ErrorResponse'
      parameters:
        - required: true
          in: path
          name: AccountID
          schema:
            type: string
            format: uuid
  '/Accounts/{AccountID}/Attachments':
    get:
      tags:
        - Accounts
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: AccountID
          in: path
          description: The Xero generated unique identifier for an account
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/Accounts/{AccountID}/Attachments/{FileName}':
    get:
      tags:
        - Accounts
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: AccountID
          in: path
          description: The Xero generated unique identifier for an account
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - Accounts
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: AccountID
          in: path
          description: The Xero generated unique identifier for an account
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /BankTransactions:
    x-related-model: BankTransaction
    get:
      tags:
        - BankTransactions
      summary: >-
        Retrieve any spend or receive money transactions (inc. prepayments and
        overpayments)
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/unitdp'
    put:
      tags:
        - BankTransactions
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/BankTransaction'
    post:
      tags:
        - BankTransactions
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/BankTransaction'
  '/BankTransactions/{BankTransactionID}':
    x-related-model: BankTransaction
    get:
      tags:
        - BankTransactions
      summary: Retrieve a spend or receive money (inc. prepayments and overpayments)
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BankTransactionID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
    post:
      tags:
        - BankTransactions
      summary: Update a spend or receive money
      parameters:
        - required: true
          in: path
          name: BankTransactionID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/BankTransaction'
  '/BankTransactions/{BankTransactionID}/Attachments':
    get:
      tags:
        - BankTransactions
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: BankTransactionID
          in: path
          description: The Xero generated unique identifier for an bank transaction
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/BankTransactions/{BankTransactionID}/Attachments/{FileName}':
    get:
      tags:
        - BankTransactions
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: BankTransactionID
          in: path
          description: The Xero generated unique identifier for an bank transaction
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - BankTransactions
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: BankTransactionID
          in: path
          description: The Xero generated unique identifier for an bank transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /BankTransfers:
    x-related-model: BankTransfer
    get:
      tags:
        - BankTransfers
      summary: Retrieve a colection of bank transfers
      responses:
        '200':
          $ref: '#/components/responses/BankTransfersResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
    put:
      tags:
        - BankTransfers
      summary: Create a bank transfer
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/BankTransfersResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankTransfer'
          application/xml:
            schema:
              $ref: '#/components/schemas/BankTransfer'
        required: true
  '/BankTransfers/{BankTransferID}':
    x-related-model: BankTransfer
    get:
      tags:
        - BankTransfers
      summary: Retrieve an individual bank transfer
      responses:
        '200':
          $ref: '#/components/responses/BankTransfersResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BankTransferID
          schema:
            type: string
            format: uuid
  '/BankTransfers/{BankTransferID}/Attachments/{FileName}':
    get:
      tags:
        - BankTransfers
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: BankTransferID
          in: path
          description: The Xero generated unique identifier for an BankTransfer
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - BankTransfers
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: BankTransferID
          in: path
          description: The Xero generated unique identifier for a BankTransfer
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /BrandingThemes:
    x-related-model: BrandingTheme
    get:
      tags:
        - BrandingThemes
      summary: Retrieve a collection of BrandingThemes
      responses:
        '200':
          $ref: '#/components/responses/BrandingThemesResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/BrandingThemes/{BrandingThemeID}':
    x-related-model: BrandingTheme
    get:
      tags:
        - BrandingThemes
      summary: Retrieve an individual BrandingTheme
      responses:
        '200':
          $ref: '#/components/responses/BrandingThemesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BrandingThemeID
          schema:
            type: string
            format: uuid
  /Contacts:
    x-related-model: Contact
    get:
      tags:
        - Contacts
      summary: Retrieve a collection of contacts
      responses:
        '200':
          $ref: '#/components/responses/ContactsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/includeArchived'
        - name: IDs
          in: query
          description: Filter by a comma-separated list of ContactIDs
          required: false
          schema:
            type: string
            default: ''
    put:
      tags:
        - Contacts
      summary: Create a contact
      responses:
        '200':
          $ref: '#/components/responses/ContactsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
    post:
      tags:
        - Contacts
      summary: Create or update a contact
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ContactsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
  '/Contacts/{ContactID}':
    x-related-model: Contact
    get:
      tags:
        - Contacts
      summary: Retrieve an individual contact
      responses:
        '200':
          $ref: '#/components/responses/ContactsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - Contacts
      summary: Update a contact
      parameters:
        - required: true
          in: path
          name: ContactID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/ContactsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
  '/Contacts/{ContactID}/Attachments':
    get:
      tags:
        - Contacts
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: ContactID
          in: path
          description: The Xero generated unique identifier for a Contact
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/Contacts/{ContactID}/Attachments/{FileName}':
    get:
      tags:
        - Contacts
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: ContactID
          in: path
          description: The Xero generated unique identifier for a Contact
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - Contacts
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: ContactID
          in: path
          description: The Xero generated unique identifier for a Contact
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /ContactGroups:
    x-related-model: ContactGroup
    get:
      tags:
        - ContactGroups
      summary: Retrieve a collection of contact groups
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
    put:
      tags:
        - ContactGroups
      summary: Create a new contact group
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ContactGroup'
    post:
      tags:
        - ContactGroups
      summary: Create or update a contact group
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ContactGroup'
  '/ContactGroups/{ContactGroupID}':
    x-related-model: ContactGroup
    get:
      tags:
        - ContactGroups
      summary: Retrieve the ContactID and Name of all the contacts in a contact group
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - ContactGroups
      summary: Update a contact group
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ContactGroup'
    delete:
      tags:
        - ContactGroups
      summary: Delete a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
  '/ContactGroups/{ContactGroupID}/Contacts':
    x-related-model: ContactGroup
    put:
      tags:
        - ContactGroups
      summary: Add contacts to a contact group
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/ContactGroupsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
    delete:
      tags:
        - ContactGroups
      summary: Remove all contacts from a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
  '/ContactGroups/{ContactGroupID}/Contacts/{ContactID}':
    x-related-model: ContactGroup
    delete:
      tags:
        - ContactGroups
      summary: Remove a contact from a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          schema:
            type: string
            format: uuid
        - required: true
          in: path
          name: ContactID
          schema:
            type: string
            format: uuid
  /CreditNotes:
    x-related-model: CreditNote
    get:
      tags:
        - CreditNotes
      summary: Retrieve a collection of credit notes
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/page'
    put:
      tags:
        - CreditNotes
      summary: Create a credit note
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/CreditNote'
    post:
      tags:
        - CreditNotes
      summary: Create or update a credit note
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/CreditNote'
  '/CreditNotes/{CreditNoteID}':
    x-related-model: CreditNote
    get:
      tags:
        - CreditNotes
      summary: Retrieve an individual credit note
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: CreditNoteID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
    post:
      tags:
        - CreditNotes
      summary: Update a credit note
      parameters:
        - required: true
          in: path
          name: CreditNoteID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/CreditNote'
  '/CreditNotes/{CreditNoteID}/Allocations':
    x-related-model: CreditNote
    put:
      tags:
        - CreditNotes
      summary: Allocate a credit note
      parameters:
        - required: true
          in: path
          name: CreditNoteID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/CreditNotesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Allocation'
  '/CreditNotes/{CreditNoteID}/Attachments':
    get:
      tags:
        - CreditNotes
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: CreditNoteID
          in: path
          description: The Xero generated unique identifier for a CreditNote
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/CreditNotes/{CreditNoteID}/Attachments/{FileName}':
    get:
      tags:
        - CreditNotes
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: CreditNoteID
          in: path
          description: The Xero generated unique identifier for a CreditNote
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - CreditNotes
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: CreditNoteID
          in: path
          description: The Xero generated unique identifier for a CreditNote
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /Currencies:
    x-related-model: Currency
    get:
      tags:
        - Currencies
      summary: Retrieve the currencies the organisation is subscribed to
      responses:
        '200':
          $ref: '#/components/responses/CurrenciesResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
  /Employees:
    x-related-model: Employee
    get:
      tags:
        - Employees
      summary: Retrieve a collection of employees
      responses:
        '200':
          $ref: '#/components/responses/EmployeesResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
    put:
      tags:
        - Employees
      summary: Create employees
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/EmployeesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Employee'
    post:
      tags:
        - Employees
      summary: Create or update employees
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/EmployeesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Employee'
  '/Employees/{EmployeeID}':
    x-related-model: Employee
    get:
      tags:
        - Employees
      summary: Retrieve an individual employee
      responses:
        '200':
          $ref: '#/components/responses/EmployeesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: EmployeeID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - Employees
      summary: Update an employee
      parameters:
        - required: true
          in: path
          name: EmployeeID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/EmployeesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Employee'
  /ExpenseClaims:
    x-related-model: ExpenseClaim
    get:
      tags:
        - ExpenseClaims
      summary: Retrieve a collection of expense claims
      responses:
        '200':
          $ref: '#/components/responses/ExpenseClaimsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
    put:
      tags:
        - ExpenseClaims
      summary: Create an expense claim
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ExpenseClaim'
    post:
      tags:
        - ExpenseClaims
      summary: Create or update an expense claim
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ExpenseClaim'
  '/ExpenseClaims/{ExpenseClaimID}':
    x-related-model: ExpenseClaim
    get:
      tags:
        - ExpenseClaims
      summary: Retrieve an individual expense claim
      responses:
        '200':
          $ref: '#/components/responses/ExpenseClaimsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ExpenseClaimID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - ExpenseClaims
      summary: Update an expense claim
      parameters:
        - required: true
          in: path
          name: ExpenseClaimID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/ExpenseClaim'
  /Invoices:
    x-related-model: Invoice
    get:
      tags:
        - Invoices
      summary: Retrieve a collection of invoices (sales invoices and bills)
      responses:
        '200':
          $ref: '#/components/responses/InvoicesResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/unitdp'
        - name: IDs
          in: query
          description: Filter by a comma-separated list of InvoiceIDs
          required: false
          schema:
            type: string
            default: ''
        - name: ContactIDs
          in: query
          description: Filter by a comma-separated list of ContactIDs
          required: false
          schema:
            type: string
            default: ''
        - name: Statuses
          in: query
          description: Filter by a comma-separated list of Statuses
          required: false
          schema:
            type: string
            default: ''
        - name: InvoiceNumbers
          in: query
          description: Filter by a comma-separated list of InvoiceNumbers
          required: false
          schema:
            type: string
            default: ''
    put:
      tags:
        - Invoices
      summary: Create an Invoice (sales invoices or bills)
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/InvoicesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Invoice'
    post:
      tags:
        - Invoices
      summary: Create or update an Invoice (sales invoices or bills)
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/InvoicesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Invoice'
  '/Invoices/{InvoiceID}':
    x-related-model: Invoice
    get:
      tags:
        - Invoices
      summary: Retrieve an Invoice (sales invoice or bill)
      responses:
        '200':
          $ref: '#/components/responses/InvoicesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: InvoiceID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
    post:
      tags:
        - Invoices
      summary: Update an Invoice (sales invoice or bill)
      parameters:
        - required: true
          in: path
          name: InvoiceID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          $ref: '#/components/responses/InvoicesResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Invoice'
  '/Invoices/{InvoiceID}/OnlineInvoice':
    x-related-model: OnlineInvoice
    get:
      tags:
        - Invoices
      summary: Retrieve the URL to view the online invoice
      responses:
        '200':
          $ref: '#/components/responses/OnlineInvoicesResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: InvoiceID
          schema:
            type: string
            format: uuid
  '/Invoices/{InvoiceID}/Attachments':
    get:
      tags:
        - Invoices
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: InvoiceID
          in: path
          description: The Xero generated unique identifier for an Invoice
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/Invoices/{InvoiceID}/Attachments/{FileName}':
    get:
      tags:
        - Invoices
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: InvoiceID
          in: path
          description: The Xero generated unique identifier for an Invoice
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - Invoices
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: InvoiceID
          in: path
          description: The Xero generated unique identifier for an Invoice
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /Items:
    x-related-model: Item
    get:
      tags:
        - Items
      summary: Retrieve a collection of items
      responses:
        '200':
          $ref: '#/components/responses/ItemsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/unitdp'
    put:
      tags:
        - Items
      summary: Create an item
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ItemsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Item'
    post:
      tags:
        - Items
      summary: Create or update an item
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ItemsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Item'
  '/Items/{ItemID}':
    x-related-model: Item
    get:
      tags:
        - Items
      summary: Retrieve an item
      responses:
        '200':
          $ref: '#/components/responses/ItemsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ItemID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
    post:
      tags:
        - Items
      summary: Update an item
      parameters:
        - required: true
          in: path
          name: ItemID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          $ref: '#/components/responses/ItemsResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Item'
    delete:
      tags:
        - Items
      summary: Delete an item
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ItemID
          schema:
            type: string
            format: uuid
  /Journals:
    x-related-model: Journal
    get:
      tags:
        - Journals
      summary: Retrieve a collection of journals.
      responses:
        '200':
          $ref: '#/components/responses/JournalsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/paymentsOnly'
        - $ref: '#/components/parameters/offset'
  '/Journals/{JournalID}':
    x-related-model: Journal
    get:
      tags:
        - Journals
      summary: Retrieve an individual journal.
      responses:
        '200':
          $ref: '#/components/responses/JournalsResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: JournalID
          schema:
            type: string
            format: uuid
  /LinkedTransactions:
    x-related-model: LinkedTransaction
    get:
      tags:
        - LinkedTransactions
      summary: Retrieve a collection of linked transactions (billable expenses)
      responses:
        '200':
          $ref: '#/components/responses/LinkedTransactionsResponse'
      parameters:
        - $ref: '#/components/parameters/page'
        - in: query
          name: SourceTransactionID
          description: >-
            Filter by the SourceTransactionID. Get all the linked transactions
            created from a particular ACCPAY invoice
          schema:
            type: string
            format: uuid
        - in: query
          name: ContactID
          description: >-
            Filter by the ContactID. Get all the linked transactions that have
            been assigned to a particular customer.
          schema:
            type: string
            format: uuid
        - in: query
          name: Status
          description: >-
            Filter by the combination of ContactID and Status. Get all the
            linked transactions that have been assigned to a particular customer
            and have a particular status e.g. GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          schema:
            type: string
            format: uuid
        - in: query
          name: TargetTransactionID
          description: >-
            Filter by the TargetTransactionID. Get all the linked transactions
            allocated to a particular ACCREC invoice.
          schema:
            type: string
            format: uuid
    put:
      tags:
        - LinkedTransactions
      summary: Create a linked transaction (billable expense)
      responses:
        '200':
          $ref: '#/components/responses/LinkedTransactionsResponse'
      requestBody:
        $ref: '#/components/requestBodies/LinkedTransaction'
    post:
      tags:
        - LinkedTransactions
      summary: Create or update a linked transaction (billable expense)
      responses:
        '200':
          $ref: '#/components/responses/LinkedTransactionsResponse'
      requestBody:
        $ref: '#/components/requestBodies/LinkedTransaction'
  '/LinkedTransactions/{LinkedTransactionID}':
    x-related-model: LinkedTransaction
    get:
      tags:
        - LinkedTransactions
      summary: Retrieve a linked transaction (billable expense)
      responses:
        '200':
          $ref: '#/components/responses/LinkedTransactionsResponse'
      parameters:
        - required: true
          in: path
          name: LinkedTransactionID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - LinkedTransactions
      summary: Update a linked transaction (billable expense)
      parameters:
        - required: true
          in: path
          name: LinkedTransactionID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/LinkedTransactionsResponse'
      requestBody:
        $ref: '#/components/requestBodies/LinkedTransaction'
    delete:
      tags:
        - LinkedTransactions
      summary: Delete a linked transaction (billable expense)
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: LinkedTransactionID
          schema:
            type: string
            format: uuid
  /ManualJournals:
    x-related-model: ManualJournal
    get:
      tags:
        - ManualJournals
      summary: Retrieve a collection of manual journals
      responses:
        '200':
          $ref: '#/components/responses/ManualJournalsResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page'
    put:
      tags:
        - ManualJournals
      summary: Create a manual journal
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ManualJournalsResponse'
      requestBody:
        $ref: '#/components/requestBodies/ManualJournal'
    post:
      tags:
        - ManualJournals
      summary: Create or update a manual journal
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ManualJournalsResponse'
      requestBody:
        $ref: '#/components/requestBodies/ManualJournal'
  '/ManualJournals/{ManualJournalID}':
    x-related-model: ManualJournal
    get:
      tags:
        - ManualJournals
      summary: Retrieve an individual manual journal
      responses:
        '200':
          $ref: '#/components/responses/ManualJournalsResponse'
      parameters:
        - required: true
          in: path
          name: ManualJournalID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - ManualJournals
      summary: Update a manual journal
      parameters:
        - required: true
          in: path
          name: ManualJournalID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/ManualJournalsResponse'
      requestBody:
        $ref: '#/components/requestBodies/ManualJournal'
  '/ManualJournals/{ManualJournalID}/Attachments':
    get:
      tags:
        - ManualJournals
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: ManualJournalID
          in: path
          description: The Xero generated unique identifier for a Manual Journal
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/ManualJournals/{ManualJournalID}/Attachments/{FileName}':
    get:
      tags:
        - ManualJournals
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: ManualJournalID
          in: path
          description: The Xero generated unique identifier for a Manual Journal
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - ManualJournals
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: ManualJournalID
          in: path
          description: The Xero generated unique identifier for a Manual Journal
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /Organisation:
    x-related-model: Organisation
    get:
      tags:
        - Organisations
      summary: Retrieve Organisation details
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsResponse'
  '/Organisation/{ShortCode}':
    x-related-model: Organisation
    get:
      tags:
        - Organisations
      summary: Retrieve Organisation details
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsResponse'
      parameters:
        - required: true
          in: path
          name: ShortCode
          schema:
            type: string
            format: uuid
  /Overpayments:
    x-related-model: Overpayment
    get:
      tags:
        - Overpayments
      summary: Retrieve a collection of overpayments
      responses:
        '200':
          $ref: '#/components/responses/OverpaymentsResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/unitdp'
  '/Overpayments/{OverpaymentID}':
    x-related-model: Overpayment
    get:
      tags:
        - Overpayments
      summary: Retrieve an overpayment
      responses:
        '200':
          $ref: '#/components/responses/OverpaymentsResponse'
      parameters:
        - required: true
          in: path
          name: OverpaymentID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
  '/Overpayments/{OverpaymentID}/Allocations':
    x-related-model: Overpayment
    put:
      tags:
        - Overpayments
      summary: Allocate an overpayment
      parameters:
        - required: true
          in: path
          name: OverpaymentID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/OverpaymentsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Allocation'
  /Payments:
    x-related-model: Payment
    get:
      tags:
        - Payments
      summary: >-
        Retrieve a collection of payments for invoices, credit notes,
        prepayments and overpayments
      responses:
        '200':
          $ref: '#/components/responses/PaymentsResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
    put:
      tags:
        - Payments
      summary: Create a payment
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/PaymentsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
    post:
      tags:
        - Payments
      summary: Create a payment
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/PaymentsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
  '/Payments/{PaymentID}':
    x-related-model: Payment
    get:
      tags:
        - Payments
      summary: Retrieve a payment
      responses:
        '200':
          $ref: '#/components/responses/PaymentsResponse'
      parameters:
        - required: true
          in: path
          name: PaymentID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - Payments
      summary: Update a payment's status to deleted
      parameters:
        - required: true
          in: path
          name: PaymentID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/PaymentsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
  /Prepayments:
    x-related-model: Prepayment
    get:
      tags:
        - Prepayments
      summary: Retrieve a collection of prepayments
      responses:
        '200':
          $ref: '#/components/responses/PrepaymentsResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/unitdp'
  '/Prepayments/{PrepaymentID}':
    x-related-model: Prepayment
    get:
      tags:
        - Prepayments
      summary: Retrieve an individual prepayment
      responses:
        '200':
          $ref: '#/components/responses/PrepaymentsResponse'
      parameters:
        - required: true
          in: path
          name: PrepaymentID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
  '/Prepayments/{PrepaymentID}/Allocations':
    x-related-model: Prepayment
    put:
      tags:
        - Prepayments
      summary: Allocate a prepayment
      parameters:
        - required: true
          in: path
          name: PrepaymentID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/PrepaymentsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Allocation'
  /PurchaseOrders:
    x-related-model: PurchaseOrder
    get:
      tags:
        - PurchaseOrders
      summary: Retrieve a collection of purchase orders
      responses:
        '200':
          $ref: '#/components/responses/PurchaseOrdersResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page'
        - required: false
          in: query
          name: DateFrom
          schema:
            type: string
            format: date
        - required: false
          in: query
          name: DateTo
          schema:
            type: string
            format: date
        - required: false
          in: query
          name: Status
          schema:
            type: string
    put:
      tags:
        - PurchaseOrders
      summary: Create purchase orders
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/PurchaseOrdersResponse'
      requestBody:
        $ref: '#/components/requestBodies/PurchaseOrder'
    post:
      tags:
        - PurchaseOrders
      summary: Create and update purchase orders
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/PurchaseOrdersResponse'
      requestBody:
        $ref: '#/components/requestBodies/PurchaseOrder'
  '/PurchaseOrders/{PurchaseOrderID}':
    x-related-model: PurchaseOrder
    get:
      tags:
        - PurchaseOrders
      summary: Retrieve a single purchase order
      responses:
        '200':
          $ref: '#/components/responses/PurchaseOrdersResponse'
      parameters:
        - required: true
          in: path
          name: PurchaseOrderID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - PurchaseOrders
      summary: Update a purchase order
      parameters:
        - required: true
          in: path
          name: PurchaseOrderID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/PurchaseOrdersResponse'
      requestBody:
        $ref: '#/components/requestBodies/PurchaseOrder'
  '/PurchaseOrders/{PurchaseOrderID}/Attachments':
    get:
      tags:
        - PurchaseOrders
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: PurchaseOrderID
          in: path
          description: The Xero generated unique identifier for a purchase order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}':
    get:
      tags:
        - PurchaseOrders
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: PurchaseOrderID
          in: path
          description: The Xero generated unique identifier for a purchase order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - PurchaseOrders
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: PurchaseOrderID
          in: path
          description: The Xero generated unique identifier for a purchase order
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /Receipts:
    x-related-model: Receipt
    get:
      tags:
        - Receipts
      summary: Retrieve a collection of draft receipts
      responses:
        '200':
          $ref: '#/components/responses/ReceiptsResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/unitdp'
    put:
      tags:
        - Receipts
      summary: Create a receipt
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ReceiptsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Receipt'
    post:
      tags:
        - Receipts
      summary: Create or update a receipt
      parameters:
        - $ref: '#/components/parameters/unitdp'
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/ReceiptsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Receipt'
  '/Receipts/{ReceiptID}':
    x-related-model: Receipt
    get:
      tags:
        - Receipts
      summary: Retrieve an individual receipt
      responses:
        '200':
          $ref: '#/components/responses/ReceiptsResponse'
      parameters:
        - required: true
          in: path
          name: ReceiptID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
    post:
      tags:
        - Receipts
      summary: Update a receipt
      parameters:
        - required: true
          in: path
          name: ReceiptID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          $ref: '#/components/responses/ReceiptsResponse'
      requestBody:
        $ref: '#/components/requestBodies/Receipt'
  '/Receipts/{ReceiptID}/Attachments':
    get:
      tags:
        - Receipts
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: ReceiptID
          in: path
          description: The Xero generated unique identifier for a Receipt
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/Receipts/{ReceiptID}/Attachments/{FileName}':
    get:
      tags:
        - Receipts
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: ReceiptID
          in: path
          description: The Xero generated unique identifier for a Receipt
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/components/responses/500ErrorResponse'
    post:
      tags:
        - Receipts
      summary: Upload an Attachment
      description: Upload an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          schema:
            type: string
        - name: ReceiptID
          in: path
          description: The Xero generated unique identifier for a Receipt
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/components/responses/500ErrorResponse'
      requestBody:
        $ref: '#/components/requestBodies/Content'
  /RepeatingInvoices:
    x-related-model: RepeatingInvoice
    get:
      tags:
        - RepeatingInvoices
      summary: Retrieve a collection of repeating invoice templates
      responses:
        '200':
          $ref: '#/components/responses/RepeatingInvoicesResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/where'
  '/RepeatingInvoices/{RepeatingInvoiceID}':
    x-related-model: RepeatingInvoice
    get:
      tags:
        - RepeatingInvoices
      summary: Retrieve an individual repeating invoice template
      responses:
        '200':
          $ref: '#/components/responses/RepeatingInvoicesResponse'
      parameters:
        - required: true
          in: path
          name: RepeatingInvoiceID
          schema:
            type: string
            format: uuid
  '/RepeatingInvoices/{RepeatingInvoiceID}/Attachments':
    get:
      tags:
        - RepeatingInvoices
      summary: Retrieve Attachments
      description: Retrieve Attachments
      parameters:
        - name: RepeatingInvoiceID
          in: path
          description: The Xero generated unique identifier for a RepeatingInvoice
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentsResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  '/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}':
    get:
      tags:
        - RepeatingInvoices
      summary: Download an Attachment
      description: Download an Attachment
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          schema:
            type: string
        - name: RepeatingInvoiceID
          in: path
          description: The Xero generated unique identifier for a RepeatingInvoice
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/components/responses/500ErrorResponse'
  /Reports:
    x-related-model: Report
    get:
      tags:
        - Reports
      summary: Retrieve a list of published GST reports (NZ) or BAS reports (AU)
      responses:
        '200':
          $ref: '#/components/responses/ReportSummaryResponse'
  '/Reports/{ReportID}':
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve an individual BAS Report (AU) or GST Report (NZ)
      responses:
        '200':
          $ref: '#/components/responses/TaxReportResponse'
      parameters:
        - required: true
          in: path
          name: ReportID
          schema:
            type: string
            format: uuid
  /Reports/AgedPayablesByContact:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve an Aged Payables report for a contact
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: contactID
          description: ContactID for the contact you're running the report for
          schema:
            type: string
            format: uuid
        - required: false
          in: query
          name: date
          description: >-
            Shows payments up to this date e.g. 2014-04-30. Defaults to end of
            the current month
          schema:
            type: string
        - required: false
          in: query
          name: fromDate
          description: Show all payable invoices from this date for contact
          schema:
            type: string
        - required: false
          in: query
          name: toDate
          description: Show all payable invoices to this date for the contact
          schema:
            type: string
  /Reports/AgedReceivablesByContact:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve an Aged Receivables report for a contact
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: contactID
          description: ContactID for the contact you're running the report for
          schema:
            type: string
            format: uuid
        - required: false
          in: query
          name: date
          description: >-
            Shows payments up to this date e.g. 2014-04-30. Defaults to end of
            the current month
          schema:
            type: string
        - required: false
          in: query
          name: fromDate
          description: Show all receivable invoices from this date for contact
          schema:
            type: string
        - required: false
          in: query
          name: toDate
          description: Show all receivable invoices to this date for the contact
          schema:
            type: string
  /Reports/BalanceSheet:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a Balance Sheet Report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          description: YYYY-MM-DD
          schema:
            type: string
            format: date
        - required: false
          in: query
          name: trackingOptionID1
          description: Run the balance sheet for a specific tracking option
          schema:
            type: string
            format: uuid
        - required: false
          in: query
          name: trackingOptionID2
          description: Run the balance sheet for a combination of two tracking options
          schema:
            type: string
            format: uuid
        - required: false
          in: query
          name: standardLayout
          description: If set to true no custom report layouts will be applied to response
          schema:
            type: boolean
        - required: false
          in: query
          name: paymentsOnly
          description: Set this to true to get cash transactions only
          schema:
            type: boolean
  /Reports/BankStatement:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a bank statement report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: bankAccountID
          description: bankAccountID e.g. 5040915e-8ce7-4177-8d08-fde416232f18
          schema:
            type: string
            format: uuid
        - required: false
          in: query
          name: fromDate
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: toDate
          description: YYYY-MM-DD
          schema:
            type: string
  /Reports/BankSummary:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a bank summary report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: fromDate
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: toDate
          description: YYYY-MM-DD
          schema:
            type: string
  /Reports/BudgetSummary:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a budget summary report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: periods
          description: The number of periods to compare (integer between 1 and 12)
          schema:
            type: integer
        - required: false
          in: query
          name: timeframe
          description: 'The period size to compare to (1=month, 3=quarter, 12=year)'
          schema:
            type: integer
  /Reports/ExecutiveSummary:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve an executive summary report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          description: YYYY-MM-DD
          schema:
            type: string
  /Reports/ProfitAndLoss:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a profit and loss report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: fromDate
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: toDate
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: trackingCategoryID
          description: >-
            If you specify the trackingCategoryID parameter then the Profit and
            Loss Report will show figures for each of the options in the
            category as separate columns. See the Profit and Loss Report in Xero
            to learn more about this behavior when filtering by a tracking
            category.
          schema:
            type: string
        - required: false
          in: query
          name: trackingOptionID
          description: >-
            If you specify this parameter in addition to the trackingCategoryID
            then just one option will be returned (i.e. 1 column only)
          schema:
            type: string
        - required: false
          in: query
          name: trackingCategoryID2
          description: >-
            If you specify a second trackingCategoryID parameter then the Profit
            and Loss Report will show figures for each combination of options
            from the two categories as separate columns. See the Profit and Loss
            Report in Xero to learn more about this behaviour when filtering by
            two tracking categories.
          schema:
            type: string
        - required: false
          in: query
          name: trackingOptionID2
          description: >-
            If you specify this parameter in addition to a second
            trackingCategoryID then just one option will be returned combined
            with the option/s from the first tracking category
          schema:
            type: string
        - required: false
          in: query
          name: standardLayout
          description: >-
            If you set this parameter to "true" then no custom report layouts
            will be applied to response
          schema:
            type: boolean
        - required: false
          in: query
          name: paymentsOnly
          description: Set this to true to get cash transactions only
          schema:
            type: string
  /Reports/TrialBalance:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a Trial Balance Report
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: Date
          description: YYYY-MM-DD
          schema:
            type: string
        - required: false
          in: query
          name: paymentsOnly
          description: Set this to true to get cash transactions only
          schema:
            type: string
  /Reports/TenNinetyNine:
    x-related-model: Reports
    get:
      tags:
        - Reports
      summary: Retrieve a 1099 Report (US only)
      responses:
        '200':
          $ref: '#/components/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: reportYear
          description: Year of the report e.g. 2013
          schema:
            type: string
  /TaxRates:
    x-related-model: TaxRate
    get:
      tags:
        - TaxRates
      summary: Retrieve a collection of tax rates
      responses:
        '200':
          $ref: '#/components/responses/TaxRatesResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/where'
    put:
      tags:
        - TaxRates
      summary: Create tax rates
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/TaxRatesResponse'
      requestBody:
        $ref: '#/components/requestBodies/TaxRate'
    post:
      tags:
        - TaxRates
      summary: Create or update tax rates
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/TaxRatesResponse'
      requestBody:
        $ref: '#/components/requestBodies/TaxRate'
  /TrackingCategories:
    x-related-model: TrackingCategory
    get:
      tags:
        - TrackingCategories
      summary: Retrieve a collection of tracking categories and options
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/where'
        - $ref: '#/components/parameters/includeArchived'
    put:
      tags:
        - TrackingCategories
      summary: Create a tracking category
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      requestBody:
        $ref: '#/components/requestBodies/TrackingCategory'
    post:
      tags:
        - TrackingCategories
      summary: Create a tracking category
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      requestBody:
        $ref: '#/components/requestBodies/TrackingCategory'
  '/TrackingCategories/{TrackingCategoryID}':
    x-related-model: TrackingCategory
    get:
      tags:
        - TrackingCategories
      summary: Retrieve a tracking category and it's options
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          schema:
            type: string
            format: uuid
    post:
      tags:
        - TrackingCategories
      summary: Create or update a tracking category
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      requestBody:
        $ref: '#/components/requestBodies/TrackingCategory'
    delete:
      tags:
        - TrackingCategories
      summary: Delete a Tracking Category
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          schema:
            type: string
            format: uuid
  '/TrackingCategories/{TrackingCategoryID}/Options':
    x-related-model: TrackingCategory
    put:
      tags:
        - TrackingCategories
      summary: Add options to a tracking category
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          $ref: '#/components/responses/TrackingCategoriesResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingOption'
          application/xml:
            schema:
              $ref: '#/components/schemas/TrackingOption'
        required: true
  '/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}':
    x-related-model: TrackingCategory
    delete:
      tags:
        - TrackingCategories
      summary: Delete an option from a tracking category
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          schema:
            type: string
            format: uuid
        - required: true
          in: path
          name: TrackingOptionID
          schema:
            type: string
            format: uuid
  /Users:
    x-related-model: User
    get:
      tags:
        - Users
      summary: Retrieve a collection of Users
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      parameters:
        - $ref: '#/components/parameters/If-Modified-Since'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/where'
  '/Users/{UserID}':
    x-related-model: User
    get:
      tags:
        - Users
      summary: Retrieve an individual User
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      parameters:
        - required: true
          in: path
          name: UserID
          schema:
            type: string
            format: uuid
servers:
  - url: 'https://api.xero.com/api.xro/2.0'
components:
  parameters:
    If-Modified-Since:
      name: If-Modified-Since
      in: header
      description: >-
        A UTC timestamp (yyyy-mm-ddThh:mm:ss) . Only invoices created or
        modified since this timestamp will be returned e.g. 2009-11-12T00:00:00
      required: false
      schema:
        type: string
        format: date-time
        default: '2009-11-12T00:00:00Z'
    page:
      name: page
      in: query
      description: >-
        Page number e.g. page=1. Page size is 100. When using the page parameter
        full resource details will be returned (including line items).
      required: false
      schema:
        type: integer
        default: 1
    offset:
      name: offset
      in: query
      description: >-
        Offset by a specified journal number. e.g. journals with a JournalNumber
        greater than the offset will be returned.
      required: false
      schema:
        type: integer
        default: 0
    paymentsOnly:
      name: paymentsOnly
      in: query
      description: Return results on a the cash basis
      required: false
      schema:
        type: boolean
        default: false
    includeArchived:
      name: includeArchived
      in: query
      description: 'Include archived records in the response '
      required: false
      schema:
        type: boolean
        default: true
    where:
      name: where
      in: query
      description: Filter by an any element
      required: false
      schema:
        type: string
        default: ''
    order:
      name: order
      in: query
      description: Order by any element returned
      required: false
      schema:
        type: string
        default: ''
    unitdp:
      name: unitdp
      in: query
      description: >-
        Determines the decimal places accepted/returned on the UnitAmount.
        UnitAmount is 2 decimal places by default but can be increased to 4
        decimal places by supplying the unitdp=4 parameter.
      required: false
      schema:
        type: integer
        default: 4
    summarizeErrors:
      name: summarizeErrors
      in: query
      description: >-
        If you plan to submit more than one entity per API call, we recommend
        that you append the summarizeErrors=false querystring to your API call.
        This ensures that every entity is returned back to you, each having
        their own status attribute.
      required: false
      schema:
        type: boolean
        default: false
  responses:
    500ErrorResponse:
      description: An unexpected error occured.
      content:
        application/json:
          schema:
            type: object
            xml:
              name: APIException
            properties:
              ErrorNumber:
                type: string
                description: The HTTP error code
                example: 500
              Type:
                type: string
                description: The type of exception
                example: UnknownErrorException
              Message:
                type: string
                description: The exception description
                example: >-
                  An error occurred in Xero. Check the API Status page for
                  current service status. Contact the API support team at
                  api@xero.com for more assistance.
        application/xml:
          schema:
            type: object
            xml:
              name: APIException
            properties:
              ErrorNumber:
                type: string
                description: The HTTP error code
                example: 500
              Type:
                type: string
                description: The type of exception
                example: UnknownErrorException
              Message:
                type: string
                description: The exception description
                example: >-
                  An error occurred in Xero. Check the API Status page for
                  current service status. Contact the API support team at
                  api@xero.com for more assistance.
    400ErrorResponse:
      description: An validation exception occured.
      content:
        application/json:
          schema:
            type: object
            xml:
              name: APIException
            properties:
              ErrorNumber:
                type: string
                description: Please ignore (doesn't really mean anything)
                example: 10
              Type:
                type: string
                description: The type of exception
                example: ValidationException
              Message:
                type: string
                description: The exception description
                example: A validation exception occurred
              Elements:
                type: object
                properties:
                  DataContractBase:
                    type: object
                    properties:
                      ValidationErrors:
                        type: array
                        items:
                          properties:
                            ValidationError:
                              type: object
                              properties:
                                Message:
                                  type: string
                                  description: The validation error message
                                  example: You did something silly
        application/xml:
          schema:
            type: object
            xml:
              name: APIException
            properties:
              ErrorNumber:
                type: string
                description: Please ignore (doesn't really mean anything)
                example: 10
              Type:
                type: string
                description: The type of exception
                example: ValidationException
              Message:
                type: string
                description: The exception description
                example: A validation exception occurred
              Elements:
                type: object
                properties:
                  DataContractBase:
                    type: object
                    properties:
                      ValidationErrors:
                        type: array
                        items:
                          properties:
                            ValidationError:
                              type: object
                              properties:
                                Message:
                                  type: string
                                  description: The validation error message
                                  example: You did something silly
    404ErrorResponse:
      description: The resource you're looking for cannot be found
    AttachmentsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Attachments:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Attachments:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
    AccountsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Accounts:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Accounts:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    BankTransactionsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BankTransactions:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransaction'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BankTransactions:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransaction'
    BankTransfersResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BankTransfers:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransfer'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BankTransfers:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransfer'
    BrandingThemesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BrandingThemes:
                type: array
                items:
                  $ref: '#/components/schemas/BrandingTheme'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              BrandingThemes:
                type: array
                items:
                  $ref: '#/components/schemas/BrandingTheme'
    ContactsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Contacts:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Contacts:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    ContactGroupsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ContactGroups:
                type: array
                items:
                  $ref: '#/components/schemas/ContactGroup'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ContactGroups:
                type: array
                items:
                  $ref: '#/components/schemas/ContactGroup'
    CreditNotesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              CreditNotes:
                type: array
                items:
                  $ref: '#/components/schemas/CreditNote'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              CreditNotes:
                type: array
                items:
                  $ref: '#/components/schemas/CreditNote'
    CurrenciesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Currencies:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Currencies:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
    EmployeesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Employees:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Employees:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    ExpenseClaimsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ExpenseClaims:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseClaim'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ExpenseClaims:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseClaim'
    InvoicesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Invoices:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Invoices:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
    ItemsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Items:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Items:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    JournalsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Journals:
                type: array
                items:
                  $ref: '#/components/schemas/Journal'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Journals:
                type: array
                items:
                  $ref: '#/components/schemas/Journal'
    LinkedTransactionsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              LinkedTransactions:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedTransaction'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              LinkedTransactions:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedTransaction'
    ManualJournalsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ManualJournals:
                type: array
                items:
                  $ref: '#/components/schemas/ManualJournal'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              ManualJournals:
                type: array
                items:
                  $ref: '#/components/schemas/ManualJournal'
    OnlineInvoicesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              OnlineInvoices:
                type: array
                items:
                  $ref: '#/components/schemas/OnlineInvoice'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              OnlineInvoices:
                type: array
                items:
                  $ref: '#/components/schemas/OnlineInvoice'
    OrganisationsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Organisations:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Organisations:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
    OverpaymentsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Overpayments:
                type: array
                items:
                  $ref: '#/components/schemas/Overpayment'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Overpayments:
                type: array
                items:
                  $ref: '#/components/schemas/Overpayment'
    PaymentsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Payments:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Payments:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    PrepaymentsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Prepayments:
                type: array
                items:
                  $ref: '#/components/schemas/Prepayment'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Prepayments:
                type: array
                items:
                  $ref: '#/components/schemas/Prepayment'
    PurchaseOrdersResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              PurchaseOrders:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              PurchaseOrders:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
    ReceiptsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Receipts:
                type: array
                items:
                  $ref: '#/components/schemas/Receipt'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Receipts:
                type: array
                items:
                  $ref: '#/components/schemas/Receipt'
    RepeatingInvoicesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              RepeatingInvoices:
                type: array
                items:
                  $ref: '#/components/schemas/RepeatingInvoice'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              RepeatingInvoices:
                type: array
                items:
                  $ref: '#/components/schemas/RepeatingInvoice'
    ReportsResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
    ReportSummaryResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/ReportSummary'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/ReportSummary'
    TaxReportResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/TaxReport'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Reports:
                type: array
                items:
                  $ref: '#/components/schemas/TaxReport'
    TaxRatesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              TaxRates:
                type: array
                items:
                  $ref: '#/components/schemas/TaxRate'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              TaxRates:
                type: array
                items:
                  $ref: '#/components/schemas/TaxRate'
    TrackingCategoriesResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              TrackingCategories:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingCategory'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              TrackingCategories:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingCategory'
    UsersResponse:
      description: A successful response
      content:
        application/json:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Users:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        application/xml:
          schema:
            type: object
            xml:
              name: Response
            properties:
              ID:
                type: string
                format: uuid
                description: Unique identifier for each response
                readOnly: true
                example: 8904103f-f25e-4af2-887a-f5d3acace293
              Status:
                type: string
                description: OK for a successful response
                readOnly: true
                example: OK
              ProviderName:
                type: string
                description: Name of the application that made the request
                readOnly: true
                example: My Awesome App
              DateTimeUTC:
                type: string
                format: date-time
                description: DateTime of the request
                readOnly: true
              Users:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  requestBodies:
    Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Payment'
      required: true
    LinkedTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkedTransaction'
        application/xml:
          schema:
            $ref: '#/components/schemas/LinkedTransaction'
      required: true
    BankTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankTransaction'
        application/xml:
          schema:
            $ref: '#/components/schemas/BankTransaction'
      required: true
    Item:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
        application/xml:
          schema:
            $ref: '#/components/schemas/Item'
      required: true
    Employee:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
        application/xml:
          schema:
            $ref: '#/components/schemas/Employee'
      required: true
    TaxRate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaxRate'
        application/xml:
          schema:
            $ref: '#/components/schemas/TaxRate'
      required: true
    Allocation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Allocation'
        application/xml:
          schema:
            $ref: '#/components/schemas/Allocation'
      required: true
    Content:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Content'
        application/xml:
          schema:
            $ref: '#/components/schemas/Content'
      description: The raw content of the file to be uploaded
      required: true
    ManualJournal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManualJournal'
        application/xml:
          schema:
            $ref: '#/components/schemas/ManualJournal'
      required: true
    Account:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
        application/xml:
          schema:
            $ref: '#/components/schemas/Account'
      required: true
    Invoice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
        application/xml:
          schema:
            $ref: '#/components/schemas/Invoice'
      required: true
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
        application/xml:
          schema:
            $ref: '#/components/schemas/Contact'
      required: true
    ContactGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactGroup'
        application/xml:
          schema:
            $ref: '#/components/schemas/ContactGroup'
      required: true
    CreditNote:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditNote'
        application/xml:
          schema:
            $ref: '#/components/schemas/CreditNote'
      required: true
    ExpenseClaim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpenseClaim'
        application/xml:
          schema:
            $ref: '#/components/schemas/ExpenseClaim'
      required: true
    PurchaseOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PurchaseOrder'
        application/xml:
          schema:
            $ref: '#/components/schemas/PurchaseOrder'
      required: true
    Receipt:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Receipt'
        application/xml:
          schema:
            $ref: '#/components/schemas/Receipt'
      required: true
    TrackingCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackingCategory'
        application/xml:
          schema:
            $ref: '#/components/schemas/TrackingCategory'
      required: true
  schemas:
    Account:
      type: object
      required:
        - Code
        - Name
        - Type
      properties:
        Code:
          type: string
          description: Customer defined alpha numeric account code e.g 200 or SALES
          maxLength: 10
          example: 200
        Name:
          type: string
          description: Name of account
          maxLength: 150
          example: Sales
        Type:
          type: string
          description: Account type
          example: CURRENT
          enum:
            - BANK
            - CURRENT
            - CURRLIAB
            - DEPRECIATN
            - DIRECTCOSTS
            - EQUITY
            - EXPENSE
            - FIXED
            - INVENTORY
            - LIABILITY
            - NONCURRENT
            - OTHERINCOME
            - OVERHEADS
            - PREPAYMENT
            - REVENUE
            - SALES
            - TERMLIAB
            - PAYGLIABILITY
            - SUPERANNUATIONEXPENSE
            - SUPERANNUATIONLIABILITY
            - WAGESEXPENSE
            - WAGESPAYABLELIABILITY
        BankAccountNumber:
          type: string
          description: For bank accounts only (Type BANK)
          example: 1234353453453
        Status:
          type: string
          description: Accounts with a status of ACTIVE can be updated to ARCHIVED
          example: ACTIVE
          enum:
            - ACTIVE
            - ARCHIVED
        Description:
          type: string
          description: >-
            Description of the Account. Valid for all types of accounts except
            bank accounts
          maxLength: 4000
          example: A sales account
        BankAccountType:
          type: string
          description: For bank accounts only
          example: CREDITCARD
          enum:
            - BANK
            - CREDITCARD
            - PAYPAL
        CurrencyCode:
          type: string
          description: For bank accounts only
          example: AUD
        TaxType:
          type: string
          description: Default tax rate for the account
          example: NONE
        EnablePaymentsToAccount:
          type: boolean
          example: false
          description: Describes whether account can have payments applied to it
        ShowInExpenseClaims:
          type: boolean
          example: false
          description: >-
            Describes whether account code is available for use with expense
            claims
        AccountID:
          type: string
          format: uuid
          description: Unique identifier for the account
          readOnly: true
          example: 50e845c3-464e-4a6d-8951-8794317c7893
        Class:
          type: string
          description: The class of account
          readOnly: true
          example: ASSET
          enum:
            - ASSET
            - EQUITY
            - EXPENSE
            - LIABILITY
            - REVENUE
        SystemAccount:
          type: string
          description: >-
            If this is a system account then this element is returned. Note that
            non-system accounts may have this element set as either “” or null.
          readOnly: true
          example: ROUNDING
          enum:
            - DEBTORS
            - CREDITORS
            - BANKCURRENCYGAIN
            - GST
            - GSTONIMPORTS
            - HISTORICAL
            - REALISEDCURRENCYGAIN
            - RETAINEDEARNINGS
            - ROUNDING
            - TRACKINGTRANSFERS
            - UNPAIDEXPCLM
            - UNREALISEDCURRENCYGAIN
            - WAGEPAYABLES
        ReportingCode:
          type: string
          description: Shown if set
          example: ASS
          readOnly: true
        ReportingCodeName:
          type: string
          description: Shown if set
          example: Asset
          readOnly: true
        HasAttachments:
          type: boolean
          description: Indicates if an account has an attachment
          example: false
          readOnly: true
        UpdatedDateUTC:
          type: string
          format: date-time
          description: Last modified date UTC format
          readOnly: true
    Address:
      type: object
      properties:
        AddressType:
          type: string
          description: The address type
          example: POSTAL
          enum:
            - POBOX
            - STREET
            - POSTAL
        AddressLine1:
          type: string
          example: Apartment A
          maxLength: 500
        AddressLine2:
          type: string
          example: Building 20
          maxLength: 500
        AddressLine3:
          type: string
          example: 123 Main St
          maxLength: 500
        AddressLine4:
          type: string
          example: South
          maxLength: 500
        City:
          type: string
          example: New York City
          maxLength: 255
        Region:
          type: string
          example: New York
          maxLength: 500
        PostalCode:
          type: string
          example: 47483
          maxLength: 50
        Country:
          type: string
          example: United States
          maxLength: 50
        Attentionto:
          type: string
          example: Accounts Department
          maxLength: 255
    Allocation:
      type: object 
      properties:
        Invoice:
          type: object
          properties:
            InvoiceID:
              type: string
              format: uuid
        AppliedAmount:
          description: the amount being applied to the invoice
          type: number
          format: float
        Date:
          description: >-
            The date the prepayment is applied YYYY-MM-DD (read-only). This will
            be the latter of the invoice date and the prepayment date.
          type: string
          format: date
          readOnly: true
    Attachment:
      type: object
      properties:
        AttachmentId:
          type: string
          format: uuid
          description: Xero generated unique identifier for attachment
          example: a04bf353-4d9a-4bda-8c1e-db1274164ee
        Filename:
          type: string
          description: The filename of the attachemnt
          example: my-receipt.jpg
        Url:
          type: string
          description: The URL to where the attachment is located
          example: >-
            https://api.xero.com/api.xro/2.0/Receipts/e59a2c7f-4078-a0f3-73537afcbba9/Attachments/my-receipt.jpg
        MimeType:
          type: string
          description: The mimetype of the attachemnt
          example: image/jpg
        ContentLegth:
          type: integer
          description: The content length in bytes
          example: 6384
        IncludeOnline:
          type: boolean
          description: >-
            Determines whether the attachment is included with the online
            invoice
          example: true
    Balances:
      type: array
      description: >-
        The raw AccountsReceivable (sales invoices) and AccountsPayable (bills)
        outstanding and overdue amounts, not converted to base currency
      readOnly: true
      items:
        properties:
          AccountsReceivable:
            type: object
            properties:
              Outstanding:
                type: number
                format: float
                description: AR outstanding balance
                readOnly: true
                example: 1000
              Overdue:
                type: number
                format: float
                description: AR overdue balance
                readOnly: true
                example: 500
          AccountsPayable:
            type: object
            properties:
              Outstanding:
                type: number
                format: float
                description: AP outstanding balance
                readOnly: true
                example: 50
              Overdue:
                type: number
                format: float
                description: AP overdue balance
                readOnly: true
                example: 2
    BankAccount:
      type: object
      properties:
        Code:
          type: string
          description: Bank account code
          example: 610
        AccountID:
          type: string
          format: uuid
          description: Account identifier
          example: d1ebb97b-d207-4ccb-9ab6-8a466a8b4d39
        Name:
          description: The Name Bank Account
          readOnly: true
          type: string
          example: Everyday Savings
    FromBankAccount:
      type: object
      properties:
        Code:
          type: string
          description: Bank account code
          example: 610
        AccountID:
          type: string
          format: uuid
          description: Account identifier
          example: ae8074e0-1ac1-4b37-8546-afa9fa6ace9e
        Name:
          type: string
          description: Bank account name
          example: Savings account
    ToBankAccount:
      type: object
      properties:
        Code:
          type: string
          description: Bank account code
          example: 610
        AccountID:
          type: string
          format: uuid
          description: Account identifier
        Name:
          type: string
          description: Bank account name
          example: Savings account
    BankTransaction:
      type: object
      required:
        - Type
        - Contact
        - LineItems
        - BankAccount
      properties:
        BankTransactionId:
          type: string
          format: uuid
          description: Xero generated unique identifier for bank transactions
          readOnly: true
          example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
        Type:
          type: string
          description: The type of bank transaction
          enum:
            - RECEIVE
            - RECEIVE-OVERPAYMENT
            - RECEIVE-PREPAYMENT
            - SPEND
            - SPEND-OVERPAYMENT
            - SPEND-PREPAYMENT
            - RECEIVE-TRANSFER
            - SPEND-TRANSFER
          example: SPEND
        BankAccount:
          $ref: '#/components/schemas/BankAccount'
        IsReconciled:
          type: boolean
          description: Indicates if transaction has been reconciled
          example: false
        Reference:
          type: string
          description: >-
            Reference for the transaction. Only supported for SPEND and RECEIVE
            transactions
          example: ABC123
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Date:
          type: string
          format: date
          description: Date bank transaction was made YYYY-MM-DD
        Status:
          type: string
          enum:
            - AUTHORISED
            - DELETED
          default: AUTHORISED
          description: The status of the bank transaction
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        LineItems:
          $ref: '#/components/schemas/LineItems'
        Url:
          type: string
          description: >-
            URL link to a source document – shown as “Go to [appName]” in the
            Xero app
          example: 'https://yourapp.com/transactions/ABC123'
        CurrencyCode:
          type: string
          description: The currency that bank transaction has been raised in
          example: AUD
        CurrencyRate:
          type: number
          format: float
          description: >-
            The currency rate for a multicurrency bank transaction. If no rate
            is specified, the XE.com day rate is used.
        SubTotal:
          type: number
          format: float
          description: Total of bank transaction excluding taxes
          readOnly: true
        Totaltax:
          type: number
          format: float
          description: Total tax on the bank transaction
          readOnly: true
        Total:
          type: number
          format: float
          description: >-
            Total of bank transaction tax inclusive (i.e. SubTotal + TotalTax).
            This will be ignored if it doesn’t equal the sum of the LineAmounts
          readOnly: true
        PrepaymentID:
          type: string
          format: uuid
          description: >-
            Xero generated unique identifier for a Prepayment. This will be
            returned on BankTransactions with a Type of SPEND-PREPAYMENT or
            RECEIVE-PREPAYMENT
          example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
          readOnly: true
        OverpaymentID:
          type: string
          format: uuid
          description: >-
            Xero generated unique identifier for an Overpayment. This will be
            returned on BankTransactions with a Type of SPEND-OVERPAYMENT or
            RECEIVE-OVERPAYMENT
          example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
          readOnly: true
        UpdatedDateUTC:
          type: string
          format: date-time
          description: Last modified date UTC format
          readOnly: true
        HasAttachments:
          type: boolean
          description: boolean to indicate if the bank transaction has an attachment
          readOnly: true
        Attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      xml:
        name: BankTransaction
    BankTransfer:
      type: object
      required:
        - FromBankAccount
        - ToBankAccount
        - Amount
      properties:
        BankTransferId:
          type: string
          format: uuid
          description: Xero generated unique identifier for bank transfers
          readOnly: true
          example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
        FromBankAccount:
          $ref: '#/components/schemas/FromBankAccount'
        ToBankAccount:
          $ref: '#/components/schemas/ToBankAccount'
        Date:
          type: string
          format: date
          description: Date bank transfer was made YYYY-MM-DD
        CurrencyRate:
          type: number
          format: float
          description: >-
            The currency rate for a multicurrency bank transfer. If no rate is
            specified, the XE.com day rate is used.
        Amount:
          type: number
          format: float
          description: Total of the bank transfer
        FromBankTransactionID:
          type: string
          format: uuid
          description: The Bank Transaction ID for the source account
          example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
          readOnly: true
        ToBankTransactionID:
          type: string
          format: uuid
          description: The Bank Transaction ID for the destination account
          example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
          readOnly: true
        UpdatedDateUTC:
          type: string
          format: date-time
          description: Last modified date UTC format
          readOnly: true
        HasAttachments:
          type: boolean
          description: boolean to indicate if the bank transaction has an attachment
          readOnly: true
        Attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      xml:
        name: BankTransfer
    BrandingTheme:
      type: object
      readOnly: true
      properties:
        BrandingThemeID:
          description: Xero identifier
          type: string
          format: uuid
          readOnly: true
        Name:
          description: Name of branding theme
          type: string
          example: VIP Customer Theme
          readOnly: true
        SortOrder:
          description: >-
            Integer – ranked order of branding theme. The default branding theme
            has a value of 0
          type: integer
          readOnly: true
        CreatedDateUTC:
          description: UTC timestamp of creation date of branding theme
          type: string
          format: date-time
          readOnly: true
    BatchPayments:
      type: object
      readOnly: true
      properties:
        BankAccountNumber:
          type: string
          readOnly: true
          example: 098765 123456
        BankAccountName:
          type: string
          readOnly: true
          example: Globo Bank
        Details:
          type: string
          readOnly: true
          example: Stuff about the account
    Contact:
      type: object
      required:
        - Name
      properties:
        ContactID:
          type: string
          format: uuid
          description: Xero identifier
          example: cc04bc53-f094-4ed6-8b3e-67297c37fae0
          readOnly: true
        Name:
          type: string
          maxLength: 255
          description: Full name of contact/organisation
          example: Adam Moore
        AccountNumber:
          type: string
          maxLength: 50
          description: >-
            A user defined account number. This can be updated via the API and
            the Xero UI.
          example: AM123
        ContactStatus:
          type: string
          description: Current status of a contact
          enum:
            - ACTIVE
            - ARCHIVED
          example: ACTIVE
        FirstName:
          type: string
          description: First name of contact person
          maxLength: 255
          example: Adam
        LastName:
          type: string
          description: Last name of contact person
          maxLength: 255
          example: Moore
        EmailAddress:
          type: string
          description: Email address of contact person (umlauts not supported)
          maxLength: 255
          example: adam@moore.com
        SkypeUserName:
          type: string
          description: Skype user name of contact
          example: adamm
        ContactPersons:
          $ref: '#/components/schemas/ContactPersons'
        BankAccountDetails:
          type: string
          description: Bank account number of contact
          example: 061844 8474733
        TaxNumber:
          type: string
          description: >-
            Tax number of contact – this is also known as the ABN (Australia),
            GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and
            global) in the Xero UI depending on which regionalized version of
            Xero you are using.
          maxLength: 50
          example: GB12345667
        AccountsReceivableTaxType:
          type: string
          description: Default tax type used for contact on AR invoices
          example: NONE
        AccountsPayableTaxType:
          type: string
          description: Default tax type used for contact on AP invoices
          example: NONE
        Addresses:
          description: Address details for the contact
          type: array
          items:
            $ref: '#/components/schemas/Address'
        Phones:
          $ref: '#/components/schemas/Phones'
        IsSupplier:
          type: boolean
          description: >-
            Boolean that describes if a contact that has any AP invoices entered
            against them. Cannot be set via PUT or POST – it is automatically
            set when an accounts payable invoice is generated against this
            contact.
          example: true
          readOnly: true
        IsCustomer:
          type: boolean
          description: >-
            Boolean that describes if a contact has any AR invoices entered
            against them. Cannot be set via PUT or POST – it is automatically
            set when an accounts receivable invoice is generated against this
            contact.
          example: true
          readOnly: true
        DefaultCurrency:
          type: string
          description: Default currency for raising invoices against contact
          example: AUD
        XeroNetworkKey:
          type: string
          description: Store XeroNetworkKey for contacts.
          example: J57MXL9Z3GULYFR9CUBSKZGVRTBCAL
        SalesDefaultAccountCode:
          type: string
          description: The default sales account code for contacts
          example: 200
        PurchasesDefaultAccountCode:
          type: string
          description: The default purchases account code for contacts
          example: 420
        SalesTrackingCategories:
          $ref: '#/components/schemas/SalesTrackingCategories'
        PurchasesTrackingCategories:
          $ref: '#/components/schemas/PurchasesTrackingCategories'
        PaymentTerms:
          $ref: '#/components/schemas/PaymentTerms'
        UpdatedDateUTC:
          type: string
          format: date-time
          description: Last modified date UTC format
          readOnly: true
        ContactGroups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ContactGroup'
        Website:
          type: string
          description: Website address for contact
          readOnly: true
          example: www.contact.com
        BrandingTheme:
          $ref: '#/components/schemas/BrandingTheme'
        BatchPayments:
          $ref: '#/components/schemas/BatchPayments'
        Balances:
          $ref: '#/components/schemas/Balances'
        HasAttachments:
          type: boolean
          description: A boolean to indicate if a contact has an attachment
          readOnly: true
          example: true
    ContactSummary:
      type: object
      required:
        - Name
      properties:
        ContactID:
          type: string
          format: uuid
          description: Xero identifier
          example: cc04bc53-f094-4ed6-8b3e-67297c37fae0
          readOnly: true
        Name:
          type: string
          maxLength: 255
          description: Full name of contact/organisation
          example: Adam Moore
      xml:
        name: Contact
    ContactGroup:
      type: object
      required:
        - Name
      properties:
        ContactGroupID:
          type: string
          format: uuid
          description: Unique identifier for the contact group
          readOnly: true
          example: 50e845c3-464e-4a6d-8951-8794317c7893
        Name:
          type: string
          description: Name of the contact group
          example: Training
        Status:
          type: string
          description: The status of the contact group
          example: ACTIVE
          enum:
            - ACTIVE
            - DELETED
    ContactPerson:
      type: object
      properties:
        FirstName:
          type: string
          description: First name of person
          example: Aaron
        LastName:
          type: string
          description: Last name of person
          example: Muir
        EmailAddress:
          type: string
          description: Email address of person
          example: aaron@muir.com
        IncludeInEmails:
          type: boolean
          description: >-
            Boolean to indicate whether contact should be included on emails
            with invoices etc.
          example: true
    ContactPersons:
      type: array
      items:
        $ref: '#/components/schemas/ContactPerson'
    Currency:
      type: object
      properties:
        Code:
          description: 3 letter alpha code for the currency
          type: string
          example: AUD
          readOnly: true
        Description:
          description: Name of Currency
          type: string
          example: Australian Dollar
          readOnly: true
    CreditNote:
      type: object
      required:
        - Type
        - Contact
        - LineItems
      properties:
        Type:
          description: The type of Credit Note
          type: string
          enum:
            - ACCPAYCREDIT
            - ACCRECCREDIT
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Date:
          description: >-
            The date the credit note is issued YYYY-MM-DD. If the Date element
            is not specified then it will default to the current date based on
            the timezone setting of the organisation
          type: string
          format: date
        Status:
          description: The Credit Note status
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - PAID
            - VOIDED
            - DELETED
        LineAmountTypes:
          description: How tax is applied on the line items
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the credit note excluding taxes
          type: number
          format: float
          readOnly: true
        TotalTax:
          description: The total tax on the credit note
          type: number
          format: float
          readOnly: true
        Total:
          description: The total of the Credit Note(subtotal + total tax)
          type: number
          format: float
          readOnly: true
        UpdatedDateUTC:
          description: UTC timestamp of last update to the credit note
          type: string
          format: date-time
          readOnly: true
        CurrencyCode:
          description: Currency used for the Credit Note
          type: string
          example: AUD
        FullyPaidOnDate:
          description: Date when credit note was fully paid
          type: string
          format: date
          readOnly: true
        CreditNoteID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
        CreditNoteNumber:
          description: >-
            ACCRECCREDIT – Unique alpha numeric code identifying credit note
            (when missing will auto-generate from your Organisation Invoice
            Settings)
          type: string
          example: CN-123
        Reference:
          description: ACCRECCREDIT only – additional reference number
          type: string
          example: ABC123
        SentToContact:
          description: >-
            boolean to indicate if a credit note has been sent to a contact via
            the Xero app (currently read only)
          readOnly: true
          type: boolean
        CurrencyRate:
          description: >-
            The currency rate for a multicurrency invoice. If no rate is
            specified, the XE.com day rate is used
          type: number
          format: float
        RemainingCredit:
          description: The remaining credit balance on the Credit Note
          type: number
          format: float
          readOnly: true
        Allocations:
          description: Transactions the credit note has been allocated to
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Allocation'
        BrandingThemeID:
          description: The identifier for the branding theme applied to the credit note
          type: string
          format: uuid
        HasAttachments:
          description: boolean to indicate if a credit note has an attachment
          type: boolean
          readOnly: true
    CreditNoteSummary:
      type: object
      properties:
        Date:
          description: >-
            The date the credit note is issued YYYY-MM-DD. If the Date element
            is not specified then it will default to the current date based on
            the timezone setting of the organisation
          type: string
          format: date
        Total:
          description: The total of the Credit Note(subtotal + total tax)
          type: number
          format: float
          readOnly: true
        AppliedAmount:
          description: The total applied to the invoice
          type: number
          format: float
          readOnly: true
        CreditNoteID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
        CreditNoteNumber:
          description: >-
            ACCRECCREDIT – Unique alpha numeric code identifying credit note
            (when missing will auto-generate from your Organisation Invoice
            Settings)
          type: string
          example: CN-123
    Content:
      type: object
      required:
        - Content
      properties:
        Content:
          type: string
          description: The raw file content
          example: '23456238745623865897326457634259763425976342596'
    Employee:
      type: object
      required:
        - FirstName
        - LastName
      properties:
        EmployeeID:
          description: |-
            The Xero identifier for an employee
            e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
          readOnly: true
        Status:
          description: Current status of an employee
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
        FirstName:
          description: First name of an employee (max length = 255)
          maxLength: 255
          type: string
          example: Adam
        LastName:
          description: Last name of an employee (max length = 255)
          maxLength: 255
          type: string
          example: Moore
        ExternalLink:
          type: object
          allOf:
            - description: >-
                Link to an external resource, for example, an employee record in
                an external system. You can specify the URL element.

                The description of the link is auto-generated in the form “Go to
                <App name>”. <App name> refers to the Xero application name that
                is making the API call.
            - $ref: '#/components/schemas/ExternalLink'
    ExpenseClaim:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
        Receipts:
          description: The Receipts in the expense claim
          type: array
          items:
            $ref: '#/components/schemas/Receipt'
        ExpenseClaimID:
          description: Xero generated unique identifier for an expense claim
          readOnly: true
          type: string
          format: uuid
        Payments:
          description: Payments applied to the expense claim
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PaymentSummary'
        Status:
          description: Current status of an expense claim
          type: string
          enum:
            - SUBMITTED
            - AUTHORISED
            - PAID
        UpdatedDateUTC:
          description: Last modified date UTC format
          readOnly: true
          type: string
          format: date-time
        Total:
          description: The total of an expense claim being paid
          readOnly: true
          type: number
          format: float
        AmountDue:
          description: The amount due to be paid for an expense claim
          readOnly: true
          type: number
          format: float
        AmountPaid:
          description: The amount still to pay for an expense claim
          readOnly: true
          type: number
          format: float
        PaymentDueDate:
          description: The date when the expense claim is due to be paid YYYY-MM-DD
          readOnly: true
          type: string
          format: date
        ReportingDate:
          description: The date the expense claim will be reported in Xero YYYY-MM-DD
          readOnly: true
          type: string
          format: date
      required:
        - User
        - Receipts
    ExternalLink:
      type: object
      properties:
        LinkType:
          description: External link types
          type: string
          enum:
            - Facebook
            - GooglePlus
            - LinkedIn
            - Twitter
            - Website
        Url:
          description: URL for service
          type: string
          example: 'http://twitter.com/xeroapi'
    Invoice:
      type: object
      required:
        - Type
        - Contact
        - LineItems
      properties:
        InvoiceID:
          type: string
          format: uuid
          description: Xero generated unique identifier for invoice
          readOnly: true
        Type:
          type: string
          description: ACCREC (for sales) or ACCPAY (for bills)
          enum:
            - ACCREC
            - ACCPAY
        InvoiceNumber:
          type: string
          description: |
            User defined alphanumeric code for identifying invoices. 
            - Unique for ACCREC but not for ACCPAY. 
            - For ACCREC it will auto-generate when left blank. 
            - For ACCPAY it displays as Reference in the UI.
          example: INV-123
        Reference:
          type: string
          description: ACCREC only – additional reference number
          example: REF-123
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Date:
          type: string
          format: date
          description: Date invoice was issued YYYY-MM-DD
        DueDate:
          type: string
          format: date
          description: Date the invoice is due to be paid YYYY-MM-DD
        Status:
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - PAID
            - VOIDED
            - DELETED
          default: DRAFT
          description: The status of the invoice
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        LineItems:
          $ref: '#/components/schemas/LineItems'
        BrandingThemeID:
          type: string
          format: uuid
          description: The identifier for the branding theme applied to the invoice
        Url:
          type: string
          description: >-
            URL link to a source document – shown as “Go to [appName]” in the
            Xero app
          example: 'https://myapp.com/INV-123'
        CurrencyCode:
          type: string
          description: The currency that invoice has been raised in
          example: AUD
        CurrencyRate:
          type: number
          format: float
          description: >-
            The currency rate for a multicurrency invoice. If no rate is
            specified, the XE.com day rate is used.
        SentToContact:
          type: boolean
          description: >-
            Boolean to set whether the invoice in the Xero app should be marked
            as “sent”. This can be set only on invoices that have been approved
          default: false
        ExpectedPaymentDate:
          type: string
          format: date
          description: Shown on sales invoices (Accounts Receivable) when this has been set
        PlannedPaymentDate:
          type: string
          format: date
          description: Shown on bills (Accounts Payable) when this has been set
        SubTotal:
          type: number
          format: float
          description: Total of invoice excluding taxes
          readOnly: true
        Totaltax:
          type: number
          format: float
          description: Total tax on the invoice
          readOnly: true
        Total:
          type: number
          format: float
          description: >-
            Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will
            be ignored if it doesn’t equal the sum of the LineAmounts
          readOnly: true
        TotalDiscount:
          type: number
          format: float
          description: Total of discounts applied on the invoice line items
          readOnly: true
        AmountDue:
          type: number
          format: float
          description: Amount remaining to be paid on invoice
          readOnly: true
        AmountPaid:
          type: number
          format: float
          description: Sum of payments received for invoice
          readOnly: true
        FullyPaidOnDate:
          type: string
          format: date
          description: >-
            The date the invoice was fully paid. Only returned on fully paid
            invoices
          readOnly: true
        AmountCredited:
          type: number
          format: float
          description: >-
            Sum of all credit notes, over-payments and pre-payments applied to
            invoice
          readOnly: true
        UpdatedDateUTC:
          type: string
          format: date-time
          description: Last modified date UTC format
          readOnly: true
        HasAttachments:
          type: boolean
          description: boolean to indicate if an invoice has an attachment
          readOnly: true
        Attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSummary'
        CreditNotes:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteSummary'
        Prepayments:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentSummary'
        Overpayments:
          type: array
          items:
            $ref: '#/components/schemas/OverpaymentSummary'
      xml:
        name: Invoice
    InvoiceSummary:
      type: object
      properties:
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Type:
          description: The Invoice Type
          type: string
          enum:
            - ACCPAY
            - ACCREC
        InvoiceID:
          type: string
          format: uuid
          description: Xero generated unique identifier for invoice
          readOnly: true
        InvoiceNumber:
          type: string
          description: |
            User defined alphanumeric code for identifying invoices. 
            - Unique for ACCREC but not for ACCPAY. 
            - For ACCREC it will auto-generate when left blank. 
            - For ACCPAY it displays as Reference in the UI.
          example: INV-123
      xml:
        name: Invoice
    Item:
      type: object
      required:
        - Code
      properties:
        Code:
          description: User defined item code
          maxLength: 30
          type: string
          example: ABC123
        InventoryAssetAccountCode:
          description: >-
            The inventory asset account for the item. The account must be of
            type INVENTORY. The  COGSAccountCode in PurchaseDetails is also
            required to create a tracked item
          type: string
          example: 630
        Name:
          description: The name of the item (max length = 50)
          maxLength: 50
          type: string
          example: Widget
        IsSold:
          description: >-
            Boolean value, defaults to true. When IsSold is true the item will
            be available on sales transactions in the Xero UI. If IsSold is
            updated to false then Description and SalesDetails values will be
            nulled.
          type: boolean
        IsPurchased:
          description: >-
            Boolean value, defaults to true. When IsPurchased is true the item
            is available for purchase transactions in the Xero UI. If
            IsPurchased is updated to false then PurchaseDescription and
            PurchaseDetails values will be nulled.
          type: boolean
        Description:
          description: The sales description of the item
          maxLength: 4000
          type: string
          example: A really cool widget
        PurchaseDescription:
          description: The purchase description of the item
          maxLength: 4000
          type: string
          example: A cheapo widget
        PurchaseDetails:
          $ref: '#/components/schemas/PurchaseDetails'
        SalesDetails:
          $ref: '#/components/schemas/SalesDetails'
        IsTrackedAsInventory:
          description: >-
            True for items that are tracked as inventory. An item will be
            tracked as inventory if the InventoryAssetAccountCode and
            COGSAccountCode are set.
          type: boolean
          readOnly: true
        TotalCostPool:
          description: >-
            The value of the item on hand. Calculated using average cost
            accounting.
          type: number
          format: float
          readOnly: true
        QuantityOnHand:
          description: The quantity of the item on hand
          type: number
          format: float
          readOnly: true
        UpdatedDateUTC:
          description: Last modified date in UTC format
          type: string
          format: date-time
          readOnly: true
        ItemID:
          description: The Xero identifier for an Item
          type: string
          format: uuid
          readOnly: true
    Journal:
      properties:
        JournalID:
          description: Xero identifier
          type: string
          format: uuid
        JournalDate:
          description: Date the journal was posted
          type: string
          format: date
        JournalNumber:
          description: Xero generated journal number
          type: string
          example: 112
        CreatedDateUTC:
          description: Created date UTC format
          type: string
          format: date-time
        SourceID:
          description: The identifier for the source transaction (e.g. InvoiceID)
          type: string
          format: uuid
        SourceType:
          description: >-
            The journal source type. The type of transaction that created the
            journal
          enum:
            - ACCREC
            - ACCPAY
            - ACCPAYCREDIT
            - ACCRECPAYMENT
            - ACCPAYPAYMENT
            - APCREDITPAYMENT
            - CASHREC
            - CASHPAID
            - TRANSFER
            - ARPREPAYMENT
            - APPREPAYMENT
            - AROVERPAYMENT
            - APOVERPAYMENT
            - EXPCLAIM
            - EXPPAYMENT
            - MANJOURNAL
            - PAYSLIP
            - WAGEPAYABLE
            - INTEGRATEDPAYROLLPE
            - INTEGRATEDPAYROLLPT
            - EXTERNALSPENDMONEY
            - INTEGRATEDPAYROLLPTPAYMENT
            - INTEGRATEDPAYROLLCN
        JournalLines:
          type: array
          items:
            $ref: '#/components/schemas/JournalLine'
    JournalLine:
      properties:
        LineAmount:
          description: 'Total for line. Debits are positive, credits are negative value'
          type: number
          format: float
        AccountCode:
          description: Account Code
          type: string
          example: 200
        Description:
          description: Description for journal line
          type: string
          example: Bought a thing
        TaxType:
          description: >-
            Used as an override if the default Tax Code for the selected
            AccountCode is not correct.
          type: string
          example: NONE
        Tracking:
          description: >-
            Optional Tracking Category. Any JournalLine can have a maximum of 2
            TrackingCategory elements.
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
        TaxAmount:
          description: The calculated tax amount based on the TaxType and LineAmount
          readOnly: true
          type: number
          format: float
    LineItem:
      type: object
      required:
        - Description
      properties:
        Description:
          type: string
          description: >-
            Description needs to be at least 1 char long. A line item with just
            a description (i.e no unit amount or quantity) can be created by
            specifying just a <Description> element that contains at least 1
            character
          example: Travel Expenses
        Quantity:
          type: number
          format: float
          description: LineItem Quantity
        UnitAmount:
          type: number
          format: float
          description: >-
            Lineitem unit amount. By default, unit amount will be rounded to two
            decimal places. You can opt in to use four decimal places by adding
            the querystring parameter unitdp=4 to your query. See the Rounding
            in Xero guide for more information.
        ItemCode:
          type: string
          description: Code of the item
          example: 110
        AccountCode:
          type: string
          description: The account that the lineitem is being coded to
          example: 420
        LineItemID:
          type: string
          format: uuid
          description: >-
            The Xero generated identifier for a LineItem. If LineItemIDs are not
            included with line items in an update request then the line items
            are deleted and recreated.
          readOnly: true
        TaxType:
          type: string
          description: >-
            Used as an override if the default Tax Code for the selected
            <AccountCode> is not correct
        TaxAmount:
          type: number
          format: float
          description: >-
            The tax amount is auto calculated as a percentage of the line amount
            based on the tax rate. This value can be overriden if the calculated
            TaxAmount is not correct.
        LineAmount:
          type: number
          format: float
          description: >-
            The line amount reflects the discounted price if a DiscountRate has
            been used i.e LineAmount = Quantity * Unit Amount * ((100 –
            DiscountRate)/100)
        DiscountRate:
          type: number
          format: float
          description: >-
            Percentage discount being applied to a line item (only supported on
            ACCREC invoices – ACC PAY invoices and credit notes in Xero do not
            support discounts
        Tracking:
          $ref: '#/components/schemas/Tracking'
    LineItems:
      type: array
      items:
        $ref: '#/components/schemas/LineItem'
    LinkedTransaction:
      type: object
      properties:
        SourceTransactionID:
          description: >-
            Filter by the SourceTransactionID. Get all the linked transactions
            created from a particular ACCPAY invoice
          type: string
          format: uuid
        SourceLineItemID:
          description: The line item identifier from the source transaction.
          type: string
          format: uuid
        ContactID:
          description: >-
            Filter by the combination of ContactID and Status. Get all the
            linked transactions that have been assigned to a particular customer
            and have a particular status e.g. GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          type: string
          format: uuid
        TargetTransactionID:
          description: >-
            Filter by the TargetTransactionID. Get all the linked transactions
            allocated to a particular ACCREC invoice
          type: string
          format: uuid
        TargetLineItemID:
          description: >-
            The line item identifier from the target transaction. It is possible
            to link multiple billable expenses to the same TargetLineItemID.
          type: string
          format: uuid
        LinkedTransactionID:
          description: >-
            The Xero identifier for an Linked Transaction e.g.
            /LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
          readOnly: true
        Status:
          description: >-
            Filter by the combination of ContactID and Status. Get all the
            linked transactions that have been assigned to a particular customer
            and have a particular status e.g. GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          enum:
            - DRAFT
            - APPROVED
            - ONDRAFT
            - BILLED
            - VOIDED
          readOnly: true
        Type:
          description: >-
            This will always be BILLABLEEXPENSE. More types may be added in
            future.
          enum:
            - BILLABLEEXPENSE
          readOnly: true
        UpdatedDateUTC:
          description: The last modified date in UTC format
          type: string
          format: date-time
          readOnly: true
        SourceTransactionTypeCode:
          description: >-
            The Type of the source tranasction. This will be ACCPAY if the
            linked transaction was created from an invoice and SPEND if it was
            created from a bank transaction.
          type: string
          readOnly: true
    ManualJournal:
      type: object
      properties:
        Narration:
          description: Description of journal being posted
          type: string
          example: Fixing a mistake
        JournalLines:
          description: See JournalLines
          type: array
          items:
            $ref: '#/components/schemas/JournalLine'
        Date:
          description: Date journal was posted – YYYY-MM-DD
          type: string
          format: date
        LineAmountTypes:
          type: string
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          default: Exclusive
        Status:
          description: Manual Journal Status Codes
          type: string
          enum:
            - DRAFT
            - POSTED
            - DELETED
            - VOIDED
        Url:
          description: >-
            Url link to a source document – shown as “Go to [appName]” in the
            Xero app
          type: string
          example: 'https://myaapp.com/journal/123'
        ShowOnCashBasisReports:
          description: Boolean – default is true if not specified
          type: boolean
        HasAttachments:
          description: Boolean to indicate if a manual journal has an attachment
          readOnly: true
          type: boolean
        UpdatedDateUTC:
          description: Last modified date UTC format
          readOnly: true
          type: string
          format: date-time
        JournalID:
          description: The Xero identifier for a Manual Journal
          type: string
          format: uuid
          readOnly: true
      required:
        - Narration
        - JournalLines
    OnlineInvoice:
      properties:
        OnlineInvoiceUrl:
          description: The URL to view the online invoice
          type: string
          readOnly: true
          example: 'https://in.xero.com/U56hvGos5l9yHoeNITNjmqCVMVFUuDQyJMDwy41X'
    Organisation:
      properties:
        APIKey:
          description: Display a unique key used for Xero-to-Xero transactions
          type: string
          example: HJSONEEWGDGATQAL1VSWAZ0XHME0DV
        Name:
          description: Display name of organisation shown in Xero
          type: string
          example: My Awesome Company
        LegalName:
          description: Organisation name shown on Reports
          type: string
          example: My Awesome Company Pty Ltd
        PaysTax:
          description: >-
            Boolean to describe if organisation is registered with a local tax
            authority i.e. true, false
          type: boolean
        Version:
          description: Version Types
          type: string
          enum:
            - AU
            - NZ
            - GLOBAL
            - UK
            - US
            - AUONRAMP
            - NZONRAMP
            - GLOBALONRAMP
            - UKONRAMP
            - USONRAMP
        OrganisationType:
          description: Organisation Type
          type: string
          enum:
            - COMPANY
            - CHARITY
            - CLUBSOCIETY
            - PARTNERSHIP
            - PRACTICE
            - PERSON
            - SOLETRADER
            - TRUST
        BaseCurrency:
          description: Default currency for organisation. See ISO 4217 Currency Codes
          type: string
          example: AUD
        CountryCode:
          description: Country code for organisation. See ISO 3166-2 Country Codes
          type: string
          example: AU
        IsDemoCompany:
          description: Boolean to describe if organisation is a demo company.
          type: boolean
        OrganisationStatus:
          description: >-
            Will be set to ACTIVE if you can connect to organisation via the
            Xero API
          type: string
          enum:
            - ACTIVE
        RegistrationNumber:
          description: 'Shows for New Zealand, Australian and UK organisations'
          type: string
          example: 11111111138
        TaxNumber:
          description: >-
            Shown if set. Displays in the Xero UI as Tax File Number (AU), GST
            Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).
          type: string
          example: 53003086616
        FinancialYearEndDay:
          description: Calendar day e.g. 0-31
          type: string
          example: 30
        FinancialYearEndMonth:
          description: Calendar Month e.g. 1-12
          type: string
          example: 6
        SalesTaxBasis:
          description: The accounting basis used for tax returns
          type: string
          example: CASH
        SalesTaxPeriod:
          description: >-
            The frequency with which tax returns are processed. See Sales Tax
            Period
          type: string
          example: MONTHLY
        DefaultSalesTax:
          description: The default for LineAmountTypes on sales transactions
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
        DefaultPurchasesTax:
          description: The default for LineAmountTypes on purchase transactions
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
        PeriodLockDate:
          description: Shown if set
          type: string
          format: date
        EndOfYearLockDate:
          description: Shown if set
          type: string
          format: date
        CreatedDateUTC:
          description: Timestamp when the organisation was created in Xero
          type: string
          format: date-time
        Timezone:
          description: Timezone specifications
          type: string
          example: AUSEASTERNSTANDARDTIME
        OrganisationEntityType:
          description: Organisation Type
          type: string
          enum:
            - COMPANY
            - CHARITY
            - CLUBSOCIETY
            - PARTNERSHIP
            - PRACTICE
            - PERSON
            - SOLETRADER
            - TRUST
        ShortCode:
          description: >-
            A unique identifier for the organisation. Used for deep linking into
            Xero.
          type: string
          example: '!YDrVg'
        LineOfBusiness:
          description: Description of business type as defined in Organisation settings
          type: string
          example: Dairy Cattle Farming
        Addresses:
          description: Address details for organisation
          type: array
          items:
            $ref: '#/components/schemas/Address'
        Phones:
          description: Phones details for organisation
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        ExternalLinks:
          description: >-
            Organisation profile links for popular services such as Facebook,
            Twitter, GooglePlus and LinkedIn. You can also add link to your
            website here. Shown if Organisation settings  is updated in Xero.
            See ExternalLinks below
          type: array
          items:
            $ref: '#/components/schemas/ExternalLink'
        PaymentTerms:
          allOf:
            - description: Default payment terms for the organisation if set Terms below
            - $ref: '#/components/schemas/PaymentTerms'
    Overpayment:
      type: object
      properties:
        Type:
          description: The Overpayment Type
          type: string
          enum:
            - RECEIVE-OVERPAYMENT
            - SPEND-OVERPAYMENT
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Date:
          description: The date the overpayment is created YYYY-MM-DD
          type: string
          format: date
        Status:
          description: Overpayment Status
          type: string
          enum:
            - AUTHORISED
            - PAID
            - VOIDED
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        LineItems:
          description: Overpayment Line Items
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the overpayment excluding taxes
          type: number
          format: float
        TotalTax:
          description: The total tax on the overpayment
          type: number
          format: float
        Total:
          description: The total of the overpayment (subtotal + total tax)
          type: number
          format: float
        UpdatedDateUTC:
          description: UTC timestamp of last update to the overpayment
          type: string
          format: date-time
          readOnly: true
        CurrencyCode:
          description: Currency used for the overpayment
          type: string
          example: AUD
        OverpaymentID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
        CurrencyRate:
          description: >-
            The currency rate for a multicurrency overpayment. If no rate is
            specified, the XE.com day rate is used
          type: number
          format: float
        RemainingCredit:
          description: The remaining credit balance on the overpayment
          type: number
          format: float
          readOnly: true
        Allocations:
          description: See Allocations
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSummary'
        HasAttachments:
          description: boolean to indicate if a overpayment has an attachment
          type: boolean
          readOnly: true
    OverpaymentSummary:
      type: object
      properties:
        Date:
          description: The date the overpayment was made YYYY-MM-DD
          type: string
          format: date
        Total:
          description: The total of the Overpayment (subtotal + total tax)
          type: number
          format: float
          readOnly: true
        AppliedAmount:
          description: The total applied to the invoice
          type: number
          format: float
          readOnly: true
        OverpaymentID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
      xml:
        name: Overpayment
    Payment:
      type: object
      properties:
        Invoice:
          $ref: '#/components/schemas/InvoiceSummary'
        CreditNote:
          $ref: '#/components/schemas/CreditNoteSummary'
        Prepayment:
          $ref: '#/components/schemas/PrepaymentSummary'
        Overpayment:
          $ref: '#/components/schemas/OverpaymentSummary'
        Account:
          description: The Account the payment was made from
          type: object
          properties:
            Code:
              description: Account Code
              type: string
              example: 600
            AccountID:
              description: Identifier for the account
              type: string
              format: uuid
        Date:
          description: Date the payment is being made (YYYY-MM-DD)
          type: string
          format: date
        CurrencyRate:
          description: >-
            Exchange rate when payment is received. Only used for non base
            currency invoices and credit notes.
          type: number
          format: float
        Amount:
          description: >-
            The amount of the payment. Must be less than or equal to the
            outstanding amount owing on the invoice
          type: number
          format: float
        Reference:
          description: An optional description for the payment
          type: string
          example: Direct Debit
        IsReconciled:
          description: >-
            An optional parameter for the payment. A boolean indicating whether
            you would like the payment to be created as reconciled when using
            PUT, or whether a payment has been reconciled when using GET
          type: boolean
        Status:
          description: The status of the payment.
          type: string
          enum:
            - AUTHORISED
            - DELETED
        PaymentType:
          description: The Payment Type.
          readOnly: true
          type: string
          enum:
            - ACCRECPAYMENT
            - ACCPAYPAYMENT
            - ARCREDITPAYMENT
            - APCREDITPAYMENT
            - AROVERPAYMENTPAYMENT
            - ARPREPAYMENTPAYMENT
            - APPREPAYMENTPAYMENT
            - APOVERPAYMENTPAYMENT
        UpdatedDateUTC:
          description: UTC timestamp of last update to the payment
          readOnly: true
          type: string
          format: date-time
        PaymentID:
          description: The Xero identifier for an Payment
          type: string
          format: uuid
          readOnly: true
    PaymentSummary:
      type: object
      properties:
        PaymentID:
          description: The Xero identifier for an Payment
          type: string
          format: uuid
          readOnly: true
        Date:
          description: Date the payment is being made (YYYY-MM-DD)
          type: string
          format: date
        Amount:
          description: >-
            The amount of the payment. Must be less than or equal to the
            outstanding amount owing on the invoice
          type: number
          format: float
      xml:
        name: Payment
    PaymentTerms:
      type: array
      items:
        properties:
          Sales:
            type: object
            properties:
              Days:
                type: string
                example: 30
              Type:
                type: string
                example: DAYSAFTERBILLDATE
                enum:
                  - DAYSAFTERBILLDATE
                  - DAYSAFTERBILLMONTH
                  - OFCURRENTMONTH
                  - OFFOLLOWINGMONTH
          Bills:
            type: object
            properties:
              Days:
                type: string
                example: 1
              Type:
                type: string
                example: OFFOLLOWINGMONTH
                enum:
                  - DAYSAFTERBILLDATE
                  - DAYSAFTERBILLMONTH
                  - OFCURRENTMONTH
                  - OFFOLLOWINGMONTH
    Phone:
      type: object
      properties:
        PhoneType:
          type: string
          description: The phone type
          example: DDI
          enum:
            - DEFAULT
            - DDI
            - MOBILE
            - FAX
        PhoneNumber:
          type: string
          example: 9885 4589
          maxLength: 50
        PhoneAreaCode:
          type: string
          example: 3
          maxLength: 10
        PhoneCountryCode:
          type: string
          example: 1
          maxLength: 20
    Phones:
      type: array
      items:
        $ref: '#/components/schemas/Phone'
    Prepayment:
      type: object
      properties:
        Date:
          description: The date the prepayment is created YYYY-MM-DD
          type: string
          format: date
        Type:
          description: Prepayment Types
          type: string
          enum:
            - RECEIVE-PREPAYMENT
            - SPEND-PREPAYMENT
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Status:
          description: Prepayment Status Codes
          type: string
          enum:
            - AUTHORISED
            - PAID
            - VOIDED
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the prepayment excluding taxes
          type: number
          format: float
          readOnly: true
        TotalTax:
          description: The total tax on the prepayment
          type: number
          format: float
          readOnly: true
        Total:
          description: The total of the prepayment(subtotal + total tax)
          type: number
          format: float
          readOnly: true
        UpdatedDateUTC:
          description: UTC timestamp of last update to the prepayment
          type: string
          format: date-time
          readOnly: true
        CurrencyCode:
          description: Currency used for the prepayment
          type: string
          example: AUD
        PrepaymentID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
        CurrencyRate:
          description: >-
            The currency rate for a multicurrency prepayment. If no rate is
            specified, the XE.com day rate is used
          type: number
          format: float
        RemainingCredit:
          description: The remaining credit balance on the prepayment
          type: number
          format: float
          readOnly: true
        Allocations:
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        HasAttachments:
          description: boolean to indicate if a prepayment has an attachment
          type: boolean
          readOnly: true
    PrepaymentSummary:
      type: object
      properties:
        Date:
          description: The date the prepayment is issued YYYY-MM-DD.
          type: string
          format: date
        Total:
          description: The total of the Prepayment (subtotal + total tax)
          type: number
          format: float
          readOnly: true
        AppliedAmount:
          description: The total applied to the invoice
          type: number
          format: float
          readOnly: true
        PrepaymentID:
          description: Xero generated unique identifier
          type: string
          format: uuid
          readOnly: true
      xml:
        name: Prepayment
    PurchaseDetails:
      type: object
      properties:
        UnitPrice:
          description: >-
            Unit Price of the item. By default UnitPrice is rounded to two
            decimal places. You can use 4 decimal places by adding the unitdp=4
            querystring parameter to your request.
          type: number
          format: float
        AccountCode:
          description: >-
            Default account code to be used for purchase of non-tracked items.
            Not applicable to the purchase details of tracked items
          type: string
          example: 420
        COGSAccountCode:
          description: >-
            Cost of goods sold account. Only applicable to the purchase details
            of tracked items.
          type: string
          example: 420
        TaxType:
          description: >-
            Used as an override if the default Tax Code for the selected
            AccountCode is not correct.
          type: string
          example: NONE
    PurchaseOrder:
      type: object
      properties:
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        Date:
          description: >-
            Date purchase order was issued – YYYY-MM-DD. If the Date element is
            not specified then it will default to the current date based on the
            timezone setting of the organisation
          type: string
          format: date
        DeliveryDate:
          description: Date the goods are to be delivered – YYYY-MM-DD
          type: string
          format: date
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        PurchaseOrderNumber:
          description: >-
            Unique alpha numeric code identifying purchase order (when missing
            will auto-generate from your Organisation Invoice Settings)
          type: string
          example: PO-123
        Reference:
          description: Additional reference number
          type: string
          example: ABC123
        BrandingThemeID:
          description: See BrandingThemes
          type: string
          format: uuid
        CurrencyCode:
          description: The currency that purchase order has been raised in
          type: string
          example: AUD
        Status:
          description: Purchase Order Status Codes
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - BILLED
            - DELETED
        SentToContact:
          description: >-
            Boolean to set whether the purchase order should be marked as
            “sent”. This can be set only on purchase orders that have been
            approved or billed
          type: boolean
          default: false
        DeliveryAddress:
          description: The address the goods are to be delivered to
          type: string
          example: '23 Main Street, Central City, Marineville,1234'
        AttentionTo:
          description: The person that the delivery is going to
          type: string
          example: Adam
        Telephone:
          description: The phone number for the person accepting the delivery
          type: string
          example: 0800 1234 5678
        DeliveryInstructions:
          description: A free text feild for instructions (500 characters max)
          type: string
          example: Don't forget the secret knock
        ExpectedArrivalDate:
          description: The date the goods are expected to arrive.
          type: string
          format: date
        PurchaseOrderID:
          description: Xero generated unique identifier for purchase order
          type: string
          format: uuid
          readOnly: true
        CurrencyRate:
          description: >-
            The currency rate for a multicurrency purchase order. As no rate can
            be specified, the XE.com day rate is used.
          readOnly: true
          type: number
          format: float
        SubTotal:
          description: Total of purchase order excluding taxes
          readOnly: true
          type: number
          format: float
        TotalTax:
          description: Total tax on purchase order
          readOnly: true
          type: number
          format: float
        Total:
          description: Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)
          readOnly: true
          type: number
          format: float
        TotalDiscount:
          description: Total of discounts applied on the purchase order line items
          readOnly: true
          type: number
          format: float
        HasAttachments:
          description: boolean to indicate if a purchase order has an attachment
          readOnly: true
          type: boolean
        UpdatedDateUTC:
          description: Last modified date UTC format
          readOnly: true
          type: string
          format: date-time
      required:
        - Contact
        - LineItems
    Receipt:
      type: object
      properties:
        Date:
          description: Date of receipt – YYYY-MM-DD
          type: string
          format: date
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Lineitems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        User:
          $ref: '#/components/schemas/User'
        Reference:
          description: Additional reference number
          type: string
          example: ABC123
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        SubTotal:
          description: Total of receipt excluding taxes
          type: number
          format: float
          readOnly: true
        TotalTax:
          description: Total tax on receipt
          type: number
          format: float
          readOnly: true
        Total:
          description: Total of receipt tax inclusive (i.e. SubTotal + TotalTax)
          type: number
          format: float
          readOnly: true
        ReceiptID:
          description: Xero generated unique identifier for receipt
          readOnly: true
          type: string
          format: uuid
        Status:
          description: Current status of receipt
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - DECLINED
        ReceiptNumber:
          description: >-
            Xero generated sequence number for receipt in current claim for a
            given user
          readOnly: true
          type: string
        UpdatedDateUTC:
          description: Last modified date UTC format
          readOnly: true
          type: string
          format: date-time
        HasAttachments:
          description: boolean to indicate if a receipt has an attachment
          readOnly: true
          type: boolean
        Url:
          description: >-
            URL link to a source document – shown as “Go to [appName]” in the
            Xero app
          type: string
          example: 'https://myapp.com/receipt/123'
      required:
        - Date
        - Contact
        - Lineitems
        - User
    RepeatingInvoice:
      properties:
        Type:
          description: Invoice Types
          type: string
          enum:
            - ACCPAY
            - ACCREC
        Contact:
          $ref: '#/components/schemas/ContactSummary'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        LineAmountTypes:
          type: string
          enum:
            - Inclusive
            - Exclusive
            - NoTax
          description: >-
            Line amounts are exclusive of tax by default if you don’t specify
            this element
          default: Exclusive
        Reference:
          description: ACCREC only – additional reference number
          type: string
          example: ABC123
        BrandingThemeID:
          description: Branding Theme to be applied to the invoice
          type: string
          format: uuid
        CurrencyCode:
          description: The currency that invoice has been raised in
          type: string
          example: AUD
        Status:
          description: 'One of the following : DRAFT or AUTHORISED'
          type: string
          enum:
            - DRAFT
            - AUTHORISED
        SubTotal:
          description: Total of invoice excluding taxes
          type: number
          format: float
          readOnly: true
        TotalTax:
          description: Total tax on invoice
          type: number
          format: float
          readOnly: true
        Total:
          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)
          type: number
          format: float
          readOnly: true
        RepeatingInvoiceID:
          description: Xero generated unique identifier for repeating invoice template
          type: string
          format: uuid
          readOnly: true
        HasAttachments:
          description: boolean to indicate if an invoice has an attachment
          type: boolean
          readOnly: true
    Report:
      properties:
        ReportID:
          description: Identifier of the report
          type: string
          example: BalanceSheet
        ReportName:
          description: Name of the report
          type: string
          example: Balance Sheet
        ReportType:
          description: Type of report
          type: string
          example: BalanceSheet
        ReportTitles:
          type: array
          description: The titles of the report
          example: Balance Sheet
          items:
            type: string
        ReportDate:
          description: The date of the report
          type: string
          example: 10 November 2017
        UpdatedDateUTC:
          description: The date and time the report was generated
          type: string
          format: date-time
        Rows:
          type: array
          description: The rows of the report that contain the data (including header rows)
          items:
            type: object
            properties:
              RowType:
                description: The type of row
                enum:
                  - Header
                  - Section
                  - Row
                  - SummaryRow
              Cells:
                type: array
                items:
                  type: object
                  properties:
                    Value:
                      description: Header row labels
                      type: string
                      example: 30 Nov 2017
              Title:
                description: The title of the row
                example: Assets
                type: string
              Rows:
                type: array
                description: The rows of the report (including header rows)
                items:
                  type: object
                  properties:
                    RowType:
                      description: The type of row
                      enum:
                        - Row
                        - SummaryRow
                    Cells:
                      type: array
                      description: The cells that contain the data of the report
                      items:
                        type: object
                        properties:
                          Value:
                            description: The data displayed in the report
                            type: string
                            example: Business Account
                          Attributes:
                            type: array
                            description: AccountID that the Value relates to
                            items:
                              type: object
                              properties:
                                Value:
                                  description: The AccountID that the Value relates to
                                  type: string
                                  format: uuid
                                Id:
                                  description: Always 'account'
                                  enum:
                                    - account
    ReportSummary:
      properties:
        ReportID:
          description: Identifier of the report
          type: string
          format: uuid
        ReportName:
          description: Name of the report
          type: string
          example: Activity Statement
        ReportType:
          description: Type of report
          type: string
          example: ActivityStatement
        ReportDate:
          description: The date of the report
          type: string
          example: 1 Oct 2017 to 31 Oct 2017
        UpdatedDateUTC:
          description: The date and time the report was generated
          type: string
          format: date-time
    TaxReport:
      properties:
        ReportID:
          description: Identifier of the report
          type: string
          format: uuid
        ReportName:
          description: Name of the report
          type: string
          example: Activity Statement
        ReportType:
          description: Type of report
          type: string
          example: SalesTaxReturn
        ReportDate:
          description: The date of the report
          type: string
          example: 10 November 2017
        UpdatedDateUTC:
          description: The date and time the report was generated
          type: string
          format: date-time
        Attributes:
          type: object
          properties:
            ReportAttribute:
              type: array
              description: The attributes of the report (AU BAS Report only)
              items:
                type: object
                properties:
                  Name:
                    description: The identifier for the field
                    type: string
                    example: fromDate
                  Description:
                    type: string
                    description: The description of the field
                    example: From
                  Value:
                    description: The value of the field
                    example: '2011-11-01T00:00:00.000Z'
                    type: string
        Fields:
          type: object
          properties:
            ReportField:
              type: array
              description: The report fields that contain useful data
              items:
                type: object
                properties:
                  FieldID:
                    description: The identifier for the field
                    type: string
                    example: W1
                  Description:
                    type: string
                    description: The description of the field
                    example: 'Total salary, wages and other payments'
                  Value:
                    description: The value of the field
                    example: 500
                    type: string
    SalesDetails:
      type: object
      properties:
        UnitPrice:
          description: >-
            Unit Price of the item. By default UnitPrice is rounded to two
            decimal places. You can use 4 decimal places by adding the unitdp=4
            querystring parameter to your request.
          type: number
          format: float
        AccountCode:
          description: Default account code to be used for sale.
          type: string
          example: 200
        TaxType:
          description: >-
            Used as an override if the default Tax Code for the selected
            AccountCode is not correct .
          type: string
          example: NONE
    Schedule:
      properties:
        Period:
          description: 'Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)'
          type: integer
        Unit:
          description: 'One of the following : WEEKLY or MONTHLY'
          type: string
        DueDate:
          description: >-
            Integer used with due date type e.g 20 (of following month), 31 (of
            current month)
          type: integer
        DueDateType:
          description: Used with due date to describe when the invoice is due
          example: DAYSAFTERBILLDATE
          enum:
            - DAYSAFTERBILLDATE
            - DAYSAFTERBILLMONTH
            - OFCURRENTMONTH
            - OFFOLLOWINGMONTH
        StartDate:
          description: >-
            Date the first invoice of the current version of the repeating
            schedule was generated (changes when repeating invoice is edited)
          type: string
          format: date
        NextScheduledDate:
          description: >-
            The calendar date of the next invoice in the schedule to be
            generated
          type: string
          format: date
        EndDate:
          description: Invoice end date – only returned if the template has an end date set
          type: string
          format: date
    TaxRate:
      type: object
      properties:
        Name:
          description: Name of tax rate
          type: string
          example: Sales Tax
        TaxType:
          description: Tax Types – can only be used as the identifier on update calls
          type: string
          example: TAX001
        TaxComponents:
          type: array
          items:
            $ref: '#/components/schemas/TaxComponent'
        Status:
          description: Status Codes
          type: string
          enum:
            - ACTIVE
            - DELETED
            - ARCHIVED
        ReportTaxType:
          description: See ReportTaxTypes
          type: string
        CanApplyToAssets:
          description: 'Boolean to describe if tax rate can be used for asset accounts '
          type: boolean
        CanApplyToEquity:
          description: 'Boolean to describe if tax rate can be used for equity accounts '
          type: boolean
        CanApplyToExpenses:
          description: 'Boolean to describe if tax rate can be used for expense accounts '
          type: boolean
        CanApplyToLiabilities:
          description: Boolean to describe if tax rate can be used for liability accounts
          type: boolean
        CanApplyToRevenue:
          description: Boolean to describe if tax rate can be used for revenue accounts
          type: boolean
        DisplayTaxRate:
          description: Tax Rate (decimal to 4dp) e.g 12.5000
          readOnly: true
          type: number
          format: float
        EffectiveRate:
          description: Effective Tax Rate (decimal to 4dp) e.g 12.5000
          readOnly: true
          type: number
          format: float
      required:
        - Name
        - TaxComponents
    TaxComponent:
      properties:
        Name:
          description: Name of Tax Component
          type: string
          example: City Tax
        Rate:
          description: Tax Rate (up to 4dp)
          type: number
          format: float
        IsCompound:
          description: Boolean to describe if Tax rate is compounded.Learn more
          type: boolean
    TrackingCategory:
      type: object
      properties:
        TrackingCategoryID:
          description: >-
            The Xero identifier for a tracking categorye.g.
            297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
        Name:
          description: >-
            The name of the tracking category e.g. Department, Region (max
            length = 100)
          maxLength: 100
          type: string
          example: Region
        Status:
          description: The status of a tracking category
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
        Options:
          type: array
          items:
            $ref: '#/components/schemas/TrackingOption'
    TrackingOption:
      type: object
      properties:
        TrackingOptionID:
          description: >-
            The Xero identifier for a tracking optione.g.
            ae777a87-5ef3-4fa0-a4f0-d10e1f13073a
          type: string
          format: uuid
        Name:
          description: >-
            The name of the tracking option e.g. Marketing, East (max length =
            50)
          maxLength: 50
          type: string
          example: North
        Status:
          description: The status of a tracking option
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
    PurchasesTrackingCategory:
      type: object
      properties:
        TrackingCategoryID:
          type: string
          format: uuid
        Name:
          type: string
        Option:
          type: string
    PurchasesTrackingCategories:
      type: array
      items:
        $ref: '#/components/schemas/PurchasesTrackingCategory'
    SalesTrackingCategory:
      type: object
      properties:
        TrackingCategoryID:
          type: string
          format: uuid
        Name:
          type: string
        Option:
          type: string
    SalesTrackingCategories:
      type: array
      items:
        $ref: '#/components/schemas/SalesTrackingCategory'
    Tracking:
      type: object
      properties:
        TrackingCategory:
          type: array
          items:
            properties:
              TrackingCategoryID:
                description: The identifier for the tracking category
                type: string
                format: uuid
              Name:
                description: The name of the tracking category
                type: string
                example: Region
              Option:
                description: The name of the tracking option
                type: string
                example: North
    User:
      type: object
      properties:
        UserID:
          description: Xero identifier
          type: string
          format: uuid
        EmailAddress:
          description: Email address of user
          type: string
          example: john@smith.com
        FirstName:
          description: First name of user
          type: string
          example: John
        LastName:
          description: Last name of user
          type: string
          example: Smith
        UpdatedDateUTC:
          description: Timestamp of last change to user
          type: string
          format: date-time
        IsSubscriber:
          description: Boolean to indicate if user is the subscriber
          type: boolean
        OrganisationRole:
          description: User role
          type: string
          enum:
            - READONLY
            - INVOICEONLY
            - STANDARD
            - FINANCIALADVISER
            - MANAGEDCLIENT
            - CASHBOOKCLIENT