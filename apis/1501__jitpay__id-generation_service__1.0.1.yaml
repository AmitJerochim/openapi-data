openapi: 3.0.1
info:
  title: ID Generation Service
  description: ID Generation API
  contact:
    name: Boris Steinke
    url: https://jitpay.eu
    email: bs@steinke.tv
  version: "1.0.1"
security: []
paths:
  /idgenerator:
    get:
      operationId: index
      responses:
        default:
          description: Displays the index html file.
          content:
            text/html:
              schema:
                type: string
    put:
      tags:
        - update
      summary: Update an existing NumberRange object.
      description: Updates the NumberRange entity. Please notify that the 'maxId' attribute will not be updated if the provided value is 'null'. 
      operationId: update
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberRange'
        required: true
      responses:
        200:
          description: Returns an header that contains the current id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberRange'
        304:
          description: The NumberRange object could not be updated.
          content:
            text/plain: {}
    post:
      tags:
        - create
      summary: Create a new NumberRange object.
      description: Create a new NumberRange object and save it to the database. If you want to create a new NumberRange you must provide the 'clazz' and  'idPattern' as a minimum. The default value for 'tenant' = 'null', 'maxId' = 1L, 'info' = 'null'.
      operationId: create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberRange'
        required: true
      responses:
        201:
          description: Returns the newly created NumberRange.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberRange'
        204:
            description: Will be returned if an unknown error occurred.
            content:
              text/plain: {}
        400:
          description: Will be returned if a validation error or a data integrity violation occurred.
          content:
            text/plain: {}
  /idgenerator/{id}:
    get:
      tags:
        - show
      summary: Shows a NumberRange object or nothing.
      description: Get a single NumberRange object by id.
      operationId: show
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns a NumberRange json object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberRange'
        404:
          description: Could not find a NumberRange for the given id.
          content:
            text/plain: {}
    delete:
      tags:
        - delete
      summary: Delete an existing NumberRange object.
      description: Delete the NumberRange by the provided id-parameter.
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: The NumberRange object was deleted successfully.
          content:
            text/plain: {}
        404:
          description: The NumberRange object could not be deleted.
          content:
            text/plain: {}
  /idgenerator/list:
    get:
      tags:
        - list
      summary: List NumberRanges.
      description: You can provide sort and order parameters and count and offset.
      operationId: list
      parameters:
        - name: sortArgs
          in: path
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/SortingAndOrderArguments'
      responses:
        200:
          description: Returns a list of NumberRange objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: Returns an empty list.
          content:
            text/plain: {}
  /idgenerator/nextid:
    post:
      tags:
        - nextid
      summary: Returns a Map of new id's depending on the clazz name
      description: Provide the clazz name and numberOf to get 1 ... upTo numberOf.
      operationId: nextId
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NextIdCommand'
        required: true
      responses:
        200:
          description: 'Success: returns a NextIdDTO object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextIdDTO'
        400:
          description: 'idPattern: length must be between 2 and 100'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RuleException'
                  - $ref: '#/components/schemas/LinkedMessage'
          
components:
  schemas:
    NumberRange:
      type: object
      properties:
        id:
          maxLength: 36
          required:
            - "true"
          type: string
          description: Technical unique identifier
          format: uuid
          nullable: true
        tenant:
          maxLength: 60
          type: string
          description: Tenant identifier either debtor id or creditor id
          format: string
          nullable: true
        clazz:
          maxLength: 100
          required:
            - "true"
          type: string
          description: 'Unique identifier for a number range defined by the developer
            or the business staff '
        idPattern:
          maxLength: 100
          required:
            - "true"
          type: string
          description: "Defines the layout of the generated id. The pattern must contain\
            \ a number placeholder that matches the following REGEX: /%(([\\+,0-9]{1,}d)|([\\\
            -,0-9]{1,}d)|([0-9]{1,}d))/\nAdditional placeholder for century, year,\
            \ month and day can be used as well: \n  - %tC \t:Century part of year\
            \ formatted with two digits e.g. '00' through '99'. \n  - %ty \t:Year\
            \ formatted with 2 digits e.g. '00' through '99'. \n  - %tY \t:Year formatted\
            \ with 4 digits e.g. '0000' to '9999'. \n  - %tm \t:Month formatted with\
            \ a leading 0 e.g. '01' to '12'. \n  - %td \t:Day of the month formatted\
            \ with two digits. e.g. '01' to '31'. \n  - %te \t:Day of the month formatted\
            \ without a leading 0 e.g. '1' to '31'. \n  - %tj \t:Day of the year formatted\
            \ with leading 0s e.g. '001' to '366'. \nId you want to have the same\
            \ number for two or more entities in the same transaction you can concatenate\
            \ the patterns with '|'. \nFor example: 'JGS-%ty-%06d|JRG-%ty-%06d' generates\
            \ two id's with the same number: "
        maxId:
          maximum: 9223372036854775807
          minimum: 0
          type: integer
          description: Is required only if you create a new number range. The value
            is the starting value for the number range
          format: int64
        info:
          type: string
          description: Contains some explanatory infos
          nullable: true
        createdBy:
          type: string
          description: This attribute is set by the system
        dateCreated:
          type: string
          description: This attribute is set by the system
          format: date-time
        updatedBy:
          type: string
          description: This attribute is set by the system
        lastUpdate:
          type: string
          description: This attribute is set by the system
          format: date-time
        version:
          type: integer
          description: Required for optimistic locking
          format: int32
        deleted:
          type: boolean
          description: If set to true, the row will be considered as deleted
    SortingAndOrderArguments:
      type: object
      properties:
        offset:
          minimum: 1
          type: integer
          format: int32
          nullable: true
        max:
          minimum: 0
          type: integer
          format: int32
          nullable: true
        sort:
          type: string
          format: id|name
          nullable: true
        order:
          type: string
          format: asc|ASC|desc|DESC
          nullable: true
    NextIdDTO:
      type: object
      properties:
        correlationId:
          maxLength: 100
          minLength: 1
          type: string
          description: CorrelationId should be provided by the sender when using queues
          format: string
          nullable: true
        routingKey:
          minLength: 1
          required:
            - "false"
          type: string
          description: The routing key is required if you distribute the result over
            message queue
          nullable: true
        tenant:
          maxLength: 100
          minLength: 1
          type: string
          description: Tenant identifier either debtor id or creditor id
          format: string
          nullable: true
        mapSize:
          type: integer
          format: int32
          description: Tells how many id's have been created
        nextIdMap:
          $ref: '#/components/schemas/MapId'
        nextIdStatus:
          $ref: '#/components/schemas/NextIdStatus'
        errorMessage:
          type: string
        serviceId:
          type: string
    NextIdList:
      type: array
      description: 'is defined as List<String>'
      properties:
        value:
          type: string
          description: contains the generated number range id string
    NextIdStatus:
      type: string
      enum:
        - SUCCESS
        - NOT_FOUND
        - NOT_UNIQUE
        - FAILED
        - INTERNAL_ERROR
        - RULE_EXCEPTION
        - MISSING_ROUTING_KEY
        - CONSTRAINT_VIOLATION_ERROR
    ClassDefinition:
      type: object
      properties:
        clazz:
          maxLength: 100
          minLength: 1
          required: 
            - "true"
          type: string
          description: "Unique name of a NumberRange entity."
          example: "jitpay.number.range.ForASpecificTable"
        idPattern:
          maxLength: 100
          minLength: 2
          required: 
            - "false"
          type: string
          description: "Pattern for the number generation if creating a new number range object."
          example: "%08d"
        maxId:
          type: integer
          format: int64
          required: 
            - "false"
          description: "Initial sequence value if creating a new number range object."
          minimum: 0
          example: "10"
    NextIdCommand:
      type: object
      properties:
        routingKey:
          maxLength: 100
          minLength: 1
          required:
            - "false"
          type: string
          description: The routing key is required if you distribute the result over
            message queue
          nullable: true
          example: myRoutingKey
        tenant:
          maxLength: 100
          minLength: 1
          type: string
          description: Tenant identifier either debtor id or creditor id
          format: string
          nullable: true
        clazzList:
          type: array
          items:
            $ref: '#/components/schemas/ClassDefinition'
        numberOf:
          minimum: 0
          required:
            - "false"
          type: integer
          description: Provide numberOf as an optional integer to create more than
            one maxId, the pre-defined value is 0
          format: int32
          nullable: true
          example: 1
    MapList: 
        properties:
          listIndex:
            type: integer
            format: int32
          listArray:
            type: array
            items:
              type: string
    MapId:
      description: Nested map (Map<String, Map<Integer, List<String>>>)
      properties:
        clazzId:
          type: string
      additionalProperties:
        $ref: '#/components/schemas/MapList'
    RuleException:
      description: "Occurs if the rule engine fails"
      properties:
        mapSize:
          type: integer
          format: int32
        nextStatus:
          type: string
        errorMessage:
          type: string
        serviceId:
          type: string
    LinkedMessage:
      properties:
        message:
          type: string
        _links:
          properties:
            self:
              type: string
              properties:
                href:
                  type: string
                templated:
                  type: boolean
