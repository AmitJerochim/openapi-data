openapi: 3.0.0
info:
  description: |+
    # What Is Mallaca
    A service for distribute fund from source account (Account Holder) to several destination bank accounts.

    # **Merchant**
    Merchant is a machine or app (client) which connected to Mallaca API with their own credential.

    Merchant will need this three component if they want to use this API :
    * API Key
    * API Secret
    * SSH Key ( Public & Private )

    ## **API Key & Secret**

    API key and secret should be created by service ops team via Terra (current). This is are needed for client to get a JWT token, where used for other protected resource.

    ## **SSH Key (Public & Private) and Signature**

    Please refer to [this page](https://sepulsa.github.io/disbursement/integration#generate-signature) 
    
    ## Error Codes

    | RC           | GENERAL MESSAGE                                                   |
    |--------------|-------------------------------------------------------------------|
    | 00           | success                                                           |
    | 01-AUTH-0001 | invalid key or secret                                             |
    | 01-AUTH-0002 | merchant not active                                               |
    | 01-AUTH-0003 | invalid signature                                                 |
    | 01-AUTH-0004 | token mismatch                                                    |
    | 01-AUTH-0005 | invalid token                                                     |
    | 01-AUTH-0006 | limited request                                                   |
    | 01-AUTH-0007 | expired token                                                     |
    | --           |                                                                   |
    | 01-CFG-0001  | private key error                                                 |
    | 01-CFG-0002  | bank code credential is not set                                   |
    | --           |                                                                   |
    | 01-VLD-0001  | empty body                                                        |
    | 01-VLD-0002  | json error                                                        |
    | 01-VLD-0003  | general bank code required                                        |
    | 01-VLD-0004  | scheduled time is less than current time                          |
    | 01-VLD-0006  | invalid total with detail summary                                 |
    | 01-VLD-0007  | bank code is not available                                        |
    | 01-VLD-0008  | data not found                                                    |
    | 01-VLD-0009  | maximum char length allowed                                       |
    | 01-VLD-0010  | empty body                                                        |
    | 01-VLD-0011  | invalid status                                                    |
    | --           |                                                                   |
    | 01-ERR-0001  | generate signature fail                                           |
    | --           |                                                                   |
    | 02-ERR-0001  | bank service is under maintenance                                 |
    | 02-ERR-0002  | request timeout                                                   |
    | 02-ERR-0003  | invalid account number                                            |
    | 02-ERR-0004  | maximum retry                                                     |
    | 02-ERR-0005  | duplicate transaction id                                          |
    | 02-ERR-0006  | bank service is under maintenance (for test only)                 |
    | --           |                                                                   |
    | 02-VLD-0001  | insufficient fund                                                 |
    | 02-VLD-0002  | account not found                                                 |
    | 02-VLD-0003  | beneficiary name not found                                        |
    |              |                                                                   |
    | 03-ERR-0001  | internal system error                                             |
    | 03-ERR-0002  | internal system error                                             |
    | 03-ERR-0003  | internal system error                                             |

  version: 0.1.0
  title: Disbursement (Mallaca) API
  termsOfService: ""
  contact:
    email: jellyfish@sepulsa.com
servers:
  - url: "http://103.117.207.52:9000"
tags:
  - name: Authentication
    description: Request for your access authentication
    externalDocs:
      description: ""
      url: ""
  - name: Transaction
    description: Disbursement transaction
  - name: Inquiry
    description: Inquiry Service
  - name: Internal - Transaction History
    description: Disbursement transaction for internal usage
  - name: Notification Callbacks
    description: >-
      Please create these endpoint on your side so we can give you immediate
      info about following processes.
  - name: Internal - CRUD Merchant
    description: CRUD for merchant
  - name: Internal - CRUD Bank Code
    description: CRUD for bank code
paths:
  /token:
    get:
      tags:
        - Authentication
      summary: Request access token
      description: >-
        <p>Token will available for <code>24 hours</code> from the time
        creation. This is a JWT token, and you need to attach token in
        Authorization header.</p> <br><br> <p><strong>API Key</strong> :
        <em>merchant_test</em></p> <br> <p><strong>API Secret</strong> :
        <em>6ggisNBQGmkiUHPLptl8gQL0D7EGOBzf8rTU0DdyuVJKCWMLJTeqATq0tKC7QdEb</em></p>
      operationId: reqAuthGetToken
      parameters:
        - in: query
          name: key
          schema:
            type: string
          description: API Key
          required: true
        - in: query
          name: secret
          schema:
            type: string
          description: API Secret
          required: true
      responses:
        "200":
          description: Status OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjToken"
                  sign:
                    type: string
                    example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        "422":
          $ref: "#/components/responses/422"
        "400,401":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /token/admin:
    get:
      tags:
        - Authentication
      summary: Request access token for internal/admin client
      description: >-
        <p>Token will available for <code>24 hours</code> from the time
        creation. This is a JWT token, and you need to attach token in
        Authorization header.</p> <br><br> <p><strong>API Key</strong> :
        <em>s3puls4</em></p> <br> <p><strong>API Secret</strong> :
        <em>b3rbud1</em></p>
      operationId: reqAuthGetTokenInternal
      parameters:
        - in: query
          name: key
          schema:
            type: string
          description: API Key
          required: true
        - in: query
          name: secret
          schema:
            type: string
          description: API Secret
          required: true
      responses:
        "200":
          description: Status OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjToken"
        "400,401,403":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /disburse:
    post:
      tags:
        - Transaction
      summary: Request scheduled disburse
      description: " <p><strong>Bulk Destination</strong></p> <p>You can add many destination within <strong>dest</strong> attribute.</p></p> <br> <p><strong>General Bank Code</strong></p> <p>General Bank Code required for <strong>ATM_TRANSFER</strong> request. You can set this attribute inside dest value like: <strong>general_bank_code={Your Bank Destination Code}.</strong> This attribute refer to Bank Transfer ATM Code in Indonesia.</p>"
      operationId: reqDisbursementScheduled
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/X-Signature"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiPayloadDisburseScheduled"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRespDisburseScheduledSuccess"
        "400":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
  /disburse/approve:
    post:
      tags:
        - Transaction
      summary: Request scheduled disburse
      description: " <p><strong>Bulk EXT_ID</strong></p> <p>You can add many Ext_ID within <strong>ext_id</strong> attribute.</p></p>"
      operationId: reqDisbursementApprove
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/X-Signature"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiPayloadDisburseApprove"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRespDisburseApproveSuccess"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
        "400,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /disburse/reject:
    post:
      tags:
        - Transaction
      summary: Request scheduled disburse
      description: ' <p><strong>Bulk Ext_ID</strong></p> <p>You can add many Ext_ID within <strong>ext_id</strong> attribute.</p></p>'
      operationId: reqDisbursementReject
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-Signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPayloadDisburseReject'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRespDisburseRejectSuccess'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse422'
        "400,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"  
  /admin/disburse/history:
    get:
      tags:
        - Internal - Transaction History
      summary: Get disburse transactions report history for internal usage.
      description: ""
      operationId: reqGetTransactionDisburseHistory
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: p
          schema:
            type: integer
          description: Page of show
        - in: query
          name: rp
          schema:
            type: integer
          description: Many data per page settings
        - in: query
          name: orderby
          schema:
            type: string
          description: >-
            Field name<br/> **multiple order field ready, separate by coma*<br/>
            ex. ```id,status,created_date```
        - in: query
          name: sort
          schema:
            type: string
            example: "asc,,desc"
          description: >-
            Sorting type for orderby <br/> **applied with orderby data,
            multiple, separate by coma, default desc* <br/> ex. ```asc,,desc```
        - in: query
          name: bank_code
          schema:
            type: string
          description: Bank code from this system
        - in: query
          name: merchant
          schema:
            type: integer
          description: Merchant id from this system
        - in: query
          name: acc_holder_number
          schema:
            type: string
          description: Holder number account data
        - in: query
          name: dest_number
          schema:
            type: string
          description: Destination number disburse transaction
        - in: query
          name: status
          schema:
            type: string
          description: Disburse transaction status
        - in: query
          name: ext_id
          schema:
            type: string
          description: Disburse transaction extension id
      responses:
        "200":
          description: successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjTransaction"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
        "400,401,403":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  "/[YOUR DISBURSE TRANSACTION CALLBACK URL]":
    post:
      tags:
        - Notification Callbacks
      summary: callback for disburse transaction(endpoint /disburse) on success.
      description: " <p><strong>Disbursement Transaction on Success</strong></p> <p>The system will give you notification when disburse transaction you did when you hit [/disburse] is completed.</p> "
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisburseCallbackNotification"
      responses:
        "200":
          description: successful operation
  /admin/crud/merchants:
    get:
      tags:
        - Internal - CRUD Merchant
      summary: List of merchants
      description: ""
      operationId: reqGetMerchantList
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: p
          schema:
            type: integer
          description: Page of show
        - in: query
          name: rp
          schema:
            type: integer
          description: Many data per page settings
        - in: query
          name: orderby
          schema:
            type: string
          description: >-
            Field name<br/> **multiple order field ready, separate by coma*<br/>
            ex. ```id,status,created_date```
        - in: query
          name: sort
          schema:
            type: string
            example: "asc,,desc"
          description: >-
            Sorting type for orderby <br/> **applied with orderby data,
            multiple, separate by coma, default desc* <br/> ex. ```asc,desc```
        - in: query
          name: name
          schema:
            type: string
          description: Sorting by name of merchant
        - in: query
          name: api_key
          schema:
            type: string
          description: Sorting by api_key of merchant
        - in: query
          name: status
          schema:
            type: string
          description: Sorting by status of merchant
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjMerchant"
        "401,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - bearerAuth: []
  /admin/crud/merchant:
    get:
      tags:
        - Internal - CRUD Merchant
      summary: Get merchant detail
      description: ""
      operationId: reqGetMerchantDetail
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjMerchant"
                
        "401,404,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    post:
      tags:
        - Internal - CRUD Merchant
      summary: Add new merchant
      description: ""
      operationId: reqAddNewMerchant
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - api_key
                - pub_key
                - api_secret
              type: object
              properties:
                name:
                  type: string
                  example: PT. Merchant
                api_key:
                  type: string
                  example: YOURAPIKEY
                api_secret:
                  type: string
                  example: YOURAPISECRET
                pub_key:
                  type: string
                status:
                  type: boolean
                  example: true
                  default: true
                callback_url:
                  type: string
                  example: "https://callback.io"
                expired:
                  type: integer
                  example: 1
                notification:
                  properties:
                    email:
                      type: string
                      example: example@example.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjMerchant"
        "400,401,403,\n422,500":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    put:
      tags:
        - Internal - CRUD Merchant
      summary: Update merchant
      description: ""
      operationId: reqUpdateMerchant
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: PT. Merchant
                api_key:
                  type: string
                  example: YOURAPIKEY
                api_secret:
                  type: string
                  example: YOURAPISECRET
                pub_key:
                  type: string
                status:
                  type: boolean
                  example: true
                  default: true
                callback_url:
                  type: string
                  example: "https://callback.io"
                expired:
                  type: integer
                  example: 1
                notification:
                  properties:
                    email:
                      type: string
                      example: example@example.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjMerchant"
        "401,\n403,404,500":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    delete:
      tags:
        - Internal - CRUD Merchant
      summary: Delete merchant
      description: ""
      operationId: reqDeleteMerchant
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: string
                    example: "ok"
        "400,401,\n403,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
  /admin/crud/bank_codes:
    get:
      tags:
        - Internal - CRUD Bank Code
      summary: List of bank code
      description: ""
      operationId: reqGetBankCodeList
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: p
          schema:
            type: integer
          description: Page of show
        - in: query
          name: rp
          schema:
            type: integer
          description: Many data per page settings
        - in: query
          name: orderby
          schema:
            type: string
          description: >-
            Field name<br/> **multiple order field ready, separate by coma*<br/>
            ex. ```id,status,created_date```
        - in: query
          name: sort
          schema:
            type: string
            example: "asc,,desc"
          description: >-
            Sorting type for orderby <br/> **applied with orderby data,
            multiple, separate by coma, default desc* <br/> ex. ```asc,desc```
        - in: query
          name: bank_code
          schema:
            type: string
          description: Sorting by bank_code name
        - in: query
          name: status
          schema:
            type: string
          description: Sorting by status of bank_code
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjBankCode"
        "401,403,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - bearerAuth: []
  /admin/crud/bank_code:
    get:
      tags:
        - Internal - CRUD Bank Code
      summary: Get bankcode detail
      description: ""
      operationId: reqGetBankCodeDetail
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjBankCode"
        "400,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    post:
      tags:
        - Internal - CRUD Bank Code
      summary: Add new bank code
      description: ""
      operationId: reqAddNewBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      requestBody:
        content:
          application/json:
            schema:
              required:
                - bank_code
              type: object
              properties:
                bank_code:
                  type: string
                  example: new_bank_code
                status:
                  type: boolean
                  example: true
                queue:
                  type: string
                  example: new_queue
                credentials:
                  $ref: "#/components/schemas/ObjCredentials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjBankCode"
        "400,401,403,422,500":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    put:
      tags:
        - Internal - CRUD Bank Code
      summary: Update bank code
      description: ""
      operationId: reqUpdateBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_code
              properties:
                bank_code:
                  type: string
                  example: new_bank_code
                status:
                  type: boolean
                  example: true
                queue:
                  type: string
                  example: new_queue
                credentials:
                  $ref: "#/components/schemas/ObjCredentials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjBankCode"
        "400,401,\n403,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    delete:
      tags:
        - Internal - CRUD Bank Code
      summary: Delete bank code
      description: ""
      operationId: reqDeleteBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: string
                    example: "ok"
        "400,401,\n403,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
  /admin/crud/merchant_bankcodes:
    get:
      tags:
        - Internal - CRUD Merchant Bank Code
      summary: List bank codes of targeted merchant
      description: ""
      operationId: regGetMerchantBankCodeList
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: p
          schema:
            type: integer
          description: Page of show
        - in: query
          name: rp
          schema:
            type: integer
          description: Many data per page settings
        - in: query
          name: status
          schema:
            type: string
          description: Sorting by status of merchant_bank_code
        - in: query
          name: merchant
          schema:
            type: string
          description: Sorting by merchant of merchant_bank_code
        - in: query
          name: bank_code
          schema:
            type: string
          description: Sorting by bank_code of merchant_bank_code
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjMerchantBankCode"
        "400":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
  /admin/crud/merchant_bankcode:
    post:
      tags:
        - Internal - CRUD Merchant Bank Code
      summary: Add new merchant bank code
      description: ""
      operationId: reqAddNewMerchantBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      requestBody:
        content:
          application/json:
            schema:
              required:
                - bank_code
                - merchant
                - key
                - secret
                - fee_type
                - fee
              type: object
              properties:
                bank_code:
                  type: integer
                  example: 1234
                merchant:
                  type: integer
                  example: 1234
                key:
                  type: string
                  example: YOURAPIKEY
                secret:
                  type: string
                  example: YOURSECRETKEY
                fee_type:
                  type: string
                  enum:
                    - percent
                    - fix
                  example: fix
                fee:
                  type: integer
                  example: 7500
                status:
                  type: boolean
                  example: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjMerchantBankCode"
        "400,401,403,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    put:
      tags:
        - Internal - CRUD Merchant Bank Code
      summary: Update merchant bank code
      description: ""
      operationId: reqUpdateMerchantBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: bank_code
          schema:
            type: integer
          required: true
        - in: query
          name: merchant
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: YOURAPIKEY
                secret:
                  type: string
                  example: YOURAPISECRET
                fee_type:
                  type: string
                  enum:
                    - percent
                    - fix
                  example: fix
                fee:
                  type: integer
                  example: 7500
                status:
                  type: boolean
                  example: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    $ref: "#/components/schemas/ObjMerchantBankCode"
        "400,401,\n403,404,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
    delete:
      tags:
        - Internal - CRUD Merchant Bank Code
      summary: Delete merchant bank code
      description: ""
      operationId: reqDeleteMerchantBankCode
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: bank_code
          schema:
            type: integer
          required: true
        - in: query
          name: merchant
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: string
                    example: "ok"
        "400,401,\n403,404,422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - jwtInternal: []
  /merchant:
    get:
      tags:
        - Public - Merchant
      summary: Get merchant detail
      description: ""
      parameters:
        - $ref: "#/components/parameters/Authorization"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRespGetMerchantDetailSuccess"
        "400,401,403":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /merchant/transaction:
    get:
      tags:
        - Public - Merchant
      summary: Get transaction status for merchant.
      description: ""
      operationId: reqMerchantGetTransaction
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - in: query
          name: ref_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successfull operation
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per second / minute / hour
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of request left for the time.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: The Unix Timestamp at which the current rate limit resets.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjRespGetTransaction"
        "400,401,\n403,404,422,429":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /merchant/transaction/history:
    get:
      tags:
        - Public - Merchant
      summary: Get transactions report history for merchant.
      description: ""
      operationId: reqMerchantGetTransactionHistory
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - in: query
          name: p
          schema:
            type: integer
        - in: query
          name: rp
          schema:
            type: integer
        - in: query
          name: bank_code
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: ext_id
          schema:
            type: string
      responses:
        "200":
          description: successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjTransaction"
        "422":
          description: Unacceptable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
        "400,401,403":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
  /stats:
    get:
      tags:
        - Healthcheck
      summary: Get disburse server readiness
      description: "returns 200 if disburse is ready, else 500"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: string
                    example: "ok"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    type: string
                    example: "00-RC-0000"
                  general_message:
                    type: string
                    example: "internal system error"
  /inquiry/bank_code:
    get:
      tags:
        - Inquiry
      summary: List of general bank code and bank name
      description: ""
      operationId: reqGetGeneralBankCodeList
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal or merchant
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: p
          schema:
            type: integer
          description: Page of show
        - in: query
          name: rp
          schema:
            type: integer
          description: Many data per page settings
        - in: query
          name: orderby
          schema:
            type: string
          description: >-
            Field name<br/> **order field must be on of general_bank_code, bank_code_type, bank_name. Default value general_bank_code*<br/>
            ex. ```general_bank_code```
        - in: query
          name: sort
          schema:
            type: string
            example: "asc"
          description: >-
            Sorting type for orderby either asc or desc
        - in: query
          name: general_bank_code
          schema:
            type: string
          description: exact General Bank code from swift or local
        - in: query
          name: bank_code_type
          schema:
            type: string
            example: "swift"
          description: Bank code type either swift or local
        - in: query
          name: bank_name
          schema:
            type: string
            example: "BANK INDONESIA"
          description: Keyword of bank name
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_code:
                    $ref: "#/components/schemas/ObjSuccessRC"
                  payload:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/ObjRespTemplateForList"
                      - properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/ObjGeneralBankCode"
        "422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
        "400,404":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
      security:
        - bearerAuth: []
  /inquiry/bank_account:
    post:
      tags:
        - Inquiry
      summary: This Service Used for Inquiry Bank Account Name.
      description: " <p><strong>Inquiry Bank Account Name</strong></p> <p>This Service Used for Inquiry Bank Account Name.</p>"
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
          description: JWT bearer token internal or merchant
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      requestBody:
        content:
          application/json:
            schema:
              required:
                - account_number
                - general_bank_code
              properties:
                account_number:
                  type: string
                  description: Target Account Number
                  example: "123456789"
                general_bank_code:
                  type: string
                  description: Client Target General Bank Code
                  example: "local/swift"
      responses:
        "200":
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjGeneralBankName"
        "422":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse422"
        "400,404,500":
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse400"
components:
  securitySchemes:
    jwtInternal:
      type: http
      scheme: bearer
    jwtMerchant:
      type: http
      scheme: bearer
  parameters:
    Authorization:
      required: true
      in: header
      name: Authorization
      schema:
        type: string
      description: JWT bearer token
      example: >-
        Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    X-Signature:
      in: header
      name: X-Signature
      schema:
        type: string
      description: Request signature signed by Merchant's private key
      example: >-
        UQvWgR8j1Pg6ep5MvmoB5MrWI1gJzWVCMAFeY+aTRnh4XkpZcMRrqUwJl0oxnndIA6k0SgnDpap5dD+izke6MHzNtzwHoWue5mGKinEiqBBsTUBx6wx8e32AhvzKlLPEi+GKvQlHfWEBsh8l0AuyCvtvyUhsxQ7ZA3YSJnho3OXpdNq2R4cmkuQdMoo8P5zKFv9/tMSSWhOxJVphWbFW1qm8sLLdWBSuHnMnMUq8q+DVky/IJ6agfqovL3eFthvT1pv58TfWNABhtjvR1cYrUcjJ7vZ5m9AMeWJ85dEqNJfNsc5q6CyeHh2SmWf5LPudUx6UVuyT2oX47qwcnEhAWg==
      required: true
  responses:
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse400"
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse400"
    "422":
      description: Unacceptable Entity
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse422"
  schemas:
    BankCodeOptions:
      type: string
      enum:
        - your_bank_code
    ObjDefaultDatesAttr:
      type: object
      properties:
        created_at:
          type: string
          example: "2018-08-15T12:37:57.737378Z"
        updated_at:
          type: string
          example: "2018-08-15T12:37:57.737378Z"
        deleted_at:
          type: string
          example: "2018-08-15T12:37:57.737378Z"
    ObjGeneralBankCode:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            id:
              type: integer
              example: 1234
            general_bank_code:
              type: string
              example: "014"
            bank_name:
              type: string
              enum:
                - BCA
                - CIMB
            bank_code_type:
              type: string
              enum:
                - local
                - swift
    ObjBankCode:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            id:
              type: integer
              example: 1234
            bank_code:
              $ref: "#/components/schemas/BankCodeOptions"
            status:
              type: string
              enum:
                - true
                - false
            queue:
              type: string
              example: string
            credentials:
              $ref: "#/components/schemas/ObjCredentials"
    ObjCredentials:
      type: object
      properties:
        your_credentials1:
          type: string
          example: 123456789
        your_credentials2:
          type: string
          example: 123456789
        your_credentials3:
          type: string
          example: 123456789
    ObjBankCodeWoId:
      type: object
      properties:
        bank_code:
          $ref: "#/components/schemas/BankCodeOptions"
        status:
          type: boolean
          enum:
            - true
            - false
    ObjBankCodeExtend:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjBankCodeWoId"
        - type: object
          properties:
            key:
              type: string
            secret:
              type: string
            fee_type:
              type: string
              enum:
                - percent
                - fixed
            fee:
              type: integer
              example: 7500
    ObjToken:
      type: object
      properties:
        token:
          type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3BpZ2d5YmFuay5zZXB1bHNhLmlkL2FwaS92MS9jbGllbnQvdG9rZW4iLCJpYXQiOjE1MzM9.-ntMGBGoQ0OXgGAW6Bdrhnfp3v_nR8SNjnEOESdSgMk
        expires_in:
          type: integer
          example: 86400
          description: this value refer to second unix time
    ObjMerchant:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            id:
              type: integer
              example: 1234
            name:
              type: string
              example: PT. Merchant
            api_key:
              type: string
              example: YOURAPIKEY
            api_secret:
              type: string
              example: YOURAPISECRET
            pub_key:
              type: string
            status:
              type: boolean
              example: true
            callback_url:
              type: string
              example: "https://callback.io"
            expired:
              type: integer
              example: 1
            notification:
              type: object
              properties:
                email:
                  type: string
                  example: example@example.com
    ObjMerchantBankCode:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            bank_code:
              type: integer
              example: 1234
            merchant:
              type: integer
              example: 1234
            key:
              type: string
              example: YOURAPIKEY
            secret:
              type: string
              example: YOURAPISECRET
            fee_type:
              type: string
              enum:
                - percent
                - fix
              example: fix
            fee:
              type: integer
              example: 7500
            status:
              type: boolean
              example: true
    ObjSuccessRC:
      type: string
      example: "00"
    ObjMerchantCrud:
      type: object
      properties:
        name:
          type: string
          example: PT. Merchant
        api_key:
          type: string
          example: YOURAPIKEY
        api_secret:
          type: string
          example: YOURAPISECRET
        pub_key:
          type: string
        status:
          type: boolean
          example: true
        expired:
          type: integer
          example: 1
        notification:
          type: object
          properties:
            email:
              type: string
              example: example@example.com
    ObjMerchantExtend:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjMerchant"
        - properties:
            bank_codes:
              type: array
              items:
                $ref: "#/components/schemas/ObjBankCodeExtend"
    ObjTransaction:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            id:
              type: integer
              example: 1234
            ext_id:
              type: string
              example: M1_001
            acc_holder_name:
              type: string
              example: John Doe
            acc_holder_number:
              type: string
              example: 0123456789
            acc_email:
              type: string
              example: john_doe@example.com
            dest_name:
              type: string
              example: Jane Doe
            dest_number:
              type: string
              example: "1234567890"
            notes:
              type: string
              example: "trx #1"
            amount:
              type: integer
              example: 150000
            fee:
              type: integer
              example: 7500
            schedule_type:
              type: string
              example: now
            schedule:
              type: string
              example: "2018-10-07T05:14:26.381715Z"
            status:
              type: string
              enum:
                - success
                - failed
                - rejected
                - expired
                - draft
              example: success
            status_desc:
              type: string
              example: description here.
            merchant:
              type: integer
              example: 1
            bank_code:
              type: string
              example: bca_to_bca_rtgs
            dest_bank_code:
              type: string
              example: bca_to_bca_rtgs
            general_bank_code:
              type: string
              example: your_general_bank_code
            Items:
              $ref: "#/components/schemas/ObjItems"
            expired_date:
              type: string
              example: "2018-10-07T05:14:26.381715Z"
            confirmation_date:
              type: string
              example: "2018-10-07T05:14:26.381715Z"
    ObjRespGetTransaction:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          $ref: "#/components/schemas/ObjTransaction"
        sign:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    ObjItems:
      type: object
      example:
        - Amount: 10000
          Description: "notes 1"
        - Amount: 10000
          Description: "notes 2"
    ObjRespTransaction:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - failed
            - rejected
            - expired
            - draft
        ref_id:
          type: integer
      example:
        - status: draft
          ref_id: 1234
        - status: draft
          ref_id: 4321
    ObjRespTemplateForList:
      type: object
      properties:
        total:
          type: integer
          description: "total all data, or total data filtered if apply"
          example: 5
        per_page:
          type: integer
          description: record per page
          example: 2
        current_page:
          type: integer
          description: current page
          example: 2
        last_page:
          type: integer
          description: last page
          example: 3
        from:
          type: integer
          description: current page first record number
          example: 3
        to:
          type: integer
          description: current page last record number
          example: 4
    ApiPayloadDisburseApprove:
      required:
        - ext_ids
      properties:
        ext_id:
          type: array
          example: ["your_trx_id-001", "your_trx_id-002"]
    ApiRespDisburseApproveSuccess:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          type: object
          properties:
            ext_id:
              type: string
              example: ["your_trx_id-001", "your_trx_id-002"]
            status:
              type: string
              description: Status transaction approve
              example: "transaction approved"
            approve_date:
              type: string
              description: Schedule date for disbursement action
              example: "2019-09-03T10:49:39.219555+07:00"
        sign:
          type: string
          example: >-
            Uogc/TVfYQrL2ULwFd/143iXC2VPaF6dY+WqbMtwTLxt41/elC0bVEuf0jF5miePtUIR/AP3N+hWGDEL6ibhqAAweruIUvp1JTHDM2/XboXsT7+fFXNhv6+ybfVHRXoAUT2hoYI573KxkXIGC89zYBHkx9t7JDNyM3eyIP9tqwFtjYnxV4I8nwSfD/j+w84+bv235QZ015cL/f0T30se6oMqKutCTnadaRgG7NCruhm7y+wV/QJeP6/ZSSZoUhiHCYDIHZvKKx57Hek9voWdpw8gqvlUSiERoH/AKhWvj+YhnYfioQwKf/m7ThLC4H187xtrdibx57I8BfBr52N2UA==
    ApiPayloadDisburse:
      required:
        - ext_id
        - acc_holder_name
        - acc_holder_number
        - bank_code
      properties:
        request:
          type: object
          properties:
            source:
              type: object
              properties:
                ext_id:
                  type: string
                  example: your_trx_id-001
                acc_holder_name:
                  type: string
                  example: Budiyanto
                acc_holder_number:
                  type: string
                  example: "123456789"
                bank_code:
                  $ref: "#/components/schemas/BankCodeOptions"
                acc_email:
                  type: string
                  description: optional
                  example: account@holder.com
            dest:
              type: array
              items:
                properties:
                  dest_name:
                    type: string
                    example: Budi Yanto
                  dest_number:
                    type: string
                    example: 0987654321
                  bank_code:
                    $ref: "#/components/schemas/BankCodeOptions"
                  amount:
                    type: number
                    example: 1000000
                  notes:
                    type: string
                    example: Your payment notes
            amount:
              type: integer
              description: Total amount of disbursement
              example: 1000000
        sign:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    ApiPayloadDisburseScheduled:
      required:
        - source
        - dest
        - amount_total
      properties:
        source:
          type: object
          required:
            - ext_id
            - acc_holder_name
            - acc_holder_number
            - bank_code
          properties:
            ext_id:
              type: string
              example: your_trx_id-001
            acc_holder_name:
              type: string
              example: Budiyanto
            acc_holder_number:
              type: string
              example: "123456789"
            bank_code:
              $ref: "#/components/schemas/BankCodeOptions"
            acc_email:
              type: string
              description: optional
              example: account@holder.com
        dest:
          type: array
          items:
            properties:
              dest_name:
                type: string
              dest_number:
                type: string
              general_bank_code:
                type: string
              amount:
                type: integer
              notes:
                type: string
          example:
            - dest_name: Budi Yanto
              dest_number: 0987654321
              general_bank_code: your_general_bankcode
              amount: 1000000
              notes: Your payment notes
              items:
                - amount: 500000
                  description: Notes 1
                - amount: 250000
                  description: Notes 2
                - amount: 250000
                  description: Notes 3

            - dest_name: Yanto Budi
              dest_number: 0987654322
              general_bank_code: your_general_bankcode
              amount: 2000000
              notes: Your payment notes 2
              items:
                - amount: 1000000
                  description: Notes 1
                - amount: 1000000
                  description: Notes 2

        amount_total:
          type: integer
          description: Total amount of disbursement
          example: 3000000
        schedule_type:
          type: string
          description: Schedule type
          default: now
          example: scheduled
          enum:
            - now
            - scheduled
        schedule:
          type: string
          description: >-
            Schedule date for disbursement action in RFC3339 format - <a
            href="https://www.ietf.org/rfc/rfc3339.txt"
            target="BLANK">https://www.ietf.org/rfc/rfc3339.txt</a>
          default: NOW()
          example: '2018-08-15T12:37:57.737378Z'
    
    ApiPayloadDisburseReject:
      required:
        - ext_ids
      properties:
        ext_ids:
          type: array
          items:
            properties:
              ext_id:
                type: string
                description: 'existing disbursement transaction''s ext_id '
              reason:
                type: string
                description: 'reason for reject the disbure'
          example:
            - ext_id: your_trx_id-001
              reason: reason for your_trx_id-001

            - ext_id: your_trx_id-002
              reason: reason for your_trx_id-002

    ApiPayloadDisburseRetry:
      required:
        - ext_id
      properties:
        ext_id:
          type: string
          description: "existing disbursement transaction's ext_id "
          example: my_extId_1234
    ApiRespDisburseSuccess:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: "#/components/schemas/ObjRespTransaction"
        sign:
          type: string
    ApiRespDisburseScheduledSuccess:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          type: object
          properties:
            transactions:
              $ref: "#/components/schemas/ObjRespTransaction"
            schedule:
              type: string
              description: Schedule date for disbursement action
              example: "2018-09-09 00:00"
        sign:
          type: string
          example: >-
            ZqtbM7sntvsTp1c+0y/yDpxI1EaDCJ/s3ZmIEKL4fMPT4rZbpKKYrxRJ8QG2OuZwkJLxqyU3w2REwN8NKWpBT4idk5gv4ZACwlpiBuKeWEbiXyVJhJrIeVoseKw6DzAAJY2e/CuR2lCiaH9ntazDGKnOJ/kcZKLF12TwFmCNf9UPu+ObyBo7WVPxQxOg1y1gIdALJrjrSGBeKBiFr84Cb6jtPwZTETYHB9JmmdPPe28QITZtwC//0vaySKRF6Z7zOM7pYvSeMIdfy4Ya+JS8x/6xwBVykImMIWWhmJ4xiQn5xvAeMm8qwRT3++LD947cTtb+NQnTUQ3JakJHgVlgOw==
    ApiRespDisburseRejectSuccess:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          type: object
          properties:
            ext_id:
              type: string
              example: ['your_trx_id-01','your_trx_id-02']
            status:
              type: string
              description: Status transaction rejected
              example: 'transaction rejected'
            reject_date:
              type: string
              description: Schedule date for disbursement action
              example: '2019-09-03T10:49:39.219555+07:00'
        sign:
          type: string
          example: >-
            Uogc/TVfYQrL2ULwFd/143iXC2VPaF6dY+WqbMtwTLxt41/elC0bVEuf0jF5miePtUIR/AP3N+hWGDEL6ibhqAAweruIUvp1JTHDM2/XboXsT7+fFXNhv6+ybfVHRXoAUT2hoYI573KxkXIGC89zYBHkx9t7JDNyM3eyIP9tqwFtjYnxV4I8nwSfD/j+w84+bv235QZ015cL/f0T30se6oMqKutCTnadaRgG7NCruhm7y+wV/QJeP6/ZSSZoUhiHCYDIHZvKKx57Hek9voWdpw8gqvlUSiERoH/AKhWvj+YhnYfioQwKf/m7ThLC4H187xtrdibx57I8BfBr52N2UA==
    ApiRespDisburseRetrySuccess:
      type: object
      properties:
        response:
          type: object
          properties:
            transactions:
              $ref: "#/components/schemas/ObjRespTransaction"
        sign:
          type: string
          example: >-
            ZqtbM7sntvsTp1c+0y/yDpxI1EaDCJ/s3ZmIEKL4fMPT4rZbpKKYrxRJ8QG2OuZwkJLxqyU3w2REwN8NKWpBT4idk5gv4ZACwlpiBuKeWEbiXyVJhJrIeVoseKw6DzAAJY2e/CuR2lCiaH9ntazDGKnOJ/kcZKLF12TwFmCNf9UPu+ObyBo7WVPxQxOg1y1gIdALJrjrSGBeKBiFr84Cb6jtPwZTETYHB9JmmdPPe28QITZtwC//0vaySKRF6Z7zOM7pYvSeMIdfy4Ya+JS8x/6xwBVykImMIWWhmJ4xiQn5xvAeMm8qwRT3++LD947cTtb+NQnTUQ3JakJHgVlgOw==
    ApiRespGetBalanceSuccess:
      type: object
      properties:
        response:
          type: object
          properties:
            balance:
              type: integer
              example: 550000
        sign:
          type: string
    ApiRespGetTransactionSuccess:
      type: object
      properties:
        response:
          type: object
          properties:
            ref_id:
              type: integer
              example: 1234
            ext_id:
              type: string
              example: your_trx_id-001
            acc_holder_name:
              type: string
              example: Budiyanto
            acc_holder_number:
              type: string
              example: "123456789"
            bank_code:
              $ref: "#/components/schemas/BankCodeOptions"
            acc_email:
              type: string
              example: account@holder.com
            dest_name:
              type: string
              example: Budiyanto
            dest_number:
              type: string
              example: 0987654321
            amount:
              type: integer
              example: 1000000
            notes:
              type: string
              example: Your payment notes
            transaction_date:
              type: string
              example: "2018-09-09 00:00:00"
            status:
              type: string
              enum:
                - scheduled
                - success
                - rejected
                - rejected_by_bank
        sign:
          type: string
    ObjCashflow:
      type: object
      properties:
        response:
          allOf:
            - $ref: "#/components/schemas/ObjRespTemplateForList"
            - properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ObjCashflowDetail"
        sign:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    ObjCashflowDetail:
      type: object
      allOf:
        - type: object
          properties:
            trx_id:
              type: string
              example: DEP-1-1
            trx_date:
              type: string
              example: "2001-01-30 01:59:00"
            description:
              type: string
              example: this is description
            debit:
              type: string
              example: "5000.00"
            credit:
              type: string
              example: "5000.00"
            balance:
              type: string
              example: "0.00"
    ObjTransactionDetail:
      type: object
      allOf:
        - $ref: "#/components/schemas/ObjDefaultDatesAttr"
        - type: object
          properties:
            id:
              type: integer
              example: 1234
            ext_id:
              type: string
              example: your_trx_id-001
            acc_holder_name:
              type: string
              example: Budiyanto
            acc_holder_number:
              type: string
              example: "123456789"
            dest_name:
              type: string
              example: John Doe
            dest_number:
              type: string
              example: "123456789"
            notes:
              type: string
              example: your payment notes
            amount:
              type: integer
              example: 1700
        - $ref: "#/components/schemas/ObjItems"
    ObjGeneralBankName:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          type: object
          properties:
            account_number:
              type: string
              example: "123456789"
            account_name:
              type: string
              example: "Bank Account Name"
            bank_name:
              type: string
              example: "Bank Source Name"
    ApiRespGetMerchantDetailSuccess:
      type: object
      properties:
        response_code:
          $ref: "#/components/schemas/ObjSuccessRC"
        payload:
          $ref: "#/components/schemas/ObjMerchantExtend"
        sign:
          type: string
          example: xxxxxxxxxxxxx
    ApiRespGetBankCodeDetailSuccess:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/ObjBankCode"
        sign:
          type: string
    ApiResponse:
      type: object
      properties:
        payload:
          type: object
        signature:
          type: string
    ApiResponse400:
      type: object
      properties:
        response_code:
          type: string
          description: Response code for invalid process
          example: "00-RC-0000"
        general_message:
          type: string
          description: Message for invalid process
          example: this is your invalid message
    ApiResponse404:
      type: object
      properties:
        response_code:
          type: string
          description: Response code for invalid process
          example: "00-RC-0000"
        general_message:
          type: string
          description: Message for not found
          example: This is your entity no found message
    ApiResponse200Delete:
      type: object
      properties:
        general_message:
          type: string
          description: Message for success delete
          example: ok
    ApiResponse422:
      type: object
      properties:
        response_code:
          type: string
          description: Response code for invalid process
          example: "00-RC-0000"
        general_message:
          type: string
          description: Message for invalid process
          example: this is your invalid message | invalid field
    ApiResponse429:
      type: object
      properties:
        response_code:
          type: string
          description: Response code for invalid process
          example: "00-RC-0000"
        general_message:
          type: string
          description: Message when limit exceeded
          example: Limit exceeded
    ApiResponse500:
      type: object
      properties:
        response_code:
          type: string
          example: "03-ERR-0001"
        general_message:
          type: string
          description: Message when Internal Server Has error
          example: internal server error
    DisburseCallbackNotification:
      type: object
      properties:
        payload:
          type: object
          properties:
            ext_id:
              type: string
              example: "123:my_trx_id-007"
            dest_no:
              type: string
              example: 081234567890
            status:
              type: string
              example: failed
            code:
              type: string
              example: CHANNEL_BLOCKED
        sign:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
externalDocs:
  url: https://sepulsa.github.io/disbursement