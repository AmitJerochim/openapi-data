openapi: 3.0.0

info:
  description: Windev Software Services - MOBILITE
  version: "1.0.0"
  title: Perceval Mobilité
  
tags:
  - name: Authentification
  - name: Données statiques
  - name: Agences
    description: Listes de données par agence
  - name: Absences clients
  - name: Absences intervenants
  - name: Clients
  - name: Intervenants
  - name: Prestations
  
servers:
  - url: 'http://{ip}:{port}/{CodeClient}/rest/api/v1'
    description: Connexion locale ou via VPN
    variables:
      ip:
        default: '127.0.0.1'
      port:
        default: '8081'
      CodeClient:
        default: 'PERCEVAL'
  - url: 'https://{adresse}:{port}/{CodeClient}/rest/api/v1'
    description: Connexion production client
    variables:
      adresse:
        default: '127.0.0.1'
      port:
        default: '8081'
      CodeClient:
        default: 'PERCEVAL'
  - url: >-
      https://{adrCli}.perceval.mon-application.fr/{CodeClient}/rest/api/v1
    description: Connexion production client via Cityzen
    variables:
      adrCli:
        default: ''
      CodeClient:
        default: ''
        
#components:
#  securitySchemes:
#    basicAuth:     # <-- arbitrary name for the security scheme
#      type: http
#      scheme: basic

paths:
  /authentification:
    post:
      tags:
        - Authentification
      operationId: Authentification
      description: >-
        Autehentification par identifiant / mot de passe pour récupération d'un
        token nécessaire pour tout autre appel au WS
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Basic Base64(Login:Mdp)'
        - in: header
          name: X-Tenant
          description: CodeClient
          required: true
          schema:
            type: string
        - in: header
          name: CLIENT-Ident
          description: Identifiant unique de l'utilisateur (id tablette)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token d'authentification (JWT)
          content:
            text/plain:
              schema:
                type: string
                example: 'ew0KImFsZyI6IkhTMjU2IiwNCiJ0eXAiOiJXRDIiDQp9.ew0KIm5hbWUiOiJOT01BREVAMDEyMzQiLA0KImlhdCI6IjE1NTU1MTQ1MTQiLA0KImV4cCI6IjE1NTU1MTYzMTQiDQp9.rBkLS2ZV371QmAExKzHbOH1BJUacJMXKLheLPUlVYSg='
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique' 
  /utilisateur/utilisateur-connecte:
    get:
      tags:
        - Authentification
      operationId: UtilisateurConnecté
      description: Données de l'utilisateur connecté / authentifié
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Bearer TOKEN'
      responses:
        '200':
          description: Token d'authentification (JWT)
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  nom:
                    type: string
                  login:
                    type: string
                  prenom:
                    type: string
                  photo:
                    type: string
                  droits:
                    type: string
                  services:
                    type: string
                  agences:
                    type: string
                  secteurs:
                    type: string
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique' 
  /prestation:
    post:
      tags:
        - Prestations
      operationId: PrestationAjoute
      description: Ajout d'une prestation
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Bearer TOKEN'
      requestBody:
        description: Données de la prestation
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrestationAjout'
      responses:
        '200':
          description: OK -> renvoie l'id de la prestation créée
          content:
            application/txt:
              schema:
                type: integer
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique' 
  /prestation/{PrestationId}:
    get:
      tags:
        - Prestations
      operationId: PrestationLire
      description: Lecture d'une prestation
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Bearer TOKEN'
        - in: path
          name: PrestationId
          description: identifiant de la tâche
          required: true
          schema:
            type: integer            
      responses:
        '200':
          description: Données de la prestation
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    id:
                      type: integer
                    datedebut:
                      type: string
                    datefin:
                      type: string
                    valide:
                      type: integer
                    couleurFond:
                      type: string
                    couleurTexte:
                      type: string
                    typeRubrique:
                      type: string
                    intervenant:
                      type: object
                      properties:
                        id:
                          type: string
                        nom:
                          type: string
                        prenom:
                          type: string
                        telephone:
                          type: string
                    client:
                      type: object
                      properties:
                        id:
                          type: string
                        nom:
                          type: string
                        prenom:
                          type: string
                        telephone:
                          type: string
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique' 
    put:
      tags:
        - Prestations
      operationId: PrestationModifier
      description: Modification d'une prestation
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Bearer TOKEN'
        - in: path
          name: PrestationId
          description: identifiant de la tâche
          required: true
          schema:
            type: integer  
      requestBody:
        description: Données de la prestation
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrestationModif'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique' 
    delete:
      tags:
        - Prestations
      operationId: PrestationSupprimer
      description: Suppression d'une prestation
      parameters:
        - in: header
          name: Authorization
          description: Authorisation basic
          required: true
          schema:
            type: string
            example: 'Bearer TOKEN'
        - in: path
          name: PrestationId
          description: identifiant de la tâche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AuthInvalide'
        '500':
          $ref: '#/components/responses/ErrerurCritique'           
components:
  responses:
    AuthInvalide:
      description: Authentification invalide
      content:
          application/json:
            schema:
              $ref: '#/components/schemas/Erreur'
    ErrerurCritique:
      description: Erreur interne / exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Erreur'
  schemas:
    Erreur:
      type: object
      required: 
      - "erreur"
      properties: 
        erreur: 
          required: 
          - "libelle"
          - "detail"
          properties: 
            libelle: 
              type: string
              example: "Erreur interne"
            detail: 
              type: string
              example: "Le variant n'est pas un objet."
    PrestationAjout:
      type: object
      properties: 
        datedebut:
          type: string
        datefin:
          type: string
        rubrique:
          type: object
          properties:
            id:
              type: string
        intervenant:
          type: object
          properties:
            id:
              type: string
        client:
          type: object
          properties:
            id:
              type: string
    PrestationModif:
      type: object
      properties: 
        id:
          type: integer
        datedebut:
          type: string
        datefin:
          type: string
        rubrique:
          type: object
          properties:
            id:
              type: string
        intervenant:
          type: object
          properties:
            id:
              type: string
        client:
          type: object
          properties:
            id:
              type: string
