{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "TMQuotes API Platform",
    "description" : "TMQuotes REST API Platform lets agents integrate with TMQuotes to get valid lists of plans and quotes to support various customer journeys. This could be anything from a chatbot flow to custom forms.\n\n[Jump to the endpoints](#/Browse%20Plans)\n\n## Understanding the APIs at a Glance\n\nThe 3 main categories of the platform: 1) Plans, 2) Quotes, and 3) Purchase (Future Release).\n\n### Browse Plans\n\nBuild inventory of available plans with  `/plans`. All plans are associated with a Plan Category. Within the Plan Category you'll find plans and plan details. The plan schema is the same for all categories.\n\n### Quotes\n\nWith trip details passed in the request, you can get a quote within a _plan category_ with `/quote/{Plan_Category}/`. Difference plan categories have different request body parameters.\n\n### Purchase\n\nToday, with `v1`,  a plan has a `purchase_form_link` attribute, which will take the user through the existing UI for your subdomain when they follow the link. The form UI is already developed. Customers will fill out the form, payment details are encrypted and sent to the insurance company for processing.\n\nIn the future, we will release APIs to purchase directly. The future API will allow you to customize the look and flow for your check out process.\n\n## Getting Started with Quotes\n\nCustomer quotes is the workhorse of your business. Customers will need to supply details about travelers and their trips. Different types of insurance, called _plan categories_, have different types of required inputs in the request body. You'll get a quote object response.\n\nThe _Quote Object_ will have a unique id per quote request. It will include the category, trip details passed earlier, timestamps and _plan items_.  Each _ plan item_ will have descriptions, enumeration values for coverage and deductible amounts in US Dollars (USD), options, restrictions, and premiums. Premiums are the cost of a plan for a requested trip of travelers, in USD. [Try it out!](#/Quotes)\n\n### Working with policy coverage limits and deductibles.\nThe plan maximum coverage limit, `policy_max_options`, is the main object used to get a premium. This array contains maximum coverage objects with a nested array of deductible options for each available `max_coverage` object. Not all deductible options are available in all maximum coverage amounts, even for the same plan. Deductibles can vary in availability for each maximum coverage amount. You need to display appropriate deductible choices to customers based on the policy maximum coverage selected. [See the MaxCoverage_Response schema](#MaxCoverage_Response) for additional clarity.\n\n### Workflow\n\n1. Collect data from the customer in the request body\n2. `POST` the required data collected from a customer with `/quote/{category}`.\n3. Parse the response for your UI\n4. Display quoted items.\n\n###  Update a single _Quote Plan Item_ with new policy max coverage or deductible\n\nYou can update a single item with new policy max and or deductible with `/quote/{Quote_ID}/{Plan_ID}`. This is a quick response for a new quote for just the plan passed. You will get a new quote id.\n\n###  Special Plans and Options\n\nSome plans have additional required options to be selected. Some plans will have additional options available as an add- on.  In [QuotePlanItemResponse](#QuotePlanItemResponse) is `plan_options` array containing `pre_existing`, if available. In the future there will be additional options. \n\nIf the customer _must_ also select a `pre_existing` item, the object will contain `\"required\": true`, otherwise any option here is not required (`\"required\": false`). `pre_existing` will have one or more objects to choose from, which are dependent upon `selected_policy_max` and `selected_deductible` . `selected_pre_existing` notes the default selected option, if required. \n\nAs of v1, special plans are INF Elite and INF Premier plans. INF Advantage has an optional add-on for acute onset of pre-existing conditions. \n",
    "termsOfService" : "https://www.tmquotes.com/terms/",
    "version" : "1.0.0-oas3",
    "contact" : {
      "name" : "API Support",
      "email" : "apiinfo@tmquotes.com"
    }
  },
  "servers" : [ {
    "url" : "https://beta-api.tmquotes.com/api/v1"
  } ],
  "security" : [ {
    "accessCode" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "Browse Plans",
    "description" : "Useful to build browsing workflows. Responses will have information on insurance plan listings, categories, plan and details"
  }, {
    "name" : "Quotes",
    "description" : "The workhorse of the platform, used to get prices for a policy for specified trip details."
  }, {
    "name" : "Purchase",
    "description" : "Future APIs for purchasing a policy. Prior to release, purchase will happen via existing UI models like the sub-domain."
  }, {
    "name" : "Resources",
    "description" : "Supporting information to access to quoting and plans"
  }, {
    "name" : "Other"
  } ],
  "paths" : {
    "/plans" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/pageParam"
      }, {
        "$ref" : "#/components/parameters/perpageParam"
      } ],
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List insurance plan categories.",
        "description" : "Insurance plans are classified into plan categories. Retreives a list of categories which can be used to retrieve the plans in those categories.",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoriesResponse"
                },
                "example" : [ {
                  "id" : "visitor",
                  "title" : "Visitor Insurance"
                }, {
                  "id" : "student",
                  "title" : "Student Insurance"
                } ]
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/visitor" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List travel medical insurance plans for international travelers visiting the United States of America.",
        "description" : "Travel medical insurance for international travelers going to the United States from other countries. An International Health Insurance policy will protect against medical and travel emergencies while a traveler is away from their home country.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageParam"
        }, {
          "$ref" : "#/components/parameters/perpageParam"
        }, {
          "$ref" : "#/components/parameters/orderParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlansResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/student" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List student health insurance plans",
        "description" : "Student health insurance plans offer comprehensive coverage for international students in the U.S. and study-abroad students around the world while they are enrolled in a college or university in the United States.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/immigrant" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List health insurance plans for US green card holders",
        "description" : "Green card health insurance plans provides temporary medical coverage for US green card holders visiting or living the in the US and do not qualify for individual regular domestic insurance or other govt or private domestic health insurance in the US.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/j1-visa" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List health insurance plans for J1 visa and J2 visa holders",
        "description" : "J1 Visa Insurance provides health insurance for J1 visa and J2 visa holders, entering the United States under exchange programs like au-pair, scholars, or researchers.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/schengen" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List health insurance plans for Schengen visa travelers",
        "description" : "Insurance plans valid in all Schengen countries with minimum coverage amount of EUR 30,000 and no deductible, as required by Schengen Visa.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/trip" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "List trip insurance plans",
        "description" : "A typical trip insurance policy covers travel and trip related incidents such as trip cancellation, trip interruption, trip delay, missed flight connection, baggage loss, and rental car coverage.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/plans/{Category}/{Plan_ID}" : {
      "get" : {
        "tags" : [ "Browse Plans" ],
        "summary" : "Get Plan Details by Plan ID",
        "description" : "Returns plan details for the selected plan.",
        "parameters" : [ {
          "name" : "Category",
          "in" : "path",
          "description" : "Insurance Category",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Plan_ID",
          "in" : "path",
          "description" : "ID of the selected plan",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote" : {
      "get" : {
        "tags" : [ "Quotes" ],
        "summary" : "List and search your existing quotes",
        "description" : "Retreive a list of all your quotes in the system",
        "parameters" : [ {
          "$ref" : "#/components/parameters/orderParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/{Quote_ID}" : {
      "get" : {
        "tags" : [ "Quotes" ],
        "summary" : "Get Quote by ID",
        "parameters" : [ {
          "name" : "Quote_ID",
          "in" : "path",
          "description" : "ID Of Quote",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/visitor" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New Visitor Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VisitorQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuoteResponse"
                },
                "example" : null
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/student" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New Student Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StudentQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/immigrant" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New Immigrant Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImmigrantQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/j1-visa" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New J1 Visa Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/J1VisaQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/schengen" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New Schengen Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchengenQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/trip" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "New Trip Quote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripQuoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quote/{Quote_ID}/{Plan_ID}" : {
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "Update Premium for Quoted Item",
        "parameters" : [ {
          "name" : "Quote_ID",
          "in" : "path",
          "description" : "ID Of Quote",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Plan_ID",
          "in" : "path",
          "description" : "ID Of the selected Plan",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QuotePremiumRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/resources/countries" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "List Countries",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/resources/states" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "List States",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/ping" : {
      "get" : {
        "tags" : [ "Other" ],
        "summary" : "Ping Service",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    },
    "schemas" : {
      "VisitorQuoteRequest" : {
        "title" : "Visitor Quote Request",
        "type" : "object",
        "properties" : {
          "coverage_area" : {
            "type" : "string",
            "description" : "The location where the travelers will be.",
            "example" : "usa-only",
            "enum" : [ "usa-only", "exc-usa", "inc-usa" ]
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "The start of the coverage period, generally the day travel starts from the home location.",
            "example" : "2020-06-12"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "The end of the coverage period, generally the day returned to the home location.",
            "example" : "2020-09-12"
          },
          "arrival_timeframe" : {
            "type" : "string",
            "description" : "Travel Period",
            "enum" : [ "yet", "less-3m", "less-6m", "less-12m", "less-18m", "greater-18m" ],
            "example" : "yet"
          },
          "is_living_in_usa" : {
            "type" : "boolean",
            "description" : "Living inside US",
            "example" : false
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/VisitorQuoteRequest_applicants"
            },
            "example" : [ {
              "age" : 65,
              "citizenship" : "non-us",
              "relation" : "primary"
            }, {
              "age" : 37,
              "citizenship" : "non-us",
              "relation" : "spouse"
            }, {
              "age" : 10,
              "citizenship" : "non-us",
              "relation" : "child"
            } ]
          }
        }
      },
      "ImmigrantQuoteRequest" : {
        "title" : "Immigrant Quote Request",
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "US State",
            "items" : {
              "$ref" : "#/components/parameters/stateParam"
            }
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage Begin Date"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage End Date"
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/ImmigrantQuoteRequest_applicants"
            }
          }
        }
      },
      "StudentQuoteRequest" : {
        "title" : "Student Quote Request",
        "type" : "object",
        "properties" : {
          "citizenship" : {
            "type" : "string",
            "enum" : [ "us", "non-us" ]
          },
          "state" : {
            "type" : "string",
            "description" : "US State",
            "items" : {
              "$ref" : "#/components/parameters/stateParam"
            }
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage Begin Date"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage End Date"
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/ImmigrantQuoteRequest_applicants"
            }
          }
        }
      },
      "J1VisaQuoteRequest" : {
        "title" : "J1 Visa Quote Request",
        "type" : "object",
        "properties" : {
          "visaType" : {
            "type" : "string",
            "enum" : [ "j1-education", "j1-au-pair", "j1-exchange_visitors", "j1-other" ]
          },
          "state" : {
            "type" : "string",
            "description" : "US State",
            "items" : {
              "$ref" : "#/components/parameters/stateParam"
            }
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage Begin Date"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage End Date"
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/ImmigrantQuoteRequest_applicants"
            }
          }
        }
      },
      "TripQuoteRequest" : {
        "title" : "Trip Quote Request",
        "type" : "object",
        "properties" : {
          "citizenship" : {
            "type" : "string",
            "enum" : [ "us", "non-us" ]
          },
          "state" : {
            "type" : "string",
            "description" : "US State",
            "items" : {
              "$ref" : "#/components/parameters/stateParam"
            }
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage Begin Date"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage End Date"
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/TripQuoteRequest_applicants"
            }
          }
        }
      },
      "SchengenQuoteRequest" : {
        "title" : "Schengen Quote Request",
        "type" : "object",
        "properties" : {
          "citizenship" : {
            "type" : "string",
            "enum" : [ "us", "non-us" ]
          },
          "coverage_area" : {
            "type" : "string",
            "description" : "Coverage Area",
            "enum" : [ "int+eur", "int+eur+us" ]
          },
          "coverage_start_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage Begin Date"
          },
          "coverage_end_date" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$",
            "type" : "string",
            "description" : "coverage End Date"
          },
          "applicants" : {
            "type" : "array",
            "description" : "Applicants",
            "items" : {
              "$ref" : "#/components/schemas/TripQuoteRequest_applicants"
            }
          }
        }
      },
      "QuotePremiumRequest" : {
        "title" : "Get New Premium for a quoted item",
        "type" : "object",
        "properties" : {
          "max_coverage" : {
            "type" : "integer",
            "description" : "Max Coverage Amount"
          },
          "deductible" : {
            "type" : "integer",
            "description" : "Deductible Amount"
          }
        }
      },
      "VisitorQuoteRequest_applicants" : {
        "type" : "object",
        "properties" : {
          "age" : {
            "type" : "integer"
          },
          "citizenship" : {
            "type" : "string",
            "enum" : [ "non-us", "us-resident" ]
          },
          "relation" : {
            "type" : "string",
            "enum" : [ "primary", "spouse", "child" ]
          }
        }
      },
      "ImmigrantQuoteRequest_applicants" : {
        "type" : "object",
        "properties" : {
          "age" : {
            "type" : "integer"
          },
          "relation" : {
            "type" : "string",
            "enum" : [ "primary", "spouse", "child" ]
          }
        }
      },
      "TripQuoteRequest_applicants" : {
        "type" : "object",
        "properties" : {
          "age" : {
            "type" : "integer"
          },
          "relation" : {
            "type" : "string",
            "enum" : [ "primary", "spouse", "child" ]
          },
          "tripCost" : {
            "type" : "integer"
          }
        }
      },
      "CategoriesResponse" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CategoryResponse"
            }
          }
        }
      },
      "CategoryResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        },
        "example" : {
          "id" : "visitor",
          "title" : "Visitor Insurance"
        }
      },
      "PlansResponse" : {
        "type" : "object",
        "properties" : {
          "plans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlanItemResponse"
            }
          }
        }
      },
      "PlanItemResponse" : {
        "type" : "object",
        "properties" : {
          "plan_id" : {
            "type" : "string",
            "example" : "inf-standard-inf",
            "description" : "Unique ID of the plan."
          },
          "plan_name" : {
            "type" : "string",
            "example" : "INF Standard",
            "description" : "Display Name of the plan"
          },
          "plan_type" : {
            "type" : "string",
            "example" : "limited",
            "description" : "The insurance type of the plan. This can be either comprehensive or limited."
          },
          "short_description" : {
            "type" : "string",
            "example" : "Travel Medical Insurance Plan for non US resident visiting the USA, Canada or Mexico.",
            "description" : "A short description of the plan."
          },
          "underwriter_name" : {
            "type" : "string",
            "example" : "Ace American Insurance Company",
            "description" : "The underwriter of the plan."
          },
          "administrator_name" : {
            "type" : "string",
            "example" : "INF Visitor Care",
            "description" : "The company that manages the plan."
          },
          "is_acute_onset" : {
            "type" : "boolean",
            "example" : false
          },
          "acute_onset_short_description" : {
            "type" : "string",
            "example" : ""
          },
          "is_renewable" : {
            "type" : "boolean",
            "example" : true
          },
          "renewable_short_description" : {
            "type" : "string",
            "example" : "The policy can be renewed before policy expires. $5 renewal fee applies for each renewal."
          },
          "renewable_display_name" : {
            "type" : "string",
            "example" : "Renewable"
          },
          "is_cancelable" : {
            "type" : "boolean",
            "example" : true
          },
          "cancelable_short_description" : {
            "type" : "string",
            "example" : "Full refund available only if cancelled before start date. A $25 cancellation fee applies"
          },
          "is_coverage_during_travel" : {
            "type" : "boolean",
            "example" : true
          },
          "coverage_during_travel_short_description" : {
            "type" : "string",
            "example" : "Medical coverage exists anywhere outside of the insured’s home country while on transit to the destination; as long as travel dates are included in the policy’s start date and end date."
          },
          "plan_features" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : "\"[\n \"Plan pays fixed amount per incident\",\n \"Coverage duration options between 30 and 360 days\",\n \"$0 co-pay Telemedicine\",\n \"Dental & Vision Discount Coverage\",\n \"PPO network\",\n \"Renewable and Cancelable\"\n]\"\n"
          },
          "max_coverage_period" : {
            "type" : "integer",
            "example" : 360
          },
          "max_coverage_period_type" : {
            "type" : "string",
            "enum" : [ "days" ]
          },
          "min_coverage_period" : {
            "type" : "integer",
            "example" : 40
          },
          "min_coverage_period_type" : {
            "type" : "string",
            "example" : "days"
          },
          "brochure_pdf_url" : {
            "type" : "string",
            "example" : "http://vcqa.dev.tmquotes.com/brochure/inf-standard-insurance-brochure.pdf"
          },
          "description_pdf_url" : {
            "type" : "string",
            "example" : "http://vcqa.dev.tmquotes.com/policydoc/inf-standard-insurance-policy-document.pdf"
          },
          "restricted_us_states" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "CA", "TX", "DC" ]
          },
          "restricted_citizenships" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "Japan", "Peru", "Iceland" ]
          },
          "restricted_mailing_countries" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "United Kindom", "Ireland", "Singapore" ]
          },
          "restricted_home_countries" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "USA", "Turkey" ]
          },
          "restricted_destination_countries" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "Fiji", "Bali", "Indonesia" ]
          },
          "purchase_form_url" : {
            "type" : "string",
            "example" : "http://vcqa.dev.tmquotes.com/visitor-insurance/infstandard/"
          }
        }
      },
      "QuoteResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique Quote ID per Request",
            "example" : "IaS1iNGi1qpvzVj"
          },
          "category" : {
            "type" : "string",
            "description" : "Insurance category of the quote",
            "example" : "visitor"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Timestamp when the quote was originally created",
            "example" : "2020-02-14T22:00:28+00:00"
          },
          "updated_at" : {
            "type" : "string",
            "description" : "Timestamp when the quote was updated with a new item",
            "example" : "2020-02-14T22:00:28+00:00"
          },
          "request" : {
            "$ref" : "#/components/schemas/VisitorQuoteRequest"
          },
          "items" : {
            "type" : "array",
            "description" : "Plan items including a premium, details, restrictions,  options.",
            "items" : {
              "$ref" : "#/components/schemas/QuotePlanItemResponse"
            }
          }
        }
      },
      "QuotePlanItemResponse" : {
        "type" : "object",
        "properties" : {
          "total_premium" : {
            "type" : "integer",
            "example" : 444.54
          },
          "primary_premium" : {
            "type" : "integer",
            "example" : 225.99
          },
          "spouse_premium" : {
            "type" : "integer",
            "example" : 117.18
          },
          "total_dependent_premium" : {
            "type" : "integer",
            "example" : 101.37
          },
          "dependent_premium" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "example" : [ 101.37 ]
          },
          "administrative_fees" : {
            "type" : "integer",
            "example" : 15
          },
          "policy_max_options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyMaxOptions_Response"
            }
          },
          "selected_deductible" : {
            "type" : "integer",
            "description" : "The selected deductible that the premium is based off of.",
            "example" : 250
          },
          "selected_policy_max" : {
            "type" : "integer",
            "description" : "The selected coverage that the premium is based off of.",
            "example" : 150000
          },
          "allOf" : {
            "$ref" : "#/components/schemas/PlanItemResponse"
          }
        }
      },
      "PolicyMaxOptions_Response" : {
        "description" : "Collection of policy coverage maximums. This is the total dollar amount in USD that a plan will pay out. Within the collection are valid `max_coverage` amounts and valid deductibles for those. Each deductible has two items: 1) an object with an integer of the deductible value and 2) a short description to be used as a display value.\n\nCustomers will need to see a choice of appropriate max_coverage and deductibles.\n\n```\n+-policy_max_options-----------------------------------------------------+\n|                                                                        |\n|  +---max_coverage-----------------------------------+                  |\n|  |   50000                                          |                  |\n|  |   deductible_options+-------------------------+  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |  |  deductible_id: 0                   |  |  |                  |\n|  |   |  |  deductible_short_description: $0   |  |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |                                           |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |  |  deductible_id: 50                  |  |  |                  |\n|  |   |  |  deductible_short_description: $50  |  |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |                                           |  |                  |\n|  |   +-------------------------------------------+  |                  |\n|  |                                                  |                  |\n|  +--------------------------------------------------+                  |\n|                                                                        |\n|  +---max_coverage-----------------------------------+                  |\n|  |   75000                                          |                  |\n|  |   deductible_options+-------------------------+  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |  |  deductible_id: 20                  |  |  |                  |\n|  |   |  |  deductible_short_description: \"$20\"|  |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |                                           |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |  |  deductible_id: 70                  |  |  |                  |\n|  |   |  |  deductible_short_description: \"$70\"|  |  |                  |\n|  |   |  +-------------------------------------+  |  |                  |\n|  |   |                                           |  |                  |\n|  |   +-------------------------------------------+  |                  |\n|  |                                                  |                  |\n|  +--------------------------------------------------+                  |\n|                                                                        |\n|                                                                        |\n+------------------------------------------------------------------------+\n```\n",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "max_coverage" : {
              "type" : "integer",
              "description" : "The maximum amount a policy will pay out.",
              "example" : 1000000
            },
            "deductible_options" : {
              "description" : "The deductible is the amount an insuree will need to pay before the insurance pays. The objects in this array are valid only for the `max_coverage` in this object.",
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "deductible_id" : {
                    "type" : "integer",
                    "description" : "The numeric value of the dedictible.",
                    "example" : 250
                  },
                  "deductible_short_description" : {
                    "type" : "string",
                    "description" : "The display value of the dedictible_id including the currency unit, \"$\".",
                    "example" : "$250"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters" : {
      "orderParam" : {
        "name" : "order_by",
        "in" : "query",
        "description" : "Sort the responses by this attribute of the response",
        "schema" : {
          "type" : "string"
        }
      },
      "sortParam" : {
        "name" : "sort_by",
        "in" : "query",
        "description" : "Direction of the sort based on attribute selected",
        "schema" : {
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }
      },
      "categoryParam" : {
        "name" : "category",
        "in" : "query",
        "description" : "Filter for a specific category of quote",
        "schema" : {
          "type" : "string"
        }
      },
      "creartParam" : {
        "name" : "created_start",
        "in" : "query",
        "description" : "Limits the results to quotes created after this date",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "creendParam" : {
        "name" : "created_end",
        "in" : "query",
        "description" : "Limits the results to quotes created before this date",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "upartParam" : {
        "name" : "updated_start",
        "in" : "query",
        "description" : "Limits the results to quotes updated after this date",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "upendParam" : {
        "name" : "updated_end",
        "in" : "query",
        "description" : "Limits the results to quotes updated before this date",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "pageParam" : {
        "name" : "page",
        "in" : "query",
        "description" : "Location of current results within the total results",
        "schema" : {
          "type" : "integer"
        }
      },
      "perpageParam" : {
        "name" : "per_page",
        "in" : "query",
        "description" : "Limits the number of items on a page",
        "schema" : {
          "type" : "integer"
        }
      },
      "stateParam" : {
        "name" : "states",
        "description" : "Valid state abbreviations",
        "in" : "header",
        "schema" : {
          "enum" : [ "AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UM", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY" ]
        }
      }
    }
  }
}