{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/LOG-NET/exceptions/1.0.1"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/LOG-NET/api/1.0.1"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/LOG-NET/api/1.0.1"
  } ],
  "info" : {
    "description" : "LOG-NET Exceptions API",
    "version" : "1.0.1",
    "title" : "Exceptions API",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/api/exceptions" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "Retrieves exceptions",
        "operationId" : "searchExceptions",
        "description" : "By passing in the appropriate options, you can search for exceptions in the system",
        "parameters" : [ {
          "in" : "query",
          "name" : "search",
          "description" : "Pass an optional search string for looking up exceptions",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "Number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "Maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Exception"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "Adds an exception",
        "operationId" : "addException",
        "description" : "Attaches an exception to one or more objects in the LOG-NET system",
        "responses" : {
          "201" : {
            "description" : "Exception created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Exception"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "417" : {
            "description" : "Object not found in system"
          }
        },
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Exception"
              }
            }
          },
          "description" : "Exception to add"
        }
      },
      "put" : {
        "tags" : [ "developers" ],
        "summary" : "Updates an existing exception",
        "operationId" : "updateException",
        "description" : "Updates an existing exception in the system",
        "responses" : {
          "201" : {
            "description" : "Exception updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Exception"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "417" : {
            "description" : "Exception not found in system"
          }
        },
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Exception"
              }
            }
          },
          "description" : "Exception to update"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Exception" : {
        "type" : "object",
        "required" : [ "exception_id", "customer_id", "exception_status", "exception_description", "status_date", "exception_code", "object_type", "object_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "lognet-id",
            "example" : "ABCXYZ0000012345"
          },
          "customer_id" : {
            "type" : "string",
            "example" : "ABC"
          },
          "exception_status" : {
            "type" : "string",
            "enum" : [ "ACCEPTED", "CANCELLED", "CLAIM", "CLAIM FILED", "DECLINED", "DENIED", "INVESTIGATING", "OPEN", "PENDING", "RESOLVED" ],
            "example" : "OPEN"
          },
          "exception_description" : {
            "type" : "string",
            "example" : "Shipment damaged"
          },
          "status_date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-04-01T09:12:33.001Z"
          },
          "exception_code" : {
            "type" : "string",
            "enum" : [ "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11", "A12", "A13", "A14", "A15", "A16", "A17", "A18", "A19", "A20", "A21", "A22", "A23", "A24", "A25", "A26", "A27", "A28", "A29", "A30", "A31", "A32", "A33", "BITOSI", "BOOKDST", "BOOKPOL", "CARGO_IN", "CKDD", "CNTMSFRL", "CNTRCL", "CNTROLL", "CONGEST", "CTRUPD", "DELAY_DE", "DELAY_RL", "DELAY_TR", "DEM_COST", "DEM_FREE", "DET_COST", "DET_FREE", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08", "E08U", "E09", "E09H", "E09M", "E09U", "E10", "E11", "E12", "E13", "E14", "E15", "E16", "E17", "E18", "E19", "E20", "E21", "E22", "E23", "E24", "E25", "E26", "E27", "EARLYBKG", "EDIADDED", "EQP_ISS", "EQP_ISSU", "EQPCHNG", "ETA_CHNG", "ETD_CHNG", "HZRD", "IDD_CHNG", "INPROCBI", "INPROCBO", "INPROCCT", "INPROCOI", "INPROCOR", "INPROCSH", "ISO", "MVBSD", "OVER", "OVERBKG", "PORT_FRE", "PORT_STO", "RATE_FIL", "SHMODE_C", "SHMODE_R", "SHP_APPR", "SPACE", "SPLIT_PO", "UNDER", "UNDERBKG", "UPDBKG", "VGMERROR", "VSL_CUT", "VSL_DELA", "VSL_EAR", "VSLBKG", "WIHI", "WRONG_SH" ],
            "example" : "OVER"
          },
          "object_type" : {
            "oneOf" : [ {
              "type" : "string",
              "enum" : [ "ORD", "BKG", "SHP", "CTR" ],
              "example" : "CTR"
            }, {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ORD", "BKG", "SHP", "CTR" ],
                "example" : [ "CTR", "CTR" ]
              }
            } ]
          },
          "object_id" : {
            "oneOf" : [ {
              "type" : "string",
              "example" : "HDMU2771952"
            }, {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            } ],
            "example" : [ "HDMU2771952", "EISU9948812" ]
          },
          "exception_comment" : {
            "type" : "string",
            "example" : "Comment about the exception"
          },
          "exception_responsible" : {
            "type" : "string",
            "example" : "Carrier"
          },
          "charge_back" : {
            "type" : "string",
            "enum" : [ "Y", "N" ],
            "example" : "Y"
          },
          "quantity_impact" : {
            "type" : "number",
            "example" : 100
          },
          "quantity_qualifier" : {
            "type" : "string",
            "example" : "EA"
          },
          "transit_impact" : {
            "type" : "number",
            "example" : 3
          },
          "transit_unit" : {
            "type" : "string",
            "example" : "DAY"
          },
          "cost_impact" : {
            "type" : "number",
            "example" : 100
          },
          "cost_currency" : {
            "type" : "string",
            "example" : "EUR"
          },
          "cost_exchange_rate" : {
            "type" : "number",
            "example" : "0.75",
            "description" : "Multiply cost_impact by cost_exchange_rate to obtain cost in USD"
          },
          "external_id" : {
            "type" : "string",
            "description" : "Identifier for this record in an external system, such as ServiceNow",
            "example" : "fc0df5a4-895d-4d1e-8b24-fd077031de83"
          }
        }
      }
    }
  }
}