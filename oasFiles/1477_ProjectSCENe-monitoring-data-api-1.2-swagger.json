{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://scene.azure-api.net/v1.2"
  } ],
  "info" : {
    "version" : "1.2",
    "title" : "Project SCENe Data",
    "description" : "Provides access to monitoring data from [Project SCENe](http://projectscene.uk). Access is granted via subscription key that can be requested from the [University of Nottingham API Portal](https://scene.developer.azure-api.net/). By using the Project SCENe API, you agree to acknowledge the project in any use or publication of the data or derivatives and to respond to any requests for a short survey as to how the data has been used. To cite this data source please use the the following reference: Shipman, R. and Gillott, M., 2019. SCENe Things: IoT-based Monitoring of a Community Energy Scheme. Future Cities and Environment, 5(1), p.6. DOI: http://doi.org/10.5334/fce.64",
    "contact" : {
      "email" : "info@projectscene.uk"
    }
  },
  "tags" : [ {
    "name" : "homes",
    "description" : "Information about participating properties"
  }, {
    "name" : "telemetry",
    "description" : "Data received from sensors deployed in participants homes"
  }, {
    "name" : "weather",
    "description" : "Data received from the on-site weather station"
  }, {
    "name" : "community",
    "description" : "Data received from community assets such as solar PV and the battery"
  } ],
  "paths" : {
    "/homes" : {
      "get" : {
        "tags" : [ "homes" ],
        "description" : "Details of participating properties returned by the query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/propertyParam"
        }, {
          "in" : "query",
          "description" : "Include only properties with the given number of bedrooms",
          "name" : "bedrooms",
          "schema" : {
            "type" : "number"
          }
        }, {
          "in" : "query",
          "description" : "Include only properties with the given number of floors",
          "name" : "floors",
          "schema" : {
            "type" : "number"
          }
        }, {
          "in" : "query",
          "description" : "Include only properties of the given type",
          "name" : "type",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing all properties matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HomesData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/homes/devices" : {
      "get" : {
        "tags" : [ "homes" ],
        "description" : "All active devices matching the supplied query. Use of the history parameter includes all removed devices.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/propertyParam"
        }, {
          "$ref" : "#/components/parameters/roleParam"
        }, {
          "$ref" : "#/components/parameters/circuitParam"
        }, {
          "$ref" : "#/components/parameters/roomParam"
        }, {
          "in" : "query",
          "name" : "history",
          "description" : "Include devices that have now been removed",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing all the devices matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/homes/accounts" : {
      "get" : {
        "tags" : [ "homes" ],
        "description" : "Returns all active account IDs matching the supplied query. Use of the history parameter includes all previous account IDs. A new account ID is created for a property when the occupancy changes.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/propertyParam"
        }, {
          "$ref" : "#/components/parameters/accountParam"
        }, {
          "in" : "query",
          "name" : "history",
          "description" : "Include previous accounts at this property",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing all the accounts matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AccountData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/telemetry" : {
      "get" : {
        "tags" : [ "telemetry" ],
        "description" : "Returns telemetry data from participating properties matching the supplied parameters.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/roleParam"
        }, {
          "$ref" : "#/components/parameters/deviceParam"
        }, {
          "$ref" : "#/components/parameters/propertyParam"
        }, {
          "$ref" : "#/components/parameters/accountParam"
        }, {
          "$ref" : "#/components/parameters/floorParam"
        }, {
          "$ref" : "#/components/parameters/roomParam"
        }, {
          "$ref" : "#/components/parameters/circuitParam"
        }, {
          "$ref" : "#/components/parameters/startParam"
        }, {
          "$ref" : "#/components/parameters/endParam"
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing telemetry data objects matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TelemetryData"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error message",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Start and end timestamps must be used in conjunction with another parameter."
                }
              }
            }
          }
        }
      }
    },
    "/weather" : {
      "get" : {
        "tags" : [ "weather" ],
        "description" : "Returns sensor data from the on-site weather station",
        "parameters" : [ {
          "$ref" : "#/components/parameters/startParam"
        }, {
          "$ref" : "#/components/parameters/endParam"
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing weather data objects matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WeatherData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/community" : {
      "get" : {
        "tags" : [ "community" ],
        "description" : "Returns data from community assets including the battery and solar PV generation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/startParam"
        }, {
          "$ref" : "#/components/parameters/endParam"
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "in" : "query",
          "description" : "Output results to a CSV file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing community data objects matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommunityData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/community/razon" : {
      "get" : {
        "tags" : [ "community" ],
        "description" : "Returns data from the on-site solar monitor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/startParam"
        }, {
          "$ref" : "#/components/parameters/endParam"
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "in" : "query",
          "description" : "Output results to a file",
          "name" : "file",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array containing solar monitoring data objects matching the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RazonData"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "roleParam" : {
        "in" : "query",
        "name" : "role",
        "description" : "the role of the required devices",
        "schema" : {
          "type" : "string",
          "enum" : [ "temperature", "humidity", "co2", "motion", "power", "energy" ]
        }
      },
      "deviceParam" : {
        "in" : "query",
        "name" : "device",
        "description" : "ID of the device to return data for as provided by the /homes/devices endpoint",
        "schema" : {
          "type" : "string"
        }
      },
      "propertyParam" : {
        "in" : "query",
        "name" : "property",
        "description" : "ID of the property to return data for",
        "schema" : {
          "type" : "string"
        }
      },
      "accountParam" : {
        "in" : "query",
        "name" : "account",
        "description" : "ID of the account to return data for",
        "schema" : {
          "type" : "string"
        }
      },
      "floorParam" : {
        "in" : "query",
        "name" : "floor",
        "description" : "Return data only from devices on this floor",
        "schema" : {
          "type" : "string"
        }
      },
      "roomParam" : {
        "in" : "query",
        "name" : "room",
        "description" : "Return data only from devices in this room",
        "schema" : {
          "type" : "string"
        }
      },
      "circuitParam" : {
        "in" : "query",
        "name" : "circuit",
        "description" : "Return data only from this circuit ID",
        "schema" : {
          "type" : "string"
        }
      },
      "startParam" : {
        "in" : "query",
        "name" : "start",
        "description" : "Return data with a timestamp later than this ISO 8601 formatted datetime",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "endParam" : {
        "in" : "query",
        "name" : "end",
        "description" : "Return data with a timestamp earlier than this ISO 8601 formatted datetime",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "limitParam" : {
        "in" : "query",
        "description" : "maximum number of data objects to retrieve in reverse chronological order. If not specified a limit of 100 is used. A maximum 10,000 records are retrievable from any 1 query. If your query returns more records than this it must be split into finer-grained queries.",
        "name" : "limit",
        "schema" : {
          "type" : "number",
          "default" : 100
        },
        "example" : 10
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "query",
        "name" : "subscription-key"
      }
    },
    "schemas" : {
      "DeviceData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "0182ed4f"
          },
          "property" : {
            "type" : "string",
            "example" : "tb-0006"
          },
          "model" : {
            "type" : "string",
            "example" : "Mini TRH"
          },
          "location" : {
            "oneOf" : [ {
              "type" : "object",
              "properties" : {
                "floor" : {
                  "type" : "string",
                  "enum" : [ 1, 2, 3 ]
                },
                "room" : {
                  "type" : "string",
                  "enum" : [ "living room", "dining room", "bedroom", "hall", "landing" ]
                }
              },
              "example" : {
                "floor" : "1",
                "room" : "dining room"
              },
              "description" : "Physical location of the device in the property. Not present for power and energy data."
            }, {
              "type" : "object",
              "description" : "details of the circuit being monitored",
              "properties" : {
                "circuit" : {
                  "type" : "string",
                  "enum" : [ "total", "oven", "hob", "kitchen", "lights1", "lights2", "lights3", "lights4", "sockets1", "sockets2", "sockets3", "sockets4", "thermalCH", "thermalDHW" ],
                  "example" : "total",
                  "description" : "The specific circuit or sub-circuit data was received from. Could be an electric or thermal circuit measured using a heat meter   "
                }
              }
            } ],
            "description" : "the physical location of the deployed sensor, this may be a floor and room or a circuit for power and energy sensors",
            "example" : {
              "floor" : "1",
              "room" : "dining room"
            }
          },
          "roles" : {
            "type" : "object",
            "anyOf" : [ {
              "type" : "string",
              "enum" : [ "celcius", "farenheit" ],
              "default" : "celcius",
              "description" : "for temperatures returned by Evohome devices, the current units are included within the status parmeter"
            }, {
              "type" : "string",
              "enum" : [ "%" ],
              "default" : "%"
            }, {
              "type" : "string",
              "enum" : [ "ppm" ],
              "default" : "ppm"
            }, {
              "type" : "string",
              "enum" : [ "binary" ],
              "default" : "binary"
            }, {
              "type" : "string",
              "enum" : [ "W" ],
              "default" : "W"
            }, {
              "type" : "string",
              "enum" : [ "Wh" ],
              "default" : "Wh"
            } ],
            "description" : "a list of roles of this device and their units",
            "example" : {
              "temperature" : "celcius",
              "humidity" : "%"
            }
          },
          "added" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "when the device was commissioned in this property"
          },
          "removed" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "when the device was removed from the property. Active devices have a null value",
            "nullable" : true,
            "example" : null
          }
        }
      },
      "AccountData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "showHome"
          },
          "property" : {
            "type" : "string",
            "example" : "tb-0006"
          },
          "from" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "when the account became active for this property"
          },
          "to" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "when the account was removed from the property. Active accounts have a null value",
            "nullable" : true,
            "example" : null
          }
        }
      },
      "HomesData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "the unique ID of the property",
            "example" : 879328
          },
          "type" : {
            "type" : "string",
            "description" : "the type of the property as defined in the development brochure",
            "example" : "2",
            "enum" : [ 2, 3, "3XL", 4, 5, 6, 7, 8, 9, 10, "apartment", "duplex" ]
          },
          "bedrooms" : {
            "type" : "integer",
            "description" : "number of bedrooms in the property",
            "example" : 3,
            "minimum" : 1,
            "maximum" : 5
          },
          "floors" : {
            "type" : "integer",
            "description" : "number of floors in the property",
            "example" : 3,
            "minimum" : 1,
            "maximum" : 4
          }
        }
      },
      "TelemetryData" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "type" : "string",
            "description" : "the unique ID of the property",
            "example" : "tb-0006"
          },
          "accountId" : {
            "type" : "string",
            "description" : "the unique ID of the account that was active in the property at the time the telemetry data was received",
            "example" : "showHome"
          },
          "deviceId" : {
            "type" : "string",
            "description" : "the unique ID of the device",
            "example" : "0182ed4f"
          },
          "data" : {
            "oneOf" : [ {
              "type" : "object",
              "properties" : {
                "temperature" : {
                  "type" : "number"
                },
                "humidity" : {
                  "type" : "number"
                }
              },
              "example" : {
                "temperature" : 18.4,
                "humidity" : 53.5
              }
            }, {
              "type" : "object",
              "properties" : {
                "temperature" : {
                  "type" : "number"
                },
                "humidity" : {
                  "type" : "number"
                },
                "co2" : {
                  "type" : "number"
                }
              },
              "example" : {
                "temperature" : 18.4,
                "humidity" : 53.5,
                "co2" : 570
              }
            }, {
              "type" : "object",
              "properties" : {
                "motion" : {
                  "type" : "number",
                  "minimum" : 1,
                  "maximum" : 1
                }
              }
            }, {
              "type" : "object",
              "properties" : {
                "energy" : {
                  "type" : "number"
                }
              },
              "example" : {
                "energy" : 27100
              }
            }, {
              "type" : "object",
              "properties" : {
                "power" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "power" : {
                        "type" : "number"
                      },
                      "time" : {
                        "type" : "string",
                        "format" : "date-time"
                      }
                    }
                  }
                },
                "energy" : {
                  "type" : "number"
                }
              },
              "example" : {
                "power" : 44,
                "energy" : 56735
              }
            }, {
              "type" : "object",
              "properties" : {
                "temperature" : {
                  "type" : "number"
                },
                "Units" : {
                  "type" : "string",
                  "enum" : [ "C", "F" ]
                }
              }
            } ],
            "description" : "the telemetry data received from the device. Data items returned are defined in the roles object in the /homes/devices endpoint",
            "example" : {
              "temperature" : 18.4,
              "humidity" : 53.5
            }
          },
          "received" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "timestamp of when the telemetry data was received"
          }
        }
      },
      "WeatherData" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "the unique ID of the device",
            "example" : "weatherStation"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "windSpeed" : {
                "type" : "number",
                "description" : "In m/s"
              },
              "windVane" : {
                "type" : "number",
                "description" : "Wind direction in degrees, 360 is North"
              },
              "rainGauge" : {
                "type" : "number",
                "description" : "Rain fall in mm"
              },
              "outdoorTemperature" : {
                "type" : "number",
                "description" : "In degrees Celcius"
              },
              "outdoorHumidity" : {
                "type" : "number",
                "description" : "Relative humidity in %"
              }
            },
            "example" : {
              "windSpeed" : 3.1,
              "windVane" : 230,
              "rainGauge" : 2.3,
              "outdoorTemperature" : 8.4,
              "outdoorHumidity" : 76.5
            }
          },
          "received" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "timestamp of when the weather data was received"
          }
        }
      },
      "CommunityData" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "the unique ID of the device",
            "example" : "energycentre"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "pv_active_power" : {
                "type" : "number",
                "description" : "In kW"
              },
              "pv_cumulative_energy" : {
                "type" : "number",
                "description" : "Cumulative energy generated from the PV in kWh"
              },
              "kgC02e_cumulative" : {
                "type" : "number",
                "description" : "Cumulative carbon emissions savings from PV generation"
              },
              "active_power_exporting" : {
                "type" : "number",
                "description" : "Current power being exported to the grid in kW"
              },
              "active_power_importing" : {
                "type" : "number",
                "description" : "Current power being imported from the grid in kW"
              },
              "battery_state" : {
                "type" : "string",
                "description" : "Current status of the battery,",
                "enum" : [ "Charge", "Drain", "Idle" ]
              },
              "cumulative_energy_exported" : {
                "type" : "number",
                "description" : "Cumulative energy exported to the grid in kWh"
              },
              "cumulative_energy_imported" : {
                "type" : "number",
                "description" : "Cumulative energy imported from the grid in kWh"
              },
              "battery_active_power" : {
                "type" : "number",
                "description" : "power flow draining from (postive number) or charging (negative number) the battery in kW"
              },
              "battery_soc" : {
                "type" : "number",
                "description" : "State of charge of the battery as a % of total capacity"
              }
            },
            "example" : {
              "pv_active_power" : 0.86,
              "pv_cumulative_energy" : 164123.34,
              "kgc02e_cumulative" : 57699.2,
              "active_power_exporting" : 0,
              "active_power_importing" : 496.5,
              "battery_state" : "Charge",
              "cumulative_energy_exported" : 310818.5,
              "cumulative_energy_imported" : 176398.7,
              "battery_active_power" : 500.5,
              "battery_soc" : 85.4
            }
          },
          "received" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "timestamp of when the community data was received"
          }
        }
      },
      "RazonData" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "the unique ID of the device",
            "example" : "razon"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "solar_azimuth" : {
                "type" : "number",
                "description" : "Solar azimuth in degrees at end of averaging interval"
              },
              "solar_zenith" : {
                "type" : "number",
                "description" : "Solar zenith in degrees at end of averaging interval"
              },
              "irr_diffuse" : {
                "type" : "number",
                "description" : "Mean diffuse irradiance in W/m2"
              },
              "irr_direct" : {
                "type" : "number",
                "description" : "Mean direct irradiance in W/m2"
              },
              "irr_global" : {
                "type" : "number",
                "description" : "Mean global irradiance in W/m2"
              },
              "gloabl_sum" : {
                "type" : "number",
                "description" : "Global sum in kWh/m2 of this day"
              },
              "sunshine_duration" : {
                "type" : "number",
                "description" : "Sunshine duration in hours of this day"
              }
            },
            "example" : {
              "solar_azimuth" : 222.6348,
              "solar_zenith" : 45.8891,
              "irr_diffuse" : 94,
              "irr_direct" : 0,
              "irr_global" : 94,
              "global_sum" : 0.9583,
              "sunshine_duration" : 0.0019
            }
          },
          "received" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "timestamp of when the solar monitoring data was received"
          }
        }
      }
    }
  },
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ]
}