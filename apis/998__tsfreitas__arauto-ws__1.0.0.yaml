--
openapi: 3.0.1
info:
  title: Arauto WS
  description: |
    API de integração com os recursos da AWS
  version: 1.0.0
tags:
- name: jobs
  description: Operações para execução e monitoração de jobs
- name: files
  description: Operações de ingestão de arquivos
- name: default
  description: Not Implemented endpoints
paths:
  /files/upload:
    post:
      tags:
      - files
      summary: Gera URL assinadas para upload
      description: Cria uma URL assinada para upload de aruqivos na área não publicada
        da ingestão
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UnpublishedFile'
        required: true
      responses:
        400:
          description: Erros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpublishedFile'
  /files/unpublished:
    get:
      tags:
      - files
      summary: Lista todos os arquivos ainda não publicados
      description: Lista todos os arquivos na área não publicada da ingestão
      responses:
        200:
          description: Lista de arquivos não publicados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnpublishedFile'
  /files/published:
    get:
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRawFile'
  /files/published/{fileName}:
    get:
      parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawFile'
    head:
      parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: No Content
  /files/unpublished/publish:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTempFile'
      responses:
        201:
          description: Created
  /files/unpublished/{operator}/{clientGroup}/{client}/{type}/{fileName}:
    get:
      tags:
      - files
      summary: Exibe o conteúdo do arquivo não publicado
      description: Exibe ou faz download do arquivo não publicado (dependendo do Content
        Type)
      parameters:
      - name: client
        in: path
        description: Client Name
        required: true
        schema:
          type: string
        example: something
      - name: clientGroup
        in: path
        description: ClientGroupName Name
        required: true
        schema:
          type: string
        example: something
      - name: fileName
        in: path
        description: The file name
        required: true
        schema:
          type: string
        example: cad_270982.txt
      - name: operator
        in: path
        description: Operator Name
        required: true
        schema:
          type: string
        example: unimed
      - name: type
        in: path
        description: File Type
        required: true
        schema:
          type: string
        example: cadastro
      responses:
        404:
          description: Not Found
        200:
          description: File content
    delete:
      tags:
      - files
      summary: Remove um arquivo não publicado
      description: Remove um arquivo não publicado da área não publicada
      parameters:
      - name: client
        in: path
        description: Client Name
        required: true
        schema:
          type: string
        example: something
      - name: clientGroup
        in: path
        description: ClientGroupName Name
        required: true
        schema:
          type: string
        example: something
      - name: fileName
        in: path
        description: The file name
        required: true
        schema:
          type: string
        example: cad_270982.txt
      - name: operator
        in: path
        description: Operator Name
        required: true
        schema:
          type: string
        example: unimed
      - name: type
        in: path
        description: File Type
        required: true
        schema:
          type: string
        example: cadastro
      responses:
        404:
          description: Not Found
        204:
          description: Arquivo deletado
  '/jobs/{jobId}':
    get:
      tags:
        - jobs
      summary: Recupera o status do job
      description: Recupera o status da execução do job
      parameters:
        - name: jobId
          in: path
          description: O id do Job
          required: true
          schema:
            type: string
          example: 3b33d21c-e490-4a95-941d-4a6a0366d319
      responses:
        '200':
          description: The job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionStatus'
        '404':
          description: Not Found. The job id does not exist
  /jobs/{jobName}:
    post:
      tags:
      - jobs
      summary: Executa um job
      description: Inicia a execução de um job de Data Science
      parameters:
      - name: jobName
        in: path
        description: O nome do job a ser executado
        required: true
        schema:
          type: string
        example: busybox
      requestBody:
        description: Parametros e controle de execução do job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobExecutionRequest'
        required: true
      responses:
        400:
          description: Bad Request. The job body is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found. The job name does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        202:
          description: Accepted. The job was started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionStatus'
components:
  schemas:
    JobExecutionStatus:
      description: Job execution status
      required:
        - jobId
      type: object
      properties:
        jobId:
          description: The job execution id
          type: string
          example: 3b33d21c-e490-4a95-941d-4a6a0366d319
        jobName:
          description: >-
            The job execution name. It will be the executionId of the request or
            an UUID code 
          type: string
          example: 3b33d21c-e490-4a95-941d-4a6a0366d319
        parameters:
          allOf:
            - $ref: '#/components/schemas/MapStringString'
            - description: Parameters sent to the job
        status:
          description: The job execution status
          enum:
            - REQUESTED
            - SUBMITTED
            - PENDING
            - RUNNABLE
            - STARTING
            - RUNNING
            - SUCCEEDED
            - FAILED
          type: string
    JobExecutionRequest:
      description: Parametros e controle de execução do job
      type: object
      properties:
        executionId:
          description: id para rastreio da execução
          type: string
        parameters:
          allOf:
          - $ref: '#/components/schemas/MapStringString'
          - description: Parametros a serem passados para o job
        priority:
          allOf:
          - $ref: '#/components/schemas/PRIORITY'
          - description: prioridade da execução do job. Usado apenas quando houver
              muita concorrência de carga
    MapStringString:
      type: object
      additionalProperties:
        type: string
    PRIORITY:
      enum:
      - DEFAULT
      - HIGH
      - LOW
      type: string
    UnpublishedFile:
      description: File on upublished area
      required:
      - fileName
      - operator
      - type
      type: object
      properties:
        client:
          pattern: \S
          type: string
          nullable: false
        clientGroup:
          pattern: \S
          type: string
          nullable: false
        fileName:
          description: The file name
          pattern: \S
          type: string
          example: cadastro.txt
          nullable: false
        operator:
          description: The opertator Name
          pattern: \S
          type: string
          example: sulamerica
          nullable: false
        type:
          description: The file type (CADASTRO or EXTRATO)
          pattern: \S
          type: string
          example: CADASTRO
          nullable: false
        key:
          type: string
    Error:
      description: Objeto com erros
      type: object
      properties:
        details:
          $ref: '#/components/schemas/ListString'
        errorCode:
          format: int32
          type: integer
        message:
          type: string
    ListString:
      type: array
      items:
        type: string
    RawFile:
      type: object
    ListRawFile:
      $ref: '#/components/schemas/ListRawFile'
    ListTempFile:
      $ref: '#/components/schemas/ListTempFile'
servers:
  - url: https://d2lbvqo36md01z.cloudfront.net
    description: Production