openapi: 3.0.0
info:
  description: >+
    API for CMYN platform.

  version: "iteracion3"
  title: Contacts API
  termsOfService: ''
  contact: {}
security:
  - HTTP_BASIC: []
paths:
  '/patient/{patient_id}/':
    get:
      summary: get_patient
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      tags:
        - Patients
    delete:
      summary: delete_patient
      responses:
        '200':
          description: Status 200
      tags:
        - Patients
    patch:
      summary: edit_patient
      parameters:
        - name: args_dict
          in: query
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Status 202
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      tags:
        - Patients
    parameters:
      - name: patient_id
        in: path
        required: true
        schema:
          type: string
  /patient/:
    post:
      summary: create_patient
      parameters:
        - name: rut
          in: query
          required: true
          schema:
            type: integer
        - name: names
          in: query
          required: true
          schema:
            type: string
        - name: last_name_father
          in: query
          required: true
          schema:
            type: string
        - name: last_name_mother
          in: query
          required: true
          schema:
            type: string
        - name: ingress_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: birthday
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: commune
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: phone
          in: query
          required: false
          schema:
            type: string
        - name: cellphone
          in: query
          required: false
          schema:
            type: string
        - name: derivation_cause
          in: query
          required: false
          schema:
            type: string
        - name: derivation_diagnostic
          in: query
          required: false
          schema:
            type: string
        - name: derivation_referrer
          in: query
          required: false
          schema:
            type: string
        - name: primary_attention
          in: query
          required: false
          schema:
            type: string
        - name: observations
          in: query
          required: false
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
        - name: referrer
          in: query
          required: false
          schema:
            type: string
        - name: summary
          in: query
          required: false
          schema:
            type: string
        - name: is_active
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '201':
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      tags:
        - Patients
  /patient/list/:
    get:
      summary: get_patient_list
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: is_active
          in: query
          required: false
          schema: 
            type: string
        - name: name
          in: query
          required: false
          schema: 
            type: string
        - name: rut
          in: query
          required: false
          schema: 
            type: string
        - name: state
          in: query
          required: false
          schema: 
            type: string
        - name: sort
          in: query
          required: false
          schema: 
            type: string
        - name: page
          in: query
          required: false
          schema: 
            type: integer
        - name: page_size
          in: query
          required: false
          schema: 
            type: integer
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
      tags:
        - Patients
  /patient/rut_verifier/:
    post:
      summary: verify_rut
      parameters:
        - name: rut
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: boolean
      tags:
        - Patients
  '/user/{user_id}/':
    get:
      summary: get_user
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users
    delete:
      summary: delete_user
      responses:
        '200':
          description: Status 200
      tags:
        - Users
    patch:
      summary: edit_user
      parameters:
        - name: args_dict
          in: query
          required: false
          schema:
            type: string
      responses:
        '202':
          description: Status 202
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  /user/:
    post:
      summary: create_user
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: names
          in: query
          required: true
          schema:
            type: string
        - name: raw_password
          in: query
          required: true
          schema:
            type: string
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: role
          in: query
          required: true
          schema:
            type: string
        - name: is_active
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '201':
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users
  /user/list/:
    get:
      summary: get_user_list
      tags:
        - Users
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  '/patient/carer/{carer_id}/':
    get:
      summary: get_carer
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carer'
      tags:
        - Carers
    delete:
      summary: delete_carer
      responses:
        '200':
          description: Status 200
      tags:
        - Carers
    patch:
      summary: edit_carer
      parameters:
        - name: args_dict
          in: query
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Status 202
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carer'
      tags:
        - Carers
    parameters:
      - name: carer_id
        in: path
        required: true
        schema:
          type: string
  /patient/carer/:
    post:
      summary: create_carer
      parameters:
        - name: names
          in: query
          required: true
          schema:
            type: string
        - name: relation
          in: query
          required: true
          schema:
            type: string
        - name: patient_id
          in: query
          required: true
          schema:
            type: integer
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: phone
          in: query
          required: false
          schema:
            type: string
        - name: cellphone
          in: query
          required: false
          schema:
            type: string
        - name: observations
          in: query
          required: false
          schema:
            type: string
        - name: readiness
          in: query
          required: false
          schema:
            type: string
        - name: is_active
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '201':
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carer'
      tags:
        - Carers
  '/patient/carer/list/{patient_id}/':
    get:
      summary: get_carer_list_from_patient
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carer'
      tags:
        - Carers
    parameters:
      - name: patient_id
        in: path
        required: true
        schema:
          type: string
  /login/:
    post:
      summary: login
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status 200
      security: []
      tags:
        - Auth
  '/logout/{user_id}/':
    post:
      summary: /logout/
      responses:
        '200':
          description: Status 200
      tags:
        - Auth
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  /programs/class/list/:
    get:
      summary: get_program_classes
      tags: 
        - Programs
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramClasses'
  '/programs/class/{program_class_name}/':
    get:
      summary: get_program_class
      parameters:
        - name: program_class_name
          in: path
          required: true
          schema:
            type: string
      tags: 
        - Programs
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramClasses'
  /programs/: 
    post: 
      summary: create_program
      parameters: 
        - name: patient_id
          in: query
          required: true
          schema:
            type: string
        - name: program_class_id
          in: query
          required: true
          schema:
            type: string
      tags:
        - Programs
      responses:
        '201': 
          description: Status 201
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
  '/programs/{patient_id}/':
    get:
      summary: get_programs
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - Programs
      responses:
        '200': 
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
  '/programs/{program_id}/':
    patch:
      summary: edit_program
      parameters:
        - name: program_id
          in: path
          required: true
          schema:
            type: string
        - name: archived_stages
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: string
      tags:
        - Programs
      responses:
        '202': 
          description: Status 202
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
    delete:
      summary: delete_program
      parameters:
        - name: program_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Programs
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
  '/instrument/list/{patient_id}/':
    get: 
      summary: get_instruments
      parameters: 
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Instruments
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
  /instrument/:
    post:
      summary: create_instrument
      parameters:
        - name: evaluation_id
          in: query
          required: true
          schema:
            type: string
        - name: instrument_name
          in: query
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: true
          schema:
            type: string
        - name: score
          in: query
          required: true
          schema:
            type: integer
      tags: 
        - Instruments
      responses:
        '201':
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
  '/instrument/{instrument_id}/':
    get:
      summary: get_instrument
      parameters:
        - name: instrument_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - Instruments
      responses:
        '200': 
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
    patch:
      summary: edit_instrument
      parameters:
        - name: instrument_id
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: false
          schema:
            type: string
        - name: score
          in: query
          required: false
          schema:
            type: number
      tags:
        - Instruments
      responses:
        '202': 
          description: Status 202
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
    delete:
      summary: delete_instrument
      parameters:
        - name: instrument_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - Instruments
      responses: 
        '200': 
          description: Status 200
  '/evaluation/{evaluation_id}/instruments/':
    get:
      summary: get_instrument_list_by_evaluation
      parameters:
        - name: evaluation_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Instruments
      responses:
        '200': 
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrument'
  /events/:
    post:
      summary: create_event
      parameters:
        - name: patient_id
          in: query
          required: true
          schema:
            type: string
        - name: event_type
          in: query
          required: true
          schema:
            type: string
        - name: responsible
          in: query
          required: true
          schema:
            type: string
        - name: comment
          in: query
          required: false
          schema:
            type: string
      tags: 
        - Events
      responses:
        '201': 
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  '/events/{patient_id}/':
    get:
      summary: get_patient_events
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - Events
      responses:
        '200': 
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  '/events/list/{patient_id}/':
    get:
      summary: get_event_list
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Events
      responses:
        '200': 
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  '/events/{event_id}/':
    delete:
      summary: delete_event
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Events
      responses:
        '200': 
          description: Status 200
  /mdconsult/:
    post:
      summary: create_mdconsult
      parameters:
        - name: doctor_id
          in: query
          required: true
          schema:
            type: string
        - name: patient_id
          in: query
          required: true
          schema:
            type: string
        - name: consult_type
          in: query
          required: true
          schema:
            type: string
      tags:
        - MDConsult
      responses:
        '201':
          description: Status 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MDConsult'
  '/mdconsult/{mdConsult_id}/':
    get:
      summary: get_mdconsult
      parameters:
        - name: mdConsult_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - MDConsult
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MDConsult'
    patch:
      summary: edit_mdconsult
      parameters:
        - name: mdConsult_id
          in: path
          required: true
          schema:
            type: string
        - name: consult_type
          in: query
          schema:
            type: string
        - name: followup
          in: query
          schema:
            $ref: '#/components/schemas/ConsultFollowup'
        - name: motive
          in: query
          schema:
            $ref: '#/components/schemas/ConsultMotive'
        - name: anamnesis
          in: query
          schema:
            $ref: '#/components/schemas/ConsultAnamnesis'
        - name: symptoms
          in: query
          schema:
           $ref: '#/components/schemas/ConsultSymptoms'
        - name: functionality
          in: query
          schema:
            $ref: '#/components/schemas/ConsultFunctionality'
        - name: exams
          in: query
          schema:
            $ref: '#/components/schemas/ConsultExams'
        - name: diagnosis
          in: query
          schema: 
            $ref: '#/components/schemas/ConsultDiagnosis'
        - name: reversible_factors
          in: query
          schema: 
            $ref: '#/components/schemas/ConsultReversibleFactors'
        - name: other_diagnosis
          in: query
          schema: 
            $ref: '#/components/schemas/ConsultOtherDiagnosis'
        - name: lab_indications
          in: query
          schema:
            $ref: '#/components/schemas/ConsultLabIndications'
        - name: therapeutic_indications
          in: query
          schema: 
            $ref: '#/components/schemas/ConsultTherapeuticIndications'
        - name: interconsultation
          in: query
          schema:
            $ref: '#/components/schemas/ConsultInterconsultation'
      tags: 
        - MDConsult
      responses:
        '200': 
          description: Status 200
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/MDConsult'
    delete:
      summary: delete_mdconsult
      parameters:
        - name: mdConsult_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - MDConsult
      responses:
        '200':
          description: Status 200
  /clinicalupdate/:
    post:
      summary: create_clinical_update
      parameters:
        - name: doctor_id
          in: query
          required: true
          schema:
            type: string
        - name: patient_id
          in: query
          required: true
          schema:
            type: string
        - name: evaluation_type
          in: query
          required: true
          schema:
            type: string
        - name: applied_to
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: results
          in: query
          schema:
            type: string
        - name: observations
          in: query
          schema:
            type: string
      tags:
        - ClinicalUpdate
      responses:
        '202': 
          description: Status 202
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ClinicalUpdate'
  '/clinicalupdate/{clinical_update_id}/':
    get:
      summary: get_clinical_update
      parameters:
        - name: clinical_update_id
          in: path
          required: true
          schema: 
            type: string
      tags:
        - ClinicalUpdate
      responses:
        '200': 
          description: Status 200
    patch:
      summary: edit_clinical_update
      parameters:
        - name: clinical_update_id
          in: path
          required: true
          schema:
            type: string
        - name: evaluation_type
          in: query
          schema:
            type: string
        - name: applied_to
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema: 
            type: string
        - name: results
          in: query
          schema:
            type: string
        - name: observations
          in: query
          schema:
            type: string
      tags: 
        - ClinicalUpdate
      responses:
        '202': 
          description: Status 202
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalUpdate'
    delete:
      summary: delete_clinical_update
      parameters:
        - name: clinical_update_id
          in: path
          required: true
          schema:
            type: string
      tags: 
        - ClinicalUpdate
      responses:
        '200':
          description: Status 200
  '/evaluation/list/{patient_id}/':
    get:
      summary: get_patient_evaluation_list
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Evaluation
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
components:
  securitySchemes:
    HTTP_BASIC:
      description: >-
        Requires authentication for everything, except login.
      type: http
      scheme: basic
  schemas:
    User:
      type: object
      properties:
        pk: 
          type: string
        email:
          type: string
        role:
          type: string
        names:
          type: string
          maximum: 128
        is_active:
          type: boolean
    Patient:
      type: object
      properties:
        pk:
          type: string
        names:
          type: string
          maximum: 128
        last_name_father:
          type: string
          maximum: 64
        last_name_mother:
          type: string
          maximum: 64
        rut: 
          type: string
          maximum: 10
        birthday:
          type: string
        gender:
          type: string
          maximum: 16
        address:
          type: string
          maximum: 128
        commune: 
          type: string
        email:
          type: string
        phone:
          type: integer
        cellphone:
          type: integer
        derivation_cause:
          type: string
          maximum: 4096
        derivation_referrer:
          type: string
        primary_attention:
          type: string
        ingress_date:
          type: string
        observations:
          type: string 
          maximum: 8192
        state: 
          type: string
        referrer:
          $ref: '#/components/schemas/User'
        summary:
          type: string
          maximum: 5000
        background:
          type: string
          maximum: 10240
        is_active:
          type: boolean
    Carer:
      type: object
      properties:
        pk: 
          type: string
        names:
          type: string
          maximum: 128
        relation:
          type: string
        phone: 
          type: integer
        cellphone: 
          type: integer
        email:
          type: string
        observations:
          type: string
          maximum: 4096
        readiness:
          type: string
        patient: 
          $ref: '#/components/schemas/Patient'
        is_active:
          type: boolean
        is_main:
          type: boolean
    ProgramClasses:
      type: object
      properties:
        pk:
          type: string
        name: 
          type: string
          maximum: 32
        stage_name: 
          type: string
          maximum: 32
        order:
          type: integer
    Program:
      type: object
      properties:
        pk: 
          type: string
        patient_id: 
          $ref: '#/components/schemas/Patient'
        program_class_id: 
          $ref: '#/components/schemas/ProgramClasses'
        date:
          type: string
        is_active:
          type: boolean
    Instrument:
      type: object
      properties:
        pk:
          type: string
        evaluation_id:
          $ref: '#/components/schemas/Evaluation'
        instrument_name:
          type: string
          maximum: 32
        score:
          type: number
        content:
          type: string
          maximum: 20480
        is_active:
          type: boolean
    Event:
      type: object
      properties:
        pk: 
          type: string
        patient_id:
          $ref: '#/components/schemas/Patient'
        datetime:
          type: string
        event_type:
          type: string
          maximum: 32
        responsible:
          $ref: '#/components/schemas/User'
        comment:
          type: string
          maximum: 512
        is_active:
          type: boolean
    Evaluation:
      type: object
      properties:
        pk:
          type: string
        doctor_id: 
          type: string
        patient_id:
          type: string
        evaluation_time:
          type: string
        closed:
          type: boolean
        last_update:
          type: string
        is_active: 
          type: boolean
    MDConsult:
      allOf:
        - $ref: '#/components/schemas/Evaluation'
        - type: object
          properties:
            consult_type:
              type: string
              maximum: 512
            followup:
              $ref: '#/components/schemas/ConsultFollowup'
            motive:
              $ref: '#/components/schemas/ConsultMotive'
            anamnesis:
              $ref: '#/components/schemas/ConsultAnamnesis'
            symptoms:
              $ref: '#/components/schemas/ConsultSymptoms'
            functionality: 
              $ref: '#/components/schemas/ConsultFunctionality'
            exams:
              $ref: '#/components/schemas/ConsultExams'
            diagnosis:
              $ref: '#/components/schemas/ConsultDiagnosis'
            reversible_factors:
              $ref: '#/components/schemas/ConsultReversibleFactors'
            other_diagnosis: 
              $ref: '#/components/schemas/ConsultOtherDiagnosis'
            lab_indications:
              $ref: '#/components/schemas/ConsultLabIndications'
            therapeutic_indications:
              $ref: '#/components/schemas/ConsultTherapeuticIndications'
            interconsultation:
              $ref: '#/components/schemas/ConsultInterconsultation'
    ConsultFollowup:
      type: object
      properties:
        clinical_evolution:
          type: string
          maximum: 512
        physical_exam: 
          type: string
          maximum: 512
        plan:
          type: string
          maximum: 512
    ConsultMotive:
      type: object
      properties:
        patient_motive:
          type: string
          maximum: 512
        informant_motive:
          type: string
          maximum: 512
        who_motivates:
          type: string
          maximum: 16
        patient_symptom_relation: 
          type: string
          maximum: 16
        general_motive:
          type: string
          maximum: 32
    ConsultAnamnesis:
      type: object
      properties:
        patient_anamnesis: 
          type: string
          maximum: 512
        informant_anamnesis:
          type: string
          maximum: 512
        evolution_time:
          type: string
          maximum: 256
        starting_form:
          type: string
          maximum: 32
        disorder_frequency: 
          type: string
          maximum: 32
        cognition_degradation:
          type: boolean
    ConsultSymptoms:
      type: object
      properties:
        content:
          type: string
          maximum: 204800
    ConsultFunctionality:
      type: object
      properties:
        interference:
          type: boolean
        advanced: 
          type: string
          maximum: 512
        instrumental: 
          type: string
          maximum: 512
        basic:
          type: string
          maximum: 512
    ConsultExams:
      type: object
      properties:
        content:
          type: string
          maximum: 204800
    ConsultDiagnosis:
      type: object
      properties:
        diagnosis:
          type: string
          maximum: 512
        observations:
          type: string
          maximum: 512
    ConsultReversibleFactors:
      type: object
      properties:
        diagnosis:
          type: string
          maximum: 32
        observations:
          type: string
          maximum: 512
    ConsultOtherDiagnosis:
      type: object
      properties:
        diagnosis:
          type: string
          maximum: 32
        observations:
          type: string
          maximum: 512
    ConsultLabIndications:
      type: object
      properties:
        biochemic: 
          type: string
          maximum: 512
        neuroimage:
          type: string
          maximum: 512
        neurophysiological:
          type: string
          maximum: 512
        drugs:
          type: string
          maximum: 1024
    ConsultTherapeuticIndications:
      type: object
      properties:
        content:
          type: string
          maximum: 204800
    ConsultInterconsultation:
      type: object
      properties:
        estates:
          type: string
          maximum: 32
        assigned_proffesional:
          type: array
          items:
            $ref: '#/components/schemas/User'
        motive:
          type: string
          maximum: 2048
    ClinicalUpdate:
      allOf:
        - $ref: '#/components/schemas/Evaluation'
        - type: object
          properties:
            evaluation_type: 
              type: string
              maximum: 32
            applied_to: 
              type: string
              maximum: 512
            description: 
              type: string
              maximum: 512
            results: 
              type: string
              maximum: 512
            observations: 
              type: string
              maximum: 512