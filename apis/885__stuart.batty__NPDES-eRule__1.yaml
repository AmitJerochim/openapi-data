openapi: 3.0.0
info:
  title: Facility API
  description: API to store Facility Information
  version: "1"
externalDocs:
  url: https://www.epa.gov/npdes/apis
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/stuart.batty/NPDES-eRule/1
  - url: /facility-api-poc/api
    description: Facility API
paths:
  /v1/facility/{program}/{issuer}:
    post:
      summary: Adds a facility for the specified program and issuer
      operationId: addFacility
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Facility to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facility'
      responses:
        "200":
          description: Facility created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "409":
          description: An entity already exists with this ID.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - write
    get:
      summary: Retrieves facilities for the specified program and issuer
      operationId: getFacility
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: facilityName
          in: query
          description: name of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: address
          in: query
          description: address of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: city
          in: query
          description: city of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: state
          in: query
          description: state of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: zip
          in: query
          description: name of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: county
          in: query
          description: county of facility
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: skip
          in: query
          description: number of records to skip for pagination
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of records to return
          required: false
          style: form
          explode: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        "200":
          description: Facilities matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facility'
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - read
  /v1/facility/{program}/{issuer}/{facilityId}:
    delete:
      summary: Deletes a facility for the specified program and issuer
      operationId: deleteFacility
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: facilityId
          in: path
          description: Facility ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "204":
          description: Facility deleted.
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - write
    put:
      summary: Updates a facility for the specified program and issuer
      operationId: updateFacility
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: facilityId
          in: path
          description: Facility ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Facility to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facility'
      responses:
        "204":
          description: Facility updated.
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - write
  /v1/facility/{program}/{issuer}/request:
    post:
      summary: Creates a facility request
      operationId: createFacilityRequest
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Facility request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityRequest'
      responses:
        "200":
          description: Facility request created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityRequest'
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "409":
          description: An entity already exists with this ID.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - write
    get:
      summary: Retrieves facility requests
      operationId: getFacilityRequest
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: requestStatus
          in: query
          description: status of request
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - Pending
              - Approved
              - Denied
        - name: skip
          in: query
          description: number of records to skip for pagination
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of records to return
          required: false
          style: form
          explode: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        "200":
          description: Facility requests matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FacilityRequest'
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - read
  /v1/facility/{program}/{issuer}/request/{requestId}:
    put:
      summary: Update the request status
      description: Update the request status
      operationId: updateFacilityRequest
      parameters:
        - name: program
          in: path
          description: Program (e.g. NPDES)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: issuer
          in: path
          description: Permit issuer (e.g. \"epa\")
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: requestId
          in: path
          description: Facility request ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: number
      requestBody:
        description: Facility request to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityRequest'
      responses:
        "204":
          description: Facility request updated.
        "400":
          description: Bad request.
        "401":
          description: Operation requires authentication.
        "403":
          description: Operation requires authorization.
        "500":
          description: Unable to process request.
      security:
        - FacilityAPISecurity:
            - write
components:
  schemas:
    FacilityRequest:
      required:
        - facility
      type: object
      properties:
        id:
          type: string
          format: number
          example: "1"
        requestDate:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
        facility:
          $ref: '#/components/schemas/Facility'
        status:
          type: string
          enum:
            - Pending
            - Approved
            - Denied
    Facility:
      required:
        - siteName
        - siteAddress
        - siteLocation
        - facilityOwnershipType
        - inactiveFacility
      type: object
      properties:
        id:
          type: string
          format: number
          example: "12"
        siteName:
          type: string
          example: AMTRAK DAVISVILLE YARD
        siteAddress:
          $ref: '#/components/schemas/Address'
        siteLocation:
          $ref: '#/components/schemas/Location'
        facilityOwnershipType:
          $ref: '#/components/schemas/Ownership'
        owner:
          $ref: '#/components/schemas/Organization'
        operator:
          $ref: '#/components/schemas/Organization'
        inactiveFacility:
          type: boolean
          example: false
        sourceFacilityId:
          type: string
          example: "1234"
    Organization:
      required:
        - organizationName
        - organizationAddress
      type: object
      properties:
        id:
          type: string
          format: number
          example: "14"
        organizationName:
          type: string
          example: AMTRAK
        organizationAddress:
          $ref: '#/components/schemas/Address'
    Address:
      required:
        - address1
        - city
        - country
        - county
        - stateCode
        - zipCode
      type: object
      properties:
        address1:
          type: string
          example: 1234 Pepper St
        address2:
          type: string
          example: TEST
        address3:
          type: string
          example: TEST
        address4:
          type: string
          example: TEST
        city:
          type: string
          example: Fairfax
        stateCode:
          type: string
          example: VA
        zipCode:
          type: number
          example: 20146
        county:
          type: string
          example: CACHE
        country:
          type: string
          example: USA
    Location:
      required:
        - horizontalReferenceDatum
        - latLongDataSource
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          type: number
          example: 43.915785
        longitude:
          type: number
          example: 112.092341
        latLongDataSource:
          type: string
          example: Map
        horizontalReferenceDatum:
          type: string
          example: WGS 84
        coordinateSystem:
          type: string
          example: TEST
    Ownership:
      type: string
      enum:
        - Federal Facility (U.S. Government)
        - Privately Owned Facility
        - Municipality
        - County Government
        - Corporation
        - State Government
        - Tribal Government
        - School District
        - District
        - Mixed Ownership (e.g. Public/Private)
        - Municipal or Water District
  securitySchemes:
    FacilityAPISecurity:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://npdes-ereportingdevkub.epacdx.net/net-svc-authorization/oauth/token
          scopes:
            write: Submit or update Facility information
            read: Retrieve facility information
