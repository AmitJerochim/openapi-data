penapi: 3.0.0
servers:
  - description: test server
    #url: http://api4desktop.classiii.io:3000/api/v1/translate/file-translate
    url: https://translate.classiii.info/api/v1
info:
  description: ファイル翻訳APIドキュメント
  version: "1.0.0-oas3"
  title: ファイル翻訳API
  contact:
    email: s-liu@rozetta.jp
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: file-translate
    description: ファイル翻訳API
  - name: translate-result
    description: 翻訳結果API獲得
  - name: downloads
    description: 翻訳結果APIダウンロード
paths:
  /auth-code:
    post:
      tags:
        - file-translate
      summary: 認証コード
      description: T-4OOのユーザーの情報により、認証コードを獲得、クライアント側でパスワードが暗号化される。このAPIが現段階では実装していない、MOCK　APIです、何を入力しても、固定値を返答する。
      requestBody:
        content:
          application/x-www-form-urlencod:
            schema:
              type: object
              properties:
                orgId:
                  type: string
                  description: 会社Id
                userId:
                  type: string
                  description: ユーザーId
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCode'
              example:
                status: success
                data: {
                  id: d290f1ee-6c54-4b01-90e6-d701748f0851
                }
        '400':
          description: bad orgId or bad userId
  /authenticate:
    post:
      tags:
        - file-translate
      summary: ユーザー情報認証
      description: >-
        T-4OOのユーザーの情報（会社Id、ユーザーId、暗号化されたパスワード,暗号化する方法はauth-codeでもらったCODEをKEYにして、RC4の暗号化する）で認証を行い、認証できたら、accessKeyとsecretKeyを発行する。accessKeyとsecretKeyは他のAPI用のAccessToeknの発行に利用される。このAPIが現段階では実装していない、MOCK　APIです、何を入力しても、固定値を返答する。
      requestBody:
        content:
          application/x-www-form-urlencod:
            schema:
              type: object
              properties:
                orgId:
                  type: string
                  description: 会社Id
                userId:
                  type: string
                  description: ユーザーId
                password:
                  type: string
                  description: パスワード
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                status: success
                data: {
                  accessKey: 8c76e418-9842-455b-aac1-5be28e8e4e94,
                  secretKey: d290f1ee-6c54-4b01-90e6-d701748f0851
                }
        '400':
          description: bad orgId or bad userId
  /file-translate:
    post:
      tags:
        - file-translate
      summary: ファイル翻訳実行
      description: >-
        ClassIII APIで発行したaccessKeyとsecretKeyを利用し、ファイル内容を翻訳。word、pdfの拡張子ファイルを対応する多言語翻訳。
      parameters:
        - in: header
          name: accessKey
          schema:
            type: string
          required: true
          description: >-
            ご所持しているAccessKeyもしくはT-4OOの登録情報より獲得。詳細は [/auth-code](#/file-translate/post_auth_code) 和 [/authenticate](#/file-translate/post_authenticate)をご参照ください。
        - in: header
          name: nonce
          schema:
            type: string
          required: true
          description: >-
            数値の文字列。、リクエスト毎に増加させる必要があります。通常はUNIXタイムスタンプを使うのがおすすめです。
        - in: header
          name: signature
          schema:
            type: string
          required: true
          description: >-
            暗号化署名。
            sha256とhmacアルゴリズムを使用し、自分のsecretKeyにnonceとurl（ドメイン以外の部分）で署名し、生成させた16進数の文字列。
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fieldId:
                  type: string
                  description: 分野Id
                targetLangs:
                  type: string
                  description: 翻訳したい言語(json配列からstringになる，複数でも良い)
                files:
                  description: ファイル配列
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResult'
              example:
                status: success
                data: {
                  translateId: 8c76e418-9842-455b-aac1-5be28e8e4e94
                }
        '400':
          description: internal error
        '403':
          description: authentication failed
  '/translate-result/{translateId}':
    get:
      tags:
        - translate-result
      summary: 翻訳結果獲得
      description: >-
        ユーザー情報により、指定された翻訳結果を獲得
      parameters:
        - in: header
          name: accessKey
          schema:
            type: string
          required: true
          description: >-
            ご所持しているAccessKeyもしくはT-4OOの登録情報より獲得。詳細は [/auth-code](#/file-translate/post_auth_code) 和 [/authenticate](#/file-translate/post_authenticate)をご参照ください。
        - in: header
          name: nonce
          schema:
            type: string
          required: true
          description: >-
            数値の文字列。リクエスト毎に増加させる必要があります。通常はUNIXタイムスタンプを使うのがおすすめです。
        - in: header
          name: signature
          schema:
            type: string
          required: true
          description: >-
            暗号化署名。
            sha256とhmacアルゴリズムを使用し、自分のsecretKeyにnonceとurl（ドメイン以外の部分）で署名し、生成させた16進数の文字列。
        - in: path
          name: translateId
          description: 翻訳Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateResult'
              example:
                status: success
                data: {
                  translateId: 8c76e418-9842-455b-aac1-5be28e8e4e94,
                  done: false,
                  langs: [
                    zh-CN,
                    ja
                  ],
                  fieldId: 1,
                  createdAt: "2019-07-21T17:32:28Z",
                  items: [
                  {
                    translateItemId: 8c76e418-9842-455b-aac1-5be28e8e4e94,
                    lang: ja,
                    wordCount: 1000,
                    detectedLang: zh-CN,
                    done: false,
                    originalName: test.pdf
                  }
                  ]
                }
        '400':
          description: internal error
        '403':
          description: authentication failed
  '/translate-result/all':
    get:
      tags:
        - translate-result
      summary: 全部翻訳結果獲得
      description: >-
        ユーザー情報により、指定された翻訳結果を全て獲得
      parameters:
        - in: header
          name: accessKey
          schema:
            type: string
          required: true
          description: >-
            ご所持しているAccessKeyもしくはT-4OOの登録情報より獲得。詳細は [/auth-code](#/file-translate/post_auth_code) 和 [/authenticate](#/file-translate/post_authenticate)をご参照ください。
        - in: header
          name: nonce
          schema:
            type: string
          required: true
          description: >-
            数値の文字列。リクエスト毎に増加させる必要があります。通常はUNIXタイムスタンプを使うのがおすすめです。
        - in: header
          name: signature
          schema:
            type: string
          required: true
          description: >-
            暗号化署名。
            sha256とhmacアルゴリズムを使用し、自分のsecretKeyにnonceとurl（ドメイン以外の部分）で署名し、生成させた16進数の文字列。
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                status: success
                data: [{
                         translateId: 8c76e418-9842-455b-aac1-5be28e8e4e94,
                         done: false,
                         langs: [
                           zh-CN,
                           ja
                         ],
                         fieldId: 1,
                         createdAt: "2019-07-21T17:32:28Z",
                         items: [
                         {
                           translateItemId: 8c76e418-9842-455b-aac1-5be28e8e4e94,
                           lang: ja,
                           wordCount: 1000,
                           detectedLang: zh-CN,
                           done: false,
                           originalName: test.pdf
                         }
                         ]
                       }]
        '400':
          description: internal error
        '403':
          description: authentication failed

  '/translate-result/retry':
    get:
      tags:
        - translate-result
      summary: 翻訳エラーになった時、ファイルを再び翻訳する
      description: >-
        翻訳エラーになった時、ファイルを再び翻訳する
      parameters:
        - in: header
          name: accessKey
          schema:
            type: string
          required: true
          description: >-
            ご所持しているAccessKeyもしくはT-4OOの登録情報より獲得。詳細は [/auth-code](#/file-translate/post_auth_code) 和 [/authenticate](#/file-translate/post_authenticate)をご参照ください。
        - in: header
          name: nonce
          schema:
            type: string
          required: true
          description: >-
            数値の文字列。リクエスト毎に増加させる必要があります。通常はUNIXタイムスタンプを使うのがおすすめです。
        - in: header
          name: signature
          schema:
            type: string
          required: true
          description: >-
            暗号化署名。
            sha256とhmacアルゴリズムを使用し、自分のsecretKeyにnonceとurl（ドメイン以外の部分）で署名し、生成させた16進数の文字列。
        - in: query
          name: ids
          description: 再翻訳アイテムId(translateItemId)，json string配列。
          required: true
          schema:
            type: string
            example:
              8c76e418-9842-455b-aac1-5be28e8e4e94,d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        '200':
          description: zip file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: internal error
        '403':
          description: authentication failed
  '/downloads':
    get:
      tags:
        - downloads
      summary: 翻訳されたファイルをダウンロード
      description: >-
        翻訳アイテムIdにより，翻訳されたファイルを獲得
      parameters:
        - in: header
          name: accessKey
          schema:
            type: string
          required: true
          description: >-
            ご所持しているAccessKeyもしくはT-4OOの登録情報より獲得。詳細は [/auth-code](#/file-translate/post_auth_code) 和 [/authenticate](#/file-translate/post_authenticate)をご参照ください。
        - in: header
          name: nonce
          schema:
            type: string
          required: true
          description: >-
            数値の文字列。リクエスト毎に増加させる必要があります。通常はUNIXタイムスタンプを使うのがおすすめです。
        - in: header
          name: signature
          schema:
            type: string
          required: true
          description: >-
            暗号化署名。
            sha256とhmacアルゴリズムを使用し、自分のsecretKeyにnonceとurl（ドメイン以外の部分）で署名し、生成させた16進数の文字列。
        - in: query
          name: ids
          description: 翻訳アイテムId(translateItemId)，json string配列。
          required: true
          schema:
            type: string
            example:
              8c76e418-9842-455b-aac1-5be28e8e4e94,d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        '200':
          description: zip file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: internal error
        '403':
          description: authentication failed
components:
  schemas:
    PayloadData:
      type: object
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/AuthCode'
        - $ref: '#/components/schemas/Authentication'
        - $ref: '#/components/schemas/TranslateResult'
        - $ref: '#/components/schemas/ArrayOfTranslateResult'
      example: {"accessKey":"d290f1ee-6c54-4b01-90e6-d701748f0851","secretKey":"8c76e418-9842-455b-aac1-5be28e8e4e94"}
    Result:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/PayloadData'
      xml:
        name: Order
    AuthCode:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      xml:
        name: AuthCode
    Authentication:
      type: object
      properties:
        accessKey:
          type: string
          format: uuid
          example: 8c76e418-9842-455b-aac1-5be28e8e4e94
        secretKey:
          type: string
          format: uuid
          example: efffb72b-b2c5-458f-8388-42b2627e2c82
      xml:
        name: Authentication
    QueueResult:
      type: object
      properties:
        translateId:
          type: string
          example: 8c76e418-9842-455b-aac1-5be28e8e4e94
      xml:
        name: QueueResult
    TranslateItem:
      type: object
      properties:
        translateItemId:
          type: string
          format: uuid
          example: 8c76e418-9842-455b-aac1-5be28e8e4e94
        lang:
          type: string
          example: ja
        wordCount:
          type: integer
          example: 1000
        detectedLang:
          type: string
          example: zh-CN
        done:
          type: boolean
          example: false
        originalName:
          type: string
          example: test.pdf
    TranslateResult:
      type: object
      properties:
        translateId:
          type: string
          format: uuid
          example: 8c76e418-9842-455b-aac1-5be28e8e4e94
        done:
          type: boolean
          example: false
        langs:
          type: array
          items:
            type: string
          example:
            - zh-CN
            - ja
            - zh-TW
        fieldId:
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
          example: "2019-01-15T23:00:00Z"
        items:
          type: array
          items:
            $ref: '#/components/schemas/TranslateItem'
      xml:
        name: TranslateResult
    ArrayOfTranslateResult:
      type: array
      items:
        $ref: '#/components/schemas/TranslateResult'