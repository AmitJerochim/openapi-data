{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Handy’s Retail Solution offers retailers fixed price, 1-click installation services that can be added to an eCommerce site. This document is meant to serve as our partners' one-stop shop for all Handy Orders API needs. Specifically, this document includes instructions on how to:\n\n  1. Autheticate and communicate with the Handy Orders API\n    2. Request to receive webhooks\n    3. Fetch information about an existing order\n    4. Create an order\n    5. Update the delivery date of an order\n    6. Cancel an order\n    \n\n# Authentication\n\nFollow the instuctions below in order to authenticate and communicate with the Handy Orders API.\n\nNote: All API requests are authenticated using a digital signature created with the partner's private key along with several additional values to ensure the reliability and accuracy of the request.\n## 1. Create the RSA Key Pair\n```\nopenssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:4096\n\n```\nif that doesn't work, try:\n```\nopenssl genrsa -out private_key.pem 4096\n```\n## 2. Extract the public key\n```\nopenssl rsa -pubout -in private_key.pem -out public_key.pem\n```\n## 3. Share your public key with Handy\nShare the public_key.pem that you just generated with Handy so that we can add you as an authorized partner and verify any incomming requests.\n## 4. Share IP addresses to whitelist\nShare a list or range of IP addresses with Handy for whitelisting.\n## 5. Sign your requests\nThe Handy Orders API requires every request to have a signed signature.\nThe following is the format of the required signature:\n```\nBASE_64(RSA_SHA256(partner_id + '\\n' + url + '\\n' + http_method + '\\n' + timestamp + '\\n' + payload))`\n```\n* Ensure that http_method is lowercase while generating this signature.\n* BASE_64 = Strict Base64 Encoding (RFC 4648) No line feeds are added.\n* RSA_SHA256 = RSA Key with SHA256 hashing algorithm. Padding is PKCS1v15.\n\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Header</th>\n<th>Example Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>partner_id</td>\n<td>HDY-PARTNER-ID</td>\n<td>partner_name</td>\n<td>Identifies the client</td>\n</tr>\n<tr>\n<td>url</td>\n<td>None</td>\n<td><a href=\"https://partners.services.handy.com/api/v1/orders/echo\" rel=\"nofollow\">https://partners.services.handy.com/api/v1/orders/echo</a></td>\n<td>URL of endpoint of request</td>\n</tr>\n<tr>\n<td>http_method</td>\n<td>None</td>\n<td>post</td>\n<td>HTTP method of request</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>HDY-TIMESTAMP</td>\n<td>1516219185</td>\n<td>Seconds since epoch UTC</td>\n</tr>\n<tr>\n<td>payload</td>\n<td>None</td>\n<td>{'foo': 'bar'}</td>\n<td>Payload of request</td>\n</tr></tbody></table>\n\nAfter computing the signature, pass it to the request in the header HDY-SIGNATURE, along with the other Header fields.\n\n```\n> POST /foo HTTP/1.1\n> Host: localhost:3000\n> User-Agent: MyCoolApp\n> Accept: */*\n> HDY-PARTNER-ID: partner_name\n> HDY-TIMESTAMP: 1516219185\n> HDY-SIGNATURE: <signature>\n```\n**NOTE**: Handy needs your public key before you will be able to make requests to the orders API.\n\n**Example code in python:** <a href=\"https://gist.github.com/agoswami-handy/a42d779bbfc3931c6ccd94b7f4f03777\" target=\"_blank\">sign.py</a>\n\n**Sample Route**: The URL https://partners.services.handy.com/api/v1/orders/echo can be used for testing purposes. It will just echo back any params which were passed to it. You can make GET or POST requests to this URL.\n\n## Webhooks\nSubscribe to Handy Orders API’s Webhooks by emailing partnerships@handy.com to be notified of the following significant events regarding an order:\n* A booking is created\n* A booking is completed\n* A booking is rated\n* A booking is rescheduled\n* A booking is cancelled\n",
    "version" : "1.4.1",
    "title" : "Handy Orders API"
  },
  "tags" : [ {
    "name" : "orders",
    "description" : "API for creating and managing Orders"
  } ],
  "paths" : {
    "/orders" : {
      "get" : {
        "tags" : [ "orders" ],
        "summary" : "Fetch order information",
        "description" : "This path allows partners to fetch information about specific orders that exist through the Handy Orders API. This path is typically used to display customer order information to a partner.",
        "parameters" : [ {
          "in" : "path",
          "name" : "partner_order_id",
          "description" : "Provide the partner_order_id used to create the order",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "HDY-PARTNER-ID",
          "in" : "header",
          "description" : "partner machine name",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "demo_partner"
          }
        }, {
          "name" : "HDY-TIMESTAMP",
          "in" : "header",
          "description" : "unix timestamp of request",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "HDY-SIGNATURE",
          "in" : "header",
          "description" : "signed request signature",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Order",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "order" : {
                      "$ref" : "#/components/schemas/OrderResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "Create a new order",
        "description" : "This path allows partners to create orders through the Handy Orders API. This path is typically used when a customer purchases Handy Installation from a partner and the partner needs to create the corresponding order in the Handy Orders API.",
        "responses" : {
          "201" : {
            "description" : "Order created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "order" : {
                      "$ref" : "#/components/schemas/OrderResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "user" : {
                    "$ref" : "#/components/schemas/UserRequest"
                  },
                  "address" : {
                    "$ref" : "#/components/schemas/AddressRequest"
                  },
                  "order" : {
                    "$ref" : "#/components/schemas/OrderRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "orders" ],
        "summary" : "Cancel an order",
        "description" : "This path allows partners to cancel orders that were previously created through the Handy Orders API. This path is typically used to tell Handy that a customer has cancelled their item associated with their Handy installation.",
        "parameters" : [ {
          "in" : "path",
          "name" : "partner_order_id",
          "description" : "Provide the partner_order_id used to create the order",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          }
        }
      },
      "patch" : {
        "tags" : [ "orders" ],
        "summary" : "Update an Order's Delivery Date",
        "description" : "This path allows partners to update the expected delivery date of the item associated with the customer's Handy installation. This path is typically used to tell Handy that the delivery date of an item has been delayed so that Handy can delay the associated installation, if necessary.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "order" : {
                    "$ref" : "#/components/schemas/OrderRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Order",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "booking" : {
                      "$ref" : "#/components/schemas/OrderResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserRequest" : {
        "type" : "object",
        "required" : [ "first_name", "last_name", "email", "phone_number" ],
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "John"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Doe"
          },
          "email" : {
            "type" : "string",
            "example" : "johndoe@example.com"
          },
          "phone_number" : {
            "type" : "string",
            "example" : 2125555555
          }
        }
      },
      "AddressRequest" : {
        "type" : "object",
        "required" : [ "address1", "address2", "city", "state", "zipcode", "country" ],
        "properties" : {
          "address1" : {
            "type" : "string",
            "example" : "10 Main Street"
          },
          "address2" : {
            "type" : "string",
            "example" : "Apt 2"
          },
          "city" : {
            "type" : "string",
            "example" : "New York"
          },
          "state" : {
            "type" : "string",
            "example" : "NY"
          },
          "zipcode" : {
            "type" : "string",
            "example" : 10012
          },
          "country" : {
            "type" : "string",
            "example" : "US"
          }
        }
      },
      "OrderResponse" : {
        "type" : "object",
        "required" : [ "partner_order_id", "user_id", "address_id", "products", "created_at" ],
        "properties" : {
          "partner_order_id" : {
            "type" : "integer",
            "example" : 12345
          },
          "user_id" : {
            "type" : "string",
            "example" : "lnog1gg3l39140n"
          },
          "address_id" : {
            "type" : "string",
            "example" : "wzg8m14pz48mj9z"
          },
          "products" : {
            "$ref" : "#/components/schemas/ProductResponse"
          },
          "created_at" : {
            "type" : "string",
            "example" : "2017-04-17T03:50:02.000Z"
          }
        }
      },
      "ProductResponse" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "required" : [ "booking_id", "sku", "name", "quantity" ],
          "properties" : {
            "booking_id" : {
              "type" : "string",
              "example" : "j1z40w3gwwd2qmg"
            },
            "sku" : {
              "type" : "string",
              "example" : "STSP1001"
            },
            "name" : {
              "type" : "string",
              "example" : "Arm chair"
            },
            "quantity" : {
              "type" : "integer",
              "example" : 1
            }
          }
        }
      },
      "OrderRequest" : {
        "type" : "object",
        "required" : [ "partner_order_id", "products" ],
        "properties" : {
          "partner_order_id" : {
            "type" : "integer",
            "example" : 12345
          },
          "products" : {
            "$ref" : "#/components/schemas/Product"
          }
        }
      },
      "Product" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "required" : [ "sku", "product_info", "order_details" ],
          "properties" : {
            "sku" : {
              "type" : "string",
              "example" : "STSP1001"
            },
            "product_info" : {
              "$ref" : "#/components/schemas/ProductInfo"
            },
            "order_details" : {
              "$ref" : "#/components/schemas/OrderDetails"
            }
          }
        }
      },
      "ProductInfo" : {
        "type" : "object",
        "required" : [ "product_name" ],
        "properties" : {
          "product_name" : {
            "type" : "string",
            "example" : "Arm chair"
          }
        }
      },
      "OrderDetails" : {
        "type" : "object",
        "required" : [ "quantity", "delivery_date" ],
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "example" : 2
          },
          "delivery_date" : {
            "type" : "string",
            "example" : "2017-04-17T03:50:02.000Z"
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "Handy Orders API",
    "url" : "https://partners.services.handy.com/api/v1/"
  } ]
}