{"openapi":"3.0.0","info":{"description":"This API is used to add and update clearing information for investments to FintechClearing.com.","version":"2.0","title":"Fintech Clearing API v2","contact":{"email":"ben.lussier@sutterus.com"},"license":{"name":"All Rights Reserved"}},"servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/BenLussier/Fintech_Clearing_v2/2.0"},{"description":"Review Environment","url":"https://api.review.fintechclearing.com/"},{"description":"Production Environment","url":"https://api.fintechclearing.com/"}],"tags":[{"name":"Investment","description":"Add and update investment data."}],"paths":{"/v2/investments":{"post":{"tags":["Investment"],"summary":"Add a new investment for an offering","description":"Investment data should only be added to FintechClearing.com after: 1. Investor has passed identity verification. 2. Investment is ready for ACH transfer or investor has been approved/instructed to complete a wire transfer.","operationId":"addInvestment","parameters":[{"$ref":"#/components/parameters/Date"}],"security":[{"authorization_signature":[]}],"requestBody":{"$ref":"#/components/requestBodies/AddInvestment"},"responses":{"201":{"$ref":"#/components/responses/AddInvestmentResponse"},"400":{"description":"Bad Request","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"NoInvestment":{"$ref":"#/components/examples/NoInvestmentExample"},"MissingParameter":{"$ref":"#/components/examples/RequiredParameterMissingExample"},"InvalidFundingMethod":{"$ref":"#/components/examples/InvalidFundingMethodExample"},"InvalidBankAccountType":{"$ref":"#/components/examples/InvalidBankAccountTypeExample"},"MultipleErrors":{"$ref":"#/components/examples/MultipleErrorExample"}}}}},"401":{"description":"Unauthorized","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"Unauthorized":{"$ref":"#/components/examples/UnauthorizedExample"}}}}},"500":{"description":"Server Error","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"ServerError":{"$ref":"#/components/examples/ServerErrorExample"}}}}}}}},"/v2/investments/{uuid}":{"put":{"tags":["Investment"],"summary":"Update an investment for an offering with new data","operationId":"updateInvestment","parameters":[{"$ref":"#/components/parameters/Date"},{"name":"uuid","in":"path","description":"UUID of investment to be updated","required":true,"schema":{"type":"string","format":"uuid"},"example":"e40ca59d-e75b-47ec-a1e0-05fd5e9e3242"}],"security":[{"authorization_signature":[]}],"requestBody":{"$ref":"#/components/requestBodies/UpdateInvestment"},"responses":{"200":{"$ref":"#/components/responses/UpdateInvestmentResponse"},"400":{"description":"Bad Request","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"NoInvestment":{"$ref":"#/components/examples/NoInvestmentExample"},"InvalidFundingMethod":{"$ref":"#/components/examples/InvalidFundingMethodExample"},"InvalidBankAccountType":{"$ref":"#/components/examples/InvalidBankAccountTypeExample"},"MultipleErrors":{"$ref":"#/components/examples/MultipleErrorExample"}}}}},"401":{"description":"Unauthorized","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"Unauthorized":{"$ref":"#/components/examples/UnauthorizedExample"}}}}},"500":{"description":"Server Error","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"ServerError":{"$ref":"#/components/examples/ServerErrorExample"}}}}}}}}},"components":{"parameters":{"Date":{"name":"Date","in":"header","description":"Datetime of request in ISO 8601 UTC format (yyyy-MM-ddThh:mm:ssZ where T & Z are literals). This Date header must match the string used to generate the authorization signature and, the datetime must be within +/- 15 minutes of when the request is received by the server. Otherwise, an AUTHORIZATION_FAILED error response will be returned.","required":true,"schema":{"type":"string"},"example":"2020-01-16T18:17:25Z"}},"schemas":{"InvestmentBase":{"type":"object","properties":{"amount":{"type":"number","format":"USD","description":"Amount the investment is for in US dollars. Limit to two decimal places","example":7300.5},"funding_method":{"type":"string","enum":["funding_method_ach","funding_method_wire"],"description":"ACH or Wire transfer","example":"funding_method_ach"},"bank_account_type":{"type":"string","enum":["bank_account_type_checking","bank_account_type_savings"],"description":"checking or savings account","example":"bank_account_type_checking"},"bank_routing_number":{"type":"string","description":"Bank routing number. 9-digit integer if US bank. Alphanumeric if SWIFT code or international.","example":123456789},"bank_account_number":{"type":"string","description":"Bank account number.","example":987654321123},"bank_account_holder":{"type":"string","description":"Full name of bank account holder.","example":"John Doe"},"investor_first_name":{"type":"string","description":"First name of individual investor or signatory of entity.","example":"John"},"investor_last_name":{"type":"string","description":"Last name of individual investor or signatory of entity.","example":"Doe"},"investor_date_of_birth":{"type":"string","format":"yyyy-MM-dd","description":"Date of birth of individual investor or signatory of entity.","example":"1956-08-23"},"investor_ssn":{"type":"string","format":"XXX-XX-XXXX","description":"Social security number of individual investor or signatory of entity.","example":"123-45-6789"},"investor_phone":{"type":"string","description":"Phone number of individual investor or signatory of entity. (###)","example":"(801) 555-1234"},"investor_email":{"type":"string","description":"Email address of individual investor or signatory of entity.","example":"name@website.com"},"investor_address1":{"type":"string","description":"Address line 1 of individual investor or signatory of entity.","example":"321 Wrong Ave"},"investor_address2":{"type":"string","description":"Address line 2 of individual investor or signatory of entity.","example":"Unit 7"},"investor_city":{"type":"string","description":"City of individual investor or signatory of entity.","example":"Salt Lake City"},"investor_state":{"type":"string","description":"State of individual investor or signatory of entity.","example":"UT"},"investor_postal_code":{"type":"string","description":"Postal code of individual investor or signatory of entity.","example":84106},"investor_country":{"type":"string","description":"Country of individual investor or signatory of entity.","example":"US"},"entity_type":{"type":"string","enum":["Individual","Trust","LLC","Corporation"],"example":"Trust"},"entity_name":{"type":"string","description":"Name of the entity. Required if entity_type is not 'Individual'.","example":"The John Doe Trust"},"entity_signatory_title":{"type":"string","description":"Position or title of signatory of entity. Required if entity_type is not 'Individual'.","example":"Trustee"},"entity_phone":{"type":"string","description":"Phone number of entity. Required if entity_type is not 'Individual'. (###)","example":"(801) 555-1234"},"entity_ein":{"type":"string","format":"XX-XXXXXXX","description":"Tax EIN of entity. Required if entity_type is not 'Individual'.","example":"12-3456789"},"entity_state_of_domicile":{"type":"string","description":"State where entity was formed or principal affairs take place. Required if entity_type is not 'Individual'.","example":"CA"},"entity_date_of_formation":{"type":"string","format":"yyyy-MM-dd","description":"Date that entity was formed. Required if entity_type is not 'Individual'.","example":"2009-04-07"},"entity_address1":{"type":"string","description":"Address line 1 of entity. Required if entity_type is not 'Individual'.","example":"132 Faker St"},"entity_address2":{"type":"string","description":"Address line 2 of entity.","example":"Apt 4"},"entity_city":{"type":"string","description":"City of entity. Required if entity_type is not 'Individual'.","example":"Fakersville"},"entity_state":{"type":"string","description":"State of entity. Required if entity_type is not 'Individual'.","example":"CA"},"entity_postal_code":{"type":"string","description":"Postal code of entity. Required if entity_type is not 'Individual'.","example":90210},"entity_country":{"type":"string","description":"Country of entity. Required if entity_type is not 'Individual'.","example":"US"},"bank_account_verification_json":{"type":"string","format":"json","description":"This is a freeform field used to pass information relevant to 3rd party bank account verification (i.e. Plaid). It may include request IDs, item IDs, or various other pieces of information related to a specific platform."},"bank_account_identity_json":{"type":"string","format":"json","description":"This is a freeform field used to pass bank account holder identity information returned from 3rd party bank account verification (i.e. Plaid). This information can be used manually to compare to identity information passed with the investment for anti-fraud checks."},"identity_report_uuid":{"type":"string","description":"This field is used to pass an unique identifier (id or uuid) representing the approved investor record. This may be an id from your own records or an id from a 3rd party report (i.e. Idology)"},"identity_report_json":{"type":"string","format":"json","description":"This is a freeform field used to pass an identity verification report in a json format."}}},"AddInvestment":{"type":"object","properties":{"investment":{"allOf":[{"type":"object","required":["offering_uuid","amount","funding_method","bank_account_type","bank_routing_number","bank_account_number","bank_account_holder","investor_first_name","investor_last_name","investor_date_of_birth","investor_ssn","investor_phone","investor_email","investor_address1","investor_city","investor_state","investor_postal_code","investor_country","entity_type"],"properties":{"offering_uuid":{"type":"string","format":"uuid","description":"UUID of offering the investment is for","example":"5cb5c910-ca55-4f0b-9f1d-c20c0a49a4b2"}}},{"$ref":"#/components/schemas/InvestmentBase"}]}}},"UpdateInvestment":{"$ref":"#/components/schemas/InvestmentBase"},"AddInvestmentResponse":{"type":"object","properties":{"uuid":{"type":"string","description":"UUID created for the investment added. It is important to save this value with your investment records. It is used to update the investment if need be and is a way for FintechClearing.com to tie its records to yours.","example":"e40ca59d-e75b-47ec-a1e0-05fd5e9e3242"},"see_example":{"type":"object","description":"See example for rest of information returned."}}},"UpdateInvestmentResponse":{"type":"object","properties":{"see_example":{"type":"object","description":"See example for information returned."}}},"ErrorResponse":{"type":"object","properties":{"errors":{"type":"array","items":{"type":"object","properties":{"error_code":{"type":"string","enum":["AUTHORIZATION_FAILED","DOES_NOT_EXIST","INVALID_PARAMETERS","SERVER_ERROR"],"description":"A string constant to categorize the error. Able to be used programmatically."},"error_message":{"type":"string","description":"A detailed description of the error. Do not use programmatically as message may change in the future."}}}}}}},"requestBodies":{"AddInvestment":{"content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/AddInvestment"}}},"description":"Investment that is ready for ACH transfer or will be wired.","required":true},"UpdateInvestment":{"content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/UpdateInvestment"}}},"description":"Investment data to be updated","required":true}},"responses":{"AddInvestmentResponse":{"description":"Investment successfully added.","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/AddInvestmentResponse"},"example":{"uuid":"e40ca59d-e75b-47ec-a1e0-05fd5e9e3242","offering_uuid":"5cb5c910-ca55-4f0b-9f1d-c20c0a49a4b2","amount":"7300.50","funding_method":"funding_method_ach","investor_first_name":"John","investor_last_name":"Doe","investor_ssn":"*****6789","investor_address":{"investor_address1":"321 Wrong Ave","investor_address2":"Unit 7","investor_city":"Salt Lake City","investor_state":"UT","investor_country":"US","investor_postal_code":84106},"investor_phone":"(860) 462-7922","investor_email":"name@website.com","entity_name":null,"entity_type":"Individual","entity_signatory_title":null,"entity_phone":null,"entity_address":null,"entity_ein":null,"cip_status":"cip_status_not_initiated","status":"status_normal","offering":{"uuid":"5cb5c910-ca55-4f0b-9f1d-c20c0a49a4b2","name":"Test Offering"},"messages":[{"event_type":"Messages::Investment::Create","event_actor":"Postman Tester","created_at":"2020-01-17T21:41:35.245Z"}]}}}},"UpdateInvestmentResponse":{"description":"Investment successfully updated.","content":{"application/vnd.api+json":{"schema":{"$ref":"#/components/schemas/UpdateInvestmentResponse"},"example":{"uuid":"e40ca59d-e75b-47ec-a1e0-05fd5e9e3242","offering_uuid":"5cb5c910-ca55-4f0b-9f1d-c20c0a49a4b2","amount":45200.25,"funding_method":"funding_method_ach","investor_first_name":"Fake","investor_last_name":"Name","investor_ssn":"*****6789","investor_address":{"investor_city":"Salt Lake City","investor_state":"UT","investor_country":"US","investor_address1":"321 Wrong Ave","investor_address2":"Unit 7","investor_postal_code":84106},"investor_phone":"(860) 555-7922","investor_email":"newemail@website.com","entity_name":null,"entity_type":"Individual","entity_signatory_title":null,"entity_phone":null,"entity_address":null,"entity_ein":null,"cip_status":"cip_status_failed","status":"status_normal","offering":{"uuid":"5cb5c910-ca55-4f0b-9f1d-c20c0a49a4b2","name":"Test Offering"},"messages":[{"event_type":"Messages::Investment::Update","event_actor":"Postman Tester","created_at":"2020-01-17T20:11:51.560Z"},{"event_type":"Messages::Investment::Update","event_actor":"Postman Tester","created_at":"2020-01-17T20:01:14.426Z"},{"event_type":"Messages::Investment::Update","event_actor":"Postman Tester","created_at":"2020-01-17T19:49:44.620Z"},{"event_type":"Messages::Investment::Update","event_actor":"Postman Tester","created_at":"2020-01-17T19:27:29.085Z"},{"event_type":"Messages::Investment::CipFailed","event_actor":"Automated","created_at":"2020-01-17T19:26:38.169Z"},{"event_type":"Messages::Investment::Create","event_actor":"Postman Tester","created_at":"2020-01-17T19:26:37.683Z"}]}}}}},"examples":{"UnauthorizedExample":{"summary":"Authorization Failed","description":"Example response if Authorization header cannot be properly validated.","value":{"errors":[{"error_code":"AUTHORIZATION_FAILED","error_message":"Authorization failed."}]}},"NoOfferingExample":{"summary":"Offering UUID Does Not Exist","description":"Example response if Offering UUID could not be found in system. Note that this message is returned if offering UUID exists but api client does not have authorization to add or update investments for the offering.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"Offering UUID does not exist."}]}},"NoInvestmentExample":{"summary":"Investment UUID Does Not Exist","description":"Example response if Investment UUID could not be found in system. Note that this message is returned if investmnet UUID exists but api client does not have authorization to update investments for the offering.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"Investment UUID does not exist."}]}},"RequiredParameterMissingExample":{"summary":"Required Parameter Missing","description":"Example response if a required parameter is not passed.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"Investor last name is required."}]}},"InvalidFundingMethodExample":{"summary":"Invalid Funding Method","description":"Example response if an invalid funding_method is passed.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"'funding_method_iou' is not a valid funding_method"}]}},"InvalidBankAccountTypeExample":{"summary":"Invalid Bank Account Type","description":"Example response if an invalid bank_account_type is passed.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"'bank_account_type_401k' is not a valid bank_account_type"}]}},"MultipleErrorExample":{"summary":"Multiple Errors","description":"Example response if multiple errors are returned at once.","value":{"errors":[{"error_code":"INVALID_PARAMETERS","error_message":"Bank routing number must be a length of 9 for ACH funding method."},{"error_code":"INVALID_PARAMETERS","error_message":"Bank routing number must be numeric for ACH funding method."}]}},"ServerErrorExample":{"summary":"Server Error","description":"Example response if an internal server error occurs.","value":{"errors":[{"error_code":"SERVER_ERROR","error_message":"An internal server error occurred."}]}}},"securitySchemes":{"authorization_signature":{"type":"apiKey","in":"header","name":"Authorization","description":"In order to authenticate, the client is issued an API account. The API account includes a client_key and a secret_key. The client server than calculates a signature to place in the Authorization header (similar to AWS authorization) via the following steps: 1. Create a canonical string using the following format: {Request Method},{Content-Type Header},{client_key},{path},{Date Header} 2. Create a HMAC-SHA256 using the canonical string. 3. Create a signature by Base 64 encoding the HMAC-SHA256 4. Place the signature in the Authorization header using the following format: FTAuth {client_key}:{signature}. Canonical string example: POST,application/vnd.api+json,e74n89d78gj3jd86k,/v2/investments,2020-01012T17:13:24Z . Signature Example: FTAuth e74n89d78gj3jd86k:6QM87aVMLKRctDxLW6LmuiG3PAUgtdUV4/gc6/5IGPY= . Important: The headers much match the strings used to create the canonical string. The Date header must be within +/- 15 minutes of when the request is received by the FintechClearing server."}}}}