{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "HorizonCustomerService",
    "description" : "Interact with customer resources.",
    "license" : {
      "name" : "FIS Proprietary and Confidential"
    },
    "contact" : {
      "email" : "customer.api.support@fisglobal.com"
    },
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "http://10.7.64.102:1234/OLBAppServiceAPI/api"
  } ],
  "paths" : {
    "/customers/{customerIdentifier}/statusinfo" : {
      "get" : {
        "tags" : [ "Customer Status Inquiry" ],
        "summary" : "Retrieve customer status by RMS key",
        "operationId" : "getCustomerStatusByCoreKey",
        "parameters" : [ {
          "name" : "customerIdentifier",
          "in" : "path",
          "description" : "Customer identifier whose data is to be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 1152
          }
        }, {
          "name" : "organization-id",
          "in" : "header",
          "description" : "The Firm or organization identifier which is issuing the request.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "019209229"
          }
        }, {
          "name" : "uuid",
          "in" : "header",
          "description" : "Unique id to identify request.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "10e58d5b-def0-466c-a7f4-a778cd1995f5"
          }
        }, {
          "name" : "application-id",
          "in" : "header",
          "description" : "Identifies the application implementing the Service being invoked.",
          "schema" : {
            "type" : "string",
            "example" : "myapp"
          }
        }, {
          "name" : "session-id",
          "in" : "header",
          "description" : "A unique identifier of user session in api client application.",
          "schema" : {
            "type" : "string",
            "example" : "6d7c7096-f72a-4a70-a4a3-89c31ea6c869"
          }
        }, {
          "name" : "request-correlation-id",
          "in" : "header",
          "description" : "An optional identifier for a logical set of API request/response interactions.",
          "schema" : {
            "type" : "string",
            "example" : "861fd33a-16d1-4f6d-8574-db8956f7362a"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerStatusInfo"
                }
              }
            },
            "headers" : {
              "uuid" : {
                "$ref" : "#/components/parameters/uuid"
              },
              "request-correlation-id" : {
                "$ref" : "#/components/parameters/request-correlation-id"
              },
              "session-id" : {
                "$ref" : "#/components/parameters/session-id"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "415" : {
            "$ref" : "#/components/responses/415"
          },
          "422" : {
            "$ref" : "#/components/responses/422"
          },
          "500" : {
            "$ref" : "#/components/responses/500"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "x-auth-type" : "Application",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/customers/{customerIdentifier}/credentials/password" : {
      "post" : {
        "tags" : [ "Customer Password Reset" ],
        "operationId" : "resetCustomerPasswd",
        "summary" : "Resets customer password",
        "parameters" : [ {
          "name" : "customerIdentifier",
          "in" : "path",
          "description" : "Identifier of customer whose password is to be reset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/organization-id"
        }, {
          "$ref" : "#/components/parameters/uuid"
        }, {
          "$ref" : "#/components/parameters/application-id"
        }, {
          "$ref" : "#/components/parameters/session-id"
        }, {
          "$ref" : "#/components/parameters/request-correlation-id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newPassword" : {
                    "description" : "New temporary password for customer",
                    "type" : "string",
                    "format" : "password"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResetResponse"
                }
              }
            },
            "headers" : {
              "uuid" : {
                "$ref" : "#/components/parameters/uuid"
              },
              "request-correlation-id" : {
                "$ref" : "#/components/parameters/request-correlation-id"
              },
              "session-id" : {
                "$ref" : "#/components/parameters/session-id"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "415" : {
            "$ref" : "#/components/responses/415"
          },
          "422" : {
            "$ref" : "#/components/responses/422"
          },
          "500" : {
            "$ref" : "#/components/responses/500"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "x-auth-type" : "Application",
        "x-throttling-tier" : "Unlimited"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of condition that occurred.  Application semantics.  API clients should look here to determine type of problem.  Consider as required. Could be URN unique within API?!",
            "format" : "uri"
          },
          "title" : {
            "type" : "string",
            "description" : "short summary of the problem (logically an attribute of type) ... human (developer) readable.  advisory."
          },
          "details" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetails"
            }
          }
        }
      },
      "ErrorDetails" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code uniquely identifying the message."
          },
          "message" : {
            "type" : "string",
            "description" : "A textual description of the instance of the problem that occurred, and possibly how to correct it."
          },
          "field" : {
            "type" : "string",
            "description" : "This is used to identify a particular attribute of a corresponding API request that is in error."
          }
        }
      },
      "CustomerStatusInfo" : {
        "type" : "object",
        "properties" : {
          "adminUserIdentifier" : {
            "type" : "string",
            "example" : "system.admin"
          },
          "customerIdentifier" : {
            "type" : "string",
            "example" : 1152
          },
          "customerEnrolledInOlb" : {
            "$ref" : "#/components/schemas/EnrollmentInfo"
          },
          "customerStatus" : {
            "type" : "string",
            "enum" : [ "locked", "active" ]
          },
          "lastLoginDate" : {
            "type" : "string",
            "format" : "date"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ResetResponse" : {
        "type" : "object",
        "properties" : {
          "adminUserIdentifier" : {
            "type" : "string"
          },
          "customerIdentifier" : {
            "type" : "string"
          },
          "passwordUpdated" : {
            "type" : "string",
            "description" : "Returns Yes if updated else No"
          },
          "message" : {
            "type" : "string",
            "description" : "Specifies if other tasks related to password update is done.If web admin user does not have permission to unlock user then message will be customer not unlocked"
          }
        }
      },
      "EnrollmentInfo" : {
        "type" : "object",
        "properties" : {
          "isEnrolled" : {
            "type" : "string",
            "example" : "Yes",
            "description" : "Returns Yes if enrolled else No"
          },
          "enrollmentDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "description" : "the following flows are supported.",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://codeconnect.fisglobal.com/token"
          },
          "authorizationCode" : {
            "authorizationUrl" : "https://codeconnect.fisglobal.com/authorize",
            "tokenUrl" : "https://codeconnect.fisglobal.com/token"
          }
        }
      },
      "basicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "parameters" : {
      "authorization" : {
        "name" : "authorization",
        "in" : "header",
        "description" : "Bearer token - When invoking a Code Connect API, API-clients identify an Authentication Type of \"Bearer\"",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "application-id" : {
        "name" : "application-id",
        "in" : "header",
        "description" : "Identifies the application implementing the Service being invoked.",
        "schema" : {
          "type" : "string"
        }
      },
      "organization-id" : {
        "name" : "organization-id",
        "in" : "header",
        "description" : "The Firm or organization identifier which is issuing the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "request-correlation-id" : {
        "name" : "request-correlation-id",
        "in" : "header",
        "description" : "An optional identifier for a logical set of API request/response interactions.",
        "schema" : {
          "type" : "string"
        }
      },
      "session-id" : {
        "name" : "session-id",
        "in" : "header",
        "description" : "A unique identifier of user session in api client application.",
        "schema" : {
          "type" : "string"
        }
      },
      "source-id" : {
        "name" : "source-id",
        "in" : "header",
        "description" : "The Originating application or client using the service.",
        "schema" : {
          "type" : "string"
        }
      },
      "uuid" : {
        "name" : "uuid",
        "in" : "header",
        "description" : "Unique id to identify request.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "responses" : {
      "204" : {
        "description" : "No Content"
      },
      "400" : {
        "description" : "Bad Request",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "404" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "405" : {
        "description" : "Method Not Allowed",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "415" : {
        "description" : "Unsupported Media Type",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "422" : {
        "description" : "Unprocessable Entity",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "503" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}