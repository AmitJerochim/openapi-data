openapi: 3.0.0
info:
  version: "1.0"
  title: Hello World Service
  description: >-
    This service provides examples of three types of API calls, a public unsecured API, a secured
    API call which requires that the API consumer has been authenticated, and a secured API
    call that exposes personal information which requires a valid session token.
  contact:
    name: Alight Api Support Mailbox
    email: alight.ApiSupport@alight.com
servers:
  - url: 'https://api.int.alight.com/api/helloworld'
    description: Development environment
  - url: 'https://api-qa.alight.com/api/helloworld'
    description: Quality Assurance environment
  - url: 'https://api-ste.alight.com/api/helloworld'
    description: Stress Test environment
  - url: 'https://api-qc.alight.com/api/helloworld'
    description: Quality Control environment
  - url: 'https://api.alight.com/api/helloworld'
    description: Production environment
  - url: 'http://localhost/api/helloworld'
    description: Local Development environment
paths:
  /testConnection:
    get:
      summary: Verify that the consumer is able to connect and access a publicly available, unsecured resource.
      description: 'Verify that the consumer is able to connect and access a publicly available, unsecured resource'
      operationId: 'getTestCOnnection'
      responses:
        '200':
          description: Connection verified
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /sayHelloWorld:
    get:
      summary: Verify that the API consumer is able to access resources that are secured via an access token.
      description: 'Verify that the API consumer is able to access resources that are secured via an access token.'
      operationId: 'getSayHelloWorld'
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: >-
            Authorization header that must container 'bearer ' + the access token
          schema:
            type: string
          required: true
          examples:
            authorization-example:
              $ref: '#/components/examples/authorization-header'
        - name: alightRequestHeader
          in: header
          description: Request header used to provide metadata about the request.
          schema:
            $ref: '#/components/schemas/alightRequestHeader'
        - name: name
          in: query
          description: Your name.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
          headers:
            alightResponseHeader:
              description: Additional metadata related to the response.
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'                
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /sayHelloWithPersonSessionToken:
    post:
      summary: >-
        Verify that the API consumer is able to access resources that are secured via an alightPersonSessionToken.
      description: 'Verify that the API consumer is able to access resources that are secured via an alightPersonSessionToken.'  
      operationId: 'postSayHelloWithPersonSessionToken'
      security:
        - alightPersonSessionToken: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Session token returned from /startSessionForPerson.
          schema:
            type: string
        - name: alightRequestHeader
          in: header
          description: Request header used to provide metadata about the request.
          schema:
            $ref: '#/components/schemas/alightRequestHeader'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personWorker'          
          headers:
            alightPersonSessionToken:
              description: The (possibly updated) session token. The session token from the response should be passed on the next request for this participant.
              schema:
                type: string
            alightResponseHeader:
              description: Additional metadata related to the response.
              schema:
                $ref: '#/components/schemas/alightResponseHeader'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'                
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    personWorker:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/person'
        worker:
          $ref: '#/components/schemas/worker'
    person:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
    worker:
      type: object
      properties:
        hireDate:
          type: string
    transactionHeader:
      type: object
      properties:
        activityId:
          type: string
        activityDescription:
          type: string
        activityReferenceNumber:
          type: string
        alternateActivityReferenceId:
          type: string
        personActivityFactoryMethod:
          type: string
        effectiveDate:
          type: string
        tbaActivity.activityBrandCode:
          type: string
        tbaActivity.planBrandCode:
          type: string
        tbaActivity.planDescription:
          type: string
        tbaActivity.planId:
          type: string
    systemTicket:
      type: object
      properties:
        key:
          type: string
        value:
          type: string  
    editHandlingInstructions:
      type: object
      properties:
        sourceSystem:
          type: string
        globalOverride:
          type: string
        editMessageInstructions:
          type: string
        editMessageInstructions.id:
          type: string
        editMessageInstructions.overrideType:
          type: string
        editMessageInstructions.comment:
          type: string
    ybrFocOverrides:
      type: object
      properties:
        webRequestTypeCode:
          type: string
        webRequestId:
          type: string
    operationalDirective:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    editDiagnostic:
      type: object
      properties:
        symbolic:
          type: string
        fieldValue:
          type: string
    editMessage:
      type: object
      properties:
        editId:
          type: string
        editMessage:
          type: string
        fieldInErrorIdentifier:
          type: string
        editDiagnostics:
          type: array
          items:
            $ref: '#/components/schemas/editDiagnostic'  
    editMessageGroupResponse:
      type: object
      properties:
        sourceSystem:
          type: string
        locale:
          type: string
        editMessages:
          type: array
          items:
            $ref: '#/components/schemas/editMessage'  
    alightRequestHeader:
      type: object
      properties:
        clientId: 
          description: clientId for idMapping entry to use
          type: string
        systemInstanceId:
          description: systemInstanceId for idMapping entry to use
          type: string
        subjectId:
          description: Required for person-based API (must be in idMapping array)
          type: string
        subjectType:
          description: Required for person-based API (id type to look for in idMapping)
          type: string
        roleId:
          description: UPoint roleId (temp. needed for channel svcs)
          type: string
        locale:
          description: Will override value from SessionToken if provided (format is en_US).
          type: string
        consumerReferenceId:
          description: A unique correlation value for consumer logging
          type: string
        correlationId:
          description: A unique correlation value for internal logging
          type: string
        parentSpanId:
          description: Parent span Id
          type: string
        channelRequestData:
          description: Channel request data
          type: string
        adminCredentials:
          description: Used for impersonation or to run API as specific colleague.  See below for details.
          type: string
        dynamicSystemTicket:
          description: TBA-specific element used for intra-dynamic messaging
          type: string
        transactionHeader:
          $ref: '#/components/schemas/transactionHeader' 
        systemTickets:
          type: array
          items:
            $ref: '#/components/schemas/systemTicket'  
        editHandlingInstructions:
          $ref: '#/components/schemas/editHandlingInstructions'
        ybrFocOverrides:
          $ref: '#/components/schemas/ybrFocOverrides'
        operationalDirectives:
          type: array
          items:
            $ref: '#/components/schemas/operationalDirective'
    alightResponseHeader:
      type: object
      properties:
        responseCode:
          description: A code describing the outcome of the response.
          type: string
        responseDescription:
          description: Additional detail about the outcome of the reponse.
          type: string
        systemInstanceId:
          description: The system instance ID associated with the request/response.
          type: string
        systemTickets:
          type: array
          items:
            $ref: '#/components/schemas/systemTicket'  
        dynamicSystemTicket:
          description: TBA-specific element used for intra-dynamic messaging
          type: string
        transactionHeader:
          $ref: '#/components/schemas/transactionHeader' 
        editMessageGroupResponse:
          $ref: '#/components/schemas/editMessageGroupResponse' 
    error:
      properties:
        message:
          type: string
        status:
          type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    authorization-header:
      summary: Example of an Authorization header parameter
      value: >-
        bearer
        eyJhbGciOiJSUzI1NiJ9.eyJleHAiOjE1MTAxNjQ4NzgsImJyb2tlclVzZXJJZCI6IlBvcnRhbCJ9.Gnu-xGwDWexq9FImIAiGh4ZjtK5jujqcN6uDHoa0Km-uCjIGhshw6zhTU8eiw0yg0rZ_tq0IAd8gYvEXtpP-kiJA6V1llBkcuSLup_IkiunL14ZliXfixwkwKqUaNo9zF4f1L_Cqm1gVqJlNVzy1224MtvMI70uU8rK_MzOEEjddCa7yhqMaKfLpN6ajNDyyXJL0DpPCLFSZ99tTYOq6GuueTpCTv6nv3BLtHOIH8CMXbz6l_z2paBzGro0OyGVcAs0QDwwSU7T2hZhHVYzYZSE4SpDdHkoXhls1NgvHQF5onVxxXcgb9yuYOkdruZwPA8in7HuV0FM5jiUIwGTuaQ
