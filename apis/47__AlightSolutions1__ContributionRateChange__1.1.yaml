openapi: 3.0.0
info:
  version: "1.1"
  title: 'Contribution Rate Change API'
  description: 'API for processing contribution elections in Defined Contribution plans.'
  contact:
    name: Alight Api Support Mailbox
    email: alight.ApiSupport@alight.com
paths:
  /contributionratechange/contributionRateChange:
    get:
      operationId: getContributionRateChange
      summary: Returns associated business processes related to making contribution elections.
      description: Gets eligible defined contribution plans and it's associated business process details related to making contribution elections.
      security:
        - bearerAuth: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Person Session Token established from a startSessionForPerson API call. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true
        - name: alightRequestHeader
          in: header
          description: Additional request header information. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: object
          required: true
        - name: planId
          in: query
          description: Source system plan identifier that can be used to return data for a specific Defined Contribution plan. If not specified, it will return all Defined Contribution plans a person is eligible to make contribution rate changes for.
          schema:
            type: string
          required: false  
        - name: requestingBusinessProcess
          in: query
          description: An optional query parameter which is not required if the process being requested is the standard standalone change contribution process.  If the process is related to Boost Your Retirement feature or is part of an enrollment process to a DC plan, it is required. Boost Your Retirement valid values are 'SM' (Save More) or 'MM' (Match More). If it is a request to make contribution elections as part of enrolling in a DC plan, 'E' (Enrollment) whould be the value. 
          schema:
            type: string
          required: false
      responses:
        200:
          description: Returns eligible plans and it's associated business processes.
          headers:
            alightPersonSessionToken:
              schema:
                type: string
              description: Returns the person token session used in the request.
            alightResponseHeader:
              schema:
                type: object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionRateChange'
        default: 
          description: Unexpected error.
      tags:
        - Change Contribution                      
  /contributionratechange/personContributionRateChange:
    post:
      operationId: postPersonContributionRateChange
      summary: Commits contribution election requests to the source system.
      description: This operation will process and create result data on the source system based on request data passed into the API resource and if no critical edits are triggered. Edits are system messages that give users/consumers information about data they are processing. If the severity level of an edit is high enough, it can prevent the business process from completing the request. Edit information, if triggered, is returned in the alightResponseHeader. 
      security:
        - bearerAuth: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Person Session Token established from a startSessionForPerson API call. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true
        - name: alightRequestHeader
          in: header
          description: Additional request header information. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true          
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/PersonContributionRateChange'
      responses:
        201:
          description: Successfully added or updated contribution elections.
          headers:
            alightPersonSessionToken:
              schema:
                type: string
              description: Returns the person token session used in the request.
            alightResponseHeader:
              schema:
                type: object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayImpact'          
        default: 
          description: Unexpected error.
      tags:
        - Change Contribution    
  /contributionratechange/personContributionRateChange/validate:
    post:
      operationId: postPersonContributionRateChangeValidate
      summary: Validates contribution election requests to the source system.
      description: This is similar to the post/contributionratechange/personContributionRateChange operation with the exception that it only validates the request.  It does not commit any data to the source system. This operation can also trigger edits. Edits are system messages that give users/consumers information about data they are processing. Edit information, if triggered, is returned in the alightResponseHeader. 
      security:
        - bearerAuth: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Person Session Token established from a startSessionForPerson API call. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true
        - name: alightRequestHeader
          in: header
          description: Additional request header information. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true          
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/PersonContributionRateChange'
      responses:
        200:
          description: Successfully validated contribution elections.  
          headers:
            alightPersonSessionToken:
              schema:
                type: string
              description: Returns the person token session used in the request.
            alightResponseHeader:
              schema:
                type: object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayImpact'
        400:
          description: Bad request. Missing required parameters.     
        default: 
          description: Unexpected error.
      tags:
        - Change Contribution     
  /contributionratechange/computePayCheckImpact:
    post:
      operationId: postComputePayCheckImpact
      summary: Calculates the impact on your pay check based on processing the requested contribution elections.
      description: Uses the contribution elections made in the request to determine the impact on your pay check if the request is processed on the source system. This is an overloaded POST operation that allows a request body to be used to process a calculation.  It does not update any data on the system. 
      security:
        - bearerAuth: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Person Session Token established from a startSessionForPerson API call. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true
        - name: alightRequestHeader
          in: header
          description: Additional request header information. Refer to Contribution Rate Change API Supplementary document for more information. 
          schema:
            type: string
          required: true          
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/PersonContributionRateChange'
      responses:
        200:
          description: Successfully calculated impact on pay check. 
          headers:
            alightPersonSessionToken:
              schema:
                type: string
              description: Returns the person token session used in the request.
            alightResponseHeader:
              schema:
                type: object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayImpact'
        400:
          description: Bad request. Missing required parameters.       
        default: 
          description: Unexpected error.
      tags:
        - Change Contribution 
  /contributionratechange/personPlanContributionLimits:
    get:
      operationId: getPersonPlanContributionLimits
      summary: Gets plan contribution limits configured on the source system. 
      description: Source system defined plan limits associated with contributioning to a plan.
      security:
        - bearerAuth: []
      parameters:
        - name: alightPersonSessionToken
          in: header
          description: Person Session Token established from a startSessionForPerson API call. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true
        - name: alightRequestHeader
          in: header
          description: Additional request header information. Refer to Contribution Rate Change API Supplementary document for more information.
          schema:
            type: string
          required: true 
        - name: planId
          in: query
          description: Source system plan identifier used to return data for a specific Defined Contribution plan.
          schema:
            type: string
          required: true  
      responses:
        200:
          description: Successfully got the details for limits
          headers:
            alightPersonSessionToken:
              schema:
                type: string
              description: Returns the person token session used in the request.
            alightResponseHeader:
              schema:
                type: object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanContributionLimits'
        400:
          description: Bad request. Missing required parameters.    
        default: 
          description: Unexpected error.
      tags:
        - Change Contribution       
tags:
  - name: Change Contribution
    description:  >-
      <h2>Context Glossary</h2>
      <ul>
      <li><strong>Boost Your Retirement</strong> refers to an Alight feature that provides an easy path for a participant to increase their contribution. Rather than going through a standard contribution election flow, the quick path will allow the user to see their current contribution amounts, a suggested contribution amount and how their paycheck would be affected if they took the suggested change. Client plan sponsor must adopt the feature in order for a participant to be eligible for it.</li>
      <p><li><strong>Catch Up Contributions</strong> refers to additional before tax or roth contributions a participant makes in a 401k plan that is above the IRS 402g limit established for the current year. Only participants who are 50 years or older at the end of the calendar year qualify to contribute up to the additional catch up contribution limit specified by the IRS.</li></p>
      <p><li><strong>Contribution Rate</strong> is a term used to represent a type of contribution election a participant can make in a plan. It is defined by the type of money contributed to a plan (before tax, ROTH, after tax, etc.) in addition to rules and features for making elections using the contribution rate.</li></p>
      <p><li><strong>Contribution Rate Combination</strong> is a term used to group contribution rates together for the purpose of defining minimum and maximum contribution percentages or amounts a person can elect in a plan for any combonation of the contribution rates in the group.</li></p>
      <p><li><strong>Escalation and Target Rates</strong> refers to a feature that allows a participant who elects a contribution rate to automatically increase that contribution on a yearly basis using an elected incremental rate (escalation) until it reaches an elected target rate. Escalation and target rates are mutually inclusive. You cannot make an elected rate in one without making an election in the other.  Not all contribution rates support escalation</li></p>
      <p><li><strong>Custom Annual Increase</strong> referred to also as <strong>custom escalation</strong> adds the flexibility to choose the month or month and day that an elected incremental rate (escalation) takes effect in any subsequent year.</li></p>
      <p><li><strong>402g Limit</strong> is an IRS limit that caps how much before tax and ROTH contributions a participant can contribute to their 401k plan in a given year. Limits are set yearly by the IRS. For instance, 2019 limit was to $19000 while 2020 was set to $19500.</li></p>      
      </ul>
components:
  schemas: 
    ContributionRateChange:
      type: object
      properties:
        isUserEligibleForCatchUp:
          type: boolean
          description: Determines if the user is eligible to make 402g catch up contribution elections. 
          example: true 
        businessProcesses:
          type: array
          description: Contains process rules and other business process level data.
          items: 
            $ref: '#/components/schemas/BusinessProcesses'
        businessProcessPlan:
          type: array
          description: Contains plan level rules and provisions associated with the business process.
          items: 
            $ref: '#/components/schemas/BusinessProcessPlan'    
        personBusinessProcessEligibility:
          type: array
          description: Contains suggested contribution packages a person can take based on their current contribution elections.
          items: 
            $ref: '#/components/schemas/PersonBusinessProcessEligibility'  
    BusinessProcesses:
      type: object
      required:
        - businessProcessId
        - planId
      properties:            
        businessProcessId:  
          type: string
          description: Source system derived identifier associated with a business process.  
          example: "100"
        businessProcessDescription:
          type: string
          description: Readable description for the business process.
          example: "Contribution Rate Change for 401(k) Premier Savings Plan"            
        businessProcessShortDescription:
          type: string
          description: Readable short description for the business process.
          example: "Contribution Rate Change" 
        businessProcessNewBeginDate:
          type: string
          format: date
          description: Date in which new contributions elections will take effect. Format is CCYY-MM-DD.
          example: "2018-04-02" 
        planId:
          type: string
          description: Source system derived plan identifier that is associated with the contribution election change business process.  To view plan information for the planId, refrence businessProcessPlan array.
          example: "10"
        contributionRateRules:
          type: array
          description: Rules associated with contribution rates.  A contribution rate represents a contribution election defined primarily by the type of money that would be distributed into the plan should a person choose to contribute from that election. Additional rules are associated with a contribution rate that would be found in this array.  
          items: 
            $ref: '#/components/schemas/ContributionRateRules'       
        combinedContributionRateRules:
          type: array
          description: Plan sponsors can define rules around a combination of contribution rates. This array defines those rules and specifies which contribution rates are included in the combonation.
          items: 
            $ref: '#/components/schemas/CombinedContributionRateRules'
    ContributionRateRules:
      type: object
      properties:            
        contributionRateId:
          type: string
          description: Source system identifier for a contribution rate.
          example: "10"
        contributionRateType:
          type: string
          description: Source system generated value (acronym) which represents the type of money associated with the contribution rate Id.
          example: "BT" 
        contributionRateTypeDescription:
          type: string
          description: The description associated with the contributionRateType.
          example: "Before tax"
        contributionRateDisplayOrderSequence:
          type: number
          description: Sequence number assigned to the contribution rate for user interface display purposes.   
          example: 10
        isContributionRateEscalationSupported:
          type: boolean
          description: Determines whether the contribution rate supports escalation. Escalation is an election a person can make on top of their contribution election that automatically increases the contribution by the elected amount at a predetermined annual date until it reaches a target contribution election.  Escalation and target elections are taken together.
          example: true
        minimumContributionPercent:
          type: number
          format: double
          description: Minimum contribution percentage that a participant can elect for the contribution rate.
          example: 1.0
        maximumContributionPercent:
          type: number
          format: double
          description: Maximum contribution percentage that a participant can elect for the contribution rate.
          example: 11.0
        minimumContributionAmount:
          type: number
          format: double
          description: Minimum contribution amount in dollars that a participant can elect for the contribution rate.
          example: 50.00
        maximumContributionAmount:
          type: number
          format: double
          description: Maximum contribution amount in dollars that a participant can elect for the contribution rate.
          example: 500.00          
        maximumContributionPercentForHiglyCompensatedEmployee:
          type: number
          format: double
          description: Maximum contribution in percent that a higly compensated employee can make for this contribution rate.
          example: 10.0
        maximumContributionAmountForHiglyCompensatedEmployee:
          type: number
          format: double
          description: Maximum contribution in dollars that a higly compensated employee can make for this contribution rate.
          example: 8100.0
        validContributionIncrementInPercent:
          type: number
          format: double
          description: Specifies the valid increment percentage a person can enter for their contribution election.
          example: 1.01
        validEscalationIncrementInPercent:
          type: number
          format: double
          description: Specifies the valid increment percentage a person can enter for escalation.
          example: 1.01        
        validTargetIncrementInPercent:
          type: number
          format: double
          description: Specifies the valid increment percentage a person can enter for their target escalation.
          example: 1.0                  
        contributionInPercentOrDollar:  
          type: string
          description: Determines if the contribution election must be specified as a percentage or dollar amount or it can be either.  RT - rate (percentage), AT - amount, B - both (percentage or amount)
          example: "RT" 
        isEmployerMatchEligible:  
          type: boolean
          description: Determines whether employer match is applicable for this contribution rate.
          example: true
        nextEscalationDate:
          type: string
          format: date
          description: If a person has made an escalation election for the contribution rate, this will be the date in which the next contribution escalation is to be applied.
          example: "2018-10-15" 
        isSeparateCatchUpElectionIndicatorSupported:
          type: boolean
          description: This will determine whether the plan sponsor offers a special catch up election status indicator.  
          example: true 
        defaultSeparateCatchUpElectionIndicator:
          type: boolean
          description: This field is only applicable if isSeparateCatchUpElectionIndicatorSupported is true.  It specifies the default value (true/false) to apply tor the user as it relates to their catch up election status indicator. 
          example: true  
    CombinedContributionRateRules:
      type: object
      properties:            
        id:
          type: string
          format: number
          description: Source system derived identifier that represents the list of contribution rates included in the combonation along with the rules for that combonation. 
          example: "10"
        maximumLimitInPercent:
          type: number
          format: double
          description: Combined maximum contribution percentage that can be applied to the combination of contribution rates.
          example: 15.0
        maximumLimitInAmount:
          type: number
          format: double
          description: Combined maximum contribution amount in dollars that can be applied to the combination of contribution rates.
          example: 1000.00        
        maximumLimitInPercentForHighlyCompensatedEmployee:
          type: number
          format: double
          description: Highly compensated employee maximum contribution percentages that can be applied for the combined contribution rates included in the combonation. HCEs are determined by the client sponsor of the plan.
          example: 15.0        
        maximumLimitInAmountForHighlyCompensatedEmployee:
          type: number
          format: double
          description: Highly compensated employee maximum contribution amounts that can be applied for the combined contribution rates included in the combonation. HCEs are determined determined by the client sponsor of the plan.
          example: 2000.00        
        rateIds:
          type: array
          description: Contribution rate identifiers included in the combination.
          items: 
            type: object
            properties:            
              contributionRateId:
                type: string
                description: Source system identifier for a contribution rate.
                example: "10"
    BusinessProcessPlan:
      type: object
      required:
        - planId
      properties:            
        planId:
          type: string
          description: Source system derived plan identifier.
          example: "10"
        planDescription:
          type: string
          description: Readable description for plan
          example: "Premier Company 401(k) Savings Plan"         
        planShortDescription:
          type: string
          description: Readable short description for plan
          example: "401(k) Savings Plan"
        isActiveInDefinedContributions:
          type: boolean
          description: Determines if the user is not in a suspended contribution status (true) or if they are (false).
          example: true 
        contributionSuspensionEndDate:
          type: string
          format: date
          description: If the person is in a suspended contribution status, this represents the date the suspended status will end.
          example: "2019-01-01" 
        isCustomEscalationDateSupported:
          type: boolean
          description: Determines if the plan supports custom escalation.  Custom escalation allows the user to have more control over the date that annual contribution esclations take place.  
          example: true  
        customEscalationElectionType:
          type: string
          description: If custom escalation is supported, this determines the type supported.  A value of 'D' means the user the can choose the exact day and month in which the escalation takes place in a given year. A value 'M' represents that a user can only choose the month in which the escalationn takes place in a given year. 
          enum: ['D','M']
          example: 'D'  
        cutoffWindowInMonthsForCustomEscalation:
          type: number
          format: integer
          description: Lag in number of months before a person can choose their first custom escalation date. For instance, if the number is 3 and today is the 12th of May 2016, if they choose any day/month combonation before or on 12th Aug, then the first escalation date will take affect in 2017.  Any day/month after Aug 12 will make the first effective escalation in 2016.
          enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          example: 1
        defaultDayOfMonthForCustomEscalation:
          type: number
          format: integer
          description: Default day of the month when custom escalation will take effect. Since total days vary by month, special values such as 88 will represent the second to last day of month while 99 represents the last day of the month. Other valid results can be 1-29.
          example: any number from 1 to 26 or special value 88 or 99 
        isAfterTaxSpilloverSupported:
          type: boolean
          description: A boolean indicator to determine if the plan allows the ability for someone to opt into after tax spillover. After tax spillover takes excess before tax and roth dollars contributed over the IRS limit and applies it as after tax money into the plan.
          example: true 
        defaultAfterTaxSpilloverStatusCode:
          type: string
          description: This applies to plan sponsors that support after tax spillover (isAfterTaxSpilloverSupported = true). It provides the default opt-in value for the after tax spillover feature.  Y = opt-in. N = opt-out.
          example: "Y" 
        planWithholdingUSorPRorBoth:
          type: string
          description:  Determines if the plan supports Puerto Rico withholding or US withholding or both. This would only impact residents of Puerto Rico.  Valid values are 'B' (Both), 'P' (Puerto Rico only), 'U' (U.S only).
          example: 'B'
        402GLimitAmount:
          type: number
          format: double
          description: This will be 402G limit for current year.
          example: 19500.00
        isContributionsLimitReachedForCurrentYear:  
          type: boolean
          description: Determines if the employee before tax and roth contributions into the plan have met the IRS 402g limit for the year.  
          example: false
        isPlanSupportingRothContribution:
          type: boolean
          description: Determines if the plan support Roth contributions.
          example: true
        isSingleCatchUpElectionSupported:
          type: boolean
          description: Determines if the plan uses one contribution rate election to lump both regular contributions and catch up contributions. True = one election for both regular and catch up contributions.  False = otherwise.
          example: true
        isCatchUpElectionSupported:
          type: boolean
          description: Determines if the plan supports catch up as it's own standalone contribution rate.
          example: false  
        isEligibleForEmployerMatchInPlan:  
          type: boolean
          description: Determines if employer match is supported in the plan.
          example: false
        employerMatchRule:
          $ref: '#/components/schemas/EmployerMatchRule'
        contributionLimits:
          type: array
          description: Contribution rate rules with regards to limits.
          items:
            $ref: '#/components/schemas/ContributionLimits'  
    EmployerMatchRule:
      type: object
      properties:            
        matchId:
          type: string
          format: number
          description: Source system derived identifier associated with the employer match rules.
          example: "150"
        totalMaximumMatchPercent:  
          type: number
          format: double
          description:  The percentage of pay an employee must contribute in order to receive the full employer match amount. 
          example: 6.0
        isMatchInDollarAsPerPayCheck:
          type: boolean
          description: This only applies to employer match configuration where the match is setup as a dollar amount rather than a percent (eg, company will match all or a portion of the first $200 of employee contributed dollars vs matching all or a portion of the first 4% of pay the ppt contributes).  If any match tiers are setup as dollar, the boolean determines if that match amount is a per paycheck amount or a flat annual dollar amount. 
          example: false
        matchTiers:
          type: array
          description: Details of the employer match by tiers.
          items: 
            $ref: '#/components/schemas/MatchTiers'   
        contributionRatesMatch:
          type: array
          description: Contribution rates that the employer match applies to.
          items: 
            $ref: '#/components/schemas/contributionRatesMatch'              
    MatchTiers:
      type: object
      properties:            
        matchSequence:  
          type: number
          format: double
          description: Match Sequence number
          example: 10
        matchRate:
          type: number
          format: double
          description: Rate at which the employer matches employee contribution. For example, 100 means 100% match on employee money at this tier level (in other words, employer matches dollar per dollar on employee contribtions at this level).  
          example: 50.0        
        isMatchInPercent:
          type: boolean
          description: Determines if match is offered in dollars or percents. True means it matches on percent of pay contributed in the plan by the employee.  False means it matches against a flat dollar amount contributed.
          example: true
        maximumMatchPercent:
          type: number
          format: double
          description: Percent in the tier that a employee must contribute to receive the maximum match dollars an employer will contribute for that tier.
          example: 3.00
        maximumMatchAmount:
          type: number
          format: double
          description: Dollar amount in the tier that a employee must contribute to receive the maximum match in dollars that an employer will contribute for that tier.
          example: 500.00
    contributionRatesMatch:
      type: object
      required:
        - contributionRateId  
      properties:  
        contributionRateId:    
          type: string
          format: number
          description: Contribution Rate Id that is eligible for the associated match rules.
          example: "10"
    PersonBusinessProcessEligibility:
      type: object
      properties:  
        businessProcessId:  
          type: string
          format: number
          description: Business Process Id
          example: "100"      
        showEmployerMatch:
          type: boolean
          description: Client sponsor configuration on the source system that determines whether to show or hide employer match information if it exists.
          example: false
        packages:
          type: array
          description: Array of suggested contribution election packages a participant can choose from based on their current elections.  The packages are suggestions that help the participant to maximize their contribution if they aren't already doing so.  For example, they are not already contributing to a level that maximizes employer match contributions so one of the suggested election packages would allow them to contribute more to take advantage of that employer match.
          items: 
            $ref: '#/components/schemas/Packages'
    Packages:
      type: object
      properties:            
        name:  
          type: string
          description: Source system derived package name.
          example: "CM1"
        totalContributionPercent:
          type: number
          format: double
          description: The cumulative contribution percent across all suggested contribution rates (elections) in the package. 
          example: 6.0
        totalContributionAmount:
          type: number
          format: double
          description: The cumulative contribution amount across all suggested contribution rates (elections) in the package.
          example: 500.00
        annualContributionAmount:  
          type: number
          format: double
          description: The calculated annual employee contribution in dollars if a person opts for this package.
          example: 12000.0  
        maxEmployerMatchInPercent:
          type: number
          format: double
          description: Employee contribution expressed as a percentage of pay that maximizes employer match.
          example: 6.00  
        employerMatchAmount:
          type: number
          format: double
          description: Employer Match amount the participant is going to receive as per the package
          example: 250.00
        missingEmployerMatchAmount:
          type: number
          format: double
          description: Employer match amount that the participant is currently missing.  
          example: 250.00
        packageContributions:
          type: array
          description: Contribution rate elections suggested in the package
          items: 
            $ref: '#/components/schemas/PackageContributions'   
    PackageContributions:
      type: object
      required:
        - contributionRateId
      properties:
        contributionRateId:
          type: string
          format: number
          description: Source system generated contribution rate Id.
          example: 10
        suggestedContributionPercent:
          type: number
          format: double
          description: The suggested contribution percentage. 
          example: 6.0
        suggestedContributionAmount:
          type: number
          format: double
          description:  The suggested contribution amount in dollars.       
          example: 0.00                    
        isCombinedLimitReached:  
          type: boolean
          description: Determines whether the combined contribution limit defined by the client is reached by opting for this contribution rate package.
          example: true 
    PersonContributionRateChange:
      required:
        - planId
        - newContributions
      properties:
        planId:
          type: string
          description: Plan Id
          example: 10
        escalationDate:
          type: number
          format: date
          description: This element applies to client sponsors that support custom escalation (versus standard escalation). This represents the custom escalation date that user has requested. Format should be in CCYY-MM-DD. This is required only if the escalationPercent in the request greater than zero. 
          example: '2018-11-17'          
        requestingBusinessProcess:
          type: string
          description: If this request is part of a contribution election process where the participant is already active or enrolled in the plan, this field is optional (a value of spaces is accepted).  If this request is part of an enrollment process into a DC plan, then this element is required with a value of 'E'. 
          example: ' '
        ataxSpilloverStatusElectionCode:
          type: string
          description: If after tax spillover is supported for the plan, this will be the user election. 'Y' = opt-in. 'N' = opt-out.
          example: "Y"
        newContributions:
          type: array
          description: Array of contribution elections made by the person.
          items: 
            $ref: '#/components/schemas/NewContributions'
    NewContributions:
      type: object
      required:
        - contributionRateId
      properties:
        contributionRateId:
          type: string
          description: contribution Rate Id
          example: "10"
        contributionBeginDate:
          type: string
          format: date
          description: Date in which this contribution rate election will take effect. Format is CCYY-MM-DD.
          example: "2018-01-01"
        contributionEndDate:
          type: string
          format: date
          description: Date in which this contribution rate election will take end. A value of '2299-12-31 represents there is no end date (it will continue until some future process makes an update to the election while the person is an active employee).  Format is CCYY-MM-DD.
          example: "2299-12-31"
        electedContributionPercent:
          type: number
          format: double
          description: Elected contribution using a percentage rate.
          example: 4.0
        electedContributionAmount:
          type: number
          format: double
          description: Elected contribution using a dollar amount.       
          example: 400.00          
        escalationPercent:
          type: number
          format: double
          description: If escalation is supported for the contribution rate election, this would be the escalation percent elected by the user. If the value is zero or escalation is not supported, this can be omitted.
          example: 2.0
        targetPercent:
          type: number
          format: double
          description:  If escalation is supported for the contribution rate election, this would be the target percent elected by the user.  Target percent represents the maximum contribution percentage allowed before escalation stops. Escalation and target date must go hand in hand. This value must exist if escalationPercent is greater than zero.
          example: 10.0
        separateCatchUpElectionIndicator:
          type: boolean
          description:  This field is only applicable if isSeparateCatchUpElectionIndicatorSupported is true for the plan.  It specifies the user election associated a special catch up election status indicator. A large majority of plan sponsors do not support this feature, in which case it can be ignored.
          example: true    
    PayImpact:
      type: object
      properties:
        totalContributionAmountFromPayCheck:
          type: number
          format: double
          description: Represents the total per paycheck deducted amount that will be contributed into the plan.
          example: 400.0
        totalContributionInPercentFromPayCheck:
          type: number
          format: double
          description: Represents the total percent of pay deducted from a paycheck that will be contributed into the plan. 
          example: 4.00          
        missingEmployerMatchAmount:
          type: number
          format: double
          description: Specifies the amount of employer matching dollars a person is missing out on based on their requested contribution elections.
          example: 400.0
        receivingEmployerMatchAmount:
          type: number
          format: double
          description: Specifies the amount of employer match money a person is receiving based on the requested contribution elections.
          example: 200.00
    ContributionLimits: 
      type: object
      properties:
        limitId:
          type: string
          format: number
          description: Source system derived limit identifier.
          example: "10"
        limitIdType:
          type: string
          description: The type of limit Id that was used on the source system to pull the limit values. Valid values are 'LIM' - the limit was derived from either a source system limit provision or a contribution rate combination provision,'CTR' - the limit was dervied from a contribution rate minumum/maximum provision, or 'HCE' - the limit was derived from a contribution rate combination provision but because the participant is considered an highly compensation employee, it is referred to an HCE limit.
          example: LIM
          enum: ["LIM", "HCE" ,"CTR"]
        isLimitEligibleForDisplay:
          type: boolean
          description:  Determines if the limit should be displayed or not. 
          example: true  
        limitType:
          type: string
          description: API derived value for what the limit represents.  A description for each value is as such - "402G" refers to the IRS 402G limit for the current year. "CATCHUP_BT" and "CATCHUP_BT_RT" refers to IRS 402G catch up limit for the current year (with the "RT" extension simply meaning that the plan the limit is associated with currently supports roth).  "PR_IRC_BT" refers to the Puerto Rico IRC limit for the current year.  "PR_CATCHUP_BT" refers the Puerto Rico IRC catchup limit for the current year.  "CMBN_BT" refers to the client defined maximum combined before tax contribution rate/amount allowed as an election for a plan that does not suppor Roth. "CMBN_BT_RT" refers to the client defined maximum combined before tax contribution rate/amount allowed as an election for a plan that supports Roth. "HCE_CMBN_BT" is similiar to "CMBN_BT", however in this case, the participant is identified as an HCE (hightly compensated employee), therefore, maximum contribution rates apply the HCE limits.  "HCE_CMBN_BT_RT" is similear to "HCE_CMBN_BT_RT" but in this case it is applicable to a roth supported plan.
          example: "PLAN_LMT"
        limitInAmount:
          type: number
          format: double
          description:  If the limit is or can be expressed as an amount, the limit value will appear here.      
          example: 19500.00          
        limitInPercent:
          type: number
          format: double
          description: If the limit can be expressed as a percentage, the limit value will appear here.
          example: 0.00
        limitAsPayDeductionAmount:
          type: number
          format: double
          description: If the limit is a percent and it is associated with a contribution rate combination limit and the source system has the person's pay on file, it will calculate what the dollar value of that deducted contribution amount would be from a paycheck if the ppt elected to contribute the rate limit.
          example: 400.00
    PlanContributionLimits:
      type: object
      properties:
        planId:
          type: string
          format: number
          description: Source system derived plan identifier associated the limits
          example: "10"
        planDescription:
          type: string
          description: Readable description associated with the plan Id.
          example: "Premier 401(k) Savings Plan"          
        planShortDescription:
          type: string
          description: Readable short description associated with plan Id.
          example: "Premier 401(k)"
        planWithholdingUSorPRorBoth:
          type: string
          description: Determines if the plan supports Puerto Rico withholding or US withholding or both. This would only impact residents of Puerto Rico.  Valid values are 'B' (Both), 'P' (Puerto Rico only), 'U' (U.S only).
          example: 'B'  
        402GLimitAmount:
          type: number
          format: double
          description: This is the 402G limit for the current year.
          example: 19500.00
        internalRevenueCodeLimitAmount:
          type: number
          format: double
          description: This will be IRC limit for the current year.
          example: 280000.00
        isPlanSupportingRothContribution:
          type: boolean
          description: Determines if the plan supports Roth contributions.
          example: false
        isSingleCatchUpElectionSupported:
          type: boolean
          description: Determines if the plan uses one contribution rate election to lump both regular contributions and catch up contributions. True = one election for both regular and catch up contributions.  False = otherwise.
          example: false
        isCatchUpElectionSupported:
          type: boolean
          description: Determines if the plan supports catch up as it's own standalone contribution rate.
          example: false
        planContributionLimit:
          type: array
          description: Contribution limits
          items:
            $ref: '#/components/schemas/PlanContributionLimit'  
    PlanContributionLimit:        
      type: object
      properties:
        limitId:
          type: string
          description: Source system derived Limit Id
          example: "10"
        limitIdType:
          type: string
          description: The type of limit Id that was used on the source system to pull the limit values. Valid values are 'LIM' - the limit was derived from either a source system limit provision or a contribution rate combination provision,'CTR' - the limit was dervied from a contribution rate minumum/maximum provision, or 'HCE' - the limit was derived from a contribution rate combination provision but because the participant is considered an highly compensation employee, it is referred to an HCE limit.
          example: LIM
          enum: ["LIM", "HCE" ,"CTR"]
        limitType:
          type: string
          description: API derived value for what the limit represents.  A description for each value is as such - "402G" refers to the IRS 402G limit for the current year. "CATCHUP_BT" and "CATCHUP_BT_RT" refers to IRS 402G catch up limit for the current year (with the "RT" extension simply meaning that the plan the limit is associated with currently supports roth).  "PR_IRC_BT" refers to the Puerto Rico IRC limit for the current year.  "PR_CATCHUP_BT" refers the Puerto Rico IRC catchup limit for the current year.  "CMBN_BT" refers to the client defined maximum combined before tax contribution rate/amount allowed as an election for a plan that does not suppor Roth. "CMBN_BT_RT" refers to the client defined maximum combined before tax contribution rate/amount allowed as an election for a plan that supports Roth. "HCE_CMBN_BT" is similiar to "CMBN_BT", however in this case, the participant is identified as an HCE (hightly compensated employee), therefore, maximum contribution rates apply the HCE limits.  "HCE_CMBN_BT_RT" is similear to "HCE_CMBN_BT_RT" but in this case it is applicable to a roth supported plan.
          example: "PR_IRC_BT"
        limitInAmount:
          type: number
          format: double
          description: If the limit is or can be expressed as an amount, the limit value will appear here.
          example: 15000.00          
        limitInPercent:
          type: number
          format: double
          description: If the limit can be expressed as a percentage, the limit value will appear here.
          example: 0.00
        futureYearLimitInAmount:
          type: number
          format: double
          description: If next year's limit has been recorded on the source system and the limit is a dollar value, this element will reflect that amount.       
          example: 15500.00          
        futureYearLimitInPercent:
          type: number
          format: double
          description: If next year's limit has been recorded on the source system and the limit is a percentage value, this element will reflect that percentage.
          example: 0.00
