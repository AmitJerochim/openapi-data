{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Services API",
    "version" : "v3.2",
    "title" : "API SOSAFE V3",
    "termsOfService" : "https://www.sosafeapp.com/es/terminos-y-condiciones.html",
    "contact" : {
      "name" : "Contact Us",
      "url" : "https://www.sosafeapp.com/es/index.html#contactUs"
    }
  },
  "servers" : [ {
    "url" : "https://stage-api-v3.sosafeapp.com",
    "description" : "server dev"
  }, {
    "url" : "https://api-v3.sosafeapp.com",
    "description" : "server prod"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Reports",
    "description" : "endpoint for reports"
  } ],
  "paths" : {
    "/reports" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Create a report",
        "description" : "Create a report. The reporter user is the integrator user (the user that corresponds to the given access token). You can send extra information through the field `extra_info`. Please see schema details by clicking \"Schema\" option in the example below for more information of usage of this field and others.",
        "operationId" : "createReport",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "integer",
                    "description" : "Report's type",
                    "example" : 1
                  },
                  "latitude" : {
                    "type" : "number",
                    "description" : "Report's latitude",
                    "example" : "-33.4055664"
                  },
                  "longitude" : {
                    "type" : "number",
                    "description" : "Report's longitude",
                    "example" : "-70.5681394"
                  },
                  "is_anonymous" : {
                    "type" : "integer",
                    "description" : "Flag to determine if the report is anonymous. Valid values are 0 or 1.",
                    "example" : 0
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Report's description",
                    "example" : "Test description"
                  },
                  "is_private" : {
                    "type" : "integer",
                    "description" : "Flag to determine if the report is private",
                    "example" : 0
                  },
                  "confirmed" : {
                    "type" : "integer",
                    "description" : "Flag to determine if it's a confirmed report, it is currently used to report a stolen car after verifying the patent",
                    "example" : 0
                  },
                  "notify_neighbours" : {
                    "type" : "integer",
                    "description" : "Flag to determine if the neighbors should be notified",
                    "example" : 1
                  },
                  "latGps" : {
                    "type" : "number",
                    "description" : "GPS latitude at the time of report",
                    "example" : "-33.4055664"
                  },
                  "longGps" : {
                    "type" : "number",
                    "description" : "GPS longitude at the time of report",
                    "example" : "-70.5681394"
                  },
                  "accuracy" : {
                    "type" : "number",
                    "description" : "GPS accuracy at the time of reporting",
                    "example" : "16.62"
                  },
                  "extra_info" : {
                    "type" : "string",
                    "description" : "Extra information to save with the report. You can use this field to save custom data. The value must be a valid JSON object. **Warning:** there are fields that treated in the portal as the user details, if you use this fields the user who create the report will be replaced by its values, these fields are `cover`, `first_name`, `last_name`, `home_address` and `phone`, so please avoid use them.",
                    "example" : {
                      "myList" : [ "item-1", "item-N" ],
                      "myObject" : {
                        "field" : "value"
                      }
                    }
                  }
                },
                "required" : [ "type", "latitude", "longitude", "is_anonymous" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful execution",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "string",
                      "example" : true
                    },
                    "report_id" : {
                      "type" : "integer",
                      "description" : "Report's identification",
                      "example" : 123
                    },
                    "report_uuid" : {
                      "type" : "string",
                      "description" : "Report's UUID",
                      "example" : "1027b191-9d3f-541a-9cdf-9035fa1089c5"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Generates this error when the user_id is different from the token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/CreateReportUserIdInvalidErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/UserBlockedErrorResponse"
                  } ]
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/reports/{uuid}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Get report by uuid.",
        "description" : "Get the report data for a company",
        "operationId" : "getReportByUUID",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful execution",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportSuccessResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "invalid report"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/reports/{uuid}/take" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Update taken report",
        "description" : "Take a report by company. You can optionally assign the report to a specific user different than the integrator user (the bot user that corresponds to the access token). By default the integrator user is used.",
        "operationId" : "takeReportByUUID",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string",
                    "description" : "The comment that will be added to the report after this action.",
                    "example" : "A post-action comment to send"
                  },
                  "assigned_user_id" : {
                    "type" : "string",
                    "description" : "The operator user who will attend the report. If this fields is not given then the integrator user is used.",
                    "example" : "76ca7f3b-221e-57b2-b861-bb0c6f972e76"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/AnyApi2ErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/UserAssignInvalidErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/InvalidDataRequestErrorResponse"
                  } ]
                }
              }
            }
          },
          "200" : {
            "$ref" : "#/components/responses/standardSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/reports/{uuid}/taken" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Please use /reports/{uuid}/take instead.",
        "description" : "This endpoint is the same as '/reports/{uuid}/take'. It still existing to avoid breaking changes in clients that already use it. Please use the endpoint '/reports/{uuid}/take' instead.",
        "operationId" : "takenReportByUUID",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string",
                    "description" : "The comment that will be added to the report after this action.",
                    "example" : "message"
                  },
                  "assigned_user_id" : {
                    "type" : "string",
                    "description" : "The operator user who will attend the report.",
                    "example" : "76ca7f3b-221e-57b2-b861-bb0c6f972e76"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/standardSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          },
          "422" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/AnyApi2ErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/UserAssignInvalidErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/InvalidDataRequestErrorResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/reports/{uuid}/finish" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Finish report as solve",
        "description" : "Sets the report status as solved",
        "operationId" : "finishReportByUUID",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string",
                    "description" : "The comment that will be added to the report after this action.",
                    "example" : "A post-action comment to send"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/AnyApi2ErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/InvalidDataRequestErrorResponse"
                  } ]
                }
              }
            }
          },
          "200" : {
            "$ref" : "#/components/responses/standardSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/reports/{uuid}/mark-as-false" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Finish report as 'false'",
        "description" : "Sets the report status as 'false'",
        "operationId" : "markReportAsFalseByUUID",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string",
                    "description" : "The comment that will be added to the report after this action.",
                    "example" : "A post-action comment to send"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/AnyApi2ErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/InvalidDataRequestErrorResponse"
                  } ]
                }
              }
            }
          },
          "200" : {
            "$ref" : "#/components/responses/standardSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/report-comments/{uuid}" : {
      "get" : {
        "tags" : [ "ReportComments" ],
        "summary" : "Gets all comments of a report",
        "description" : "Provides all comments of a report given its uuid",
        "operationId" : "getAllReportCommentsByReportUuid",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Report's UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful execution",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportCommentsSuccessResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/accessDenied"
          },
          "404" : {
            "$ref" : "#/components/responses/resourceNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/internalServerError"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    },
    "schemas" : {
      "AnyApi2ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "string",
            "example" : false
          },
          "error" : {
            "type" : "string",
            "example" : "any error"
          }
        }
      },
      "UserAssignInvalidErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "string",
            "example" : false
          },
          "error" : {
            "type" : "string",
            "example" : "any error when trying to assign user"
          }
        }
      },
      "InvalidDataRequestErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "string",
            "example" : false
          },
          "error" : {
            "type" : "string",
            "example" : "Invalid request data. Please review request and try again."
          }
        }
      },
      "SuccessResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "ReportSuccessResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "report" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "description" : "Report's ID",
                "example" : 1
              },
              "uuid" : {
                "type" : "string",
                "description" : "Report's UUID",
                "example" : "4fc5c0d0-ba0c-5dee-8230-44065d6e93e5"
              },
              "ratingPoints" : {
                "type" : "integer",
                "description" : "Company's evaluation from the user",
                "example" : 1
              },
              "type" : {
                "type" : "integer",
                "description" : "Report's type",
                "example" : 16
              },
              "title" : {
                "type" : "string",
                "description" : "Report's type as title",
                "example" : "Prueba"
              },
              "is_anonymous" : {
                "type" : "integer",
                "description" : "Flag to determine if the report is anonymous",
                "example" : 1
              },
              "description" : {
                "type" : "string",
                "description" : "Report's description",
                "example" : "test"
              },
              "location" : {
                "type" : "string",
                "description" : "Report's location",
                "example" : "Neuquen  3623,  Sáenz Peña"
              },
              "timezone" : {
                "type" : "string",
                "description" : "Report's timezone, calculated from the address",
                "example" : "America/Buenos_Aires"
              },
              "confirmed" : {
                "type" : "integer",
                "description" : "Flag to determine if report is confirmed, for example a stolen vehicle",
                "example" : 1
              },
              "image_url" : {
                "type" : "string",
                "description" : "Report's url",
                "deprecated" : true,
                "example" : ""
              },
              "latitude" : {
                "type" : "number",
                "description" : "Report's latitude",
                "example" : "-34.597447493211000"
              },
              "longitude" : {
                "type" : "number",
                "description" : "Report's longitude",
                "example" : "-58.540913946927000"
              },
              "share_url" : {
                "type" : "string",
                "description" : "Public url to share the report",
                "example" : "https://n796y.app.goo.gl/JShKPzSphMbtr9tm9"
              },
              "shares_counter" : {
                "type" : "integer",
                "description" : "Share's count",
                "example" : 1
              },
              "abuse_counter" : {
                "type" : "integer",
                "description" : "Abuse's count",
                "deprecated" : true,
                "example" : 1
              },
              "user_id" : {
                "type" : "integer",
                "description" : "Report's creator user ID",
                "example" : 1
              },
              "deleted_at" : {
                "type" : "string",
                "description" : "Report's deletion date",
                "example" : null
              },
              "created_at" : {
                "type" : "string",
                "description" : "Report's creation date",
                "format" : "date",
                "example" : "2019-08-21 13:50:00"
              },
              "updated_at" : {
                "type" : "string",
                "description" : "Report's update date",
                "format" : "date",
                "example" : "2019-09-03 20:43:26"
              },
              "seen" : {
                "type" : "integer",
                "deprecated" : true,
                "description" : "Flag that determine if this report has been seen",
                "example" : 1
              },
              "event_id" : {
                "type" : "integer",
                "description" : "Event's identifier",
                "deprecated" : true,
                "example" : 0
              },
              "visible" : {
                "type" : "integer",
                "description" : "Flag to determine if the report is visible on the map",
                "example" : 1
              },
              "status" : {
                "type" : "string",
                "description" : "Followup status",
                "example" : "solved"
              },
              "workflow" : {
                "type" : "string",
                "description" : "Followup workflow",
                "example" : "end"
              },
              "optional_code" : {
                "type" : "string",
                "description" : "Referential code of the report in the company",
                "example" : "00000"
              },
              "due_date" : {
                "type" : "string",
                "description" : "Followup due_date",
                "format" : "date",
                "example" : "2019-08-21 13:50:00"
              },
              "extra_info" : {
                "type" : "string",
                "description" : "Extra information of the report, e.g user data in reports created from the portal",
                "example" : null
              },
              "observations" : {
                "type" : "string",
                "description" : "Concluding observations of the followup",
                "example" : "observations"
              },
              "report_id" : {
                "type" : "integer",
                "description" : "Report's ID",
                "example" : 1
              },
              "zone" : {
                "type" : "string",
                "description" : "Company's area where the report belongs",
                "example" : "ZONA GLOBAL SOSAFE"
              },
              "name" : {
                "type" : "string",
                "description" : "Report's creator username",
                "example" : "Facundo Rodríguez"
              },
              "phone" : {
                "type" : "string",
                "description" : "Report's creator user phone",
                "example" : "+54 9 11 1232-8752"
              },
              "category_id" : {
                "type" : "integer",
                "description" : "Report's category",
                "example" : 1
              },
              "sections_users" : {
                "type" : "string",
                "description" : "Section of the area where the user created the report",
                "deprecated" : true,
                "example" : null
              },
              "edited" : {
                "type" : "integer",
                "description" : "Flag to determine if the report was edited by the user",
                "example" : 1
              },
              "description_is_null" : {
                "type" : "integer",
                "description" : "Flag to determine if the report's description was entered by the user",
                "example" : 1
              },
              "datetime_ttl" : {
                "type" : "string",
                "description" : "Report's expiration date to be visible on the map",
                "format" : "date",
                "example" : "2019-08-23 04:13:28"
              },
              "notify_neighbours" : {
                "type" : "integer",
                "description" : "Flag to determine if the report was notified to neighbors",
                "example" : 1
              },
              "notification_neighbours_was_canceled" : {
                "type" : "integer",
                "description" : "Flag to determine if notification to neighbors was canceled",
                "example" : 1
              },
              "countdown" : {
                "type" : "integer",
                "description" : "Waiting time to cancel the report",
                "example" : 1
              },
              "is_private" : {
                "type" : "integer",
                "description" : "Flag to determine if the report is private",
                "example" : 1
              },
              "files_media" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Absolute url to file.",
                      "example" : "https://stage.sosafeapp.com/reports/media_1582217916037_LB803H.jpg"
                    },
                    "source" : {
                      "type" : "string",
                      "description" : "Absolute url to file. Please use name instead.",
                      "example" : "https://stage.sosafeapp.com/reports/media_1582217916037_LB803H.jpg"
                    },
                    "status" : {
                      "type" : "integer",
                      "description" : "Average rise status",
                      "example" : 3
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Media's type file",
                      "example" : "image/jpeg"
                    }
                  }
                }
              },
              "user" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "description" : "Report's creator ID",
                    "example" : 1
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Report's creator UUID",
                    "example" : "0e0a7419-ab4d-5bd4-accf-2cf3340b4108"
                  },
                  "first_name" : {
                    "type" : "string",
                    "description" : "User's first name",
                    "example" : "Facundo"
                  },
                  "last_name" : {
                    "type" : "string",
                    "description" : "User's last name",
                    "example" : "Rodríguez"
                  },
                  "phone" : {
                    "type" : "string",
                    "description" : "User's phone",
                    "example" : "+54 9 11 1231-8752"
                  },
                  "cover" : {
                    "type" : "string",
                    "description" : "User's cover",
                    "example" : "https://stage.sosafeapp.com/avatars/avatar_613984_51006@2x.jpg"
                  }
                }
              }
            }
          }
        }
      },
      "ReportCommentsSuccessResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "report" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "description" : "Comment's Id",
                "example" : 2835799
              },
              "report_id" : {
                "type" : "integer",
                "description" : "Report's Id",
                "example" : 722406
              },
              "report_uuid" : {
                "type" : "string",
                "description" : "Report's uuid. You should use this identifier instead of the raw id.",
                "example" : "726b3f19-8a3c-5ff2-8e81-ccaa0817ccbf"
              },
              "user_id" : {
                "type" : "integer",
                "description" : "Report's author identifier. Please use user.user_uuid since this field will be 0 if the user that requests this endpoint is not the report author.",
                "example" : 614236
              },
              "created_at" : {
                "type" : "string",
                "description" : "The comment's creation date.",
                "example" : "2020-02-20 16:57:51"
              },
              "edited" : {
                "type" : "boolean",
                "description" : "Whether the comment has been edited.",
                "example" : false
              },
              "updated_at" : {
                "type" : "string",
                "description" : "The comment's last edition date.",
                "example" : "2020-02-20 16:58:03"
              },
              "body" : {
                "type" : "string",
                "description" : "The comment's text,",
                "example" : "The text comment!"
              },
              "files_media" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Absolute url to file",
                      "example" : "https://stage.sosafeapp.com/comments/media_1582218087646_H5GUON.jpg"
                    },
                    "source" : {
                      "type" : "string",
                      "description" : "Absolute url to file. Please use name.",
                      "example" : "https://stage.sosafeapp.com/comments/media_1582218087646_H5GUON.jpg"
                    },
                    "status" : {
                      "type" : "integer",
                      "description" : "Status of file processing. 1 = uploading, 2 = uploaded, 3 = available to be consumed.",
                      "example" : 3
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Media's type file",
                      "example" : "image/jpeg"
                    }
                  }
                }
              },
              "likes" : {
                "type" : "object",
                "properties" : {
                  "favourited" : {
                    "type" : "boolean",
                    "description" : "Whether the comment has been marked as favourited by any user.",
                    "example" : true
                  },
                  "count" : {
                    "type" : "number",
                    "description" : "Times that have been marked as favourited.",
                    "example" : 1
                  }
                }
              },
              "user" : {
                "type" : "object",
                "description" : "Comment's author data.",
                "properties" : {
                  "id" : {
                    "type" : "number",
                    "description" : "Raw comment author (user) identifier. Please use user.uuid instead.",
                    "example" : 614236
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "The user uuid identifier. This is the field that you should be use to track the comment author.",
                    "example" : "3069abba-ed79-54e1-b221-4fe8b06650c9"
                  },
                  "first_name" : {
                    "type" : "string",
                    "description" : "Comment's author name. The value of this field is returned as an empty string to protect the identity of the user if the user that requests the endpoint isn\\'t the author.",
                    "example" : "Walter"
                  },
                  "last_name" : {
                    "type" : "string",
                    "description" : "Comment's author last name. The value of this field is returned as an empty string to protect the identity of the user if the user that requests the endpoint isn\\'t the author.",
                    "example" : "Devia"
                  },
                  "cover" : {
                    "type" : "string",
                    "description" : "Comment's author cover photo. The value of this field is returned as an empty string to protect the identity of the user if the user that requests the endpoint isn\\'t the author."
                  },
                  "verified_account" : {
                    "type" : "number",
                    "description" : "Whether the comment's author is a verified user.",
                    "example" : 0
                  }
                }
              }
            }
          }
        }
      },
      "CreateReportUserIdInvalidErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "string",
            "example" : false
          },
          "error" : {
            "type" : "string",
            "example" : "access denied: user token invalid"
          }
        }
      },
      "UserBlockedErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "string",
            "example" : false
          },
          "error" : {
            "type" : "string",
            "example" : "User blocked"
          }
        }
      },
      "InternalServerErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : false
          },
          "code" : {
            "type" : "string",
            "example" : "INTERNAL_ERROR"
          },
          "message" : {
            "type" : "string",
            "example" : "Internal server error"
          },
          "requestId" : {
            "$ref" : "#/components/schemas/RequestIdFieldInErrorResponses"
          }
        }
      },
      "UnauthorizedErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : false
          },
          "code" : {
            "type" : "string",
            "example" : "UNAUTHORIZED"
          },
          "message" : {
            "type" : "string",
            "example" : "Invalid or not found token."
          },
          "requestId" : {
            "$ref" : "#/components/schemas/RequestIdFieldInErrorResponses"
          }
        }
      },
      "AccessDeniedErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : false
          },
          "code" : {
            "type" : "string",
            "example" : "ACCESS_DENIED"
          },
          "message" : {
            "type" : "string",
            "example" : "Resource access denied"
          },
          "requestId" : {
            "$ref" : "#/components/schemas/RequestIdFieldInErrorResponses"
          }
        }
      },
      "ResourceNotFoundErrorResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : false
          },
          "code" : {
            "type" : "string",
            "example" : "RESOURCE_NOT_FOUND"
          },
          "message" : {
            "type" : "string",
            "example" : "Requested resource not found"
          },
          "requestId" : {
            "$ref" : "#/components/schemas/RequestIdFieldInErrorResponses"
          }
        }
      },
      "RequestIdFieldInErrorResponses" : {
        "type" : "string",
        "example" : "A random hash useful for debugging purposes. Please give us this value."
      }
    },
    "responses" : {
      "internalServerError" : {
        "description" : "Any internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InternalServerErrorResponse"
            }
          }
        }
      },
      "accessDenied" : {
        "description" : "When the access token is received but the access is denied.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AccessDeniedErrorResponse"
            }
          }
        }
      },
      "unauthorized" : {
        "description" : "When none access token is given or when it is invalid.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedErrorResponse"
            }
          }
        }
      },
      "resourceNotFound" : {
        "description" : "When the requested is send with an invalid http verb or the requested resource was not found.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceNotFoundErrorResponse"
            }
          }
        }
      },
      "standardSuccess" : {
        "description" : "Successful execution",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SuccessResponse"
            }
          }
        }
      }
    }
  }
}