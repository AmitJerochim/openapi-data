openapi: 3.0.0
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0-oas3"
  title: Swagger REST Article
paths:
  /users:
    get:
      operationId: ruffnut.user.read_all
      tags:
        - User
      summary: 用户列表
      description: 用户列表
      responses:
        '200':
          description: Successful read user list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                    nick_name:
                      type: string
                example:
                  - id: test
                    title: Jack
    post:
      operationId: ruffnut.user.write
      tags:
        - User
      summary: 注册用户
      description: 注册用户
      responses:
        '204':
          description: User succesfully created.
        '400':
          description: User couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  example: test
                password:
                  type: string
                  example: '123456'
                nick_name:
                  type: string
                  example: test
        description: The user to create.
  /brokers:
    get:
      operationId: ruffnut.broker.read_all
      tags:
        - 券商
      summary: 券商列表
      description: 券商列表
      responses:
        '200':
          description: 成功获取券商列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brokers'
    post:
      operationId: ruffnut.broker.write
      tags:
        - 券商
      summary: 增加券商
      description: 增加券商
      responses:
        '204':
          description: 添加券商成功
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker'
        description: 增加券商
  /broker-api-protocols:
    get:
      operationId: ruffnut.broker_api_protocol.read_all
      tags:
        - 券商API协议
      summary: 券商API协议列表
      description: 券商API协议连接列表
      responses:
        '200':
          description: 成功获取券商Api协议列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApiProtocols'
    post:
      operationId: ruffnut.broker_api_protocol.write
      tags:
        - 券商API协议
      summary: 增加券商API协议
      description: 增加券商API协议
      responses:
        '204':
          description: 添加券商Api协议成功
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerApiProtocol'
        description: 增加券商Api协议
  /broker-api-connections:
    get:
      operationId: ruffnut.broker_api_connection.read_all
      tags:
        - 券商API连接
      summary: 券商API连接列表
      description: 券商API连接列表
      responses:
        '200':
          description: 成功获取券商Api连接列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApiConnections'
    post:
      operationId: ruffnut.broker_api_connection.write
      tags:
        - 券商API连接
      summary: 增加券商API连接
      description: 增加券商API连接
      responses:
        '204':
          description: 添加券商Api接口成功
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerApiConnection'
        description: 增加券商Api连接
  /modes:
    get:
      operationId: ruffnut.mode.read_all
      tags:
        - 模型
      summary: 模型列表
      description: 模型列表
      responses:
        '200':
          description: 成功获取模型列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modes'
    post:
      operationId: ruffnut.mode.write
      tags:
        - 模型
      summary: 增加模型
      description: 增加模型
      responses:
        '204':
          description: Portfolio succesfully created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mode'
        description: 增加的模型
  '/modes/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      operationId: ruffnut.mode.update
      tags:
        - 模型
      summary: 更新模型
      description: 更新模型
      responses:
        '204':
          description: Model succesfully updated.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary:
                  type: string
                description:
                  type: string
  /portfolios:
    get:
      operationId: ruffnut.portfolio.read_all
      tags:
        - 投资组合
      summary: 投资组合列表
      description: 投资组合列表
      responses:
        '200':
          description: Successful read portfolio list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolios'
    post:
      operationId: ruffnut.portfolio.write
      tags:
        - 投资组合
      summary: 增加投资组合
      description: 增加投资组合
      responses:
        '204':
          description: Portfolio succesfully created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
        description: The portfolio to create
  /strategies:
    get:
      operationId: ruffnut.strategy.read_all
      tags:
        - 策略
      summary: 策略列表
      description: 策略列表
      responses:
        '200':
          description: Successful read strategy list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategies'
    post:
      operationId: ruffnut.strategy.write
      tags:
        - 策略
      summary: 增加策略
      description: 增加策略
      responses:
        '204':
          description: strategy succesfully created.
        '400':
          description: strategy couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Strategy'
        description: The strategy to create.
  /exchanges:
    get:
      operationId: ruffnut.contract.exchange_read_all
      tags:
        - Contract
      summary: 交易所列表
      description: 交易所列表
      responses:
        '200':
          description: Successful read contract list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exchanges'
    post:
      operationId: ruffnut.contract.exchange_write
      tags:
        - Contract
      summary: 增加交易所
      description: 增加交易所
      responses:
        '204':
          description: contract succesfully created.
        '400':
          description: contract couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exchange'
        description: The contract to create.
  /products:
    get:
      operationId: ruffnut.contract.product_read_all
      tags:
        - Contract
      summary: 产品列表
      description: 产品列表
      responses:
        '200':
          description: Successful read product list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
    post:
      operationId: ruffnut.contract.product_write
      tags:
        - Contract
      summary: 增加产品
      description: 增加产品
      responses:
        '204':
          description: product succesfully created.
        '400':
          description: ' product couldn''t have been created.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: The product to create.
  /contracts:
    get:
      operationId: ruffnut.contract.contract_read_all
      tags:
        - Contract
      summary: 合约列表
      description: 合约列表
      responses:
        '200':
          description: Successful read contract list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
    post:
      operationId: ruffnut.contract.contract_write
      tags:
        - Contract
      summary: 增加合约
      description: 增加合约
      responses:
        '204':
          description: contract succesfully created.
        '400':
          description: contract couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        description: The contract to create.
  /strategy-open-signals:
    get:
      operationId: ruffnut.order.strategy_open_signal_read_all
      tags:
        - Order
      summary: 策略开仓信号
      description: 策略开仓信号
      parameters:
        - name: inputDatetimeAfter
          in: query
          description: 日期筛选开始时间
          schema:
            type: string
        - name: inputDatetimeBefore
          in: query
          description: 日期筛选结束时间
          schema:
            type: string
      responses:
        '200':
          description: list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyOpenSignals'
    post:
      operationId: ruffnut.order.strategy_open_signal_write
      tags:
        - Order
      summary: 新增策略开仓信号
      description: 新增策略开仓信号
      responses:
        '204':
          description: order succesfully created.
        '400':
          description: order couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyOpenSignal'
        description: The order to create.
  /strategy-trading-orders:
    get:
      operationId: ruffnut.order.strategy_trading_read_all
      tags:
        - Order
      summary: 策略交易订单列表
      description: 策略交易订单列表
      responses:
        '200':
          description: Successful read order list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyTradingOrders'
    post:
      operationId: ruffnut.order.strategy_trading_write
      tags:
        - Order
      summary: 增加策略交易订单
      description: 增加策略交易订单
      responses:
        '204':
          description: succesfully created.
        '400':
          description: ' couldn''t have been created.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyTradingOrder'
        description: The  to create.
  '/strategy-trading-orders/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      operationId: ruffnut.order.strategy_trading_update
      tags:
        - 策略订单
      summary: 更新订单
      description: 更新订单
      responses:
        '204':
          description: Order succesfully updated.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
                  enum:
                    - filled
                    - cancelled
  /execution-orders:
    get:
      operationId: ruffnut.order.execution_order_read_all
      tags:
        - Order
      summary: 执行订单列表
      description: 执行订单列表
      responses:
        '200':
          description: Successful read order list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionOrders'
    post:
      operationId: ruffnut.order.execution_order_write
      tags:
        - Order
      summary: 增加执行订单
      description: 增加执行订单
      responses:
        '204':
          description: order succesfully created.
        '400':
          description: order couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionOrder'
        description: The order to create.
  /execution-trades:
    get:
      operationId: ruffnut.order.execution_trade_read_all
      tags:
        - Order
      summary: 执行交易记录列表
      description: 执行交易记录列表
      responses:
        '200':
          description: Successful read  list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionTrades'
    post:
      operationId: ruffnut.order.execution_trade_write
      tags:
        - Order
      summary: 新增执行交易记录列表
      description: 新增执行交易记录列表
      responses:
        '204':
          description: order succesfully created.
        '400':
          description: order couldn't have been created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionTrade'
        description: The order to create.
  /signal-sources:
    get:
      operationId: ruffnut.strategy_config.signal_source_read_all
      tags:
        - StrategyConfig
      summary: 信号源列表
      description: 信号源列表
      responses:
        '200':
          description: Successful read strategy_config list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
  /execution-algorithms:
    get:
      operationId: ruffnut.strategy_config.execution_algorithm_read_all
      tags:
        - StrategyConfig
      summary: 执行策略列表
      description: 执行策略列表
      responses:
        '200':
          description: Successful read strategy_config list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
  '/portfolio/{id}/overview':
    get:
      operationId: ruffnut.portfolio.overview
      tags:
        - 投资组合
      summary: 概览
      description: 概览
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Overview'
  '/portfolio/{id}/earnings':
    get:
      operationId: ruffnut.portfolio.earning
      tags:
        - 投资组合
      summary: 收益
      description: 收益
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
        - name: startTime
          in: query
          required: false
          description: timestamp
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Earnings'
  '/portfolio/{id}/monthly-analysis':
    get:
      operationId: ruffnut.portfolio.monthly_analysis
      tags:
        - 投资组合
      summary: 月分析报告
      description: 月分析报告
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
        - name: startTime
          in: query
          required: false
          description: timestamp
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlyAnalysis'
  '/portfolio/{id}/symbol/month/analysis/report':
    get:
      operationId: ruffnut.portfolio.symbol_month_analysis_reports
      tags:
        - 投资组合
      summary: 品种多空
      description: 品种多空
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
        - name: startTime
          in: query
          required: false
          description: timestamp
          schema:
            type: integer
        - name: type
          in: query
          required: false
          description: |-
            SymbolTypeBest: 擅长品种
            SymbolTypeActive: 活跃品种
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolMonthAnalysisReports'
  '/portfolio/{id}/profit-and-loss-analysis':
    get:
      operationId: ruffnut.portfolio.profit_and_loss_analysis
      tags:
        - 投资组合
      summary: 盈亏分析
      description: 盈亏分析
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
        - name: startTime
          in: query
          required: false
          description: timestamp
          schema:
            type: integer
        - name: type
          in: query
          required: false
          description: |-
            hour
             week
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfitAndLossAnalysisReports'
  '/portfolio/{id}/position-time':
    get:
      operationId: ruffnut.portfolio.position_time
      tags:
        - 投资组合
      summary: 持仓时间
      description: 持仓时间
      parameters:
        - name: id
          in: path
          required: true
          description: 投资组合id
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionTime'
servers:
  - url: /api
components:
  schemas:
    Direction:
      title: 买卖方向
      description: 买卖方向
      type: string
      enum:
        - buy
        - sell
    OrderStatus:
      type: string
      enum:
        - submitted
        - filled
        - cancelled
    StrategyOrderId:
      type: integer
      minimum: 1
    Exchange:
      properties:
        id:
          type: integer
          readOnly: true
        symbol:
          type: string
        name:
          type: string
    Exchanges:
      type: array
      items:
        $ref: '#/components/schemas/Exchange'
    Product:
      properties:
        id:
          type: integer
          readOnly: true
        symbol:
          type: string
        multiple:
          type: integer
        minTick:
          type: number
        exchangeId:
          type: integer
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Contract:
      properties:
        id:
          type: integer
          readOnly: true
        symbol:
          type: string
        expiryDate:
          type: string
          format: date
        productId:
          type: integer
    Contracts:
      type: array
      items:
        $ref: '#/components/schemas/Contract'
    Broker:
      properties:
        id:
          type: integer
          readOnly: true
        symbol:
          type: string
    Brokers:
      type: array
      items:
        $ref: '#/components/schemas/Broker'
    BrokerApiConnection:
      required:
        - brokerApiProtocolId
        - name
        - data
      properties:
        id:
          type: integer
          readOnly: true
        brokerApiProtocolId:
          type: string
        name:
          type: string
          minLength: 1
          maxLength: 50
        data:
          type: object
    BrokerApiConnections:
      type: array
      items:
        $ref: '#/components/schemas/BrokerApiConnection'
    BrokerApiProtocol:
      required:
        - id
        - schemas
      properties:
        id:
          type: string
        schemas:
          type: object
    BrokerApiProtocols:
      type: array
      items:
        $ref: '#/components/schemas/BrokerApiProtocol'
    Mode:
      required:
        - symbol
        - summary
        - description
      properties:
        id:
          type: integer
          readOnly: true
        symbol:
          type: string
        summary:
          type: string
        description:
          type: string
    Modes:
      type: array
      items:
        $ref: '#/components/schemas/Mode'
    Portfolio:
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        summary:
          type: string
        description:
          type: string
    Portfolios:
      type: array
      items:
        $ref: '#/components/schemas/Portfolio'
    Strategy:
      required:
        - name
        - portfolioId
        - contractId
        - brokerApiConnectionId
        - modeId
      properties:
        id:
          type: integer
          title: Id
          readOnly: true
        name:
          title: 名称
          description: '英文名称,不能跟之前的冲突'
          type: string
        status:
          type: string
          enum:
            - inactivated
            - activated
        modeId:
          title: modeId
          type: integer
        portfolioId:
          title: portfolioId
          type: integer
        contractId:
          title: contractId
          type: integer
        brokerApiConnectionId:
          title: brokerApiConnectionId
          type: integer
    Strategies:
      type: array
      items:
        $ref: '#/components/schemas/Strategy'
    StrategyOpenSignal:
      required:
        - id
        - direction
        - price
        - qty
        - timestamp
        - strategyId
      properties:
        id:
          $ref: '#/components/schemas/StrategyOrderId'
        direction:
          title: 买卖方向
          description: 买卖方向
          type: string
          enum:
            - buy
            - sell
        price:
          title: 价格
          description: 价格
          type: number
          minimum: 0
          exclusiveMinimum: true
        qty:
          title: 手数
          description: 手数
          format: int32
          type: integer
          minimum: 1
        timestamp:
          title: timestamp
          description: timestamp
          type: integer
          format: int64
        orderRef:
          title: 订单备注
          description: 订单备注
          type: string
        strategyId:
          title: strategyId
          description: strategyId
          type: integer
        contract:
          title: 合约
          description: 合约
          type: integer
          format: int64
          readOnly: true
        closeable:
          title: 可平数
          description: 可平数
          type: integer
          format: int64
          readOnly: true
        strategyOpenSignalId:
          title: 策略信号id
          description: 策略信号id
          type: integer
          format: int64
          readOnly: true
        openExecutedQty:
          title: 开仓已执行数量
          description: 开仓已执行数量
          type: integer
          format: int64
          readOnly: true
        closeExecutedQty:
          title: 平仓已执行数量
          description: 平仓已执行数量
          type: integer
          format: int64
          readOnly: true
        stealSlippage:
          title: 偷滑点
          description: 偷滑点
          type: number
          format: float
          readOnly: true
        inputDatetime:
          title: 信号时间
          description: 信号时间
          type: integer
          format: int64
          readOnly: true
        finishDatetime:
          title: 完成时间
          type: integer
          format: int64
          readOnly: true
        realProfitAndLoss:
          title: 实际盈亏
          description: 实际盈亏
          type: number
          format: float
          readOnly: true
        signalProfitAndLoss:
          title: 信号盈亏
          description: 信号盈亏
          type: number
          format: float
          readOnly: true
        realOpenAvgPrice:
          title: 实际开仓均价
          description: 实际开仓均价
          type: number
          format: float
          readOnly: true
        realCloseAvgPrice:
          title: 实际平仓均价
          description: 实际平仓均价
          type: number
          format: float
          readOnly: true
        signalCloseAvgPrice:
          title: 信号平仓均价
          description: 信号平仓均价
          type: number
          format: float
          readOnly: true
        realPositionPrice:
          title: 实际持仓价格
          description: 实际持仓价格
          type: number
          format: float
          readOnly: true
    StrategyOpenSignals:
      type: array
      items:
        $ref: '#/components/schemas/StrategyOpenSignal'
    StrategyTradingOrder:
      required:
        - id
        - price
        - qty
        - timestamp
        - status
      properties:
        id:
          $ref: '#/components/schemas/StrategyOrderId'
        direction:
          $ref: '#/components/schemas/Direction'
        price:
          title: 价格
          type: number
          format: float
        qty:
          title: 手数
          type: integer
          format: int32
        timestamp:
          title: timestamp
          type: integer
          format: int64
        status:
          title: 订单状态
          description: 订单状态
          type: string
          enum:
            - submitted
            - filled
            - cancelled
        orderRef:
          title: 订单备注
          type: string
        strategyOpenSignalId:
          title: strategyOpenSignalId
          type: integer
    StrategyTradingOrders:
      type: array
      items:
        $ref: '#/components/schemas/StrategyTradingOrder'
    ExecutionOrder:
      required:
        - id
        - direction
        - price
        - qty
        - inputTimestamp
      properties:
        id:
          $ref: '#/components/schemas/StrategyOrderId'
        direction:
          $ref: '#/components/schemas/Direction'
        price:
          type: number
        qty:
          type: integer
        inputTimestamp:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderRef:
          type: string
        strategyTradingOrderId:
          type: integer
    ExecutionOrders:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionOrder'
    ExecutionTrade:
      required:
        - price
        - qty
        - timestamp
        - executionOrderId
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: number
        qty:
          type: integer
        timestamp:
          type: integer
          format: int64
        executionOrderId:
          type: integer
    ExecutionTrades:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionTrade'
    Overview:
      required:
        - income
        - points
        - qty
        - execution
        - everyAvgProfit
        - everyAvgLoss
        - maxProfit
        - maxLoss
        - avgQty
        - maxQty
        - dailyAvgQty
        - dailyAvgExecution
        - winRate
        - equityPnLRatio
        - riskAversion
        - tradingExpectation
      properties:
        income:
          type: number
          description: 收益
        points:
          type: number
          description: 点数
        qty:
          type: integer
          description: 手数
        execution:
          type: integer
          description: 交易笔数
        everyAvgProfit:
          type: number
          description: 平均每笔获利
        everyAvgLoss:
          type: number
          description: 平均每笔亏损
        maxProfit:
          type: number
          description: 最大单笔获利
        maxLoss:
          type: number
          description: 最大单笔亏损
        avgQty:
          type: number
          description: 每笔平均手数
        maxQty:
          type: integer
          description: 最大单笔持仓手数
        dailyAvgQty:
          type: number
          description: 日均交易手数
        dailyAvgExecution:
          type: number
          description: 日均交易笔数
        winRate:
          type: number
          description: 交易胜率
        equityPnLRatio:
          type: number
          description: 净值盈亏比
        riskAversion:
          type: number
          description: 损失厌恶系数
        tradingExpectation:
          type: number
          description: 交易期望值
    Earning:
      required:
        - closePositionsIncome
        - todayIncome
        - date
        - executionQty
      properties:
        closePositionsIncome:
          type: number
          description: 已平仓收益
        todayIncome:
          type: number
          description: 当日收益
        date:
          type: number
          description: 日期
        executionQty:
          type: number
          description: 手数
    Earnings:
      type: array
      items:
        $ref: '#/components/schemas/Earning'
    MonthlyAnaly:
      required:
        - date
        - monthlyIncome
      properties:
        date:
          type: number
        monthlyIncome:
          type: number
          description: 月收益
    MonthlyAnalysis:
      type: array
      items:
        $ref: '#/components/schemas/MonthlyAnaly'
    SymbolMonthAnalysisReport:
      required:
        - month
        - product
        - timePossessionAverage
        - timePossessionLongAverage
        - timePossessionShortAverage
        - orders
        - dealLongClose
        - dealShortClose
      properties:
        month:
          type: string
        product:
          type: string
          description: 产品/品种
        timePossessionAverage:
          type: number
          description: 盈亏
        timePossessionLongAverage:
          type: number
          description: 做多盈亏
        timePossessionShortAverage:
          type: number
          description: 做空盈亏
        orders:
          type: number
          description: 订单数
        dealLongClose:
          type: number
          description: 做多订单数
        dealShortClose:
          type: number
          description: 做空订单数
    SymbolMonthAnalysisReports:
      type: array
      items:
        $ref: '#/components/schemas/SymbolMonthAnalysisReport'
    ProfitAndLossAnalysisReport:
      required:
        - hour
        - week
        - moneyProfitLong
        - moneyProfitShort
        - moneyLossLong
        - moneyLossShort
        - moneyProfitLongClose
        - moneyProfitShortClose
        - moneyLossLongClose
        - moneyLossShortClose
        - qtyLong
        - qtyShort
        - qtyLongClose
        - qtyShortClose
      properties:
        hour:
          type: integer
          description: '小时[0-23]'
          minimum: 0
          maximum: 23
        week:
          type: integer
          description: '周[0-6]'
          minimum: 0
          maximum: 6
        moneyProfitLong:
          type: number
          description: 做多开仓获利
        moneyProfitShort:
          type: number
          description: 做空开仓获利
        moneyLossLong:
          type: number
          description: 做多开仓亏损
        moneyLossShort:
          type: number
          description: 做空开仓亏损
        moneyProfitLongClose:
          type: number
          description: 做多平仓获利
        moneyProfitShortClose:
          type: number
          description: 做空平仓获利
        moneyLossLongClose:
          type: number
          description: 做多平仓亏损
        moneyLossShortClose:
          type: number
          description: 做空平仓亏损
        qtyLong:
          type: number
          description: 做多开仓手数
        qtyShort:
          type: number
          description: 做空开仓手数
        qtyLongClose:
          type: number
          description: 做多平仓手数
        qtyShortClose:
          type: number
          description: 做空平仓手数
    ProfitAndLossAnalysisReports:
      type: array
      items:
        $ref: '#/components/schemas/ProfitAndLossAnalysisReport'
    PositionTime:
      required:
        - avgPositionTime
        - avgLossPositionTime
        - avgProfitPositionTime
        - data
      properties:
        avgPositionTime:
          type: number
          description: 平均持仓时间
        avgLossPositionTime:
          type: number
          description: 亏损订单平均持仓时间
        avgProfitPositionTime:
          type: number
          description: 盈利订单平均持仓时间
        data:
          type: array
          items:
            properties:
              currentIncome:
                type: number
                description: 当前订单盈亏
              currentPositionTime:
                type: number
                description: 当前订单持仓时间