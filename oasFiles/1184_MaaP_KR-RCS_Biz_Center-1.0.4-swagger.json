{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "RCS Biz Center API for Development",
    "url" : "https://api-dev.rcsbizcenter.com/api/1.0"
  }, {
    "description" : "RCS Biz Center API for Staging",
    "url" : "https://api-qa.rcsbizcenter.com/api/1.0"
  }, {
    "description" : "RCS Biz Center API for Production",
    "url" : "https://api.rcsbizcenter.com/api/1.0"
  } ],
  "security" : [ {
    "jwtAuth" : [ ]
  } ],
  "info" : {
    "version" : "1.0.4",
    "title" : "RCS Biz Center API 규격서",
    "description" : "RCS Biz Center API Version 1.0.4  \n\n본 문서는 기업과 대행사에 제공되는 RCS Biz Center API의 규격을 \n기술합니다.   \nAPI 서버는 개발용, 검수용, 상용으로 구분되어 있습니다.\n개발용은 내부 개발 사항이 빈번히 반영될 수 있으므로 중계사에서 개발/연동 시에는 검수용 사용을 권고합니다.\n+ 개발용 : https://api-dev.rcsbizcenter.com/api/1.0\n+ 검수용 : https://api-qa.rcsbizcenter.com/api/1.0\n+ 상용 : https://api.rcsbizcenter.com/api/1.0\n\nRCS Biz Center API는 이통 3사가 정의한 정책에 의거하여 정보를 제공합니다.\n따라서 일부 정보 제공상의 제약이 있을 수 있습니다.\n\n**API 문의처 : 1522-5739, tech@rcsbizcenter.com**\n\n`수정 이력`\\\n**2020.03.12 수정사항**\n+ date-time 예시 추가\n\n**2020.02.19 수정사항**\n+ ParamInfo 내 isMandatory 추가\n\n**2020.02.11 수정사항**\n+ GET /brand/{brandId}/chatbot Chatbots 를 chatbots로 수정\n\n**2020.02.07 수정사항**\n+ Widget, WidgetPolicy 설명 추가\n+ API 문의처 정보 추가\n+ POST /brand/{brandId}/chatbot 시 rcsReply 필수 입력 추가(2/13 상용 적용)\n\n**2020.01.06 수정사항**\n+ API 서버 구분 추가\n\n**2019.12.17 수정사항**\n+ X-RCS-Brandkey의 format 변경 (uuid -> random key)\n\n**2019.11.25 수정사항**\n+ 템플릿, 발신번호(챗봇) UPDATE, DELETE Method 처리가능 상태 설명 추가\n+ 전체 200 OK 응답 형식 수정\n+ chatbot UPDATE시 profileImage 삭제\n+ chatbot UPDATE시 통신서비스이용증명원 업로드 추가\n\n**2019.11.19 수정사항**\n+ messagebaseform의 bizService 오타 수정\n+ BrandInfo.mediaUrl 추가\n+ ChabotDetail.mediaUrl 추가\n\n**2019.11.05 수정사항**\n+ RegChatbotInfo.smsMo 삭제\n+ ChatbotDetail 수정\n  - smsMo 삭제, rcsReply 추가\n  - rcsReply default 1(RCS Postback 수신)\n\n**2019.10.29 수정사항**\n+ {webhookUrl} NotiTemplate.brandId 추가\n+ chatbot Attributes 설명 수정\n\n**2019.10.23 수정사항**\n+ {webhookUrl} 설명 내용 수정\n  - Brand Key 제공 내용 삭제\n  - nType을 notiType으로 명칭 변경\n+ webhook notification에 대한 대행사 return code 추가\n+ messagebase, messagebaseform 의 formattedString type\n  string에서 object로 변경\n+ messagebaseform의 bizCondition type을 string 에서 array로 변경\n+ messagebaseform 상세 조회시 양식 유형 이미지 링크 제공\n  - MessagebaseFormInfo.mediaUrl 추가\n  \n**2019.10.02 RCS Biz Center API 1.0.1 배포**\n"
  },
  "tags" : [ {
    "name" : "token",
    "description" : "인증용 토큰 오퍼레이션\n"
  }, {
    "name" : "corporation",
    "description" : "법인(기업)정보 오퍼레이션\\\n기업관리자 ID로만 조회가 가능하며 token 발급시 clientId 와  Path Parameter인 personId가 같아야 합니다.\n"
  }, {
    "name" : "agency",
    "description" : "대행사 오퍼레이션 (대행사 수신)\\\n대행사만 사용이 가능하며 다른 대행사의 정보는 조회는 할 수 없습니다. 즉 token 발급시 clientId와 Path paramter인 agencyId가 같아야 조회가 가능합니다.\n"
  }, {
    "name" : "messagebase",
    "description" : "브랜드 별 템플릿 오퍼레이션\n"
  }, {
    "name" : "chatbot",
    "description" : "브랜드 챗봇(발신번호) 오퍼레이션\n"
  } ],
  "paths" : {
    "/token" : {
      "post" : {
        "tags" : [ "token" ],
        "summary" : "Access 토큰을 발급 요청합니다.\n",
        "description" : "Access 토큰을 발급 요청합니다.<br> 기업ID, 대행사ID와 Secret Key(API Key)를 이용하여  토큰 발급을 요청합니다.<br> response로 전달되는 expiresIn 시간이 초과하면 토큰을  새로 발급받아야 합니다.<br>\n",
        "requestBody" : {
          "description" : "required: true\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "clientId" : {
                    "type" : "string",
                    "maximum" : 20,
                    "example" : "myMemberId"
                  },
                  "clientSecret" : {
                    "type" : "string",
                    "maximum" : 18,
                    "example" : "SK.atIs4g04r6PJepf"
                  }
                },
                "required" : [ "clientId", "clientSecret" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SuccessForToken"
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/corp/{personId}/brand" : {
      "get" : {
        "tags" : [ "corporation" ],
        "summary" : "기업담당자ID 관리 권한이 있는 브랜드 목록을 조회합니다.\n",
        "description" : "지정된 기업담당자ID로 관리할 수 있는 권한을 가진  브랜드 목록을 조회합니다. 브랜드 관리 권한은 RCS Biz Center 웹에서만 설정 가능합니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "personId",
          "schema" : {
            "type" : "string",
            "maximum" : 20
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BrandInfo"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/messagebase/common" : {
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "이통사가 기본 제공하는 템플릿을 조회합니다.\n",
        "description" : "이통사가 기본 제공하는 템플릿을 조회합니다. 리치카드 규격의 SMS, LMS, MMS용 템플릿을 조회할 수 있습니다. 현재 리치카드는 비즈니스 유형 별로 제공되는 항목은 없습니다.\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "productCode",
          "schema" : {
            "type" : "string",
            "enum" : [ "sms", "lms", "mms" ]
          }
        }, {
          "in" : "query",
          "name" : "cardType",
          "schema" : {
            "type" : "string",
            "enum" : [ "standalone", "standalone media top", "standalone horizontal", "carousel medium", "carousel small" ]
          }
        }, {
          "in" : "query",
          "name" : "bizService",
          "schema" : {
            "type" : "string",
            "enum" : [ "승인", "입금", "출금", "출고", "주문", "배송", "예약", "회원가입", "인증" ]
          },
          "description" : "현재 리치카드는 유형별 제공되는 항목이 없으므로 본 파라미터는  사용하지 마세요.\n"
        } ],
        "responses" : {
          "200" : {
            "description" : "템플릿 목록을 응답합니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "object",
                      "properties" : {
                        "messageBases" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Messagebase"
                          }
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/messagebase/common/{messagebaseId}" : {
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "이통사가 기본 제공하는 템플릿 상세 내용을 조회합니다.\n",
        "description" : "이통사가 기본 제공하는 템플릿 상세 내용을 조회합니다. 리치카드 규격의 SMS, LMS, MMS용 템플릿을 조회할 수 있습니다. 비즈니스 유형에 따라 조회할 수 있으며, 비즈니스 유형은 더 추가될 예정입니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "messagebaseId",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "템플릿 목록을 응답합니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/MessagebaseInfo"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/messagebase/messagebaseform" : {
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "템플릿 양식 목록을 조회합니다.\n",
        "description" : "템플릿 양식 목록을 조회합니다. 오픈리치카드 템플릿 작성이 필요한 경우 조회된 템플릿 양식 ID 를 이용하여 템플릿 양식 세부정보를 조회합니다.\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "cardType",
          "schema" : {
            "type" : "string",
            "enum" : [ "Cell", "Description", "Free" ]
          }
        }, {
          "in" : "query",
          "name" : "bizCondition",
          "schema" : {
            "type" : "string",
            "example" : "all"
          }
        }, {
          "in" : "query",
          "name" : "bizCategory",
          "schema" : {
            "type" : "string",
            "example" : "금융"
          }
        }, {
          "in" : "query",
          "name" : "bizService",
          "schema" : {
            "type" : "string",
            "example" : "입금"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "템플릿 양식 목록을 응답합니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessagebaseForm"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/messagebase/messagebaseform/{messagebaseformId}" : {
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "템플릿 유형의 상세 내용을 조회합니다.\n",
        "description" : "템플릿 유형의 상세 내용을 조회합니다. formattedString을 이용하여 원하는 브랜드용 템플릿을  작성할 수 있습니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "messagebaseformId",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "템플릿 유형 상세 내용을 응답합니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/MessagebaseFormInfo"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/brand/{brandId}/messagebase" : {
      "post" : {
        "tags" : [ "messagebase" ],
        "summary" : "브랜드 내에서 사용할 템플릿을 등록합니다.\n",
        "description" : "브랜드 내에서 사용할 템플릿을 등록합니다. 등록된 템플릿은 브랜드포털 관리자의 승인 후 사용 가능합니다.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "regMessagebases" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/RegMessagebaseInfo"
                    },
                    "maxItems" : 1000,
                    "minItems" : 1
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "템플릿이 정상적으로 등록된 경우 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "messagebases" : {
                          "type" : "array",
                          "items" : {
                            "properties" : {
                              "messagebaseId" : {
                                "description" : "템플릿ID(= messagebaseId)",
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "브랜드에 등록된 템플릿을 조회합니다.\n",
        "description" : "브랜드에 등록된 템플릿을 조회합니다. 템플릿 별 승인 상태를 확인할 수 있습니다.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        } ],
        "responses" : {
          "200" : {
            "description" : "브랜드에 등록된 템플릿 ID 목록이 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "tmplts" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Messagebase"
                          }
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/brand/{brandId}/messagebase/{messagebaseId}" : {
      "get" : {
        "tags" : [ "messagebase" ],
        "summary" : "브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.\n",
        "description" : "브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/MessagebaseId"
        } ],
        "responses" : {
          "200" : {
            "description" : "해당 템플릿의 상세 내역이 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/MessagebaseInfo"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "put" : {
        "tags" : [ "messagebase" ],
        "summary" : "브랜드에 등록된 지정 템플릿을 업데이트 합니다.\n",
        "description" : "브랜드에 등록된 지정 템플릿을 업데이트 합니다.   템플릿의 업데이트는 승인상태에 따라 처리 여부가 결정됩니다.\n-  저장, 반려만 update 가능(승인대기, 검수완료, 승인 상태는 불가)\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/MessagebaseId"
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegMessagebaseInfo"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "템플릿이 정상적으로 등록된 경우 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "messagebaseId" : {
                          "description" : "템플릿ID(= messagebaseId)",
                          "type" : "string"
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "delete" : {
        "tags" : [ "messagebase" ],
        "summary" : "브랜드 내 지정된 템플릿을 삭제합니다.\n",
        "description" : "브랜드 내 지정된 템플릿을 삭제합니다. 템플릿의 삭제는 승인상태에 따라 처리 여부가 결정됩니다. 한번 삭제된 템플릿은 복원이 불가능하며 동일한 ID로 생성할 수 없습니다.\n-  저장, 반려, 승인만 delete 가능(승인대기, 검수완료 상태는 불가)\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/MessagebaseId"
        } ],
        "responses" : {
          "200" : {
            "description" : "템플릿이 성공적으로 삭제되었을 경우 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "messagebaseId" : {
                          "description" : "템플릿ID(= messagebaseId)",
                          "type" : "string"
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/brand/{brandId}/chatbot" : {
      "post" : {
        "tags" : [ "chatbot" ],
        "summary" : "지정된 브랜드에 챗봇(발신번호)을 등록합니다.\n",
        "description" : "지정된 브랜드에 챗봇(발신번호)을 등록합니다.   챗봇 등록시 브랜드포털 관리자의 승인 후 사용이 가능합니다.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        } ],
        "requestBody" : {
          "description" : "챗봇(발신번호) 등록시 통신서비스이용증명원을 함께 업로드 할 수 있습니다.\n",
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "subNumCertificate" : {
                    "description" : "통신서비스이용증명원을 업로드합니다.\n",
                    "type" : "string",
                    "format" : "binary"
                  },
                  "chatbots" : {
                    "description" : "등록할 챗봇(발신번호) 정보를 최대 1000개까지 등록합니다. Object 구성은 RegChatbotInfo를 참고하시기 바랍니다.\n",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/RegChatbotInfo"
                    },
                    "maxItems" : 1000,
                    "minItems" : 1
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "챗봇 등록 상태가 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "chatbots" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Chatbot"
                          }
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "get" : {
        "tags" : [ "chatbot" ],
        "summary" : "브랜드 내에 등록된 챗봇 목록을 조회합니다.\n",
        "description" : "브랜드 내에 등록된 챗봇 목록을 조회합니다.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        } ],
        "responses" : {
          "200" : {
            "description" : "브랜드에 등록된 챗봇 목록이 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "chatbots" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Chatbot"
                          }
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/brand/{brandId}/chatbot/{chatbotId}" : {
      "get" : {
        "tags" : [ "chatbot" ],
        "summary" : "지정된 챗봇의 상세 정보를 조회합니다.\n",
        "description" : "지정된 챗봇의 상세 정보를 조회합니다. \n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/ChatbotId"
        } ],
        "responses" : {
          "200" : {
            "description" : "해당 챗봇의 상세 내역이 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/ChatbotDetail"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "put" : {
        "tags" : [ "chatbot" ],
        "summary" : "지정된 챗봇의 정보를 업데이트합니다.\n",
        "description" : "지정된 챗봇의 정보를 업데이트합니다.   챗봇의 업데이트는 승인상태에 따라 처리여부가 결정됩니다. 저장, 반려 상태에서 업데이트 시 등록과 동일하게 브랜드포털 관리자의 승인이 필요합니다.\n-  저장, 반려, 승인만 update 가능(승인대기, 검수완료 상태는 불가)\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/ChatbotId"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "subNumCertificate" : {
                    "description" : "통신서비스이용증명원을 업로드합니다.\n",
                    "type" : "string",
                    "format" : "binary"
                  },
                  "chatbot" : {
                    "$ref" : "#/components/schemas/RegChatbotInfo"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "해당 템플릿의 상세 내역이 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/ChatbotDetail"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      },
      "delete" : {
        "tags" : [ "chatbot" ],
        "summary" : "해당 챗봇을 삭제합니다.\n",
        "description" : "해당 챗봇을 삭제합니다. 챗봇의 삭제는 승인상태에 따라 처리 여부가 결정됩니다. 한번 삭제된 발신번호는 동일 브랜드에 재등록이 불가능 합니다.\n-  저장, 반려, 승인만 delete 가능(승인대기, 검수완료 상태는 불가)\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BrandKey"
        }, {
          "$ref" : "#/components/parameters/BrandId"
        }, {
          "$ref" : "#/components/parameters/ChatbotId"
        } ],
        "responses" : {
          "200" : {
            "description" : "성공적으로 삭제되었을 경우 응답됩니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "properties" : {
                        "chatbotId" : {
                          "description" : "챗봇Id(=chatbotId)",
                          "type" : "string"
                        }
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/agency/{agencyId}/contract" : {
      "get" : {
        "tags" : [ "agency" ],
        "summary" : "",
        "description" : "대행사가 계약된 브랜드 리스트를 제공합니다.<br> 브랜드별 기업의 사업자등록번호를 함께 전달 하여 대행사에 등록된 기업 정보와 맵핑할 수 있습니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "agencyId",
          "schema" : {
            "type" : "string",
            "maximum" : 20
          },
          "required" : true,
          "description" : "RCS Biz Center에 등록된 대행사 ID"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContractInfo"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/agency/{agencyId}/corp/{corpRegNum}/brand" : {
      "get" : {
        "tags" : [ "agency" ],
        "summary" : "",
        "description" : "대행사가 계약된 브랜드를 기업 단위로 조회합니다.<br> 기업단위 조회시 사업자 등록번호를 이용합니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "agencyId",
          "schema" : {
            "type" : "string",
            "maximum" : 20
          },
          "required" : true,
          "description" : "RCS Biz Center에 등록된 대행사 ID"
        }, {
          "in" : "path",
          "name" : "corpRegNum",
          "schema" : {
            "type" : "string",
            "maximum" : 40
          },
          "required" : true,
          "description" : "사업자등록번호"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContractInfo"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/agency/{agencyId}/brand/{brandId}" : {
      "get" : {
        "tags" : [ "agency" ],
        "summary" : "",
        "description" : "계약된 브랜드 정보를 개별 조회 합니다. 승인된 브랜드만 조회가 가능합니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "agencyId",
          "schema" : {
            "type" : "string",
            "maximum" : 20
          },
          "required" : true,
          "description" : "RCS Biz Center에 등록된 대행사 ID"
        }, {
          "in" : "path",
          "name" : "brandId",
          "schema" : {
            "type" : "string",
            "maximum" : 20
          },
          "required" : true,
          "description" : "브랜드 ID"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "$ref" : "#/components/schemas/BrandInfo"
                    },
                    "code" : {
                      "type" : "string",
                      "default" : 20000000
                    },
                    "status" : {
                      "type" : "integer",
                      "default" : 200
                    },
                    "desc" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Fail"
          }
        }
      }
    },
    "/{webhookUrl}" : {
      "post" : {
        "tags" : [ "agency" ],
        "summary" : "",
        "description" : "대행사에서 입력한 알림 수신 Webhook URL을 통해 브랜드 계약(권한) 등록, 챗봇(발신번호) 승인결과, 템플릿 승인결과, 신규 템플릿폼/포멧 등록시  알림을 수신하는데 사용됩니다.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "webhookUrl",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "대행사에서 등록한 Webhook URL 정보\n"
        } ],
        "requestBody" : {
          "description" : "notiType에 설정된 다음의 대상 정보를 구분하여 Object를 제공합니다. <br> 'contract': 브랜드 계약 <br> 'chatbot': 챗봇/A2P(발신번호)<br> 'messagebaseform': 템플릿 양식<br> 'template': 템플릿 <br> 'format': 포멧(richcard) \n",
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NotiContract"
                }, {
                  "$ref" : "#/components/schemas/NotiChatbot"
                }, {
                  "$ref" : "#/components/schemas/NotiMessagebaseForm"
                }, {
                  "$ref" : "#/components/schemas/NotiTemplate"
                }, {
                  "$ref" : "#/components/schemas/NotiFormat"
                } ],
                "discriminator" : {
                  "propertyName" : "notiType",
                  "mapping" : {
                    "contract" : "#/components/schemas/NotiContract",
                    "chatbot" : "#/components/schemas/NotiChatbot",
                    "messagebaseform" : "#/components/schemas/NotiMessagebaseForm",
                    "template" : "#/components/schemas/NotiTemplate",
                    "format" : "#/components/schemas/NotiFormat"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "성공적으로 알림을 수신하였을 경우 응답합니다.\n"
          },
          "400" : {
            "description" : "대행사 측 청약이 우선 처리되지 않은 상태에서 'contract'가 전달된 경우 필히 응답되어야 합니다.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookErrorInfo"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "responses" : {
      "Fail" : {
        "description" : "처리 실패",
        "content" : {
          "application/json" : {
            "schema" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/204ErrorInfo"
              }, {
                "$ref" : "#/components/schemas/401ErrorInfo"
              }, {
                "$ref" : "#/components/schemas/403ErrorInfo"
              }, {
                "$ref" : "#/components/schemas/400ErrorInfo"
              } ]
            }
          }
        }
      },
      "SuccessForToken" : {
        "description" : "Token 발급",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TokenInfo"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "jwtAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "인증방식은 JWT인증을 사용합니다. 토큰의 갱신은 없으며 토큰 만료 시 항상 재발급 받아야 합니다.\n"
      }
    },
    "parameters" : {
      "BrandKey" : {
        "description" : "브랜드 포털에서 기업관리자가 발급하여 대행사에 전달한  브랜드Key<br> 대행사는 브랜드와 관련된 Messagebase, Chatbot API 사용시  Header에 '브랜드Key'를 반드시 설정하여야 합니다.\n",
        "in" : "header",
        "name" : "X-RCS-Brandkey",
        "schema" : {
          "type" : "string",
          "maximum" : 36
        }
      },
      "BrandId" : {
        "description" : "브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.\n",
        "in" : "path",
        "name" : "brandId",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      },
      "MessagebaseId" : {
        "description" : "브랜드 내 템플릿 정보 접근시 사용되는  템플릿ID Path Parameter 입니다.\n",
        "in" : "path",
        "name" : "messagebaseId",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      },
      "ChatbotId" : {
        "description" : "브랜드 내 챗봇 정보 접근시 사용되는 챗봇ID Path Parameter 입니다.\n",
        "in" : "path",
        "name" : "chatbotId",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }
    },
    "schemas" : {
      "204ErrorInfo" : {
        "description" : "request 처리 결과는 성공적이나 제공할 데이터가 없는 경우 응답됩니다.<br> --------------------------------------------------------------------<br> 60004  No Content  \n  : 요청을 성공적으로 처리했으나 데이터가 없음\\\n--------------------------------------------------------------------<br>\n",
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : 204
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "example" : 60004
              },
              "message" : {
                "type" : "string",
                "example" : "No Content"
              }
            }
          }
        }
      },
      "401ErrorInfo" : {
        "type" : "object",
        "description" : "인증에 필요한 정보가 누락되거나 값이 잘못된 경우 응답됩니다.<br> --------------------------------------------------------------------<br> 61001  Missing Authorization header Authorization \n  : 헤더 파라미터 누락<br>\n61002  Missing Token  Authorization \n  : 헤더 값(Token) 누락<br>\n61003  Invalid token  \n  : 유효하지 않은 Token<br>\n61004  Token has expired  \n  : Token 만료<br>\n61005  Invalid client id  \n  : 유효하지 않은 client id<br>\n61006  Invalid secret key  \n  : 유효하지 않은 secret key<br>\n--------------------------------------------------------------------<br>\n",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : 401
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "example" : 61001
              },
              "message" : {
                "type" : "string",
                "example" : "Missing Authorization header"
              }
            }
          }
        }
      },
      "403ErrorInfo" : {
        "type" : "object",
        "description" : "대상에 대한 접근 권한이 없는 경우 응답됩니다.<br> --------------------------------------------------------------------<br> 63001  No Brand Permission  \n  : 브랜드에 대한 권한 없음<br>\n--------------------------------------------------------------------<br>\n",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : 403
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "example" : 63001
              },
              "message" : {
                "type" : "string",
                "example" : "No Brand Permission"
              }
            }
          }
        }
      },
      "400ErrorInfo" : {
        "type" : "object",
        "description" : "잘못된 Request에 대하여 응답됩니다. 요구되는 헤더가 누락되거나 Request에 필요한 데이터 누락/오류 등에 해당하는 경우 응답됩니다. <br> --------------------------------------------------------------------<br> 64001  Missing X-RCS-BrandKey header  \n  : X-RCS-BrandKey 헤더 누락<br>\n64002  Invalid Brand Key  \n  : X-RCS-BrandKey 의 Brand Key 오류<br>\n64101  Invalid brandId on path parameter  \n  : URL 내 Brand ID 오류<br>\n64102  Invalid agencyId on path parameter  \n  : URL 내 Agency ID 오류<br>\n64103  Invalid corpRegNum on path parameter  \n  : URL 내 사업자등록번호 오류<br>\n64104  Invalid personId on path parameter  \n  : URL 내 Person ID 오류<br>\n64105  Invalid chatbotId on path parameter  \n  : URL 내 chatbot ID 오류<br>\n64106  Invalid messagebaseId on path parameter  \n  : URL 내 messagebase ID 오류<br>\n64107  Invalid messagebaseformId on path parameter  \n  : URL 내 messagebaseform ID 오류<br>\n64201  Invalid query parameter ({name of paramter})  \n  : 유효하지 않은 Query 파라미터 - 해당 파라미터 표시<br>\n64202  Invalid query parameter value ({name of paramter}:{value})  \n  : Query 파라미터 값 오류 - 해당 파라미터와 입력된 값 표시<br>\n64203  query paramter required ({name of paramter})  \n  : 필수 Query 파라미터 누락 - 해당 파라미터 표시<br>\n64301  Missing Body data  \n  : Body Data 누락<br>\n64302  Invalid JSON format  \n  : Body Data JSON 형식 오류<br>\n64303  Invalid type of Attribute ({name  of attribute})  \n  : Attribute type 오류 - 해당 Attrubute 표시<br>\n64304  Over specified size ({name of attribute})  \n  : 지정된 사이즈 초과  - 해당 Attrubute 표시<br>\n64305  Missing Certification document  \n  : 발신번호 등록 시 통신서비스이용증명원 파일 누락<br>\n64306  Exceed MDN registration quantity  \n  : 발신번호 등록 시 발신번호 등록 개수 초과<br>\n64307  Missing MDN  \n  : 발신번호 등록 시 발신번호 누락<br>\n64308  Invalid MDN format  \n  : 발신번호 등록 시 발신번호 형식 오류<br>\n64309  Missing chatbot name  \n  : 발신번호 등록 시 챗봇이름 누락<br>\n64310  Invalid display format  \n  : 발신번호 등록 시 display 설정 형식 오류<br>\n64311  Invalid rcsReply format  \n  : 발신번호 등록 시 rcsReply 형식 오류<br>\n64312  Missing messagebaseformId  \n  : 템플릿 등록 시 템플릿 양식 ID 누락<br>\n64313  Invalid messagebaseformId  \n  : 템플릿 등록 시 템플릿 양식 ID 오류<br>\n64314  Missing Template name  \n  : 템플릿 등록 시 템플릿명 누락<br>\n64315  Missing brandId  \n  : 템플릿 등록 시 브랜드 ID 누락<br>\n64316  Invalid brandId  \n  : 템플릿 등록 시 브랜드 ID 오류<br>\n64317  Invalid agencyId  \n  : 템플릿 등록 시 대행사 ID 오류<br>\n64318  Invalid formattedString format  \n  : 템플릿 등록 시 formattedString 형식 오류<br>\n64319  Duplicate MDN   \n  : 발신번호 등록 시 발신번호ID 중복 오류  \\\n64320  Duplicate messagebaseId   \n  : 템플릿 등록 시 템플릿ID 중복 오류 \\\n64321  Invalid approval status  \\\n  : 승인상태 부적합에 의한 처리 불가  \\\n64322  File no exist  \n  : 파일 누락 \\\n64323  No changes  \n  : 변경사항 없음 \\\n64324  Invalid custTmpltId format  \n  : 템플릿 등록시 입력된 사용자 지정 템플릿 ID 형식 오류  \\\n64325  Invalid chatbot service type  \n  : 챗봇 서비스 유형 오류 \\\n64326  Invalid chatbot webhook format  \n  : 챗봇 webhook 형식 오류  \\\n64327  Not allowed delete  \n  : 정책에 의한 삭제 불가 \\\n64328  Not allowed modification  \n  : 정책에 의한 수정 불가 \n  \n--------------------------------------------------------------------<br>\n",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : 400
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "example" : 64001
              },
              "message" : {
                "type" : "string",
                "example" : "Missing X-RCS-BrandKey header"
              }
            }
          }
        }
      },
      "WebhookErrorInfo" : {
        "type" : "object",
        "description" : "기업고객이 대행사에 청약전 상태로 RCS Biz Center에서  브랜드-대행사 계약 설정을 먼저 실행하여 webhook Notification 전달된 경우 대행사가 RCS Biz Center에 응답합니다.<br>\n",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : 400
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "example" : 69999
              },
              "message" : {
                "type" : "string",
                "example" : "No Subscription"
              }
            }
          }
        }
      },
      "TokenInfo" : {
        "description" : "access Token, expire 시간을 포함한 JSON Object 입니다.\n",
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6Ik5vQWJlMjAxOSIsImlhdCI6MTUxNjIzOTAyMn0.60wyqqCDOsWfl6qhjaMwyU_9fJUQqCZIhVy8nL71_qs"
          },
          "expiresIn" : {
            "type" : "string",
            "example" : "1568694883"
          }
        },
        "required" : [ "accessToken", "expiresIn" ]
      },
      "ContractInfo" : {
        "type" : "object",
        "description" : "브랜드와 대행사의 계약관계 정보입니다.\n",
        "properties" : {
          "corpId" : {
            "type" : "string",
            "description" : "RCS Biz Center에 등록된 기업 ID"
          },
          "corpRegNum" : {
            "type" : "string",
            "description" : "RCS Biz Center에 등록된 기업의 사업자등록번호"
          },
          "brandId" : {
            "type" : "string",
            "description" : "브랜드 ID"
          },
          "brandName" : {
            "type" : "string",
            "description" : "브랜드 명"
          },
          "agencyId" : {
            "type" : "string",
            "description" : "대행사 ID"
          },
          "contracts" : {
            "type" : "array",
            "description" : "계약 유형",
            "items" : {
              "type" : "string",
              "enum" : [ "a2p", "chat" ]
            }
          },
          "regDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "계약등록일시"
          },
          "modDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "수정일시"
          }
        }
      },
      "BrandInfo" : {
        "description" : "브랜드 기본 정보 객체입니다.\n",
        "type" : "object",
        "required" : [ "brandId", "name", "categories" ],
        "properties" : {
          "brandId" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "브랜드ID",
            "example" : "A00100010001"
          },
          "name" : {
            "type" : "string",
            "maximum" : 60,
            "description" : "브랜드 이름",
            "example" : "FAN"
          },
          "registerDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "등록일시"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "수정일시"
          },
          "status" : {
            "type" : "string",
            "description" : "브랜드의 승인 상태",
            "enum" : [ "승인대기", "승인", "반려", "검수완료", "저장" ]
          },
          "mediaUrl" : {
            "$ref" : "#/components/schemas/MediaUrl"
          }
        }
      },
      "RegChatbotInfo" : {
        "description" : "챗봇 등록 정보 객체입니다. Object 구성은 RegChatbotInfo를 참고하시기 바랍니다.\n",
        "type" : "object",
        "properties" : {
          "mdn" : {
            "type" : "string",
            "maximum" : 40,
            "description" : "등록할 발신번호입니다.  국가번호는 생략하고 입력하여야 합니다.\n"
          },
          "subnum" : {
            "type" : "string",
            "maximum" : 40,
            "description" : "회신번호 입니다. A2P는 발신번호와 회신번호가 동일해야 합니다.  생략할 경우 발신번호와 동일하게 설정됩니다.\n"
          },
          "subTitle" : {
            "type" : "string",
            "maximum" : 100,
            "description" : "챗봇이름"
          },
          "rcsReply" : {
            "type" : "string",
            "enum" : [ "0", "1" ],
            "description" : "SMS MO 수신 0, RCS Postback 수신 1",
            "default" : 0
          },
          "display" : {
            "type" : "string",
            "enum" : [ "11", "10", "01", "00" ],
            "default" : "01",
            "description" : "챗봇 전시 설정값 입니다. 설정하지 않을 경우 기본 '01'로 설정됩니다.  \n'11' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시  \n'10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시  \n'01' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시  \n'00' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 비전시  \n"
          },
          "service" : {
            "type" : "string",
            "enum" : [ "a2p", "chat" ],
            "default" : "a2p",
            "description" : "A2P/CHAT 서비스 유형"
          },
          "webhook" : {
            "type" : "string",
            "maximum" : 128,
            "description" : "service가 'chat' 인 경우 중계사 webhook URL 정보 필수 (URL)\n"
          }
        },
        "required" : [ "mdn", "subTitle", "rcsReply" ]
      },
      "Chatbot" : {
        "description" : "챗봇(발신번호) 기본 정보입니다.\n",
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "description" : "챗봇이 대량등록된 경우 그룹ID 입니다.\n"
          },
          "chatbotId" : {
            "type" : "string",
            "description" : "챗봇(대화방)ID, A2P의 경우 발신번호(msisdn)과 동일합니다.\n"
          },
          "brandId" : {
            "type" : "string",
            "description" : "브랜드ID"
          },
          "subNum" : {
            "type" : "string",
            "maximum" : 40,
            "description" : "회신번호 A2P의 경우 발신번호, 즉 chatbotId와 동일합니다.\n"
          },
          "isMainNum" : {
            "type" : "boolean",
            "description" : "대표번호 여부를 표시합니다. 대표번호는 RCS Biz Center에서 브랜드를 등록할 때  함께 등록되는 발신번호입니다. 현재 이 값은 대행사나 기업에서 API를 통한 등록/수정은  제공하지 않습니다.\n"
          },
          "subTitle" : {
            "type" : "string",
            "maximum" : 100,
            "description" : "챗봇(대화방) 이름"
          },
          "service" : {
            "type" : "string",
            "enum" : [ "a2p", "chat" ],
            "default" : "a2p",
            "description" : "A2P/CHAT 서비스 유형"
          },
          "display" : {
            "type" : "string",
            "description" : "'11' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시  \n'10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시  \n'01' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시  \n'00' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 비전시  \n",
            "enum" : [ "11", "10", "01", "00" ]
          },
          "approvalResult" : {
            "type" : "string",
            "description" : "승인 상태",
            "enum" : [ "승인대기", "승인", "반려", "검수완료", "저장" ]
          },
          "registerDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "챗봇 등록일시"
          },
          "approvalDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "챗봇 승인일시"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "챗봇 수정일시"
          },
          "registerId" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "챗봇 등록 계정 ID"
          },
          "updateId" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "챗봇 수정 계정 ID"
          }
        }
      },
      "ChatbotDetail" : {
        "description" : "챗봇(발신번호) 상세 정보 객체입니다.\n",
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Chatbot"
        } ],
        "properties" : {
          "mediaUrl" : {
            "$ref" : "#/components/schemas/MediaUrl"
          },
          "rcsReply" : {
            "type" : "string",
            "enum" : [ 0, 1 ],
            "description" : "SMS MO 수신 0, RCS Postback 수신 1",
            "default" : 0
          },
          "approvalReason" : {
            "type" : "string",
            "maximum" : 200,
            "description" : "승인 사유"
          },
          "status" : {
            "type" : "string",
            "description" : "챗봇 상태를 나타내는 필드입니다. 현재는 단일 값인 \"published\" 만 존재합니다. 현재 이 값은 대행사나 기업에서 API를 통한 등록/수정은  제공하지 않습니다.\n",
            "enum" : [ "published" ]
          },
          "searchWeight" : {
            "type" : "string",
            "default" : 512,
            "maximum" : 10,
            "description" : "기본값(512)  검색 우선 순위로 사용자 단말에서 검색 시 검색 결과가 여러 개라면 이 값이 높은 순서로 보여집니다. 현재 이 값은 대행사나 기업에서 API를 통한 등록/수정은  제공하지 않습니다.\n"
          },
          "webhook" : {
            "type" : "string",
            "maximum" : 128,
            "description" : "service가 'chat' 인 경우 중계사 webhook URL 정보는 필수입니다. (URL)\n"
          },
          "botTcPage" : {
            "type" : "string",
            "maximum" : 128,
            "description" : "이용약관페이지 URL 입니다. 현재 이값은 대행사나 기업에서 API를 통해 등록/수정은  제공하지 않습니다.\n"
          }
        }
      },
      "GuideInfo" : {
        "type" : "object",
        "description" : "템플릿 작성에 필요한 가이드 정보를 제공하기 위하여 양식 정의 시 포함되는 정보입니다. 리치카드의 경우 messagebaseInfo에서 제공됩니다.\n",
        "properties" : {
          "maxLineCount" : {
            "type" : "integer",
            "description" : "max 라인수 \n"
          },
          "maxDisplayText" : {
            "type" : "integer",
            "description" : "버튼명 글자수 \n"
          },
          "maxDescriptionSize" : {
            "type" : "integer",
            "description" : "카드별 max 본문 글자수  \n"
          },
          "imageWidth" : {
            "type" : "integer",
            "description" : "이미지 권고 가로 사이즈 단위는 Pixel\n"
          },
          "imageHeight" : {
            "type" : "integer",
            "description" : "이미지 권고 세로 사이즈 단위는 Pixel\n"
          }
        }
      },
      "PolicyInfo" : {
        "description" : "리치카드, 오픈리치카드에 포함된 content(title, description, media, button) 에 대한 검증 정책 저장을 위한 객체입니다.\n",
        "type" : "object",
        "properties" : {
          "buttonsAllowed" : {
            "type" : "boolean",
            "description" : "MaaP FE /message의 buttons 사용 유무 true : buttons 필드 사용 false : buttons 에 값이 들어오면 실패 처리\n"
          },
          "adHeaderAllowed" : {
            "type" : "boolean",
            "description" : "header에 광고 인입 허가 여부 true : 광고인입 허용(MaaP FE /message의 header 체크안함) false : 광고인입 불허(MaaP FE /message이 header가 1(광고)\n        이면 실패 처리)\n"
          },
          "adBodyAllowed" : {
            "type" : "boolean",
            "description" : "광고 문구 허용 여부 true : 본문 광고 문구를 체크하지 않음 false : 본문이 \"(광고)\"로 시작하면 실패 처리\n"
          },
          "cardCount" : {
            "type" : "integer",
            "description" : "카드 개수"
          },
          "maxTitleSize" : {
            "type" : "integer",
            "default" : 30,
            "description" : "개별 타이틀 글자 최대 수. 사용하지 않음."
          },
          "maxButtonCount" : {
            "type" : "integer",
            "description" : "버튼 최대 개수"
          },
          "maxDescriptionSize" : {
            "type" : "integer",
            "description" : "RichCard인 경우(Carousel포함) Description들의 글자수 총합.<br> OpenRichCard인 경우 변수부 글자수 총합.<br> <=0 인 경우 사용하지 않음.<br>\n"
          },
          "maxMediaSize" : {
            "type" : "integer",
            "description" : "Byte단위 미디어 크기 총합의 최대 크기, <=0 인 경우 사용하지 않음."
          }
        }
      },
      "ParamInfo" : {
        "description" : "템플릿의 개별 파라미터를 검수하기 위한 대상 파라미터 정보 객체입니다. <br> 크기 관련 필드는 <=0 인 경우 체크하지 않습니다.\n",
        "type" : "object",
        "required" : [ "param", "pType" ],
        "properties" : {
          "param" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "검수 파라미터명. (영문,숫자만 사용해야함.)"
          },
          "isMandatory" : {
            "type" : "boolean",
            "default" : false,
            "description" : "필수여부. true인 경우 중계사에서 메시지 전송 요청 시 해당 필드가 없는 경우 MaaP FE에서 실패처리한다. false인 경우는 해당 필드가 없는 경우도 메시지 전송이 되도록 MaaP FE에서 적절하게 처리한다.\n"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "string", "file" ],
            "description" : "기술검사타입을 지정합니다.<br> - string: 문자열 검사 대상<br> - file: 파일 검사 대상\n"
          },
          "contentType" : {
            "type" : "string",
            "enum" : [ "title", "description", "maapfile", "cell", "displayText", "url", "etc" ],
            "description" : "컨텐츠 유형, PolicyInfo 정책을 검사하는데 사용됩니다.\n"
          },
          "strSize" : {
            "type" : "integer",
            "description" : "글자 최대 크기, type이 string인 경우"
          },
          "fileSize" : {
            "type" : "integer",
            "description" : "파일 최대 크기, type이 file인 경우."
          },
          "strRegx" : {
            "type" : "string",
            "description" : "java regular expression, null 인경우 사용하지 않음. 예) <br>1) 숫자만 : '^[0-9]\\*$' <br>2) 영문자만 : '[a-zA-Z]\\*$' <br>3) 한글만 : '^[가-힣]\\*$' <br>4) 영어 & 숫자만 : '^[a-zA-Z0-9]\\*$' <br>5) E-Mail : '^[a-zA-Z0-9]+@[a-zA-Z0-9]+$' <br>6) 휴대폰 : '^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$' <br>7) 일반전화 : '^\\d{2,3}-\\d{3,4}-\\d{4}$' <br>8) 주민등록번호 : '\\d{6}\\-[1-4]\\d{6}' <br>9) IP 주소 : \n  '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})'\n"
          },
          "verification" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "문장 패턴 정의 (SKT향) \"안녕하세요\", \"님 \", \"원입니다.\"\n"
          }
        }
      },
      "RegMessagebaseInfo" : {
        "description" : "템플릿 등록 정보 객체입니다.  템플릿 등록시 지정된 messagebaseform의 widgetPolicy 의 속성만 수정/삭제가 가능합니다. formattedString에 템플릿이 정의되며 지정된 형식에 맞게 등록되어야 합니다.\n",
        "type" : "object",
        "required" : [ "messagebaseformId", "tmpltName", "brandId", "custTmpltId" ],
        "properties" : {
          "messagebaseformId" : {
            "description" : "텡플릿 양식 ID",
            "type" : "string",
            "maximum" : 10
          },
          "custTmpltId" : {
            "description" : "사용자 지정 템플릿ID로 영문/숫자 25자 이내만 가능",
            "type" : "string",
            "maximum" : 25
          },
          "tmpltName" : {
            "description" : "템플릿명",
            "type" : "string",
            "maximum" : 40
          },
          "brandId" : {
            "description" : "브랜드ID",
            "type" : "string",
            "maximum" : 13
          },
          "agencyId" : {
            "description" : "대행사ID",
            "type" : "string",
            "maximum" : 20
          },
          "formattedString" : {
            "$ref" : "#/components/schemas/Widget"
          }
        }
      },
      "WidgetPolicy" : {
        "description" : "오픈리치카드를 구성하는 Property 중  템플릿 정의시 변경 가능한 속성 정보 객체입니다.   클라이언트가 변경할 수 있는 속성 리스트를 widget별 표시합니다.  클라이언트에서 템플릿 정의 시 사용하는 openrichcard용 messagebaseform 에 정의되며 템플릿 정의시 widgetPolicy에 표시된 속성만 클라이언트에서 수정/삭제가 가능합니다.\n",
        "type" : "object",
        "required" : [ "widget" ],
        "properties" : {
          "allowedAttributes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Widget" : {
        "description" : "오픈리치카드를 구성하는 Widget 의 속정 정보 객체입니다. 이통사에서 제공된 Openrichcard v1.5를 기준으로 작성되었습니다.\n",
        "type" : "object",
        "required" : [ "widget" ],
        "properties" : {
          "widgetPolicy" : {
            "$ref" : "#/components/schemas/WidgetPolicy"
          },
          "width" : {
            "description" : "Match : 사용가능한 크기 모두 사용  \nContent : 내용 또는 child 표시에 필요한 최소 크기 사용  \nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n",
            "type" : "string",
            "enum" : [ "match", "content", "dimen" ]
          },
          "height" : {
            "description" : "Match : 사용가능한 크기 모두 사용  \nContent : 내용 또는 child 표시에 필요한 최소 크기 사용  \nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n",
            "type" : "string",
            "enum" : [ "match", "content", "dimen" ]
          },
          "weight" : {
            "type" : "number",
            "format" : "float",
            "description" : "Parent가Linear-Layout인 경우에 적용되며, parent가 vertical인 경우 height가 무시되고 horizontal인 경우 width가 무시된다. 다른 child 들이 사용하고 남은 크기를 weight를 지정한 child들이 해당 값에 따라 나눠사용\\\n예) child 하나는 “width” = “content” 이고 다른 child 둘은 각각 “weight”=1 과 2인 경우, 첫 child가 사용하고 남은 영역을 두 child가 1:2로 사용함\n"
          },
          "background" : {
            "type" : "string",
            "description" : "배경색상을 지정할때 사용된다.\\\n예) #ffffff\n"
          },
          "padding" : {
            "type" : "string",
            "description" : "padding을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "paddingTop" : {
            "type" : "string",
            "description" : "padding을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "paddingLeft" : {
            "type" : "string",
            "description" : "padding을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "paddingRight" : {
            "type" : "string",
            "description" : "padding을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "paddingBottom" : {
            "type" : "string",
            "description" : "padding을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "margin" : {
            "type" : "string",
            "description" : "margin을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "marginTop" : {
            "type" : "string",
            "description" : "margin을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "marginLeft" : {
            "type" : "string",
            "description" : "margin을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "marginRight" : {
            "type" : "string",
            "description" : "margin을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "marginBottom" : {
            "type" : "string",
            "description" : "margin을 지정한다. Padding / margin이 지정된 경우, TOP/Bottom/Left/Right는 무시됨\\\nDimen : 지정된 값을 사용(dp만 지원)\\\n예) \"10dp\" \n"
          },
          "visibility" : {
            "type" : "string",
            "description" : "대상의 widget의 표시여부를 지정한다. gone : 표시되지 않음 invisible : 표시되지 않지만 공간은 차지함 visible : 표시됨\n"
          },
          "click" : {
            "type" : "string",
            "description" : "RCC.07 v8.0 3.6.10.6.1.2 Suggested Actions, 3.6.10.6.1.1 Suggested Replies 참조\n"
          },
          "widget" : {
            "type" : "string",
            "enum" : [ "LinearLayout", "TextView", "ImageView", "View" ],
            "description" : "LinearLayout : child 들을 수직/수평으로 배열에 정의된 순서에 따라 표시\\\nView : Gap, 수직선 용도\\\nImageView : Image 표시 용도\\\nTextView : Text 표시 용도\\\n"
          },
          "orientation" : {
            "type" : "string",
            "enum" : [ "Vertical", "Horizontal" ],
            "description" : "표시 방향을 지정함\n"
          },
          "gravity" : {
            "type" : "string",
            "enum" : [ "Bottom", "center", "center_horizontal", "center_vertical", "clip_horizontal", "clip_vertical", "end", "fill", "fill_horizontal", "fill_vertical", "left", "right", "start", "top" ],
            "description" : "중첩 가능 (bottom|end)\n"
          },
          "text" : {
            "type" : "string",
            "description" : "text 표시\n"
          },
          "textAlignment" : {
            "type" : "string",
            "enum" : [ "center", "gravity", "inherit", "textEnd", "textStart", "viewEnd", "viewStart" ],
            "description" : "text 정렬 지정\n"
          },
          "textStyle" : {
            "type" : "string",
            "enum" : [ "bold", "italic" ],
            "description" : "중첩 가능 (bold|italic)\n"
          },
          "textColor" : {
            "type" : "string",
            "description" : "문자의 색상 지정\\\n예) #ffffff\n"
          },
          "textSize" : {
            "type" : "string",
            "description" : "text 크기 지정\\\n예) \"10dp\"\n"
          },
          "mediaUrl" : {
            "type" : "string",
            "description" : "이미지 URL(MaaP file URL 형식)\\\n예) \"maapfile://LT-GG000F-ziWA\"\n"
          },
          "mediaContentType" : {
            "type" : "string",
            "description" : "mime-type\\\n예) \"image/jpeg\"\n"
          },
          "mediaSize" : {
            "type" : "integer",
            "description" : "미디어의 사이즈\\\n예) 56780\n"
          },
          "scaleType" : {
            "type" : "string",
            "enum" : [ "center", "centerCrop", "centerInside", "fitCenter", "fitFnd", "fitStart", "fitXY", "matrix" ]
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Widget"
            },
            "description" : "widget이 LinearLayout인 경우 수직/수평으로 나열될 하위 widget을 포함\n"
          }
        }
      },
      "Messagebase" : {
        "description" : "Messagebase 기본 정보입니다.",
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "description" : "템플릿이 대량등록된 경우 그룹ID 입니다."
          },
          "messagebaseId" : {
            "description" : "템플릿 ID",
            "type" : "string",
            "maximum" : 40
          },
          "tmpltName" : {
            "description" : "템플릿 등록시 입력된 템플릿 명칭입니다.",
            "type" : "string",
            "maximum" : 40
          },
          "messagebaseformId" : {
            "description" : "템플릿의 원형인 템플릿 양식 ID 입니다.",
            "type" : "string",
            "maximum" : 40
          },
          "brandId" : {
            "description" : "템플릿이 등록되어 있는 브랜드 ID 입니다.<br> 공통으로 사용하는 템플릿인 경우 'common'으로 표시됩니다.\n",
            "type" : "string",
            "enum" : [ "common" ]
          },
          "status" : {
            "type" : "string",
            "description" : "템플릿의 상태를 표시합니다.<br> ready : 사용 <br> pause : 사용중지\n",
            "enum" : [ "ready", "pause" ]
          },
          "approvalResult" : {
            "type" : "string",
            "description" : "승인 상태",
            "enum" : [ "승인대기", "승인", "반려", "검수완료", "저장" ]
          },
          "approvalReason" : {
            "type" : "string",
            "maximum" : 200,
            "description" : "승인 사유"
          },
          "registerDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "템플릿 등록일시"
          },
          "approvalDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "템플릿 승인일시"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "템플릿 수정일시"
          },
          "registerId" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "템플릿 등록 계정 ID"
          },
          "updateId" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "템플릿 수정 계정 ID"
          }
        }
      },
      "MessagebaseInfo" : {
        "description" : "Messagebase 객체입니다.\n",
        "type" : "object",
        "required" : [ "messagebaseId", "messagebaseformId", "brandId", "productCode", "type" ],
        "allOf" : [ {
          "$ref" : "#/components/schemas/Messagebase"
        } ],
        "properties" : {
          "productCode" : {
            "type" : "string",
            "description" : "메시지 상품종류 구분값입니다.",
            "enum" : [ "sms", "lms", "mms", "tmplt" ]
          },
          "spec" : {
            "type" : "string",
            "description" : "템플릿의 레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.\n",
            "enum" : [ "richcard", "openrichcard" ]
          },
          "cardType" : {
            "type" : "string",
            "maximum" : 64,
            "description" : "카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [richcard]<br> - standalone<br> - standalone horizontal<br> - standalone media top - carousel<br> - carousel medium<br> - carousel small<br> [openrichcard]<br> - Description<br> - Cell<br> - Free<br>\n"
          },
          "agencyId" : {
            "description" : "템플릿을 등록한 대행사ID 입니다.",
            "type" : "string",
            "maximum" : 20
          },
          "inputText" : {
            "description" : "Description인 경우, 템플릿 등록시 입력한 원본 문장을 제공합니다.",
            "type" : "string",
            "maximum" : 300
          },
          "attribute" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "maximum" : 256,
            "description" : "통계용 속성 정보 제공 목적의 필드이며, messagebaseform의  [bizCondition, bizCategory, bizService] 로 구성된 배열입니다.\n"
          },
          "guideInfo" : {
            "$ref" : "#/components/schemas/GuideInfo"
          },
          "policyInfo" : {
            "$ref" : "#/components/schemas/PolicyInfo"
          },
          "params" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParamInfo"
            }
          },
          "formattedString" : {
            "type" : "object",
            "description" : "TTA RCS 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.\n"
          }
        }
      },
      "MessagebaseForm" : {
        "description" : "MessagebaseForm 기본 정보입니다.",
        "type" : "object",
        "required" : [ "messagebaseformId", "formName" ],
        "properties" : {
          "messagebaseformId" : {
            "description" : "템플릿 양식 ID",
            "type" : "string",
            "maximum" : 40
          },
          "formName" : {
            "description" : "양식명",
            "type" : "string",
            "maximum" : 40
          },
          "cardType" : {
            "type" : "string",
            "maximum" : 64,
            "description" : "카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [richcard]<br> - standalone<br> - standalone horizontal<br> - standalone media top - carousel<br> - carousel medium<br> - carousel small<br> [openrichcard]<br> - Description<br> - Cell<br> - Free<br>\n"
          },
          "bizCondition" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "양식을 사용할 수 있는 대상 업태의 목록입니다.\n"
          },
          "bizCategory" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "유형그룹(Description/Cell인경우만)<br> 예)일반<br> 금융<br> 유통/커머스<br> 교통<br> 엔터테인먼트<br> IT서비스<br> 공공<br>\n"
          },
          "bizService" : {
            "type" : "string",
            "maximum" : 20,
            "description" : "유형<br> 예)승인<br> 입금<br> 출금<br> 출고<br> 주문<br> 배송<br> 예약<br> 회원가입<br> 인증<br>\n"
          },
          "registerDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "템플릿 양식 등록일시"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-03-12T06:22:55.418+09",
            "description" : "템플릿 양식 수정일시"
          }
        }
      },
      "MessagebaseFormInfo" : {
        "description" : "템플릿 생성을 위한 양식 정보 객체입니다.\n",
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MessagebaseForm"
        } ],
        "properties" : {
          "mediaUrl" : {
            "$ref" : "#/components/schemas/MediaUrl"
          },
          "productCode" : {
            "type" : "string",
            "description" : "메시지 상품종류 구분값입니다.",
            "enum" : [ "sms", "lms", "mms", "tmplt" ]
          },
          "spec" : {
            "type" : "string",
            "description" : "양식의 레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.\n",
            "enum" : [ "richcard", "openrichcard" ]
          },
          "guideInfo" : {
            "$ref" : "#/components/schemas/GuideInfo"
          },
          "policyInfo" : {
            "$ref" : "#/components/schemas/PolicyInfo"
          },
          "params" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParamInfo"
            }
          },
          "formattedString" : {
            "type" : "object",
            "description" : "TTA RCS 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.\n"
          }
        }
      },
      "NotiContract" : {
        "type" : "object",
        "required" : [ "notiType" ],
        "properties" : {
          "notiType" : {
            "type" : "string"
          },
          "corpId" : {
            "type" : "string"
          },
          "corpRegNum" : {
            "type" : "string"
          },
          "brandId" : {
            "type" : "string"
          },
          "method" : {
            "description" : "대상별 처리 정보를 제공합니다. 'rejected': 반려 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>\n",
            "type" : "string",
            "enum" : [ "rejected", "created", "modified", "deleted" ]
          },
          "reason" : {
            "description" : "\"method가 rejected 인 경우 사유를 제공합니다.\"\n",
            "type" : "string"
          }
        }
      },
      "NotiChatbot" : {
        "type" : "object",
        "required" : [ "notiType" ],
        "properties" : {
          "notiType" : {
            "type" : "string"
          },
          "brandId" : {
            "type" : "string"
          },
          "chatbotId" : {
            "type" : "string"
          },
          "method" : {
            "description" : "대상별 처리 정보를 제공합니다. 'rejected': 반려 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>\n",
            "type" : "string",
            "enum" : [ "rejected", "created", "modified", "deleted" ]
          },
          "reason" : {
            "description" : "\"method가 rejected 인 경우 사유를 제공합니다.\"\n",
            "type" : "string"
          }
        }
      },
      "NotiMessagebaseForm" : {
        "type" : "object",
        "required" : [ "notiType" ],
        "properties" : {
          "notiType" : {
            "type" : "string"
          },
          "messagebaseformId" : {
            "type" : "string"
          },
          "method" : {
            "description" : "대상별 처리 정보를 제공합니다. 'rejected': 반려 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>\n",
            "type" : "string",
            "enum" : [ "rejected", "created", "modified", "deleted" ]
          },
          "reason" : {
            "description" : "\"method가 rejected 인 경우 사유를 제공합니다.\"\n",
            "type" : "string"
          }
        }
      },
      "NotiTemplate" : {
        "type" : "object",
        "required" : [ "notiType" ],
        "properties" : {
          "notiType" : {
            "type" : "string"
          },
          "brandId" : {
            "type" : "string"
          },
          "messagebaseformId" : {
            "type" : "string"
          },
          "messagebaseId" : {
            "type" : "string"
          },
          "method" : {
            "description" : "대상별 처리 정보를 제공합니다. 'rejected': 반려 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>\n",
            "type" : "string",
            "enum" : [ "rejected", "created", "modified", "deleted" ]
          },
          "reason" : {
            "description" : "\"method가 rejected 인 경우 사유를 제공합니다.\"\n",
            "type" : "string"
          }
        }
      },
      "NotiFormat" : {
        "type" : "object",
        "required" : [ "notiType" ],
        "properties" : {
          "notiType" : {
            "type" : "string"
          },
          "messagebaseformId" : {
            "type" : "string"
          },
          "messagebaseId" : {
            "type" : "string"
          },
          "method" : {
            "description" : "대상별 처리 정보를 제공합니다. 'rejected': 반려 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>\n",
            "type" : "string",
            "enum" : [ "rejected", "created", "modified", "deleted" ]
          },
          "reason" : {
            "description" : "\"method가 rejected 인 경우 사유를 제공합니다.\"\n",
            "type" : "string"
          }
        }
      },
      "MediaUrl" : {
        "type" : "array",
        "description" : "이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.\n",
        "items" : {
          "type" : "object",
          "properties" : {
            "fileId" : {
              "type" : "string"
            },
            "url" : {
              "type" : "string"
            },
            "typeName" : {
              "description" : "이미지의 사용 유형 구분 icon - 유형 이미지 profile - 브랜드 프로필 이미지 background - 브랜드 백그라운드 이미지\n",
              "type" : "string",
              "enum" : [ "icon", "profile", "background" ]
            }
          }
        }
      }
    }
  }
}