openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/benedict35/api-config/2.0.0
info:
  description: This is a configuration store API
  version: "2.0.0"
  title: Config API
tags:
  - name: menu
    description: menu items
  - name: project
    description: third-party project info
paths:
  /menu:
    get:
      tags:
        - menu
      summary: all menus
      operationId: allMenus
      description: |
        Get all menus
      parameters:
        - name: group
          in: query
          description: filter by group
          schema:
            type: string
            example: country
        - name: projectCode
          in: query
          description: filter by projectCode
          schema:
            type: string
            example: P21
        - name: parentId
          in: query
          description: filter by parentId
          schema:
            type: integer
            example: 2
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          description: all project menu items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
    post:
      tags:
        - menu
      summary: create menu
      operationId: createMenu
      description: |
        Create new menu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - group
                - position
              properties:
                name:
                  type: string
                  example: GDP
                group:
                  type: string
                  example: country
                position:
                  type: integer
                  example: 4
                parentId:
                  type: integer
                  example: 10
                projectCode:
                  type: string
                  example: P20
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '400':
          $ref: '#/components/responses/400Error'
  /menu/{id}:
    get:
      tags:
        - menu
      summary: menu by id
      operationId: getMenuById
      description: |
        Get menu by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Menu'
        '404':
          $ref: '#/components/responses/404Error'
    delete:
      tags:
        - menu
      summary: delete menu by id
      operationId: deleteMenuById
      description: |
        Delete menu by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Menu'
        '404':
          $ref: '#/components/responses/404Error'
    put:
      tags:
        - menu
      summary: update menu by id
      operationId: updateMenuById
      description: |
        Update menu by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: GDP
                group:
                  type: string
                  example: country
                position:
                  type: integer
                  example: 4
                parentId:
                  type: integer
                  example: 10
                projectCode:
                  type: string
                  example: P20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Menu'
        '404':
          $ref: '#/components/responses/404Error'
        '400':
          $ref: '#/components/responses/400Error'
  /project:
    get:
      tags:
        - project
      summary: all projects
      operationId: allProjects
      description: |
        Get all projects
      parameters:
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
        - project
      summary: create project
      operationId: createProject
      description: |
        Create new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400Error'
  /project/{code}:
    get:
      tags:
        - project
      summary: project by code
      operationId: getProjectByCode
      description: |
        Get project by code
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/404Error'
    delete:
      tags:
        - project
      summary: delete project by code
      operationId: deleteProjectByCode
      description: |
        Delete project by code
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/404Error'
    put:
      tags:
        - project
      summary: update project by code
      operationId: updateProjectByCode
      description: |
        Update project by code
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: string
                  example: indicator
                shareCode:
                  type: string
                  example: https://infogram.com/project/hghgj
                numberOfPages:
                  type: integer
                  example: 4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/404Error'
        '400':
          $ref: '#/components/responses/400Error'
components:
  schemas:
    Menu:
      type: object
      required:
        - name
        - group
        - position
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Existence of Policies on Blue Economy
        parentId:
          type: integer
          example: 10
        group:
          type: string
          example: indicators
        projectCode:
          type: string
          example: P20
        position:
          type: integer
          example: 2
        shareCode:
          type: string
          example: https://infogram.com/project/1
    Project:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: P21
        tags:
          type: string
          example: country
        shareCode:
          type: string
          example: https://infogram.com/project/hghgj
        numberOfPages:
          type: integer
          example: 4
    Error:
      type: object
      properties:
        code:
          type: string
          example: NotFound
        message:
          type: string
          example: project with code P21 was not found
      required:
        - code
        - message
  
  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page (deault 100)
      schema:
        type: integer
        example: 100
      
    PageOffset:
      name: offset
      in: query
      description: Specifies the page number of the items to be displayed (default 1)
      schema:
        type: integer
        example: 1

  responses:
    404Error:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    400Error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    5xxError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
