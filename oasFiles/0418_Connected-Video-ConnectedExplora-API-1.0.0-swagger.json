{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Mocking Connected Explora",
    "url" : "https://virtserver.swaggerhub.com/Connected-Video/ConnectedExplora-API/1.0.0"
  } ],
  "info" : {
    "description" : "This is a mock connected explora API for the Content Discovery project",
    "version" : "1.0.0",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "CV-CD Connected  Explora API",
    "termsOfService" : "https://virtserver.swaggerhub.com/Connected-Video/ConnectedExplora-API/1.0.0"
  },
  "tags" : [ {
    "name" : "CV-CD Connected Explora personalized lists",
    "description" : "These are the connected explora request URLs for users"
  } ],
  "paths" : {
    "/recommendations/explora" : {
      "get" : {
        "tags" : [ "Connected Explora personalized lists" ],
        "summary" : "Get user recommendations list",
        "description" : "The personalization list will be returned on the explora\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "listIds",
          "description" : "IDs of the lists required.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "userId",
          "description" : "This should be the user's smartcard for the explora.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "country",
          "description" : "Country where the subscription is based.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "itemCount",
          "description" : "Maximum number of items to be returned per list.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "fallback",
          "description" : "What should happen when the list is not found.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of catalogue items for the user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CatalogueItem"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User was not found"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:464242368923:function:cv-cd-connected-explora-mock-lambda-dev/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "GET",
          "type" : "aws_proxy",
          "credentials" : "arn:aws:iam::464242368923:role/pi_lambda_basic_execution"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CatalogueItem" : {
        "type" : "object",
        "required" : [ "itemId" ],
        "properties" : {
          "lists" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "1"
                },
                "title" : {
                  "type" : "object",
                  "properties" : {
                    "eng" : {
                      "type" : "string",
                      "example" : "for you"
                    },
                    "por" : {
                      "type" : "string",
                      "example" : "vir jou"
                    }
                  }
                },
                "content" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "example" : "genref"
                      },
                      "id" : {
                        "type" : "string",
                        "example" : "1234567890"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}