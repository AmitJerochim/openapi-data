{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "1.0.0",
    "title" : "Swagger Petstore",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/VictorFA/clientes_19_ubeam/1.0.0"
  }, {
    "url" : "https://petstore.swagger.io/v2"
  } ],
  "tags" : [ {
    "name" : "cliente",
    "description" : "Everything about your Pets",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/cliente" : {
      "post" : {
        "tags" : [ "cliente" ],
        "summary" : "Add a new pet to the store",
        "operationId" : "addPet",
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/cliente"
        }
      },
      "put" : {
        "tags" : [ "cliente" ],
        "summary" : "Update an existing pet",
        "operationId" : "updatePet",
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Pet not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/cliente"
        }
      }
    },
    "/cliente/findByStatus" : {
      "get" : {
        "tags" : [ "cliente" ],
        "summary" : "Finds Pets by status",
        "description" : "Multiple status values can be provided with comma separated strings",
        "operationId" : "findPetsByStatus",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values that need to be considered for filter",
          "required" : true,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "available", "pending", "sold" ],
              "default" : "available"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/cliente"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/cliente"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ]
      }
    },
    "/cliente/findByTags" : {
      "get" : {
        "tags" : [ "cliente" ],
        "summary" : "Finds Pets by tags",
        "description" : "Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.",
        "operationId" : "findPetsByTags",
        "parameters" : [ {
          "name" : "tags",
          "in" : "query",
          "description" : "Tags to filter by",
          "required" : true,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/cliente"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/cliente"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid tag value"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ],
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "cliente" ],
        "summary" : "Updates a pet in the store with form data",
        "operationId" : "updatePetWithForm",
        "parameters" : [ {
          "name" : "clienteId",
          "in" : "path",
          "description" : "ID of pet that needs to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "description" : "Updated name of the pet",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Updated status of the pet",
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "cliente" ],
        "summary" : "Deletes a pet",
        "operationId" : "deletePet",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clienteId",
          "in" : "path",
          "description" : "Pet id to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Pet not found"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ]
      }
    },
    "/cliente/{clienteId}/uploadImage" : {
      "post" : {
        "tags" : [ "cliente" ],
        "summary" : "uploads an image",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "clienteId",
          "in" : "path",
          "description" : "ID of pet to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cliente"
                }
              }
            }
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:clientes", "read:clientes" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "schemas" : {
      "cliente" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "petId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shipDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Order Status",
            "enum" : [ "placed", "approved", "delivered" ]
          },
          "complete" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "Order"
        }
      }
    },
    "requestBodies" : {
      "cliente" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/cliente"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/cliente"
            }
          }
        },
        "description" : "Pet object that needs to be added to the store",
        "required" : true
      }
    },
    "securitySchemes" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
            "scopes" : {
              "write:clientes" : "modify pets in your account",
              "read:clientes" : "read your pets"
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}