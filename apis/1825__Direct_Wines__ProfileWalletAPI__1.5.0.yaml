openapi: 3.0.2
info:
  title: 'Profile Wallet API'
  version: "1.5.0"
  description: >
     This API provides a set of methods to allow a customer to maintain a list of credit cards in an online 'wallet'.
     
     
     The 'wallet' is an optional feature,  but where used it provides a common location to manage payments.
     That then makes it easier for the customer to order and enjoy delicious wines whether that be:-
     
     
     *  Using the card in the website express checkout
     
     
     *  Managing the way they pay for thie regular wineplan
     
     
     *  Any other service that the custome uses or subscribes to.
     
     
  contact:
    email: apisupport@directwines.com
tags:
  - name: Profile Wallet API
servers:
# Added by API Auto Mocking Plugin
  - url: https://virtserver.swaggerhub.com/Direct_Wines/ProfileWalletAPI/1.5.0
    description: SwaggerHub API Auto Mocking
  - url: /api
    description: This website

# =========================================================================================
#  API methods start here
# =========================================================================================  
paths:
# --------------------------------------------------------------------------------------                 
  /user/payment:
    put:
      tags:
        - Profile Wallet API
      summary: Add a card to the customers wallet
      description: ''
      operationId: addCardToWallet
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: >-
                  https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.2.0#/components/schemas/ApiResponse
        '422':
          description: An unexpected validation or processing error occured whilse calling this method. 
          content: 
            application/json:
              schema:
                 $ref: 'https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.2.0#/components/schemas/CommonResponseHeader'
                  
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://api.swaggerhub.com/apis/Direct_Wines/PaymentAPISuite/1.4.0#/components/schemas/CreditCardDetails'
        description: >-
          Input parameter which holds credit card information to be added to
          profile
        required: true
      parameters:
        - in: query
          name: options
          description: |
             Supply an optional set of usage options for this card.
             
             If none are supplied,  then the card will simply be saved to the wallet.
             
             A client apply usage options later by using the options API
          style: form
          explode: true
          schema:
              $ref: '#/components/schemas/CreditCardUsageOptions'            

# --------------------------------------------------------------------------------------                 
  /user/payment/{cardId}/options:
    post:
      tags:
        - Profile Wallet API
      summary: Apply an option to an existing card in the credit card wallet
      description: |
         This API allows a customer to specify how a card in their wallet should be used.  The full list of options is described below,  but the most common options that can be selected are:-
         * It can be set as the default code to be used on future sales orders.
         * It can be applied to an existing subscription as the 'card on file' for any future payments on that subscription.
         
         Multiple options can be selected.  Where that is the case the union of all the selected options will be applied
      operationId: applyOptionToCardInWallet
      parameters:
        - name: cardId
          in: path
          description: The id of a valid credit card wallet entry which this method is to act upon. 
          required: true
          schema:
            type: string
            pattern: .*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardUsageOptions'            
        description: >-
          A list of options whch specify how this card may be used
        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletOptionUpdatesResponse'
        '422':
          description: An unexpected validation or processing error occured whilse calling this method. 
          content: 
            application/json:
              schema:
                 $ref: 'https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.2.0#/components/schemas/CommonResponseHeader'

# --------------------------------------------------------------------------------------                 
  '/user/payment/{cardId}':
    delete:
      tags:
        - Profile Wallet API
      summary: Remove a card from the customers wallet
      description: ''
      operationId: removeCardFromWallet
      parameters:
        - name: cardId
          in: path
          description: The id of the entry in the customer's wallet which is to be deleted 
          required: true
          schema:
            type: string
            pattern: .*
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: >-
                  https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.0.0#/components/schemas/ApiResponse
        '422':
          description: An unexpected validation or processing error occured whilse calling this method. 
          content: 
            application/json:
              schema:
                 $ref: 'https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.2.0#/components/schemas/CommonResponseHeader'
                  
components:
  schemas:
#
#  REQUEST Objects
#  ========================================================================       
    CreditCardUsageOptions:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/WalletOption'   
          example: [DEFAULT_CARD, APPLY_TO_ALL_PLANS]
      

    WalletOption:
      type: string
      enum:
       - DEFAULT_CARD
       - APPLY_TO_ALL_PLANS
       - APPLY_TO_WINEPLAN_SUBSCRIPTIONS
       - APPLY_TO_GENERAL_SUBSCRIPTIONS
       - APPLY_TO_WINEREWARD_SUBSCRIPTIONS
       - APPLY_TO_STORAGE_SUBSCRIPTIONS
      description: |
       * 'DEFAULT_CARD'  - This option states that the card should be set as the default card in the wallet.  The default card is used in the express checkout on the website to make it quicker for a customer to process an order.
       * 'APPLY_TO_ALL_PLANS'  - This option states that the card should be applied as the a 'card on file' to be used on all future orders for any plan. 
       * 'APPLY_TO_WINEPLAN_SUBSCRIPTIONS'  - This option states that the card should be applied as the a 'card on file' to be used on any active wineplan subscription. 
       * 'APPLY_TO_GENERAL_SUBSCRIPTIONS'  - This option states that the card should be applied as the a 'card on file' to be used on any active subscription to an 'Unlimited Shipping plan OR a Free bottle subscription such as 'Premier Charter Plus'.  
       * 'APPLY_TO_WINEREWARD_SUBSCRIPTIONS'  - This option states that the card should be applied as the a 'card on file' to be used on any active wine reward subscription. 
       * 'APPLY_TO_STORAGE_SUBSCRIPTIONS'  - This option states that the card should be applied as the a 'card on file' to be used on any active storage subscription. 


#
#  RESPONSE Objects
#  ========================================================================            
    WalletOptionUpdatesResponse:
      allOf:
        - $ref: 'https://api.swaggerhub.com/apis/Direct_Wines/CommonAPIModelsSuite/1.2.0#/components/schemas/ApiResponse'
        - type: object
          properties:
            response:
              $ref: '#/components/schemas/WalletOptionUpdatesDetail'        
              
    WalletOptionUpdatesDetail:
      type: object
      properties:
        numResults:
          type: "integer"
          description: The number of results that occured after processing the requested set of actions
          example: 4
        actionResults:
          type: array
          items:
            $ref: '#/components/schemas/CardActionResult'
          example:
          - type: DEFAULT_CARD
          - type: WINEPLAN_PAYMENT_UPDATE
            targetIdentifier: sub4401000
            note: 'Seasons Wineplan'  
          - type: WINEPLAN_PAYMENT_UPDATE
            targetIdentifier: sub331000
            note: 'Taste of Australia Wineplan'    
          - type: WINEREWARD_PAYMENT_UPDATE
            targetIdentifier: sub5504780
    CardActionResult:
      type: object
      properties:  
        type:
          type: string
          enum:
          - DEFAULT_CARD
          - WINEPLAN_PAYMENT_UPDATE
          - STORAGE_PAYMENT_UPDATE
          - WINEREWARD_PAYMENT_UPDATE
          - GENERALSUBSCRIPTION_PAYMENT_UPDATE
          - OTHER
        cardIdentifier:
          type: string
          description: |
            This identifies the 'target' of the action.
            It is not strongly typed as its only purpose is to provide contextual information to a caller.
            The most typical use case would be to enable a UI to provide information to a human user about the results of a wallet update
            
            
            e.g  Most typically this would contain the id of the card wallet entry being updated.
            However supplying a token-id would equally be reasonable.
        targetIdentifier:
          type: string
          description: >
            This identifies the 'target' of the action.
            It is not strongly typed as its only purpose is to provide contextual information to a caller.
            The most typical use case would be to enable a UI to provide information to a human user about the results of a wallet update
            
            
            e.g  For updates against subscriptions,  this would typically contain  might be a 'subscription id'
            which has been updated as the result of processing the card.
        comment:
          type: string
      required:
        - type
