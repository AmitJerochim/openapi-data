{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Qvaleio/user-mgmt-apis/1.0.0"
  } ],
  "info" : {
    "version" : "1.0.0",
    "title" : "Qvale IO User Management APIs",
    "description" : "Qvale User Management APIs",
    "contact" : {
      "email" : "nitin@qvale.io"
    }
  },
  "paths" : {
    "/users" : {
      "post" : {
        "summary" : "Register New User",
        "description" : "This operation is to be used to register/onboard a new user onto Qvale platform.",
        "operationId" : "register-user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "email" : {
                    "title" : "Email Address",
                    "type" : "string",
                    "format" : "email",
                    "example" : "adam.smith@gmail.com",
                    "pattern" : "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
                    "maximum" : 50
                  },
                  "password" : {
                    "title" : "Password",
                    "type" : "string",
                    "format" : "password",
                    "example" : "p@$$word"
                  },
                  "profile" : {
                    "allOf" : [ {
                      "$ref" : "#/components/schemas/User"
                    } ]
                  },
                  "device" : {
                    "$ref" : "#/components/schemas/Device"
                  },
                  "location" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              },
              "examples" : {
                "schema" : {
                  "summary" : "Basic Request",
                  "value" : {
                    "email" : "adam.smith@hotmail.com",
                    "password" : "p@$$word",
                    "device" : {
                      "type" : "I",
                      "uniqueId" : "00000000-000000000000000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Operation success",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Activation link has been sent to your email",
                  "data" : {
                    "accessToken" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "profile" : {
                      "id" : "user-id-1",
                      "email" : "adam.smith@hotmail.com",
                      "status" : "INACTIVE"
                    }
                  }
                },
                "schema" : {
                  "properties" : {
                    "message" : {
                      "title" : "Status Message",
                      "type" : "string",
                      "format" : "string",
                      "example" : "Activation email has been sent to your email address"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login" : {
      "post" : {
        "summary" : "User Login via Email/Password",
        "description" : "This operation/endpoint allows user to login into the system and creates a user session.",
        "operationId" : "user-login",
        "parameters" : [ {
          "in" : "header",
          "name" : "Authorization",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "Basic be7a35aa41b33f93ee98658083b319944cae2e8d52e143ee"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "email", "password" ],
                "properties" : {
                  "email" : {
                    "title" : "Email Address",
                    "type" : "string",
                    "format" : "email",
                    "example" : "adam.smith@gmail.com",
                    "pattern" : "^(\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*)$",
                    "maximum" : 50
                  },
                  "password" : {
                    "title" : "Password",
                    "type" : "string",
                    "format" : "password",
                    "example" : "p@$$word"
                  }
                }
              },
              "examples" : {
                "schema" : {
                  "summary" : "Basic Request",
                  "value" : {
                    "email" : "adam.smith@hotmail.com",
                    "password" : "p@$$word",
                    "device" : {
                      "type" : "I",
                      "uniqueId" : "00000000-000000000000000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Login Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "accessToken" : {
                          "title" : "Access Token",
                          "type" : "string",
                          "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "message" : "Login Success",
                  "data" : {
                    "accessToken" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "profile" : {
                      "id" : "user-id-1",
                      "email" : "adam.smith@hotmail.com",
                      "status" : "INACTIVE"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/socialLogin" : {
      "post" : {
        "summary" : "Social Login",
        "description" : "This endpoint is to be used to login user using his/her social account like Gmail, Facebook, etc. ",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "accessToken" : {
                    "type" : "string",
                    "example" : "Third-party-access-token"
                  }
                }
              },
              "examples" : {
                "socialLogin" : {
                  "value" : {
                    "email" : "adam.smith@hotmail.com",
                    "providerToken" : {
                      "accessToken" : "Social-Provider-Access-Token",
                      "userId" : "UserId-From-Social-Provider",
                      "appId" : "App-id"
                    },
                    "provider" : "F"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "accessToken" : {
                          "title" : "Access Token",
                          "type" : "string",
                          "example" : "MTQ0NjOkZmQ5OTM5NDE9ZTZjNGZmZjI3"
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "message" : "Login Success",
                  "data" : {
                    "accessToken" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "profile" : {
                      "id" : "user-id-1",
                      "email" : "adam.smith@hotmail.com",
                      "status" : "ACTIVE"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout" : {
      "parameters" : [ {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "summary" : "User Logout",
        "description" : "Invalidates the user session",
        "operationId" : "user-logout",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GeneralResponse"
          }
        }
      }
    },
    "/users/{userId}/profile" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "summary" : "Get User Profile",
        "description" : "This operation is used to get profile data for a user account. ",
        "operationId" : "get-user-profile",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/User"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update User Profile",
        "description" : "This operation is used to update profile data for a user account.",
        "operationId" : "update-user-profile",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/User"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/User"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/addresses" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "summary" : "Add a new address for a user",
        "description" : "This operation allows user to add a new address.",
        "operationId" : "add-user-address",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Address"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "addresses" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Address"
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "summary" : "Get user's address list",
        "description" : "This operation returns all the addresses for a user account.",
        "operationId" : "get-user-address-list",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "addresses" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Address"
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/addresses/{addressId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "description" : ""
      }, {
        "in" : "path",
        "name" : "addressId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "description" : ""
      }, {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "summary" : "Get user's address details",
        "description" : "This operation is used to get an address detail for a user.",
        "operationId" : "get-user-address",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Address"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update user's address",
        "description" : "This operation is used to update an address for a user.",
        "operationId" : "update-user-address",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Address"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete user's address",
        "description" : "This operation is used to delete an address for a user.",
        "operationId" : "delete-user-address",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/users/password" : {
      "post" : {
        "summary" : "Forgot/Reset Password",
        "description" : "This operation is used to reset user password in case user forgot his/her password.",
        "operationId" : "reset-password",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "preference" ],
                "properties" : {
                  "email" : {
                    "title" : "Email Address",
                    "type" : "string",
                    "format" : "email",
                    "example" : "adam.smith@gmail.com",
                    "pattern" : "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
                    "maximum" : 50
                  },
                  "preference" : {
                    "title" : "Reset Password Preference",
                    "type" : "string",
                    "format" : "enum",
                    "enum" : [ "EMAIL", "MOBILE" ],
                    "example" : "SMS",
                    "default" : "SMS"
                  },
                  "mobile" : {
                    "title" : "Mobile Number",
                    "type" : "string",
                    "example" : "916-799-9528"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/password" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "description" : ""
      }, {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "put" : {
        "summary" : "Change/Update Password",
        "description" : "This operation is to allow user ",
        "operationId" : "update-password",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "current" : {
                    "title" : "Password",
                    "type" : "string",
                    "format" : "password",
                    "example" : "p@$$word"
                  },
                  "new" : {
                    "title" : "Password",
                    "type" : "string",
                    "format" : "password",
                    "example" : "p@$$word"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/cart" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "description" : ""
      }, {
        "in" : "query",
        "name" : "access_token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "summary" : "Add items to cart",
        "description" : "This operation will be used to add items to cart.",
        "operationId" : "create-user-cart",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Item"
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Item"
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "summary" : "Get user's cart details",
        "description" : "This operation will be used to get cart details.",
        "operationId" : "get-user-cart",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Item"
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update user's cart",
        "description" : "This operation will be used to add/delete items from the existing cart.",
        "operationId" : "update-user-cart",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Item"
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ],
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Item"
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete user's cart",
        "description" : "This operation will be used to delete all items from the existing cart.",
        "operationId" : "delete-user-cart",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/deactivate" : {
      "post" : {
        "summary" : "Deactivate User Account",
        "description" : "This operation is used to deactivate user account.",
        "operationId" : "deactivate-user-account",
        "security" : [ {
          "oauth2" : [ "user_access" ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "reason" ],
                "properties" : {
                  "reason" : {
                    "title" : "Reason for Deactivation",
                    "type" : "string",
                    "format" : "string",
                    "minimum" : 5,
                    "maximum" : 50,
                    "example" : "Reason for Deactivation"
                  },
                  "feedback" : {
                    "title" : "Feedback",
                    "type" : "string",
                    "format" : "string",
                    "maximum" : 50,
                    "example" : "User Feedback"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/BasicResponse"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/guest" : {
      "post" : {
        "summary" : "Create Guest User",
        "description" : "This operation is to be used to create a guest user.",
        "operationId" : "create-guest-user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Guest"
                } ],
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "allOf" : [ {
                      "$ref" : "#/components/schemas/Address"
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GeneralResponse"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AppInfo" : {
        "properties" : {
          "clientId" : {
            "title" : "Client Id",
            "type" : "string"
          },
          "clientSecret" : {
            "title" : "Client Secret",
            "type" : "string"
          }
        }
      },
      "Guest" : {
        "properties" : {
          "firstName" : {
            "title" : "First Name",
            "type" : "string",
            "example" : "Adam",
            "minimum" : 3,
            "maximum" : 50
          },
          "middleName" : {
            "title" : "Middle Name",
            "type" : "string",
            "minimum" : 3,
            "maximum" : 50
          },
          "lastName" : {
            "title" : "Last Name",
            "type" : "string",
            "example" : "Smith",
            "minimum" : 3,
            "maximum" : 50
          },
          "email" : {
            "title" : "Email Address",
            "type" : "string",
            "format" : "email",
            "example" : "adam.smith@gmail.com",
            "pattern" : "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "maximum" : 50
          },
          "mobile" : {
            "title" : "Mobile Number",
            "type" : "string",
            "example" : "916-799-9528"
          }
        }
      },
      "User" : {
        "type" : "object",
        "required" : [ "email" ],
        "allOf" : [ {
          "$ref" : "#/components/schemas/Guest"
        } ],
        "properties" : {
          "id" : {
            "title" : "User Id",
            "description" : "Unique Id to identify a user",
            "type" : "string",
            "format" : "string",
            "example" : 1
          },
          "dob" : {
            "title" : "Date of birth",
            "description" : "ISO 8601 date (YYYY-MM-DD)",
            "type" : "string",
            "format" : "date",
            "example" : "1985-04-12"
          },
          "existingType" : {
            "title" : "User Login Type",
            "type" : "string",
            "maximum" : 1,
            "enum" : [ "G", "E", "F", "A" ],
            "description" : "Registration type, E-Email / G-Gmail/ F-Facebook",
            "example" : "E"
          },
          "registerType" : {
            "title" : "Registration Type",
            "type" : "string",
            "maximum" : 1,
            "enum" : [ "G", "E", "F", "A" ],
            "description" : "Registration type, E-Email / G-Gmail/ F-Facebook",
            "example" : "E"
          },
          "status" : {
            "title" : "Account Status",
            "type" : "string",
            "format" : "enum",
            "enum" : [ "INACTIVE", "ACTIVE", "EXPIRED", "LOCKED", "SUSPENDED", "DECACTIVATED" ],
            "example" : "ACTIVE"
          },
          "maritalStatus" : {
            "title" : "Marital Status",
            "type" : "string",
            "format" : "enum",
            "enum" : [ "S", "M" ],
            "description" : "Marital status, S-Single / M-Married",
            "example" : "S"
          },
          "annivDate" : {
            "title" : "Wedding Anniversary Date",
            "description" : "ISO 8601 date (YYYY-MM-DD)",
            "type" : "string",
            "format" : "date",
            "example" : "2012-04-25"
          },
          "addresses" : {
            "title" : "Address List",
            "type" : "array",
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Address"
              } ]
            }
          },
          "preferences" : {
            "title" : "User Preferences",
            "type" : "object",
            "properties" : {
              "2fa" : {
                "type" : "object",
                "properties" : {
                  "enabled" : {
                    "title" : "Two factor authentication",
                    "type" : "boolean",
                    "example" : "true/false"
                  },
                  "type" : {
                    "title" : "type",
                    "type" : "string",
                    "enum" : [ "SMS", "EMAIL", "TOTP" ],
                    "example" : "SMS"
                  },
                  "additionalInfo" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "Device" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "title" : "Device Type (Android or iOS)",
            "type" : "string",
            "enum" : [ "A", "I" ],
            "maximum" : 1,
            "description" : "Device Type, A-Android / I-iOS",
            "example" : "A"
          },
          "uniqueId" : {
            "title" : "Unique Id",
            "type" : "string",
            "description" : "DeviceID - Android, UDID - iOS",
            "example" : "00000000-000000000000000"
          },
          "ipAddress" : {
            "title" : "IP Address of client device",
            "type" : "string",
            "example" : "192.168.1.10"
          },
          "userAgent" : {
            "title" : "User Agent",
            "type" : "string",
            "description" : "User Agent information (for browsers)",
            "example" : "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "position" : {
            "type" : "object",
            "properties" : {
              "lat" : {
                "title" : "Latitude",
                "type" : "number",
                "format" : "float",
                "example" : 38.8951,
                "minimum" : -90,
                "maximum" : 90
              },
              "lon" : {
                "title" : "Longitude",
                "type" : "number",
                "format" : "float",
                "example" : -77.0364,
                "minimum" : -180,
                "maximum" : 180
              }
            }
          }
        }
      },
      "Address" : {
        "type" : "object",
        "required" : [ "addressLine1", "postalCode", "locality", "state", "country" ],
        "properties" : {
          "id" : {
            "title" : "Address Id",
            "description" : "Unique Id to identify a user address",
            "type" : "string",
            "format" : "string",
            "example" : 1
          },
          "label" : {
            "title" : "Label",
            "type" : "string",
            "format" : "string",
            "example" : "Home/Work"
          },
          "addressLine1" : {
            "title" : "Address Line 1",
            "type" : "string",
            "format" : "string",
            "example" : "30 Westminster Drive",
            "minimum" : 5,
            "maximum" : 100
          },
          "addressLine2" : {
            "title" : "Address Line 2",
            "type" : "string",
            "format" : "string",
            "example" : "5th Avenue",
            "maximum" : 100
          },
          "locality" : {
            "title" : "City / Town",
            "type" : "string",
            "format" : "string",
            "example" : "Sacramento",
            "maximum" : 50
          },
          "state" : {
            "title" : "State / Province / Region",
            "type" : "string",
            "format" : "string",
            "example" : "CA",
            "maximum" : 50
          },
          "country" : {
            "title" : "Country",
            "type" : "string",
            "format" : "string",
            "example" : "US"
          },
          "postalCode" : {
            "title" : "Postal Code / Zip Code",
            "type" : "integer",
            "format" : "int32",
            "example" : 95814,
            "minimum" : 5,
            "maximum" : 100
          },
          "status" : {
            "type" : "string",
            "maximum" : 1,
            "enum" : [ "ACTIVE", "INACTIVE" ]
          },
          "location" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Location"
            } ]
          }
        }
      },
      "Product" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "title" : "Product Id",
            "description" : "Unique Id to identify a product",
            "type" : "string",
            "format" : "string",
            "example" : "product123"
          },
          "name" : {
            "title" : "Product Name",
            "description" : "Name for a product",
            "type" : "string",
            "format" : "string",
            "example" : "product123"
          },
          "description" : {
            "title" : "Product Description",
            "description" : "Product Description",
            "type" : "string",
            "format" : "string",
            "example" : "product123 description"
          },
          "picUrl" : {
            "title" : "Product Pic URL",
            "description" : "Product Picture URL",
            "type" : "string",
            "format" : "string",
            "example" : "https://whatever"
          }
        }
      },
      "Item" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "title" : "Item Id",
            "description" : "Unique Id to identify a product item",
            "type" : "string",
            "format" : "string",
            "example" : "test123-location123-product123"
          },
          "vendorId" : {
            "title" : "Vendor Id",
            "description" : "Unique Id to identify a vendor",
            "type" : "string",
            "format" : "string",
            "example" : "vendor123"
          },
          "productId" : {
            "title" : "Product Id",
            "description" : "Unique Id to identify a product",
            "type" : "string",
            "format" : "string",
            "example" : "product123"
          },
          "locationId" : {
            "title" : "Product Id",
            "description" : "Unique Id to identify a product item",
            "type" : "string",
            "format" : "string",
            "example" : "location123"
          },
          "product" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Product"
            } ]
          }
        }
      },
      "BasicResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "title" : "Status Message",
            "type" : "string",
            "format" : "string",
            "example" : "Success"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "title" : "Status Code",
            "type" : "integer",
            "format" : "int32",
            "example" : 123
          },
          "message" : {
            "title" : "Status Message",
            "type" : "string",
            "format" : "string",
            "example" : "Some Error Occurred"
          }
        },
        "required" : [ "code", "message" ]
      },
      "ExtendedError" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Error"
        } ],
        "properties" : {
          "description" : {
            "title" : "Error Description",
            "description" : "Error root cause or description",
            "type" : "string",
            "example" : "More details about the error"
          }
        },
        "required" : [ "code", "message", "description" ]
      },
      "ValidationErrors" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Error"
        } ],
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "properties" : {
                "field" : {
                  "type" : "string",
                  "format" : "string"
                }
              },
              "allOf" : [ {
                "$ref" : "#/components/schemas/Error"
              } ]
            }
          }
        }
      }
    },
    "responses" : {
      "GeneralResponse" : {
        "description" : "Operation success",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BasicResponse"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "description" : "",
        "flows" : {
          "password" : {
            "tokenUrl" : "http://google.com/oauth/token",
            "scopes" : {
              "user_access" : ""
            }
          }
        }
      }
    }
  }
}