openapi: 3.0.0
info:
  version: "1.0-oas3"
  title: ProSight Broker API 1.0
  description: 'Service to provide an interface to brokers.  Image Version: v0.3.0-Dev1'
  contact:
    name: Prosight Specialty API Team
    email: enterpriseservices@prosightspecialty.com
paths:
  /v1/broker/healthcheck:
    get:
      tags:
        - Broker
      summary: Root route provides a ping Health Check API
      description: Used by AWS ECS cluster to confirm service is running
      operationId: HealthCheck
      responses:
        '200':
          description: Success
      x-amazon-apigateway-integration:
        uri: >-
          http://api.prosightspecialty-dev.com/psibroker.api/v1/broker/healthcheck
        responses:
          default:
            statusCode: '200'
        httpMethod: GET
        connectionId: n2algh
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        type: http_proxy
  /v1/broker/getrealtimequote:
    post:
      tags:
        - Broker
      summary: >-
        Processes an ACORD XML request from the request body.  Returns an ACORD
        XML response.
      operationId: GetRealtimeQuote
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AcordResponse'
        '500':
          description: Server Error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AcordResponse'
      x-amazon-apigateway-integration:
        uri: >-
          http://api.prosightspecialty-dev.com/psibroker.api/v1/broker/getrealtimequote
        responses:
          default:
            statusCode: '200'
        httpMethod: POST
        connectionId: n2algh
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        type: http_proxy
  /v1/broker/quote:
    post:
      tags:
        - Broker
      summary: >-
        Processes an Insurance application form to clear account, submisison,
        rate and provide quote.        
      operationId: GetQuoteJson
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreApiRespBroker'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreApiRespBroker'
      x-amazon-apigateway-integration:
        uri: 'http://api.prosightspecialty-dev.com/psibroker.api/v1/broker/quote'
        responses:
          default:
            statusCode: '200'
        httpMethod: POST
        connectionId: n2algh
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        type: http_proxy
  /v1/broker/status:
    get:
      tags:
        - Broker
      summary: >-
        Provides a Quote Status using the message key from the Quote response
        endpoint.        
      operationId: GetTransactionStatus
      parameters:
        - name: brokerMessageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreApiTransactionSummary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreApiTransactionSummary'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreApiTransactionSummary'
      x-amazon-apigateway-integration:
        uri: 'http://api.prosightspecialty-dev.com/psibroker.api/v1/broker/status'
        responses:
          default:
            statusCode: '200'
        httpMethod: GET
        connectionId: n2algh
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        type: http_proxy
servers:
  - url: /psibroker.api
components:
  schemas:
    AcordResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        insuranceSvcRs:
          $ref: '#/components/schemas/InsuranceSvcRs'
    Status:
      type: object
      properties:
        statusCd:
          type: string
        statusDesc:
          type: string
    InsuranceSvcRs:
      type: object
      properties:
        rqUID:
          type: string
        persAutoPolicyQuoteInqRs:
          $ref: '#/components/schemas/PersAutoPolicyQuoteInqRs'
    PersAutoPolicyQuoteInqRs:
      type: object
      properties:
        rqUID:
          type: string
        transactionResponseDt:
          type: string
        transactionEffectiveDt:
          type: string
        curCd:
          type: string
        msgStatus:
          $ref: '#/components/schemas/MsgStatus'
    MsgStatus:
      type: object
      properties:
        msgStatusCd:
          type: string
        msgErrorCd:
          type: string
        msgStatusDesc:
          type: string
        extendedStatus:
          $ref: '#/components/schemas/ExtendedStatus'
    ExtendedStatus:
      type: object
      properties:
        extendedStatusCd:
          type: string
        extendedStatusDesc:
          type: string
    CoreApiRespBroker:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BrokerResponse'
        errorContent:
          $ref: '#/components/schemas/APIError'
    BrokerResponse:
      type: object
      properties:
        messageId:
          type: string
        status:
          type: string
        error:
          type: string
        errorMessage:
          type: string
    APIError:
      description: "Basic model to describe most error content for api calls\r\nIt defaults to success."
      type: object
      properties:
        statusCode:
          format: int32
          type: integer
        type:
          type: string
        message:
          type: string
    CoreApiTransactionSummary:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TransactionSummaryResponse'
        errorContent:
          $ref: '#/components/schemas/APIError'
    TransactionSummaryResponse:
      type: object
      properties:
        transactionStatus:
          type: string
        preProcessStatus:
          type: string
        orchestrationStatus:
          type: string
        accountDomainResponse:
          type: object
        accountStatus:
          type: string
        submissionDomainResponse:
          type: object
        submissionStatus:
          type: string
