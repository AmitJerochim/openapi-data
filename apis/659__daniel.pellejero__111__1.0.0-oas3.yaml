openapi: 3.0.0
info:
  title: COLLABORATE Space SDK REST API
  version: 1.0.0-oas3
  description: >-
    This is COLLABORATE Space HTTP API, which offers all power in COLLABORATE
    Space through a simple HTTP API, simple and ready to be consumed by any
    client done with any technology or language!
servers:
  - url: 'https://localhost:27760'
    description: COLLABORATE Space local Windows Service
tags:
  - name: apiclient
    description: 'API consumption: subscribe and unsubscribe to events'
  - name: imconnection
    description: 'IM (Instant Messaging and Presence) Connection and Disconnection'
  - name: imcontacts
    description: 'IM Contacts operations'
  - name: meetings
    description: 'MEETINGS operations and all information about them'
  - name: callconnection
    description: 'CALL Connection and Disconnection'
  - name: callfeatures
    description: 'CALL actions and information exchanged during the call'

#############################################################################################################################
#                  PATHS (operations)
#############################################################################################################################
paths:
  #########################################################################
  #                  PATHS: API CLIENT
  #########################################################################
  
  # -----------------------------------------------------------------------
  /apiclient/subscribe:
    post:
      operationId: apiclient-subscribe-post
      summary: Subscribe to events
      description: To properly consume the API, client module needs to subscribe to asynchronous events
        happened inside the service. The way to do it is by passing a WEBHOOK url, a listening URL where 
        all those asynchronous events will be notified as HTTP calls.
      tags:
        - apiclient
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Webhook'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK_sync'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  /apiclient/unsubscribe:
    post:
      operationId: apiclient-unsubscribe-post
      summary: Unsubscribe to events
      tags:
        - apiclient
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Webhook'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK_sync'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'

  #########################################################################
  #                  PATHS: IM CONNECTION
  #########################################################################
  
  # -----------------------------------------------------------------------
  /im/connection/login:
    post:
      operationId: im-connection-login-post
      summary: Log In the system
      tags:
        - imconnection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.johnson@yourserver.com
                password:
                  type: string
                  example: john123
                server:
                  type: string
                  example: collaborateserver.it
              required:
                - email
                - password
                - server
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
      callbacks:
        IM Connected:
          $ref: '#/components/callbacks/Callback_IMConnected'
        IM Connect Error:
          $ref: '#/components/callbacks/Callback_IMConnectError'
        Call Incoming:
          $ref: '#/components/callbacks/Callback_CallIncoming'
  # -----------------------------------------------------------------------
  /im/connection/logout:
    post:
      operationId: im-connection-logout-post
      summary: Log Out the system
      tags:
        - imconnection
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
      callbacks:
        IM Disconnected:
          $ref: '#/components/callbacks/Callback_IMDisconnected'
  # -----------------------------------------------------------------------
  /im/connection/state:
    get:
      operationId: im-connection-state-get
      summary: Ask synchronously for IM Connection
      tags:
        - imconnection
      responses:
        '200':
          description: IM Connection State is returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  imconnectstate:
                    $ref: '#/components/schemas/IMConnectionState'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'

  #########################################################################
  #                  PATHS: IM CONTACTS
  #########################################################################
  
  # -----------------------------------------------------------------------
  /im/contacts:
    get:
      summary: Get complete information about all IM Contacts
      operationId: im-contacts-get
      tags:
        - imcontacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  imcontacts:
                    type: array
                    items:
                      $ref: '#/components/schemas/IMContact'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/im/contact/{contactID}':
    parameters:
      - $ref: '#/components/parameters/param_contactID'
    get:
      summary: Get complete information about one IM Contact
      operationId: im-contact-contactID-get
      tags:
        - imcontacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IMContact'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/im/contact/{contactID}/image':
    parameters:
      - $ref: '#/components/parameters/param_contactID'
    get:
      summary: Get image from an IM Contact
      operationId: im-contact-contactID-image-get
      tags:
        - imcontacts
      responses:
        '200':
          $ref: '#/components/responses/Response_Image_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
          
  #########################################################################
  #                  PATHS: MEETINGS
  #########################################################################
  # -----------------------------------------------------------------------
  /meetings/meetingsequences:
    get:
      summary: Get Meeting Sequences
      description: Get complete information about all Meeting Sequences
      operationId: meetings-meetingsequences-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meetingsequences:
                    type: array
                    items:
                      $ref: '#/components/schemas/MeetingSequence'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  /meetings/meetingsequences/ids:
    get:
      summary: Get Meeting Sequence IDs
      description: Get listing with all Meeting Sequence IDs
      operationId: meetings-meetingsequences-ids-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meetingsequence_ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/MeetingSequenceID'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    get:
      summary: Get Meeting Sequence
      description: Get complete information about selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingSequence'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meetings':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    get:
      summary: Get Meetings
      description: Get complete information from all Meetings in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meetings-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meetings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Meeting'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
          
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting
      description: Get complete information from selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/participants':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Participants
      description: Get complete information from participants, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-participants-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingParticipants_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/participant/{contactID}':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
      - $ref: '#/components/parameters/param_contactID'
    get:
      summary: Get Meeting Participant
      description: 
        Get complete information from selected participant, in selected Meeting in selected Meeting Sequence.
        Note that, for no IM Meeting Participants, it is not possible to ask for information separately.
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-participant-contactID-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingParticipant'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/participant/{contactID}/image':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
      - $ref: '#/components/parameters/param_contactID'
    get:
      summary: Get Meeting Participant image
      description: Get image from selected participant, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-participant-contactID-image-get
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Image_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'    
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/agenda':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Agenda
      description: Get all items in Agenda, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-agenda-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingAgenda_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/notes':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Notes
      description: Get all items in Notes, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-notes-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingNotes_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/todos':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting To-Do list
      description: Get all items in To-Do list, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-todos-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingToDos_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'                
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/files':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Files
      description: Get all items in Files, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-files-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingFiles_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'                
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/recordings':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Recordings
      description: Get all items in Recordings, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-recordings-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRecordings_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'                
  # -----------------------------------------------------------------------
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/chatmessageslast':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    get:
      summary: Get Meeting Last Messages in Chat
      description: Get last messages sent or received, in selected Meeting in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-chatmessageslast-get
      tags:
        - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingChatMessagesLast_Data'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/favorite/set':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post: 
      summary: Set Meeting Sequence as favorite
      description: Set Meeting Sequence as favorite, allowing to be highlighted in the GUI in some way
      operationId: meetings-meetingsequence-meetingSequenceID-favorite-set-post
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'          

  # -----------------------------------------------------------------------            
#  /meetings/meetingsequence/create:
#    post:
    
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/attendance/set':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'    
    post:  
      summary: Declare attendance to a Meeting
      description: Declare attendance to a Meeting Sequence. It is only a statement of intents. 
        Only accepted values are `maybe`, `accepted` and `declined`
      operationId: meetings-meetingsequence-meetingSequenceID-attendance-set-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meetingParticipantState:
                  $ref: '#/components/schemas/MeetingParticipantState'
              example: 
                  meetingParticipantState: 
                    maybe
              required:
                - meetingParticipantState
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'          
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/summary/change':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Change Meeting Summary
      description: Edit (append, remove or modify) summary (Agenda or Notes), in selected Meeting, 
        in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-summary-change-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entryType:
                  $ref: '#/components/schemas/EntryType'
                entry_ids_to_remove:
                  type: array
                  items: 
                    $ref: '#/components/schemas/EntryID'
                  example: 
                    [123, 127]
                entries_to_add:
                  type: array
                  items: 
                    type: string
                  example: 
                    ["agenda item 1", "agenda item 2"]
                entries_to_modify:
                  type: array
                  items: 
                    type: object
                    properties: 
                      entryID:   
                        $ref: '#/components/schemas/EntryID'
                      text: 
                        type: string  
              required: 
                - entryType
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'          
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/participants/manage':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Manage Participants
      description: Manage (append or remove) Participants, in selected Meeting, 
        in selected Meeting Sequence. Changes will be applied in selected Meeting and next ones.
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-participants-manage-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imcontact_contactIDs_to_add_participant:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [7, 130]
                imcontact_contactIDs_to_add_presenter:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [8, 23]
                imcontact_contactIDs_to_remove:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [12]
                collaborateRoom_contactIDs_to_add_participant:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [7, 130]
                collaborateRoom_contactIDs_to_add_presenter:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [8, 23]
                collaborateRoom_contactIDs_to_remove:
                  type: array
                  items: 
                    $ref: '#/components/schemas/IMContactID'
                  example: 
                    [12]
                email_to_add_participant:
                  type: array
                  items: 
                    type: string
                    format: email
                  example: 
                    [dimitri@myserver.ru]
                email_to_add_presenter:
                  type: array
                  items: 
                    type: string
                    format: email
                  example: 
                    [john.johnson@johnland.com, gonzalo.gonzalez@friends.es]
                email_to_remove:
                  type: array
                  items: 
                    type: string
                    format: email
                  example: 
                    [alexander@myvillage.fr]            
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'          
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/locked/presentation/manage':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:  
      summary: Set Locked Presentation in a Meeting
      description: Set file to be displayed while a Meeting is Locked
      operationId: meetings-meetingsequence-meetingSequenceID-locked-presentation-manage-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filefullpath:
                  $ref: '#/components/schemas/FileFullPath'
              required:
                - filefullpath
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'        
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/files/manage':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Manage Files in a Meeting
      description: rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar 
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-files-manage-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files_to_add:
                  $ref: '#/components/schemas/FileFullPath_Array'
                files_to_remove:
                  $ref: '#/components/schemas/FileID_Array'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'        
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/recordings/manage':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Manage Recordings in a Meeting
      description: rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar 
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-recordings-manage-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files_to_add:
                  $ref: '#/components/schemas/FileFullPath_Array'
                files_to_remove:
                  $ref: '#/components/schemas/FileID_Array'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'        
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meetingproperties/manage':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Manage Meeting Sequence Properties
      description: rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar 
      operationId: meetings-meetingsequence-meetingSequenceID-meetingproperties-manage-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: 
                meetingProperties:
                  $ref: '#/components/schemas/MeetingProperties'
              required:
                - meetingProperties
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'        
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/cancel':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Cancel a Meeting
      description: Set a Meeting cancelled. It will exist, but it will not start for anyone
        of the Meeting Participants. Required to be Host to do it.
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-cancel-post
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/cancel':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Cancel a Meeting Sequence
      description: 'Set a Meeting Sequence cancelled: all future Meetings will be cancelled. 
        They will exist, but will not start for anyone
        of the Meeting Participants. Required to be Host to do it.'
      operationId: meetings-meetingsequence-meetingSequenceID-cancel-post
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/delete':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    delete:
      summary: Delete a Meeting Sequence
      description: 'Set a Meeting Sequence deleted. 
        If you are the Host, the Meeting Sequence will be entirely deleted, together with all its 
        content, for you and for the rest of participants. If you are not a Host, only your state
        will change to Deleted, and the Meeting Sequence will be deleted for you, but it will
        remain and happen for the rest of participants.'
      operationId: meetings-meetingsequence-meetingSequenceID-delete-delete
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/finish':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Finish a Meeting
      description: Set an active Meeting as finished for all participants. Required to be Host to do it.
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-finish-post
      tags:
        - meetings
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/title/set':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Set title to a Meeting Sequence
      description: Set title to a Meeting Sequence, therefore to all its Meetings
      operationId: meetings-meetingsequence-meetingSequenceID-title-set-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "Tuesdays afternoon Meeting"
              required:
                - text
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'    
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/description/set':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Set description to a Meeting Sequence
      description: Set description to a Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-description-set-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "Meeting to talk about Tuesday afternoons"
              required:
                - text
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'    
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/dateduration/change':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Change Date and/or Duration of a Meeting
      description: Change Date and/or Duration of a Meeting
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-dateduration-change-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDateTime_local_ISO8601:
                  $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
                duration_hhmmss:  
                  $ref: '#/components/schemas/TimeInterval_hhmmss'
              required:
                - startDateTime_local_ISO8601
                - duration_hhmmss
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'    
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/dateduration/change':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
    post:
      summary: Change Date and/or Duration of a Meeting Sequence
      description: Change Date and/or Duration of a Meeting Sequence. All future Meetings will
        be changed, or time-moved.
      operationId: meetings-meetingsequence-meetingSequenceID-dateduration-change-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDateTime_local_ISO8601:
                  $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
                duration_hhmmss:  
                  $ref: '#/components/schemas/TimeInterval_hhmmss'
              required:
                - startDateTime_local_ISO8601
                - duration_hhmmss
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'  
  # -----------------------------------------------------------------------            
  /meetings/search:
    post:
      summary: Search in Meetings
      description: |-
        **Search in Meetings, by pattern and specifying search fields**</br>
        Pattern to search in meetings, use % character as a wildcard, for example, in case you want all the notes that contains the word `note` set it to "%note%", in case you have fields separate by commas like "field1,field2,field3" and you want to search by field 2 set it to "%,field2,%", you can use wildcard so many times as you need, for example to search for any a cointained in field 1 and any b in field2 you can set the pattern to "%a%,%b%,%"
      operationId: meetings-search-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string 
                searchfields:  
                  type: array
                  items: 
                    $ref: '#/components/schemas/MeetingSearchField'
                  example: [notes, agenda, todos]  
              required:
                - text
                - searchfields
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'  
#  # -----------------------------------------------------------------------            
  /meetings/availability/check:
    post:
      summary: Check License Availability
      description: rellenar rellenar rellenar rellenar rellenar rellenar rellenar rellenar
      operationId: meetings-availability-check-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meetingEnvironment:
                  $ref: '#/components/schemas/MeetingEnvironment'
                startDateTime_local_ISO8601:
                  $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
                finishDateTime_local_ISO8601:
                  $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
                meetingID:
                  $ref: '#/components/schemas/MeetingID'
                maxParticipants:
                  type: integer
                  description: In case of environment `classroom`, the number of participants 
                    indicates the license number what is being checked
              required:
                - meetingEnvironment
                - startDateTime_local_ISO8601
                - finishDateTime_local_ISO8601
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest' 
  # -----------------------------------------------------------------------            
  '/meetings/meetingsequence/{meetingSequenceID}/meeting/{meetingID}/todos/change':
    parameters:
      - $ref: '#/components/parameters/param_meetingSequenceID'
      - $ref: '#/components/parameters/param_meetingID'
    post:
      summary: Change Meeting To-Do list
      description: Edit (append, remove or modify) To-Do list, in selected Meeting, 
        in selected Meeting Sequence
      operationId: meetings-meetingsequence-meetingSequenceID-meeting-meetingID-todos-change-post
      tags:
        - meetings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entry_ids_to_remove:
                  $ref: '#/components/schemas/EntryID_Array'
                entries_to_add:
                  type: array
                  items: 
                    type: object
                    properties:
                      text: 
                        type: string
                        example: To buy potatoes
                      assignedTo_imcontactids:
                        $ref: '#/components/schemas/IMContactID_Array'
                entries_to_modify:
                  type: array
                  items: 
                    type: object
                    properties: 
                      entryID:   
                        $ref: '#/components/schemas/EntryID'
                      text: 
                        type: string  
                        example: To buy 5kg of potatoes
                      done:   
                        type: boolean
                      assignedTo_imcontactids:
                        $ref: '#/components/schemas/IMContactID_Array'
                    required:
                      - entryID
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'        
  
  #########################################################################
  #                  PATHS: CALL CONNECTION
  #########################################################################
  
  # -----------------------------------------------------------------------
  /call/joinmeeting:
    post:
      summary: Join a Meeting
      operationId: call-joinmeeting-post
      tags:
        - callconnection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meetingSequenceID:
                  $ref: '#/components/schemas/MeetingSequenceID'
                meetingID:
                  $ref: '#/components/schemas/MeetingID'
                video:
                  type: boolean
      responses:
        '200':
          description: User joined the Meeting successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Result'
                  callID:
                    type: integer
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
      callbacks:
        Call State Updated:
          $ref: '#/components/callbacks/Callback_CallStateUpdated'
        Call State Reconnecting:
          $ref: '#/components/callbacks/Callback_CallStateReconnecting'
        Call Participant Connected:
          $ref: '#/components/callbacks/Callback_CallParticipantConnected'
        Call Participant Disconnected:
          $ref: '#/components/callbacks/Callback_CallParticipantDisconnected'
        Call Participant Updated:
          $ref: '#/components/callbacks/Callback_CallParticipantUpdated'
        Call Participant Updated IM:
          $ref: '#/components/callbacks/Callback_CallParticipantUpdatedIM'
        Call Participant Updated Speaking:
          $ref: '#/components/callbacks/Callback_CallParticipantUpdatedSpeaking'
        Call Stream Started:
          $ref: '#/components/callbacks/Callback_CallStreamStarted'
        Call Stream Stopped:
          $ref: '#/components/callbacks/Callback_CallStreamStopped'
        Call Remote Participant Sent PTZ Action:
          $ref: '#/components/callbacks/Callback_CallRemoteSentPTZAction'  
        Call Stream Updated Properties:
          $ref: '#/components/callbacks/Callback_CallStreamUpdatedProperties'
        Call Stream Updated Speaking:
          $ref: '#/components/callbacks/Callback_CallStreamUpdatedSpeaking'        
        Call Recording State Updated:
          $ref: '#/components/callbacks/Callback_CallRecordingStateUpdated'  
        Call Hand Raise Received:
          $ref: '#/components/callbacks/Callback_CallHandRaiseReceived'
        Call Hand Raise Cancelled:
          $ref: '#/components/callbacks/Callback_CallHandRaiseCancelled'
        Call Hand Raise Accepted:
          $ref: '#/components/callbacks/Callback_CallHandRaiseAccepted'
        Call Hand Raise Declined:
          $ref: '#/components/callbacks/Callback_CallHandRaiseDeclined'
        Call Play Media File State Updated:
          $ref: '#/components/callbacks/Callback_CallPlayMediaFileStateChanged'
        Call Play Media File Position Changed:
          $ref: '#/components/callbacks/Callback_CallPlayMediaFilePositionChanged'
        Call Request Updated:
          $ref: '#/components/callbacks/Callback_CallRequestUpdated'
        Call Speaking List Updated:
          $ref: '#/components/callbacks/Callback_CallParticipantUpdatedSpeakingList'  
        Call Default Manage Services Updated:
          $ref: '#/components/callbacks/Callback_CallDefaultManageServicesUpdated'
        Call Locked State Updated:
          $ref: '#/components/callbacks/Callback_CallLockedUpdated'
        Call Waiting Participants Count Updated:
          $ref: '#/components/callbacks/Callback_CallWaitingParticipantsCountUpdated'
        Call Private Videos Updated:
          $ref: '#/components/callbacks/Callback_CallPrivateVideosUpdated'
        Call Meeting About To Finish:
          $ref: '#/components/callbacks/Callback_CallMeetingAboutToFinish'
        Call Question Updated:
          $ref: '#/components/callbacks/Callback_CallQuestionUpdated'        
  # -----------------------------------------------------------------------
  '/call/{callID}/hangup':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Hang Up selected active Call
      tags:
        - callconnection
      operationId: call-callID-hangup-post
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/endforall':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: End for all Call Participants (if possible) selected active Call
      operationId: call-callID-endforall-post
      tags:
        - callconnection
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/setservicestate':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: >-
        Change the state of a Call Service, for some Call Participant, in
        selected active Call
      operationId: call-callID-setservicestate-get
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callParticipantID:
                  type: integer
                service:
                  $ref: '#/components/schemas/CallService'
                activate:
                  type: boolean
  # -----------------------------------------------------------------------
  /call/makecall:
    post:
      summary: Make a Call. CALLBACKS are not listed here, 
        but they should be exactly the same set of callbacks you can read in Join Meeting
      operationId: call-makecall-post
      tags:
        - callconnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeNewCall_Data'
      responses:
        '200':
          description: Call initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Result'
                  callID:
                    type: integer
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/incoming/{callID}/acceptvideo':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Accept with Video an Incoming Call. CALLBACKS are not listed here, 
        but they should be exactly the same set of callbacks you can read in Join Meeting
      operationId: call-incoming-callID-acceptvideo-post
      tags:
        - callconnection
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/incoming/{callID}/acceptaudio':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Accept with Audio an Incoming Call. CALLBACKS are not listed here, 
        but they should be exactly the same set of callbacks you can read in Join Meeting
      operationId: call-incoming-callID-acceptaudio-post
      tags:
        - callconnection
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/incoming/{callID}/reject':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Reject an Incoming Call
      operationId: call-incoming-callID-reject-post
      tags:
        - callconnection
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  /call/activecalls:
    get:
      summary: 'Get a list of active Calls, for local user, in local device'
      operationId: call-activecalls-get
      tags:
        - callconnection
      responses:
        '200':
          description: List of active calls is properly returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  activecalls:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallData'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: Get complete data about selected Call, if active
      operationId: call-callID-get
      tags:
        - callconnection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallData'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'

  #########################################################################
  #                  PATHS: CALL FEATURES
  #########################################################################
  
  # -----------------------------------------------------------------------
  '/call/{callID}/participants/add':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Add participants to an active Call
      operationId: call-callID-addparticipants-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeCallBase_Data'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/participant/{callParticipantID}/hang':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    post:
      summary: Hang Up a Call Participant from active Call
      operationId: call-callID-hangparticipant-callParticipantID-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/participant/{callParticipantID}/dtmf/send':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    post:
      summary: Send DTMFs to a call paticipant
      operationId: call-callID-hangparticipant-callParticipantID-dtmf-send-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: the DTMF characters to be sent
                  example: '123#'
              required:
                - text
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/participants':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: >-
        Get complete information about all Call Participants in selected active
        Call
      operationId: call-callID-participants-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callparticipants:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallParticipant'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/participant/{callParticipantID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    get:
      summary: >-
        Get complete information about a Call Participant in selected active
        Call
      operationId: call-callID-participant-callParticipantID-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/participant/{callParticipantID}/image':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    get:
      summary: Get image from a Call Participant in selected active Call
      operationId: call-callID-participant-callParticipantID-image-get
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Image_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/participant/moderator':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: >-
        Get complete information about Call Participant moderator
      operationId: call-callID-participant-moderator-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/ptz/send':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Send a PTZ command to a remote or local stream
      operationId: call-callID-actionptz-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
                ptzAction:
                  $ref: '#/components/schemas/DevicePTZAction'
              required:
                - callStreamID
                - ptzAction
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/ptz/allowmoderatorcontrol':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Allow (or stop allowing) moderator to control my cameras, those with PTZ available
      operationId: call-callID-ptz-allowmoderatorcontrol-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                boolvalue:
                  type: boolean
              required:
                - boolvalue
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/start':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Play a local video file in the call
      operationId: call-callID-playmediafile-start-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filefullpath:
                  $ref: '#/components/schemas/FileFullPath'
              required:
                - filefullpath
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/pause':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Pause an active local video file playing in the call
      operationId: call-callID-playmediafile-pause-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
              required:
                - callStreamID
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/resume':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Resume (play after paused) an active local video file playing in the call
      operationId: call-callID-playmediafile-resume-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
              required:
                - callStreamID
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/setpos':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Set play position for an active local video file playing in the call
      operationId: call-callID-playmediafile-setpos-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
                position_hhmmsszzz:
                  $ref: '#/components/schemas/TimeInterval_hhmmsszzz'
              required:
                - callStreamID
                - position_hhmmsszzz
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/setspeed':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Set play speed for an active local video file playing in the call
      operationId: call-callID-playmediafile-setspeed-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
                speed:
                  type: number
                  example: 2
              required:
                - callStreamID
                - speed
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/playmediafile/stop':          
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Stop an active local video file playing in the call
      operationId: call-callID-playmediafile-stop-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callStreamID:
                  $ref: '#/components/schemas/CallStreamID'
              required:
                - callStreamID
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'      
  # -----------------------------------------------------------------------
  '/call/{callID}/streams':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: >-
        Get complete information about all Video Streams in
        selected active Call
      operationId: call-callID-streams-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callstreams:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallStreamData'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/stream/{callStreamID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callStreamID'
    get:
      summary: >-
        Get complete information about all Video Streams in
        selected active Call
      operationId: call-callID-stream-callStreamID-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callstreams:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallStreamData'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------          
  '/call/{callID}/record/start':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Start Recording in the call, locally in WCONF format, locally in MP4 format, or in the cloud.
      operationId: call-callID-record-start-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: If format indicates to record in the server, no more parameters are required. 
                If format indicates to record MP4 or WCONF, which means record locally, you must speccify
                a non exiting file full path, to be created.
                If format indicates to record MP4, you additionaly have to pass parameter Quality.
              properties:
                recordingFormat:
                  $ref: '#/components/schemas/CallRecordingFormat'
                filefullpath:
                  $ref: '#/components/schemas/FileFullPath'
                mp4RecQuality:
                  $ref: '#/components/schemas/CallRecordingMp4Quality'
              required:
                - recordingFormat
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'            
  # -----------------------------------------------------------------------          
  '/call/{callID}/record/stop':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Stop Recording in the call, in speccified format
      operationId: call-callID-record-stop-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recordingFormat:
                  $ref: '#/components/schemas/CallRecordingFormat'
              required:
                - recordingFormat
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'            
  # -----------------------------------------------------------------------          
  '/call/{callID}/record/state':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: Get current Recording State in the Call
      operationId: call-callID-record-state-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordingState:    
                    type: array
                    items:
                      $ref: '#/components/schemas/CallRecordingState'
                  callparticipantsrecording:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallParticipant'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/handraise/send':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: 'Raise Hand in a active Call, if local user is Participant'
      operationId: call-callID-handraise-send-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextObject'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/handraise/cancel':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Cancel previosly sent Raise Hand request in a active Call
      operationId: call-callID-handraise-cancel-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
          
  # -----------------------------------------------------------------------
  '/call/{callID}/handraise/answer':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: >-
        Answer a received Raise Hand request in a active Call, if local user has
        rights for doing that.
      operationId: call-callID-handraise-answer-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callParticipantID:
                  type: integer
                  description: Call Participant whose Hand Raise request is answering
                accept:
                  type: boolean
                  example: 'true'
                  description: Accept or decline the Hand Raise request
                text:
                  type: boolean
                  description: >-
                    Activate or not Call Service Text, allowing user to write
                    something in the Call
                audio:
                  type: boolean
                  description: >-
                    Activate or not Call Service Voice, allowing user to talk in
                    the Call
                video:
                  type: boolean
                  description: >-
                    Activate or not Call Service Video, allowing user to send
                    video in the Call
                answerText:
                  type: string
                  description: Answer text sent to the requester
                  example: 'Ok, do your comment or whatever, but quickly, please'
              required:
                - callParticipantID
                - accept
                - text
                - audio
                - video
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/handraises':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: >-
        Get complete information about all unfinished Hand Raise requests in
        selected active Call
      operationId: call-callID-handraises-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callhandraises:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallHandRaiseRequest'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/promotetomoderator/{callParticipantID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    post:
      summary: Promote a Call Participant to role Moderator
      operationId: call-callID-promotetomoderator-callParticipantID-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/promotetopresenter/{callParticipantID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    post:
      summary: Promote a Call Participant to role Presenter
      operationId: call-callID-promotetopresenter-callParticipantID-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/removepresenter/{callParticipantID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callParticipantID'
    post:
      summary: Remove a Call Participant from role Presenter
      operationId: call-callID-removepresenter-callParticipantID-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/request/accept':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Accept a Request received in active Call
      operationId: call-callID-requestaccept-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequestAnswer_Data'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/request/decline':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Decline a Request received in active Call
      operationId: call-callID-requestdecline-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequestAnswer_Data'
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/requests':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: Get complete information about all Call Requests in selected active Call
      operationId: call-callID-requests-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callrequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallRequest'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/chat/message/send':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Send a Chat message in active Call
      operationId: call-callID-chat-message-send-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: This is what i want to say in the chat
                public:
                  type: boolean
                  description: Type of message Public (to all participants in the Call) or Private
                    (only sent to those Call Participants passed in the request)
                callparticipant_ids:
                  type: array
                  items:
                    type: integer
              required:
                - text
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/chat/file/send':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Send a file in active Call
      operationId: call-callID-chat-file-send-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filefullpath:
                  $ref: '#/components/schemas/FileFullPath'
              required:
                - filefullpath
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/chat/file/download':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Download a file received in the call
      operationId: call-callID-chat-file-download-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filefullpath:
                  $ref: '#/components/schemas/FileFullPath'
                chatRoomID:
                  $ref: '#/components/schemas/ChatRoomID'
                chatEventID:
                  $ref: '#/components/schemas/ChatEventID'
              required:
                - filefullpath
                - chatRoomID
                - chatEventID
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  /call/history/loadmore:
    post:
      summary: Load more elements to the call history object
      operationId: call-history-loadmore-post
      tags:
        - callfeatures
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/locked/set':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Lock/unlock a classroom or webinar, you need to be host or presenter to make this action
      operationId: call-callID-locked-set-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                boolvalue:
                  type: boolean
              required:
                - boolvalue
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/videosprivate/set':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Set videos private/public in a classroom or webinar, 
          Videos from participants are only received by host and presenters in case of private
      operationId: call-callID-videosprivate-set-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                boolvalue:
                  type: boolean
              required:
                - boolvalue
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/questions/makequestion':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Send DTMFs to a call paticipant
      operationId: call-callID-questions-makequestion-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Question text
              required:
                - text
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/questions/makequestionaction':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    post:
      summary: Lock/unlock a classroom or webinar, you need to be host or presenter to make this action
      operationId: call-callID-questions-makequestionaction-post
      tags:
        - callfeatures
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callQuestionID:
                  $ref: '#/components/schemas/CallQuestionID'
                callQuestionAction:
                  $ref: '#/components/schemas/CallQuestionAction'
                text:
                  type: string
                  description: Answer text, if it was selected to answer with text
              required:
                - callQuestionID
                - callQuestionAction
      responses:
        '200':
          $ref: '#/components/responses/Response_Result_200_OK'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
  # -----------------------------------------------------------------------
  '/call/{callID}/questions':
    parameters:
      - $ref: '#/components/parameters/param_callID'
    get:
      summary: Get questions in the call
      operationId: call-callID-questions-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  callquestions:
                    type: array
                    items:
                      $ref: '#/components/schemas/CallQuestion'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'
  # -----------------------------------------------------------------------
  '/call/{callID}/questions/{callQuestionID}':
    parameters:
      - $ref: '#/components/parameters/param_callID'
      - $ref: '#/components/parameters/param_callQuestionID'
    get:
      summary: >-
        Get complete information about a Question in selected active
        Call
      operationId: call-callID-questions-callQuestionID-get
      tags:
        - callfeatures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallQuestion'
        '400':
          $ref: '#/components/responses/Response_Result_400_BadRequest'
        '404':
          $ref: '#/components/responses/Response_Result_404_NotFound'

#############################################################################################################################
#                  COMPONENTS
#############################################################################################################################
components:
  #########################################################################
  #                  COMPONENTS: PARAMETERS
  #########################################################################
  parameters:
    param_contactID:
      name: contactID
      in: path
      required: true
      description: ID of the IM Contact
      schema:
        type: integer
        
    param_meetingSequenceID:
      name: meetingSequenceID
      in: path
      required: true
      description: ID of the Meeting Sequence
      schema:
        type: integer    
        
    param_meetingID:
      name: meetingID
      in: path
      required: true
      description: ID of the Meeting
      schema:
        type: integer    
        
    param_callID:
      name: callID
      in: path
      required: true
      description: ID of the Call
      schema:
        type: integer    
        
    param_callParticipantID:
      name: callParticipantID
      in: path
      required: true
      description: 'ID of the Call Participant, unique in the call'
      schema:
        type: integer
        
    param_callStreamID:
      name: callStreamID
      in: path
      required: true
      description: 'ID of the Stream, unique in the call'
      schema:
        type: integer
        format: int64
        
    param_callQuestionID:
      name: callQuestionID
      in: path
      required: true
      description: 'ID of the Question, unique in the call'
      schema:
        type: integer        
        
  #########################################################################
  #                  COMPONENTS: RESPONSES
  #########################################################################
  responses:
    Response_Image_200_OK:
      description: Valid image is returned
      content:
        image/jpeg:
          schema: {}
        image/png:
          schema: {}   
          
    Response_Result_200_OK:
      description: 'OK: Completed requested action'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultObject'
          example: 
            result: 
              processing  
            
    Response_Result_200_OK_sync:
      description: 'OK: Completed requested action'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultObject'
          example: 
            result: 
              ok
            
    Response_Result_400_BadRequest:
      description: Bad request. Action couldn't be completed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultObject'
          example: 
            result: 
              errorrights
            
    Response_Result_404_NotFound:
      description: The specified resource was not found. Action couldn't be completed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultObject'
          example: 
            result: 
              errorparams  
            
    Response_Webhook_200_OK:
      description: 'OK: Webhook accepted the callback. Response body ignored'
            
  #########################################################################
  #                  COMPONENTS: CALLBACKS
  #########################################################################
  callbacks:
    Callback_IMConnected:
      '{$webhook}/im/connection/connected':
        post:
          description: Connection to IM successfully done
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_IMConnectError:
      '{$webhook}/im/connection/connecterror':
        post:
          description: Some IM Connection error happened
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    imconnectresult:
                      $ref: '#/components/schemas/IMConnectResult'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_IMDisconnected:
      '{$webhook}/im/connection/disconnected':
        post:
          description: Disconnection from IM successfully done
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallStateUpdated:
      '{$webhook}/call/stateupdated':
        post:
          description: Call State updated
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData_State'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallStateReconnecting:
      '{$webhook}/call/statereconnecting':
        post:
          description: Call is reconnecting
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData_State'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantConnected:
      '{$webhook}/call/participant/connected':
        post:
          description: A Call Participant connected to the Call
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallParticipant'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantDisconnected:
      '{$webhook}/call/participant/disconnected':
        post:
          description: A Call Participant disconnected from the Call
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallParticipant'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantUpdated:
      '{$webhook}/call/participant/updated':
        post:
          description: 'A Call Participant, connected to the Call, updated some data'
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallParticipant'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantUpdatedIM:
      '{$webhook}/call/participant/updated/im':
        post:
          description: 'A Call Participant, connected to the Call, updated IM data'
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallParticipant'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantUpdatedSpeaking:
      '{$webhook}/call/participant/updated/speaking':
        post:
          description: 'A Call Participant, connected to the Call, updated Speaking property'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CallParticipant_Speaking'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallStreamStarted:                  
      '{$webhook}/call/stream/started':
        post:
          description: 'A Video Stream started in the call'
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallStreamData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallStreamStopped:                  
      '{$webhook}/call/stream/stopped':
        post:
          description: 'A Video Stream finished in the call'
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallStreamData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallRemoteSentPTZAction:                                
      '{$webhook}/call/ptz/remotesentaction':
        post:
          description: 'A remote Call PArticipant is moving your camera'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CallDevicePTZAction'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallStreamUpdatedProperties:                                
      '{$webhook}/call/stream/updated/properties':
        post:
          description: 'A stream has updated his properties (PTZ control allowed, shared video, shared rectangle)'
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallStreamData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallStreamUpdatedSpeaking:                                
      '{$webhook}/call/stream/updated/speaking':
        post:
          description: 'A stream updated its speaking state'
          requestBody:
            content:  
              application/json:
                schema:
                  $ref: '#/components/schemas/CallStreamData_Speaking'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallRecordingStateUpdated:                  
      '{$webhook}/call/record/updated':
        post:
          description: Recording state updated
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallIncoming:
      '{$webhook}/call/incoming':
        post:
          description: Incoming Call
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallHandRaiseReceived:
      '{$webhook}/call/handraise/received':
        post:
          description: Call Hand Raise request received
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallHandRaiseRequest'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallHandRaiseCancelled:
      '{$webhook}/call/handraise/cancelled':
        post:
          description: Call Hand Raise request cancelled
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallHandRaiseRequest'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallHandRaiseAccepted:
      '{$webhook}/call/handraise/accepted':
        post:
          description: Call Hand Raise request accepted
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallHandRaiseRequest'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallHandRaiseDeclined:
      '{$webhook}/call/handraise/declined':
        post:
          description: Call Hand Raise request declined
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallHandRaiseRequest'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallPlayMediaFileStateChanged:
      '{$webhook}/call/playmediafile/stateupated':
        post:
          description: A Media fiule playing in Call updated its state
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallPlayMediaFile'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallPlayMediaFilePositionChanged:
      '{$webhook}/call/playmediafile/positionchanged':
        post:
          description: A Media file playing in Call updated its position
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallPlayMediaFile'  
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallRequestUpdated:
      '{$webhook}/call/request/updated':
        post:
          description: Call Request received/updated
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallRequest'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'        
    Callback_CallParticipantUpdatedSpeakingList:
      '{$webhook}/call/participant/updated/speakinglist':
        post:
          description: Speaking participant list updated
          requestBody:
            content:
              application/json:
                schema:
                  properties:
                    callID:
                      $ref: '#/components/schemas/CallID'
                    callparticipant_ids:
                      type: array
                      items:
                        $ref: '#/components/schemas/CallParticipantID'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'              
    Callback_CallDefaultManageServicesUpdated:
      '{$webhook}/call/defaultmanageservices/updated':
        post:
          description: Default manage services updated, you must be moderator to receive this event
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallLockedUpdated:
      '{$webhook}/call/locked/updated':
        post:
          description: Lock/unlock state of the meeting has changed
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallWaitingParticipantsCountUpdated:
      '{$webhook}/call/waitingparticipantscount/updated':
        post:
          description: In a locked meeting, the number of participants in the waiting queue has changed
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallPrivateVideosUpdated:
      '{$webhook}/call/privatevideos/updated':
        post:
          description: In a classroom/webinar private/public videos has been updated
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallMeetingAboutToFinish:
      '{$webhook}/call/meeting/abouttofinish':
        post:
          description: Meeting is about to finish
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallData'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
    Callback_CallQuestionUpdated:
      '{$webhook}/call/questions/updated':
        post:
          description: Call Question updated
          requestBody:
            $ref: '#/components/requestBodies/RequestBody_CallQuestion'
          responses:
            '200':
              $ref: '#/components/responses/Response_Webhook_200_OK'
  
  #########################################################################
  #                  COMPONENTS: REQUEST BODIES
  #########################################################################
  requestBodies:                
    RequestBody_Webhook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookObject'
    RequestBody_CallData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallData'
    RequestBody_CallData_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallData_State'
    RequestBody_CallParticipant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallParticipant'
    RequestBody_CallPlayMediaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallPlayMediaFile'
    RequestBody_CallStreamData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallStreamData'        
    RequestBody_CallHandRaiseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallHandRaiseRequest'        
    RequestBody_CallRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallRequest'        
    RequestBody_CallQuestion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallQuestion'        
            
  #########################################################################
  #                  COMPONENTS: SCHEMAS
  #########################################################################
  schemas:
  
    # ----------------------- BASIC/COMON SCHEMAS ------------------------------
    Result:
      type: string
      description: |
        Result value for most of the API calls
        * ok: Action processed successfully
        * processing: Action will be executed in asynchronous mode
        * error: Error
        * errorparams: Error in params
        * errorrights: Error you don't have rights
        * errorlicense: Your license doesn't allow to make it
      enum:
        - ok
        - processing
        - error
        - errorparams
        - errorrights
        - errorlicense
      example: errorparams
      
    ResultObject:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
          
    TextObject:
      type: object
      description: Simple object to exchange a single text
      properties:
        text:
          type: string
          example: What about the cucumber?
      required:
        - text
        
    WebhookObject:
      type: object
      properties:
        webhook:
          type: string
          format: uri
          example: 'https://myserver.com/send/callback/here'
      required:
        - webhook
        
    IMContactID:
      type: integer
      description: ID of the Contact this object belongs/refers to. Local user is always 0. 
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means there is no contact.
      example: 3
      
    IMContactID_Array:
      type: array
      items:
        $ref: '#/components/schemas/IMContactID'
      example: [7, 14, 130]  
      
    FavoriteID: 
      type: integer
      description: A Contact, a Chat Room, a Meeting Sequence, or others, can be marked as favorite,
        to be highlighted in some way, or to have a quick accesor in the UI.
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means this is not a favorite thing.
      example: 42  
      
    EntryID: 
      type: integer
      description: ID of the Entry this object belongs/refers to.
      example: 184  
      
    EntryID_Array:
      type: array
      items:
        $ref: '#/components/schemas/EntryID'
      example: [212, 213, 258]    
      
    FileID: 
      type: integer
      description: ID of the File this object belongs/refers to.
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means there is no file.
      example: 329  
      
    FileID_Array:
      type: array
      items:
        $ref: '#/components/schemas/FileID'
      example: [329, 340, 348]    
      
    ChatRoomID: 
      type: integer
      description: ID of the Chat Room this object belongs/refers to.
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means there is no chat room.
      example: 17
      
    ChatEventID: 
      type: integer
      description: ID of the Chat Event this object belongs/refers to.
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means there is no chat event.
      example: 45578
      
    MeetingSequenceID:
      type: integer
      description: Meeting Sequence ID. A Meeting Sequence is a group of periodical Meetings, 
        even a group of 1. They share, in the beginning, Meeting Participant list, Schedule, 
        altought it can be changed later. 
        It it values -1, it means there is no meeting sequence.
      example: 623805

    MeetingID:
      type: integer
      description: Meeting ID. A Meeting is a Video Collaboration Session.
        It it values -1, it means there is no meeting.
      example: 42571

    CallID:
      type: integer
      description: ID of the Call this object belongs/refers to.
        Unique in the application, they remain unchanged only the time you stay IM Logged.
        It it values -1, it means there is no call.
      example: 1

    CallParticipantID:
      type: integer
      description: ID of the Call Participant this object belongs/refers to. Local user is always 0 
        Unique in the call, they remain unchanged only the time you stay CALL connected.
        It it values -1, it means there is no call participant.
      example: 2
      
    CallStreamID:
      type: number
      description: ID of the stream this object belongs/refers to. Unique in the Call. 
        Valid only during the Call. It contains a 64 bit unsigned integer
      example: 2199023321089  
      
    CallQuestionID: 
      type: integer
      description: ID of the Call Question this object belongs/refers to. Unique in the call.
      example: 5
    
    FileFullPath:
      type: string
      description: Full Path of a local file. If it will be read, it must exist. 
        If it will be created, it must not exist.
      example: c:\path\to\my\local\media\VideoTutorial.mp4
      
    FileFullPath_Array:
      type: array
      items:
        $ref: '#/components/schemas/FileFullPath'
      
    DateTime_LocalTime_ISO8601:
      type: string
      description: |
        Date Time in format ISO 8601, https://www.w3.org/TR/NOTE-datetime, local time, without the offset
        * YYYY-MM-DDThh:mm:ss -> Local time, without the offset: THIS IS THE FORMAT USED IN THIS DOCUMENT
        * YYYY-MM-DDThh:mm:ssD -> Local time, with offset: 1997-07-16T19:20:30.45+01:00
        * YYYY-MM-DDThh:mm:ssZ -> UTC time
      example: '1979-06-09T18:27:10'
      
    DateTime_UTC_msec_from_epoch:  
      type: number
      description: 'It is a date time, UTC, expressed as the number of MILLISECONDS 
        that have elapsed since January 1, 1970 at 00:00:00 GMT (1970-01-01 00:00:00 GMT)'
      example: 268101000  
      
    DateTime_UTC_sec_from_epoch:  
      type: number
      description: 'It is a date time, UTC, expressed as the number of SECONDS 
        that have elapsed since January 1, 1970 at 00:00:00 GMT (1970-01-01 00:00:00 GMT)'
      example: 4631010
      
    Date_yyyymmdd:  
      type: string
      description: |
        Date, in format 'yyyymmdd'
        * yyyy: Year in 4 digits
        * mm: Month in 2 digits (1 to 12)
        * dd: Day in 2 digits (1 to 31)
        
        So, 19790609, to mean June 6th 1979
      example: 19790609
      
    TimeInterval_hhmmsszzz:
      type: string
      description: |
        Interval of time, in format 'hh:mm:ss.zzz'
        * hh: Hours in 2 digits, format 24h (0 to 23)
        * mm: Minutes in 2 digits (0 to 59)
        * ss: Seconds in 2 digits (0 to 59)
        * zzz: Milliseconds in 3 digits (0 to 999)
      example: '00:04:28.321'
      
    TimeInterval_hhmmss:
      type: string
      description: |
        Interval of time, in format 'hh:mm:ss'
        * hh: Hours in 2 digits, format 24h (0 to 23)
        * mm: Minutes in 2 digits (0 to 59)
        * ss: Seconds in 2 digits (0 to 59)
      example: '00:04:28'
      
    MIME-Type:
      type: string
      description: A media type (formerly known as MIME type) is a two-part identifier for file formats 
        and format contents transmitted on the Internet. 
        The Internet Assigned Numbers Authority (IANA) is the official authority 
        for the standardization and publication of these classifications.
        
        
        https://www.iana.org/assignments/media-types/media-types.xhtml
      example:
        image/jpeg, text/xml, application/vnd.ms-powerpoint, application/json
      
    # ------------------------------ IM SCHEMAS --------------------------------    
    IMConnectResult:
      type: string
      description: IM Connection/Disconnection operation result
      enum:
        - ok
        - disconnectedbyuser
        - error
        - networkerror
        - autherror
        - credentialserror
        - clientversion
        - gdpr
      example: credentialserror
      
    IMConnectionState:
      type: string
      description: IM Connection State
      enum:
        - disconnected
        - connecting
        - connected
        - disconnecting
        - reconnecting
        
    IMContactType:
      type: string
      description: Type of an IM Contact
      enum:
        - im
        - collaborateroom
        - offline
        
    IMPresence:
      type: string
      description: State of the presence of an IM Contact
      enum:
        - invalid
        - offline
        - offlineonmobile
        - dnd
        - away
        - invisible
        - available
        - collaboratecall
        - spontaniacall
      example: available

    IMFriendShip:
      type: string
      description: >-
        Friendship relationship between local IM Contact and everyone of the
        remote IM Contacts
      enum:
        - unknown
        - searchresult
        - friends
        - pendingremoteanswer
        - pendinglocalanswer
        - endingBoth
        - subcribed
        - subcribedPending
        - remoteSubcribed
        - remotePendingSubcribed
        - rosterOnly
      example: subcribed

    EndPointType:
      type: string
      description: Enumerated value with options set for EndPoint type. Default is unknown
      enum:
        - unknown
        - pstn
        - h323
        - sip
      example: h323

    EndPointParticipant:
      type: object
      properties:
        endPointType:
          $ref: '#/components/schemas/EndPointType'
        address:
          type: string
          example: 'H323:123.123.123.123'
        contactID:
          $ref: '#/components/schemas/IMContactID'
      required:
        - address

    ContactBase:
      description: >-
        Set of data describing a Contact, which is the base for some specific
        Contact types
      type: object
      properties:
        displayName:
          type: string
          example: John Johnson
        initials:
          type: string
          example: JJ
        nickName:
          type: string
          example: johny
        color_rrggbb:
          type: string
          example: '#ff0000'
        hasImage:
          type: boolean
          example: true
        isLocal:
          type: boolean
          example: false

    IMContact:
      description: Set of data describing a IM Contact
      allOf:
        - $ref: '#/components/schemas/ContactBase'
        - type: object
          properties:
            contactID:
              $ref: '#/components/schemas/IMContactID'
            contactType:
              $ref: '#/components/schemas/IMContactType'
            state:
              $ref: '#/components/schemas/IMPresence'
            stateMessage:
              type: string
              example: working hard
            presenceRequestMessage:
              type: string
            canChat:
              type: boolean
            canAudioCall:
              type: boolean
            canVideoCall:
              type: boolean
            canInviteMeeting:
              type: boolean
            canAddToChannel:
              type: boolean
            canRemove:
              type: boolean
            friendShip:
              $ref: '#/components/schemas/IMFriendShip'
            isFavorite:
              type: boolean
            favoriteID:
              type: integer

    # ------------------------------ FILE SCHEMAS --------------------------------    
    FileType:
      type: string
      description: Predefined set of types a file can be (only one)
      enum:
        - unknown
        - image
        - video
        - whiteboard
        - document
      example: document
      
    FileState:
      type: string
      description: Possible values for the state of a file
      enum:
        - unknown
        - selected
        - uploading
        - uploaded
        - inCloud
        - downloading
        - downloaded
        - cancelled
        - error
        - removed
      example: downloading
      
    File:  
      type: object
      description: Set of data describing a File in the application
      properties:
        fileID:
          $ref: '#/components/schemas/FileID'
        fileType:
          $ref: '#/components/schemas/FileType'
        mimeType:
          $ref: '#/components/schemas/MIME-Type'
        size_bytes:
          type: number
          description: File size in bytes
        displayName:
          type: string
          description: Filename, including extension
          example: 'Network-Architecture-rev3-2.pdf'
        isInLocal:
          type: boolean
          description: File is in the local machine
        localFullPath:
          $ref: '#/components/schemas/FileFullPath'
        thumbnail_localFullPath:
          $ref: '#/components/schemas/FileFullPath'
        downloadUrl:
          type: string
          format: uri
          description: URL where file is hosted, and can be downloaded
          example: https://collaboratecloudserver.data/5454546/453354/178/54564.mp4
        hasThumbnail:
          type: boolean
          description: File has thumbnail, or it should show something generic based on type
        fileState:
          $ref: '#/components/schemas/FileState'
        progress:
          type: integer
          description: Percentage from file downloaded, 0 to 100
          example: 37
        fileTime_msec_from_epoch:
          $ref: '#/components/schemas/DateTime_UTC_msec_from_epoch'
        contactID_uploader:
          $ref: '#/components/schemas/IMContactID'
        isMeetingFile:
          type: boolean
          description: This file was exchanged in the context of a meeting (Meeting Sequence + Meeting)
        meetingSequenceID:
          $ref: '#/components/schemas/MeetingSequenceID'
        meetingID:
          $ref: '#/components/schemas/MeetingID'
        isChatRoomFile:
          type: boolean
          description: This file was exchanged in the context of a chat room (Chat Room + Chat Event)
        chatRoomID:
          $ref: '#/components/schemas/ChatRoomID'
        chatEventID:
          $ref: '#/components/schemas/ChatEventID'
        isARecording:
          type: boolean
          description: This file is stored in the cloud, as a Meeting Recording.
        recordingDuration_hhmmss:
          $ref: '#/components/schemas/TimeInterval_hhmmss'
          
    # ------------------------------ ENTRIES SCHEMAS ----------------------------      
    EntryType:
      type: string
      description: An Entry in the application can have only one of these values
      enum:
        - invalid
        - agenda
        - note
      example: agenda
      
    EntryToDoType:
      type: string
      description: A ToDo in the application can have only one of these values
      enum:
        - invalid
        - personal
        - chatroom
        - meeting
      example: meeting
      
    EntryField:
      type: object
      description: Entry item
      properties: 
        entryID:
          $ref: '#/components/schemas/EntryID'
        entryText:
          type: string
          description: Text context, the Entry itself
          example: We discuss about the weekend menu
        mentions_imcontactids:
          type: array
          items:
            $ref: '#/components/schemas/IMContactID'
          example: [3, 5, 7, 9]
            
    EntryToDo:
      type: object
      description: A ToDo (something declared as pending, or as To-Do). a ToDo is an Entry
      allOf:
        - $ref: '#/components/schemas/EntryField'
        - type: object
          properties:
            toDoType:
              $ref: '#/components/schemas/EntryToDoType'
            assignedTo_imcontactids:
              type: array
              description: the Contact ID list of assigned users
              items:
                $ref: '#/components/schemas/IMContactID'
              example: [0, 2, 4]  
            assignedBy_imcontactid:
              $ref: '#/components/schemas/IMContactID'
            done:
              type: boolean
              description: This ToDo was marked as DONE, or it is still pending to be finished
            dueDate_yyyymmdd:
              $ref: '#/components/schemas/Date_yyyymmdd'
            creationTime_msec_from_epoch:
              $ref: '#/components/schemas/DateTime_UTC_msec_from_epoch'
            isChatRoomToDo:
              type: boolean
              description: This toDo was created in the context of a chat room
            chatRoomID:
              $ref: '#/components/schemas/ChatRoomID'
            isMeetingToDo:
              type: boolean
              description: This toDo was created in the context of a meeting (Meeting Sequence + Meeting)
            meetingSequenceID:
              $ref: '#/components/schemas/MeetingSequenceID'
            meetingID:
              $ref: '#/components/schemas/MeetingID'
              
    # ------------------------------ CHAT SCHEMAS ----------------------------              
    ChatEventState:
      type: string
      description: Possible values a Chat Event state can be
      enum:
        - unknown
        - error
        - cancelled
        - received
        - sent
        - sending
        - uploading
        - downloading
        - downloaded
        - deleted
      example: sent
    
    ChatEventType:
      type: string
      description: Possible values a Chat Event can be
      enum: 
        - invalid
        - chatMessage
        - file
        - notificationTitleUpdated
        - notificationDescriptionUpdated
        - notificationPublic
        - notificationAddedParticipants
        - notificationJoinedParticipant
        - notificationLeaveParticipants
        - notificationOutcastParticipant
        - notificationCallStarted
        - notificationCallChangeChat
        - notificationCallNoAnswer
        - notificationCallMissed
        - notificationCallFinished
        - notificationCallError
      example: notificationCallMissed
      
    ChatSearchedEvent:
      type: object
      description: Class used to receive found events when search in the local data base
      properties: 
        chatEventType:
          $ref: '#/components/schemas/ChatEventType'
        message:
          type: string
          description: Message associated to the event
        time_local_ISO8601:
          $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
        time_utc_msecs_from_epoch:
          $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
        chatRoomID:
          $ref: '#/components/schemas/ChatRoomID'
        contactID_sender:
          $ref: '#/components/schemas/IMContactID'
        meetingSequenceID:
          $ref: '#/components/schemas/MeetingSequenceID'
        meetingID:
          $ref: '#/components/schemas/MeetingID'
        hasFile:
          type: boolean
          description: This event has an associated file
        file:
          $ref: '#/components/schemas/File'
        isPrivate:
          type: boolean
          description: This event was sent privately, only to some contacts
        addressedTo_imcontactids:
          type: array
          description: In private events, the Contact ID list of receivers
          items:
            $ref: '#/components/schemas/IMContactID'
          example: [3, 6, 9]  
    
    ChatEvent:
      type: object
      description: An event in a chat
      allOf:
        - type: object
          properties:
            chatEventID:
              $ref: '#/components/schemas/ChatEventID'
            chatEventState:
              $ref: '#/components/schemas/ChatEventState'
            isFromCall:
              type: boolean
              description: This event was created in the context of a call 
                (a Call Participant sent it in a Call)
            callID:
              $ref: '#/components/schemas/CallID'
            callParticipantID:
              $ref: '#/components/schemas/CallParticipantID'
            involved_imcontactids:
              type: array
              description: Contacts involved in the message or notification. 
                In case of notifications related to contact event, 
                like 'Notification Added Participants'
              items:
                $ref: '#/components/schemas/IMContactID'
              example: [4, 8, 12]
        - $ref: '#/components/schemas/ChatSearchedEvent'      

    # ------------------------------ MEETING SCHEMAS ----------------------------
    MeetingEnvironment:
      type: string
      description: Environment a Meeting can belong to
      enum:
        - meeting
        - classroom
        - webinar
      example: webinar
      
    MeetingProperties:
      type: object
      description: Configurable features of a meeting
      properties:
        joinBeforeHost: 
          type: boolean
          description: Particiapnts can join to meeting before host
        audioServiceAllow: 
          type: boolean
          description: Particiapnts can activate their audio, not supported in classroom and webinar
        videoServiceAllow: 
          type: boolean
          description: Particiapnts can activate their video, not supported in classroom and webinar
        textServiceAllow: 
          type: boolean
          description: Particiapnts can chat, DEPRECETED
        sharingServiceAllow: 
          type: boolean
          description: Particiapnts can start to share
        controlServiceAllow: 
          type: boolean
          description: Particiapnts can activate remote control
        whiteboardServiceAllow: 
          type: boolean
          description: Particiapnts can start whiteboard/annotation
        fileServiceAllow: 
          type: boolean
          description: Particiapnts can share files, DEPRECETED
        allServicesActive: 
          type: boolean
          description: All services active
        recordAtServer: 
          type: boolean
          description: Record meeting at server, you have to have the right, check license
        privateVideos: 
          type: boolean
          description: Available in classroom and webinar, only host and presenters receive video from participants
        sessionStartsLocked: 
          type: boolean
          description: Available in classroom and webinar, host and presenters can connect to the meeting, participants that try to connect to the meeting are keeping in waiting state while meeting is locked, when host/presenters unlock meeting, they connect to the meeting. Meanwhile participant are in waiting state they could receive a video or image if the meeting is configured for it
        allActive: 
          type: boolean
          description: All properties active
      
    MeetingState:
      type: string
      description: States a Meeting can be in
      enum:
        - none
        - creating
        - created
        - waitingForHost
        - active
        - finished
        - cancelled
        - noLicense
        - deleted
      example: active  
      
    MeetingParticipantType:
      type: string
      description: Types a Meeting Participant can be
      enum:
        - im
        - email
        - location
      example: email  

    MeetingParticipantRole:
      type: string
      description: Roles a Meeting Participant can have
      enum:
        - unknown
        - participant
        - presenter
        - host
      example: presenter
      
    MeetingParticipantState:
      type: string
      description: States a Meeting Participant be in
      enum:
        - unknown
        - invited
        - maybe
        - accepted
        - declined
        - cancelled
        - deleted
        - connected
        - disconnected
      example: connected  
      
    MeetingSequenceState:
      type: string
      description: States a Meeting Sequence be in
      enum:
        - unknown
        - alive
        - finished
        - cancelled
        - deleted
      example: alive
      
    MeetingSequenceType:
      type: string
      description: A Meeting Sequence, according to periodicity, have be one of these values
      enum:
        - now
        - once
        - repeatWeekly
        - repeatMonthlyWeek
        - repeatMonthlyDay
        - unknown
      example: now

    MeetingSequenceRepeatWeekly:
      type: string
      description: 'A Meeting Sequence, typed Repeat-Weekly, has this additional configuration:
        which days in the week is configured to happen'
      enum:
        - noneDay
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
        - weekdays
        - everyday
      example: tuesday
      
    MeetingSequenceRepeatMonthly:
      type: string
      description: 'A Meeting Sequence, typed Repeat-Montly, has this additional configuration:
        which weeks in the month is configured to happen'
      enum:
        - noneWeek
        - firstInMonth
        - secondInMonth
        - thirdInMonth
        - fourthInMonth
        - lastInMonth
        - everyWeek
      example: firstInMonth
      
    MeetingSearchField:
      type: string
      description: 'Fields possible to search for, when performing a search in Meetings'
      enum:
        - notes
        - agenda
        - todos
        - description
        - title
        - allfields
      example: allfields
      
    MeetingCreateResult:
      type: string
      description: Possible results, when a Meeting Creation request is sent
      enum: 
        - noError
        - error
        - errorType
        - errorDuration
        - errorStartDate
        - errorFinishDate
        - errorDays
        - errorWeeks
        - errorParticipants
        - errorProperties
        - errorInvalidHost
        - errorLicenseAvailable
      example: errorDuration   
      
    MeetingParticipant:
      description: Set of data describing a Meeting Participant
      allOf:
        - $ref: '#/components/schemas/ContactBase'
        - type: object
          properties:
            meetingParticipantType:
              $ref: '#/components/schemas/MeetingParticipantType'
            meetingParticipantRole:
              $ref: '#/components/schemas/MeetingParticipantRole'
            contactID:
              $ref: '#/components/schemas/IMContactID'
            meetingParticipantState:
              $ref: '#/components/schemas/MeetingParticipantState'
            isHost:
              type: boolean
              description: This meeting participant is the host of the meeting
              
    MeetingParticipants_Data:
      type: object
      properties:
        meetingparticipants_contacts:
          type: array
          description: Participants (IM Contacts or Invited-by-Email contacts), 
            whose role in Meeting is Participant or Host.
          items:
            $ref: '#/components/schemas/MeetingParticipant'
        meetingparticipants_collaboraterooms:
          type: array
          description: 'Participants (IM Contacts all of them), whose role in Meeting is Participant, 
            and they are typed `collaborateroom`'
          items:
            $ref: '#/components/schemas/MeetingParticipant'
        meetingparticipants_presenters:
          type: array
          description: 'Participants (IM Contacts typed `im` or `collaborateroom`, or Invited-by-Email contacts), whose role in Meeting is Presenter'
          items:
            $ref: '#/components/schemas/MeetingParticipant'       
              
    MeetingAgenda_Data:
      type: object
      properties:
        agenda:
          type: array
          items:
            $ref: '#/components/schemas/EntryField'       
              
    MeetingNotes_Data:
      type: object
      properties:
        notes:
          type: array
          items:
            $ref: '#/components/schemas/EntryField'       
              
    MeetingToDos_Data:
      type: object
      properties:
        toDos:
          type: array
          items:
            $ref: '#/components/schemas/EntryToDo'       
              
    MeetingFiles_Data:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'       
              
    MeetingRecordings_Data:
      type: object
      properties:
        recordings:
          type: array
          items:
            $ref: '#/components/schemas/File'       
              
    MeetingChatMessagesLast_Data:
      type: object
      properties:
        chatMessagesLast:
          type: array
          items:
            $ref: '#/components/schemas/ChatEvent'       
              
    Meeting:          
      description: A Meeting is one of the most important concepts in appilcation. 
        It is a virtual meeting, a time while a set of people meet, communicate, share content
        and many other thing.
      allOf:
        - type: object
          properties:
            meetingID:
              $ref: '#/components/schemas/MeetingID'
            meetingSequenceID:
              $ref: '#/components/schemas/MeetingSequenceID'
            meetingEnvironment:
              $ref: '#/components/schemas/MeetingEnvironment'
            maxParticipants:
              type: integer
              description: Maximum number of participants are allowed in this Meeting
              example: 200
            state:
              $ref: '#/components/schemas/MeetingState'
            title:
              type: string
              description: Name to show given to the Meeting
              example: School Antonio Project Management
            description:
              type: string
              description: Description of the Meeting
            meetingProperties:
              $ref: '#/components/schemas/MeetingProperties'
            password:
              type: string
              description: Password set to the Meeting
            startDateTime_local_ISO8601:
              $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
            startDateTime_utc_secs_from_epoch:
              $ref: '#/components/schemas/DateTime_UTC_sec_from_epoch'
            finishDateTime_local_ISO8601:
              $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
            duration_hhmmss:
              $ref: '#/components/schemas/TimeInterval_hhmmss'
            chatRoomID:
              $ref: '#/components/schemas/ChatRoomID'
            host:
              $ref: '#/components/schemas/MeetingParticipant'
            canIAddFiles:
              type: boolean
              description: Can I add files to the Meeting
            canIManageAgenda:
              type: boolean
              description: Can I add/remove/modify agendas in this Meeting
            canIManageNotes:
              type: boolean
              description: Can I add/remove/modify notes in this Meeting
            canICreateToDos:
              type: boolean
              description: Can I add To-Dos in this Meeting
            lastUpdate_dateTime_local_ISO8601:
              $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
            lastUpdate_meetingParticipant:
              $ref: '#/components/schemas/MeetingParticipant'
            canIModifyDateDuration:
              type: boolean
              description: Can I modify start date time or duration of this Meeting
            canIManageRecordings:
              type: boolean
              description: Can I add/remove Recordings in this Meeting
            canIJoinWithVideo:
              type: boolean
              description: Can I join this Meeting with Video
        - $ref: '#/components/schemas/MeetingParticipants_Data'
        - $ref: '#/components/schemas/MeetingAgenda_Data'    
        - $ref: '#/components/schemas/MeetingNotes_Data'    
        - $ref: '#/components/schemas/MeetingToDos_Data'    
        - $ref: '#/components/schemas/MeetingFiles_Data'    
        - $ref: '#/components/schemas/MeetingRecordings_Data'    
        - $ref: '#/components/schemas/MeetingChatMessagesLast_Data'    
          
    MeetingSequence:
      description: A group of Meetings. A Meeting Sequence is a group of periodical Meetings, 
        even a group of 1. They share, in the beginning, Meeting Participant list, Schedule, 
        altought it can be changed later.
      allOf:
        - type: object
          properties:
            meetingSequenceID:
              $ref: '#/components/schemas/MeetingSequenceID'
            state:
              $ref: '#/components/schemas/MeetingSequenceState'
            meetingEnvironment:
              $ref: '#/components/schemas/MeetingEnvironment'
            maxParticipants:
              type: integer
              description: Maximum number of participants are allowed in this Meeting
              example: 300
            meetingType:
              $ref: '#/components/schemas/MeetingSequenceType'
            dateTimeStart_local_ISO8601:
              $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
            dateTimeEnd_local_ISO8601:
              $ref: '#/components/schemas/DateTime_LocalTime_ISO8601'
            daysOfWeek:
              type: array
              items:
                $ref: '#/components/schemas/MeetingSequenceRepeatWeekly'
            weeksOfMonth:
              type: array
              items:
                $ref: '#/components/schemas/MeetingSequenceRepeatMonthly'
            repeatEach:
              type: integer
              description: It completes the Repeat configuration. If repeat weekly, every W weeks, 
                if repeat is monthly, every M months
              example: 3
            title:
              type: string
              description: Name to show given to the Meeting
              example: School Antonio Project Management
            description:
              type: string
              description: Description of the Meeting
            meetingProperties:
              $ref: '#/components/schemas/MeetingProperties'
            host:
              $ref: '#/components/schemas/MeetingParticipant'
            meetingID_next:
              $ref: '#/components/schemas/MeetingID'
            meetingID_next_skipCancelled:
              $ref: '#/components/schemas/MeetingID'
            meetingID_last:
              $ref: '#/components/schemas/MeetingID'
            meetingID_current:
              $ref: '#/components/schemas/MeetingID'
            meetings:
              type: array
              items:
                $ref: '#/components/schemas/Meeting'
            amIHost:
              type: boolean
              description: Local user is host of this Meeting Sequence
            meetingParticipantRole_local:
              $ref: '#/components/schemas/MeetingParticipantRole'
            canISetAttend:
              type: boolean
              description: 'Can I declare my Meeting Participant Assistance: Yes/Maybe/No'
            canIChangeParticipants:
              type: boolean
              description: Can I add/remove participants in this Meeting Sequence
            canIChangeMeetings:
              type: boolean
              description: Can I add/remove meetings in this Meeting Sequence
            canIManageProperties:
              type: boolean
              description: Can I set/unset properties in this Meeting Sequence
            canICancelSequence:
              type: boolean
              description: Can I cancel this Meeting Sequence
            canIChangeTitle:
              type: boolean
              description: Can I change title in this Meeting Sequence
            canIManageAgenda:
              type: boolean
              description: Can I add/remove/modify agendas in this Meeting Sequence
            canIManageNotes:
              type: boolean
              description: Can I add/remove/modify notes in this Meeting Sequence
            canICreateToDos:
              type: boolean
              description: Can I add To-Do in this Meeting Sequence
            canIAddFiles:
              type: boolean
              description: Can I add files in this Meeting Sequence
            canIModifyDateDuration:
              type: boolean
              description: Can I modify start date time or duration in this Meeting Sequence
            isFavorite:
              type: boolean
              description: Is this Meeting Sequence a favorite
            favoriteID:
              $ref: '#/components/schemas/FavoriteID'
            chatRoomID:
              $ref: '#/components/schemas/ChatRoomID'
            meetingSequenceUrl:
              type: string
              format: uri
              description: Coonnection URL. The user can share it via email or any other way,
                for any other users to connect by clicking on it
              example: 'https://mycollaboratespaceserver.gr/363456345376456'  
        - $ref: '#/components/schemas/MeetingParticipants_Data'
        - $ref: '#/components/schemas/MeetingFiles_Data'        
        - $ref: '#/components/schemas/MeetingRecordings_Data'        
        
    # ------------------------------ DEVICE SCHEMAS ----------------------------
    DevicePTZControl:
      type: string
      description: PTZ (Pan-Tilt-Zoom) set of existing controls
      enum:
        - pan
        - tilt
        - roll
        - zoom
        - home
        - preset
      example: tilt

    DevicePTZAction:
      type: string
      description: PTZ (Pan-Tilt-Zoom) possible actions to be sent
      enum:
        - stop
        - up
        - down
        - right
        - left
        - zoomin
        - zoomout
        - home
      example: zoomin
      
    # ------------------------------ CALL SCHEMAS ------------------------------
    CallParticipantRole:
      type: string
      description: Enumerated value with options set for state of a Call Participant Role
      enum:
        - moderator
        - participant
        - presenter

    CallParticipantState:
      type: string
      description: Enumerated value with options set for state of a Call Participant
      enum:
        - creating
        - invited
        - connectedInOther
        - ringing
        - accepted
        - connecting
        - reconnecting
        - connected
        - hangUp
        - disconnected
        - noAnswer
        - decline
        - busy
        - error
        - unknown

    CallParticipant:
      description: Set of data describing a Call Participant
      allOf:
        - $ref: '#/components/schemas/ContactBase'
        - type: object
          properties:
            callParticipantID:
              $ref: '#/components/schemas/CallParticipantID'
            callID:
              $ref: '#/components/schemas/CallID'
            isIMParticipant:
              type: boolean
            IMContactID:
              $ref: '#/components/schemas/IMContactID'
            endPointType:
              $ref: '#/components/schemas/EndPointType'
            endPointAddress:
              type: string
            role:
              $ref: '#/components/schemas/CallParticipantRole'
            state:
              $ref: '#/components/schemas/CallParticipantState'
            isSpeaking:
              type: boolean
            canReceiveChat:
              type: boolean
            canReceiveDTMF:
              type: boolean
            isRecording:
              type: boolean
            DTMFString:
              type: string
            services:
              $ref: '#/components/schemas/CallServicesState'

    CallParticipant_Speaking:   
      description: Call Participant is speaking
      type: object
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callParticipantID:
          $ref: '#/components/schemas/CallParticipantID'
        isSpeaking:
          type: boolean

    CallServiceState:
      type: object
      description: Set of data describing the state of a single Call Service
      properties:
        active:
          type: boolean
        forbidden:
          type: boolean
        canManage:
          type: boolean
        userCanManage:
          type: boolean

    CallServicesState:
      type: object
      description: Set of data describing the state of Call Services
      properties:
        canGiveModeration:
          type: boolean
        canPromotePresenter:
          type: boolean
        voice:
          $ref: '#/components/schemas/CallServiceState'
        video:
          $ref: '#/components/schemas/CallServiceState'
        sharing:
          $ref: '#/components/schemas/CallServiceState'
        remoteControl:
          $ref: '#/components/schemas/CallServiceState'
        text:
          $ref: '#/components/schemas/CallServiceState'
        whiteboard:
          $ref: '#/components/schemas/CallServiceState'
        fileTransfer:
          $ref: '#/components/schemas/CallServiceState'
          
    CallServicesStateBool:
      type: object
      description: Value (Activated or Deactivated) for every service in the call
      properties:
        voice:
          type: boolean
        video:
          type: boolean
        sharing:
          type: boolean
        remoteControl:
          type: boolean
        text:
          type: boolean
        whiteboard:
          type: boolean
        fileTransfer:
          type: boolean
          
    CallPlayMediaFileState:
      type: string
      description: State values for a File shared as a Media in a Call
      enum:
        - unknown
        - creating
        - loaded
        - playing
        - paused
        - speed
        - stopped
        - error
      example: playing
      
    CallPlayMediaFile:
      type: object
      description: File shared by local user as a Media in a Call
      properties:    
        callID:
          $ref: '#/components/schemas/CallID'
        callStreamID:
          $ref: '#/components/schemas/CallStreamID'
        filefullpath:
          $ref: '#/components/schemas/FileFullPath'
        duration_hhmmsszzz:  
          $ref: '#/components/schemas/TimeInterval_hhmmsszzz'
        position_hhmmsszzz:  
          $ref: '#/components/schemas/TimeInterval_hhmmsszzz'
        state:
          $ref: '#/components/schemas/CallPlayMediaFileState'
        playInLoop:
          type: boolean
          description: Media File is playing in a loop
        isSetSpeedSupported:
          type: boolean
          description: Media File suports changing/setting the speed play
          example: false
        isSetPlayPositionSupported:
          type: boolean
          description: Media File suports changing/setting the play position
          example: true
        speed:
          type: number
          description: Play speed in x1, x2 ...
          example: 2
    
    CallStreamType:
      type: string
      description: Types a media stream can be
      enum:
        - unknown
        - audio
        - video
        - sharing
        - whiteboard
      example: video
      
    CallStreamData:      
      type: object
      description: Set of data describing a Call Stream
      properties:
        callParticipantID:
          $ref: '#/components/schemas/CallParticipantID'
        callStreamID:
          $ref: '#/components/schemas/CallStreamID'
        streamType:  
          $ref: '#/components/schemas/CallStreamType'
        isSpeaking:
          type: boolean
        availablePTZControl:
          type: boolean
        availablePTZControlLocal:
          type: boolean
        isSharedVideo:
          type: boolean
        isSharingControllable:
          type: boolean
        isMediaFile:
          type: boolean
        mediaFile:
          $ref: '#/components/schemas/CallPlayMediaFile'
        hasAnnotation:
          type: boolean
        isSharedAppMinimized:
          type: boolean
          
    CallStreamData_Speaking:      
      type: object
      description: Call Stream is speaking
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callStreamID:
          $ref: '#/components/schemas/CallStreamID'
        isSpeaking:
          type: boolean
          
    CallDevicePTZAction:
      type: object
      description: Complete PTZ Action object in a call
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callStreamID:
          $ref: '#/components/schemas/CallStreamID'
        callParticipantID:
          $ref: '#/components/schemas/CallParticipantID'
        ptzAction:
          $ref: '#/components/schemas/DevicePTZAction'
          
    CallRecordingFormat:
      type: string
      description: |
        Format supported when Recording in a Call: 
        * mp4: Record in a local file, format MP4
        * wconf: Record in a local file, format WCONF, which is a propietary format
        * server: Record in the server, and the recording will be available to be shared with others
      enum:
        - mp4
        - wconf
        - server
      example: mp4
    
    CallRecordingMp4Quality:
      type: string
      description: 'Qualities to choose when Recording Locally a Call, in MP4 format'
      enum:
        - low
        - medium
        - high
      example: medium

    CallRecordingState:
      type: string
      description: State of Recording in a Call. It is a composition of some of them
      enum:
        - 'no'
        - mp4
        - wconf
        - server
        - other
      example: server
    
    CallState:
      type: string
      description: Enumerated value with options set for state of a Call
      enum:
        - unknown
        - creating
        - ringing
        - accepted
        - connecting
        - waitingInQueue
        - waitingParticipants
        - reconnecting
        - connected
        - connectedInOtherDevice
        - disconnecting
        - disconnected
        - rejected
        - error
      example: connecting

    CallContext:
      type: string
      description: The Context where the Call was originated
      enum:
        - unknown
        - chat
        - channel
        - meeting
        - classroom
        - webinar
      example: classroom  

    CallHandRaiseState:
      type: string
      description: State of a Hand Raise request
      enum:
        - unknown
        - pending
        - accepted
        - declined
        - cancelled
        - finished
      example: pending

    CallHandRaiseRequest:
      type: object
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callParticipantID:
          $ref: '#/components/schemas/CallParticipantID'
        handRaiseState:
          $ref: '#/components/schemas/CallHandRaiseState'
        requestText:
          type: string
          description: 'I would like to say something, please'
        requestTime_iso8601_localtime:
          type: string
          example: '2007-11-03T24:12:03'
        answerText:
          type: string

    CallRequestType:
      type: string
      description: Type of Requests can be received during an active Call
      enum:
        - unknown
        - acceptModeration
        - transferModeration
        - acceptRemoteControl
        - shareApplication
        - activateAudio
        - activateVideo
      example: acceptModeration

    CallRequestState:
      type: string
      description: State values a Call Request can have
      enum:
        - unknown
        - pending
        - timeOut
        - cancel
        - accepted
        - declined
        - waitingAnswer
        - error
      example: pending

    CallRequest:
      type: object
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callParticipant:
          $ref: '#/components/schemas/CallParticipant'
        callRequestType:
          $ref: '#/components/schemas/CallRequestType'
        callRequestState:
          $ref: '#/components/schemas/CallRequestState'

    CallRequestAnswer_Data:
      type: object
      properties:
        callParticipantID:
          $ref: '#/components/schemas/CallParticipantID'
        callRequestType:
          $ref: '#/components/schemas/CallRequestType'

    CallQuestionState:
      type: string
      enum:
        - openUnknwon
        - processing
        - open
        - answered
        - answeredPrivate
        - answeredByVoice
        - dismissed
        - cancelled
        - error
      example: answered

    CallQuestionAction:
      type: string
      enum:
        - dismiss
        - cancel
        - answerwithtext
        - answerwithtext_private
        - answerwithvoice
      example: answerwithtext
      
    CallQuestion:
      type: object
      description: Set of data describing a Question in call
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        callQuestionID:
          $ref: '#/components/schemas/CallQuestionID'
        callQuestionState:
          $ref: '#/components/schemas/CallQuestionState'
        questionText:
          type: string
          description: The question itself
          example: how do you say hello in Chinese?
        questionTime_secs_from_epoch_utc:
          type: integer
          description: Time when question was created, in seconds, from Epoch Time.
        questionerDisplayname:  
          type: string
          description: Display name of the user who made the question
        questionerIsMe:
          type: boolean
          description: Question was done by local user
        answerText:
          type: string
          description: The answer to the question, if it was answered by text
          example: Hello in Chinese, you say Ni Hao
        answerTime_secs_from_epoch_utc:
          type: integer
          description: Time when question was answered (if answered), in seconds, from Epoch Time.
        answererDisplayname:  
          type: string
          description: Display name of the user who answered the question
        answererIsMe:
          type: boolean
          description: Answer was done by local user  
      required:
        - callID
        - callQuestionID
        - callQuestionState
        - questionText
        - questionTime_secs_from_epoch_utc
        - questionerDisplayname
        - questionerIsMe

    CallType:
      type: string
      description: Enumerated value with values for Type of a Call
      enum:
        - audio
        - video
        
    CallError:
      type: string
      description: When a Call finishes, or Call attempt, an error is reported with the cause of finishing.
      enum:
        - errorNoError
        - errorGeneric
        - errorInvalidPassword
        - errorInvalidParams
        - errorModeratorNotConnected
        - errorSessionID
        - errorServer
        - errorSessionFull
        - errorCredentialsRequired
        - errorNoLicence
        - errorNameInUse
        - errorAlreadyConnected
        - errorModeratorInSession
        - errorNotAuthorized
        - errorMeetingTime
        - errorNetwork
        - errorModeratorPassword
        - errorVersion
        - errorExpired
        - errorHostInUse
        - errorTempUnAvailable
      example: errorNoLicence   
      
    CallInvitable:
      type: string
      description: Types can be invited to a call. It can be 'noInvite', which means Invitation to call is not possible
      enum: 
        - noInvite
        - contacts
        - emails
        - phones
        - endpoints
      example: emails  
      
    CallCanRecord:
      type: string
      description: A Call can be recorded with some of these options
      enum:
        - noAllowed
        - locally
        - atServer
      example: atServer  

    CallConnectivity:
      type: string
      description: Possible values for connectivity in call. High level values, no details about bandwidth.
      enum:
        - good
        - bad
        - veryBad

    CallService:
      type: string
      description: Enumerated value with options set for Service in a Call
      enum:
        - voice
        - video
        - sharing
        - remoteControl
        - text
        - whiteboard
        - fileTransfer
      example: sharing

    CallData:
      type: object
      description: Set of data describing a Call
      properties:
        callID:
          $ref: '#/components/schemas/CallID'
        context:
          $ref: '#/components/schemas/CallContext'  
        callType:
          $ref: '#/components/schemas/CallType'  
        callTime_hhmmsszzz:  
          $ref: '#/components/schemas/TimeInterval_hhmmsszzz'
        callError:
          $ref: '#/components/schemas/CallError'  
        state:
          $ref: '#/components/schemas/CallState'
        callparticipants:
          type: array
          items:
            $ref: '#/components/schemas/CallParticipant'
        amIModerator:
          type: boolean
          description: I have moderator role in this call
        amIParticipant:
          type: boolean
          description: I have participant role in this call
        callstreams:
          type: array
          items:
            $ref: '#/components/schemas/CallStreamData'
        callhandraises:
          type: array
          items:
            $ref: '#/components/schemas/CallHandRaiseRequest'
        callrequests:
          type: array
          items:
            $ref: '#/components/schemas/CallRequest'
        canIInvite:
          type: boolean
          description: Can I add participants to this call
        invitableTypes:
          type: array
          description: Get type of participants can be invited to this call.
          items:
            $ref: '#/components/schemas/CallInvitable'
        maxNumberParticipantsICanAdd:
          type: integer
          description: Get the maximum number of participants that you can add to this call
        canIHangParticipant:
          type: boolean
          description: Can I hang a participant
        canIRecord:
          type: array
          description: Can I record the session
          items:
            $ref: '#/components/schemas/CallCanRecord'
        isChatAvailable:
          type: boolean
          description: Is chat available in the call.
        recordingState:
          type: array
          description: Get record session current state
          items:
            $ref: '#/components/schemas/CallRecordingState'
        callparticipantsrecording:
          type: array
          description: Get the list of participants that are recording the call
          items:
            $ref: '#/components/schemas/CallParticipant'
        canModeratorControlMyPTZCamera:
          type: boolean
          description: Moderator can control my PTZ camera
        defaultManageServices:
          $ref: '#/components/schemas/CallServicesStateBool'
        callConnectivity:
          $ref: '#/components/schemas/CallConnectivity'
        canIEndForAll:
          type: boolean
          description: Can I finish call or meeting for all participants
        locked:
          type: boolean
          description: Is meeting locked
        waitingParticipantsCount:
          type: integer
          description: Get the number of participants that are waiting for connecting to the meeting in case the meeting is locked
        canILockUnLockMeeting:
          type: boolean
          description: Can I Lock/UnLock a meeting
        privateVideos:
          type: boolean
          description: Videos are privates. In a classroom or webinar videos from participants are received only 
            by host and presenters in case of private, or by everyone in case of public
        canISetVideosPrivates:
          type: boolean
          description: Can I set private videos
        displayName:
          type: string
          description: 'It returns the call display name depending on the environment, in case of channel the channel title, 
            in case of meeting, classroom or webinar, the meeting title, otherwise empty'
        callquestions:
          type: array
          items:
            $ref: '#/components/schemas/CallQuestion'
            
    CallData_State:
      type: object
      description: Call ID and Call State
      properties:
        callID:
          $ref: '#/components/schemas/CallID'  
        state:
          $ref: '#/components/schemas/CallState'        

    MakeCallBase_Data:
      type: object
      description: Data to make a call
      properties:
        imcontacts_ids:
          type: array
          description: Array with contactID from users to call
          items:
            $ref: '#/components/schemas/IMContactID'
        emails:
          type: array
          description: Array with Emails to call
          items:
            type: string
            example: antonio@mycompany.de
        endpoints:
          type: array
          description: Array with EndPoints to call
          items:
            $ref: '#/components/schemas/EndPointParticipant'

    MakeNewCall_Data:
      description: Data to make (start) a call
      allOf:
        - type: object
          properties:
            callType:
              $ref: '#/components/schemas/CallType'
            chatRoomID:
              description: Chat Room ID to call
              type: integer
            callID_history:
              description: History (finished and archived) Call ID to call again
              type: integer
        - $ref: '#/components/schemas/MakeCallBase_Data'
      required:
        - callType