openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Sites API'
  termsOfService: 'http://swagger.io/terms/'
  description: This document describes a REST API that allows to manage sites; place were the activity in context will take place, which may vary depending on the domain.
  contact:
    name: SMTT Platform Team
    email: manuelf.sanchez@smartmatic.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/manuelf.sanchez/Sites/1.0.0
  - description: API Auto Mocking
    url: 'https://10.4.13.10/v1.0.0/sites'
tags:
  - name: sites
    description: This module may allow a user to create, update, consult or delete one or several sites. The module may also allow users to consult precincts associated to a site or assign precincts to a site.
    externalDocs:
      description: Find out more about Sites. (TO CONSULT)
      url: 'http://smartu.smartmatic.net/xxxx'
paths:
  /sites:
    get:
      tags:
        - sites
      summary: Retrieves all sites given a specific event code
      operationId: getSites
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: Complete valid user database of the microservice where the role will be searched
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: Cient-app where role will be searched
          required: true
        - in: header
          name: eventCode
          description: The code of the event that will take place in the site.
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: List of the types of sites that will be available for the event.
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SiteType'
      responses:
        '200':
          description: A list with all sites that will be available for the event.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        '400':
          description: Bad Request Error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
    post:
      tags:
        - sites
      summary: Creates one or several sites given a specific event code
      operationId: createSites
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: Complete valid user database of the microservice where the role will be searched
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: Client-app where role will be assigned
          required: true
        - in: header
          name: eventCode
          description: The code of the event that will take place in the site.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: List of the sites that will be created for the event.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Site'
      responses:
        '201':
          description: The site(s) has(have) been successfully created
          content:
            application/json:
              schema:
                type: string
                example: The site(s) was(were) created
        '400':
          description: Bad Request error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
    put:
      tags:
        - sites
      summary: Updates one or several sites given a specific event code
      operationId: updateSites
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: Complete valid user database of the microservice where the role will be searched
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: Client-app where role will be assigned
          required: true
        - in: header
          name: eventCode
          description: The code of the event that will take place in the site.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Site'
      responses:
        '201':
          description: The site(s) has(have) been successfully updated
          content:
            application/json:
              schema:
                type: string
                example: The sites were updated
        '400':
          description: Bad Request error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
    delete:
      tags:
        - sites
      summary: Deletes all sites given a specific event code
      operationId: deleteSites
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: Complete valid user database of the microservice where the role will be searched
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: Client-app where role will be assigned
          required: true
        - in: header
          name: eventCode
          description: The code of the event that will take place in the site.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All sites were successfully deleted
          content:
            application/json:
              schema:
                type: string
                example: The sites were deleted
        '400':
          description: Bad Request error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
  /sites/{code}:
    get:
      tags:
        - sites
      summary:  Obtain one site
      description: Returns a site by specific site code and event code.
      operationId: getSite
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: Complete valid user database of the microservice where the role will be searched
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: Client-app where role will be searched
          required: true
        - in: header
          name: eventCode
          description: The code of the event that will take place in the site.
          required: true
          schema:
            type: string
        - in: path
          name: code
          description: Unique code of a Site
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A site with all its parameters is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Bad Request error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
    delete:
      tags:
        - sites
      summary: Delete one site
      description: Deletes a site given a specific a site code and event code.
      operationId: deleteSite
      parameters:
        - in: header
          name: realm
          schema:
            type: string
          description: realm where role will be created
          required: true
        - in: header
          name: client
          schema:
            type: string
          description: client-app where role will be assigned
          required: true
        - in: header
          name: eventCode
          description: Site event code
          required: true
          schema:
            type: string
        - in: path
          name: code
          description: Code of Polling Place
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: All sites were successfully deleted
          content:
            application/json:
              schema:
                type: string
                example: The sites were deleted
        '400':
          description: Bad Request error. The request was unacceptable, either not all parameters were filled or there was a missing parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
        '500':
          description: Internal error. Unexpected condition met. The request was not processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDetail'
components:
  schemas:
    FailureDetail:
      type: object
      description: Object that will be returned in case of an error.
      properties:
        code:
          description: Code of the Error returned.
          type: integer
          format: int64
          example: 1
    Site:
      type: object
      description: Object that represents the site of a given domain.
      required:
        - code
        - name
        - type
        - eventCode
      properties:
        code:
          type: string
          description: Custom code that identifies the site.
          default: "0004"
        name:
          type: string
          description: Name that identifies the site.
          default: Site example
        address:
          type: string
          description: Address that identifies the site.
        regionCode:
          type: string
          description: The region code to where the site belongs.
        type:
          $ref: '#/components/schemas/SiteType'
        additionalAttributes:
          type: array
          description: Additional site attributes. These may vary according to the domain in which the site is represented.
          items:
            type: object
            properties:
              key:
                type: string
                description: Name of the additional attribute.
              values:
                type: string
                description: Value of the additional attribute
        eventCode:
          type: string
          description: Code of the event that will take place in a site.
        precincts:
          type: array
          description: List of codes of precincts associated to a site.
          items:
            type: string
    SiteType:
      description: Types of Site that are available in the corresponding domain.
      type: string
      enum:
        - VOTING_CENTER
        - EARLY_VOTING
        - CENTRAL_FACILITY
