openapi: 3.0.0
info:
  description: |
    This is the list of endpoints available at the Swift user microservice
  version: "1.0.7"
  title: Konexial Swift User Service
  contact:
    email: juan@konexial.com

tags:
  - name: internal
    description: >-
      Services meant to be used internally or from cronjobs. 'Secret' key is
      required to access all of these.
  - name: session
    description: Session management
  - name: API request logs
    description: API request logs endpoints
  - name: fuel
    description: Fuel related endpoints
  - name: geocode
    description: Geocode and map services
  - name: user notifications
    description: User notifications endpoints
  - name: subscriptions
    description: User subscription endpoints
  - name: PowerUnits
    description: PowerUnits endpoints
  - name: Trailers
    description: Trailers endpoints
  - name: Passwords
    description: Passwords endpoints
  - name: Locks
    description: Locks endpoints
  - name: Configure
    description: Configuration endpoints
  - name: Hierarchy
    description: Customer Hierarchy Structure

paths:
  /internal/fuel_locations/sync:
    get:
      tags:
        - internal
      summary: >-
        Fetchs today's fuel CSV file from Konexial's S3 fuel-locations bucket
        and saves it in the database. All data from previous days is removed
        from the database.
      operationId: fuel_sync_db
      responses:
        '200':
          description: Database was synced successfully
        '401':
          description: Secret was incorrect
      security:
        - internal_key: []
  /internal/send_push:
    put:
      tags:
        - internal
      summary: >-
        Sends a push notification to a user's device
      operationId: send_push_notification
      parameters:
        - in: query
          name: user_id
          schema:
            type: number
            example: 1969
          description: User's id
        - in: query
          name: title
          schema:
            type: string
            example: "Title for push"
          description: Title of the message
        - in: query
          name: message
          schema:
            type: string
            example: "Body for push"
          description: Body of the message
      responses:
        '200':
          description: Push sent
        '202':
          description: Push not sent as the user don't have any token registered
        '401':
          description: Secret was incorrect
      security:
        - internal_key: []
  /v1/login:
    post:
      tags:
        - session
      summary: >-
        This is a bridge to Rails login endpoint. It has the same request &
        response. This initiates a session in both Rails and Swift services.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Wrong credentials
  /v1/tower/login:
    post:
      tags:
        - session
        - tower
      summary: >-
        Login for tower. It will only log in users that have a valid tower subscription or are superadmins. It creates a web session if the credentials are valid. Credentials must be sent using HTTP Basic Auth header.
      operationId: towerLogin
      security:
      - tower_session: []
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Wrong credentials
  /v1/tower/load_location/{geohash}:
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns a location ID by Geohash
      operationId: tower_location_id_fetch
      parameters:
        - in: path
          name: geohash
          schema:
            type: string
          required: true
          description: geohash for location
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadLocationResponse'
  /v1/tower/load_location:
    post:
      tags:
        - load
        - tower
      summary: >-
        Creates a location ID for GoLoad.
      operationId: goload_location_id_create
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadLocationRequest'
      responses:
        '200':
          description: Location ID created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadLocationResponse'
        '400':
          description: Problem with request's parameters (check error message)

  /v1/tower/load/{id}:
    delete:
      tags:
        - tower
        - load
      summary: >-
        Deletes a Load. Must be owner of load, admin of company or superadmin.
      operationId: delete_load
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for load to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Load deleted
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns a load by ID
      operationId: tower_load_fetch
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for load
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadResponse'
  /v1/tower/loads:
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns all loads created by company of the user
      operationId: tower_loads_fetch
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadsReducedListResponse'

  /v1/tower/load/{id}/notes:
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns all notes related to a load
      operationId: tower_load_notes_fetch
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the load
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadNoteArrayResponse'

  /v1/tower/fuel/carrier_transactions/{id}:
    get:
      tags:
        - tower
        - fuel
      summary: >-
        Returns list of transactions for a carrier given a date range
      operationId: tower_fuel_transactions
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for carrier (this is the int identifier, not carrierId)
        - in: query
          name: startDate
          schema:
            type: string
            example: "2019-09-03"
          description: Filter for transaction's start date
        - in: query
          name: endDate
          schema:
            type: string
            example: "2019-09-06"
          description: Filter for transaction's end date

      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelTransactionsResponse'
  /v1/tower/users:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns all users (superadmins) or users beloging to carrier (admin, owner operators)
      operationId: domain_all_users
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: Starts from 0. Number of pages available in users/count endpoint.
        - in: query
          name: term
          schema:
            type: string
          required: false
          description: Filter term (optional)
        - in: query
          name: carrier_id
          schema:
            type: integer
          required: false
          description: Only for superadmin  
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /v1/tower/domain_search:
    get:
      tags:
        - tower
        - user
      summary: >-
        Domain search. Superadmin will perform search in all users and carriers. Admin/Owner Operators will search only in their own carrier's users.
      operationId: domain_search
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: true
          description: Term for search. Can be name, id, email, DOT, etc.
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSearchResponse'

  /v1/tower/load:
    post:
      tags:
        - load
        - tower
      summary: >-
        Creates a Load for GoLoad.
      operationId: goload_create
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadRequest'
      responses:
        '200':
          description: Load created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadResponse'
        '400':
          description: Problem with request's parameters (check error message)

  /v1/tower/load/{id}/note:
    post:
      tags:
        - load
        - tower
      summary: >-
        Adds a note to a load
      operationId: goload_load_note_create
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the load of the note
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadNoteRequest'
      responses:
        '200':
          description: Note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadNoteResponse'

  /v1/loads/{id}/attach_document:
    post:
      tags:
        - load
        - tower
      summary: >-
        Attach documents to a load
      operationId: goload_attach_document
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the load 
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadDocumentRequest'
      responses:
        '200':
          description: Note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadDocumentResponse'
                
  /v1/tower/load/notes/{id}:
    delete:
      tags:
        - tower
        - load
      summary: >-
        Deletes a Load's note.
      operationId: delete_load_note
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the note to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Load's note deleted
    post:
      tags:
        - load
        - tower
      summary: >-
        Edit a load's note
      operationId: goload_load_note_edit
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the note
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadNoteRequest'
      responses:
        '200':
          description: Note edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadNoteResponse'

  /v1/tower/edit_load:
    post:
      tags:
        - load
        - tower
      summary: >-
        Edits a Load from GoLoad. This is not a patch endpoint, all parameters are required. Load's id is required (check request)
      operationId: goload_edit
      security:
      - tower_session: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadEditRequest'
      responses:
        '200':
          description: Load created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadResponse'
        '400':
          description: Problem with request's parameters (check error message)
  /v1/tower/fuel_calculation:
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns load's fuel calculation from origin to destination
      operationId: tower_fuel_calculation
      parameters:
        - in: query
          name: originLocId
          schema:
            type: string
          required: true
          description: Location ID for origin
        - in: query
          name: destinationLocId
          schema:
            type: string
          required: true
          description: Location ID for destination
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelCalculationResponse'
  /v1/tower/load/carrier_details:
    get:
      tags:
        - tower
        - load
      summary: >-
        Returns load's fuel calculation from origin to destination
      operationId: tower_load_carrier_details
      parameters:
        - in: query
          name: usdot
          schema:
            type: number
          required: true
          description: UD DOT number of the Carrier
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadCarrierDetailsResponse'

  /v1/tower/service_offers:
    get:
      tags:
        - load
        - tower
      summary: >-
        Fetches Load Service Offers
      operationId: fetch_service_offers
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 service offers)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: user_id
          schema:
            type: number
          description: Filter using User Id
        - in: query
          name: load_id
          schema:
            type: number
          description: Filter using Load Id
        - in: query
          name: status
          schema:
            type: string
          description: Service offer status
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferResponse'
    post:
      tags:
        - load
        - tower
      summary: >-
        create new Service Offer
      operationId: create_service_offer
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOfferRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOffer'
  /v1/tower/service_offers/{id}:
    get:
      tags:
        - load
        - tower
      summary: >-
        Fetches a service offer using its id
      operationId: fetch_service_offer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Service Offer Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferResponse'
    put:
      tags:
        - load
        - tower
      summary: >-
        Update a service offer
      operationId: update_service_offer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Service Offer Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOfferRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferResponse'
    delete:
      tags:
        - tower
        - load
      summary: >-
        Deletes a Service Offer.
      operationId: delete_service_offer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the service offer to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Service Offer deleted
  /v1/loads:
    get:
      tags:
        - mobile
        - load
      summary: >-
        Returns all loads created by company of the user or public loads
      operationId: loads_fetch
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: pagination
        - in: query
          name: offer
          schema:
            type: string
          description: Offer type New or Last Chance
        - in: query
          name: sort_by
          schema:
            type: string
          description: Sort by Pickup Date, Length of Haul, Deadhead, Offer or Shipper Rating
        - in: query
          name: sort_direction
          schema:
            type: string
          description: Sort order ASC or DESC
        - in: query
          name: goload
          schema:
            type: boolean
          description: value true is for public loads and value false is for private loads
        - in: query
          name: min_rate_per_mile
          schema:
            type: number
          description: minimum rate per mile value
        - in: query
          name: current_lat
          schema:
            type: number
          description: current latitude value of the mobile phone
        - in: query
          name: current_lng
          schema:
            type: number
          description: current longitude value of the mobile phone
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadsReducedMobileListResponse'
  /v1/loads/dispatched:
    get:
      tags:
        - mobile
        - load
      summary: >-
        Returns all loads accepted by the user
      operationId: loads_dispatched
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: pagination
        - in: query
          name: offer
          schema:
            type: string
          description: Offer type New or Last Chance
        - in: query
          name: sort_by
          schema:
            type: string
          description: Sort by Pickup Date, Length of Haul, or Deadhead
        - in: query
          name: min_rate_per_mile
          schema:
            type: number
          description: minimum rate per mile value
        - in: query
          name: current_lat
          schema:
            type: number
          description: current latitude value of the mobile phone
        - in: query
          name: current_lng
          schema:
            type: number
          description: current longitude value of the mobile phone
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadsReducedMobileListResponse'                
  /v1/loads/{id}/accept:
    patch:
      tags:
        - mobile
        - load
      summary: >-
        Accept a Load service offer
      operationId: accept_load_service_offer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Load Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
  /v1/loads/{id}/reject:
    patch:
      tags:
        - mobile
        - load
      summary: >-
        Reject a Load service offer
      operationId: reject_load_service_offer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Load Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
  /v1/loads/{id}/update_status:
    patch:
      tags:
        - mobile
        - load
      summary: >-
        Update status of a Load
      operationId: update_load_status
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Load Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUpdateStatusRequest'
      responses:
        '200':
          description: Success
  /v1/loads/histories:
    get:
      tags:
        - load
        - mobile
      summary: >-
        Fetches Load Histories 
      operationId: fetch_load_histories
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Current page number starting from 0
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadsReducedMobileListResponse'
  /v1/loads/{id}/ratings:
    post:
      tags:
        - load
        - mobile
      summary: >-
        Add Load Rating
      operationId: add_load_rating
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Load Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadRatingRequest'
      responses:
        '200':
          description: Success
  /v1/loads/{id}/update_dates:
    patch:
      tags:
        - mobile
        - load
      summary: >-
        Update estimated_pickup_date and estimated_delivery_date of a load
      operationId: update_estimated_dates
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Load Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUpdateDatesRequest'
      responses:
        '200':
          description: Success
      
  /v1/logout:
    delete:
      tags:
        - session
      summary: >-
        This is a bridge to Rails logout endpoint. It has the same request &
        response. This terminates a session in both Rails and Swift services.
      operationId: logout
      security:
        - session_token: []
      responses:
        '200':
          description: Session terminated
  /v1/tower/logout:
    delete:
      tags:
        - session
        - tower
      summary: >-
        Ends user session for tower endpoints
      operationId: towerLogout
      security:
        - vapor_session: []
      responses:
        '200':
          description: Session terminated
  /v1/fuel_locations:
    get:
      tags:
        - fuel
      summary: >-
        Returns fuel locations & prices from the GoLoad program that are in a 200mi radius from user's location
      operationId: fuel_locations
      parameters:
        - in: query
          name: lat
          schema:
            type: number
          required: true
          description: Latitude of user's location
        - in: query
          name: lon
          description: Longitude of user's location
          schema:
            type: number
          required: true
      security:
        - session_token: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelLocationsResponse'

  /v1/tower/fuel_report:
    post:
      tags:
        - fuel
        - tower
      summary: >-
        Takes an array of fuel locations ids with a date and returns the GoFuel station with the best price for that day within 75mi.
      operationId: fuel_report
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelReportRequest'
      security:
        - session_token: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelReportResponse'
  /v1/tower/user:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns user information
      operationId: tower_user_fetch
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /v1/tower/user/{id}/timeline:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns a timeline for user's activity in a given date
      operationId: user_timeline_fetch
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user
        - in: query
          name: date
          schema:
            type: string
          required: true
          example: '2020-01-29'
          description: Date for timeline
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'

  /v1/tower/user/{id}/data_for_pdf:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns data needed to build daily log PDF
      operationId: user_data_for_pdf
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user
        - in: query
          name: date
          schema:
            type: string
          required: true
          example: '2020-01-29'
          description: Date for data
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataForPDF'
  /v1/tower/sign_up:
    post:
      tags:
        - fuel
        - tower
      summary: >-
        Returns user created from tower
      operationId: user_creation_from_tower
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNewUserRequest'
      security:
        - session_token: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /v1/tower/data_for_pdf:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns data needed to build daily log PDF with token
      operationId: user_data_for_pdf_token
      parameters:
        - in: query
          name: date
          schema:
            type: string
          required: true
          example: '2020-01-29'
          description: Date for data
      security:
        - session_token: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataForPDF'

  /v1/tower/user/{user_id}/aggregated_logs:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns user's aggregated logs for a date range. Start and end date can't be separated by more than 7 days.
      operationId: user_aggregated_logs
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user
        - in: query
          name: start_date
          schema:
            type: string
          required: true
          example: '2020-01-29T01:00:00Z'
          description: Start of date range
        - in: query
          name: end_date
          schema:
            type: string
          required: true
          example: '2020-01-30T01:00:00Z'
          description: End of date range
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedLogsResponse'

  /v1/tower/user/{user_id}/logs:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns user's all logs for a date range. Results are paginated with 40 results per page. Pages start at 0.
      operationId: user_logs
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user
        - in: query
          name: start_date
          schema:
            type: string
          required: true
          example: '2020-01-29T01:00:00Z'
          description: Start of date range
        - in: query
          name: end_date
          schema:
            type: string
          required: true
          example: '2020-01-30T01:00:00Z'
          description: End of date range
        - in: query
          name: page
          schema:
            type: integer
          required: true
          example: 0
          description: Page
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsResponse'

  /v1/tower/users_activity:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns a list a users with latest RODs activity (paginated)
      operationId: tower_users_activity_fetch
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: Number of the page (each page contains 18 users)
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivityResponse'

  /v1/tower/users/count:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns number of pages and users expected in /users endpoint
      operationId: tower_users_stats_fetch
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: false
          description: Filter term (optional)
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivityStatsResponse'

  /v1/tower/users_locations:
    get:
      tags:
        - tower
        - user
      summary: >-
        Returns latest know location for all users in carrier
      operationId: tower_users_locations
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLocationResponse'
  /v1/tower/fetch_fuel_report_by_users:
    get:
      tags:
        - tower
        - reports
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          description:  Filter by start date
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          description:  Filter by end date
      summary: >-
        Returns fuel data reports
      operationId: fuel_data_reports_fetch_by_user
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelDataReportResponseObjectByUser'              
  /v1/tower/fetch_fuel_report:
    get:
      tags:
        - tower
        - reports
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          description:  Filter by start date
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          description:  Filter by end date
      summary: >-
        Returns fuel data reports
      operationId: fuel_data_reports_fetch
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelDataReportResponseObject'
  /v1/tower/users_locations/{id}:
    get:
      tags:
        - tower
        - user
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID for location
      summary: >-
        Returns location's data
      operationId: tower_users_location_fetch
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivityResponse'
  /v1/tower/fuel/create_carrier/:
    post:
      tags:
        - tower
        - fuel
      summary: >-
        Creates a gofuel carrier object for fuel reports.
      operationId: create_gofuel_carrier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoFuelCarrierCreation'
      security:
        - vapor_session: []
      responses:
        '200':
          description: GoFuel carrier created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoFuelCarrierCreationResponse'
  /v1/violation:
    post:
      tags:
        - violations
      summary: >-
        Creates a violation
      operationId: create_violation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViolationRequest'
      security:
        - session_token: []
      responses:
        '200':
          description: Violation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationResponse'
  /v1/tower/fuel/fetch_carrier/:
    get:
      tags:
        - tower
        - fuel
      summary: >-
        Returns an array of goFuel carriers for fuel reports
      operationId: fetch_gofuel_carrier
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoFuelCarrierFetchResponse'
  /v1/tower/ifta/fetch_fuel_receipts:
    get:
      tags:
        - IFTA
      summary: fetches receipts
      operationId: fetchReceipts
      description: |
        By passing in the appropriate options, you can fetch fuel receipts
        in the system
      parameters:
        - in: query
          name: carrier_id
          description: find receipts matching carrier
          required: false
          schema:
            type: integer
        - in: query
          name: receipt_date
          description: find receipts matching date
          required: false
          schema:
            type: string
        - in: query
          name: fuel_receipt_number
          description: find receipts matching fuel receipt number
          schema:
            type: integer
        - in: query
          name: state
          description: find receipts matching state
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelReceiptWithImage'

  /v1/tower/ifta/create_fuel_receipt:
    post:
      tags:
        - IFTA
      summary: creates a fuel receipt
      operationId: createFuelReceipt
      description: Creates a fuel receipt for a specified carrier and power unit.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelReceiptRequest'
      responses:
        '200':
          description: item created
  /v1/tower/fuel_receipts/{id}:
    get:
      tags:
        - IFTA
        - tower
      summary: >-
        Fetches a fuel_receipt using its id
      operationId: fetch_fuel_receipt
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Fuel Receipt Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelReceiptWithImage'
    put:
      tags:
        - IFTA
        - tower
      summary: >-
        Update a fuel_receipt
      operationId: update_fuel_receipt
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Fuel Receipt Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelReceiptRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelReceiptWithImage'
    delete:
      tags:
        - tower
        - IFTA
      summary: >-
        Deletes a FuelReceipt.
      operationId: delete_fuel_receipt
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the fuel_receipt to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: FuelReceipt deleted

  /v1/tower/ifta/tax_rate:
    post:
      tags:
        - IFTA
      summary: >-
        Creates a tax rate policy for a state and quarter
      operationId: create_tax_rate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRateAddObject'
      security:
        - session_token: []
      responses:
        '200':
          description: Tax rate policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateObject'

  /v1/tower/ifta/available_quarters/:
    get:
      tags:
        - IFTA
      summary: >-
        Get all available and recent quarters
      operationId: get_ifta_available_quarters
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IFTAQuarterResponse'

  /v1/tower/ifta/fetch/:
    get:
      tags:
        - IFTA
      summary: >-
        Get all IFTA reports using the filters
      operationId: get_ifta_reports
      security:
        - vapor_session: []
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          required: false
          description: carrier/company ID, only available for superadmin. User's carrier used as default
        - in: query
          name: truck_id
          schema:
            type: number
          required: false
          description: Truck/Power unit id
        - in: query
          name: jurisdiction
          schema:
            type: string
          required: false
          description: Values can be any of "AL","AK","AZ","AR","CA","CO","CT","DE", "DC", "FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"
        - in: query
          name: fuelType
          schema:
            type: string
          required: false
          description: Values can be "Diesel" or "Unleaded"
        - in: query
          name: quarter
          schema:
            type: string
          required: false
          description: Values received from endpoint /v1/tower/ifta/available_quarters/
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page (each page contains 20 reports)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IFTAReportResponse'

  /v1/tower/tax_rates:
    get:
      tags:
        - IFTA
      summary: >-
        Get state tax rates
      operationId: get_tax_rates
      security:
        - vapor_session: []
      parameters:
        - in: query
          name: jurisdiction
          schema:
            type: string
          required: false
          description: Values can be any of "AL","AK","AZ","AR","CA","CO","CT","DE","DC", "FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"
        - in: query
          name: quarter
          schema:
            type: string
          required: false
          description: Values received from endpoint /v1/tower/ifta/available_quarters/
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesResponse'

  /v1/tower/ifta/carrier/trucks:
    get:
      tags:
        - IFTA
      summary: >-
        Get trucks (power units) from carrier/company using the carrier ID sent or the carrier from the user.
      operationId: get_ifta_carrier_trucks
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: integer
          required: false
          description: Carrier ID (optional)
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerUnitResponse'
  /v1/tower/fuel/delete_carrier/{id}:
    delete:
      tags:
        - tower
        - fuel
      summary: >-
        Deleted a GoFuel carrier object
      operationId: delete_gofuel_carrier
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for goFuel carrier to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: GoFuel carrier deleted
  /v1/state_reverse_geocode:
    get:
      tags:
        - geocode
      summary: >-
        Returns the state's name abbreviation for a given coordinate. Only valid for U.S. locations.
      operationId: state_reverse_geocode
      parameters:
        - in: query
          name: lat
          schema:
            type: number
          required: true
          description: Latitude
        - in: query
          name: lon
          description: Longitude
          schema:
            type: number
          required: true
      security:
        - internal_key: []
      responses:
        '404':
          description: State not found (check that location is inside the U.S.)
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseGeocode'

  /v1/tower/requestlogs/search/:
    get:
      tags:
        - API request logs
      summary: >-
        Returns an array of API request logs. All filters are optional.
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page (each page contains 20 logs)
        - in: query
          name: url
          schema:
            type: string
          required: false
          description: Filter by URL field
        - in: query
          name: header
          schema:
            type: string
          required: false
          description: Filter by request header field
        - in: query
          name: body
          schema:
            type: string
          required: false
          description: Filter by request body field
        - in: query
          name: isFromApp
          schema:
            type: boolean
          required: false
          description: Filters by requests sent by App or Tower
      operationId: search_apirequestlogs
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIRequestLogFetchResponse'
  /v1/tower/requestlogs/{id}:
    get:
      tags:
        - API request logs
      summary: >-
        Returns an array of API request logs. All filters are optional.
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Number of the page (each page contains 20 logs)
      operationId: findLogById_apirequestlogs
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIRequestLog'
  /v1/tower/user_notifications:
    get:
      tags:
        - user notifications
        - tower
      summary: >-
        Returns an array of the user notifications
      operationId: fetch_userNotification
      parameters:
        - in: query
          name: last_notification_id
          schema:
            type: number
          required: false
          description:  Last notification ID received in previous page. Null if requesting first page.
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationFetchResponse'

  /v1/tower/udr_report/assign_log:
    post:
      tags:
        - UDR
        - tower
      summary: >-
        Assigns a user from the carrier to a list of UDR logs.
      operationId: assign_udr_log
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignUDRRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success

  /v1/tower/udr_report/logs:
    get:
      tags:
        - UDR
        - tower
      summary: >-
        Returns all pending UDR records for carrier. Paginated.
      operationId: fetch_carrier_udr
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          required: false
          description:  Filter by carrier ID (Optional - only for superadmins. Default is logged user carrier.)
        - in: query
          name: vin
          schema:
            type: string
          required: false
          description:  Filter by vin (Optional)
        - in: query
          name: user_id
          schema:
            type: number
          required: false
          description:  Filter by user ID (Optional - only for users of selected carrier)
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          description:  Filter by start date
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          description:  Filter by end date
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UDRLogs'

  /v1/tower/carrier/{carrier_id}/users:
    get:
      tags:
        - Carrier
        - tower
      summary: >-
        Returns all users from a carrier. Only superadmins can fetch a different carrrier than his own.
      operationId: fetch_carrier_users
      parameters:
        - in: path
          name: carrier_id
          schema:
            type: number
          required: true
          description:  Carrier ID
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /v1/tower/carrier/{carrier_id}/trucks:
    get:
      tags:
        - Carrier
        - tower
      summary: >-
        Returns all trucks from carrier. Only superadmins can fetch a different carrrier than his own.
      operationId: fetch_carrier_trucks
      parameters:
        - in: path
          name: carrier_id
          schema:
            type: number
          required: true
          description:  Carrier ID
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSimpleObjectResponse'

  /v1/tower/carrier/{carrier_id}/trailers:
    get:
      tags:
        - Carrier
        - tower
      summary: >-
        Returns all trailers from carrier. Only superadmins can fetch a different carrrier than his own.
      operationId: fetch_carrier_trailers
      parameters:
        - in: path
          name: carrier_id
          schema:
            type: number
          required: true
          description:  Carrier ID
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSimpleObjectResponse'

  /v1/tower/create_notification:
    post:
      tags:
        - user notifications
        - tower
      summary: >-
        Create a new notification for a domain of users
      operationId: create_notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success

  /v1/tower/user_password:
    post:
      tags:
        - user
      summary: >-
        Changes logged user's password. Requires sending old password.
      operationId: update_user_password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
        '401':
          description: Old password invalid

  /v1/tower/eld_logs/update_status:
    post:
      tags:
        - user
      summary: >-
        Updates status of all eld logs between a date range.
      operationId: update_user_status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusChangeRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success

  /v1/tower/carriers/:
    get:
      tags:
        - user
      summary: >-
        Fetch carriers for superadmin, admin and owner operator.
      operationId: fetch_carriers
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: false
          description: Filter term (optional)
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompaniesResponse'
  /v1/tower/fmcsa_fetch/{fmcsa_id}:            
    get:
      tags:
        - FMCSA
        - tower
      summary: >-
        Fetch FMCSA by ID
      operationId: fetch_FMCSA_with_id_for_tower
      parameters:
        - in: path
          name: fmcsa_id
          schema:
            type: number
          required: true
          description:  FMCSA ID
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FMCSAServiceResponse'
  /v1/tower/fmcsa_fetch:            
    get:
      tags:
        - FMCSA
        - tower
      summary: >-
        Fetch FMCSA using user 
      operationId: fetch_FMCSA_with_user_for_tower
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          example: '2020-01-29'
          description: Start of date range
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          example: '2020-01-30'
          description: End of date range
        - in: query
          name: page
          schema:
            type: integer
          required: true
          example: 0
          description: Page
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FMCSAServiceResponseArray'
  /v1/tower/users/{id}/fmcsa_upload:            
    post:
      tags:
        - FMCSA
        - tower
      summary: >-
        Performs an FMCSA upload for user and date range
      operationId: fmcsa_upload_request
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: id for user. Must be from own carrier if request comes from a not superadmin user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FMCSAUploadRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Information successfully transmitted to FMCSA.
        '409':
          description: There was an error in the transmission of information to FMCSA.  
          
  /v1/tower/carriers:
    post:
      tags:
        - Carrier
        - tower
      summary: >-
        Create carrier
      operationId: create_carrier_for_tower
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierResponse'
                
  /v1/tower/carriers/{id}:
    post:
      tags:
        - Carrier
        - tower
      summary: >-
        Update carrier
      operationId: update_carrier_for_tower
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Carrier Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierResponse'
  /v1/tower/carrier/fetch/{id}:
    get:
      tags:
        - Carrier
        - tower
      summary: >-
        Fetch carrier using ID
      operationId: fetch_carrier_with_id_for_tower
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Carrier Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierResponse'
  /v1/tower/user_profile:
    patch:
      tags:
        - user
      summary: >-
        Updates profile of a user. All fields are OPTIONAL. Only fields present in the request will be changed.
      operationId: update_user_profile
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: false
          description: Id of the user that will be edited (must belong to carrier for admins/owners operators). If this field is not present, current logged user will be edited.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: If email is already taken or the profile pic doesn't exist

  /v1/tower/user/{id}:
    get:
      tags:
        - user
      summary: >-
        Returns user details for specific user.
      operationId: get_user_profile
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: id for a user inside the carrier
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: "User doesn't exist or doesn't belong to the carrier"
  /v1/tower/users/{id}/hierarchy_items:          
    get:
      tags:
        - user
        - tower
      summary: >-
        Fetch hierarchy_items for a user
      operationId: fetch_hierarchy_items_for_user
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  User Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItemResponse'

  /v1/tower/image_upload:
    post:
      tags:
        - files
      summary: >-
        Uploads an image and returns an ID that can used in any endpoint that accepts images.
      operationId: upload_image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: This is an optional note related to the image
                  example: "Optional note"
                file:
                  type: string
                  format: binary
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'


  /v1/tower/user_notifications/mark_as_read:
    put:
      tags:
        - user notifications
        - tower
      summary: >-
        Mark as read by either page or notification Id. Only one of the query parameters should be sent.
      operationId: notifications_mark_as_read
      parameters:
        - in: query
          name: notification_id
          schema:
            type: number
          required: false
          description:  Notification with this ID will be marked as read
        - in: query
          name: isRead
          schema:
            type: boolean
          required: true
          description: True to mark notifications as read, false otherwise
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success

  /v1/tower/user_notifications/mark_all_as_read:
    put:
      tags:
        - user notifications
        - tower
      summary: >-
        Mark all notifications as read
      operationId: notifications_mark_all_as_read
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success

  /v1/tower/user_notifications/count:
    get:
      tags:
        - user notifications
        - tower
      summary: >-
        Fetchs number of unread notifications
      operationId: fetch_user_notifications_count
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsCountResponse'
  /v1/tower/subscriptions:
    get:
      tags:
        - subscriptions
        - tower
      summary: >-
        Fetchs subscriptions
      operationId: fetch_subscriptions
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 subscriptions)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id of the User
        - in: query
          name: user_id
          schema:
            type: number
          description: Filter using User Id
        - in: query
          name: kind
          schema:
            type: number
          description: Subscription Type. 0 for my20Eld, 1 for my20Tower, 2 for my20Trial and -1 for noSubscription
        - in: query
          name: status
          schema:
            type: number
          description: Subscription status. 0 for active, 1 for gracePeriod, 2 for expired and 3 for canceled
        - in: query
          name: expires_at_from
          schema:
            type: string
          description: Filter using expires_at value start from. Ex. '2019-08-29T17:32:13Z'
        - in: query
          name: expires_at_to
          schema:
            type: string
          description: Filter using expires_at value up to. Ex. '2019-08-30T17:32:13Z'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsResponse'
    post:
      tags:
        - subscriptions
        - tower
      summary: >-
        create new subscription
      operationId: create_subscription
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/tower/subscriptions/{id}:
    patch:
      tags:
        - subscriptions
        - tower
      summary: >-
        Update subscription
      operationId: update_subscription
      parameters:
        - in: path
          name: id
          
          schema:
            type: number
          required: true
          description:  Subscription Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/tower/power_units:
    get:
      tags:
        - PowerUnits
        - tower
      summary: >-
        Fetchs power units
      operationId: fetch_power_units
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 power units)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: vin
          schema:
            type: string
          description: VIN of the Power Unit
        - in: query
          name: mac_address
          schema:
            type: string
          description: MAC Address of the Power Unit
        - in: query
          name: truck_number
          schema:
            type: string
          description: Truck Number of the Power Unit
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerUnitResponse'
    post:
      tags:
        - PowerUnits
        - tower
      summary: >-
        create new PowerUnit
      operationId: create_power_unit
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerUnitRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerUnit'
  /v1/tower/carrier/:
    delete:
        tags:
          - tower
          - Carrier
        summary: >-
          Deletes a Carrier.
        operationId: delete_carrier
        parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: ID of thecarrier to be deleted
        security:
          - vapor_session: []
        responses:
          '200':
            description: Carrier deleted
  /v1/tower/power_units/{id}:
    get:
      tags:
        - PowerUnits
        - tower
      summary: >-
        Fetchs a power unit using its id
      operationId: fetch_power_unit
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Power Unit Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerUnitResponse'
    put:
      tags:
        - PowerUnits
        - tower
      summary: >-
        Update a power unit
      operationId: update_power_unit
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Power Unit Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerUnitRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerUnitResponse'
    delete:
      tags:
        - tower
        - PowerUnits
      summary: >-
        Deletes a PowerUnit.
      operationId: delete_power_unit
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the power_unit to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: PowerUnit deleted
  /v1/tower/trailers:
    get:
      tags:
        - Trailers
        - tower
      summary: >-
        Fetches trailers
      operationId: fetch_trailers
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 trailers)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: number
          schema:
            type: string
          description: Number value of the Trailer
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailerResponse'
    post:
      tags:
        - Trailers
        - tower
      summary: >-
        create new Trailer
      operationId: create_trailer
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrailerRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trailer'
  /v1/tower/trailers/{id}:
    get:
      tags:
        - Trailers
        - tower
      summary: >-
        Fetches a trailer using its id
      operationId: fetch_trailer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Trailer Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailerResponse'
    put:
      tags:
        - Trailers
        - tower
      summary: >-
        Update a trailer
      operationId: update_trailer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Trailer Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrailerRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailerResponse'
    delete:
      tags:
        - tower
        - Trailers
      summary: >-
        Deletes a Trailer.
      operationId: delete_trailer
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the trailer to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Trailer deleted
  /v1/tower/violation:
    get:
      tags:
        - violations
        - tower
      summary: >-
        Fetches driver violations
      operationId: fetch_tower_violations
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 20 violations)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: user_id
          schema:
            type: string
          description: Filter using User id
        - in: query
          name: date_start
          schema:
            type: string
          example: '2020-01-29'
          description: Start of date range
        - in: query
          name: date_end
          schema:
            type: string
          example: '2020-01-30'
          description: End of date range
        - in: query
          name: truck_id
          schema:
            type: number
          required: false
          description: Truck/Power unit id
        - in: query
          name: trailer_id
          schema:
            type: number
          required: false
          description: Trailer id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationsResponse'
  /v1/tower/fetch_dvir:
    get:
      tags:
        - dvir
        - tower
      summary: >-
        Fetches dvir
      operationId: fetch_tower_dvir
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 20 violations)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: driver_id
          schema:
            type: string
          description: Filter using User id
        - in: query
          name: date_start
          schema:
            type: string
          example: '2020-01-29'
          description: Start of date range
        - in: query
          name: date_end
          schema:
            type: string
          example: '2020-01-30'
          description: End of date range
        - in: query
          name: truck_id
          schema:
            type: number
          required: false
          description: Truck/Power unit id
        - in: query
          name: trailer_id
          schema:
            type: number
          required: false
          description: Trailer id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DVIRsResponse'
  /v1/tower/global_settings:
    get:
      tags:
        - global_setting
        - tower
      summary: >-
        Fetches global setting
      operationId: fetch_tower_global_settings
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSettingResponse'
    post:
      tags:
        - global_setting
        - tower
      summary: >-
        Update global setting
      operationId: update_tower_global_settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSettingRequest'
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSettingResponse'
  /v1/tower/forget_password:
    post:
      tags:
        - Passwords
        - tower
      summary: >-
        Forget Password
      operationId: forget_password
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgetPasswordRequest'
      responses:
        '200':
          description: Success
  /v1/tower/reset_password:
    post:
      tags:
        - Passwords
        - tower
      summary: >-
        Reset Password
      operationId: reset_password
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetches locks
      operationId: fetch_locks
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 locks)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: name
          schema:
            type: string
          description: Name value of the Lock
        - in: query
          name: hierarchy_item_id
          schema:
            type: number
          description: Hierarchy name
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockResponse'
    post:
      tags:
        - Locks
        - tower
      summary: >-
        create new Lock
      operationId: create_lock
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lock'
  /v1/tower/locks/{id}:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetches a lock using its id
      operationId: fetch_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockResponse'
    put:
      tags:
        - Locks
        - tower
      summary: >-
        Update a lock
      operationId: update_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockResponse'
    delete:
      tags:
        - tower
        - Locks
      summary: >-
        Deletes a Lock.
      operationId: delete_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the lock to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Lock deleted
  /v1/tower/locks/activities:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetches activities for all locks
      operationId: fetch_activities_for_all_locks
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          description:  Carrier Id
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: Pagination
        - in: query
          name: lock_name
          schema:
            type: string
          description: Name value of the Lock
        - in: query
          name: hierarchy_item_id
          schema:
            type: number
          description: Hierarchy name
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
  /v1/tower/locks/{id}/activities:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetches activities for a lock
      operationId: fetch_activities_for_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
        - in: query
          name: page
          schema:
            type: number
          required: true
          description: Pagination
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'                
  /v1/tower/locks/{id}/access:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetches access details (groups, users) for a lock
      operationId: fetch_access_details_for_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockAccessDetailsResponse'                
  /v1/tower/locks/{id}/assign_users:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Assign Users to a lock
      operationId: assign_users_to_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockAssignUsersRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks/{id}/remove_users:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Remove Users from a lock
      operationId: remove_users_from_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockAssignUsersRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks/{id}/assign_groups:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Assign Groups to a lock
      operationId: assign_groups_to_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockAssignGroupsRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks/{id}/remove_groups:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Remove Groups from a lock
      operationId: remove_groups_from_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockAssignGroupsRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks/{id}/unlock:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Unlock a lock
      operationId: unlock_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockUnlockRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlockResponse' 
  /v1/tower/locks/{id}/unlock_confirmation:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Unlock confirmation for a lock
      operationId: unlock_confirmation_for_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockUnlockConfirmationRequest'
      responses:
        '200':
          description: Success
  /v1/tower/locks/{id}/lock:
    patch:
      tags:
        - Locks
        - tower
      summary: >-
        Lock a Noke lock
      operationId: lock_noke_lock
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Lock Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockNokeLockRequest'
      responses:
        '200':
          description: Success
                
  /v1/tower/lock_locations:
    get:
      tags:
        - Locks
        - tower
      summary: >-
        Fetch locks with locations for map
      operationId: fetch_lock_locations
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: hierarchy_item_id
          schema:
            type: number
          description: Hierarchy name
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockMapResponse'
          
  /v1/tower/hierarchy_levels:
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Fetches Hierarchy Levels
      operationId: fetch_hierarchy_levels
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: asset
          schema:
            type: string
          description: Asset Type like Lock, User, etc.
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevelResponse'
    post:
      tags:
        - Hierarchy
        - tower
      summary: >-
        create new Hierarchy Level
      operationId: create_hierarchy_level
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HierarchyLevelRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevel'
  /v1/tower/hierarchy_levels/{id}:
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Fetches a hierarchy level using its id
      operationId: fetch_hierarchy_level
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Level Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevelResponse'
    put:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Update a hierarchy level
      operationId: update_hierarchy_level
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Level Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HierarchyLevelRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevelResponse'
    delete:
      tags:
        - tower
        - Hierarchy
      summary: >-
        Deletes a Hierarchy Level.
      operationId: delete_hierarchy_level
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the hierarchy level to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Hierarchy Level deleted    
          
  /v1/tower/hierarchy_items:
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Fetches Hierarchy Items
      operationId: fetch_hierarchy_items
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: true
          description:  Number of the page starting from 0 (each page contains 30 hierarchy items)
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: asset
          schema:
            type: string
          description: Asset Type like Lock, User, etc.
        - in: query
          name: name
          schema:
            type: string
          description: Hierarchy Item name.
        - in: query
          name: hierarchy_level_id
          schema:
            type: number
          description: Filter using Hierarchy Level Id  
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItemResponse'
    post:
      tags:
        - Hierarchy
        - tower
      summary: >-
        create new Hierarchy Item
      operationId: create_hierarchy_item
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HierarchyItemRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItem'
  /v1/tower/hierarchy_items/{id}:
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Fetches a hierarchy item using its id
      operationId: fetch_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItemResponse'
    put:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Update a hierarchy item
      operationId: update_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HierarchyItemRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItemResponse'
    delete:
      tags:
        - tower
        - Hierarchy
      summary: >-
        Deletes a Hierarchy Item.
      operationId: delete_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: ID of the hierarchy item to be deleted
      security:
        - vapor_session: []
      responses:
        '200':
          description: Hierarchy Item deleted      
  /v1/tower/hierarchy_items/search:
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Search Hierarchy Items using name without pagination
      operationId: search_hierarchy_items
      parameters:
        - in: query
          name: carrier_id
          schema:
            type: number
          description: Filter using Carrier Id
        - in: query
          name: asset
          schema:
            type: string
          description: Asset Type like Lock, User, etc.
        - in: query
          name: name
          schema:
            type: string
          description: Hierarchy Item name
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyItemResponse'
  /v1/tower/hierarchy_items/{id}/assign_users:          
    patch:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Assign Users to a hierarchy item
      operationId: assign_users_to_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignUsersToHierarchyItemRequest'
      responses:
        '200':
          description: Success
  /v1/tower/hierarchy_items/{id}/remove_users:          
    patch:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Remove Users from hierarchy item
      operationId: remove_users_from_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignUsersToHierarchyItemRequest'
      responses:
        '200':
          description: Success  
          
  /v1/tower/hierarchy_items/{id}/assign_power_units:          
    patch:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Assign PowerUnits to a hierarchy item
      operationId: assign_power_units_to_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignPowerUnitsToHierarchyItemRequest'
      responses:
        '200':
          description: Success
  /v1/tower/hierarchy_items/{id}/remove_power_units:          
    patch:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Remove PowerUnits from hierarchy item
      operationId: remove_power_units_from_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignPowerUnitsToHierarchyItemRequest'
      responses:
        '200':
          description: Success   
  /v1/tower/hierarchy_items/{id}/fetch_users:          
    get:
      tags:
        - Hierarchy
        - tower
      summary: >-
        Fetch users from a hierarchy item
      operationId: fetch_users_from_hierarchy_item
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description:  Hierarchy Item Id
      security:
        - vapor_session: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
                    
  /v1/tower/configure/demo_data:
    post:
      tags:
        - Configure
        - tower
      summary: >-
        create demo data from the given input
      operationId: create_demo_data
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoDataRequest'
      responses:
        '200':
          description: Success
  /v1/tower/configure/demo_setup:
    post:
      tags:
        - Configure
        - tower
      summary: >-
        copy demo data to a demo user
      operationId: create_demo_setup
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoSetupRequest'
      responses:
        '200':
          description: Success 
  /v1/tower/configure/demo_dynamic_data:
    post:
      tags:
        - Configure
        - tower
      summary: >-
        copy dynamic demo data to a demo user
      operationId: copy_demo_dynamic_data
      security:
        - vapor_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoDynamicDataRequest'
      responses:
        '200':
          description: Success
            
servers:
  - url: 'http://user-service-staging.konexial.com/'
  - url: 'https://user-service.konexial.com/'
components:
  securitySchemes:
    tower_session:
      type: http
      scheme: basic
    internal_key:
      type: apiKey
      name: Secret
      in: header
    vapor_session:
      type: apiKey
      name: vapor_session
      in: cookie
    session_token:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    LoginTowerResponse:
      type: object
      properties:
        vapor-session:
          type: string
        user:
          type: object
          $ref: '#/components/schemas/User'
    GoFuelCarrierCreationResponse:
      type: object
      $ref: '#/components/schemas/GoFuelCarrier'
    GoFuelCarrierFetchResponse:
      type: array
      items:
        $ref: '#/components/schemas/GoFuelCarrier'

    ImageFile:
      type: object
      required:
        - path
        - created_by_user_id
      properties:
        user_id:
          type: integer
        created_by_user_id:
          type: integer
        path:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z

    FuelReceiptRequest:
      type: object
      required:
      - carrier_id
      - fuel_receipt_number
      - price
      - quantity
      - total
      - state
      - city
      - receipt_date
      properties:
        carrier_id:
          type: integer
        power_unit_id:
          type: integer
        image_file_id:
          type: integer
        fuel_receipt_number:
          type: string
        price:
          type: number
        quantity:
          type: number
        total:
          type: number
        receipt:
          type: string
        state:
          type: string
        city:
          type: string
        odometer_reading_in_miles:
          type: number
        fuel_provider:
          type: string
        receipt_date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z

    FuelReceiptWithImage:
      type: object
      required:
      - carrier_id
      - fuel_receipt_number
      - price
      - quantity
      - total
      - state
      - city
      - receipt_date
      properties:
        carrier_id:
          type: integer
        power_unit_id:
          type: integer
        user_id:
          type: integer
        image_file_id:
          type: integer
        fuel_receipt_number:
          type: string
        price:
          type: number
        quantity:
          type: number
        total:
          type: number
        receipt:
          type: string
        state:
          type: string
        city:
          type: string
        odometer_reading_in_miles:
          type: number
        fuel_provider:
          type: string
        receipt_date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        created_at:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        updated_at:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        image_file:
          $ref: '#/components/schemas/ImageFile'

    LoadNoteArrayResponse:
      type: array
      items:
        $ref: '#/components/schemas/LoadNoteResponse'
    APIRequestLogFetchResponse:
      type: array
      items:
        $ref: '#/components/schemas/APIRequestShortResponeLog'
    UserNotificationFetchResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserNotification'
    LoginResponse:
      type: object
      properties:
        auth_token:
          type: string
        user:
          type: object
          $ref: '#/components/schemas/User'
    FuelReportResponse:
      type: array
      items:
        $ref: '#/components/schemas/FuelReportResponseObject'

    DomainSearchResponse:
      type: array
      items:
        $ref: '#/components/schemas/DomainSearchObject'

    TaxRatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/TaxRateObject'

    NotificationsCountResponse:
      type: object
      properties:
        unread_notifications:
          type: integer
          format: int64
          description: "Number of unread notifications"
          example: 2

    TaxRateObject:
      type: object
      properties:
        year:
          type: number
          example: 2018
        state_code:
          type: string
          example: FL
        id:
          type: number
          example: 161
        created_at:
          type: string
          format: date-time
          example: 2018-11-27T13:03:03Z
        diesel_tax_rate:
          type: number
          example: 0.3437
        updated_at:
          type: string
          format: date-time
          example: 2018-11-27T13:03:03Z
        gasoline_tax_rate:
          type: number
          example: 0.345
        state:
          type: string
          example: FLORIDA #19
        quarter:
          type: number
          example: 2

    TaxRateAddObject:
      type: object
      properties:
        year:
          type: number
          example: 2018
        state_code:
          type: string
          example: FL
        diesel_tax_rate:
          type: number
          example: 0.3437
        gasoline_tax_rate:
          type: number
          example: 0.345
        quarter:
          type: number
          example: 2

    DomainSearchObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ID for object"
          example: 27
        type:
          type: integer
          format: int64
          description: "0 for users, 1 for carriers"
          example: 0
        identifier:
          type: string
          description: "Email for users, name for carriers."
          example: "test@gmail.com"


    FuelReportResponseObject:
      type: object
      properties:
        index:
          type: integer
          format: int64
          description: "Index number sent in request"
        location_with_best_price:
          type: object
          $ref: '#/components/schemas/FuelLocation'
        air_miles_distance:
          type: integer
          format: float
          description: "Distance between location sent in request and GoFuel location with best price"

    UsersActivityResponse:
      type: array
      items:
        $ref: '#/components/schemas/UsersActivityResponseObject'
    FuelReportRequest:
      type: array
      items:
        $ref: '#/components/schemas/FuelReportRequestObject'
    FuelDataReportResponseObject:
      type: array
      items:
        $ref: '#/components/schemas/FuelDataReportObject'
    FuelDataReportObject:
      type: object
      properties:
        id: 
          type: integer
          format: int32
          description: Optional
        idle_in_seconds: 
          type: integer
          format: int32
        speed_event: 
          type: number
        created_at: 
          type: string
          format: date-time
          description: Optional
        accel: 
          type: number
        user_id: 
          type: integer
          format: int32
          description: Optional
        braking: 
          type: integer
          format: int32
        vin_number: 
          type: string
        truck_name: 
          type: string
        speed_max: 
          type: integer
          format: int32
        fuel_economy: 
          type: number
        date: 
          type: string
          format: date-time
        idle_time_elapsed_in_seconds: 
          type: integer
          format: int32
        carrier_id: 
          type: integer
          format: int32
          description: Optional
        fuel_consumed: 
          type: number
        idle_fuel_consumed: 
          type: number

    FuelDataReportResponseObjectByUser:
      type: array
      items:
        $ref: '#/components/schemas/FuelDataReportObjectByUser'
    FuelDataReportObjectByUser:
      type: object
      properties:
        id: 
          type: integer
          format: int32
          description: Optional
        idle_in_seconds: 
          type: integer
          format: int32
        speed_event: 
          type: number
        created_at: 
          type: string
          format: date-time
          description: Optional
        accel: 
          type: number
        user_id: 
          type: integer
          format: int32
          description: Optional
        braking: 
          type: integer
          format: int32
        user_name: 
          type: string
        speed_max: 
          type: integer
          format: int32
        fuel_economy: 
          type: number
        date: 
          type: string
          format: date-time
        idle_time_elapsed_in_seconds: 
          type: integer
          format: int32
        carrier_id: 
          type: integer
          format: int32
          description: Optional
        fuel_consumed: 
          type: number
        idle_fuel_consumed: 
          type: number
          
    FuelReportRequestObject:
      type: object
      properties:
        index:
          type: integer
          format: int64
          description: "Index for the array element. This is for identifying the correspondent value in the response's array"
        date:
          type: string
          default: "2019-06-13"
          description: "Date for prices. Format: YYYY-mm-dd (Ex: 2019-08-22)"
        location_number:
          type: integer
          format: int64
          description: "Optional (you can send either location_number or lat/lon)"
        lat:
          type: number
          example: 37.113
          description: "Optional (you can send either location_number or lat/lon)"
        lon:
          type: number
          example: -112.0654
          description: "Optional (you can send either location_number or lat/lon)"

    UsersActivityResponseObject:
      type: object
      properties:
        status:
          type: string
          example: DRIVING
        truck_number:
          type: string
          example: GoodVin
        distance:
          type: number
          example: 0
        vin:
          type: string
          example: 2B3HD46R6YH428099
        last_name:
          type: string
          example: Lovera
        date:
          type: string
          example: '2020-02-13T22:20:47Z'
        user_id:
          type: number
          example: 1969
        cycle_time_in_seconds:
          type: number
          example: 668
        first_name:
          type: string
          example: Juan

    UsersActivityStatsResponse:
      type: object
      properties:
        number_of_users:
          type: integer
          description: "Number of users expected in activity call"
        number_of_pages:
          type: integer
          description: "Number of pages expected in activity call"

    UserLocationResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserLocation'

    LoadsReducedListResponse:
      type: array
      items:
        $ref: '#/components/schemas/LoadResponseReduced'

    FuelTransactionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FuelTransaction'

    ImageUploadResponse:
      type: object
      properties:
        path:
          type: string
          example: "images/ACBB3AC1-5132-4AAA-81B2-9335292BF9D0.png"
        id:
          type: number
          example: 5
        notes:
          type: string
          example: hello
        created_by_user_id:
          type: number
          example: 1969
        created_at:
          type: string
          format: date-time
          example: "2019-11-20T23:51:43Z"

    UserLocation:
      type: object
      properties:
        id:
          type: integer
          description: "ID for location (optional)"
        lat:
          type: number
          format: float
          description: "Latitude for location"
        lon:
          type: number
          format: float
          description: "Longitude for location"
        date:
          type: string
          format: string
          description: "Date for location"

    ChangePasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          description: "Between 8 and 30 chars. Must contain at least 1 lowercase, 1 uppercase and 1 digit."
          example: "Hey1234"
        old_password:
          type: string
          description: "Must match user's current password. Returns 401 if pass is incorrect."
          example: "Ha1234"

    CreateNewUserRequest:
      type: object
      properties:
        email:
          type: string
          description: "Must be a valid email. Returns 409 if email is already taken."
          example: "juanloverab@gmail.com"
        time_zone:
          type: string
          description: "Must be one of the following: 'Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Mountain Time (US & Canada)', 'Pacific Time (US & Canada)'"
          example: "Mountain Time (US & Canada)"
        picture_id:
          type: string
          description: "ID of the uploaded image. This ID can be obtained using tower/image_upload endpoint"
          example: 6
        first_name:
          type: string
          example: Juan
          description: "Min 2 char, max 30 char. Alphanumeric."
        last_name:
          type: string
          example: Lovera
          description: "Min 2 char, max 30 char. Alphanumeric."
        license_state:
          type: string
          example: FL
          description: 'Must be one of: "AL","AK","AZ","AR","CA","CO","CT","DE","FL","DC","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"'
        license_number:
          type: string
          example: 5678973
          description: "Min 0 char, max 20 char. Alphanumeric."
        home_terminal_address:
          type: string
          example: homet
          description: "Min 2 char, max 50 char. Alphanumeric."
        duty_cycle_days:
          type: number
          example: 7
          description: "Must be one of: 7, 8"
        duty_cycle_limit:
          type: number
          example: 60
          description: "Must be one of: 60, 70"
        role:
          type: string
          example: driver
          description: 'Must be one of: "owner_operator", "admin", "superadmin", "driver". Only for superadmin.'
        reward_points:
          type: number
          example: 234
          description: "Positive integer. Only for superadmin."
        gofuel_enabled:
          type: boolean
          description: "Only for superadmin"
        blocked:
          type: boolean
          description: "Only for superadmin"
        carrier_id:
          type: boolean
          description: "ID of carrier. List of carriers can be obtained by calling /v1/tower/carriers/. Only for superadmin"
        password:
          type: string
          description: "Between 8 and 30 chars. Must contain at least 1 lowercase, 1 uppercase and 1 digit."
          example: "Hey1234"
        phone:
          type: string
          description: "Valid phone number for user."
          example: "5555555"
    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          description: "Must be a valid email. Returns 409 if email is already taken."
          example: "juanloverab@gmail.com"
        time_zone:
          type: string
          description: "Must be one of the following: 'Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Mountain Time (US & Canada)', 'Pacific Time (US & Canada)'"
          example: "Mountain Time (US & Canada)"
        picture_id:
          type: string
          description: "ID of the uploaded image. This ID can be obtained using tower/image_upload endpoint"
          example: 6
        first_name:
          type: string
          example: Juan
          description: "Min 2 char, max 30 char. Alphanumeric."
        last_name:
          type: string
          example: Lovera
          description: "Min 2 char, max 30 char. Alphanumeric."
        license_state:
          type: string
          example: FL
          description: 'Must be one of: "AL","AK","AZ","AR","CA","CO","CT","DE","FL","DC","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"'
        license_number:
          type: string
          example: 5678973
          description: "Min 0 char, max 20 char. Alphanumeric."
        home_terminal_address:
          type: string
          example: homet
          description: "Min 2 char, max 50 char. Alphanumeric."
        duty_cycle_days:
          type: number
          example: 7
          description: "Must be one of: 7, 8"
        duty_cycle_limit:
          type: number
          example: 60
          description: "Must be one of: 60, 70"
        role:
          type: string
          example: driver
          description: 'Must be one of: "owner_operator", "admin", "superadmin", "driver". Only for superadmin.'
        reward_points:
          type: number
          example: 234
          description: "Positive integer. Only for superadmin."
        gofuel_enabled:
          type: boolean
          description: "Only for superadmin"
        blocked:
          type: boolean
          description: "Only for superadmin"
        carrier_id:
          type: boolean
          description: "ID of carrier. List of carriers can be obtained by calling /v1/tower/carriers/. Only for superadmin"
        phone:
          type: string
          description: "Valid phone number for user."
          example: "5555555"
    UserNotification:
      type: object
      properties:
        id:
          type: string
          description: "ID for location"
        created_time:
          type: string
          format: date-time
          example: '2019-09-20T21:37:32Z'
        notification_description:
          type: string
          description: "User notification description"
        already_read:
          type: boolean
          description: "Boolean which indicates if the notification has been read"
        type:
          type: number
          format: int
          description: "Int for type of notification"
        sender_user_id:
          type: number
          format: int
          description: "Sender User ID"
        receiver_user_id:
          type: number
          format: int
          description: "Receiver User ID"
    LoadLocationResponse:
      type: object
      properties:
        state:
          type: string
          example: CA
        geohash:
          type: string
          example: 9q97v6kvrnk
        label:
          type: string
          example: 7248 Basking Ridge Ave San Jose CA 95138 United States
        house_number:
          type: string
          example: 7248
        created_at:
          type: string
          format: date-time
          example: '2019-09-20T21:37:32Z'
        create_by_user_id:
          type: number
          example: 1969
        street2:
          type: string
          example: Apt 4
        zipcode:
          type: string
          example: 95138
        created_by_company_id:
          type: number
          example: 1914
        city:
          type: string
          example: San Jose
        street1:
          type: string
          example: Basking Ridge Ave
        name:
          type: string
          example: Juan's Office 2

    LoadLocationRequest:
      type: object
      properties:
        name:
          type: string
          example: Juan's Office 2
        street1:
          type: string
          example: 7248 Basking Ridge Ave
        street2:
          type: string
          example: Apt 4
        city:
          type: string
          example: San Jose
        zipcode:
          type: string
          example: 95138

    CreateNotificationRequest:
      type: object
      properties:
        title:
          type: string
          example: Message's title
        message:
          type: string
          example: Message's body
        to:
          type: string
          enum: ['all','specific_user','specific_carrier','own_carrier']
          example: specific_user
        receiver_id:
          type: number
          example: 1969
          description: If specific_user is sent, this should be the id of the user. If specific_carrier is sent, this should be id of the carrier. Null otherwhise.
        needs_push:
          type: boolean
          example: true
          description: 'If true, a push notification will be sent'

    FuelCalculationResponse:
      type: object
      properties:
        fuel_price:
          type: number
          example: 3.789
        miles:
          type: number
          example: 46.502162898
        gallons:
          type: number
          example: 7.154178907384615
        total:
          type: number
          example: 27.10718388008031
    LoadCarrierDetailsResponse:
      type: object
      properties:
        contact_email: 
          type: string
          example: "ZANDS2017EXPRESS@GMAIL.COM"
        company_rep1: 
          type: string
          example: "JENNIFER WEIGNER"
        state: 
          type: string
          example: "RI"
        address1: 
          type: string
          example: "174 ROBINSON ST"
        contact_phone: 
          type: string
          example: "(401) 559-4458"
        phone_number: 
          type: string
          example: "(401) 559-4458"
        liab_ins_amount: 
          type: string
          example: "750000"
        liability_insurer: 
          type: string
          example: "UNITED FINANCIAL CASUALTY COMPANY"
        legal_name: 
          type: string
          example: "Z & S EXPRESS LLC"
        zip_code: 
          type: string
          example: "02914"
        mcmx_number: 
          type: string
          example: "60359"
        entity_type: 
          type: string
          example: "C"
        city: 
          type: string
          example: "E PROVIDENCE"
        liab_policy: 
          type: string
          example: "CA 6415226"
        power_units: 
          type: string
          example: "1"
        name: 
          type: string
          example: "Z & S EXPRESS LLC"

    LoadResponse:
      type: object
      properties:
        estimated_delivery_date:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        weight:
          type: number
          example: 33
        total_load_price:
          type: number
          example: 12.018765037531844
        temperature:
          type: number
          example: 55
        estimated_pickup_date:
          type: string
          format: date-time
          example: '2019-09-25T11:37:32Z'
        length_unit:
          type: string
          example: in
        weight_unit:
          type: string
          example: LB
        destination_location_id:
          type: string
          example: 9q97v6kvrnk
        timing:
          type: string
          example: 1 day
        customer_id:
          type: string
          example: My ID
        origin_location_id:
          type: string
          example: 9q9hrsq2vq9
        fuel_price:
          type: number
          example: 3.909
        created_by_company_id:
          type: number
          example: 1914
        equipment_group:
          type: string
          example: Dry Van
        id:
          type: number
          example: 2
        length:
          type: number
          example: 20
        bid_total:
          type: number
          example: 444
        temperature_unit:
          type: string
          example: F
        distance_miles:
          type: number
          example: 19.985155473
        equipment_type:
          type: string
          example: 53 Foot
        fuel_gallons:
          type: number
          example: 3.0746393035384614
        created_at:
          type: string
          format: date-time
          example: '2019-09-25T00:54:47Z'
        is_max_temperature:
          type: boolean
        created_by_user_id:
          type: number
          example: 1969
        commodities:
          type: array
          items:
            type: string
          example: ["Alcohol"]
        histories:
          type: array
          items:
            $ref: '#/components/schemas/LoadHistory'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/LoadDocumentResponse'

    LoadHistory:
      type: object
      properties:
        id:
          type: number
          example: 1
        user_id:
          type: number
          example: 2
        load_id:
          type: number
          example: 3
        description:
          type: string
          example: "battery: 100 lat: 1.4567 lng: -8.346 unlockTime: 2019-05-28 07:42:36 +0000"
        action:
          type: string
          example: "Lock"
        related_object_id:
          type: number
          example: 4
        lat:
          type: number
          example: 35.03
        lng: 
          type: number
          example: -115.2
        created_at:
          type: string
          format: date-time
          example: '2019-09-25T11:37:32Z'
          
    LoadResponseReduced:
      type: object
      properties:
        customer_id:
          type: string
          example: My ID
        estimated_delivery_date:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        estimated_pickup_date:
          type: string
          format: date-time
          example: '2019-09-25T11:37:32Z'
        id:
          type: number
          example: 2
        bid_total:
          type: number
          example: 444
        distance_miles:
          type: number
          example: 19.985155473
    LoadResponseReducedMobile:
      type: object
      properties:
        customer_id:
          type: string
          example: My ID
        estimated_delivery_date:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        estimated_pickup_date:
          type: string
          format: date-time
          example: '2019-09-25T11:37:32Z'
        id:
          type: number
          example: 2
        bid_total:
          type: number
          example: 444
        distance_miles:
          type: number
          example: 19.985155473
        offer:
          type: string
          example: New
        is_read: 
          type: boolean
          example: true
        min_rate_per_mile:
          type: number
          example: 10.50
        dead_head:
          type: number
          example: 100.0
        shipper_rating: 
          type: number
          example: 3.5
    LoadsReducedMobileListResponse:
      type: array
      items:
        $ref: '#/components/schemas/LoadResponseReducedMobile'
    LoadUpdateStatusRequest:
      type: object
      properties:
        status:
          type: string
          example: "Origin"
        image_id:
          type: number
          example: 12
    LoadRatingRequest:
      type: object
      properties:
        rating:
          type: number
          example: 3.5
        review:
          type: string
          example: "Test Review"
        object_type: 
          type: string
          example: "User"
        object_id:
          type: number
          example: 14
    LoadUpdateDatesRequest:
      type: object
      properties:
        estimated_pickup_date:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'
        estimated_delivery_date:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'

    ViolationRequest:
      type: object
      properties:
        lon:
          type: number
          example: -115.2
        violation_time:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'
        lat:
          type: number
          example: 35.03
        type:
          type: number
          example: 1
          description: '0 -> "Daily Driving limit exceeded", 1 -> "Daily Driving window exceeded, 2 -> "Required break missed", 3 -> "Cycle duty hours exceeded"'

    ViolationResponse:
      type: object
      properties:
        id:
          type: number
          example: 2
        created_at:
          type: string
          format: date-time
          example: '2019-10-18T22:01:25Z'
        user_name:
          type: string
          example: 'John Doe'
        lon:
          type: number
          example: -115.2
        violation_time:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'
        user_id:
          type: number
          example: 1969
        lat:
          type: number
          example: 35.03
        type:
          type: number
          example: 1
          description: '0 -> "Daily Driving limit exceeded", 1 -> "Daily Driving window exceeded, 2 -> "Required break missed", 3 -> "Cycle duty hours exceeded"'
    DVIRResponse:
      type: object
      properties:
        location:
          type: string
        trailers:
          type: array
          items:
            type: object
            properties:
              trailer_number:
                type: string
        lng:
          type: string
        signature_file:
          type: object
          properties:
            note:
              type: string
            id:
              type: integer
              format: int32
            file_type:
              type: string
            file:
              type: string
            created_at:
              type: string
              format: date-time
            user_id:
              type: integer
              format: int32
            updated_at:
              type: string
              format: date-time
        vehicle:
          type: object
          properties:
            defects:
              type: array
              items:
                type: object
                properties:
                  category:
                    type: string
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        severity:
                          type: string
            vin:
              type: string
        odometer_reading:
          type: string
        trip_uuid:
          type: string
        type:
          type: string
        inspection_time:
          type: string
          format: date-time
        lat:
          type: string

    GlobalSettingResponse:
      type: object
      properties:
        id:
          type: number
          example: 2
        iosMasterAppVersionReleaseDate:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'
        iosMasterAppVersion:
          type: string
          example: 123
        iosForceUpdate:
          type: boolean
          example: false
          description: Marks if the ios needs to be force updated
        androidMasterAppVersionReleaseDate:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        androidMasterAppVersion:
          type: string
          example: 123
        androidForceUpdate:
          type: boolean
          example: false
          description: Marks if the android needs to be force updated
        latestFirmwareReleaseDate:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        latestFirmware:
          type: string
          example: 123
    GlobalSettingRequest:
      type: object
      properties:
        iosMasterAppVersionReleaseDate:
          type: string
          format: date-time
          example: '2019-10-18T12:17:55Z'
        iosMasterAppVersion:
          type: string
          example: 123
        iosForceUpdate:
          type: boolean
          example: false
          description: Marks if the ios needs to be force updated
        androidMasterAppVersionReleaseDate:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        androidMasterAppVersion:
          type: string
          example: 123
        androidForceUpdate:
          type: boolean
          example: false
          description: Marks if the android needs to be force updated
        latestFirmwareReleaseDate:
          type: string
          format: date-time
          example: '2019-09-27T21:27:32Z'
        latestFirmware:
          type: string
          example: 123
    LoadNoteRequest:
     type: object
     properties:
      note:
        type: string
        example: This is the note's text
        description: Min 2 char, max 500 char
      is_private:
        type: boolean
        example: false
        description: Marks if the note is private or public

    LoadNoteResponse:
     type: object
     properties:
      note:
        type: string
        example: This is the note's text
        description: Min 2 char, max 500 char
      is_private:
        type: boolean
        example: false
        description: Marks if the note is private or public
      id:
        type: number
        example: 5
        description: Note's ID
      load_id:
        type: number
        example: 13
        description: Related Load's ID
      created_by_user_id:
        type: number
        example: 1969
        description: User that created the load
  
    LoadDocumentRequest:
      type: object
      properties:
        load_id: 
          type: number
          example: 1
        image_id:
          type: number
          example: 2
        document_type:
          type: string
          example: "BOL"
    LoadDocumentResponse:
      type: object
      properties:
        id:
          type: number
          example: 3
        load_id: 
          type: number
          example: 1
        image_id:
          type: number
          example: 2
        document_type:
          type: string
          example: "BOL"
        created_at:
          type: string
          format: date-time
          example: "2019-09-04T03:31:00Z"
        load_status:
          type: string
          example: "Origin"
        load_history_id:
          type: number
          example: 13
    LoadRequest:
     type: object
     properties:
      customer_id:
        type: string
        example: My ID
        description: Optional
      commodities:
        type: array
        items:
          type: string
        example: ["Alcohol"]
        description: Optional
      equipment_group:
        type: string
        example: Dry Van
        description: "Can be: Specialized | Dry Van | Flatbed | Misc | Temp Control"
      equipment_type:
        type: string
        example: 53 Foot
        description: "Can be: Auto Carrier | Dump Trailer | Hopper Bottom | Hotshot | 53 Foot | Double Drop | Flatbed - Hazardous | Flatbed | Flatbed w/ Pallet Exchange | Flatbed w/ Sides | Lowboy | Maxi | Removable Gooseneck | Step Deck | Power Only | Reefer | Reefer - Hazardous | Reefer w/ Pallet Exchange"
      weight:
        type: number
        example: 33
      length:
        type: number
        example: 20
      weight_unit:
        type: string
        example: LB
        description: "Can be: LB | KG"
      length_unit:
        type: string
        example: in
        description: "Can be: in | m"
      temperature:
        type: number
        example: 55
        description: Optional
      is_max_temperature:
        type: boolean
        description: Optional. True if temperature is max value. False otherwhise.
      temperature_unit:
        type: string
        example: F
        description: Optional
      origin_location_id:
        type: string
        example: 9q9hrsq2vq9
      destination_location_id:
        type: string
        example: 9q97v6kvrnk
      estimated_pickup_date:
        type: string
        format: date-time
        example: '2019-09-25T11:37:32Z'
      estimated_delivery_date:
        type: string
        format: date-time
        example: '2019-09-27T21:27:32Z'
      timing:
        type: string
        example: 1 day
        description: "Optional. Can be: 1 day | 2 days | 3 days | 7 days"
      bid_total:
        type: number
        example: 444

    LoadEditRequest:
     type: object
     properties:
      id:
        type: number
        example: 4
        description: ID for the load to be edited
      customer_id:
        type: string
        example: My ID
        description: Optional
      commodities:
        type: array
        items:
          type: string
        example: ["Alcohol"]
        description: Optional
      equipment_group:
        type: string
        example: Dry Van
        description: "Can be: Specialized | Dry Van | Flatbed | Misc | Temp Control"
      equipment_type:
        type: string
        example: 53 Foot
        description: "Can be: Auto Carrier | Dump Trailer | Hopper Bottom | Hotshot | 53 Foot | Double Drop | Flatbed - Hazardous | Flatbed | Flatbed w/ Pallet Exchange | Flatbed w/ Sides | Lowboy | Maxi | Removable Gooseneck | Step Deck | Power Only | Reefer | Reefer - Hazardous | Reefer w/ Pallet Exchange"
      weight:
        type: number
        example: 33
      length:
        type: number
        example: 20
      weight_unit:
        type: string
        example: LB
        description: "Can be: LB | KG"
      length_unit:
        type: string
        example: in
        description: "Can be: in | m"
      temperature:
        type: number
        example: 55
        description: Optional
      is_max_temperature:
        type: boolean
        description: Optional. True if temperature is max value. False otherwhise.
      temperature_unit:
        type: string
        example: F
        description: Optional
      origin_location_id:
        type: string
        example: 9q9hrsq2vq9
      destination_location_id:
        type: string
        example: 9q97v6kvrnk
      estimated_pickup_date:
        type: string
        format: date-time
        example: '2019-09-25T11:37:32Z'
      estimated_delivery_date:
        type: string
        format: date-time
        example: '2019-09-27T21:27:32Z'
      timing:
        type: string
        example: 1 day
        description: "Optional. Can be: 1 day | 2 days | 3 days | 7 days"
      bid_total:
        type: number
        example: 444
    UsersActivity:
      type: object
      properties:
        from_timestamp:
          type: string
          description: "Date for segment's start"
        to_timestamp:
          type: string
          description: "Date for segment's end"
        on_duty_time:
          type: integer
          description: "Time remaining in duty window (in seconds)"
        cycle_time:
          type: integer
          description: "Time remaining for cycle (in seconds)"
        driving_time:
          type: integer
          description: "Time remaining for drive window (in seconds)"
        lat:
          type: number
          format: float
          description: "Latitude for latest location"
        lng:
          type: number
          format: float
          description: "Longitude for latest location"
        time_elapsed:
          type: integer
          description: "Duration for the segment (in min)"
        state:
          type: string
          description: "Current status of the user. Can be: OFF DUTY, ON DUTY, DRIVING or SLEEPER"
        distance_travelled_in_miles:
          type: integer
          description: "Distance for the segment (in miles)"
    CompaniesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Company'
    Carrier: 
      type: object
      properties: 
        has_proof_of_delivery: 
          type: boolean
        guid: 
          type: string
        konexial: 
          type: boolean
        use_portal: 
          type: boolean
        gofuel_enabled: 
          type: boolean
        order_confirmation_required: 
          type: boolean
        updated_at: 
          type: string
          format: date-time
        allow_to_consolidate: 
          type: boolean
        auto_accept: 
          type: boolean
        parent_id: 
          type: integer
          format: int32
        goload_enabled: 
          type: boolean
        lead_time: 
          type: integer
          format: int32
        act_as_3pl: 
          type: boolean
        edi_support: 
          type: boolean
        may_send_backorders: 
          type: boolean
        type: 
          type: string
        allow_manual_order_creation: 
          type: boolean
        name: 
          type: string
        id: 
          type: integer
          format: int32
        company_id: 
          type: string
        scac: 
          type: string
        moving_delivery_date_delta: 
          type: integer
          format: int32
        search_string: 
          type: string
        international: 
          type: boolean
        unknown: 
          type: boolean
        will_call: 
          type: boolean
        usdot: 
          type: string
        ship_date_offset: 
          type: integer
          format: int32
        vendor_chooses_destination: 
          type: boolean
        time_zone: 
          type: string
        created_at: 
          type: string
          format: date-time
        default_ship_date_delta: 
          type: integer
          format: int32
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          description: "Type of company"
        name:
          type: string
          description: "Name of the company"
    CarrierRequest:
      type: object
      properties: 
        carrier: 
          $ref: '#/components/schemas/CarrierRequestObject'
    CarrierRequestObject:
      type: object
      properties: 
        name: 
          type: string
        usdot: 
          type: string
        scac: 
          type: string
        office_terminal_address: 
          type: string
        time_zone: 
          type: string
        parent_company: 
          type: integer
          format: int32
    CarrierResponse:
      type: object
      properties:
        message:
          type: string
        carrier:
          $ref: '#/components/schemas/Carrier'
          description: Always comes in blank. Private field.
    FMCSAServiceResponseArray:
      type: array
      items:
        $ref: '#/components/schemas/FMCSAServiceResponse'
    FMCSAServiceResponse:
      type: object
      properties:
        request_body: 
          type: string
        id: 
          type: integer
          format: int32
        start_date: 
          type: string
          format: date-time
        created_at: 
          type: string
          format: date-time
        response_body: 
          type: string
        response_header: 
          type: string
        user_id: 
          type: integer
          format: int32
        updated_at: 
          type: string
          format: date-time
        end_date: 
          type: string
          format: date-time
    GoFuelCarrier:
      type: object
      properties:
        id:
          type: integer
          format: int64
        carrier_id:
          type: string
          description: Always comes in blank. Private field.
        name:
          type: string
        available_report_start_date:
          type: string
          example: '2019-09-25T11:37:32Z'
          description: "Available start date for fuel transaction data. Can be null, this means there's no data for this carrier."
        available_report_end_date:
          type: string
          example: '2019-09-26T11:37:32Z'
          description: "Available end date for fuel transaction data. Can be null, this means there's no data for this carrier."
    APIRequestLog:
      type: object
      properties:
        created_time:
          type: string
          example: '2019-10-14T13:30:19Z'
          description: Log's created time
        request_http_body:
          type: string
          example: '<no body>'
          description: Request's body.
        request_http_headers:
          type: string
          example: '[(\"Host\", \"localhost:8080\"), (\"Connection\", \"keep-alive\"), (\"Content-Length\", \"0\"), (\"Sec-Fetch-Mode\", \"cors\"), (\"Cache-Control\", \"no-cache\"), (\"Origin\", \"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop\"), (\"Authorization\", \"Basic anVhbmxvdmVyYWJAZ21haWwuY29tOlRlc3QxMjM0\"), (\"User-Agent\", \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\"), (\"Postman-Token\", \"a9b2eb9d-c43b-c376-a410-db237cb00f58\"), (\"Accept\", \"*/*\"), (\"Sec-Fetch-Site\", \"cross-site\"), (\"Accept-Encoding\", \"gzip, deflate, br\"), (\"Accept-Language\", \"es-419,es;q=0.9,en;q=0.8\"), (\"Cookie\", \"vapor-session=VDdAvBrgxKG0jr31p2b6Sg==\")]'
          description: Request's headers.
        id:
          type: integer
          example: 804119
          description: API Request Log ID
        response_duration_time:
          type: number
          format: float
          example: 0.32393193244934082
          description: Expended time from receiving the request until sending the response
        request_http_method:
          type: string
          example: 'POST'
          description: Request's HTTP Method
        is_from_app:
          type: boolean
          example: true
          description: Determines if it's from the app or the tower
        request_httpUrl:
          type: string
          example: '/v1/tower/login'
          description: Request's HTTP Url
        response_http_code:
          type: integer
          example: 200
          description: Response's HTTP Code
        response_http_body:
          type: string
          example: '"{\"latest_aggregated_eld_log_guid\":\"eb4cc925-029a-1802-4f64-279a5262e32f\",\"id\":1969,\"role\":\"superadmin\",\"encrypted_password\":\"\",\"company_id\":1914,\"email\":\"juanloverab@gmail.com\",\"user_profile_id\":2404,\"my20_subscription_kind\":0,\"my20_subscription_status\":2,\"profile_image\":\"Screen_Shot_2019-08-28_at_12.06.05_PM.png\"}"'
          description: Response's body
    APIRequestShortResponeLog:
      type: object
      properties:
        created_time:
          type: string
          example: '2019-10-14T13:30:19Z'
          description: Log's created time
        id:
          type: integer
          example: 804119
          description: API Request Log ID
        request_http_method:
          type: string
          example: 'POST'
          description: Request's HTTP Method
        is_from_app:
          type: boolean
          example: true
          description: Determines if it's from the app or the tower
        request_httpUrl:
          type: string
          example: '/v1/tower/login'
          description: Request's HTTP Url
    FuelTransaction:
      type: object
      properties:
        gofuel_carrier_id:
          type: string
          example: 307616
        truck_number:
          type: string
          example: 54374
        truck_retail_price_per_gallon:
          type: number
          example: 2.959
        cash_advance_amount:
          type: number
          example: 0
        truck_discounted_price_per_gallon:
          type: number
          example: 2.438
        chain_code:
          type: string
          example: 001
          description: "FJ/PILOT is 001, PETRO/TA is 003, LOVES is 002"
        id:
          type: number
          example: 1126
        location_name:
          type: string
          example: "LOVES #77"
        receipt_date:
          type: string
          format: date-time
          example: "2019-09-04T03:31:00Z"
        trailer_gallons:
          type: number
          example: 0
        trailer_retail_price_per_gallon:
          type: number
          example: 0
        location_id:
          type: string
          example: 524129
        truck_gallons:
          type: number
          example: 101.78
        transaction_fee:
          type: number
          example: 0
        driver_name:
          type: string
          example: Juan
        trailer_discounted_price_per_gallon:
          type: number
          example: 0


    User:
      type: object
      properties:
        gofuel_enabled:
          type: boolean
        login:
          type: string
          example: juanloverab@gmail.com
        restart_rule:
          type: object
          properties:
            restart_rule_timestamp:
              type: string
              example: 2020-02-13T01:00:43Z
            restart_rule_type:
              type: string
              example: 34h
            restart_rule_active:
              type: boolean
        last_name:
          type: string
          example: Lovera
        created_at:
          type: string
          example: 2018-01-11T01:17:02Z
        id:
          type: number
          example: 1969
        carrier_name:
          type: string
          example: Hutch
        blocked:
          type: boolean
        license_state:
          type: string
          example:
        power_units:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1089
              latest_eld_log_guid:
                type: string
                example: 32602905-5ed1-cce2-addf-1c45615fb460
              fuel_type:
                type: string
                example: Diesel
              created_at:
                type: string
                example: 2019-01-04T04:09:32Z
              truck_number:
                type: string
                example: 000054
              mac_address:
                type: string
                example: 30:AE:A4:81:FE:7E
              vin:
                type: string
                example: 8398UEHFUEHFUUFJ
              source:
                type: string
                example: device
              alternative_mac_address:
                type: string
                example:
              license_plate_number:
                type: string
                example:
              truck_make:
                type: string
                example:
              license_state_name:
                type: string
                example:
              updated_at:
                type: string
                example: 2019-09-17T14:28:56Z
              guid:
                type: string
                example: b7dbae68-7a20-c112-c26b-8735b42193bd
              carrier_id:
                type: number
                example: 1914
              last_log_time:
                type: string
                example: 0
        usdot:
          type: string
          example:
        role:
          type: string
          example: superadmin
        license_number:
          type: string
          example:
        email:
          type: string
          example: juanloverab@gmail.com
        master_app_version_release_date:
          type: string
          example: 2019-04-01T00:00:00Z
        master_app_version:
          type: string
          example: 128
        force_update_app:
          type: boolean
        office_terminal_address:
          type: string
          example:
        my20_subscription_status:
          type: number
          example: 0
        scac:
          type: string
          example:
        device_app_version:
          type: string
          example: 19.10.1.1-Build 239
        display_sleep_time:
          type: number
          example: 1
        user_profile_id:
          type: number
          example: 2404
        first_name:
          type: string
          example: Juan
        device_type:
          type: string
          example: Simulator (iPhone 11 Pro Max) - iOS 13.3
        profile_image:
          type: string
          example: ../../../../images/D8EDE9FD-3130-4554-8988-98FE89EAB2C6.png
        time_zone:
          type: string
          example: Central Time (US & Canada)
        updated_at:
          type: string
          example: 2020-02-13T00:55:35Z
        my20_subscription_kind:
          type: number
          example: 0
        hos_alerts_duration:
          type: number
          example: 15
        device_os:
          type: string
          example: ios
        phone:
          type: string
          example: 13341111111
        search_string:
          type: string
          example: 1969 juanloverab@gmail.com Juan Lovera juanloverab@gmail.com 13341111111 +1-334-111-1111 +1 334 111 1111
        home_terminal_address:
          type: string
          example:


    UserResponse:
      type: array
      items:
        $ref: '#/components/schemas/User'

    TimelineResponse:
      type: array
      items:
        $ref: '#/components/schemas/TimelineObject'

    AggregatedLogsResponse:
      type: array
      items:
        $ref: '#/components/schemas/AggregatedLogObject'

    LogsResponse:
      type: array
      items:
        $ref: '#/components/schemas/LogObject'

    ViolationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ViolationResponse'

    DVIRsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DVIRResponse'

    FuelLocationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FuelLocation'

    GenericSimpleObjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/GenericSimpleObject'

    GenericSimpleObject:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer

    ReverseGeocode:
      type: object
      properties:
        state:
          type: string

    IFTAQuarterResponse:
      type: array
      items:
         type: string
    IFTAReportResponse:
      type: array
      items:
        $ref: '#/components/schemas/IFTAReport'
    IFTAReport:
      type: object
      properties:
        id:
          type: number
          example: 2
        state:
          type: string
          example: FL
          description: Values can be any of "AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"
        quarter:
          type: number
          example: 4
        fuel_type:
          type: string
          example: Diesel
          description: Values can be "Diesel" or "Unleaded"
        created_at:
          type: string
          format: date-time
          example: 2019-12-16T01:59:57Z
        fuel_variance:
          type: number
          example: 3
        amount_due:
          type: number
          example: 300
        jurisdiction:
          type: string
          example: FL
          description: Values can be any of "AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"
        miles:
          type: number
          example: 33
        updated_at:
          type: string
          format: date-time
          example: 2019-12-16T01:59:58Z
        year:
          type: number
          example: 2019
        fuel_used:
          type: number
          example: 44
        fuel_tax_rate:
          type: number
          example: 4
        fuel_bought:
          type: number
          example: 44
        carrier_id:
          type: number
          example: 1981
        truckId:
          type: number
          example: 1045
    PowerUnitRequest:
      type: object
      properties:
        license_plate_number:
          type: string
          example: ""
        license_state_name:
          type: string
          example: ""
        approved_firmware_version:
          type: string
          example: "282"
        truck_number:
          type: string
          example: "000007"
        mac_address:
          type: string
          example: "30:AE:A4:82:31:72"
        vin:
          type: string
          example: '3HSCNAPR55N048298'
        rate_per_mile:
          type: number
          example: 1260.0
        carrier_id:
          type: number
          example: 1981
        fuel_type:
          type: string
          example: Diesel
        equipment_type_name:
          type: string
          example: "Equipment Type"
        equipment_group_name:
          type: string
          example: "Equipment Group"         
    PowerUnitResponse:
      type: array
      items:
        $ref: '#/components/schemas/PowerUnit'
    PowerUnit:
      type: object
      properties:
        source:
          type: string
          example: device
        state:
          type: string
          example: GA
        license_plate_number:
          type: string
          example: ""
        license_state_name:
          type: string
          example: ""
        approved_firmware_version:
          type: string
          example: "282"
        truck_number:
          type: string
          example: "000007"
        mac_address:
          type: string
          example: "30:AE:A4:82:31:72"
        id:
          type: number
          example: 1128
        vin:
          type: string
          example: ^%$^%&*^*&(*&(&%&%$&^%
        last_log_time:
          type: string
          example: "0"
        rate_per_mile:
          type: string
          example: "0"
        carrier_id:
          type: number
          example: 1981
        carrier_name:
          type: string
          example: "Test Carrier"
        latest_eld_log_guid:
          type: string
          example: ff4203cc-355c-f6d3-4997-a78edfdec072
        guid:
          type: string
          example: bd32d711-ce2b-89d0-e499-e9b98432778f
        fuel_type:
          type: string
          example: Diesel
        equipment_type_name:
          type: string
          example: "Equipment Type"
        equipment_group_name:
          type: string
          example: "Equipment Group"          

    TrailerRequest:
      type: object
      properties:
        number:
          type: string
          example: "7578"
        carrier_id:
          type: number
          example: 1234
        user_id:
          type: number
          example: 2606          
        equipment_type_name:
          type: string
          example: "Equipment Type"
        equipment_group_name:
          type: string
          example: "Equipment Group" 
    TrailerResponse:
      type: array
      items:
        $ref: '#/components/schemas/Trailer'
    Trailer:
      type: object
      properties:
        active:
          type: boolean
        number:
          type: string
          example: 1234
        id:
          type: number
          example: 519
        created_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        carrier_id:
          type: number
          example: 1938
        carrier_name:
          type: string
          example: "Test Carrier"
        user_id:
          type: number
          example: 2606
        user_name:
          type: string
          example: "John"
        updated_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        equipment_type_name:
          type: string
          example: "Equipment Type"
        equipment_group_name:
          type: string
          example: "Equipment Group"
    LockRequest:
      type: object
      properties:
        name:
          type: string
          example: 'lock1'
        carrier_id:
          type: number
          example: 1938
        mac_address:
          type: string
          example: '30:AE:A4:82:31:72'
        serial_number:
          type: string
          example: "123456"
        battery:
          type: number
          example: 100
        type:
          type: string
          example: "HD Padlock"
        shackle:
          type: string
          example: "Loop"
        hierarchy_item_id:
          type: number
          example: 231
    LockResponse:
      type: array
      items:
        $ref: '#/components/schemas/Lock'
    Lock:
      type: object
      properties:
        id:
          type: number
          example: 519
        name:
          type: string
          example: 'lock1'
        carrier_id:
          type: number
          example: 1938
        carrier_name: 
          type: string
          example: 'Konexial'
        mac_address:
          type: string
          example: '30:AE:A4:82:31:72'
        serial_number:
          type: string
          example: "123456"
        battery:
          type: number
          example: 100
        type:
          type: string
          example: "HD Padlock"
        shackle:
          type: string
          example: "Loop"
        hierarchy_item_id: 
          type: number
          example: 213
        created_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'    
        updated_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
    LockMapResponse:
      type: array
      items:
        $ref: '#/components/schemas/LockMap'
    LockMap:
      type: object
      properties:
        id:
          type: number
          example: 123
        name: 
          type: string
          example: "Lock 1"
        lat:
          type: number
          example: 1.1233
        lng:
          type: number
          example: -8.234
        action:
          type: string
          example: "Lock"
    ActivitiesResponse:
      type: object
      properties:
        id:
          type: number
          example: 123
        lockId: 
          type: number
          example: 234
        recordedDate:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        carrierId:
          type: number
          example: 1978
        userId:
          type: number
          example: 123
        userName:
          type: string
          example: "John"
        action: 
          type: string
          example: "Lock"
        actionDetails:
          type: string
          example: "battery: 100 lat: 1.4567 lng: -8.346 unlockTime: 2019-05-28 07:42:36 +0000"
        createdAt:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        lock:
          type: object
          $ref: '#/components/schemas/Lock'
    LockAccessDetailsResponse:
      type: object
      properties:
        id:
          type: number
          example: 123
        name: 
          type: string
          example: "Lock 1"
        groups:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyItem'
        users: 
          type: array
          items:
            $ref: '#/components/schemas/User'
    LockAssignUsersRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: integer
          example: [1,2,3]
    LockAssignGroupsRequest:
      type: object
      properties:
        hierarchyItemIds:
          type: array
          items:
            type: integer
          example: [1,2,3]
    LockUnlockRequest:
      type: object
      properties:
        session:
          type: string
          example: "0000040ba7b0d91f7f45ad25698a18375c7e4f16"
    LockUnlockConfirmationRequest:
      type: object
      properties:
        battery:
          type: number
          example: 100
        lat:
          type: number
          example: 1.1233
        lng:
          type: number
          example: -8.234
        unlockTime:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
    LockNokeLockRequest:
      type: object
      properties:
        battery:
          type: number
          example: 100
        lat:
          type: number
          example: 1.1233
        lng:
          type: number
          example: -8.234
        lockTime:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
    UnlockResponse:
      type: object
      properties:
        result:
          type: string
          example: "Refer https://github.com/noke-inc/noke-core-api-documentation#example-response-1"
          
    HierarchyLevelRequest:
      type: object
      properties:
        name:
          type: string
          example: 'Customer Level'
        carrier_id:
          type: number
          example: 1938
        position:
          type: number
          example: 0
        asset:
          type: string
          example: "Lock"
    HierarchyLevelResponse:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyLevel'
    HierarchyLevel:
      type: object
      properties:
        id:
          type: number
          example: 519
        name:
          type: string
          example: 'Customer Level'
        carrier_id:
          type: number
          example: 1938
        carrier_name:
          type: string
          example: "Hutch"
        position:
          type: number
          example: 0
        asset:
          type: string
          example: "Lock"
        created_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'    
        updated_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'     
          
    HierarchyItemRequest:
      type: object
      properties:
        name:
          type: string
          example: 'US Lumber'
        carrier_id:
          type: number
          example: 1938
        usdot:
          type: string
          example: '23412334'
        hierarchy_level_id:
          type: number
          example: 12345
        parent_hierarchy_item_id:
          type: number
          example: 342
        asset:
          type: string
          example: "Lock"
    HierarchyItemResponse:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyItem'
    HierarchyItem:
      type: object
      properties:
        id:
          type: number
          example: 519
        name:
          type: string
          example: 'US Lumber'
        carrier_id:
          type: number
          example: 1938
        carrier_name:
          type: string
          example: "Hutch"
        usdot:
          type: string
          example: '234123345'
        hierarchy_level_id:
          type: number
          example: 1234
        hierarchy_level_name:
          type: string
          example: "Country"
        parent_hierarchy_item_id:
          type: number
          example: 34
        parent_hierarchy_item_name:
          type: string
          example: "USA"
        asset:
          type: string
          example: "Lock"
        created_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'    
        updated_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        users_count:
          type: number
          example: 12
        locks_count:
          type: number
          example: 13
    AssignUsersToHierarchyItemRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: integer
          example: [1,2,3]
    AssignPowerUnitsToHierarchyItemRequest:
      type: object
      properties:
        powerUnitIds:
          type: array
          items:
            type: integer
          example: [1,2,3]

    FuelLocation:
      type: object
      properties:
        id:
          type: integer
        station_id:
          type: string
        store_number:
          type: string
        city:
          type: string
        state:
          type: string
        lat:
          type: string
        lon:
          type: string
        discounted_price:
          type: string
        regular_price:
          type: string
        description:
          type: string
        created_at:
          type: string
    GoFuelCarrierCreation:
      type: object
      properties:
        name:
          type: string
        carrier_id:
          type: string
    Login:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
    TimelineObject:
      type: object
      properties:
        colorHexCode:
          type: string
          example: '000000'
          description: Color code for object in timeline
        title:
          type: string
          example: OFF DUTY
        description:
          type: string
          example: 5 hrs 30 mins
        time:
          type: string
          format: string
          example: '2020-01-29T06:00:00Z'
        location:
          type: string
          example: Buenos Aires
    AggregatedLogObject:
      type: object
      properties:
        cycle_time:
          type: number
          example: 0
        state:
          type: string
          example: OFF DUTY
        duration_in_seconds:
          type: number
          example: 25200
        driving_time:
          type: number
          example: 0
        on_duty_time:
          type: number
          example: 0
        from_timestamp:
          type: string
          format: string
          example: '2020-01-29T01:00:00Z'
    LogObject:
      type: object
      properties:
        firmware:
          type: string
          example: 263
        guid:
          type: string
          example: 1cb6ee3b-0271-70ac-5982-bf0317d55cad
        location:
          type: string
          example: --
        on_duty_time:
          type: number
          example: 0
        master_sequence_id:
          type: string
          example: 1D29
        user_id:
          type: number
          example: 1969
        engine_hours:
          type: number
          example: 0.4
        updated_at:
          type: string
          format: string
          example: '2020-01-30T21:13:09Z'
        lng:
          type: number
          example: 0
        velocity:
          type: number
          example: 29
        kind:
          type: number
          example: 5
        vin:
          type: string
          example:
        engine_hours_in_seconds:
          type: number
          example: 1440
        device_connected:
          type: boolean
        odometer_reading:
          type: number
          example: 100053.375
        daily_log_id:
          type: number
          example: 419748
        state:
          type: string
          example: DRIVING
        driving_time:
          type: number
          example: 0
        from_timestamp:
          type: string
          format: string
          example: '2020-01-30T19:53:00Z'
        mac_address:
          type: string
          example: 30AEA4821016
        lat:
          type: number
          example: 0
        raw:
          type: string
          example: 'Record Periodic'
        created_at:
          type: string
          format: string
          example: '2020-01-30T21:12:27Z'
        odometer_reading_in_miles:
          type: number
          example: 62170.284911119066
        cycle_time:
          type: number
          example: 0

    Timeline:
      type: object
      properties:
        timeline_objects:
          $ref: '#/components/schemas/TimelineResponse'
          description: Timeline objects
        location_objects:
          $ref: '#/components/schemas/UserLocationResponse'
          description: Locations for drawing map
        summary:
          $ref: '#/components/schemas/SummaryData'
          description: Summary of all stats available for the user. Might be null if no info is available for the day.

    AssignUDRRequest:
      type: object
      properties:
          assigned_user_id:
            type: number
            example: 1969
          guids:
            type: array
            items:
              type: string
              example: 'x-CB282F38-5B16-4519-A7DF-21AD34567A23'
    UDRLogs:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 97
          state:
            type: string
            example: DRIVING
          time_elapsed:
            type: number
            example: 540
          accepted:
            type: boolean
            example: false
            description: Can be null
          assigned_to_user_id:
            type: number
            example: 1969
          created_at:
            type: string
            example: '2020-02-27T01:04:26Z'
          vin:
            type: string
            example: -2B3HD46R6YH428099
          start_log_guid:
            type: string
            example: 'u-CA07FC27-02ED-4234-B61C-C643F3714D04'
          user_id:
            type: number
            example: 1969
          mac_address:
            type: string
            example: 12:12:98:34
          lat:
            type: number
            example: -34.603
          updated_at:
            type: string
            example: '2020-02-27T02:00:52Z'
          guid:
            type: string
            example: 'x-CB282F38-5B16-4519-A7DF-21AD34567A23'
          lng:
            type: number
            example: -58.381
          carrier_id:
            type: number
            example: 1914
          from_timestamp:
            type: string
            example: '2020-02-25T14:39:00Z'
          to_timestamp:
            type: string
            example: '2020-02-25T14:48:00Z'
          end_log_guid:
            type: string
            example: 'u-9FBB55C0-FCFC-4EA7-9130-4CA594467AF2'

    SummaryData:
      type: object
      properties:
        last_lon:
          type: number
          example: -58.381
        user_profile_id:
          type: number
          example: 2404
        start_odometer:
          type: number
          example: 1
        last_log_date:
          type: string
          format: date-time
          example: 2020-02-13T14:39:00Z
        last_power_unit_id:
          type: number
          example: 1116
        user_id:
          type: number
          example: 1969
        updated_at:
          type: string
          format: date-time
          example: 2020-02-13T22:30:12Z
        total_distance:
          type: number
          example: 0
        last_lat:
          type: number
          example: -34.603
        clock_is_running:
          type: boolean
        start_of_day:
          type: string
          format: date-time
          example: 2020-02-13T14:39:00Z
        id:
          type: number
          example: 1
        driving_duty_time_remaining:
          type: number
          example: 777
        last_truck_numer:
          type: string
          example: GoodVin
        company_id:
          type: number
          example: 1914
        on_duty_time_remaining:
          type: number
          example: 888
        cycle_time_remaining:
          type: number
          example: 668
        last_status:
          type: string
          example: DRIVING
        created_at:
          type: string
          format: date-time
          example: 2020-02-13T22:30:12Z
        end_odometer:
          type: number
          example: 1
        last_power_unit:
          type: string
          example: 2B3HD46R6YH428099
    DataForPDF:
      type: object
      properties:
        logs:
          type: array
          items:
            type: object
            properties:
              on_duty_time:
                type: number
                example: 50400
              state:
                type: string
                example: OFF DUTY
              note:
                type: string
                example:
              driving_time:
                type: number
                example: 28800
              cycle_time:
                type: number
                example: 216000
              mac_address:
                type: string
                example:
              vin:
                type: string
                example:
              exemption_type:
                type: string
                example: 'Oil Field'
              duration_in_seconds:
                type: number
                example: 78600
              lat:
                type: number
                example: 0
              location:
                type: string
                example:
              lng:
                type: number
                example: 0
              from_timestamp:
                type: string
                format: date-time
                example: 2020-02-07T06:00:00Z
              cycle_start_time:
                type: string
                format: date-time
                example: 2020-02-07T06:00:00Z
        trips:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 0A93A278-0A22-4AE5-9620-97E7C85C46E4
              pre_trip_dvir:
                type: object
                properties:
                  location:
                    type: string
                    example: Cupertino CA
                  trailers:
                    type: array
                    items:
                      type: object
                      properties:
                        trailer_number:
                          type: string
                          example: aaaaa1
                  lng:
                    type: string
                    example: -122.0236
                  signature_file:
                    type: object
                    properties:
                      note:
                        type: string
                        example:
                      id:
                        type: number
                        example: 1085
                      file_type:
                        type: string
                        example:
                      file:
                        type: string
                        example: https://konexial-staging.s3.us-east-2.amazonaws.com/documents/1085/file
                      created_at:
                        type: string
                        format: date-time
                        example: 2020-02-08T03:37:05Z
                      user_id:
                        type: number
                        example: 1969
                      updated_at:
                        type: string
                        format: date-time
                        example: 2020-02-08T03:37:05Z
                  vehicle:
                    type: object
                    properties:
                      defects:
                        type: array
                        items:
                          type: object
                          properties:
                            category:
                              type: string
                              example: Parking Brake System
                            list:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Brake Tubing
                                  severity:
                                    type: string
                                    example: minor
                      vin:
                        type: string
                        example: 8398UEHFUEHFUUFJ
                  odometer_reading:
                    type: string
                    example: 44.0
                  trip_uuid:
                    type: string
                    example: 3294
                  type:
                    type: string
                    example: pre_trip
                  inspection_time:
                    type: string
                    format: date-time
                    example: 2020-02-08T03:36:51Z
                  lat:
                    type: string
                    example: 37.333567
              start_odometer_in_miles:
                type: number
                example: 0
              truck_number:
                type: string
                example: 000054
              vin:
                type: string
                example: 8398UEHFUEHFUUFJ
              start_time:
                type: string
                format: date-time
                example: 2020-02-08T03:12:14Z
              end_odometer_in_miles:
                type: number
                example: 0
              end_time:
                type: string
                format: date-time
                example: 2020-02-08T03:12:14Z
              trailers:
                type: string
                example: aaa
              co_driver:
                type: object
                properties:
                  email:
                    type: string
                    example: juan@test.com
                  id:
                    type: number
                    example: 3
                  last_name:
                    type: string
                    example: Lovera
                  carrier_id:
                    type: number
                    example: 1914
                  first_name:
                    type: string
                    example: Juano
                  created_at:
                    type: string
                    format: date-time
                    example: 2020-02-08T01:16:05Z
              post_trip_dvir:
                type: object
                properties:
                  location:
                    type: string
                    example: Cupertino CAaaaaaaaaaa
                  trailers:
                    type: array
                    items:
                      type: object
                      properties:
                        defects:
                          type: array
                          items:
                            type: object
                            properties:
                              category:
                                type: string
                                example: Exhaust System
                              list:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      example: Exhaust system likely to burn char or damage electrical
                                    severity:
                                      type: string
                                      example: minor
                        trailer_number:
                          type: string
                          example: aaaaa1
                  lng:
                    type: string
                    example: -122.041528
                  signature_file:
                    type: object
                    properties:
                      note:
                        type: string
                        example:
                      id:
                        type: number
                        example: 1083
                      file_type:
                        type: string
                        example:
                      file:
                        type: string
                        example: https://konexial-staging.s3.us-east-2.amazonaws.com/documents/1083/file
                      created_at:
                        type: string
                        format: date-time
                        example: 2020-02-08T03:14:18Z
                      user_id:
                        type: number
                        example: 1969
                      updated_at:
                        type: string
                        format: date-time
                        example: 2020-02-08T03:14:18Z
                  vehicle:
                    type: object
                    properties:
                      defects:
                        type: array
                        items:
                          type: object
                          properties:
                            category:
                              type: string
                              example: Other
                            list:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Hey
                                  severity:
                                    type: string
                                    example: minor
                      vin:
                        type: string
                        example: 8398UEHFUEHFUUFJ
                  odometer_reading:
                    type: string
                    example: 0.0
                  trip_uuid:
                    type: string
                    example: 3294
                  type:
                    type: string
                    example: post_trip
                  inspection_time:
                    type: string
                    format: date-time
                    example: 2020-02-08T03:13:52Z
                  lat:
                    type: string
                    example: 37.333461
        recaps:
          type: array
          items:
            type: object
            properties:
              total_distance_in_mi:
                type: number
                example: 0
              day:
                type: string
                example: '2020-02-06'
              total_driving_hrs_in_seconds:
                type: number
                example: 0
              total_duty_hrs_in_seconds:
                type: number
                example: 1080
        signature:
          type: object
          properties:
            daily_log_id:
              type: number
              example: 1
            signature:
              type: object
              properties:
                note:
                  type: string
                  example:
                id:
                  type: number
                  example: 1122
                file_type:
                  type: string
                  example:
                file:
                  type: string
                  example: https://konexial-staging.s3.us-east-2.amazonaws.com/documents/1122/file
                created_at:
                  type: string
                  example: '2020-02-12T05:06:51Z'
                user_id:
                  type: number
                  example: 1969
                updated_at:
                  type: string
                  example: '2020-02-12T05:06:51Z'
            comments:
              type: string
              example: This is the comment!
            date:
              type: string
              format: date-time
              example: 2020-02-07T11:39:00Z

        annotations:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
                example:
              updated_at:
                type: string
                format: date-time
                example: 2020-02-11T05:53:34Z
              note:
                type: string
                example: Food / Fuel Stop
              created_at:
                type: string
                format: date-time
                example: 2020-02-11T05:53:34Z
              to_timestamp:
                type: string
                format: date-time
                example: 2020-02-08T04:53:17Z
              user_id:
                type: number
                example: 1969
              lng:
                type: number
                example: -58.432223
              lat:
                type: number
                example: -34.582528
              guid:
                type: string
                example: 4e09c7e0-fdb1-639a-dfde-6ba9f0738c91
              from_timestamp:
                type: string
                format: date-time
                example: 2020-02-08T02:53:17Z
    SubscriptionRequest:
      type: object
      properties:
        status:
          type: number
          example: 0
        started_at:
          type: string
          format: date-time
          example: 2019-08-28T00:00:00Z
        user_id:
          type: number
          example: 2601
        kind:
          type: number
          example: 1
    SubscriptionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    Subscription:
      type: object
      properties:
        status:
          type: number
          example: 0
        started_at:
          type: string
          format: date-time
          example: 2019-08-28T00:00:00Z
        id:
          type: number
          example: 2286
        expires_at:
          type: string
          format: date-time
          example: 2022-09-02T00:00:00Z
        created_at:
          type: string
          format: date-time
          example: 2019-08-28T16:47:16Z
        user_id:
          type: number
          example: 2601
        kind:
          type: number
          example: 1
        updated_at:
          type: string
          format: date-time
          example: 2019-08-29T17:31:39Z
    ForgetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          example: 'test@example.com'

    StatusChangeRequest:
      type: object
      properties:
        start_timestamp:
          type: string
          example: '2020-02-17T06:00:00Z'
        end_timestamp:
          type: string
          example: '2020-02-18T06:00:00Z'
        state:
          type: string
          example: ON DUTY
        user_id:
          type: number
          example: 1969

    FMCSAUploadRequest:
      type: object
      properties:
        output_file_comment: 
          type: string
          example: This is a comment
        from_date: 
          type: string
          example: '2020-03-10'
        to_date: 
          type: string
          example: '2020-03-12'

    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          example: 'test@example.com'
        token:
          type: string
          example: 'D6CD9C5CD15A455E93490F963B1F2F06'
        password:
          type: string
          example: 'Test123!@#'
        password_confirmation:
          type: string
          example: 'Test123!@#'
    DemoDataRequest:
      type: object
      properties:
        user_id:
          type: number
          example: 1234
        start_timestamp:
          type: string
          example: '2020-02-17T06:00:00Z'
        end_timestamp:
          type: string
          example: '2020-02-17T07:00:00Z'
    DemoSetupRequest:
      type: object
      properties:
        user_id:
          type: number
          example: 1234
        truck_id:
          type: number
          example: 234          
        start_timestamp:
          type: string
          example: '2020-02-17T06:00:00Z'
        end_timestamp:
          type: string
          example: '2020-02-17T07:00:00Z'
    DemoDetails:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        trucks:
          type: array
          items: 
            $ref: '#/components/schemas/PowerUnit'
    DemoDynamicDataRequest:
      type: object
      properties:
        source_user_id:
          type: number
          example: 1234
        source_start_timestamp:
          type: string
          example: '2020-02-17T06:00:00Z'
        source_end_timestamp:
          type: string
          example: '2020-02-17T07:00:00Z'
        demo_user_id:
          type: number
          example: 1234
        truck_id:
          type: number
          example: 234          
        start_timestamp:
          type: string
          example: '2020-02-17T06:00:00Z'
        end_timestamp:
          type: string
          example: '2020-02-17T07:00:00Z'
    ServiceOfferRequest:
      type: object
      properties:
        load_id:
          type: number
          example: 578
        carrier_id:
          type: number
          example: 1234
        user_id:
          type: number
          example: 2606          
        status:
          type: string
          example: "Pending"
    ServiceOfferResponse:
      type: array
      items:
        $ref: '#/components/schemas/ServiceOffer'
    ServiceOffer:
      type: object
      properties:
        id:
          type: number
          example: 519
        created_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        carrier_id:
          type: number
          example: 1938
        user_id:
          type: number
          example: 2606
        updated_at:
          type: string
          format: date-time
          example: '2020-02-20T13:45:16Z'
        load_id:
          type: number
          example: 123
        status:
          type: string
          example: "Pending"