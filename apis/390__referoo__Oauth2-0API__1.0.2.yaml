openapi: 3.0.0
info:
  version: "1.0.2"
  title: Referoo OAuth 2.0 API. 
  description: >-
    Welcome to Referoo API documentation. This API is designed to help you integrate the full Referoo work flow into your own software or web application. It is an OAuth 2.0 API that uses the [Authorization code](https://oauth.net/2/grant-types/authorization-code/) workflow to authorize users.
    
    # Changelog
    
    ### 1.0.2
    
      * Added the New API endpoint for adding a quick referee.
      * Candidate json object is returned after creating them. 
      * Grammatical fixes. 
      
    ### 1.0.1
    
      * Initial release. 
security:
  - accessCode:
      - read
      - write
paths:
  # Below are the end points for candidates 
  # ---------------------------------------

  /candidates:
    get:
      summary: Returns a list of candidates
      description: >-
        This endpoint will return a list of candidates linked to your account in
        order of creation date. A maximum of 50 can be returned at a time, 20 are returned by default.
      security:
        - OAuth2: [read] 
      responses:
        '200':
          description: List of candidates was returned successfully.
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Candidate-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
      parameters:
        - in: query
          name: email
          description: >-
            Filter the candidates using a full or partial email address.
          schema:
            type: string
        - in: query
          name: offset
          description: >-
            The number of items to skip before starting to collect the result
            set
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          description: >-
            The numbers of items to return. Up to 50 items can be returned at a
            time, 25 are returned by default.
          schema:
            type: integer
            format: int64
  /candidate:
    post:
      summary: Create a new candidate in Referoo.
      description: >-
          This endpoint will create a candidate and add them to Referoo. If you want the candidate to be emailed right away requesting referee's, ensure the variable one_click_reference is set to 1.
      security:
        - OAuth2: [write] 
      operationId: createCandidate
      requestBody:
        description: All of the variables below are mandatory when creating a candidate.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate-write'
      responses:
        '201':
          description: Candidate was successfully created.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Candidate-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/candidate/{num}':
    get:
      summary: Retrieves a single candidate based on their num.
      description: >-
        This API endpoint will return a json object containing a single candidate, based on the num provided in the API call.
      security:
        - OAuth2: [read] 
      operationId: getCandidateById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the candidate to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Candidate was successfully found.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Candidate-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
    put:
      summary: Updates a single candidate based on their record num.
      description: >-
        This API end point will update a candidate based on the record num passed in the call. Pass a JSON object containing the variables you wish to update.  
      security:
        - OAuth2: [write] 
      operationId: updateCandidateById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the candidate to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: You do not need to update all the variables, only pass those you wish to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate-write'
      responses:
        '200':
          description: Candidate was successfully updated.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Candidate-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/candidate/{num}/referees':
    get:
      summary: Retrieves a single candidates referees based on their record num.
      description: >-
        This API endpoint will return a json object containing all of the referees a candidate has based on the record num provided in the API call.
      security:
        - OAuth2: [read] 
      operationId: getCandidatesRefereesById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the candidates referee's to retrieve.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Candidate referee's were successfully found.
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Referee-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/candidate/{num}/email':
    put:
      summary: Sends the candidate a reference request email based on the record num passed in the request.
      description: >-
        This API endpoint will send the candidate a reference request email.
      security:
        - OAuth2: [write] 
      operationId: emailCandidateRequestById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the candidate to email
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The candidate was successfully sent a candidate request email.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 


# Below are the end points for Questionnaires 
# -------------------------------------------

  /questionnaires:
    get:
      summary: Returns a list of Questionnaires linked to this account.
      description: >-
        This endpoint will return an array of questionnaires linked to this account in
        order of creation date. Only public or published questionaires will be returned. Draft items are not accessible.
      security:
        - OAuth2: [read] 
      responses:
        '200':
          description: List of questionnaires was successfully returned.
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Questionnaire-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
      parameters:
        - in: query
          name: offset
          description: >-
            The number of items to skip before starting to collect the result
            set
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          description: >-
            The numbers of items to return. Up to 50 items can be returned at a
            time.
          schema:
            type: integer
            format: int64


#Below are the end points for Referees
# ------------------------------------

  /referees:
    get:
      summary: Returns a list of referees linked to the candidate.
      description: >-
        This endpoint will return a list of referee's linked to your account in
        order of creation date.
      security:
        - OAuth2: [read] 
      responses:
        '200':
          description: List of candidates was successfully returned.
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Referee-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
      parameters:
        - in: query
          name: offset
          description: >-
            The number of items to skip before starting to collect the result
            set
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          description: >-
            The numbers of items to return. Up to 50 items can be returned at a
            time.
          schema:
            type: integer
            format: int64
  /candidate/{num}/referee:
    post:
      summary: Creates a new referee.
      description: >-
        This endpoint will create a new referee under the candidate num that was passed in the URL.
      security:
        - OAuth2: [write] 
      operationId: createReferee
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the candidate to link the referee to.
          schema:
            type: integer
            format: int64
      requestBody:
        description: All of the variables below need to be passed to create a candidate.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Referee-write'
      responses:
        '201':
          description: Referee was successfully created.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/referee/{num}':
    get:
      summary: Retrieves a single referee based on their record num.
      description: >-
        This API endpoint will return a json object containing a single candidate, based on the ID provided in the API call.
      security:
        - OAuth2: [read] 
      operationId: getRefereeById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the referee to retrieve.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Referee was successfully found.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Referee-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
    put:
      summary: Updates a single Referee based on their record num.
      description: >-
        This API end point will update a candidate based on the ID passed in the call. Pass a JSON object containing the variables you wish to update.  
      security:
        - OAuth2: [write] 
      operationId: updateRefereeById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the referee to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: You do not need to pass all the variables, only pass those you wish to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Referee-write'
      responses:
        '200':
          description: Referee was successfully updated.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Referee-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  /referee/quick:
    post:
      summary: Creates a candidate with a single refree in one go. The Referee will be automatically emailed requesting a reference.
      description: >-
        This endpoint will create a new candidate and create a new referee for them with one call. The referee will also be sent a reference request email.
      security:
        - OAuth2: [write] 
      operationId: createRefereeQuick
      requestBody:
        description: All of the variables below need to be passed to create a candidate and referee.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Referee-quick-write'
      responses:
        '201':
          description: Candidate and Referee were successfully created.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Referee-quick-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/referee/{num}/email':
    put:
      summary: Sends a referee a reference request email.
      description: >-
        This API endpoint will send the candidate a reference request email.
      security:
        - OAuth2: [write] 
      operationId: emailRefereeRequestById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the referee to email
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The referee was successfully sent a referee request email.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/referee/{num}/report':
    get:
      summary: Download the referee's reference in PDF format.
      description: >-
        This API endpoint will initiate the download of the referee's reference in PDF format.
      security:
        - OAuth2: [write] 
      operationId: downloadReportByRefereeId
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the referees report to download.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Report found and download has started.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 

#Account endpoints 

  /accounts:
    get:
      summary: Returns a list of child accounts linked to the current account.
      description: >-
        This endpoint will return a list of accounts linked to the recruiters parent account in
        order of last name then first name.
      security:
        - OAuth2: [read] 
      responses:
        '200':
          description: List of child accounts was successfully found.
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
      parameters:
        - in: query
          name: offset
          description: >-
            The number of items to skip before starting to collect the result
            set
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          description: >-
            The numbers of items to return. Up to 50 items can be returned at a
            time.
          schema:
            type: integer
            format: int64
  /account:
    post:
      summary: Creates a new account.
      description: >-
        This endpoint will create a new child account under the recruiter using the API.
      security:
        - OAuth2: [write] 
      operationId: createAccount
      requestBody:
        description: All of the variables below need to be passed in JSON object to create a child account.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account-write'
      responses:
        '201':
          description: Child account was successfully created.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
  '/account/{num}':
    get:
      summary: Retrieves a single child account based on its record num.
      description: >-
        This API endpoint will return a json object containing a single account based on the ID provided in the API call.
      security:
        - OAuth2: [read] 
      operationId: getAccountById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the account to retrieve.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Referee was successfully found.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 
    put:
      summary: Updates a single child account based on their record num.
      description: >-
        This API end point will update a child account based on the ID passed in the call. Pass a JSON object containing the variables you wish to update.  
      security:
        - OAuth2: [write] 
      operationId: updateAccountById
      parameters:
        - name: num
          in: path
          required: true
          description: Numeric ID of the account to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: You do not need to include all the variables, only pass those you wish to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account-write'
      responses:
        '200':
          description: Child account was successfully updated.
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Referee-read'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError' 


servers:
  #- url: 'https://virtserver.swaggerhub.com/Interactivet-Tools/Referoo/1.0.0'
  - url: 'https://api.referoo.com.au/oauth2/'
components:
  responses:
    NotFound:
      description: The specified resource was not found. For example, a record num was passed that does not exist in the database.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: You are not authorized to access this end point.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ClientError:
      description: The request was understood, but there was an issue with it. The cause of the issue will be returned in the message variable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.referoo.com.au/oauth/v2/auth'
          tokenUrl: 'https://www.referoo.com.au/oauth/v2/token'
          refreshUrl: 'https://www.referoo.com.au/oauth/v2/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources
  schemas:
    Candidate-read:
      type: object
      properties:
        num:
          type: integer
          description: The candidate ID.
        createdDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was created
        updatedDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was last updated
        unique_id:
          type: string
          description: The candidates unique ID
        first_name:
          type: string
          description: The candidates first name
        last_name:
          type: string
          description: The candidates last name
        email:
          type: string
          description: The Candidates email
        phone:
          type: string
          description: The Candidates phone number
        notes:
          type: string
          description: Notes on the Candidate
        job:
          type: string
          description: The new job the candidate is applying for
        company:
          type: string
          description: The candidates client company
        questionnairesNum:
          type: integer
          description: The Questionnaire num of the candidate
        number_of_references_required:
          type: integer
          description: The number of references required for the candidate
        one_click_reference:
          type: integer
          description: Does the candidate have the one click reference system enabled.
        sent:
          type: integer
          description: Has the candidate been sent a referee request email
        responded:
          type: integer
          description: Has the candidate responded to the referee request email
        declined:
          type: integer
          description: Returns true if the candidate declined to leave referees
        response_date:
          type: string
          format: date-time
          description: >-
            The date and time the candidate responded to the referee request
            email
    Candidate-write:
      type: object
      properties:
        first_name:
          type: string
          description: The candidates first name
        last_name:
          type: string
          description: The candidates last name
        email:
          type: string
          description: The Candidates email
        phone:
          type: string
          description: The Candidates phone number
        notes:
          type: string
          description: Notes on the Candidate
        job:
          type: string
          description: The new job the candidate is applying for
        company:
          type: string
          description: The candidates client company
        questionnairesNum:
          type: integer
          description: The Questionnaire num of the candidate
        number_of_references_required:
          type: integer
          description: The number of references required for the candidate
        one_click_reference: 
          type: integer
          description: Should Referoo automatically email Candidates and Referee's requesting references.
    Questionnaire-read:
      type: object
      properties:
        num:
          type: integer
          description: The questionnaire ID.
        createdDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was created
        updatedDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was last updated
        membersNum:
          type: integer
          description: The user num of the recruiter who created the questionnaire.
        title:
          type: string
          description: The name of the questionnaire.
        description:
          type: string
          description: The description of the questionnaire.
    Referee-quick-write:
      type: object
      properties:
        candidate:
          $ref: '#/components/schemas/Candidate-write'
        referee:
          $ref: '#/components/schemas/Referee-write'
    Referee-quick-read:
      type: object
      properties:
        candidate:
          $ref: '#/components/schemas/Candidate-read'
        referee:
          $ref: '#/components/schemas/Referee-read'
    Referee-read:
      type: object
      properties:
        num:
          type: integer
          description: The referee ID.
        createdDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was created
        updatedDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was last updated
        unique_id:
          type: string
          description: The Unique ID of the referee
        name:
          type: string
          description: The name of the referee
        email:
          type: string
          description: The email address of the referee
        phone:
          type: string
          description: The phone number of the referee.
        relationship:
          type: string
          description: The relationship of the referee to the candidate.
        notes:
          type: string
          description: Any notes added against the referee by a recruiter.
        job_title:
          type: string
          description: The job title of the referee.
        candidate_job_title:
          type: string
          description: The job title the candidate had while working with the referee.
        company:
          type: string
          description: The company the referee and candidate worked at together.
        start:
          type: string
          description: When the candidate started working with the referee.
        end:
          type: string
          description: When the candidate stopped working with the referee.
        ip_address:
          type: string
          description: The IP address of the referee (if they completed their reference online).
        questionnairesNum:
          type: string
          description: The Questionnaire used for this reference.
        membersNum:
          type: string
          description: The account the referee is linked to.
        candidatesNum:
          type: string
          description: The account the referee is linked to.
        invite_sent_date:
          type: string
          format: date-time
          description: The date an invite was sent to the referee.
        invite_sent:
          type: integer
          description: Set to 1 if an email invite has been sent to the referee.  
        send_email_reminders:
          type: integer
          description: Set to one if the referee is receiving email reminders.
        cancelled_reminders:
          type: integer
          description: Set to one if the referee requested not to receive email reminders.
        reference_completed:
          type: integer
          description: Set to one if the referee has completed their reference and its ready to download.
        response_date:
          type: integer
          format: date-time
          description: The date the referee completed their reference.
    Referee-write:
      type: object
      properties:
        name:
          type: string
          description: The name of the referee
        email:
          type: string
          description: The email address of the referee
        phone:
          type: string
          description: The phone number of the referee.
        relationship:
          type: string
          description: The relationship of the referee to the candidate.
        notes:
          type: string
          description: Any notes added against the referee by a recruiter.
        job_title:
          type: string
          description: The job title of the referee.
        candidate_job_title:
          type: string
          description: The job title the candidate had while working with the referee.
        company:
          type: string
          description: The company the referee and candidate worked at together.
        start:
          type: string
          description: When the candidate started working with the referee.
        end:
          type: string
          description: When the candidate stopped working with the referee.
        questionnairesNum:
          type: string
          description: The Questionnaire used for this reference.
        send_email_reminders:
          type: integer
          description: Set to one if the referee is receiving email reminders.
    Account-read:
      type: object
      properties:
        num:
          type: integer
          description: The child account ID.
        createdDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was created
        updatedDate:
          type: string
          format: date-time
          description: >-
            The date and time the candidate was last updated
        first_name:
          type: string
          description: The first name of the child account user.
        last_name:
          type: string
          description: The last name of the child account user.
        company:
          type: string
          description: The company of the child account user.
        position:
          type: string
          description: The position of the child account user.
        email:
          type: string
          description: The email address of the child account user.
        phone:
          type: string
          description: The phone number of the child account user.
        work_phone:
          type: string
          description: The work phone number of the child account user.
        office_phone:
          type: string
          description:  The office phone number of the child account user.
    Account-write:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the child account user.
        last_name:
          type: string
          description: The last name of the child account user.
        company:
          type: string
          description: The company of the child account user.
        position:
          type: string
          description: The position of the child account user.
        email:
          type: string
          description: The email address of the child account user.
        phone:
          type: string
          description: The phone number of the child account user.
        work_phone:
          type: string
          description: The work phone number of the child account user.
        office_phone:
          type: string
          description: The office phone number of the child account user.
        password:
          type: string
          description: The password will be automatically validated and encrypted on save.
        website:
          type: string
          description: The website of the child account. 
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message