openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/erezblm/IoTAdapterDownlink/1.0.0
info:
  version: "0.1.2"
  title: AT IoT Server -> IoT Adapter
  description: API for requests sent from server to IoT Adapter
paths:
  /devices/add:
    post:
      description: Add list of approved devices for communicating with IoT Adapter
      tags:
        - Devices
      responses:
        '202':
          description: Request accepted (will be added asynchronously)
        '400':
          $ref: '#/components/responses/BadRequest'   # <-----
        '500':
          $ref: '#/components/responses/InternalError'   # <-----
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceListBody'
              
  /devices/remove:
    post:
      description: Remove list of approved devices for communicating with IoT Adapter
      tags:
        - Devices
      responses:
        '202':
          description: Request accepted (devices will be removed asynchronously)
        '400':
          $ref: '#/components/responses/BadRequest'   # <-----
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'   # <-----
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                description: Device ID (base64)
                type: string
                format: byte
              
  /devices:
    get:
      tags:
        - Devices
      description: Get list of approved devices for communicating with IoT Adapter
      responses:
        '200':
          description: Set of configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListBody'
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'     
  /devices/configurations:
    get:
      tags:
        - Devices
      description: "Get all configurations of device reported on device's previous connection and waiting to be set on device's next connection."
      parameters:
      - $ref: '#/components/parameters/deviceIds'
      responses:
        '200':
          description: Set of configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - $ref: '#/components/schemas/DeviceID'
                  - type: object
                    properties:
                      configurations:
                        $ref: '#/components/schemas/DeviceConfigsOutput'
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      tags:
        - Devices
      description: "Send configurations to be set on device's next connection."
      parameters:
      - $ref: '#/components/parameters/deviceIds'
      responses:
        '202':
          description: Configurations accepted
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigsInput'
              
  /devices/command:
    post:
      tags:
        - Devices
      description: "Send command to arrive device on next connection (command status completed/rejected/timeout will be received through 'IoT Adapter -> Backend' API)"
      parameters:
      - $ref: '#/components/parameters/deviceIds'
      responses:
        '202':
          description: Command accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - $ref: '#/components/schemas/DeviceID' 
                  - $ref: '#/components/schemas/CommandId' 
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandBody'
              
  /devices/version:
    get:
      tags:
        - Devices
      description: "Get installed version of device reported on device's previous connection and version waiting to be installed on next connection."
      parameters:
      - $ref: '#/components/parameters/deviceIds'
      responses:
        '200':
          description: Version status response
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - $ref: '#/components/schemas/DeviceID' 
                  - $ref: '#/components/schemas/VersionID' 
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      tags:
        - Devices
      description: "Update device to specified version on next connection"
      parameters:
      - $ref: '#/components/parameters/deviceIds'
      responses:
        '202':
          description: Version accepted
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionBody'
    
  /versions:
    post:
      tags:
        - Versions
      description: "Upload a version file"
      responses:
        '200':
          description: File URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUrl'
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileID:
                  type: string
                description:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - fileID
                - file
    get:
      tags:
        - Versions
      description: "Get version file details"
      parameters:
      - $ref: '#/components/parameters/fileID'
      responses:
        '200':
          description: File URL and metadata
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FileUrl'
                - $ref: '#/components/schemas/FileDescription'
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
    put:
      tags:
        - Versions
      description: "Update version file metadata"
      parameters:
      - $ref: '#/components/parameters/fileID'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FileDescription'
              - type: object
                required:
                - description
    delete:
      tags:
        - Versions
      description: "Delete version file"
      parameters:
      - $ref: '#/components/parameters/fileID'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalError'
              
          
components:
  responses:
    BadRequest:
      description: The request was not properly formatted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: The server encountered an error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  
  parameters:
    deviceIds:
      in: query
      description: ID of device (base64 + URL encoded)
      name: deviceIDs
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: byte
          
    fileID:
      in: query
      description: file ID
      name: fileID
      required: true
      schema:
        type: string

  
  schemas:
    DeviceID:
      description: device id (base64)
      type: object
      properties:
        deviceID:
          type: string
          format: byte
      required:
      - deviceID
  
    DeviceListBody:
      type: array
      items:
        type: object
        properties:
          deviceID:
            description: Device ID (base64)
            type: string
            format: byte
        required:
          - deviceID

        
    DeviceConfigsOutput:
      description: List of device configurations 
      type: array
      items:
        type: object
        properties:
          key:
            description: Configuration key name recognized by device (base64)
            type: string
            format: byte
          pendingValue:
            description: configuration value to be set on device's next connection (base64) (if null - no pending value) 
            format: byte
            type: string
          currentValue:
            description: Current value reported on device's previous connection (base64) (if null - no reported value)
            type: string
            format: byte
        required:
        - key
            
    VersionBody:
      description: Details of version
      allOf:
      - $ref: '#/components/schemas/VersionID'
      - $ref: '#/components/schemas/VersionUrl'
      - type: object
        properties:
          retries:
            description: number of retries in case of device update failures. If not specified, default to 1.
            type: integer
      required:
      - versionID
      - versionUrl
          

    
    VersionID:
      type: object
      properties:
        versionID:
          description: Version ID (xx.xx.xx.xx) format
          type: string
      required:
      - versionID
    VersionUrl:
      type: object
      description: Public url of version file.
      properties:
        versionUrl:
          type: string
          format: uri
      required:
      - versionUrl
      
            
    DeviceConfigsInput:
      description: List of device configurations 
      type: array
      items:
        type: object
        properties:
          key:
            description: Configuration key name recognized by the device (base64)
            type: string
            format: byte
          value:
            description: Value to be set on device's next connection (base64)
            type: string
            format: byte
        required:
        - key
        - value
        
    CommandId:
      description: Unique ID of command instance, to be used on command status updated
      type: object
      properties:
        commandID:
          type: string
          format: guid
        
    CommandBody:
      description: Payload of command
      type: object
      properties:
        payload:
          description: Payload to be sent with command (base64)
          type: string
          format: byte
      required:
      - payload
          
    FileUrl:
      type: object
      properties:
        url:
          description: Public url for, available for download
          type: string
          format: uri
      required:
      - url
    FileDescription:
      type: object
      properties:
        description:
          description: Description of file
          type: string

        
    Error:
      type: object
      properties:
        description:
          type: string
