openapi: 3.0.0
info:
  version: "0.10.0"
  title: CodesActivationAPI
  contact:
    email: alexander.stepano@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jutiful/codes/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: activations
  - name: auth
paths:
  /api/auth:
    post:
      tags:
        - auth
      summary: login user via social network
      operationId: login
      responses:
        '200':
          description: Valid auth object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
        '405':
          description: Invalid token signature
        '401':
          description: Unauthorized
      requestBody:
        $ref: '#/components/requestBodies/Auth'
    get:
      tags:
        - auth
      summary: Check if user still logged in
      operationId: getAuth
      responses:
        '401':
          description: Unauthorized
        '200':
          description: Valid auth object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/activations:
    post:
      tags:
        - activations
      summary: activate code
      operationId: activate
      responses:
        '200':
          description: Return 200 status code if requested element already activated. It means that user will still can activate provided code.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Set'
                  - $ref: '#/components/schemas/Figure'
                example: { set: 'Animals' }
        '201':
          description: Activate code and return activated element.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Set'
                  - $ref: '#/components/schemas/Figure'
                example: { set: 'Animals' }
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '404':
          description: Code not found
        '409':
          description: Code already activated by someone.
      requestBody:
        $ref: '#/components/requestBodies/Activation'
    get:
      tags:
        - activations
      summary: get activations list
      operationId: activationsList
      responses:
        '200':
          description: list of activated element
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Set'
                    - $ref: '#/components/schemas/Figure'
                example: [{ set: 'Animals' }, { figure: 'Chicken' }]
        '401':
          description: Unauthorized
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: number
          example: 'vgbchjsVGHBJNK5678FGH5678hgf'
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: 'Filarion Memory'
        email:
          type: string
          example: 'fil@gmail.com'
        os:
          type: string
          enum: [ios, android]
    Auth:
      type: object
      properties:
        accessToken:
          type: string
        socialNetwork:
          type: string
          enum: [fb, google]
        os:
          type: string
          enum: [ios, android]
    Element:
      type: object
      properties:
        set:
          type: string
          example: 'Animals'
        figure:
          type: string
          example: 'Horse'
    Set:
      type: object
      properties:
        set:
          type: string
          example: 'Animals'
    Figure:
      type: object
      properties:
        figure:
          type: string
          example: 'Horse'
    
  requestBodies:
    Auth:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
      required: true
    Activation:
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: '12345678'
              element:
                  $ref: '#/components/schemas/Element'
      required: true
