openapi: 3.0.0
info:
  description: Api Documentation
  version: "1.0-oas3"
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: client-data-controller
    description: Client Data Controller
paths:
  /client/:
    post:
      tags:
        - client-data-controller
      summary: createClient
      operationId: createClientUsingPOST
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_ClientDto_'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/APIRequest_ClientDto_'
  '/client/{accountID}/loans':
    get:
      tags:
        - client-data-controller
      summary: getClientByLoanAccountID
      operationId: getClientByLoanAccountIDUsingGET
      parameters:
        - name: accountID
          in: path
          description: accountID
          required: true
          schema:
            type: string
        - name: fullDetails
          in: query
          description: fullDetails
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_BaseDto_'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/client/{accountID}/savings':
    get:
      tags:
        - client-data-controller
      summary: getClientBySavingsAccountID
      operationId: getClientBySavingsAccountIDUsingGET
      parameters:
        - name: accountID
          in: path
          description: accountID
          required: true
          schema:
            type: string
        - name: fullDetails
          in: query
          description: fullDetails
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_BaseDto_'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/client/{clientID}':
    get:
      tags:
        - client-data-controller
      summary: getClientByClientID
      operationId: getClientByClientIDUsingGET
      parameters:
        - name: clientID
          in: path
          description: clientID
          required: true
          schema:
            type: string
        - name: fullDetails
          in: query
          description: fullDetails
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_BaseDto_'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - client-data-controller
      summary: updateClientData
      operationId: updateClientDataUsingPOST
      parameters:
        - name: clientID
          in: path
          description: clientID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_ClientDto_'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/APIRequest_ClientDto_'
    patch:
      tags:
        - client-data-controller
      summary: updateClientInformation
      operationId: updateClientInformationUsingPATCH
      parameters:
        - name: clientID
          in: path
          description: clientID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse_string_'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/APIRequest_ClientDto_'
servers:
  - url: '//localhost:9030/client-service/v1'
components:
  requestBodies:
    APIRequest_ClientDto_:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIRequest_ClientDto_'
      description: client
      required: true
  schemas:
    AccessRights:
      type: object
      properties:
        accessibleByAllUsers:
          type: boolean
        encodedKey:
          type: string
        roles:
          type: array
          items:
            type: string
      title: AccessRights
    Address:
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        line1:
          type: string
        line2:
          type: string
        postcode:
          type: string
        region:
          type: string
      title: Address
    BaseDto:
      type: object
      title: BaseDto
    ClientDto:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        client:
          $ref: '#/components/schemas/ClientInfo'
        customInformation:
          type: array
          items:
            $ref: '#/components/schemas/CustomInformation'
        idDocuments:
          type: array
          items:
            $ref: '#/components/schemas/Document'
      title: ClientDto
    ClientInfo:
      type: object
      properties:
        assignedBranchKey:
          type: string
        assignedCentreKey:
          type: string
        assignedUserKey:
          type: string
        birthDate:
          type: string
        clientRole:
          $ref: '#/components/schemas/ClientRole'
        emailAddress:
          type: string
        encodedKey:
          type: string
        firstName:
          type: string
        gender:
          type: string
        homePhone:
          type: string
        id:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        mobilePhone2:
          type: string
        notes:
          type: string
        state:
          type: string
      title: ClientInfo
    ClientRole:
      type: object
      properties:
        encodedKey:
          type: string
      title: ClientRole
    CustomFieldSet:
      type: object
      properties:
        createdDate:
          type: string
        encodedKey:
          type: string
        indexInList:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        usage:
          type: string
      title: CustomFieldSet
    CustomFields:
      type: object
      properties:
        amounts:
          type: object
        creationDate:
          type: string
        customFieldSet:
          $ref: '#/components/schemas/CustomFieldSet'
        dataType:
          type: string
        default:
          type: boolean
        description:
          type: string
        editRights:
          $ref: '#/components/schemas/AccessRights'
        encodedKey:
          type: string
        id:
          type: string
        indexInList:
          type: integer
          format: int32
        lastModifiedDate:
          type: string
        name:
          type: string
        required:
          type: boolean
        state:
          type: string
        type:
          type: string
        unique:
          type: boolean
        valueLength:
          type: string
        values:
          type: array
          items:
            type: string
        viewRights:
          $ref: '#/components/schemas/AccessRights'
      title: CustomFields
    CustomInformation:
      type: object
      properties:
        customField:
          $ref: '#/components/schemas/CustomFields'
        customFieldID:
          type: string
        value:
          type: string
      title: CustomInformation
    Document:
      type: object
      properties:
        documentId:
          type: string
        documentType:
          type: string
        identificationDocumentTemplateKey:
          type: string
        issuingAuthority:
          type: string
        validUntil:
          type: string
      title: Document
    APIRequest_ClientDto_:
      type: object
      properties:
        customInformation:
          type: object
        request:
          $ref: '#/components/schemas/ClientDto'
      title: APIRequest«ClientDto»
    ApiResponse_BaseDto_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BaseDto'
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
      title: ApiResponse«BaseDto»
    ApiResponse_ClientDto_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientDto'
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
      title: ApiResponse«ClientDto»
    ApiResponse_string_:
      type: object
      properties:
        data:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
      title: ApiResponse«string»
