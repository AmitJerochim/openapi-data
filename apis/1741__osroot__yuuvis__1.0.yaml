openapi: 3.0.2
info:
  description: >-
    <h1>Welcome to the yuuvis<sup>速</sup> API Documentation</h1>
    <p><span style="color:red">Note, that this SwaggerHub instance of the yuuvis<sup>速</sup> API is deprecated.<br/>Please check out <a href="https://yuuvis.io/">yuuvis.io</a> for the latest version or our #tech-support channel at <a href="http://bit.ly/joinyuuvisonslack">http://bit.ly/joinyuuvisonslack ...</a></span></p>
      This API provides the basic document management functionality for the first yuuvis<sup>速</sup> hackathon in New York. With the yuuvis<sup>速</sup> API you can easily connect a document management system to a web application or a mobile app. This documentation will help you integrate the API into your application and is intended for developers.</br></br><hr />
    <h1>Authorize to Use the API</h1>You must be authorized to use the API. For this you should have _username_, _password_, and _tenant_ values. If you don't have those values<br><br>Once you have these values simply click on the <font color="green"><b>Authorize</b></font> button below and fill in the two available authorizations. For the first authorization, you need to enter your _username_ and _password_ and click <font color="green"><b>Authorize</b></font>. In the second dialog, enter your _tenant_ and click <font color="green"><b>Authorize</b></font>.<br><br><hr />
    <h1>Getting Started</h1>To get a quick start in using the API, you can use the following metadata example to store any file in the document management system.<h2>Uploading a Document Step-By-Step</h2>Save the following metadata as a file called _metadata.json_ <br>
    `{`<br>
    ` ` ` ` `"objects": [{`<br>
    ` ` ` ` ` ` ` ` `"properties": {`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` `"system:objectTypeId": {`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `"value": "document"`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` `},`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` `"Name": {`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `"value": "my document"`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` `}`<br>
    ` ` ` ` ` ` ` ` `},`<br>
    ` ` ` ` ` ` ` ` `"contentStreams": [{`<br>
    ` ` ` ` ` ` ` ` ` ` ` ` `"cid": "cid_63apple"`<br>
    ` ` ` ` ` ` ` ` `}]`<br>
    ` ` ` ` `}]`<br>
    `}`<br>
     Expand the call for storing documents below (`/dms/objects`) and click __Try it out__. You must choose two files for the multipart request. For the `data` part, select your _metadata.json_ file. For the `cid_63apple` part, select the file you want to upload. Finally, click <font color="blue"><b>Execute</b></font> and you're done.<br><br>
    <font color="red"><b>Hint: </b></font>Make sure you are authorized!<br><hr />
    <h1>Any Questions?</h1>[Join Slack and visit the #tech-support channel!](https://join.slack.com/t/yuuvis/shared_invite/enQtNTgzOTkwNTQ3OTI2LWU0MWM4ZDExNDQzNmY1MTU4OTE0ZmI2YWE4ZjE0OWQwMjM1MWEwMGYwZWVhM2JmOGRkYmZiYjc0NmJmZTExMzc)
  version: "1.0"
  title: yuuvis
tags:
  - name: objects
    description: 'Main functions related to your objects'
  - name: renditions
    description: 'Main functions related to your object renditions'
  - name: schema
    description: 'Schema information'
  - name: admin schema
    description: 'Schema administration (only accessible with an account with administrative rights)'
paths:
  '/dms/objects':
    post:
      tags:
        - objects
      summary: Storing one or more documents
      description: >-
        This request requires a multipart body with a metadata and a binary
        content part.<br> If the request is successful, the metadata of the
        previously imported document will be returned in JSON format.<br><br>
        <h1>Metadata Example</h1>
        `{`<br>
        ` ` ` ` `"objects": [{`<br>
        ` ` ` ` ` ` ` ` `"properties": {`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` `"system:objectTypeId": {`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `"value": "document"`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` `},`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` `"Name": {`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `"value": "my document"`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` `}`<br>
        ` ` ` ` ` ` ` ` `},`<br>
        ` ` ` ` ` ` ` ` `"contentStreams": [{`<br>
        ` ` ` ` ` ` ` ` ` ` ` ` `"cid": "cid_63apple"`<br>
        ` ` ` ` ` ` ` ` `}]`<br>
        ` ` ` ` `}]`<br>
        `}`<br><br>
        Save the metadata as a file called _metadata.json_ and click __Try it out__. Choose the _metadata.json_ file for the __data__ part and any file you want to store for the __cid_63apple__ part. Finally click on <font color="blue"><b>Execute</b></font> and you're done.<br><br>
        [Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744329)
      operationId: ObjectsPost
      deprecated: false
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedMetaData'
        '401':
          description: Unauthorized
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    the metadata of the object to be imported as JSON
                    file<br><br>
                  type: string
                  format: binary
                cid_63apple:
                  description: >-
                    the object to be imported as binary file<br><br><font
                    color=red>Note:</font> make sure the `cid_63apple` ID is
                    referenced in the corresponding metadata
                  type: string
                  format: binary
              required:
                - data
                - cid_63apple
  '/dms/objects/search':
    post:
      tags:
        - objects
      summary: Search documents by search query
      description: >-
        This request requires a JSON body containing the _search query_.


        <br>The search parameters _skipCount_ and _maxItems_ allow paging for
        search queries, whereby maxItems defines the maximum number of entries
        in the hit list and skipCount the maximum number of entries to be
        skipped.

        <br>For more information about the query language [see
        here](https://developer.enaio.org/redline/display/cloud/CMIS-Based+Query+Language).<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744330)
      operationId: ObjectsSearchPost
      deprecated: false
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: >-
          A _search query_ consists of three parameters: <ul><li>__statement__ -
          the SELECT statement (for more information about the query language
          [click
          here](https://developer.enaio.org/redline/display/cloud/CMIS-Based+Query+Language))</li><li>__skipCount__
          - defines the maximum number of entries to be skipped (for
          paging)</li><li>__maxItems__ - defines the maximum number of entries
          in the hit list</li></ul>
        required: true
  '/dms/objects/{objectId}':
    get:
      tags:
        - objects
      summary: Get document metadata by ID
      description: This Request returns the metadata of the object that matches the _objectId_ identification property.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744331)
      operationId: ObjectsByObjectIdGet
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedMetaData'
        '404':
          description: Not Found
      security:
        - auth: []
          tenant: []
    post:
      tags:
        - objects
      summary: Update document metadata by ID
      description: This request updates the metadata of the object that matches the _objectId_ identification property.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744332)
      operationId: ObjectsByObjectIdPost
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be updated
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedMetadataResponse'
        '404':
          description: Not Found
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetadataRequest'
        description: >-
          The updated metadata is passed as JSON structure in the body as
          follows
        required: true
    delete:
      tags:
        - objects
      summary: Delete document by ID
      description: This request deletes the object that matches the _objectId_ identification property.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744333)
      operationId: ObjectsByObjectIdDelete
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be deleted
          schema:
            type: string
      responses:
        '200':
          description: OK - The object with the ID objectId has been deleted.
        '404':
          description: Not Found - The object with the ID objectId can not be found.
        '409':
          description: >-
            Conflict - The object with the ID objectId could not be deleted due
            to retention.
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/actions/validate/digest':
    get:
      tags:
        - objects
      summary: Validate content digest by ID
      description: >-
        This request validates the content digest of the object that matches the _objectId_ identification property.<br>The content digest is recalculated from the content file and compared
        with the value stored in the metadata.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744334)
      operationId: ObjectsActionsValidateDigestByObjectIdGet
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: >-
            object ID of the object for which the content digest is to be
            validated
          schema:
            type: string
      responses:
        '200':
          description: >-
            OK - The value of the content digest stored in the metadata is still
            correct.
        '404':
          description: Not Found - The object with the ID objectId can not be found.
        '409':
          description: >-
            Conflict - The calculated content digest does not match the value
            stored in the metadata.
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/contents/file':
    get:
      tags:
        - objects
      summary: Get document content by ID
      description: This request returns the content file of the object that matches the _objectId_ identification property.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744335)
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
    post:
      tags:
        - objects
      summary: Update document content by ID
      description: "This request updates the content file of the object that matches the _objectId_ identification property.\r\n\r\nThe content can be named by passing the filename to the Content-Disposition header.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744336)"
      operationId: ObjectsContentsFileByObjectIdPost
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be updated
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: "__format:__ attachment;filename=_myfilename_"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedMetadataResponse'
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              properties:
                File:
                  description: the new content file of the object to be updated
                  type: string
                  format: binary
              required:
                - File
  '/dms/objects/{objectId}/contents/renditions/info':
    get:
      tags:
        - renditions
      summary: 'Get rendition information'
      description: 'This request returns a JSON structure containing information about the rendition of the object that matches the _objectId_ identification property.'
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenditionInfoResponse'
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/contents/renditions/pdf':
    get:
      tags:
        - renditions
      summary: 'Get a PDF rendition '
      description: 'This request returns a PDF rendition of the content of the object that matches the _objectId_ identification property.<br><font color="red">Note: </font> The Swagger API documentation cannot display the PDF file. Please use another tool, such as Postman, to download the PDF rendition file.'
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/contents/renditions/slide':
    get:
      tags:
        - renditions
      summary: 'Get an image rendition'
      description: 'This request returns a PNG file of the first page of the content of the object that matches the _objectId_ identification property. This PNG file is a small preview of the document, maximum dimensions 256x256.'
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: object
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/contents/renditions/text':
    get:
      tags:
        - renditions
      summary: 'Get a text rendition'
      description: 'This request return a text rendition of the content of the object that matches the _objectId_ identification property.'
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
  '/dms/objects/{objectId}/contents/renditions/extract':
    get:
      tags:
        - renditions
      summary: 'Get a extraction of XMP rendition'
      description: 'This request returns extraction of XMP metadata of the content of the object that matches the _objectId_ identification property.'
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of the object to be requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: NOT FOUND
      security:
        - auth: []
          tenant: []
  '/sandbox/renditions/pdf':
    post:
      tags:
        - renditions(convert)
      summary: 'Get a PDF rendition'
      description: 'This request returns a PDF rendition of the uploaded content.<br><font color="red">Note: </font> The Swagger API documentation cannot display the PDF file. Please use another tool, such as Postman, to download the PDF rendition file.'
      operationId: RenditionPDFPost 
      deprecated: false
      parameters:
        - name: Content-Disposition
          in: header
          required: false
          description: "attachment; filename=_myfilename_"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/pdf:
              schema:
                type: object
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              properties:
                File:
                  description: the content to be converted
                  type: string
                  format: binary
              required:
                - File
  '/sandbox/renditions/slide':
    post:
      tags:
        - renditions(convert)
      summary: 'Get a image rendition'
      description: 'This request returns a PNG file of the first page of the uploaded content. This PNG file is a small preview of the document, maximum dimensions 256x256.'
      operationId: RenditionSLIDEPost 
      deprecated: false
      parameters:
        - name: Content-Disposition
          in: header
          required: false
          description: "attachment; filename=_myfilename_"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            image/png:
              schema:
                type: object
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              properties:
                File:
                  description: the content to be converted
                  type: string
                  format: binary
              required:
                - File
  '/sandbox/renditions/text':
    post:
      tags:
        - renditions(convert)
      summary: 'Get a text rendition'
      description: 'his request return a text rendition of the  uploaded content. This PNG file is a small preview of the document, maximum dimensions 256x256.'
      operationId: RenditionTEXTPost 
      deprecated: false
      parameters:
        - name: Content-Disposition
          in: header
          required: false
          description: "attachment; filename=_myfilename_"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            text/plain:
              schema:
                type: string
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              properties:
                File:
                  description: the content to be converted
                  type: string
                  format: binary
              required:
                - File
  '/sandbox/renditions/extract':
    post:
      tags:
        - renditions(convert)
      summary: 'Get a extraction of XMP rendition'
      description: 'This request returns extraction of XMP metadata of the uploaded content.'
      operationId: RenditionExtractPost 
      deprecated: false
      parameters:
        - name: Content-Disposition
          in: header
          required: false
          description: "attachment; filename=_myfilename_"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: string
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              properties:
                File:
                  description: the content to be analyzed
                  type: string
                  format: binary
              required:
                - File
  '/dms/objects/{objectId}/history':
    get:
      tags:
        - objects
      summary: Get a list of history entries by ID
      description: This request retrieves the history entries of the object that matches the _objectId_ identification property.<br><br>[Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20744337)
      operationId: ObjectsHistoryByObjectIdGet
      deprecated: false
      parameters:
        - name: objectId
          in: path
          required: true
          description: >-
            object ID of the object for which the history entries are to be
            retrieved
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryEntries'
        '404':
          description: Not Found
      security:
        - auth: []
          tenant: []
  '/admin/schema':
    get:
      tags:
        - admin schema
      summary: Get the raw tenant schema
      description: To access the tenant schema, you need administrator rights. If you have administrator rights, this endpoint returns the schema of the tenant of the logged-on user.
        <br><br>
        [schema definition](https://developer.enaio.org/redline/display/cloud/Schema+Definition)
      deprecated: false
      responses:
        '200':
          description: OK
          content: 
            application/xml:
              schema:
                $ref: '#/components/schemas/TenantSchema'
        '403':
          description: Forbidden
      security:
        - auth: []
          tenant: []
    post:
      tags:
        - admin schema
      summary: Update the tenant schema
      description: To update the tenant schema, you need administrator rights. The schema is validated before it is updated. If it is not valid, it will not be updated.
        <br><br>
        [schema definition](https://developer.enaio.org/redline/display/cloud/Schema+Definition)
      deprecated: false
      responses:
        '200':
          description: OK - Schema is valid
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        '422':
          description: Unprocessable Entity - Schema not valid
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors2'
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: the schema to be imported
                  type: string
                  format: binary
              required:
              - file
  '/dms/schema/native':
    get:
      tags:
        - schema
      summary: Get the applied tenant schema
      description: This endpoint returns the applied schema of the tenant belonging to the logged on user. The applied schema is the tenant schema, enhanced by the global schema and the system properties.
        <br><br>
        [Endpoint documentation](https://developer.enaio.org/redline/pages/viewpage.action?pageId=20745532)
      deprecated: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
        '403':
          description: Forbidden
      security:
        - auth: []
          tenant: []
  '/admin/schema/validate':
    post:
      tags:
        - admin schema
      summary: Validate a schema
      description: This endpoint validates a schema and returns a list of validation error messages, if any.
        <br><br>
        [schema definition](https://developer.enaio.org/redline/display/cloud/Schema+Definition)
      deprecated: false
      responses:
        '200':
          description: OK - Schema is valid
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        '422':
          description: Unprocessable Entity - Schema is invalid
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors2'
      security:
        - auth: []
          tenant: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: the schema to be validated
                  type: string
                  format: binary
              required:
              - file
servers:
  - url: https://arktum.yuuvis.org/api
  - url: 'https://nychack.yuuvis.io/api'
components:
  securitySchemes:
    auth:
      type: http
      scheme: basic
    tenant:
      type: apiKey
      name: X-ID-TENANT-NAME
      in: header
  schemas:
    ImportedMetaData:
      title: Import Object Response
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        contentStreams:
          type: array
          items:
            $ref: '#/components/schemas/ContentStream'
      required:
        - objects
      example:
        objects:
          - properties:
              'system:objectId':
                value: "c5ef052e-4869-487a-8599-58ecaa093583"
              'system:baseTypeId':
                value: 'system:document'
              'system:objectTypeId':
                value: document
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:lastModifiedBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:lastModificationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:versionNumber':
                value: 1
              'system:tenant':
                value: 'heckathon'
              'system:traceId':
                value: '49749ababad604f3'
              Name:
                value: my document
            contentStreams:
              - contentStreamId: 'DD8A546A-4B14-11E9-B059-79C8490F4220'
                archivePath: 'heckathon/2019/03/20/'
                length: 431397
                mimeType: 'message/rfc822'
                fileName: 'import.eml'
                digest: '11857B6FAD61E41AFB3E7398BA1BA4BFB6B0A5422762FF41A0907BC0BFF7748F'
                repositoryId: 's3miniowithpath'
    SearchRequest:
      title: Search Request
      type: object
      properties:
        query:
          type: object
          properties:
            statement:
              type: string
            skipCount:
              type: integer
              format: int32
            maxItems:
              type: integer
              format: int32
          required:
            - statement
            - skipCount
            - maxItems
      required:
        - query
      example:
        query:
          statement: 'SELECT * FROM system:object'
          skipCount: 0
          maxItems: 50
    SearchResponse:
      title: Search Response Object
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        numItems:
          type: integer
          format: int64
        hasMoreItems:
          type: boolean
        totalNumItems:
          type: integer
          format: int64
      required:
        - objects
        - numItems
        - hasMoreItems
        - totalNumItems
      example:
        objects:
          - properties:
              'system:objectId':
                value: "c5ef052e-4869-487a-8599-58ecaa093583"
              'system:baseTypeId':
                value: 'system:document'
              'system:objectTypeId':
                value: document
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:lastModifiedBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:lastModificationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:versionNumber':
                value: 1
              'system:tenant':
                value: 'heckathon'
              'system:traceId':
                value: '49749ababad604f3'
              Name:
                value: my document
            contentStreams:
              - contentStreamId: 'DD8A546A-4B14-11E9-B059-79C8490F4220'
                archivePath: 'heckathon/2019/03/20/'
                length: 431397
                mimeType: 'message/rfc822'
                fileName: 'import.eml'
                digest: '11857B6FAD61E41AFB3E7398BA1BA4BFB6B0A5422762FF41A0907BC0BFF7748F'
                repositoryId: 's3miniowithpath'
        numItems: 1
        hasMoreItems: false
        totalNumItems: 1
    UpdateMetadataRequest:
      title: Update Metadata Request
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
      required:
        - objects
      example:
        objects:
          - properties:
              'system:objectTypeId':
                value: document
              Name:
                value: Update Email
    UpdatedMetadataResponse:
      title: Update Metadata Response
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        contentStreams:
          type: array
          items:
            $ref: '#/components/schemas/ContentStream'
      required:
        - objects
      example:
        objects:
          - properties:
              'system:objectId':
                value: "c5ef052e-4869-487a-8599-58ecaa093583"
              'system:baseTypeId':
                value: 'system:document'
              'system:objectTypeId':
                value: document
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:lastModifiedBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:lastModificationDate':
                value: '2019-03-20T13:34:20.150Z'
              'system:versionNumber':
                value: 2
              'system:tenant':
                value: 'heckathon'
              'system:traceId':
                value: '49749ababad604f3'
              Name:
                value: Update Email
            contentStreams:
              - contentStreamId: 'DD8A546A-4B14-11E9-B059-79C8490F4220'
                archivePath: 'heckathon/2019/03/20/'
                length: 431397
                mimeType: 'message/rfc822'
                fileName: 'import.eml'
                digest: '11857B6FAD61E41AFB3E7398BA1BA4BFB6B0A5422762FF41A0907BC0BFF7748F'
                repositoryId: 's3miniowithpath'
    HistoryEntries:
      title: History Entries List
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/HistoryEntry'
      required:
        - objects
      example:
        objects:
          - properties:
              'system:objectId':
                value: 435902492049473539
              'system:objectTypeId':
                value: 'system:audit'
              'system:baseTypeId':
                value: 'item'
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:tenant':
                value: 'heckathon'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              description: 
                value: ""
              action:
                value: 101
              detail: 
                value: CREATE_METADATA_WITH_CONTENT
              referredObjectId:
                value: '7c097bde-8c63-4764-a85d-0205a17eb2f2'
              'system:traceId':
                value: '49749ababad604f3'
              'system:versionNumber':
                value: 1
          - properties:
              'system:objectId':
                value: 435902492049473539
              'system:objectTypeId':
                value: 'system:audit'
              'system:baseTypeId':
                value: 'item'
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:tenant':
                value: 'heckathon'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              description: 
                value: ""
              action:
                value: 401
              detail: 
                value: GET_METADATA
              referredObjectId:
                value: '7c097bde-8c63-4764-a85d-0205a17eb2f2'
              'system:traceId':
                value: '49749ababad604f3'
              'system:versionNumber':
                value: 1
          - properties:
              'system:objectId':
                value: 435902492049473539
              'system:objectTypeId':
                value: 'system:audit'
              'system:baseTypeId':
                value: 'item'
              'system:createdBy':
                value: 'ac3fbec5-b99d-4323-9235-cf6e4c6a2be7'
              'system:tenant':
                value: 'hackathon'
              'system:creationDate':
                value: '2019-03-20T13:34:20.150Z'
              description: 
                value: ""
              action:
                value: 301
              detail: 
                value: UPDATE_CONTENT
              referredObjectId:
                value: '7c097bde-8c63-4764-a85d-0205a17eb2f2'
              'system:traceId':
                value: '49749ababad604f3'
              'system:versionNumber':
                value: 2
    HistoryEntry:
      title: History Entry Object
      type: object
      properties:
        properties:
          type: object
          properties:
            'system:objectId':
              type: object
              properties:
                value:
                  type: integer
                  format: int64
            'system:objectTypeId':
              type: object
              properties:
                value:
                  type: string
            'system:baseTypeId':
              type: object
              properties:
                value:
                  type: string
            'system:createdBy':
              type: object
              properties:
                value:
                  type: string
            'system:tenant':
              type: object
              properties:
                value:
                  type: string
            'system:creationDate':
              type: object
              properties:
                value:
                  type: string
            'description':
              type: object
              properties:
                value:
                  type: string
            'action':
              type: object
              properties:
                value:
                  type: integer
                  format: int32
            'detail':
              type: object
              properties:
                value:
                  type: string
            'referredObjectId':
              type: object
              properties:
                value:
                  type: string
            'system:traceId':
              type: object
              properties:
                value:
                  type: string
            'system:versionNumber':
              type: object
              properties:
                value:
                  type: integer
                  format: int32
          required:
            - 'system:objectId'
            - 'system:objectTypeId'
            - 'system:baseTypeId'
            - 'system:createdBy'
            - 'system:tenant'
            - 'system:creationDate'
            - 'description'
            - 'action'
            - 'detail'
            - 'referredObjectId'
            - 'system:traceId'
            - 'system:versionNumber'
    Metadata:
      title: Metadata Object
      type: object
      properties:
        properties:
          type: object
          properties:
            'system:objectTypeId':
              type: object
              properties:
                value:
                  type: string
              required:
                - value
            Name:
              type: object
              properties:
                value:
                  type: string
              required:
                - value
          required:
            - 'system:objectTypeId'
      required:
        - properties
    ContentStream:
      title: Content Stream Object
      type: object
      properties:
        contentStreamId:
          type: string
        archivePath:
          type: string
        length:
          type: integer
          format: int64
        mimeType:
          type: string
        fileName:
          type: string
        digest:
          type: string
        repositoryId:
          type: string
      required:
        - contentStreamId
        - archivePath
        - length
        - mimeType
        - fileName
        - digest
        - repositoryId
    ValidationErrors:
      title: Validation Error List
      type: object
      properties:
        validationErrors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
      example:
        validationErrors: []
    ValidationErrors2:
      title: Validation Error List
      type: object
      properties:
        validationErrors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
      example:
        validationErrors:
          - message: 'There are 2 property type definitions with the id ''tenNyc999:string3''.'
          - message: 'Invalid property reference ''string5'' in type definition ''tenNyc999:doc2''.'
    TenantSchema:
      title: Tenant Schema Example
      type: object
      properties:
        'xmlns:xsi':
          type : string
          xml:
            attribute: true
        'xsi:schemaLocation':
          type : string
          xml:
            attribute: true
        propertyStringDefinition:
          $ref: '#/components/schemas/PropertyDefinition'
        propertyDateTimeDefinition:
          $ref: '#/components/schemas/PropertyDefinition'
        typeDocumentDefinition:
           $ref: '#/components/schemas/TypeDocumentDefinition'
      required:
        - propertyStringDefinition
        - typeDocumentDefinition
      example:
        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'
        'xsi:schemaLocation': 'http://optimal-systems.org/ns/dmscloud/schema/v4.0/ dmsCloud-schema.xsd'
        propertyStringDefinition:
          id: myname
          propertyType: string
          cardinality: single
          required: true
        propertyDateTimeDefinition:
          id: mydate
          propertyType: datetime
          cardinality: single
          required: true
        typeDocumentDefinition:
          id: mydocument
          baseId: 'system:document'
          propertyReference: 
            - myname
            - mydate
          contentStreamAllowed: required
      xml:
        name: schema
        namespace: "http://optimal-systems.org/ns/dmscloud/schema/v4.0/"
    PropertyDefinition:
      title: Property Definition Object
      type: object
      properties:
        id:
          type: string
        propertyType:
          type: string
        cardinality:
          type: string
        required:
          type: boolean
    TypeDocumentDefinition:
      title: Type Document Definition Object
      type: object
      properties:
        id:
          type: string
        baseId:
          type: string
        propertyReference:
          type: array
          items:
            type: string
        contentStreamAllowed:
          type: string
    RenditionInfoResponse:
      type: object
      properties:
        "pdf":
          type: object
          properties:
            "status":
              type: string
              example: 'successful'
            "created":
              type: string
              example: '2019-03-29T08:10:09+0000'
            "pageCount":
              type: integer
              format: int32
              example: 2
            "mimeType": 
              type: string
              example: 'application/pdf'
        "document":
          type: object
          properties:
            "mimeType":
              type: string
              example: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'