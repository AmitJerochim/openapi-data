{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2.0",
    "title" : "PurchasePlus API - Inventory Module",
    "description" : "Consists of the various locations that goods may be held, from physical ones to expense locations. On top of this the various transfer types may be performed to move goods around, and also stock takes can be undertaken.\n\nThe basic structure is that there are various types of locations which may hold stock levels. A stock level represents a product and its quantity and value. The quantity on a stock level is affected by transfers. History of the quantity and value of these stock levels over time is maintained through stock level balances. Transfers can be generated from a number of sources including requisitions, stock takes, and transfers between locations. A transfer has many items on it which record the product and quantity being transferred. From this it can be inferred the origin and destination stock levels being affected.\n"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/marketboomer/PurchasePlusAPI-Inventory/2.0"
  }, {
    "description" : "PurchasePlus Production",
    "url" : "https://api.purchaseplus.com"
  }, {
    "description" : "PurchasePlus Staging",
    "url" : "https://staging.api.purchaseplus.com"
  }, {
    "description" : "PurchasePlus Demo",
    "url" : "https://demo.api.purchaseplus.com"
  } ],
  "tags" : [ {
    "name" : "Accounting Location",
    "description" : "A default location called 'Period-end Cost of Goods Used' for holding stock levels from cleared Expense Locations"
  }, {
    "name" : "Accounting Transfer",
    "description" : "Created when expense locations are cleared"
  }, {
    "name" : "Activity",
    "description" : "An audit log of activity on an object"
  }, {
    "name" : "Adjusting Transfer",
    "description" : "Used when adjusting prices on products in a Stock Location"
  }, {
    "name" : "Comment",
    "description" : "User entered notes against an object"
  }, {
    "name" : "Department",
    "description" : "An organisational unit (purchaser or department within the purchaser)"
  }, {
    "name" : "Derived Period Balance",
    "description" : "This is the balance for a stock level at the point of its most recent stock take"
  }, {
    "name" : "Expense Location",
    "description" : "Used to track cost of goods sold"
  }, {
    "name" : "Holder",
    "description" : "A holder is a representation of an entity that may hold stock"
  }, {
    "name" : "Internal Requisition",
    "description" : "A requisition that is filled from an internal stock location"
  }, {
    "name" : "Internal Requisition Line",
    "description" : "A line containing quantity and more for an internal requisition"
  }, {
    "name" : "Internal Requisition Transfer",
    "description" : "A transfer created when an Internal Requisition is approved"
  }, {
    "name" : "Location Period",
    "description" : "Represents the period between stock takes on a location"
  }, {
    "name" : "Opening Location",
    "description" : "Used to initialise inventory"
  }, {
    "name" : "Origin Destination Workflow",
    "description" : "Used on an internal requisition to control approval"
  }, {
    "name" : "Product",
    "description" : "A product that represents stock that is counted and transferred"
  }, {
    "name" : "Purchaser",
    "description" : "An organisation that purchases goods and services"
  }, {
    "name" : "Receiving Document",
    "description" : "A document containing information on stock that has been received"
  }, {
    "name" : "Receiving Document Line Item",
    "description" : "A line containing quantity received for which product"
  }, {
    "name" : "Receiving Transfer",
    "description" : "Created when receiving goods from a Receiving Note"
  }, {
    "name" : "Sale Expense Location",
    "description" : "Used to hold Point of Sale transfers when items are sold from a Stock Location"
  }, {
    "name" : "Sale Transfer",
    "description" : "Created using Point of Sale data"
  }, {
    "name" : "Stock Count",
    "description" : "A count of a single stock item on a stock take"
  }, {
    "name" : "Stock Level",
    "description" : "Records the quantity, par level and value for a product"
  }, {
    "name" : "Stock Level Balance",
    "description" : "Records the balance for a stock level after every event that may change it"
  }, {
    "name" : "Stock Location",
    "description" : "A physical location holding goods and requiring stock takes"
  }, {
    "name" : "Stock Take",
    "description" : "A collection of stock counts for a single stock location taken at a point in time"
  }, {
    "name" : "Stock Transfer",
    "description" : "Records the transfer of stock between Stock Locations/Expense Locations"
  }, {
    "name" : "Supply Location",
    "description" : "A location representing a supplier, used for Receiving Transfers"
  }, {
    "name" : "Transfer",
    "description" : "Records a transfer between an origin location and a destination location"
  }, {
    "name" : "Transfer Approval Workflow",
    "description" : "Describes the rules for the workflow to approve a Transfer"
  }, {
    "name" : "Transfer Item",
    "description" : "A product on a transfer, recording the quantity transferred"
  }, {
    "name" : "Value Adjustment",
    "description" : "A manual adjustment to the value of a stock level"
  }, {
    "name" : "Variance Location",
    "description" : "Used to track variances between what exists in a stock take and what is in a Location"
  }, {
    "name" : "Variance Transfer",
    "description" : "Used to clear any variances on a stock location due to a stock take"
  } ],
  "paths" : {
    "/inventory/api/holders/{holderId}/accounting_locations" : {
      "get" : {
        "tags" : [ "Accounting Location", "Holder" ],
        "summary" : "Accounting locations for the holder",
        "description" : "Retrieve all the accounting locations for the given holder.",
        "operationId" : "getAccountingLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AccountingLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/accounting_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/accounting_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/accounting_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/accounting_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Accounting Location" ],
        "summary" : "Create an accounting location",
        "description" : "Creates a `Accounting Location` object that will describe the location information.",
        "operationId" : "postAccountingLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/accountingLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_locations/{accountingLocationId}" : {
      "get" : {
        "tags" : [ "Accounting Location" ],
        "summary" : "Finds accounting location by ID",
        "operationId" : "getAccountingLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Accounting Location" ],
        "summary" : "Update an accounting location",
        "description" : "Updates an accounting location object.",
        "operationId" : "patchAccountingLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/accountingLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounting Location" ],
        "summary" : "Delete an accounting location",
        "description" : "Deletes an accounting location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteAccountingLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_locations/{accountingLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Accounting Location" ],
        "summary" : "Activities for the given location",
        "description" : "Returns all activities (audit logs) for the given accounting location.",
        "operationId" : "getActivitiesByAccountingLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/accounting_transfers" : {
      "get" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Accounting transfers for the location",
        "description" : "Retrieve all the accounting transfers where the given location is the transfer origin.",
        "operationId" : "getAccountingTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AccountingTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/accounting_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/accounting_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/accounting_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/accounting_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Create an accounting transfer",
        "description" : "Creates a `Accounting Transfer` object that will describe the transfer information. The only possible destination and origin location types are Accounting Locations",
        "operationId" : "postAccountingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/accountingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/clear" : {
      "post" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Clears all expense locations",
        "description" : "This would be done after a stock take is completed. All expense locations that have non zero balance stock levels have transfers created that will move the stock into the default accounting location 'Period-end Cost of Goods Used'. This process will occur in the background asynchronously.",
        "operationId" : "clearAccountingTransfer",
        "responses" : {
          "200" : {
            "description" : "The process has been initiated.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "results" : {
                      "type" : "string",
                      "example" : "We are processing the clearing of all your expense locations to zero. Please check the Transfers section in a few moments to see if its completed."
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}" : {
      "get" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Finds accounting transfer by ID",
        "operationId" : "getAccountingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Update an accounting transfer",
        "description" : "Updates an accounting transfer object.",
        "operationId" : "patchAccountingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/accountingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Delete an accounting transfer",
        "description" : "Deletes an accounting transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteAccountingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Accounting Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given accounting transfer.",
        "operationId" : "getActivitiesByAccountingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Accounting Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given accounting transfer.",
        "operationId" : "getCommentsByAccountingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Accounting Transfer" ],
        "summary" : "Create a comment for an accounting transfer",
        "description" : "Creates a `Comment` object for the accounting transfer.",
        "operationId" : "postCommentByAccountingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Cancel an accounting transfer",
        "description" : "Cancel an accounting transfer. Must not be in the complete state.",
        "operationId" : "cancelAccountingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}/complete" : {
      "post" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Complete an accounting transfer",
        "description" : "Completes an accounting transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeAccountingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/accounting_transfers/{accountingTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Accounting Transfer" ],
        "summary" : "Re-open a cancelled accounting transfer",
        "description" : "Re-opens an accounting transfer. Must be in the cancelled state.",
        "operationId" : "reopenAccountingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/accountingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AccountingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/adjusting_transfers" : {
      "get" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Adjusting transfers for the location",
        "description" : "Retrieve all the adjusting transfers where the given location is the transfer origin.",
        "operationId" : "getAdjustingTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AdjustingTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/adjusting_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/adjusting_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/adjusting_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/adjusting_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Create an adjusting transfer",
        "description" : "Creates a `Adjusting Transfer` object that will describe the transfer information. The possible destination location types will depend on the origin location for the transfer.\nOrigin | Possible Locations\n-------|-------------------\nStock Location | Variance Location, Opening Location\nExpense Location | Variance Location\nOpening Location | Stock Location\nSupply Location | Stock Location, Expense Location\n",
        "operationId" : "postAdjustingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/adjustingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/adjusting_transfers/{adjustingTransferId}" : {
      "get" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Finds adjusting transfer by ID",
        "operationId" : "getAdjustingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Update an adjusting transfer",
        "description" : "Updates an adjusting transfer object.",
        "operationId" : "patchAdjustingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/adjustingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Delete an adjusting transfer",
        "description" : "Deletes an adjusting transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteAdjustingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/adjusting_transfers/{adjustingTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Adjusting Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given adjusting transfer.",
        "operationId" : "getActivitiesByAdjustingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/adjusting_transfers/{adjustingTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Cancel an adjusting transfer",
        "description" : "Cancel an adjusting transfer. Must not be in the complete state.",
        "operationId" : "cancelAdjustingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/adjusting_transfers/{adjustingTransferId}/complete" : {
      "post" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Complete an adjusting transfer",
        "description" : "Completes an adjusting transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeAdjustingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/adjusting_transfers/{adjustingTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Adjusting Transfer" ],
        "summary" : "Re-open a cancelled adjusting transfer",
        "description" : "Re-opens an adjusting transfer. Must be in the cancelled state.",
        "operationId" : "reopenAdjustingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/adjustingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdjustingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/comments/{commentId}" : {
      "get" : {
        "tags" : [ "Comment" ],
        "summary" : "Finds comment by ID",
        "operationId" : "getCommentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/commentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Comment" ],
        "summary" : "Update a comment",
        "description" : "Updates a comment object.",
        "operationId" : "patchCommentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/commentId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Comment" ],
        "summary" : "Delete a comment",
        "description" : "Deletes a comment object.",
        "operationId" : "deleteCommentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/commentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/departments" : {
      "get" : {
        "tags" : [ "Department" ],
        "summary" : "Departments for the location",
        "description" : "Retrieve all the departments for the given location.",
        "operationId" : "getDepartmentsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Department"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/departments/{departmentId}" : {
      "get" : {
        "tags" : [ "Department" ],
        "summary" : "Finds department by ID",
        "operationId" : "getDepartmentById",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/departmentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/DepartmentSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/derived_period_balances/{derivedPeriodBalanceId}" : {
      "get" : {
        "tags" : [ "Derived Period Balance" ],
        "summary" : "Finds derived period balance by ID",
        "operationId" : "getDerivedPeriodBalanceById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/derivedPeriodBalanceId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/DerivedPeriodBalanceSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/derived_period_balances" : {
      "get" : {
        "tags" : [ "Derived Period Balance" ],
        "summary" : "Derived period balances for the location",
        "description" : "Retrieve all the derived period balances for the given location.",
        "operationId" : "getDerivedPeriodBalanceByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DerivedPeriodBalance"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/derived_period_balances?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/expense_locations" : {
      "get" : {
        "tags" : [ "Expense Location", "Holder" ],
        "summary" : "Expense locations for the holder",
        "description" : "Retrieve all the expense locations for the given holder.",
        "operationId" : "getExpenseLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ExpenseLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/expense_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/expense_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/expense_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/expense_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Expense Location" ],
        "summary" : "Create an expense location",
        "description" : "Creates a `Expense Location` object that will describe the location information.",
        "operationId" : "postExpenseLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/expenseLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ExpenseLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/expense_locations/{expenseLocationId}" : {
      "get" : {
        "tags" : [ "Expense Location" ],
        "summary" : "Finds expense location by ID",
        "operationId" : "getExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/expenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ExpenseLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Expense Location" ],
        "summary" : "Update an expense location",
        "description" : "Updates an expense location object.",
        "operationId" : "patchExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/expenseLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/expenseLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ExpenseLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Location" ],
        "summary" : "Delete an expense location",
        "description" : "Deletes an expense location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/expenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/expense_locations/{expenseLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Expense Location" ],
        "summary" : "Activities for the given location",
        "description" : "Returns all activities (audit logs) for the given expense location.",
        "operationId" : "getActivitiesByExpenseLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/expenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders" : {
      "get" : {
        "tags" : [ "Holder" ],
        "summary" : "Holders available to the current organisation",
        "description" : "Returns all products available to the current organisation",
        "operationId" : "getHolders",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Holder"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Holder" ],
        "summary" : "Create a holder",
        "description" : "Creates a `Holder` object that will describe the holder information.",
        "operationId" : "postHolder",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/holder"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/HolderSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}" : {
      "get" : {
        "tags" : [ "Holder" ],
        "summary" : "Finds holder by ID",
        "operationId" : "getHolderById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/HolderSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Holder" ],
        "summary" : "Update a holder",
        "description" : "Updates a holder object.",
        "operationId" : "patchHolderById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/holder"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/HolderSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Holder" ],
        "summary" : "Delete a holder",
        "description" : "Deletes a holder object. If there are any locations associated with this holder you will receive an error.",
        "operationId" : "deleteHolderById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "base" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "Cannot delete record because dependent locations exist"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Holder" ],
        "summary" : "Activities for the given holder",
        "description" : "Returns all activities (audit logs) for the given holder.",
        "operationId" : "getActivitiesByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/opening_locations" : {
      "get" : {
        "tags" : [ "Opening Location", "Holder" ],
        "summary" : "Opening locations for the holder",
        "description" : "Retrieve all the opening locations for the given holder.",
        "operationId" : "getOpeningLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/OpeningLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/opening_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/opening_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/opening_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/opening_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Opening Location" ],
        "summary" : "Create an opening location",
        "description" : "Creates a `Opening Location` object that will describe the location information.",
        "operationId" : "postOpeningLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/openingLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OpeningLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/internal_requisitions" : {
      "get" : {
        "tags" : [ "Internal Requisition" ],
        "summary" : "Internal Requisitions for the location",
        "description" : "Retrieve all the internal requisitions where the given location is the internal requisition origin.",
        "operationId" : "getInternalRequisitionsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/InternalRequisition"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisitions?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisitions?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisitions?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisitions?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Internal Requisition" ],
        "summary" : "Create an internal requisition",
        "description" : "Creates a `Internal Requisition` object that will describe the requisition information. The given location will be used as the origin location.",
        "operationId" : "postInternalRequisition",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisition"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisitions/{internalRequisitionId}" : {
      "get" : {
        "tags" : [ "Internal Requisition" ],
        "summary" : "Finds internal requisition by ID",
        "operationId" : "getInternalRequisitionById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Internal Requisition" ],
        "summary" : "Update an internal requisition",
        "description" : "Updates an internal requisition object.",
        "operationId" : "patchInternalRequisitionById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisition"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal Requisition" ],
        "summary" : "Delete an internal requisition",
        "description" : "Deletes an internal requisition object. All lines on the requisition will be deleted too.",
        "operationId" : "deleteInternalRequisitionById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisitions/{internalRequisitionId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Internal Requisition" ],
        "summary" : "Activities for the given internal requisition",
        "description" : "Returns all activities (audit logs) for the given internal requisition.",
        "operationId" : "getActivitiesByInternalRequisitionId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisitions/{internalRequisitionId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Internal Requisition" ],
        "summary" : "Comments for the given internal requisition",
        "description" : "Returns all comments for the given internal requisition.",
        "operationId" : "getCommentsByInternalRequisitionId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Internal Requisition" ],
        "summary" : "Create a comment for a internal requisition",
        "description" : "Creates a `Comment` object for the internal requisition.",
        "operationId" : "postCommentByInternalRequisitionId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisitions/{internalRequisitionId}/internal_requisition_lines" : {
      "get" : {
        "tags" : [ "Internal Requisition Line" ],
        "summary" : "Lines for the internal requisition",
        "description" : "Retrieve all the lines from the given internal requisition.",
        "operationId" : "getInternalRequisitionLinesByInternalRequisitionId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/InternalRequisitionLine"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/internal_requisition_lines?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/internal_requisition_lines?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/internal_requisition_lines?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/100/internal_requisition_lines?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Internal Requisition Line" ],
        "summary" : "Create an internal requisition line",
        "description" : "Creates a `Internal Requisition Line` object that will describe the line information.",
        "operationId" : "postInternalRequisitionLine",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisitionLine"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionLineSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_lines/{internalRequisitionLineId}" : {
      "get" : {
        "tags" : [ "Internal Requisition Line" ],
        "summary" : "Finds internal requisition line by ID",
        "operationId" : "getInternalRequisitionLineById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionLineId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionLineSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Internal Requisition Line" ],
        "summary" : "Update an internal requisition line",
        "description" : "Updates an internal requisition line object.",
        "operationId" : "patchInternalRequisitionLineById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionLineId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisitionLine"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionLineSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal Requisition Line" ],
        "summary" : "Delete an internal requisition line",
        "description" : "Deletes an internal requisition lineobject.",
        "operationId" : "deleteInternalRequisitionLineById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionLineId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_lines/{internalRequisitionLineId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Internal Requisition Line" ],
        "summary" : "Activities for the given internal requisition line",
        "description" : "Returns all activities (audit logs) for the given internal requisition line.",
        "operationId" : "getActivitiesByInternalRequisitionLineId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionLineId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_lines/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_lines/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_lines/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_lines/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/internal_requisition_transfers" : {
      "get" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Internal Requisition transfers for the location",
        "description" : "Retrieve all the internal requisition transfers where the given location is the transfer origin.",
        "operationId" : "getInternalRequisitionTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/InternalRequisitionTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisition_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisition_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisition_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/internal_requisition_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Create an internal requisition transfer",
        "description" : "Creates a `Internal Requisition Transfer` object that will describe the transfer information. The possible destination location types will depend on the origin location for the transfer.\nOrigin | Possible Locations\n-------|-------------------\nStock Location | Variance Location, Opening Location\nExpense Location | Variance Location\nOpening Location | Stock Location\nSupply Location | Stock Location, Expense Location\n",
        "operationId" : "postInternalRequisitionTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisitionTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}" : {
      "get" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Finds internal requisition transfer by ID",
        "operationId" : "getInternalRequisitionTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Update an internal requisition transfer",
        "description" : "Updates an internal requisition transfer object.",
        "operationId" : "patchInternalRequisitionTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/internalRequisitionTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Delete an internal requisition transfer",
        "description" : "Deletes an internal requisition transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteInternalRequisitionTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Internal Requisition Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given internal requisition transfer.",
        "operationId" : "getActivitiesByInternalRequisitionTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Internal Requisition Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given internal requisition transfer.",
        "operationId" : "getCommentsByInternalRequisitionTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Internal Requisition Transfer" ],
        "summary" : "Create a comment for an internal requisition transfer",
        "description" : "Creates a `Comment` object for the internal requisition transfer.",
        "operationId" : "postCommentByInternalRequisitionTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Cancel an internal requisition transfer",
        "description" : "Cancel an internal requisition transfer. Must not be in the complete state.",
        "operationId" : "cancelInternalRequisitionTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}/complete" : {
      "post" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Complete an internal requisition transfer",
        "description" : "Completes an internal requisition transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeInternalRequisitionTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/internal_requisition_transfers/{internalRequisitionTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Internal Requisition Transfer" ],
        "summary" : "Re-open a cancelled internal requisition transfer",
        "description" : "Re-opens an internal requisition transfer. Must be in the cancelled state.",
        "operationId" : "reopenInternalRequisitionTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/internalRequisitionTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/InternalRequisitionTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/location_periods" : {
      "get" : {
        "tags" : [ "Location Period" ],
        "summary" : "Periods for the location",
        "description" : "Retrieve all the location periods for the given location.",
        "operationId" : "getLocationPeriodsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/LocationPeriod"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/location_periods?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/location_periods?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/location_periods?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/location_periods?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Location Period" ],
        "summary" : "Create a location period",
        "description" : "Creates a `Location Period` object that will describe the period information.",
        "operationId" : "postLocationPeriod",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/locationPeriod"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/LocationPeriodSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/location_periods/{locationPeriodId}" : {
      "get" : {
        "tags" : [ "Location Period" ],
        "summary" : "Finds location period by ID",
        "operationId" : "getLocationPeriodById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationPeriodId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/LocationPeriodSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Location Period" ],
        "summary" : "Update a location period",
        "description" : "Updates a location period object.",
        "operationId" : "patchLocationPeriodById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationPeriodId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/locationPeriod"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/LocationPeriodSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location Period" ],
        "summary" : "Delete a location period",
        "description" : "Deletes a location period object.",
        "operationId" : "deleteLocationPeriodById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationPeriodId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/location_periods/{locationPeriodId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Location Period" ],
        "summary" : "Activities for the given location period",
        "description" : "Returns all activities (audit logs) for the given location period.",
        "operationId" : "getActivitiesByLocationPeriodId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationPeriodId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/location_periods/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/location_periods/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/location_periods/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/location_periods/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/opening_locations/{openingLocationId}" : {
      "get" : {
        "tags" : [ "Opening Location" ],
        "summary" : "Finds opening location by ID",
        "operationId" : "getOpeningLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/openingLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OpeningLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Opening Location" ],
        "summary" : "Update an opening location",
        "description" : "Updates an opening location object.",
        "operationId" : "patchOpeningLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/openingLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/openingLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OpeningLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Opening Location" ],
        "summary" : "Delete an opening location",
        "description" : "Deletes an opening location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteOpeningLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/openingLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/opening_locations/{openingLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Opening Location" ],
        "summary" : "Activities for the given location",
        "description" : "Returns all activities (audit logs) for the given opening location.",
        "operationId" : "getActivitiesByOpeningLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/openingLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/origin_destination_workflows" : {
      "get" : {
        "tags" : [ "Origin Destination Workflow" ],
        "summary" : "Origin Destination Workflows for the location",
        "description" : "Retrieve all the origin destination workflows for the given location.",
        "operationId" : "getOriginDestinationWorkflowsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/OriginDestinationWorkflow"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/origin_destination_workflows?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/origin_destination_workflows?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/origin_destination_workflows?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/origin_destination_workflows?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Origin Destination Workflow" ],
        "summary" : "Create an origin destination workflow",
        "description" : "Creates an `Origin Destination Workflow` object that will describe the workflow used on an Internal Requisition.",
        "operationId" : "postOriginDestinationWorkflow",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/originDestinationWorkflow"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OriginDestinationWorkflowSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/origin_destination_workflows/{originDestinationWorkflowId}" : {
      "get" : {
        "tags" : [ "Origin Destination Workflow" ],
        "summary" : "Finds origin destination workflow by ID",
        "operationId" : "getOriginDestinationWorkflowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/originDestinationWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OriginDestinationWorkflowSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Origin Destination Workflow" ],
        "summary" : "Update an origin destination workflow",
        "description" : "Updates an origin destination workflow object.",
        "operationId" : "patchOriginDestinationWorkflowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/originDestinationWorkflowId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/originDestinationWorkflow"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OriginDestinationWorkflowSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Origin Destination Workflow" ],
        "summary" : "Delete an origin destination workflow",
        "description" : "Deletes an origin destination workflow object.",
        "operationId" : "deleteOriginDestinationWorkflowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/originDestinationWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/origin_destination_workflows/{originDestinationWorkflowId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Origin Destination Workflow" ],
        "summary" : "Activities for the given origin destination workflow",
        "description" : "Returns all activities (audit logs) for the given origin destination workflow.",
        "operationId" : "getActivitiesByOriginDestinationWorkflowId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/originDestinationWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/origin_destination_workflows/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/origin_destination_workflows/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/origin_destination_workflows/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/origin_destination_workflows/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/products" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Products for the location",
        "description" : "Retrieve all the products used in the given location.",
        "operationId" : "getProductsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Product"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/products?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/products?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/products?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/products?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/purchasers/{purchaserId}" : {
      "get" : {
        "tags" : [ "Purchaser" ],
        "summary" : "Finds purchaser by ID",
        "operationId" : "getPurchaserById",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/PurchaserSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/purchasers/{purchaserId}/holders" : {
      "get" : {
        "tags" : [ "Holder", "Purchaser" ],
        "summary" : "Holders owned by the purchaser",
        "description" : "A purchaser may have multiple holders, although generally will only have one.",
        "operationId" : "getHoldersByPurchaserId",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Holder"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/holders?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/holders?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/holders?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/holders?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/purchasers/{purchaserId}/internal_requisitions" : {
      "get" : {
        "tags" : [ "Internal Requisition", "Purchaser" ],
        "summary" : "Internal Requisitions for the purchaser",
        "description" : "Retrieve all the internal requisitions where the owner is the given purchaser.",
        "operationId" : "getInternalRequisitionsByPurchaserId",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/InternalRequisition"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/internal_requisitions?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/internal_requisitions?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/internal_requisitions?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/internal_requisitions?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/purchasers/{purchaserId}/receiving_documents" : {
      "get" : {
        "tags" : [ "Receiving Document" ],
        "summary" : "Receiving documents for the purchaser",
        "description" : "Retrieve all the receiving documents for the given purchaser. Any documents that have been cancelled will be excluded.",
        "operationId" : "getReceivingDocumentsByPurchaserId",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ReceivingDocument"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_documents?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_documents?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_documents?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_documents?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Receiving Document" ],
        "summary" : "Create a receiving document",
        "description" : "Creates a `Receiving Document` object that will describe the recieving document information.",
        "operationId" : "postReceivingDocument",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingDocument"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_documents/{receivingDocumentId}" : {
      "get" : {
        "tags" : [ "Receiving Document" ],
        "summary" : "Finds receiving document by ID",
        "operationId" : "getReceivingDocumentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Receiving Document" ],
        "summary" : "Update a receiving document",
        "description" : "Updates a receiving document object.",
        "operationId" : "patchReceivingDocumentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingDocument"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Receiving Document" ],
        "summary" : "Delete a receiving document",
        "description" : "Deletes a receiving document object. Any lines on the document will be deleted also.",
        "operationId" : "deleteReceivingDocumentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_documents/{receivingDocumentId}/receiving_document_line_items" : {
      "get" : {
        "tags" : [ "Receiving Document Line Item" ],
        "summary" : "Lines for the receiving document",
        "description" : "Retrieve all the lines for the given receiving document.",
        "operationId" : "getReceivingDocumentLineItemsByReceivingDocumentId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ReceivingDocumentLineItem"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/100/receiving_document_line_items?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/100/receiving_document_line_items?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/100/receiving_document_line_items?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/100/receiving_document_line_items?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Receiving Document Line Item" ],
        "summary" : "Create a receiving document line item",
        "description" : "Creates a `Receiving Document Line Item` object that will describe the information about what was received.",
        "operationId" : "postReceivingDocumentLineItem",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingDocumentLineItem"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentLineItemSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_document_line_items/{receivingDocumentLineItemId}" : {
      "get" : {
        "tags" : [ "Receiving Document Line Item" ],
        "summary" : "Finds receiving document line item by ID",
        "operationId" : "getReceivingDocumentLineItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentLineItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentLineItemSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Receiving Document Line Item" ],
        "summary" : "Update a receiving document line item",
        "description" : "Updates a receiving document line item object.",
        "operationId" : "patchReceivingDocumentLineItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentLineItemId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingDocumentLineItem"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingDocumentLineItemSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Receiving Document Line Item" ],
        "summary" : "Delete a receiving document line item",
        "description" : "Deletes a receiving document line item object.",
        "operationId" : "deleteReceivingDocumentLineItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingDocumentLineItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/receiving_transfers" : {
      "get" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Receiving transfers for the location",
        "description" : "Retrieve all the receiving transfers where the given location is the transfer origin.",
        "operationId" : "getReceivingTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ReceivingTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/receiving_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Create a receiving transfer",
        "description" : "Creates a `Receiving Transfer` object that will describe the transfer information. The possible destination location types will depend on the origin location for the transfer.\nOrigin | Possible Locations\n-------|-------------------\nStock Location | Variance Location, Opening Location\nExpense Location | Variance Location\nOpening Location | Stock Location\nSupply Location | Stock Location, Expense Location\n",
        "operationId" : "postReceivingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}" : {
      "get" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Finds receiving transfer by ID",
        "operationId" : "getReceivingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Update a receiving transfer",
        "description" : "Updates a receiving transfer object.",
        "operationId" : "patchReceivingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/receivingTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Delete a receiving transfer",
        "description" : "Deletes a receiving transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteReceivingTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Receiving Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given receiving transfer.",
        "operationId" : "getActivitiesByReceivingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Receiving Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given receiving transfer.",
        "operationId" : "getCommentsByReceivingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Receiving Transfer" ],
        "summary" : "Create a comment for a receiving transfer",
        "description" : "Creates a `Comment` object for the receiving transfer.",
        "operationId" : "postCommentByReceivingTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Cancel a receiving transfer",
        "description" : "Cancel a receiving transfer. Must not be in the complete state.",
        "operationId" : "cancelReceivingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}/complete" : {
      "post" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Complete a receiving transfer",
        "description" : "Completes a receiving transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeReceivingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/receiving_transfers/{receivingTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Receiving Transfer" ],
        "summary" : "Re-open a cancelled receiving transfer",
        "description" : "Re-opens a receiving transfer. Must be in the cancelled state.",
        "operationId" : "reopenReceivingTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/receivingTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ReceivingTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/sale_expense_locations" : {
      "post" : {
        "tags" : [ "Sale Expense Location" ],
        "summary" : "Create a sale expense location",
        "description" : "Creates a `Sale Expense Location` object that will describe the location information.",
        "operationId" : "postSaleExpenseLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/saleExpenseLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleExpenseLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_expense_locations/{saleExpenseLocationId}" : {
      "get" : {
        "tags" : [ "Sale Expense Location" ],
        "summary" : "Finds sale expense location by ID",
        "operationId" : "getSaleExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleExpenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleExpenseLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Sale Expense Location" ],
        "summary" : "Update a sale expense location",
        "description" : "Updates a sale expense location object.",
        "operationId" : "patchSaleExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleExpenseLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/saleExpenseLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleExpenseLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Sale Expense Location" ],
        "summary" : "Delete a sale expense location",
        "description" : "Deletes a sale expense location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteSaleExpenseLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleExpenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_expense_locations/{saleExpenseLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Sale Expense Location" ],
        "summary" : "Activities for the given location",
        "description" : "Returns all activities (audit logs) for the given sale expense location.",
        "operationId" : "getActivitiesBySaleExpenseLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleExpenseLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/sale_transfers" : {
      "get" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Sale transfers for the location",
        "description" : "Retrieve all the sale transfers where the given location is the transfer origin.",
        "operationId" : "getSaleTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/SaleTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/sale_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/sale_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/sale_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/sale_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Create a sale transfer",
        "description" : "Creates a `Sale Transfer` object that will describe the transfer information. The possible destination location types will depend on the origin location for the transfer.\nOrigin | Possible Locations\n-------|-------------------\nStock Location | Variance Location, Opening Location\nExpense Location | Variance Location\nOpening Location | Stock Location\nSupply Location | Stock Location, Expense Location\n",
        "operationId" : "postSaleTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/saleTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}" : {
      "get" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Finds sale transfer by ID",
        "operationId" : "getSaleTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Update a sale transfer",
        "description" : "Updates a sale transfer object.",
        "operationId" : "patchSaleTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/saleTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Delete a sale transfer",
        "description" : "Deletes a sale transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteSaleTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Sale Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given sale transfer.",
        "operationId" : "getActivitiesBySaleTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Sale Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given sale transfer.",
        "operationId" : "getCommentsBySaleTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Sale Transfer" ],
        "summary" : "Create a comment for a sale transfer",
        "description" : "Creates a `Comment` object for the sale transfer.",
        "operationId" : "postCommentBySaleTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Cancel a sale transfer",
        "description" : "Cancel a sale transfer. Must not be in the complete state.",
        "operationId" : "cancelSaleTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}/complete" : {
      "post" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Complete a sale transfer",
        "description" : "Completes a sale transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeSaleTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/sale_transfers/{saleTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Sale Transfer" ],
        "summary" : "Re-open a cancelled sale transfer",
        "description" : "Re-opens a sale transfer. Must be in the cancelled state.",
        "operationId" : "reopenSaleTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/saleTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SaleTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_takes/{stockTakeId}/stock_counts" : {
      "get" : {
        "tags" : [ "Stock Count" ],
        "summary" : "Stock counts for the stock take",
        "description" : "Retrieve all the stock count for the given stock take.",
        "operationId" : "getStockCountsByStockTakeId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockCount"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/stock_counts?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/stock_counts?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/stock_counts?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/stock_counts?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Stock Count" ],
        "summary" : "Create a stock count",
        "description" : "Creates a `Stock Count` object that will describe the stock count information.",
        "operationId" : "postStockCount",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockCount"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockCountSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_counts/{stockCountId}" : {
      "get" : {
        "tags" : [ "Stock Count" ],
        "summary" : "Finds stock count by ID",
        "operationId" : "getStockCountById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockCountId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockCountSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stock Count" ],
        "summary" : "Update a stock count",
        "description" : "Updates a stock count object.",
        "operationId" : "patchStockCountById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockCountId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockCount"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockCountSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Stock Count" ],
        "summary" : "Delete a stock count",
        "description" : "Deletes a stock count object.",
        "operationId" : "deleteStockCountById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockCountId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_counts/{stockCountId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Stock Count" ],
        "summary" : "Activities for the given stock count",
        "description" : "Returns all activities (audit logs) for the given stock count.",
        "operationId" : "getActivitiesByStockCountId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockCountId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/stock_levels" : {
      "get" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Stock levels for the location",
        "description" : "Retrieve all the stock levels for the location.",
        "operationId" : "getStockLevelsByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockLevel"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_levels?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_levels?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_levels?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_levels?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Create a stock level",
        "description" : "Creates a `Stock Level` object.",
        "operationId" : "postStockLevel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockLevel"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLevelSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}" : {
      "get" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Finds stock level by ID",
        "operationId" : "getStockLevelById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLevelSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Update a stock level",
        "description" : "Updates a stock level object.",
        "operationId" : "patchStockLevelById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockLevel"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLevelSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Delete a stock level",
        "description" : "Deletes a stock level object. This is a soft deletion only so references to this stock level on previous data will not be broken.",
        "operationId" : "deleteStockLevelById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Stock Level" ],
        "summary" : "Activities for the given stock level",
        "description" : "Returns all activities (audit logs) for the given stock level.",
        "operationId" : "getActivitiesByStockLevelId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}/derived_period_balances" : {
      "get" : {
        "tags" : [ "Derived Period Balance", "Stock Level" ],
        "summary" : "Derived period balances for the stock level",
        "description" : "Retrieve all the derived period balances for the given stock level.",
        "operationId" : "getDerivedPeriodBalanceByStockLevelId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DerivedPeriodBalance"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/derived_period_balances?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/derived_period_balances?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/derived_period_balances?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/derived_period_balances?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}/split_packages" : {
      "post" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Split the product package on a stock level",
        "description" : "This can only be done if the `count_units` attribute on the stock level is true. After splitting the stock level the `balance_quantity`, `unit_value`, `par_level` and `reorder_level` will be recalculated.",
        "operationId" : "splitStockLevel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLevelSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}/stock_level_balances" : {
      "get" : {
        "tags" : [ "Stock Level", "Stock Level Balance" ],
        "summary" : "Balances for the stock level",
        "description" : "Retrieve all the stock level balances for the stock level.",
        "operationId" : "getStockLevelBalancesByStockLevelId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockLevelBalance"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/stock_level_balances?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/stock_level_balances?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/stock_level_balances?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_levels?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/stock_levels/delete_empty" : {
      "post" : {
        "tags" : [ "Stock Level" ],
        "summary" : "Soft deletes any stock levels with zero balances",
        "description" : "Any stock levels where the `balance_value` and `balance_quantity` is zero will be soft deleted.",
        "operationId" : "deleteEmptyStockLevels",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/stock_locations" : {
      "get" : {
        "tags" : [ "Stock Location", "Holder" ],
        "summary" : "Stock locations for the holder",
        "description" : "Retrieve all the stock locations for the given holder.",
        "operationId" : "getStockLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/stock_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/stock_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/stock_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/stock_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Stock Location" ],
        "summary" : "Create a stock location",
        "description" : "Creates a `Stock Location` object that will describe the location information.",
        "operationId" : "postStockLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_locations/{stockLocationId}" : {
      "get" : {
        "tags" : [ "Stock Location" ],
        "summary" : "Finds stock location by ID",
        "operationId" : "getStockLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stock Location" ],
        "summary" : "Update a stock location",
        "description" : "Updates a stock location object.",
        "operationId" : "patchStockLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Stock Location" ],
        "summary" : "Delete a stock location",
        "description" : "Deletes a stock location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteStockLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_locations/{stockLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Stock Location" ],
        "summary" : "Activities for the given stock location",
        "description" : "Returns all activities (audit logs) for the given stock location.",
        "operationId" : "getActivitiesByStockLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_locations/{stockLocationId}/stock_takes" : {
      "get" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Stock takes for the location",
        "description" : "Retrieve all the stock takes for the given location.",
        "operationId" : "getStockTakesByStockLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockTake"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/stock_takes?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/stock_takes?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/stock_takes?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/100/stock_takes?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Create a stock take",
        "description" : "Creates a `Stock Take` object that will describe the stock take information. Stock Counts will be automatically built using the data from the Stock Levels in that stock location.",
        "operationId" : "postStockTake",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockTake"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTakeSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_takes/close" : {
      "post" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Close all stock takes",
        "description" : "Find all stock takes that can be closed and close them. See the \"Close a stock take\" action for what makes a stock take closable.",
        "operationId" : "postStockTakeClose",
        "responses" : {
          "200" : {
            "description" : "The process has been initiated.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "results" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      },
                      "example" : [ "We closed stock takes for all closable locations" ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_takes/{stockTakeId}" : {
      "get" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Finds stock take by ID",
        "operationId" : "getStockTakeById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTakeSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Update a stock take",
        "description" : "Updates a stock take object.",
        "operationId" : "patchStockTakeById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockTake"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTakeSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Delete a stock take",
        "description" : "Deletes a stock take object. All stock counts on the stock take will be deleted too.",
        "operationId" : "deleteStockTakeById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_takes/{stockTakeId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Stock Take" ],
        "summary" : "Activities for the given stock take",
        "description" : "Returns all activities (audit logs) for the given stock take.",
        "operationId" : "getActivitiesByStockTakeId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_takes/{stockTakeId}/close" : {
      "post" : {
        "tags" : [ "Stock Take" ],
        "summary" : "Close a stock take",
        "description" : "Closes a stock take. In order to be closable the stock take must be in the open state (i.e. there is no `closed_at` set), and either a partial stock take or if not partial then there must be no stock counts that have a variance above 0. After closing a task will be scheduled that updates the Derived Period Balances for each stock level.",
        "operationId" : "closeStockTake",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTakeId"
        } ],
        "responses" : {
          "200" : {
            "description" : "The process has been initiated.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "results" : {
                      "type" : "string",
                      "example" : "We closed the Stock Take for 'Beverage Store: November 2019'"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/stock_transfers" : {
      "get" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Stock transfers for the location",
        "description" : "Retrieve all the stock transfers where the given location is the transfer origin.",
        "operationId" : "getStockTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/stock_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Create a stock transfer",
        "description" : "Creates a `Stock Transfer` object that will describe the transfer information.",
        "operationId" : "postStockTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}" : {
      "get" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Finds stock transfer by ID",
        "operationId" : "getStockTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Update a stock transfer",
        "description" : "Updates a stock transfer object.",
        "operationId" : "patchStockTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/stockTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Delete a stock transfer",
        "description" : "Deletes a stock transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteStockTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Stock Transfer" ],
        "summary" : "Activities for the given stock transfer",
        "description" : "Returns all activities (audit logs) for the given stock transfer.",
        "operationId" : "getActivitiesByStockTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Stock Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given stock transfer.",
        "operationId" : "getCommentsByStockTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Stock Transfer" ],
        "summary" : "Create a comment for a stock transfer",
        "description" : "Creates a `Comment` object for the stock transfer.",
        "operationId" : "postCommentByStockTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Cancel a stock transfer",
        "description" : "Cancel a stock transfer. Must not be in the complete state.",
        "operationId" : "cancelStockTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}/complete" : {
      "post" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Complete a stock transfer",
        "description" : "Completes a stock transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeStockTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_transfers/{stockTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Stock Transfer" ],
        "summary" : "Re-open a cancelled stock transfer",
        "description" : "Re-opens a stock transfer. Must be in the cancelled state.",
        "operationId" : "reopenStockTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StockTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/supply_locations" : {
      "get" : {
        "tags" : [ "Supply Location", "Holder" ],
        "summary" : "Supply locations for the holder",
        "description" : "Retrieve all the supply locations for the given holder.",
        "operationId" : "getSupplyLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/SupplyLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/supply_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/supply_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/supply_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/supply_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/supply_locations/{supplyLocationId}" : {
      "get" : {
        "tags" : [ "Supply Location" ],
        "summary" : "Finds supply location by ID",
        "operationId" : "getSupplyLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/supplyLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/SupplyLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfers" : {
      "get" : {
        "tags" : [ "Transfer" ],
        "summary" : "Transfers owned by the current organisation unit",
        "description" : "Retrieve all the transfers of every type owned by the current organisation unit.",
        "operationId" : "getTransfers",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Transfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfers/{transferId}" : {
      "get" : {
        "tags" : [ "Transfer" ],
        "summary" : "Finds transfer by ID",
        "operationId" : "getTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfers/{transferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Transfer" ],
        "summary" : "Activities for the given transfer",
        "description" : "Returns all activities (audit logs) for the given transfer.",
        "operationId" : "getActivitiesByTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfers/{transferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given transfer.",
        "operationId" : "getCommentsByTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Transfer" ],
        "summary" : "Create a comment for a transfer",
        "description" : "Creates a `Comment` object for the transfer.",
        "operationId" : "postCommentByTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfers/{transferId}/transfer_items" : {
      "get" : {
        "tags" : [ "Transfer Item" ],
        "summary" : "Transfer items for the transfer",
        "description" : "Retrieve all the transfer items on the transfer.",
        "operationId" : "getTransferItemsByTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TransferItem"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/transfer_items?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/transfer_items?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/transfer_items?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfers/100/transfer_items?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Transfer Item" ],
        "summary" : "Create a transfer item",
        "description" : "Creates a `Transfer Item` object that will describe the details of the product being transferred.",
        "operationId" : "postTransferItem",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/transferItem"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferItemSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_items/{transferItemId}" : {
      "get" : {
        "tags" : [ "Transfer Item" ],
        "summary" : "Finds transfer item by ID",
        "operationId" : "getTransferItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferItemSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Transfer Item" ],
        "summary" : "Update a transfer item",
        "description" : "Updates a transfer item object.",
        "operationId" : "patchTransferItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/transferItem"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferItemSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Transfer Item" ],
        "summary" : "Delete a transfer item",
        "description" : "Deletes a transfer item object.",
        "operationId" : "deleteTransferItemById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_items/{transferItemId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Transfer Item" ],
        "summary" : "Activities for the given transfer item",
        "description" : "Returns all activities (audit logs) for the given transfer item.",
        "operationId" : "getActivitiesByTransferItemId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_items/{transferItemId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Transfer Item" ],
        "summary" : "Comments for the transfer item",
        "description" : "Returns all comments for the given transfer item.",
        "operationId" : "getCommentsByTransferItemId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Transfer Item" ],
        "summary" : "Create a comment for a transfer item",
        "description" : "Creates a `Comment` object for the transfer item.",
        "operationId" : "postCommentByTransferItemId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_items/{transferItemId}/stock_level_balances" : {
      "get" : {
        "tags" : [ "Transfer Item", "Stock Level Balance" ],
        "summary" : "Stock level balances for the transfer item",
        "description" : "Retrieve all the stock level balances associated with the transfer item.",
        "operationId" : "getStockLevelBalancesByTransferItemId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferItemId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/StockLevelBalance"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/stock_level_balances?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/stock_level_balances?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/stock_level_balances?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/100/stock_levels?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/purchasers/{purchaserId}/transfer_approval_workflows" : {
      "get" : {
        "tags" : [ "Transfer Approval Workflow" ],
        "summary" : "Transfer approval workflows for the purchaser",
        "description" : "Retrieve all the transfer approval workflows owned by the purchaser.",
        "operationId" : "getTransferApprovalWorkflowsByPurchaserId",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TransferApprovalWorkflow"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/transfer_approval_workflows?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/transfer_approval_workflows?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/transfer_approval_workflows?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/purchasers/100/transfer_approval_workflows?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Transfer Approval Workflow" ],
        "summary" : "Create a transfer approval workflow",
        "description" : "Creates a workflow. Additional calls are required to create the ranks and memberships.",
        "operationId" : "postTransferApprovalWorkflow",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/parameters/purchaserId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/transferApprovalWorkflow"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferApprovalWorkflowSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_approval_workflows/{transferApprovalWorkflowId}" : {
      "get" : {
        "tags" : [ "Transfer Approval Workflow" ],
        "summary" : "Finds transfer approval workflow by ID",
        "operationId" : "getTransferApprovalWorkflowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferApprovalWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferApprovalWorkflowSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Transfer Approval Workflow" ],
        "summary" : "Update a transfer approval workflow",
        "description" : "Updates a transfer approval workflow object.",
        "operationId" : "patchTransferApprovalWorkflowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferApprovalWorkflowId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/transferApprovalWorkflow"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TransferApprovalWorkflowSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Transfer Approval Workflow" ],
        "summary" : "Delete a transfer approval workflow",
        "description" : "Deletes a transfer approval workflow object. All the ranks and memberships on the workflow will be deleted too.",
        "operationId" : "deleteTransferApprovalWorkdlowById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferApprovalWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/transfer_approval_workflows/{transferApprovalWorkflowId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Transfer Approval Workflow" ],
        "summary" : "Activities for the given transfer approval workflow",
        "description" : "Returns all activities (audit logs) for the given transfer approval workflow.",
        "operationId" : "getActivitiesByTransferApprovalWorkflowId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/transferApprovalWorkflowId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/stock_levels/{stockLevelId}/value_adjustments" : {
      "get" : {
        "tags" : [ "Value Adjustment" ],
        "summary" : "Value adjustments for the stock level",
        "description" : "Retrieve all the value adjustments on the stock level.",
        "operationId" : "getValueAdjustmentsByStockLevelId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ValueAdjustment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/value_adjustments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/value_adjustments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/value_adjustments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/100/value_adjustments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Value Adjustment" ],
        "summary" : "Create a value adjustment",
        "description" : "Creates a `Value Adjustment` object containing information on the adjustment required.",
        "operationId" : "postValueAdjustment",
        "parameters" : [ {
          "$ref" : "#/components/parameters/stockLevelId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/valueAdjustment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ValueAdjustmentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/value_adjustments/{valueAdjustmentId}" : {
      "get" : {
        "tags" : [ "Value Adjustment" ],
        "summary" : "Finds value adjustment by ID",
        "operationId" : "getValueAdjustmentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/valueAdjustmentId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ValueAdjustmentSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Value Adjustment" ],
        "summary" : "Update a value adjustment",
        "description" : "Updates a value adjustment object.",
        "operationId" : "patchValueAdjustmentById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/valueAdjustmentId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/valueAdjustment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ValueAdjustmentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/value_adjustments/{valueAdjustmentId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Value Adjustment" ],
        "summary" : "Activities for the given value adjustment",
        "description" : "Returns all activities (audit logs) for the given value adjustment.",
        "operationId" : "getActivitiesByValueAdjustmentId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/valueAdjustmentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/value_adjustments/{valueAdjustmentId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Value Adjustment" ],
        "summary" : "Comments for the value adjustment",
        "description" : "Returns all comments for the given value adjustment.",
        "operationId" : "getCommentsByValueAdjustmentId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/valueAdjustmentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Value Adjustment" ],
        "summary" : "Create a comment for a value adjustment",
        "description" : "Creates a `Comment` object for the value adjustment.",
        "operationId" : "postCommentByValueAdjustmentId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/valueAdjustmentId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/holders/{holderId}/variance_locations" : {
      "get" : {
        "tags" : [ "Variance Location", "Holder" ],
        "summary" : "Variance locations for the holder",
        "description" : "Retrieve all the variance locations for the given holder.",
        "operationId" : "getVarianceLocationsByHolderId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/VarianceLocation"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/variance_locations?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/variance_locations?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/variance_locations?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/holders/100/variance_locations?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Variance Location" ],
        "summary" : "Create a variance location",
        "description" : "Creates a `Variance Location` object that will describe the location information.",
        "operationId" : "postVarianceLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/holderId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/varianceLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_locations/{varianceLocationId}" : {
      "get" : {
        "tags" : [ "Variance Location" ],
        "summary" : "Finds variance location by ID",
        "operationId" : "getVarianceLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceLocationSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Variance Location" ],
        "summary" : "Update a variance location",
        "description" : "Updates a variance location object.",
        "operationId" : "patchVarianceLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceLocationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/varianceLocation"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceLocationSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Variance Location" ],
        "summary" : "Delete a variance location",
        "description" : "Deletes a variance location object. If there are any stock levels that have not been zeroed out an error will be returned.",
        "operationId" : "deleteVarianceLocationById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceLocationId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "description" : "There was an error attempting to perform the action. Check the errors array for details of why.",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "object",
                      "properties" : {
                        "stock_levels" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "example" : "with quantity still exist in this location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_locations/{varianceLocationId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Variance Location" ],
        "summary" : "Activities for the given variance location",
        "description" : "Returns all activities (audit logs) for the given variance location.",
        "operationId" : "getActivitiesByVarianceLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceLocationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/locations/{locationId}/variance_transfers" : {
      "get" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Variance transfers for the location",
        "description" : "Retrieve all the variance transfers where the given location is the transfer origin.",
        "operationId" : "getVarianceTransfersByLocationId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/VarianceTransfer"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/variance_transfers?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/variance_transfers?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/variance_transfers?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/locations/100/variance_transfers?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Create a variance transfer",
        "description" : "Creates a `Variance Transfer` object that will describe the transfer information. The possible destination location types will depend on the origin location for the transfer.\nOrigin | Possible Locations\n-------|-------------------\nStock Location | Variance Location, Opening Location\nExpense Location | Variance Location\nOpening Location | Stock Location\nSupply Location | Stock Location, Expense Location\n",
        "operationId" : "postVarianceTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/locationId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/varianceTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}" : {
      "get" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Finds variance transfer by ID",
        "operationId" : "getVarianceTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "patch" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Update a variance transfer",
        "description" : "Updates a variance transfer object.",
        "operationId" : "patchVarianceTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/varianceTransfer"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Delete a variance transfer",
        "description" : "Deletes a variance transfer object. If the transfer has already been completed it cannot be deleted. All items on the transfer will be deleted too.",
        "operationId" : "deleteVarianceTransferById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/DeleteSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "409" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ConflictError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}/activities" : {
      "get" : {
        "tags" : [ "Activity", "Variance Transfer" ],
        "summary" : "Activities for the given variance transfer",
        "description" : "Returns all activities (audit logs) for the given variance transfer.",
        "operationId" : "getActivitiesByVarianceTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Activity"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/activities?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/activities?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/activities?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/activities?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}/comments" : {
      "get" : {
        "tags" : [ "Comment", "Variance Transfer" ],
        "summary" : "Comments for the transfer",
        "description" : "Returns all comments for the given variance transfer.",
        "operationId" : "getCommentsByVarianceTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/vnd.mbapi.v2+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Comment"
                      }
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the first page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/comments?page=1&per_page=25"
                        },
                        "last" : {
                          "type" : "string",
                          "readOnly" : true,
                          "description" : "Endpoint for the last page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/comments?page=10&per_page=25"
                        },
                        "prev" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the previous page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/comments?page=1&per_page=25"
                        },
                        "next" : {
                          "type" : "string",
                          "readOnly" : true,
                          "nullable" : true,
                          "description" : "Endpoint for the next page of data",
                          "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/100/comments?page=10&per_page=25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "404" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ "Comment", "Stock Transfer" ],
        "summary" : "Create a comment for a variance transfer",
        "description" : "Creates a `Comment` object for the variance transfer.",
        "operationId" : "postCommentByVarianceTransferId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/comment"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CommentSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}/cancel" : {
      "post" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Cancel a variance transfer",
        "description" : "Cancel a variance transfer. Must not be in the complete state.",
        "operationId" : "cancelVarianceTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}/complete" : {
      "post" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Complete a variance transfer",
        "description" : "Completes a variance transfer. Must be in the open state. This will move all the items on the transfer from the origin location to the destination location.",
        "operationId" : "completeVarianceTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/api/variance_transfers/{varianceTransferId}/reopen" : {
      "post" : {
        "tags" : [ "Variance Transfer" ],
        "summary" : "Re-open a cancelled variance transfer",
        "description" : "Re-opens a variance transfer. Must be in the cancelled state.",
        "operationId" : "reopenVarianceTransfer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/varianceTransferId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VarianceTransferSuccessResponse"
          },
          "400" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/BadRequestError"
          },
          "401" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/UnauthorisedError"
          },
          "403" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ForbiddenError"
          },
          "406" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/NotAcceptableError"
          },
          "500" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Activity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the activity",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "activities"
          },
          "attributes" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/schemas/Activity"
          }
        }
      },
      "AccountingLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the accounting location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "accounting_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the accounting location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this accounting location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this accounting location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/accounting_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AccountingTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the accounting transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "accounting_transfers"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Transfer"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the accounting transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this accounting transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this accounting transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/accounting_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AdjustingTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the adjusting transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "adjusting_transfers"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Transfer"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the adjusting transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this adjusting transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this adjusting transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/adjusting_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Department" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the department",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "departments"
          },
          "attributes" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/schemas/Organisation"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the department itself",
                "example" : "https://api.purchaseplus.com/inventory/api/departments/1000"
              }
            }
          }
        }
      },
      "DerivedPeriodBalance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the derived period balance",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "derived_period_balances"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the derived period balance.",
                "example" : 1000
              },
              "balance_quantity" : {
                "type" : "number",
                "description" : "The quantity of the stock level as at the final stock take for the `period`.",
                "example" : 10
              },
              "balance_value" : {
                "type" : "number",
                "description" : "The value of the stock level as at the final stake for the `period`.",
                "example" : 79.167
              },
              "is_deleted" : {
                "type" : "boolean",
                "default" : false,
                "description" : "Has this derived period balance been soft deleted.",
                "example" : true
              },
              "location_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the location this derived period balance belongs to.",
                "example" : 1000
              },
              "period" : {
                "type" : "string",
                "format" : "date",
                "description" : "The period covered by this balance.",
                "example" : "2017-08-31"
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product from the stock level.",
                "example" : 1000
              },
              "stock_level_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the stock level the balance is for.",
                "example" : 1000
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the derived period balance itself",
                "example" : "https://api.purchaseplus.com/inventory/api/derived_period_balances/1000"
              }
            }
          }
        }
      },
      "ExpenseLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the expense location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "expense_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the expense location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this expense location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this expense location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/expense_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Comment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the comment",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "comments"
          },
          "attributes" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/schemas/Comment"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the comment itself",
                "example" : "https://api.purchaseplus.com/inventory/api/comments/1000"
              }
            }
          }
        }
      },
      "Holder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the holder",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "holders"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "organisation_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the holder.",
                "example" : 1000
              },
              "always_split_packages" : {
                "type" : "boolean",
                "nullable" : true,
                "description" : "Determines whether to split incoming packages into package units, e.g., pack of six → each of one",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the holder was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "organisation_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the purchaser this holder belongs to.",
                "example" : 100
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the holder was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "accounting_locations" : {
                "type" : "object",
                "description" : "Endpoint for the accounting locations within this holder entity",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/holders/1000/accounting_locations"
                      }
                    }
                  }
                }
              },
              "expense_locations" : {
                "type" : "object",
                "description" : "Endpoint for the expense locations within this holder entity",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/holders/1000/expense_locations"
                      }
                    }
                  }
                }
              },
              "opening_locations" : {
                "type" : "object",
                "description" : "Endpoint for the opening locations within this holder entity",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/holders/1000/opening_locations"
                      }
                    }
                  }
                }
              },
              "stock_locations" : {
                "type" : "object",
                "description" : "Endpoint for the stock locations within this holder entity",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/holders/1000/stock_locations"
                      }
                    }
                  }
                }
              },
              "variance_locations" : {
                "type" : "object",
                "description" : "Endpoint for the variance locations within this holder entity",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/holders/1000/variance_locations"
                      }
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the holder itself",
                "example" : "https://api.purchaseplus.com/inventory/api/holders/1000"
              }
            }
          }
        }
      },
      "InternalRequisition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the internal requisition",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "internal_requisitions"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "origin_id", "origin_type" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the internal requisition.",
                "example" : 1000
              },
              "approval_date" : {
                "type" : "string",
                "format" : "date",
                "readOnly" : true,
                "description" : "The date the internal requisition received final approval by a user.",
                "example" : "2015-05-15"
              },
              "approve_workflow_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the approval workflow assigned to this internal requisition. This controls how many approvals are required and who can approve this internal requisition. This will be set automatically upon creation.",
                "example" : 1000
              },
              "cancelled" : {
                "type" : "boolean",
                "default" : false,
                "readOnly" : true,
                "description" : "Has this internal requisition been cancelled by a user.",
                "example" : true
              },
              "comments_count" : {
                "type" : "integer",
                "readOnly" : true,
                "description" : "How many comments have been added to this internal requisition.",
                "example" : 2
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the internal requisition was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "department_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the department assigned to this internal requisition.",
                "example" : 1000
              },
              "destination_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the destination location where the goods will be transferred to. The destination_id and origin_id must not be the same.",
                "example" : 1000
              },
              "expected_delivery_date" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date the delivery of the goods is expected.",
                "example" : "2017-12-05"
              },
              "organisation_unit_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the owning organisation unit of this internal requisition. If there is a `department_id` it will be set to that, otherwise it will default to the current organisation of the current user.",
                "example" : 1000
              },
              "origin_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the origin location where the goods will be transferred from.The destination_id and origin_id must not be the same.",
                "example" : 1000
              },
              "origin_name" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "The name of the origin location. This will be set automatically.",
                "example" : "Beverage Store"
              },
              "origin_type" : {
                "type" : "string",
                "example" : "Inventory::StockLocation"
              },
              "purchaser_organisation_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the purchaser this internal requisition is for. Will default to the current purchaser of the current user creating the document.",
                "example" : 1000
              },
              "requestor_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who created this internal requisition. Will default to the current user.",
                "example" : 1000
              },
              "requisition_number" : {
                "type" : "string",
                "maxLength" : 255,
                "description" : "A unique number for the internal requsition. Will be automatically generated if not provided.",
                "example" : "IR00068"
              },
              "state" : {
                "type" : "string",
                "maxLength" : 255,
                "default" : "open",
                "readOnly" : true,
                "description" : "The current state of the internal requisition. The valid values are\nstate | description\n------|------------\n`open` | The initial state for the internal requisition. May be submitted for approval or cancelled from here.\n`awaiting_approval` | Requiring one or more approvals from users in the associated workflow. May be cancelled, approved or declined from here.\n`approved` | The internal requisition has received all required approvals. At this point a transfer of the goods from the origin to the destination location is generated. May be closed or cancelled from here.\n`declined` | All existing approvals are removed. May be submitted for approval or cancelled from here.\n`closed` | Indicates the internal requisition is done with. No further state changes are possible.\n`cancelled` | The interal requisition is cancelled. No further state changes are possible.\n",
                "enum" : [ "open", "awaiting_approval", "approved", "declined", "closed", "cancelled" ],
                "example" : "open"
              },
              "total_value" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "Before the internal requisition is saved this value is calculated based on the sum of the line totals.",
                "example" : 234.76
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the internal requisition was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the internal requisition itself",
                "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this internal requisition",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this internal requisition",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/1000/comments"
                      }
                    }
                  }
                }
              },
              "internal_requisition_lines" : {
                "type" : "object",
                "description" : "Endpoint for the lines added to this internal requisition",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/internal_requisitions/1000/internal_requisition_lines"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "InternalRequisitionLine" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the internal requisition line",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "internal_requisition_lines"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "internal_requisition_id", "product_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the internal requisition line.",
                "example" : 1000
              },
              "available_quantity" : {
                "type" : "number",
                "description" : "The quantity available in the origin location. This will be populated automatically whenever an internal requisition is initially created.",
                "example" : 230.0
              },
              "count_units" : {
                "type" : "boolean",
                "description" : "Automatically set from the same attribute of the corresponding Stock Level on the destination location.",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the internal requisition was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "description" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the brand, description and sell unit for the product.",
                "example" : "Evian Mineral Water : Still (Glass Bottle) [French] 330 ml bottle each of 1"
              },
              "internal_requisition_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the internal requisition this line belongs to.",
                "example" : 1000
              },
              "product_brand" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the brand of the product",
                "example" : "Evian"
              },
              "product_description" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the description of the product.",
                "example" : "Mineral Water : Still (Glass Bottle) [French] 330 ml bottle"
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product on this line. Must be unique within the internal requisition.",
                "example" : 1000
              },
              "product_item_measure" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item measure of the product",
                "example" : "ml"
              },
              "product_item_pack_name" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item pack name of the product.",
                "example" : "bottle"
              },
              "product_item_sell_pack_name" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item sell pack name of the product.",
                "example" : "each"
              },
              "product_item_sell_quantity" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "A cached version of the item pack name of the product.",
                "example" : 1.0
              },
              "product_item_size" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "A cached version of the item size of the product.",
                "example" : 330.0
              },
              "quantity" : {
                "type" : "number",
                "minimum" : 0,
                "exclusiveMinimum" : true,
                "description" : "A number representing the quantity required. This cannot be greater than the available quantity. Will automatically default to a value that brings the destination Stock Level to it's par level (if it has one set).",
                "example" : 20.0
              },
              "total" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "Automatically calculated from `quantity` * `unit_price`.",
                "example" : 860.0
              },
              "unit_price" : {
                "type" : "number",
                "description" : "Should be set to the `unit_value` of the corresponding Stock Level from the destination location.",
                "example" : 43.0
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the internal requisition was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the internal requisition line itself",
                "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_lines/1000"
              }
            }
          }
        }
      },
      "InternalRequisitionTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the internal requisition transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "internal_requisition_transfers"
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Transfer"
            }, {
              "type" : "object",
              "properties" : {
                "predecessor_id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "The ID of the internal requisition that produced this transfer.",
                  "example" : 1000
                },
                "predecessor_type" : {
                  "type" : "string",
                  "description" : "The type of internal requisition that produced this transfer.",
                  "example" : "Inventory::InternalRequisition"
                },
                "reference" : {
                  "type" : "string",
                  "maxLength" : 255,
                  "description" : "The document number of the predecessor.",
                  "example" : "IR37834"
                }
              }
            } ]
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the internal requisition transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this internal requisition transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this internal requisition transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/internal_requisition_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Location" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "Unique identifier for the location.",
            "example" : 1000
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Timestamp when the location was created.",
            "example" : "2015-05-18T06:18:49.051Z"
          },
          "custom_sort" : {
            "type" : "boolean",
            "default" : false,
            "description" : "When set to true the P+ user interface will allow users to set the positioning of stock levels within the location.",
            "example" : true
          },
          "holder_id" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "Holder that owns this location",
            "example" : 100
          },
          "is_deleted" : {
            "type" : "boolean",
            "default" : false,
            "readOnly" : true,
            "description" : "Has this location been soft deleted from the system. When soft deleted the details are still available to appear on existing documents and so on, but this location cannot be used for anything new.",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "A name for the location",
            "example" : "Location XYZ"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Timestamp when the location was last updated.",
            "example" : "2015-05-18T06:18:49.051Z"
          }
        }
      },
      "LocationPeriod" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the location period",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "location_periods"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "location_id", "date" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the location period.",
                "example" : 1000
              },
              "closed_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when this period was closed. Occurs when an Accounting Transfer is completed, or when all Expense Locations are cleared.",
                "example" : "2014-11-13T13:53:53.659+11:00"
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the location period was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "date" : {
                "type" : "string",
                "format" : "date",
                "description" : "The end date of the stock take period.",
                "example" : "2014-11-30"
              },
              "location_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the location this period belongs to.",
                "example" : 1000
              },
              "open_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when this period was opened. Should be set to the close_at of the previous period.",
                "example" : "2014-11-13T13:53:53.659+11:00"
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the location period was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the location period itself",
                "example" : "https://api.purchaseplus.com/inventory/api/location_periods/1000"
              }
            }
          }
        }
      },
      "OpeningLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the opening location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "opening_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the opening location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this opening location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this opening location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/opening_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OriginDestinationWorkflow" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the origin destination workflow",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "origin_destination_workflows"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "destination_id", "origin_id", "workflow_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the origin destination workflow.",
                "example" : 1000
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the origin destination workflow was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "destination_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "The destination location that the workflow should apply to.",
                "example" : 1000
              },
              "origin_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "The origin location that the workflow should apply to.",
                "example" : 1000
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the origin destination workflow was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "workflow_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "The Transfer Approval Workflow that should be applied for internal requisition transfers between the origin and destination location.",
                "example" : 1000
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the origin destination workflow itself",
                "example" : "https://api.purchaseplus.com/inventory/api/origin_destination_workflows/1000"
              }
            }
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the product",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "products"
          },
          "attributes" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/schemas/Product"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the product itself",
                "example" : "https://api.purchaseplus.com/inventory/api/products/1000"
              }
            }
          }
        }
      },
      "Purchaser" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the purchaser",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "purchasers"
          },
          "attributes" : {
            "$ref" : "https://api.swaggerhub.com/domains/marketboomer/PurchasePlusAPI/2.0#/components/schemas/Purchaser"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the organisation itself",
                "example" : "https://api.purchaseplus.com/inventory/api/purchasers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "holders" : {
                "type" : "object",
                "description" : "Endpoint for the holders owned by this purchaser",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/purchasers/1000/holders"
                      }
                    }
                  }
                }
              },
              "internal_requisitions" : {
                "type" : "object",
                "description" : "Endpoint for the internal requisitions owned by this purchaser",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/purchasers/1000/internal_requisitions"
                      }
                    }
                  }
                }
              },
              "transfer_approval_workflows" : {
                "type" : "object",
                "description" : "Endpoint for the transfer approval workflows owned by this purchaser",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/purchasers/1000/transfer_approval_workflows"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReceivingDocument" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the receiving document",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "receiving_documents"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "purchase_order_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the receiving document.",
                "example" : 1000
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the receiving document was created.",
                "example" : "2019-11-08T17:49:55.139+11:00"
              },
              "destination_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the destination location when receiving into inventory.",
                "example" : 1000
              },
              "organisation_unit_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the organisation unit that owns this document.",
                "example" : 1000
              },
              "physical_date" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date the stock was physically received. May be different to both the received date and when this document was created.",
                "example" : "2019-11-08"
              },
              "purchase_order_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the purchase order associated with this receiving document.",
                "example" : 1000
              },
              "received_date" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "The date that the receiving document was created. This date gets used",
                "example" : "2019-11-08"
              },
              "receiver_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the user who created this receiving document.",
                "example" : 1000
              },
              "receiving_document_number" : {
                "type" : "string",
                "maxLength" : 255,
                "description" : "A unique number for the receiving document. Will be automatically generated if not provided.",
                "example" : "GR183372"
              },
              "stocked_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp of when the receiving transfer was completed for this receiving document.",
                "example" : "2019-11-08T17:50:32.395+11:00"
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the receiving document was last updated.",
                "example" : "2019-11-08T17:50:32.399+11:00"
              },
              "workflow_state" : {
                "type" : "string",
                "maxLength" : 255,
                "default" : "open",
                "readOnly" : true,
                "description" : "The current state of the receiving document. The valid values are\nstate | description\n------|------------\n`open` | The initial state for the receiving document. May be received or cancelled from here.\n`received` | Indicates the receiving document is finished. May be cancelled.\n`cancelled` | The receiving document is cancelled. No further state changes are possible.\n",
                "enum" : [ "open", "received", "cancelled" ]
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the receiving document itself",
                "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the lines of this receiving document",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/1000/receiving_document_lines"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReceivingDocumentLineItem" : {
        "type" : "object",
        "required" : [ "quantity" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the receiving document line item",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "receiving_document_line_items"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the receiving document line item.",
                "example" : 1000
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the receiving document line item was created.",
                "example" : "2019-11-08T17:49:55.139+11:00"
              },
              "description" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the brand, description and sell unit for the product.",
                "example" : "Evian Mineral Water : Still (Glass Bottle) [French] 330 ml bottle each of 1"
              },
              "extended_price" : {
                "type" : "number",
                "description" : "The unit price plus tax amount for the product.",
                "example" : 23.67
              },
              "product_brand" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the brand of the product",
                "example" : "Evian"
              },
              "product_description" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "A cached version of the description of the product.",
                "example" : "Mineral Water : Still (Glass Bottle) [French] 330 ml bottle"
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product on this line. Must be unique within the receiving document.",
                "example" : 1000
              },
              "product_item_measure" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item measure of the product",
                "example" : "ml"
              },
              "product_item_pack_name" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item pack name of the product.",
                "example" : "bottle"
              },
              "product_item_sell_pack_name" : {
                "type" : "string",
                "readOnly" : true,
                "maxLength" : 255,
                "description" : "A cached version of the item sell pack name of the product.",
                "example" : "each"
              },
              "product_item_sell_quantity" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "A cached version of the item pack name of the product.",
                "example" : 1.0
              },
              "product_item_size" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "A cached version of the item size of the product.",
                "example" : 330.0
              },
              "purchase_order_line_item_created_at" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Timestamp when the associated purchase order line item was created.",
                "example" : "2020-01-17T23:50:31.409+11:00"
              },
              "purchase_order_line_item_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the purchase order line item that was used when generating the receiving document line.",
                "example" : 1000
              },
              "quantity" : {
                "type" : "number",
                "minimum" : 0,
                "exclusiveMinimum" : true,
                "description" : "A number representing the quantity of the product received.",
                "example" : 20.0
              },
              "receiving_document_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the receiving document this line belongs to.",
                "example" : 1000
              },
              "unit_value" : {
                "type" : "number",
                "description" : "The price for a single unit of the product excluding tax.",
                "example" : 23.67
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the receiving document line item was last updated.",
                "example" : "2019-11-08T17:50:32.399+11:00"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the receiving document itself",
                "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the lines of this receiving document",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/receiving_documents/1000/receiving_document_lines"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReceivingTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the receiving transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "receiving_transfers"
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Transfer"
            }, {
              "type" : "object",
              "properties" : {
                "predecessor_id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "The ID of the receiving note that produced this transfer.",
                  "example" : 1000
                },
                "predecessor_type" : {
                  "type" : "string",
                  "description" : "The type of receiving note that produced this transfer.",
                  "example" : "Trade::ReceivingDocument"
                },
                "reference" : {
                  "type" : "string",
                  "maxLength" : 255,
                  "description" : "The document number of the predecessor.",
                  "example" : "GR01754"
                }
              }
            } ]
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the receiving transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this receiving transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this receiving transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/receiving_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SaleExpenseLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the sale expense location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "sale_expense_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the sale expense location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this sale expense location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this sale expense location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/sale_expense_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SaleTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the sale transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "sale_transfers"
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Transfer"
            }, {
              "type" : "object",
              "properties" : {
                "predecessor_id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "The ID of the Point of Sale Sale that produced this transfer.",
                  "example" : 1000
                },
                "predecessor_type" : {
                  "type" : "string",
                  "description" : "The type of Point of Sale Sale that produced this transfer.",
                  "example" : "PointOfSale::Sale"
                }
              }
            } ]
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the sale transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this sale transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this sale transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/sale_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockCount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock count",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_counts"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "product_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the stock count.",
                "example" : 1000
              },
              "count_units" : {
                "type" : "boolean",
                "description" : "If the holder of the stock location has set `always_split_packages` to true then this will default to true. See the description of this attribute on `StockLevel` for more detail on what it means when set to true.",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock count was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "creator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who created this stock count.",
                "example" : 1000
              },
              "expected_quantity" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "The expected quantity that should be found in the stock location. Will be set to the balance quantity of the associated stock level.",
                "example" : 42.0
              },
              "opening_quantity" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "Will be set to the balance quantity of the associated stock level at the point the stock count is created.",
                "example" : 42.0
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product of the associated stock level.",
                "example" : 1000
              },
              "quantity" : {
                "type" : "number",
                "description" : "The actual quantity found during the stock take.",
                "example" : 41.0
              },
              "stock_level_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the stock level that is being counted.",
                "example" : 1000
              },
              "stock_take_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the stock take that this stock count is for.",
                "example" : 1000
              },
              "unit_value" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "Will be set to the `unit_value` of the associated Stock Level when the Stock Take is closed.",
                "example" : 1.95
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock count was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "updator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who last updated this stock count.",
                "example" : 1000
              },
              "variance" : {
                "type" : "number",
                "description" : "Is the difference between the quantity and the expected quantity. Is set when the stock take is closed.",
                "example" : 1.0
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock count itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock count",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_counts/1000/activities"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockLevel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock level",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_levels"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "product_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the stock level.",
                "example" : 1000
              },
              "balance_quantity" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "The stock level quantity. This is updated as stock is moved in and out of a location.",
                "example" : 6.0
              },
              "balance_value" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "The stock level quantity multiplied by the unit value. This is updated as stock is moved in and out of a location.",
                "example" : 20.0178
              },
              "count_units" : {
                "type" : "boolean",
                "readOnly" : true,
                "description" : "If this is set to true then all calculations will use the `item_sell_quantity` as a multiplier. So a carton of 12 is considered as 12 units rather than 1.",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock level was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "is_deleted" : {
                "type" : "boolean",
                "default" : false,
                "readOnly" : true,
                "description" : "Has this stock level been soft deleted from the system. It will not appear in any data that relies on stock level information.",
                "example" : true
              },
              "location_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the location this stock level belongs to.",
                "example" : 1000
              },
              "par_level" : {
                "type" : "number",
                "default" : 0.0,
                "description" : "Represents the minimum stock quantity that should be on hand. The par level must be equal to or less than the reorder level.",
                "example" : 10.0
              },
              "position" : {
                "type" : "integer",
                "description" : "If the location this stock level belongs to has `custom_sort` enabled then the stock levels will be ordered by this position attribute.",
                "example" : 105
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product this stock level is for. A product may appear only once for each location.",
                "example" : 1000
              },
              "reorder_level" : {
                "type" : "number",
                "default" : 0.0,
                "description" : "Represents the quantity at which point a re-order should trigger. Currently informational only. The reorder level must be greater than or equal to the par level.",
                "example" : 12.0
              },
              "unit_value" : {
                "type" : "number",
                "description" : "If the transfer item has a value for this when moving in then this value is taken and set as the new unit value, otherwise it is set as the balance quantity / balance value.",
                "example" : 3.3363
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock level was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock level itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/activities"
                      }
                    }
                  }
                }
              },
              "derived_period_balances" : {
                "type" : "object",
                "description" : "Endpoint for the derived period balances of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/derived_period_balances"
                      }
                    }
                  }
                }
              },
              "stock_level_balances" : {
                "type" : "object",
                "description" : "Endpoint for the stock level balances of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/stock_level_balances"
                      }
                    }
                  }
                }
              },
              "value_adjustments" : {
                "type" : "object",
                "description" : "Endpoint for the value adjustments of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/value_adjustments"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockLevelBalance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock level balance",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_level_balances"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the stock level balance.",
                "example" : 1000
              },
              "balance_quantity" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "The stock level quantity.",
                "example" : 6.0
              },
              "balance_value" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "The stock level quantity multiplied by the unit value.",
                "example" : 20.0178
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock level balance was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "event_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "The ID of the event that triggered the creation of this stock level balance.",
                "example" : 1000
              },
              "event_type" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "The type of event that triggered the creation of this stock level balance.",
                "example" : "Inventory::Transfer"
              },
              "stock_level_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "The ID of the stock level that this balance is for.",
                "example" : 1000
              },
              "transfer_item_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "The corresponding transfer item on the transfer that triggered the creation of this stock level balance.",
                "example" : 1000
              },
              "unit_value" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "The price of a single unit of the stock.",
                "example" : 3.3363
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock level balance was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock level itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/activities"
                      }
                    }
                  }
                }
              },
              "derived_period_balances" : {
                "type" : "object",
                "description" : "Endpoint for the derived period balances of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/derived_period_balances"
                      }
                    }
                  }
                }
              },
              "stock_level_balances" : {
                "type" : "object",
                "description" : "Endpoint for the stock level balances of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/stock_level_balances"
                      }
                    }
                  }
                }
              },
              "value_adjustments" : {
                "type" : "object",
                "description" : "Endpoint for the value adjustments of this stock level",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_levels/1000/value_adjustments"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this stock location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockTake" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock take",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_takes"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the stock take.",
                "example" : 1000
              },
              "blind" : {
                "type" : "boolean",
                "description" : "When set to true certain screens and reports will not display the current quantity expected to be found within the location being stock taked.",
                "example" : true
              },
              "closed_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "The timestamp of when the user closed this stock take.",
                "example" : "2015-09-09T08:36:19.639+10:00"
              },
              "closing_balance" : {
                "type" : "number",
                "default" : 0.0,
                "readOnly" : true,
                "description" : "Is the sum of the Stock Level Balances for the given stock location at the point this stock take was closed.",
                "example" : 752.4352
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock take was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "creator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who created this stock take.",
                "example" : 1000
              },
              "partial" : {
                "type" : "boolean",
                "description" : "If this is set to true then closing a stock take will not automatically close the associated Location Period for the stock location.",
                "example" : true
              },
              "period_ending_on" : {
                "type" : "string",
                "format" : "date",
                "description" : "The end date for the current period the stock take is occuring in. This will automatically be set to the last day of last month if the current date is less than half way through the current month (i.e. current day is 15 or less). Otherwise it will be set to the last day of the current month.",
                "example" : "2015-08-31"
              },
              "stock_location_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the stock location that this stock take is for.",
                "example" : 1000
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the stock take was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "updator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who last updated this stock take.",
                "example" : 1000
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock take itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock take",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_counts" : {
                "type" : "object",
                "description" : "Endpoint for the stock counts taken on this stock take",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_takes/1000/stock_counts"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the stock transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "stock_transfers"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Transfer"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the stock transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this stock transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this stock transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/stock_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Transfer" : {
        "type" : "object",
        "required" : [ "destination_id", "origin_id" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "Unique identifier for the transfer.",
            "example" : 1000
          },
          "comments_count" : {
            "type" : "integer",
            "readOnly" : true,
            "default" : 0,
            "description" : "The number of comments that have been added to this transfer.",
            "example" : 5
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Timestamp when the transfer was created.",
            "example" : "2015-05-18T06:18:49.051Z"
          },
          "creator_id" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "ID of the user who created this transfer.",
            "example" : 1000
          },
          "destination_id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "ID of the destination location for this transfer. This is where the goods were transferred to.",
            "example" : 1000
          },
          "fault_message" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "If this transfer could not be completed then a message indicating why will be in this attribute.",
            "default" : null,
            "example" : "Has incomplete items"
          },
          "origin_id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "ID of the origin location for this transfer. This is where the goods were transferred from.",
            "example" : 1000
          },
          "period_ending_on" : {
            "type" : "string",
            "format" : "date",
            "description" : "The period this transfer occurs in. Set automatically when the transfer is created.",
            "example" : "2015-06-30"
          },
          "physical_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the stock physically arrived in the location, it may be different from the date the transfer document was created. This is only applicable for physical stock locations.",
            "example" : "2015-06-30"
          },
          "state" : {
            "type" : "string",
            "maxLength" : 255,
            "default" : "open",
            "readOnly" : true,
            "description" : "The current state of the transfer. The valid values are\nstate | description\n------|------------\n`open` | The transfer is in it's initial state, no transfer of goods has occurred yet.\n`complete` | The transfer of goods from the origin to the destination was successfully completed.\n`faulty` | The transfer had an issue, see the `fault_message` for detail.\n`cancelled` | The transfer has been cancelled. This cannot happen once a transfer is completed.\n",
            "enum" : [ "open", "complete", "faulty", "cancelled" ]
          },
          "transfer_number" : {
            "type" : "string",
            "maxLength" : 255,
            "readOnly" : true,
            "description" : "An automatically generated identifer for this transfer.",
            "example" : "TX00163"
          },
          "type" : {
            "type" : "string",
            "maxLength" : 255,
            "readOnly" : true,
            "description" : "Indicates what type of transfer this is.",
            "enum" : [ "Inventory::StockTransfer", "Inventory::AccountingTransfer", "Inventory::RequisitionTransfer", "Inventory::AdjustingTransfer", "Inventory::VarianceTransfer", "Inventory::InternalRequisitionTransfer", "Inventory::SaleTransfer", "Inventory::ReceivingTransfer" ]
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Timestamp when the transfer was last updated.",
            "example" : "2015-05-18T06:18:49.051Z"
          },
          "updator_id" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "ID of the user who last updated this transfer.",
            "example" : 1000
          }
        }
      },
      "TransferApprovalWorkflow" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the transfer approval workflow",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "transfer_approval_workflows"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "owner_id", "resource_type_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the transfer approval workflow.",
                "example" : 1000
              },
              "approval_in_ranked_order" : {
                "type" : "boolean",
                "default" : false,
                "description" : "Indicates whether approval must occur in the ranks they have been specified, starting with the lowest numbered rank first.",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer approval workflow was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "is_deleted" : {
                "type" : "boolean",
                "default" : false,
                "readOnly" : true,
                "description" : "Has this workflow been soft deleted from the system. When soft deleted the details are still available to appear on existing documents and so on, but this workflow cannot be used for anything new.",
                "example" : true
              },
              "owner_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the owning organisation of this workflow.",
                "example" : 1000
              },
              "title" : {
                "type" : "string",
                "maxLength" : 255,
                "description" : "A user entered title for this workflow.",
                "example" : "Beverage"
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer approval workflow was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the transfer approval workflow itself",
                "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this transfer approval workflow",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfer_approval_workflows/1000/activities"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TransferItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the transfer item",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "transfer_items"
          },
          "attributes" : {
            "type" : "object",
            "required" : [ "origin_id", "product_id", "transfer_id" ],
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the transfer item.",
                "example" : 1000
              },
              "comments_count" : {
                "type" : "integer",
                "default" : 0,
                "readOnly" : true,
                "description" : "The number of comments that have been added to this transfer item.",
                "example" : 2
              },
              "count_units" : {
                "type" : "boolean",
                "readOnly" : true,
                "description" : "Automatically set from the same attribute of the corresponding Stock Level.",
                "example" : true
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer item was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "creator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who created this transfer item.",
                "example" : 1000
              },
              "destination_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the destination location.",
                "example" : 1000
              },
              "origin_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the origin location.",
                "example" : 1000
              },
              "predecessor_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the artifact that was used to generate data for this transfer item.",
                "example" : 1000
              },
              "predecessor_type" : {
                "type" : "string",
                "maxLength" : 255,
                "readOnly" : true,
                "description" : "The type of the artifact that was used to generate data for this transfer item.",
                "example" : "Inventory::ReceivingDocumentLineItem"
              },
              "product_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the product being transferred.",
                "example" : 1000
              },
              "quantity" : {
                "type" : "number",
                "description" : "The transferred quantity of the product.",
                "example" : 1
              },
              "transfer_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the transfer this transfer item belongs to.",
                "example" : 1000
              },
              "unit_value" : {
                "type" : "number",
                "description" : "The price of a single unit of the stock.",
                "example" : 3.23
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer item was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "updator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user who updated this transfer item.",
                "example" : 1000
              },
              "value" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "The quantity multiplied by the unit_value.",
                "example" : 3.23
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the transfer item itself",
                "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this transfer item",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments of this transfer item",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/1000/comments"
                      }
                    }
                  }
                }
              },
              "stock_level_balances" : {
                "type" : "object",
                "description" : "Endpoint for the stock level balances of this transfer item",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfer_items/1000/stock_level_balances"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SupplyLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the supply location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "supply_locations"
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Location"
            }, {
              "type" : "object",
              "properties" : {
                "supplier_id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "The ID of the Supplier that is represented by this supply location.",
                  "example" : 1000
                }
              }
            } ]
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the supply location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/supply_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this supply location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/supply_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this supply location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/supply_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ValueAdjustment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the value adjustment",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "value_adjustments"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "Unique identifier for the value adjustment.",
                "example" : 1000
              },
              "adjusted_value" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "Calculated from the (unit_value - old_value) * balance_quantity.",
                "example" : -3583.2712
              },
              "balance_quantity" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "The balance quantity from the associated stock level.",
                "example" : 1192.0
              },
              "comment" : {
                "type" : "string",
                "description" : "An optional comment to add to the value adjustment.",
                "example" : "Typo when entering unit price originally"
              },
              "comments_count" : {
                "type" : "integer",
                "readOnly" : true,
                "description" : "The number of comments added to this value adjustment.",
                "example" : 1
              },
              "created_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer item was created.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "creator_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the user that created this value adjustment.",
                "example" : 1000
              },
              "old_value" : {
                "type" : "number",
                "readOnly" : true,
                "description" : "The previous unit_value from the stock level (prior to this value adjustment being created)",
                "example" : 4.8061
              },
              "stock_level_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ID of the stock level being adjusted.",
                "example" : 1000
              },
              "unit_value" : {
                "type" : "number",
                "description" : "The new unit value to set on the stock level.",
                "example" : 1.8
              },
              "updated_at" : {
                "type" : "string",
                "format" : "date-time",
                "readOnly" : true,
                "description" : "Timestamp when the transfer item was last updated.",
                "example" : "2015-05-18T06:18:49.051Z"
              },
              "updator_id" : {
                "type" : "integer",
                "format" : "int64",
                "readOnly" : true,
                "description" : "ID of the user that last updated this value adjustment.",
                "example" : 1000
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the value adjustment itself",
                "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this value adjustment",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments of this value adjustment",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/value_adjustments/1000/comments"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "VarianceLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the variance location",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "variance_locations"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Location"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the variance location itself",
                "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this variance location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/1000/activities"
                      }
                    }
                  }
                }
              },
              "stock_levels" : {
                "type" : "object",
                "description" : "Endpoint for the stock levels of this variance location",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/variance_locations/1000/stock_levels"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "VarianceTransfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "JSONAPI ID of the variance transfer",
            "example" : "1000"
          },
          "type" : {
            "type" : "string",
            "description" : "JSONAPI Type",
            "example" : "variance_transfers"
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Transfer"
            }, {
              "type" : "object",
              "properties" : {
                "predecessor_id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "The ID of the Stock Take that produced this transfer.",
                  "example" : 1000
                },
                "predecessor_type" : {
                  "type" : "string",
                  "description" : "The type of Stock Take that produced this transfer.",
                  "example" : "Inventory::StockTake"
                }
              }
            } ]
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Endpoint for the variance transfer itself",
                "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/1000"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "object",
                "description" : "Endpoint for the activities of this variance transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/1000/activities"
                      }
                    }
                  }
                }
              },
              "comments" : {
                "type" : "object",
                "description" : "Endpoint for the comments added to this variance transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/variance_transfers/1000/comments"
                      }
                    }
                  }
                }
              },
              "transfer_items" : {
                "type" : "object",
                "description" : "Endpoint for the items added to this transfer",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "readOnly" : true,
                        "example" : "https://api.purchaseplus.com/inventory/api/transfers/1000/transfer_items"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters" : {
      "accountingLocationId" : {
        "name" : "accountingLocationId",
        "in" : "path",
        "description" : "ID of accounting location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "accountingTransferId" : {
        "name" : "accountingTransferId",
        "in" : "path",
        "description" : "ID of accounting transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "adjustingTransferId" : {
        "name" : "adjustingTransferId",
        "in" : "path",
        "description" : "ID of adjusting transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "commentId" : {
        "name" : "commentId",
        "in" : "path",
        "description" : "ID of comment",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "derivedPeriodBalanceId" : {
        "name" : "derivedPeriodBalanceId",
        "in" : "path",
        "description" : "ID of derived period balance",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "expenseLocationId" : {
        "name" : "expenseLocationId",
        "in" : "path",
        "description" : "ID of expense location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "holderId" : {
        "name" : "holderId",
        "in" : "path",
        "description" : "ID of holder",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "internalRequisitionId" : {
        "name" : "internalRequisitionId",
        "in" : "path",
        "description" : "ID of internal requisition",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "internalRequisitionLineId" : {
        "name" : "internalRequisitionLineId",
        "in" : "path",
        "description" : "ID of internal requisition line",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "internalRequisitionTransferId" : {
        "name" : "internalRequisitionTransferId",
        "in" : "path",
        "description" : "ID of internal requisition transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "locationId" : {
        "name" : "locationId",
        "in" : "path",
        "description" : "ID of location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "locationPeriodId" : {
        "name" : "locationPeriodId",
        "in" : "path",
        "description" : "ID of location period",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "openingLocationId" : {
        "name" : "openingLocationId",
        "in" : "path",
        "description" : "ID of opening location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "originDestinationWorkflowId" : {
        "name" : "originDestinationWorkflowId",
        "in" : "path",
        "description" : "ID of origin destination workflow",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "receivingDocumentId" : {
        "name" : "receivingDocumentId",
        "in" : "path",
        "description" : "ID of receiving document",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "receivingDocumentLineItemId" : {
        "name" : "receivingDocumentLineItemId",
        "in" : "path",
        "description" : "ID of receiving document line item",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "receivingTransferId" : {
        "name" : "receivingTransferId",
        "in" : "path",
        "description" : "ID of receiving transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "saleExpenseLocationId" : {
        "name" : "saleExpenseLocationId",
        "in" : "path",
        "description" : "ID of sale expense location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "saleTransferId" : {
        "name" : "saleTransferId",
        "in" : "path",
        "description" : "ID of sale transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "stockCountId" : {
        "name" : "stockCountId",
        "in" : "path",
        "description" : "ID of stock count",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "stockLevelId" : {
        "name" : "stockLevelId",
        "in" : "path",
        "description" : "ID of stock level",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "stockLocationId" : {
        "name" : "stockLocationId",
        "in" : "path",
        "description" : "ID of stock location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "stockTakeId" : {
        "name" : "stockTakeId",
        "in" : "path",
        "description" : "ID of stock take",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "stockTransferId" : {
        "name" : "stockTransferId",
        "in" : "path",
        "description" : "ID of stock transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "transferApprovalWorkflowId" : {
        "name" : "transferApprovalWorkflowId",
        "in" : "path",
        "description" : "ID of transfer approval workflow",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "transferId" : {
        "name" : "transferId",
        "in" : "path",
        "description" : "ID of transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "transferItemId" : {
        "name" : "transferItemId",
        "in" : "path",
        "description" : "ID of transfer item",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "supplyLocationId" : {
        "name" : "supplyLocationId",
        "in" : "path",
        "description" : "ID of supply location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "valueAdjustmentId" : {
        "name" : "valueAdjustmentId",
        "in" : "path",
        "description" : "ID of value adjustment",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "varianceLocationId" : {
        "name" : "varianceLocationId",
        "in" : "path",
        "description" : "ID of variance location",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      },
      "varianceTransferId" : {
        "name" : "varianceTransferId",
        "in" : "path",
        "description" : "ID of variance transfer",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1000
        }
      }
    },
    "requestBodies" : {
      "accountingLocation" : {
        "description" : "A JSON object containing accounting location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "accounting_location" ],
              "properties" : {
                "accounting_location" : {
                  "$ref" : "#/components/schemas/AccountingLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "accountingTransfer" : {
        "description" : "A JSON object containing accounting transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "accounting_transfer" ],
              "properties" : {
                "accounting_transfer" : {
                  "$ref" : "#/components/schemas/AccountingTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "adjustingTransfer" : {
        "description" : "A JSON object containing adjusting transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "adjusting_transfer" ],
              "properties" : {
                "adjusting_transfer" : {
                  "$ref" : "#/components/schemas/AdjustingTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "comment" : {
        "description" : "A JSON object containing comment data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "comment" ],
              "properties" : {
                "comment" : {
                  "$ref" : "#/components/schemas/Comment/properties/attributes"
                }
              }
            }
          }
        }
      },
      "derivedPeriodBalance" : {
        "description" : "A JSON object containing derived period balance data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "derived_period_balance" ],
              "properties" : {
                "derived_period_balance" : {
                  "$ref" : "#/components/schemas/DerivedPeriodBalance/properties/attributes"
                }
              }
            }
          }
        }
      },
      "expenseLocation" : {
        "description" : "A JSON object containing expense location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "expense_location" ],
              "properties" : {
                "expense_location" : {
                  "$ref" : "#/components/schemas/ExpenseLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "holder" : {
        "description" : "A JSON object containing holder data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "holder" ],
              "properties" : {
                "holder" : {
                  "$ref" : "#/components/schemas/Holder/properties/attributes"
                }
              }
            }
          }
        }
      },
      "internalRequisition" : {
        "description" : "A JSON object containing internal requisition data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "internal_requisition" ],
              "properties" : {
                "internal_requisition" : {
                  "$ref" : "#/components/schemas/InternalRequisition/properties/attributes"
                }
              }
            }
          }
        }
      },
      "internalRequisitionLine" : {
        "description" : "A JSON object containing internal requisition line data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "internal_requisition_line" ],
              "properties" : {
                "internal_requisition_line" : {
                  "$ref" : "#/components/schemas/InternalRequisitionLine/properties/attributes"
                }
              }
            }
          }
        }
      },
      "internalRequisitionTransfer" : {
        "description" : "A JSON object containing internal requisition transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "internal_requisition_transfer" ],
              "properties" : {
                "internal_requisition_transfer" : {
                  "$ref" : "#/components/schemas/InternalRequisitionTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "locationPeriod" : {
        "description" : "A JSON object containing location period data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "location_period" ],
              "properties" : {
                "location_period" : {
                  "$ref" : "#/components/schemas/LocationPeriod/properties/attributes"
                }
              }
            }
          }
        }
      },
      "openingLocation" : {
        "description" : "A JSON object containing opening location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "opening_location" ],
              "properties" : {
                "opening_location" : {
                  "$ref" : "#/components/schemas/OpeningLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "originDestinationWorkflow" : {
        "description" : "A JSON object containing origin destination workflow data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "origin_destination_workflow" ],
              "properties" : {
                "origin_destination_workflow" : {
                  "$ref" : "#/components/schemas/OriginDestinationWorkflow/properties/attributes"
                }
              }
            }
          }
        }
      },
      "receivingDocument" : {
        "description" : "A JSON object containing receiving document data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "receiving_document" ],
              "properties" : {
                "receiving_document" : {
                  "$ref" : "#/components/schemas/ReceivingDocument/properties/attributes"
                }
              }
            }
          }
        }
      },
      "receivingDocumentLineItem" : {
        "description" : "A JSON object containing receiving document line item data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "receiving_document_line_item" ],
              "properties" : {
                "receiving_document_line_item" : {
                  "$ref" : "#/components/schemas/ReceivingDocumentLineItem/properties/attributes"
                }
              }
            }
          }
        }
      },
      "receivingTransfer" : {
        "description" : "A JSON object containing receiving transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "receiving_transfer" ],
              "properties" : {
                "receiving_transfer" : {
                  "$ref" : "#/components/schemas/ReceivingTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "saleExpenseLocation" : {
        "description" : "A JSON object containing sale expense location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "sale_expense_location" ],
              "properties" : {
                "sale_expense_location" : {
                  "$ref" : "#/components/schemas/SaleExpenseLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "saleTransfer" : {
        "description" : "A JSON object containing sale transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "sale_transfer" ],
              "properties" : {
                "sale_transfer" : {
                  "$ref" : "#/components/schemas/SaleTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "stockCount" : {
        "description" : "A JSON object containing stock count data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "stock_count" ],
              "properties" : {
                "stock_count" : {
                  "$ref" : "#/components/schemas/StockCount/properties/attributes"
                }
              }
            }
          }
        }
      },
      "stockLevel" : {
        "description" : "A JSON object containing stock level data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "stock_level" ],
              "properties" : {
                "stock_level" : {
                  "$ref" : "#/components/schemas/StockLevel/properties/attributes"
                }
              }
            }
          }
        }
      },
      "stockLocation" : {
        "description" : "A JSON object containing stock location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "stock_location" ],
              "properties" : {
                "stock_location" : {
                  "$ref" : "#/components/schemas/StockLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "stockTake" : {
        "description" : "A JSON object containing stock take data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "stock_take" ],
              "properties" : {
                "stock_take" : {
                  "$ref" : "#/components/schemas/StockTake/properties/attributes"
                }
              }
            }
          }
        }
      },
      "stockTransfer" : {
        "description" : "A JSON object containing stock transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "stock_transfer" ],
              "properties" : {
                "stock_transfer" : {
                  "$ref" : "#/components/schemas/StockTransfer/properties/attributes"
                }
              }
            }
          }
        }
      },
      "transferApprovalWorkflow" : {
        "description" : "A JSON object containing transfer approval workflow data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "transfer_approval_workflow" ],
              "properties" : {
                "transfer_approval_workflow" : {
                  "$ref" : "#/components/schemas/TransferApprovalWorkflow/properties/attributes"
                }
              }
            }
          }
        }
      },
      "transferItem" : {
        "description" : "A JSON object containing transfer item data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "transfer_item" ],
              "properties" : {
                "transfer_item" : {
                  "$ref" : "#/components/schemas/TransferItem/properties/attributes"
                }
              }
            }
          }
        }
      },
      "valueAdjustment" : {
        "description" : "A JSON object containing value adjustment data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "value_adjustment" ],
              "properties" : {
                "value_adjustment" : {
                  "$ref" : "#/components/schemas/ValueAdjustment/properties/attributes"
                }
              }
            }
          }
        }
      },
      "varianceLocation" : {
        "description" : "A JSON object containing variance location data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "variance_location" ],
              "properties" : {
                "variance_location" : {
                  "$ref" : "#/components/schemas/VarianceLocation/properties/attributes"
                }
              }
            }
          }
        }
      },
      "varianceTransfer" : {
        "description" : "A JSON object containing variance transfer data",
        "required" : true,
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "variance_transfer" ],
              "properties" : {
                "variance_transfer" : {
                  "$ref" : "#/components/schemas/VarianceTransfer/properties/attributes"
                }
              }
            }
          }
        }
      }
    },
    "responses" : {
      "AccountingLocationSuccessResponse" : {
        "description" : "Accounting Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/AccountingLocation"
                }
              }
            }
          }
        }
      },
      "AccountingTransferSuccessResponse" : {
        "description" : "Accounting Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/AccountingTransfer"
                }
              }
            }
          }
        }
      },
      "AdjustingTransferSuccessResponse" : {
        "description" : "Adjusting Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/AdjustingTransfer"
                }
              }
            }
          }
        }
      },
      "CommentSuccessResponse" : {
        "description" : "Comment operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "DepartmentSuccessResponse" : {
        "description" : "Department operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          }
        }
      },
      "DerivedPeriodBalanceSuccessResponse" : {
        "description" : "Derived Period Balance operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/DerivedPeriodBalance"
                }
              }
            }
          }
        }
      },
      "ExpenseLocationSuccessResponse" : {
        "description" : "Expense Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/ExpenseLocation"
                }
              }
            }
          }
        }
      },
      "HolderSuccessResponse" : {
        "description" : "Holder operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/Holder"
                }
              }
            }
          }
        }
      },
      "InternalRequisitionSuccessResponse" : {
        "description" : "Internal Requisition operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/InternalRequisition"
                }
              }
            }
          }
        }
      },
      "InternalRequisitionLineSuccessResponse" : {
        "description" : "Internal Requisition Line operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/InternalRequisitionLine"
                }
              }
            }
          }
        }
      },
      "InternalRequisitionTransferSuccessResponse" : {
        "description" : "Internal Requisition Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/InternalRequisitionTransfer"
                }
              }
            }
          }
        }
      },
      "LocationPeriodSuccessResponse" : {
        "description" : "Location Period operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/LocationPeriod"
                }
              }
            }
          }
        }
      },
      "OpeningLocationSuccessResponse" : {
        "description" : "Opening Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/OpeningLocation"
                }
              }
            }
          }
        }
      },
      "OriginDestinationWorkflowSuccessResponse" : {
        "description" : "Origin Destination Workflow operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/OriginDestinationWorkflow"
                }
              }
            }
          }
        }
      },
      "PurchaserSuccessResponse" : {
        "description" : "Purchaser operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/Purchaser"
                }
              }
            }
          }
        }
      },
      "ReceivingDocumentSuccessResponse" : {
        "description" : "Receiving Document operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/ReceivingDocument"
                }
              }
            }
          }
        }
      },
      "ReceivingDocumentLineItemSuccessResponse" : {
        "description" : "Receiving Document Line Item operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/ReceivingDocumentLineItem"
                }
              }
            }
          }
        }
      },
      "ReceivingTransferSuccessResponse" : {
        "description" : "Receiving Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/ReceivingTransfer"
                }
              }
            }
          }
        }
      },
      "SaleExpenseLocationSuccessResponse" : {
        "description" : "Sale Expense Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/SaleExpenseLocation"
                }
              }
            }
          }
        }
      },
      "SaleTransferSuccessResponse" : {
        "description" : "Sale Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/SaleTransfer"
                }
              }
            }
          }
        }
      },
      "StockCountSuccessResponse" : {
        "description" : "Stock Count operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockCount"
                }
              }
            }
          }
        }
      },
      "StockLevelSuccessResponse" : {
        "description" : "Stock Level operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockLevel"
                }
              }
            }
          }
        }
      },
      "StockLevelBalanceSuccessResponse" : {
        "description" : "Stock Level Balance operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockLevelBalance"
                }
              }
            }
          }
        }
      },
      "StockLocationSuccessResponse" : {
        "description" : "Stock Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockLocation"
                }
              }
            }
          }
        }
      },
      "StockTakeSuccessResponse" : {
        "description" : "Stock Take operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockTake"
                }
              }
            }
          }
        }
      },
      "StockTransferSuccessResponse" : {
        "description" : "Stock Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/StockTransfer"
                }
              }
            }
          }
        }
      },
      "SupplyLocationSuccessResponse" : {
        "description" : "Supply Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/SupplyLocation"
                }
              }
            }
          }
        }
      },
      "TransferSuccessResponse" : {
        "description" : "Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/Transfer"
                }
              }
            }
          }
        }
      },
      "TransferApprovalWorkflowSuccessResponse" : {
        "description" : "Transfer Approval Workflow operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/TransferApprovalWorkflow"
                }
              }
            }
          }
        }
      },
      "TransferItemSuccessResponse" : {
        "description" : "Transfer Item operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/TransferItem"
                }
              }
            }
          }
        }
      },
      "ValueAdjustmentSuccessResponse" : {
        "description" : "Value Adjustment operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/ValueAdjustment"
                }
              }
            }
          }
        }
      },
      "VarianceLocationSuccessResponse" : {
        "description" : "Variance Location operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/VarianceLocation"
                }
              }
            }
          }
        }
      },
      "VarianceTransferSuccessResponse" : {
        "description" : "Variance Transfer operation was successful.",
        "content" : {
          "application/vnd.mbapi.v2+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/VarianceTransfer"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "access_token" : {
        "type" : "apiKey",
        "name" : "Access-token",
        "in" : "header"
      },
      "client" : {
        "type" : "apiKey",
        "name" : "Client",
        "in" : "header"
      },
      "uid" : {
        "type" : "apiKey",
        "name" : "Uid",
        "in" : "header"
      }
    }
  },
  "security" : [ {
    "access_token" : [ ]
  }, {
    "client" : [ ]
  }, {
    "uid" : [ ]
  } ]
}