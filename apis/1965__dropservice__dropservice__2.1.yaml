openapi: 3.0.0
info:
  description: |
    DropService PAI
  version: "2.1"
  title: Dropservice API
  termsOfService: 'http://www.dropservice.es'
  contact:
    email: john.it@dropservice.es
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /orders:
    get:
      tags:
        - orders
      summary: list orders
      operationId: listOrders
      description: |
        List orders. Filtering can be done using the proper parameters
      parameters:
        - name: status
          in: query
          description: status to filter by
          required: false
          schema:
            type: string
            enum:
              - WAITING_ACCEPTANCE
              - WAITING_PAYMENT
              - PENDING
              - PROCESSING
              - PREPARED
              - SENT
              - SHIPPED
              - CANCELED
        - name: order_date
          in: query
          description: retrieves order from order_date
          required: false
          schema:
            type: string
            format: YYYY-mm-dd H:m:s
        - name: updated_at
          in: query
          description: retrieves order from update_at
          required: false
          schema:
            type: string
            format: YYYY-mm-dd H:m:s
        - name: ids
          in: query
          description: retrieves orders by ids separated by comma
          required: false
          schema:
            type: string
            format: id1, id2,,,, idn
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: No orders
    post:
      tags:
        - orders
      summary: Place an order
      operationId: placeOrder
      requestBody:
        description: Add one order to DropService
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order
  '/orders/{orderId}':
    get:
      tags:
        - orders
      summary: Finds and order
      description: Retrieves and order by Order ID or Vender Code
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: >-
            Vendor Code for the Order, for DropService Order Id, try with
            ID99999, for internal number use IN99999
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - orders
      summary: Cancels and order
      description: Cancels and order
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          description: >-
            Vendor Code for the Order, for DropService Order Id, try with
            ID99999
          required: true
          schema:
            type: string
            format: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /stocks:
    get:
      tags:
        - stocks
      summary: retrieve all stock info
      operationId: listStocks
      description: Returns all the stock by GTIN (EAN) and qty.
      parameters:
        - name: substractOngoingOrders
          in: query
          description: substract from the stock info, the stock reserved for orders
          required: false
          schema:
            type: string
            format: 1 or 0
      responses:
        '200':
          description: List of stocks, GTIN (EAN) and stock separated by comma
          content:
            application/csv:
              schema:
                type: string
components:
  schemas:
    Order:
      type: object
      required: 
        - vendor_code
      properties:
        id:
          type: integer
          format: int64
          description: Generated by DropService
        vendor_code:
          type: string
          format: string
          description: Marketplace Order Number or similar
        internal_order_number:
          type: string
          format: string
          description: Additional order number
        status:
          type: string
          description: Order Status
          enum:
            - WAITING_ACCEPTANCE
            - WAITING_PAYMENT
            - PENDING
            - PROCESSING
            - PREPARED
            - SENT
            - SHIPPED
            - CANCELED
        order_date:
          type: string
          format: date-time
        total_price:
          type: number
        delivery:
          type: object
          properties:
            ship_date:
              type: string
              format: date-time
            tracking:
              type: string
            date:
              type: string
              format: date-time
            name:
              type: string
            address:
              type: string
            postal_code:
              type: string
            country_code:
              type: string
              description: 'ISO code of the country, ES for Spain'
            city:
              type: string
            email:
              type: string
            phone:
              type: string
            info:
              type: string
              description: Aditional instructions to add for the shipping company
        orderLines:
          description: All the products purchased on the order
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
        has_incidence:
          type: boolean
          default: false
    OrderLine:
      type: object
      required: 
        - ean
        - qty
        - name
        - price
      properties:
        order_line_id:
          type: integer
        ean:
          type: string
        qty:
          type: integer
        name:
          type: string
          description: Product Name
        price:
          type: number
          description: Price Per Unit
        reference:
          type: string
        image_url:
          type: string
          format: url
          description: Optional Url to the image of the product
        has_issue:
          type: string
          enum:
            - OUT_OF_STOCK
            - PRODUCT_NOT_FOUND
            - RETURN_REQUESTED
        return:
          type: string
          enum:
          - PENDING
          - OK
          - INCORRECT
          - FAILED
