openapi: 3.0.0
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dirisujesse/lighthouse/1.0.0
  - description: Lighthouse API
    url: https://us-central1-lighthouse-7d374.cloudfunctions.net
info:
  description: API documentation for the lighthouse app backend
  version: "1.0.0"
  title: Lighthouse API Documentation
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Lightbearers
    description: Collection of platform ministers
  - name: Hearts
    description: Collection of platform end users
  - name: Lights
    description: Collection of audio ministrations
  - name: Plans
    description: Collection of subscribable packages 
  - name: Beams
    description: Collection of playlists
  - name: Categories
    description: Collection of categories for lights
  - name: Moods
    description: Collection of moods for lights
  - name: Gifts
    description: Collectin of tokens, offerings from an heart to a lightbearer
  - name: Subscriptions
    description: Collection of subscriptions to plans
  - name: Payments
    description: Collection of transactions by users
  - name: Reactions
    description: Collectin of lights fancied by a heart
paths:
  /signup:
    post:
      tags:
        - User
      summary: Register a Lightbearer or Heart
      description: Creates accounts for hearts of lightbearers on the platform
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
  /login:
    put:
      tags:
        - User
      summary: Register a Lightbearer or Heart
      description: Creates accounts for hearts of lightbearers on the platform
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: collection
          in: query
          description: the document collection to retreive object from
          required: true
          schema:
            type: string
            enum: ["hearts", "lightbeares"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  /retreivePassword:
    put:
      tags:
        - User
      summary: Register a Lightbearer or Heart
      description: Creates accounts for hearts of lightbearers on the platform
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: collection
          in: query
          description: the document collection to retreive password from
          required: true
          schema:
            type: string
            enum: ["hearts", "lightbeares"]
        - name: email
          in: query
          description: the users email
          required: true
          schema:
            type: string
  /getTopLighbearers:
    get:
      tags:
        - Lightbearers
      summary: Retrieve top lightbearers
      description: Get lighbearers with the most followers during onboarding
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /modifyAccount:
    post:
      tags:
        - Lightbearers
      summary: Lighbearer signup
      description: Initiate lightbearer account setup
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                ministry:
                  type: string
                website:
                  type: string
                twitter_handle:
                  type: string
                facebook_profile:
                  type: string
                country:
                  type: string
    put:
      tags:
        - Lightbearers
      summary: Lighbearer profile update
      description: Update a lighbearers account
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of a lightbearer whose profile you wish to update
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/Lightbearer"
  /modifyLight:
    put:
      tags:
        - Lights
      summary: Update or delete a lightbearers light
      description: Update or delete lights belonging to a lights bearer
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of the light
          required: true
          schema:
            type: string
        - name: action
          in: query
          description: the procedure to initiate
          required: true
          schema:
            type: string
            enum: ["update", "delete"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: {"light_attributes": "updated value"}
  /lights:
    get:
      tags:
        - Lights
      summary: Ligths search
      description: Search for lights
      responses:
        '200':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: q
          in: query
          description: search value
          schema:
            type: string
        - name: page
          in: query
          description: the slice of data to view
          schema:
            type: number
            default: 0
  /newLights:
    get:
      tags:
        - Lights
      summary: Recent lights
      description: Get recent lights
      responses:
        '200':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /library:
    get:
      tags:
        - Lightbearers
      summary: Lighbearer lights
      description: Get lighbearer lights
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of a lightbearer
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page index starting with 0
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: query to filter light by title
          required: true
          schema:
            type: string
  /statistics:
    get:
      tags:
        - Lightbearers
      summary: Lighbearer Analytics
      description: Return an object containing an array of streams and lights for frontend processing (I cannot aggregate on the backend as we have a one minute timeout for functions)
      responses:
        '201':
          description: item created
          content:
            application/json:
              example: {
                lightData: [],
                streamData: []
              }
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of a lightbearer
          required: true
          schema:
            type: string
  /activateAccount:
    put:
      tags:
        - Lightbearers
      summary: Lighbearer signup
      description: Initiate lightbearer account setup
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of a lightbearer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                podcastData:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    image:
                      type: string
  /myLightBearers:
    get:
      tags:
        - Hearts
      summary: Get Subscribed Lightbearers
      description: Retrieve lightbeareres a heart is subscribed to
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: heart
          in: query
          description: the id of a heart
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: the slice of lightbearers to view
          schema:
            type: string
            default: 0
  /likes:
    get:
      tags:
        - Hearts
      summary: Get lights liked by a heart
      description: Lights liked by a heart
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: heart
          in: query
          description: the id of a heart
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: the slice of lightbearers to view
          schema:
            type: string
            default: 0
  /react:
    post:
      tags:
        - Hearts
      summary: Get lights liked by a heart
      description: Lights liked by a heart
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: heart
          in: query
          description: the id of a heart
          required: true
          schema:
            type: string
        - name: light
          in: query
          description: the id of the track
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: the sort of rection
          required: true
          schema:
            type: string
            enum: ["like", "dislike"]
  /todaysLight:
    get:
      tags:
        - Lights
      summary: Get Lights for Today
      description: Retrieve lights created today
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: page
          in: query
          description: the slice of lightbearers to view
          schema:
            type: string
            default: 0
  /addLights:
    post:
      tags:
        - Lights
      summary: Add lights add/or create Series
      description: Add lights add/or create Series
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                by:
                  type: string
                  example: light bearer id
                isSeries:
                  type: boolean
                  example: "if true eriesData cannot be empty"
                lights:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      image:
                        type: string
                      url:
                        type: string
                        example: url to message audio
                      price:
                        type: number
                      duration:
                        type: number
                      mood:
                        type: number
                      category:
                        type: number
                seriesData:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    image:
                      type: string
  /followers:
    get:
      tags:
        - Lightbearers
      summary: Lighbearer Subscribers
      description: Get hearts following lightbearer
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: id
          in: query
          description: the id of the lightbearer
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: the page index of items to view
          required: false
          schema:
            type: number
  /follow:
    post:
      tags:
        - Hearts
      summary: Follow lightbearers
      description: Follow lightbearers
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: heart
          in: query
          description: the id of the heart
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: array
                items:
                  type: string
                  example: ids of lightbearers
  /unfollow:
    delete:
      tags:
        - Hearts
      summary: Unfollow Lightbearer
      description: Unfollow a lightbearer
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: bearer
          in: query
          description: the id of the lightbearer
          required: true
          schema:
            type: string
        - name: heart
          in: query
          description: the id of the user
          required: true
          schema:
            type: number
  /beams:
    get:
      tags:
        - Beams
      summary: Heart Beams
      description: Get a heart's playlists
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: heart
          in: query
          description: the id of the heart
          required: true
          schema:
            type: string
  /addBeam:
    post:
      tags:
        - Beams
      summary: Heart Beams
      description: Get a heart's playlists
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Beam"
  /subscribe:
    post:
      tags:
        - Subscriptions
      summary: Subscribe to a plan
      description: Make a subscription request
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: plan
          in: query
          description: the id of the plan
          required: true
          schema:
            type: string
        - name: heart
          in: query
          description: the id of the subscribing heart
          required: true
          schema:
            type: string
  /subscriberCount:
    get:
      tags:
        - Subscriptions
      summary: Get the number of subsribed users
      description: Get count of active subscribers
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /search:
    get:
      tags:
        - App
      summary: General app search
      description: Search accross all app models
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: q
          in: query
          description: the query string
          required: true
          schema:
            type: string
        - name: key
          in: query
          description: the attribute to search on
          required: true
          schema:
            type: string
        - name: collection
          in: query
          description: the query string
          required: true
          schema:
            type: string
            enum:
              - lightbearers
              - lights
              - hearts
              - plans
              - subscriptions
              - beams
              - series
              - podcasts
              - streams
              - reactions
              - moods
              - categories
              - gifts
              - follows
              - favourtes
  /beam:
    get:
      tags:
        - Beams
      summary: Beam details
      description: View playlist detail
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      parameters:
        - name: beam
          in: query
          description: the id of the beam
          required: true
          schema:
            type: string
  /moods:
    get:
      tags:
        - Moods
      summary: Get Moods
      description: Retrieve available moods
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /addMood:
    post:
      tags:
        - Moods
      summary: Add Mood
      description: Add one or more new moods
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mood"
  /plans:
    get:
      tags:
        - Plans
      summary: Get Plans
      description: Retrieve available plans
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /addPlan:
    post:
      tags:
        - Plans
      summary: Add Plans
      description: Add one or more new plans
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"
  /categories:
    get:
      tags:
        - Categories
      summary: Get Categories
      description: Retrieve available categories
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  /addCategory:
    post:
      tags:
        - Categories
      summary: Add Category
      description: Add one or more new categories
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
components:
  schemas:
    Lightbearer:
      properties:
        username:
          type: string
        email:
          type: string
        name:
          type: string
        age:
          type: string
        password:
          type: string
        picture:
          type: string
        followers:
          type: number
        ministry:
          type: string
        twitter_handle:
          type: string
        facebook_profile:
          type: string
        website:
          type: string
        country:
          type: string
        title:
          type: string
        lastActive:
          type: string
      required:
      - name
      - email
      - password
    Light:
      properties:
        title:
          type: string
        by:
          type: string
        duration:
          type: string
        image:
          type: string
        mood:
          type: string
        category:
          type: string
        url:
          type: string
        favourites:
          type: string
        rating:
          type: number
        price:
          type: number
        description:
            type: string
        published:
          type: boolean
      required:
      - title
      - by
      - duration
      - image
      - mood
      - category
      - url
      - price
    Podcast:
      properties:
        name:
          type: string
        by:
          type: string
        description:
          type: string
        image:
          type: string
      required:
      - name
      - by
      - description
      - image
    Heart:
      properties:
        username:
          type: string
        email:
          type: string
        name:
          type: string
        age:
          type: string
        password:
          type: string
        picture:
          type: string
        following:
          type: array
        favourites:
          type: array
        gifts: 
          type: array
        beams:
          type: array
        subscription:
          type: object
        lastActive:
          type: string
      required:
      - name
      - email
      - password
    Gift:
      properties:
        from:
          type: string
        to:
          type: string
        value:
          type: number
        status:
          type: string
          enum: [sent, received]
        uuid:
          type: string
        type:
          type: string
          enum: [cash, light]
      required:
      - from
      - to
      - value
      - status
      - type
    Stream:
      properties:
        light:
          type: string
        heart:
          type: string
        lightbearer:
          type: string
        duration:
          type: number
        
      required:
      - from
      - to
      - value
      - status
      - type
    Plan:
      properties:
        name:
          type: string
        cost:
          type: number
        duration:
          type: number
      required:
      - name
      - cost
      - duration
    Beam:
      properties:
        heart:
          type: string
        name:
          type: string
        lights:
          type: array
          items:
            type: string
        image:
          type: string
      required:
      - name
      - heart
      - lights
    Series:
      properties:
        by:
          type: string
        title:
          type: string
        description:
          type: string
        lights:
          type: array
          items:
            type: string
        image:
          type: string
      required:
      - name
      - heart
      - lights
    Category:
      properties:
        name:
          type: string
        image:
          type: string
        description:
          type: string
      required:
      - name
      - image
      - description
    Mood:
      properties:
        name:
          type: string
        hexColor:
          type: string
        webColor:
          type: string
        emoji:
          type: string
        description:
            type: string
      required:
      - name
      - hexColor
      - webColor
      - emoji
    Subscription:
      properties:
        heart:
          type: string
        plan:
          type: string
        starts:
          type: string
        expires:
          type: string
      required:
      - heart
      - plan
      - starts
      - expires
    Payment:
      properties:
        by:
          type: string
        for:
          type: string
        type:
          type: string
          enum: [subscription, gift]
        value:
          type: number
        status:
          type: string
          enum: [pending, failure, success]
      required:
      - by
      - for
      - type
      - value
      - status
    Favourite:
      properties:
        heart:
          type: string
        lights:
          type: array
          items:
            type: string
      required:
      - heart
      - lights
      type: object