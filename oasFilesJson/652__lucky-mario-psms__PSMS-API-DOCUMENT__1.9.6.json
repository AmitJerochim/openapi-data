{"openapi":"3.0.0","info":{"title":"Lucky Mario Payment Service - API Document","version":"1.9.6","contact":{"email":"its@luckymario.com","name":"Lucky Mario IT Services"},"description":"# **Introduction**<br>\nThe purpose of this document is to guide Company to integrate Lucky Mario Payment Service with their platform.\n<br><br>\n****\n<br>\n# **Network Security**<br>\n**Protocol**<br>All communications between merchant application and payment service endpoint must in HTTPS with TLS v1.2.<br><br>**Whitelisted IP**<br> Whitelisted IP is required for production environment.  Company has to provide at least one IP for registering in IP whitelist.\n<br><br>\n****\n<br>\n# **Identification & Data Encryption**<br>\n**Company Code**<br>A unique 4 characters company code will be setup by Lucky Mario for identification of every API call.<br><br>**Secrets Keys**<br>There are 2 secret keys will be provided by Lucky Mario for company to encrypt their API data.  The encryption mechanism is AES-256 and the hash mechanism is SHA-256.  For the example of encryption, decryption and hashing, please refer Appendix I.\n<br><br>\n****\n<br>\n# **Data Encoding**<br>\nUnless specified, all data exchange in the API services should be in UTF-8.\n<br><br>\n****\n<br>\n# **URL Setup**<br>\n**Return URL**<br>Company has to setup a URL and its path for client side webpage re-direction after payment is done no matter the payment is successful or failed.<br><br>**Cancel URL**<br>Company has to setup a URL and its path for client side webpage re-direction if the customer click cancel button from the payment page.<br><br>**Callback URL**<br>Company has to setup a URL and its path for backend notification from Lucky Mario Payment Service on the payment detail as synchronised mode,.\n<br><br>"},"servers":[{"url":"https://uat-api.luckymario.com\n","description":"# Testing environment (https://uat-api.luckymario.com), Whitelisted IP is not required."},{"url":"https://api.luckymario.com","description":"# Production environment (https://api.luckymario.com), Whitelisted IP is required"}],"paths":{"/Appendix I":{"get":{"summary":"Appendix I","tags":["Appendix"],"responses":{"200":{"description":"OK"}},"operationId":"get-5.1-Appendix-I","description":"Encryption & Decryption&Hash (.net C# Code)\n    \n    using System;\n    using System.Security.Cryptography;\n    using System.Text;\n\t\t\t\t\n    public class Program{\n\n\tpublic static void Main(){\n\t\n\t\tstring context = \"this is context\";\n\t\tstring encryptContext = EncryptAES256(context);\n\t\tConsole.WriteLine(encryptContext);\n\t\tConsole.WriteLine(DecryptAES256(encryptContext));\n\t\tstring sSecretKey = \"sSecretKey\";\n\t\tstring iv = \"iv\";\n\t\tstring sha_context = String.Format(\"HashKey={0}&{1}&HashIV={2}\",sSecretKey, encryptContext, iv);\n\t\tConsole.WriteLine(getHashSha256(sha_context));\n\n\t}\n\t\n\tpublic static string EncryptAES256(string source){\n\n\t\tstring sSecretKey = \"sSecretKey\";\n\t\tstring iv = \"iv\";\n\t\n\t\tvar aes = new RijndaelManaged();\n\n\t\taes.Key = Encoding.UTF8.GetBytes(sSecretKey);\n\t\taes.IV = Encoding.UTF8.GetBytes(iv);\n\t\taes.Mode = CipherMode.CBC;\n\t\taes.Padding = PaddingMode.PKCS7;\n\n\t\tICryptoTransform transform = aes.CreateEncryptor();\n\t\treturn ByteArrayToHex(transform.TransformFinalBlock(Encoding.UTF8.GetBytes(source), 0, Encoding.UTF8.GetBytes(source).Length)).ToLower();\n\n\t}\n\t\n\t public static string ByteArrayToHex2(byte[] array)\n        {\n            System.Text.StringBuilder sb = new System.Text.StringBuilder(array.Length * 2);\n            foreach (byte element in array)\n                 sb.AppendFormat(\"{0:x2}\", element);\n            return sb.ToString();\n        }\n\t\n\t\n\tprivate static string ByteArrayToHex(byte[] barray) {\n\t\tchar[] c = new char[barray.Length * 2];\n\t\tbyte b;\n\t\tfor (int i = 0; i < barray.Length; ++i) {\n\t\t\tb = ((byte)(barray[i] >> 4));\n\t\t\tc[i * 2] = (char)(b > 9 ? b + 0x37 : b + 0x30);\n\t\t\tb = ((byte)(barray[i] & 0xF));\n\t\t\tc[i * 2 + 1] = (char)(b > 9 ? b + 0x37 : b + 0x30);\n\t\t}\n\t\treturn new string(c);\n\t}\n\t\n\tpublic static string DecryptAES256(string encryptData) {// 解密\n\t\t\n\t\tstring sSecretKey = \"sSecretKey\";\n\t\tstring iv = \"iv\";\n\t\tvar encryptBytes = HexStringToByteArray(encryptData.ToUpper());\n\t\tvar aes = new RijndaelManaged();\n\t\taes.Key = Encoding.UTF8.GetBytes(sSecretKey);\n\t\taes.IV = Encoding.UTF8.GetBytes(iv);\n\t\taes.Mode = CipherMode.CBC;\n\t\taes.Padding = PaddingMode.None;\n\t\tICryptoTransform transform = aes.CreateDecryptor();\n\t\treturn Encoding.UTF8.GetString(RemovePKCS7Padding(transform.TransformFinalBlock(encryptBytes, 0, encryptBytes.Length)));\n\t}\n\t\n\tprivate static byte[] AddPKCS7Padding(byte[] data, int iBlockSize) {\n\t\tint iLength = data.Length;\n\t\tbyte cPadding = (byte)(iBlockSize - (iLength % iBlockSize));\n\t\tvar output = new byte[iLength + cPadding];\n\t\tBuffer.BlockCopy(data, 0, output, 0, iLength);\n\t\tfor (var i = iLength; i < output.Length; i++)\n\t\t\toutput[i] = (byte)cPadding;\n\t\treturn output;\n\t}\n\t\n\tprivate static byte[] RemovePKCS7Padding(byte[] data){\n\t\tint iLength = data[data.Length - 1];\n\t\tvar output = new byte[data.Length - iLength];\n\t\tBuffer.BlockCopy(data, 0, output, 0, output.Length);\n\t\treturn output;\n\t}\n\t\n\tprivate static byte[] HexStringToByteArray(string hexString) {\n\t\tint hexStringLength = hexString.Length;\n\t\tbyte[] b = new byte[hexStringLength / 2];\n\t\tfor (int i = 0; i < hexStringLength; i += 2){\n\t\t\tint topChar = (hexString[i] > 0x40 ? hexString[i]- 0x37 : hexString[i]-0x30) << 4;\n\t\t\tint bottomChar = hexString[i + 1] > 0x40 ? hexString[i + 1]- 0x37 :\n\t\t\thexString[i + 1] - 0x30;\n\t\t\tb[i / 2] = Convert.ToByte(topChar + bottomChar);\n\t\t}\n\t\treturn b;\n\t}\t\t\t\t\t   \n\tpublic static string getHashSha256(string text){\n\t\tbyte[] bytes = Encoding.UTF8.GetBytes(text);\n\t\tSHA256Managed hashstring = new SHA256Managed();\n\t\tbyte[] hash = hashstring.ComputeHash(bytes);\n\t\tstring hashString = string.Empty;\n\t\tforeach (byte x in hash)\n\t\t\thashString += String.Format(\"{0:x2}\", x);\n\t\treturn hashString.ToUpper();\n\t}"}},"/Appendix II":{"get":{"summary":"Appendix II","tags":["Appendix"],"responses":{"200":{"description":"OK"}},"operationId":"get-Appendix-II","description":"Currency List\n\n\n    NAD\tMVR\tLTL\tLBP\tWST\tAZM\n    ITL\tTPE\tTRY\tBTN\tBSD\tUAH\n    BOB\tSGD\tALL\tGTQ\tCHF\tERN\n    ANG\tZWL\tHRK\tFRF\tXBD\tATS\n    SEK\tDEM\tPHP\tCZK\tBEF\tSOS\n    SHP\tCNY\tXUA\tTJS\tBRL\tUGX\n    TMM\tYUM\tIRR\tUYI\tUSD\tCDF\n    VND\tAED\tNPR\tSBD\tXAG\tNIO\n    ZWD\tLUF\tGEL\tXPF\tJPY\tAZN\n    MTL\tPYG\tTMT\tTWD\tMOP\tKGS\n    HUF\tAWG\tOMR\tBGN\tTHB\tLVL\n    MGA\tMUR\tXBB\tRWF\tXBA\tMMK\n    YER\tMKD\tSSP\tSKK\tTOP\tCYP\n    ISK\tGRD\tSVC\tXAU\tETB\tINR\n    CLP\tVEB\tCOU\tQAR\tTND\tXPD\n    AMD\tMZM\tMGF\tXFU\tNZD\tAFN\n    XSU\tKZT\tHKD\tGWP\tSIT\tIEP\n    COP\tSRD\tEEK\tMAD\tXAF\tXTS\n    PLN\tBYB\tFKP\tSRG\tKYD\tKMF\n    FJD\tSCR\tBYN\tILS\tJOD\tKWD\n    HTG\tGMD\tCLF\tMZN\tVUV\tBDT\n    HNL\tRUR\tXBC\tVEF\tBYR\tGYD\n    CHW\tGHS\tROL\tLSL\tBZD\tAUD\n    CRC\tDKK\tLYD\tBHD\tMYR\tIQD\n    NGN\tUSN\tPKR\tLKR\tARS\tPAB\n    AOA\tCVE\tXPT\tLAK\tSAR\t\n    PTE\tJMD\tBBD\tFIM\tSLL\t\n    BWP\tGBP\tMXN\tMWK\tGHC\t\n    MRO\tBMD\tPEN\tDJF\tRSD\t\n    AFA\tCUP\tRON\tKRW\tBAM\t\n    KHR\tCAD\tBOV\tZAR\tNOK\t\n    TTD\tESP\tUSS\tAYM\tXOF\t\n    BGL\tZMK\tSTD\tGIP\tBND\t\n    GNF\tDOP\tCHE\tXXX\tTZS\t\n    SDD\tXDR\tXFO\tMDL\tZMW\t\n    LRD\tSZL\tTRL\tUZS\tZWN\t\n    CUC\tKPW\tNLG\tADP\tCSD\t\n    XCD\tSYP\tIDR\tBIF\tDZD\t\n    ZWR\tEGP\tRUB\tMXV\tMNT\t\n    SDG\tEUR\tUYU\tKES\tPGK\t\n\n\n"}},"/Appendix III":{"get":{"summary":"Appendix III","tags":["Appendix"],"responses":{"200":{"description":"OK"}},"operationId":"get-Appendix-III","description":"Error Message\n\n    Company code is not found\n    Company_code is required\n    Phone number is invalid\n    Duplicate phone number\n    Duplicate login name\n    External account code is required\n    Sha 256 data does not match\n    payment_info is required\n    payment_sha is required\n"}},"/Appendix IV":{"get":{"summary":"Appendix IV","tags":["Appendix"],"responses":{"200":{"description":"OK"}},"operationId":"get-Appendix-IV","description":"    Testing Card Number (TWD): 4000-2211-1111-1111\n    Testing Card Number (HKD): 4000-0000-0000-3220\n"},"parameters":[]},"/callback":{"post":{"summary":"Asynchronized Notification","operationId":"post-callback","responses":{"200":{"description":"“Success”\n\nRemark: Merchant has to response “Success” when receive the callback, otherwise the callback will keep calling to callback URL every 10 minutes for 24 hours started from the first callback time.\n","content":{"application/json":{"schema":{"type":"object","properties":{"company_code":{"type":"string","description":"Company Code / Merchant Code"},"payment_info":{"type":"string","description":"Callback data encrypted with AES-256"},"payment_sha":{"type":"string","description":"Hash payment_info with SHA-256\n\nthe string content for doing SHA-256 should be like:\n\nHashKey={HashKey assigned for this company}&{payment_info}&HashIV= {HashIVKey assigned for this company}\n"},"Callback data":{"type":"array","items":{"type":"object","properties":{"companyCode":{"type":"string","description":"Company Code / Merchant Code"},"externalAcouuntCode":{"type":"string","description":"Account Code"},"externalReferenceCode":{"type":"string","description":"Reference Code"},"paymentStatus":{"type":"string","description":"\"Paid\", “Rejected” or “Cancelled”"},"remarks":{"type":"string","description":"If paymentStatus = “Paid” then “Paid”\nIf paymentStatus = “Rejected” then {reject reason} (If reject reason is NULL then “N/A”\nIf paymentStatus = “Cancelled” then “Cancelled”\n"},"amount":{"type":"number","description":"paid amount"},"currency":{"type":"string","description":"Payment currency"},"orderTime":{"type":"string","format":"date","description":"Order Time (UTC +0 without timezone)"},"paymentTime":{"type":"string","format":"date","description":"Payment time (UTC +0 without timezone)"}}}}}},"examples":{"Callback Data with Paid status":{"value":{"company_code":"AAAX","payment_info":"ADJ254Ckjklam234hkjbsakfhakljwh435kh13qw32q","payment_sha":"JNJmk9Fmjahq234asdjfbkjqhw4sD","Callback data":[{"companyCode":"AAAX","externalAcouuntCode":"ref-acc","externalReferenceCode":"ABC-0019890","paymentStatus":"Paid","remarks":"Paid","amount":3888.88,"currency":"hkd","orderTime":"2020-03-31 06:38:03","paymentTime":"2020-03-31 06:38:39"}]}},"Callback Data with Rejected status":{"value":{"company_code":"AAAX","payment_info":"ADJ254Ckjklam234hkjbsakfhakljwh435kh13qw32q","payment_sha":"JNJmk9Fmjahq234asdjfbkjqhw4sD","Callback data":[{"companyCode":"AAAX","externalAcouuntCode":"ref-1","externalReferenceCode":"ABC-0019890","paymentStatus":"Rejected","remarks":"Your card was declined.","amount":3888.88,"currency":"hkd","orderTime":"2020-03-31 09:18:01"}]}}}}}}},"description":"**Purpose**\n\nWhen a payment is completed by payment account owner from payment gateway page.  Once the payment detail and transaction have been confirmed by Payment Gateway, Lucky Mario Payment Service will trigger a POST callback notification at the backend to the callback URL that Company provided.\n\n**Please note:-**\n\nThis callback will be triggered as soon as possible when the payment is completed and sucessful. There will be no callback if the payment ticket is pending on payment. \n\nHowever, for some payment gateways, they will send back the rejected payment callback after 24 hours instead of after the failed payment process.","tags":["Payment Notification"]}},"/api/fisp/payment/fund-in":{"post":{"summary":"Initiate a payment ticket","description":"**Purpose**\n\nA POST method to initiate a payment request and receive a return HTML for available payment method.\n\n**Please note:-**\n\n***external_account_code*** - external_account_code is required for initiate a payment ticket, so register payment account before initiate a payment for the company customer.\n\n***payment_info*** - encrypt the request data by using the provided secret key with AES-256 encryption mechanism.\n\n***payment_sha*** - Hash the payment_info with SHA-256 and provided IV Key and the hashed string must be in <U>UPPER CASE</U>.  The string for doing the SHA Hashing should be like this:\n<br>\nHashKey={Secret Key}&{payment_info}&HashIV={IV Key}\n<br>\n<br>\n# *****IMPORTANT*****\n<font color=\"FF0000\">For Production, connection is only allow from whitelisted IP, the connection must be from Company’s Platform to Payment API at the backend instead of client front-end browser to do FORM POST.</font> \n\nSample of getting returned HTML can be used CURL as an example like below:\n\ncurl -H \"Content-Type: application/x-www-form-urlencoded\" -X POST https://api.luckymario.com/api/fisp/payment/fund-in -d 'payment_info=[asdfj23424hsdf]&payment_sha=[sakfjdj435234]&company_code=ABCD'","operationId":"post-api-fisp-payment-fund-in","tags":["Payment Ticket"],"parameters":[{"schema":{"type":"string"},"in":"header","name":"Content-Type: application/x-www-form-urlencoded","required":true}],"requestBody":{"content":{"application/json":{"schema":{"allOf":[{"properties":{"company_code":{"type":"string","description":"Company Code"},"payment_info":{"type":"string","description":"Request data encrypted with AES-256"},"payment_sha":{"type":"string","description":"Hash payment_info with SHA-256"},"Request data":{"type":"array","items":{"type":"object","properties":{"company_code":{"type":"string","description":"Company Code"},"external_reference_code":{"type":"string","description":"External reference code for company platform"},"external_account_code":{"type":"string","description":"Reference Account Code to map with the Account Owner's ID in Company Platform"},"currency":{"type":"string","description":"Currency Code (Refer to Appendix II)"},"total_amount":{"type":"number","description":"Request Payment amount for the currency"},"lang":{"type":"string","description":"'en' is English or 'zh-tw' is Traditional Chinese. Default is 'en'.  This is the language will be displayed in the payment gateway page."}}}}}}],"type":"object"},"examples":{"Request Data Example":{"value":{"company_code":"AAAX","external_reference_code":"ref-1","external_account_code":"ABC-0019890","currency":"hkd","total_amount":3000.12,"lang":"en"}}}}},"description":""},"responses":{"200":{"description":"Response Success\n\nAPI will return HTML once the payment gateway is found under input parameters. \n\nMerchant can take the returned HTML to response Merchant’s user side to re-direct to the appropriate payment gateway webpage for making payment.\n\n<b>Please note:-</b> <br>The returned HTML is expected to be doing webpage re-direction instead of embedding to other source code. If you want embed this HTML to your own source code or front end framework such as React.  You have to customize the returned HTML by your own and not guarantee it is working properly whenever any change of returned HTML.","content":{"application/json":{"schema":{"type":"object","properties":{"Html":{"type":"string","description":""}}},"examples":{}}}},"201":{"description":"Response Failed","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"-1\n"},"message":{"type":"string","description":"“Error Message (Refer to Appendix III)”"},"data":{"type":"string"}}},"examples":{"JSON Example":{"value":{"code":-1,"message":"Company code is not found","data":null}}}}}}}}},"/api/psms/cfms/paymentinfo/referencecode":{"get":{"summary":"Restful Mode (Search by external reference code)","responses":{"200":{"description":"Response Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"“0”"},"message":{"type":"string","description":"“Success”"},"data":{"type":"array","description":"JSON","items":{"type":"object","properties":{"company_code":{"type":"string","description":"Company Code / Merchant Code"},"payment_info":{"type":"string","description":"Request data encrypted with AES-256"},"payment_sha":{"type":"string","description":"payment_info has with SHA-256"}}}},"Response data":{"type":"array","items":{"type":"object","properties":{"companyCode":{"type":"string","description":"Company Code / Merchant Code"},"externalAcouuntCode":{"type":"string","description":"Account Code"},"externalReferenceCode":{"type":"string","description":"Reference Code"},"paymentStatus":{"type":"string","description":"\"Paid\", “Rejected” or “Cancelled”"},"remarks":{"type":"string","description":"If paymentStatus = “Paid” then “Paid”\nIf paymentStatus = “Rejected” then {reject reason} (If reject reason is NULL then “N/A”\nIf paymentStatus = “Cancelled” then “Cancelled”"},"amount":{"type":"string","description":"paid amount"},"currency":{"type":"string","description":"Payment currency"},"orderTime":{"type":"string","description":"Order Time (UTC +0 without timezone)"},"paymentTime":{"type":"string","description":"Payment time (UTC +0 without timezone) \n\nRemark: paymentTime will not response if the payment status is cancelled."}}}}}},"examples":{"Response JSON":{"value":{"code":0,"message":"success","data":{"company_code":"AAFX","payment_info":"ADJ254Ckjklam234hkjbsakfhakljwh435kh13qw32q","payment_sha":"JNJmk9Fmjahq234asdjfbkjqhw4sD"}}},"Response Data":{"value":{"companyCode":"AAAX","externalAcouuntCode":"ref-1","externalReferenceCode":"ABC-0019890","paymentStatus":"Paid","remarks":"Paid","amount":3888.88,"currency":"hkd","orderTime":"2020-04-06","paymentTime":"2020-04-06"}}}}}},"201":{"description":"Response Failed","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"-1"},"message":{"type":"string","description":"\"Error Message (Refer to Appendix III)\""},"data":{"type":"string"}}},"examples":{"JSON sample":{"value":{"code":-1,"message":"Sha 256 data does not match","data":null}}}}}}},"operationId":"get-api-psms-cfms-paymentinfo-referencecode","description":"Merchant can use Restful API to retrieve payment info in JSON format as on-demand basis by searching external reference code.\n\nRemark: If no searching criteria filled, API will only return the last 50 payments for the searching company code.\n\nRequest JSON sample:\n\n{\"externalReferenceCode\":\"ABC123454\"}\n\nRequest GET sample:\n\nhttps://uat-cpsms-api.luckymario.com/api/psms/cfms/paymentinfo?company_code=ABCD&payment_info=O3GSF9Z4JSJM3&payment_sha=JJD2184akl6SDaj03r\n","parameters":[{"schema":{"type":"string"},"in":"query","name":"company_code","description":"Company Code / Merchant Code"},{"schema":{"type":"string"},"in":"query","name":"payment_info","description":"Request data encrypted with AES-256"},{"schema":{"type":"string"},"in":"query","name":"payment_sha","description":"Hash payment_info with SHA-256\n\nthe string content for doing SHA-256 should be like:\n\nHashKey={HashKey assigned for this company}&{payment_info}&HashIV= {HashIVKey assigned for this company}\n\nRemarks: and the hashed SHA string has to be transform to all UPPER cases.\n"},{"schema":{},"in":"query","name":"Request data"},{"schema":{"type":"string"},"in":"query","name":"externalReferenceCode","description":"Reference Code"}],"tags":["Payment Ticket"]}},"/api/psms/cfms/paymentinfo":{"get":{"summary":"Restful Mode (multiple searching criteria)","description":"**Purpose**\n\nA GET method to get a batch of payment ticket with their detail by specify searching criteria.\n<br><br>\n**Please note:-**\n\n***payment_info*** - encrypt the request data by using the provided secret key with AES-256 encryption mechanism.\n\n***payment_sha*** - Hash the payment_info with SHA-256 and provided IV Key and the hashed string must be in <U>UPPER CASE</U>.  The string for doing the SHA Hashing should be like this:\n<br>\nHashKey={Secret Key}&{payment_info}&HashIV={IV Key}\n<br><br>\nIf no searching criteria filled, API will only return the last 50 payments for the searching company code.\n\n***Request JSON sample:***\n\n{\"paymentStatus\":\"Paid\",\"fromTime\":\"2020-03-06 00:00:00.00Z\",\"toTime\":\"2020-03-06 23:00:00.00Z\"}\n\n***Request GET sample:***\n\nhttps://api.luckymario.com/api/psms/cfms/paymentinfo?company_code=ABCD&payment_info=O3GSF9Z4JSJM3&payment_sha=JJD2184akl6SDaj03r","tags":["Payment Ticket"],"operationId":"get-api-psms-cfms-paymentinfo","parameters":[{"schema":{"type":"string"},"in":"query","name":"company_code","description":"Company Code","required":true},{"schema":{"type":"string"},"in":"query","name":"payment_info","description":"Request data encrypted with AES-256","required":true},{"schema":{"type":"string"},"in":"query","name":"payment_sha","description":"Hash payment_info with SHA-256","required":true},{"schema":{},"in":"query","name":"Request data","description":"a JSON data of paymentStatus ExternalAccountCode, fromTime, toTime, Page, size"},{"schema":{"type":"string"},"in":"query","name":"paymentStatus","description":"(Optional) \"Paid\" ,  “Rejected” or “Cancelled”"},{"schema":{"type":"string"},"in":"query","name":"ExternalAccountCode","description":"(Optional)"},{"schema":{"type":"string"},"in":"query","name":"fromTime","description":"(Optional) (Order Time)\n“yyyy-MM-dd HH:mm:ss.SSS’Z’”   *in UTC +0\n"},{"schema":{"type":"string"},"in":"query","name":"toTime","description":"(Optional) (Order Time)\n“yyyy-MM-dd HH:mm:ss.SSS’Z’” *in UTC +0\n"},{"schema":{"type":"string"},"in":"query","name":"Page ","description":"(optional) default value is 0"},{"schema":{"type":"string"},"in":"query","name":"size","description":"(optional) default value is 50, Max value is 100"}],"responses":{"200":{"description":"Response Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"“0”"},"message":{"type":"string","description":"“Success”"},"data":{"type":"object","description":"JSON","properties":{"company_code":{"type":"string","description":"Company Code"},"payment_info":{"type":"string","description":"Request data encrypted with AES-256"},"payment_sha":{"type":"string","description":"Payment_info has with SHA-256"},"total_counts":{"type":"integer"},"total_pages":{"type":"integer"}}},"Response data":{"type":"array","items":{"type":"object","properties":{"companyCode":{"type":"string","description":"Company Code"},"externalAcouuntCode":{"type":"string","description":"External Account Code"},"externalReferenceCode":{"type":"string","description":"External Reference Code"},"paymentStatus":{"type":"string","description":"\"Paid\", “Rejected” or “Cancelled”"},"remarks":{"type":"string","description":"If paymentStatus = “Paid” then “Paid”\nIf paymentStatus = “Rejected” then {reject reason}\nIf paymentStatus = “Cancelled” then “Cancelled”\n"},"amount":{"type":"string","description":"paid amount"},"currency":{"type":"string","description":"Payment currency"},"orderTime":{"type":"string","description":"Order Time (UTC +0 without timezone)"},"paymentTime":{"type":"string","description":"Payment time (UTC +0 without timezone) \n\nRemark: paymentTime will not response if the payment status is cancelled."}}}}}},"examples":{"Response JSON":{"value":{"code":0,"message":"success","data":{"company_code":"ABCD","payment_info":"ADJ254Ckjklam234hkjbsakfhakljwh435kh13qw32q","payment_sha":"JNJmk9Fmjahq234asdjfbkjqhw4sD"}}},"Response Data":{"value":{"companyCode":"AAAX","externalAcouuntCode":"ref-1","externalReferenceCode":"ABC-0019890","paymentStatus":"Paid","remarks":"Paid","amount":3888.88,"currency":"hkd","orderTime":"2020-04-06","paymentTime":"2020-04-06"}}}}}},"201":{"description":"Response Failed","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"-1"},"message":{"type":"string","description":"“Error Message (Refer to Appendix III)”"},"data":{"type":"string"}}},"examples":{"JSON Example":{"value":{"code":-1,"message":"Sha 256 data does not match","data":null}}}}}}}}},"/api/fisp/user/third-party/register":{"post":{"summary":"Setup a Payment Account","description":"**Purpose**\n\nA payment account is required to initiate a payment ticket.  Company has to setup payment account to represent each of the customer in their platform.,\n\n**Please note:-**\n\n***fisp_login_name*** - this is an email address and unique to represent the ID of the payment account in Lucky Mario Payment Service.\n\n***external_account_code*** - this is an external reference account code for company to map with the customer ID in their platorm.                                                                                                                                                                ","operationId":"post-user","parameters":[{"schema":{"type":"string"},"in":"header","name":"Content-Type: application/json","description":""}],"tags":["Payment Account"],"requestBody":{"content":{"application/json":{"schema":{"description":"Setup a Payment Account","type":"object","properties":{"company_code":{"type":"string","description":"Company Code"},"users":{"type":"array","description":"List of Account Setup Data","items":{"type":"object","properties":{"fisp_login_name":{"type":"string","description":"Login Name (A valid Email Address)"},"first_name":{"type":"string","description":"Account Owner First Name"},"last_name":{"type":"string","description":"Account Owner Last Name"},"mobile":{"type":"string","description":"Valid Mobile Number"},"mobile_region_code":{"type":"string","description":"Mobile phone country code (in ISO 3166-1 alpha-2 format)"},"external_account_code":{"type":"string","description":"Reference Account Code to map with the Account Owner's ID in Company Platform"}},"required":["fisp_login_name","first_name","last_name","mobile","mobile_region_code","external_account_code"]}}},"required":["company_code","users"]},"examples":{"JSON Example":{"value":{"company_code":"ABCD","users":[{"fisp_login_name":"david.chan@abcd.com","first_name":"David","last_name":"Chan","mobile":"99886655","mobile_region_code":"HK","external_account_code":"ABCD-001001"}]}}}}},"description":""},"responses":{"200":{"description":"Response Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"Return code, 0 is normal, -1 is exception"},"message":{"type":"string","description":"success"},"data":{"type":"array","description":"List of Account Setup Data","items":{"type":"object","properties":{"fisp_login_name":{"type":"string","description":"Login Name (A valid Email Address)"},"first_name":{"type":"string","description":"Account Owner First Name"},"last_name":{"type":"string","description":"Account Owner Last Name"},"mobile":{"type":"string","description":"Valid Mobile Number"},"mobile_region_code":{"type":"string","description":"Mobile phone country code (in ISO 3166-1 alpha-2 format)"},"external_account_code":{"type":"string","description":"Reference Account Code to map with the Account Owner's ID in Company Platform"}},"required":["fisp_login_name","first_name","last_name","mobile","mobile_region_code","external_account_code"]}}},"required":["code","message","data"]},"examples":{"JSON Example":{"value":{"code":0,"message":"success","data":[{"fisp_login_name":"david.chan@abcd.com","first_name":"David","last_name":"Chan","mobile":"99886655","mobile_region_code":"HK","external_account_code":"ABCD-001001"}]}}}}}},"201":{"description":"Response Failed","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"Return code, 0 is normal, -1 is exception"},"message":{"type":"string","description":"Error Message (Refer to Appendix III)"},"data":{"type":"string"}},"required":["code","message"]},"examples":{"JSON Example":{"value":{"code":-1,"message":"Company code is not found","data":null}}}}}}}},"parameters":[]},"/api/fisp/user":{"get":{"summary":"Enquiry a Payment Account","description":"**Purpose**\n\nA Simple Get function for company to enqiry whether the payment account is exist by searching external_account_code.\n\n**Sample Query:**\n\nhttps://api.luckymario.com/api/fisp/user/?company_code=abcd&external_account_code=ABCD-001001\n","operationId":"get-api-fisp-user","tags":["Payment Account"],"parameters":[{"schema":{"type":"string"},"in":"query","description":"Company Code","name":"company_code","required":true},{"schema":{"type":"string"},"in":"query","name":"external_account_code","required":true,"description":"Reference Account Code to map with the Account Owner's ID in Company Platform"}],"responses":{"200":{"description":"Response Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"Return code, 0 is normal, -1 is exception"},"message":{"type":"string","description":"success"},"data":{"type":"array","description":"List of Account Setup Data","items":{"type":"object","properties":{"fisp_login_name":{"type":"string","description":"Login Name (A valid Email Address)"},"first_name":{"type":"string","description":"Account Owner First Name"},"last_name":{"type":"string","description":"Account Owner Last Name"},"mobile":{"type":"string","description":"Valid Mobile Number"},"mobile_region_code":{"type":"string","description":"Mobile phone country code (in ISO 3166-1 alpha-2 format)"},"external_account_code":{"type":"string","description":"Reference Account Code to map with the Account Owner's ID in Company Platform"},"company_code":{"type":"string","description":"Company Code"}}}}}},"examples":{"JSON Sample":{"value":{"code":0,"message":"success","data":{"fisp_login_name":"david.chan@abcd.com”,","first_name":"David","last_name":"Chan","mobile":"99886655","mobile_region_code":"HK","external_account_code":"ABCD-001001","company_code":"ABCD"}}}}}}},"201":{"description":"Response Failed","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","description":"-1"},"message":{"type":"string","description":"Error Message (Refer to Appendix III)"},"data":{"type":"string"}}},"examples":{"JSON Sample":{"value":{"code":-1,"message":"Company code is not found","data":null}}}}}}}},"parameters":[]},"/Return and Cancel URL":{"get":{"responses":{"200":{"description":"OK"}},"operationId":"get-Return-and-Cancel-URL","description":"**Purpose**\n\nWhen a payment is completed by payment account owner from payment gateway page, the front-end client browser page will be re-direct back to the pre-defined <U>Return URL</U> with querystrings.\n\nIf payment acount owner click cancel button from payment gateway page, the web re-direction will be on <U>Cancel URL</U>.\n\n    Query String Name          Type    Description\n    order_id                  String    PSMS ticker number for this payment\n    status                      String    Paid/Rejected/Cancelled\n    external_reference_code      String    Reference Code provided by Merchant \n    total_amount              String    Payment amount\n    currency                  String    Currency Code\n    order_time                  Date    Order time (UTC +0 without timezone)\n\n","tags":["Payment Notification"],"summary":"Synchronized Notification"}}},"components":{"schemas":{},"securitySchemes":{}},"tags":[{"name":"Payment Account","description":"*Account for initiate payment ticket.*"},{"name":"Payment Ticket","description":"Initiate a payment ticket and enquiry a payment detail"},{"description":"Synchronized & Asynchronized Notification","name":"Payment Notification"}]}