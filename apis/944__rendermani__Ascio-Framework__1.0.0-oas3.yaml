penapi: '3.0.2'
info:
    description: This is the REST-API for the Ascio-Framework 
    version: "1.0.0-oas3"
    title: Ascio Famework
    termsOfService: 'https://www.ascio.com'
    contact:
        email: manuel.lautenschlager@ascio.com
    license:
        name: Apache 2.0
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
-   name: framework
    description: Sync and manage ascio-data
    externalDocs:
        description: API-Documentation
        url: 'https://aws.ascio.info'
-   name: domain
    description: Domain operations
    externalDocs:
        description: Manage domains
        url: 'https://aws.ascio.info/domains-api-v2/php5/login'
-   name: order
    description: Order produced by updates
paths:
    /domain:
        post:
            tags:
                - domain
            summary: Register a domain
            operationId: registerDomain
            responses:
                '401':
                    description: Authentification failed
                '402':
                    description: Permission denied
                '405':
                    description: Invalid input
                '406':
                    description: Validation exceptions
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Domain'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Domain'
                description: The Domain parameters
                required: true
        put:
            tags:
                -   domain
            summary: Update an existing domain
            operationId: updateDomain
            responses:
                '200':   
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Tasks'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Tasks'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Domain not found
                '405':
                    description: Invalid input
                '406':
                    description: Validation exception
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Domain'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Domain'
                description: Update a Domain
                required: true
    /domain/getByName/{domainName}:
        get:
            tags:
                - domain
            summary: Finds Domains by Domain-Name
            description: Provide a Domain-Name to retrieve the Domain
            operationId: getDomainByName
            parameters:
                -   name: domainName
                    in: path
                    description: The Domain-Name
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Domain'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Domain'
                '404':
                    description: Domain not found
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
    /domain/getByHandle/{handle}:
        get:
            tags:
                - domain
            summary: Finds Domains by Domain-Handle
            description: Provide a Domain-Handle to retrieve the Domain
            operationId: findDomainByHandle
            parameters:
                -   name: handle
                    in: path
                    description: The Ascio-Handle of a Domain
                    required: true
                    explode: true
                    schema:
                        type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Domain'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Domain'
                '404':
                    description: Domain not found
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
    /domain/findByStatus:
        get:
            tags:
                - domain
            summary: Finds Domains by status
            description: >-
                Muliple statuses can be provided with comma separated strings. Use status1,
                status2, status3.
            operationId: findDomainsbyStatus
            parameters:
                -   name: status
                    in: query
                    description: Status to filter by
                    required: true
                    explode: true
                    schema:
                        type: array
                        items:
                            type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Domain'
                        application/xml:
                            schema:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Domain'
                '400':
                    description: Invalid status value
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
    '/domain/{domainId}':
        get:
            tags:
                - domain
            summary: Find domain by ID
            description: Returns a single domain
            operationId: getDomainById
            parameters:
                -   name: domainId
                    in: path
                    description: ID of domain to return
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Domain'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Domain'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Domain not found
            security:
                - api_key: []
        delete:
            tags:
                - domain
            summary: Deletes a domain
            operationId: deleteDomain
            parameters:
                -   name: api_key
                    in: header
                    required: false
                    schema:
                        type: string
                -   name: domainId
                    in: path
                    description: Domain id to delete
                    required: true
                    schema:
                        type: string
            responses:
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Domain not found
            security:
                - framework_auth:
                    - 'write:domains'
                    - 'read:domains'
    '/order/{orderId}':
        get:
            tags:
                - store
            summary: Find purchase order by ID
            description: 
                Get an order buy orderId. OrderIds will be returned when creating or updating a domain, SSL, Defefensiv, TMCH, NameWatch object. 
            operationId: getOrderById
            parameters:
                -   name: orderId
                    in: path
                    description: The OrderId that needs to be fetched
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Order'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Order'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Order not found
    /user:
        post:
            tags:
                - user
            summary: Create user
            description: This can only be done by the logged in user.
            operationId: createUser
            responses:
                default:
                    description: successful operation
            requestBody:
                content:
                    application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                description: Created user object
                required: true
    '/user/{username}':
        get:
            tags:
                - user
            summary: Get user by user name
            operationId: getUserByName
            parameters:
                -   name: username
                    in: path
                    description: The name that needs to be fetched. Use user1 for testing.
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/User'
                '400':
                    description: Invalid username supplied
                '404':
                    description: User not found
        put:
            tags:
                - user
            summary: Updated user
            description: name that need to be updated
            operationId: updateUser
            parameters:
                -   name: username
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '400':
                    description: Invalid user supplied
                '404':
                    description: User not found
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                description: Updated user object
                required: true
        delete:
            tags:
                - user
            summary: Delete user
            description: name that need to be deleted.
            operationId: deleteUser
            parameters:
                -   name: username
                    in: path                
                    required: true
                    schema:
                        type: string
            responses:
                '400':
                    description: Invalid username supplied
                '404':
                    description: User not found
externalDocs:
    description: Find out more about Swagger
    url: 'http://swagger.io'
servers:
    - url: 'https://virtserver.swaggerhub.com/rendermani/Ascio-Framework/1.0.0'
components:
    requestBodies:
        UserArray:
            content:
                application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
            description: List of user object
            required: true
    securitySchemes:
        framework_auth:
            type: oauth2
            flows:
                implicit:
                    authorizationUrl: 'http://domains.swagger.io/oauth/dialog'
                    scopes:
                        'write:domains': modify domains in your account
                        'read:domains': read your domains
        api_key:
            type: apiKey
            name: api_key
            in: header
    schemas:
        Order:
            type: object
            properties:
                id:
                    type: string
                OrderId:
                    type: string     
                Type:
                    type: string
                AccountReference:
                    type: string
                Status:
                    type: string 
                TransactionComment: 
                    type: string
                Comments: 
                    type: string
                Options: 
                    type: string
                LocalPresence: 
                    type: string
                Batch: 
                    type: string
                Documentation: 
                    type: string
                Domamin:
                    $ref: '#/components/schemas/Domain'
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                email:
                    type: string
                password:
                    type: string
                phone:
                    type: string
                userStatus:
                    type: integer
                    format: int32
                    description: User Status
        Domain:
            type: object
            properties:
                DomainName:
                    type: string
                DomainHandle:
                    type: string
                RegPeriod:
                    type: string
                RenewPeriod:
                    type: string
                Status: 
                    type: string
                AuthInfo:
                    type: string
                CreDate:
                    type: string
                ExpDate:
                    type: string
                EncodingType:
                    type: string
                DomainPurpose:
                    type: string
                Comment:
                    type: string
                TransferLock:
                    type: string
                DeleteLock:
                    type: string
                UpdateLock:
                    type: string
                QueueType:
                    type: string
                Registrant:
                    $ref: '#/components/schemas/Registrant'
                AdminContact:
                    $ref: '#/components/schemas/Contact'
                TechContact:
                    $ref: '#/components/schemas/Contact'
                BillingContact:
                    $ref: '#/components/schemas/Contact'
                ResellerContact:
                    $ref: '#/components/schemas/Contact'
                NameServers:
                    type: object
                    properties:
                        NameServer1: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer2: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer3: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer4: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer5: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer6: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer7: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer8: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer9: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer10: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer11: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer12: 
                            $ref: '#/components/schemas/NameServer'
                        NameServer13:
                            $ref: '#/components/schemas/NameServer'
                Trademark:
                    $ref: '#/components/schemas/Trademark' 
                DnsSecKeys:
                    type: array
                    items:    
                        $ref: '#/components/schemas/DnsSecKey' 
                PrivacyProxy:
                    $ref: '#/components/schemas/PrivacyProxy' 
                DomainType:
                    type: string
                DiscloseSocialData:
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        NameServer:
            type: object
            properties:
                CreDate:
                    type: string
                Handle:
                    type: string
                HostName:
                    type: string
                IpAddress: 
                    type: string
                Status:
                    type: string
                IpV6Address:
                    type: string
                Details:
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        Registrant:
            type: object
            properties: 
                CreDate: 
                    type: string
                Status: 
                    type: string
                Handle: 
                    type: string
                Name: 
                    type: string
                OrgName: 
                    type: string
                Address1: 
                    type: string
                Address2: 
                    type: string
                City: 
                    type: string
                State: 
                    type: string
                PostalCode: 
                    type: string
                CountryCode: 
                    type: string
                Email: 
                    type: string
                Phone: 
                    type: string
                Fax: 
                    type: string
                RegistrantType: 
                    type: string
                VatNumber: 
                    type: string
                RegistrantDate: 
                    type: string
                NexusCategory: 
                    type: string
                RegistrantNumber: 
                    type: string
                Details: 
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        Contact:
            type: object
            properties: 
                CreDate: 
                    type: string
                Status: 
                    type: string
                Handle: 
                    type: string
                FirstName: 
                    type: string
                LastName: 
                    type: string
                OrgName: 
                    type: string
                Address1: 
                    type: string
                Address2: 
                    type: string
                PostalCode: 
                    type: string
                City: 
                    type: string
                State: 
                    type: string
                CountryCode: 
                    type: string
                Email: 
                    type: string
                Phone: 
                    type: string
                Fax: 
                    type: string
                Type: 
                    type: string
                Details: 
                    type: string
                OrganisationNumber: 
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        DbAttributes:
            type: object
            properties:
                _id: 
                    type: string
                _ext_id: 
                    type: string
                _account: 
                    type: string
                _environment: 
                    type: string
                _client: 
                    type: string
                _admin: 
                    type: string
                _part_of_order: 
                    type: boolean
                _config: 
                    type: string
                _order: 
                    type: string
                _hash: 
                    type: string
                _type: 
                    type: string
                _parent_id: 
                    type: string
                _parent_type: 
                    type: string
                _parent_db_type: 
                    type: string
                created_at: 
                    type: string
                updated_at: 
                    type: string
        Trademark:
            type: object
            properties:
                Name:
                    type: string
                Country:
                    type: string
                Date:
                    type: string
                Number:
                    type: string
                Type:
                    type: string
                Contact:
                    type: string
                ContactLanguage:
                    type: string
                DocumentationLanguage:
                    type: string
                SecondContact:
                    type: string
                ThirdContact:
                    type: string
                RegDate:
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        DnsSecKey:
            type: object
            properties: 
                DigestAlgorithm:
                    type: string
                DigestType:
                    type: string
                Digest:
                    type: string
                KeyTag:
                    type: string
                PublicKey:
                    type: string 
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        PrivacyProxy:
            type: object
            properties:
                Type:
                    type: string
                PrivacyAdmin:
                    type: string
                PrivacyTech:
                    type: string
                PrivacyBilling:
                    type: string
                Extensions:
                    type: array
                    items: 
                        $ref: '#/components/schemas/Extension'
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'  
        Extension:
            type: object
            properties: 
                Key: 
                    type: string
                Value: 
                    type: string
                DbAttributes:
                    $ref: '#/components/schemas/DbAttributes'
        Tasks:
            type: object