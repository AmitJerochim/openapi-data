{"openapi":"3.0.0","info":{"title":"iot-Portal-API","description":"200331.2400","version":"190819","x-logo":{"url":"logo.jpg","backgroundColor":"#FFFFFF","altText":":: iot-Portal-API ::"}},"servers":[{"description":"```iot-Portal-API base endpoint```","url":"https://api.iothor.com/latest"}],"tags":[{"name":"auth","description":"```authentication```"},{"name":"account","description":"```manage accounts```"},{"name":"user","description":"```manage users```"},{"name":"device","description":"```manage devices```"},{"name":"event","description":"```manage events```"},{"name":"CORS","description":"```handle CORS```"}],"paths":{"/login":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"post":{"tags":["auth"],"summary":"","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}}},"responses":{"201":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Login"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"auth_Login\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\"}}"},"responses":{"default":{"statusCode":"201","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/account":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["account"],"summary":"Get account profile","parameters":[{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountProfile"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_GetProfile\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"put":{"tags":["account"],"summary":"Save account profile","parameters":[{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SaveAccountProfileRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_SaveProfile\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"post":{"tags":["account"],"summary":"Register new account & initiate activation","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}}},"responses":{"201":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_Register\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\"}}"},"responses":{"default":{"statusCode":"201","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/account/activate":{"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"put":{"tags":["account"],"summary":"Activate account","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountActivateRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_Activate\", \"body\": $input.json('$')}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/account/reset":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"post":{"tags":["account"],"summary":"Initiate account password reset by email","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InitiateResetPasswordRequest"}}}},"responses":{"201":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_InitiateResetPassword\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\"}}"},"responses":{"default":{"statusCode":"201","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/account/password":{"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"put":{"tags":["account"],"summary":"Reset account password & replace with a new one","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_ResetPassword\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"post":{"tags":["account"],"summary":"Change account password","parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordRequest"}}}},"responses":{"201":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_ChangePassword\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"201","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/account/settings":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["account"],"summary":"Get account settings","responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountSettings"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_GetSettings\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"put":{"tags":["account"],"summary":"Save account settings","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountSettings"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"account_SaveSettings\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/user":{"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["user"],"summary":"Get users of account / Get user invitations","parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"in":"query","name":"inviteMail","required":false,"schema":{"type":"string","format":"email"},"description":"```If this field is empty, service returns the users that have been invited to share this account defined by (iotAccId)```<br>```If an email address is given here, pending user invitations belonging to this account defined by (inviteMail) are returned```"}],"responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccountUser"}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_GetAccountUserList\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"inviteMail\": \"$input.params('inviteMail')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"post":{"tags":["user"],"summary":"Invite a new user","parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InviteAccountUserRequest"}}}},"responses":{"201":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_InviteAccountUser\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"201","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"put":{"tags":["user"],"summary":"Accept or reject account invitation","parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RespondToAccountInviteRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_RespondToAccountInvite\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/user/{userId}":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/userIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["user"],"summary":"Get account user","responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountUser"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_GetAccountUser\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"userId\": \"$input.params('userId')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"put":{"tags":["user"],"summary":"Save account user","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SaveAccountUserRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_SaveAccountUser\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"userId\": \"$input.params('userId')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"delete":{"tags":["user"],"summary":"Remove account user","parameters":[{"in":"query","name":"deviceId","required":false,"schema":{"type":"string","format":"idid"},"description":"```If set, service only removes the sharing for this device```"}],"responses":{"204":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"user_RemoveAccountUser\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"userId\": \"$input.params('userId')\", \"deviceId\": \"$input.params('deviceId')\"}}"},"responses":{"default":{"statusCode":"204","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/device":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["device"],"summary":"Get device list","parameters":[{"in":"query","name":"bare","required":false,"schema":{"type":"boolean"},"description":"```If set true, service returns only the DeviceBase schema```"},{"in":"query","name":"accountId","required":false,"schema":{"type":"string","format":"uuid"},"description":"```If set, service returns only the devices that belong to the specified account```"},{"in":"query","name":"flag","required":false,"schema":{"type":"boolean"},"description":"```If set true, service returns only the devices that has new events```<br>```If set false, only the devices without new events are returned```"},{"in":"query","name":"type","required":false,"schema":{"type":"string","enum":["tempTHOR","temp2THORNs","temp2THORNb","acTHOR","bubbleTHOR"]},"description":"```If set, service returns only the specified type of devices```"}],"responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeviceItem"}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_GetDeviceList\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"bare\": \"$input.params('bare')\", \"accountId\": \"$input.params('accountId')\", \"flag\": \"$input.params('flag')\", \"type\": \"$input.params('type')\" }}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/device/{deviceId}":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/deviceIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["device"],"summary":"Get device details","responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceDetail"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_GetDevice\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/device/{deviceId}/data":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/deviceIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["device"],"summary":"Get device data","parameters":[{"in":"query","name":"modality","required":true,"schema":{"type":"string","enum":["t","r","u","s","f","g","1","2"]},"description":"```Modality code ('t':temperature, 'r':temperature2, 'u':humidity, 's':humidity2, 'f':flow, 'g':flow-st.dev, '1':action1, '2':action2)```<br>```(availability depends on device type)```"},{"in":"query","name":"hours","schema":{"type":"integer"},"description":"```If set, service returns only the latest data for this much hours (default 24)```"},{"in":"query","name":"dtOrder","required":false,"schema":{"type":"string","enum":["asc","desc"]},"description":"```the date-time order of records to be fetched (default 'desc')```"}],"responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeviceData"}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_GetDeviceData\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\", \"modality\": \"$input.params('modality')\", \"hours\": \"$input.params('hours')\", \"dtOrder\": \"$input.params('dtOrder')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/device/{deviceId}/settings":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/deviceIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["device"],"summary":"Get device settings","responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceSettings"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_GetDeviceSettings\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"put":{"tags":["device"],"summary":"Save device settings","requestBody":{"description":"```Format for request```","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceSettings"}}}},"responses":{"202":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_SaveDeviceSettings\", \"body\": $input.json('$'), \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\"}}"},"responses":{"default":{"statusCode":"202","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/device/{deviceId}/sharing":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/deviceIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"delete":{"tags":["device"],"summary":"Unshare device","responses":{"204":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"device_UnshareDevice\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\"}}"},"responses":{"default":{"statusCode":"204","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/event":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"get":{"tags":["event"],"summary":"Get events","parameters":[{"in":"query","name":"deviceId","required":false,"schema":{"type":"string","format":"idid","example":"HuzESP6600A9282C0016405E5c3cecdf"},"description":"```If set, service returns only the events related with this device```"},{"in":"query","name":"eventClass","schema":{"type":"string","enum":["data","device","both"]},"description":"```The class of events to fetch (default 'data')```"},{"in":"query","name":"modality","required":false,"schema":{"type":"string","enum":["*","t","r","u","s","f","g","1","2"]},"description":"```Modality code for data class events to fetch (default='*')```<br>```('*':all, 't':temperature, 'r':temperature2, 'u':humidity, 's':humidity2, 'f':flow, 'g':flow-st.dev, '1':action1, '2':action2)```<br>```(availability depends on device type)```<br>```(this option is only relevant for data class events)```"},{"in":"query","name":"onlyNew","schema":{"type":"boolean"},"description":"```If set true, service returns only the new/unseen events```"},{"in":"query","name":"pageToken","required":false,"schema":{"type":"string"},"description":"```The page token of requested record set```"},{"in":"query","name":"dtOrder","required":false,"schema":{"type":"string","enum":["asc","desc"]},"description":"```the date-time order of records to be fetched (default 'desc')```"},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","minimum":1,"maximum":50,"default":20},"description":"```The numbers of items to return```"}],"responses":{"200":{"description":"```Successful response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Expose-Headers":{"schema":{"type":"string"}},"iotNext":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeviceEvent"}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"event_GetEventList\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"onlyNew\": \"$input.params('onlyNew')\", \"eventClass\": \"$input.params('eventClass')\", \"modality\": \"$input.params('modality')\", \"deviceId\": \"$input.params('deviceId')\", \"pageToken\": \"$input.params('pageToken')\", \"limit\": \"$input.params('limit')\", \"dtOrder\": \"$input.params('dtOrder')\"}}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.iotNext":"integration.response.body.header.iotNext","method.response.header.Access-Control-Expose-Headers":"'iotNext'","method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},"delete":{"tags":["event"],"summary":"Unflag events","parameters":[{"in":"query","name":"deviceId","required":false,"schema":{"type":"string","format":"idid","example":"HuzESP6600A9282C0016405E5c3cecdf"},"description":"```If set, service unflags only the events related with this device```"},{"in":"query","name":"eventClass","schema":{"type":"string","enum":["data","device","both"]},"description":"```The class of events to unflag (default 'data')```"},{"in":"query","name":"modality","required":false,"schema":{"type":"string","enum":["*","t","r","u","s","f","g","1","2"]},"description":"```Modality code for data class events to unflag (default='*')```<br>```('*':all, 't':temperature, 'r':temperature2, 'u':humidity, 's':humidity2, 'f':flow, 'g':flow-st.dev, '1':action1, '2':action2)```<br>```(availability depends on device type)```<br>```(this option is only relevant for data class events)```"}],"responses":{"204":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"event_ClearEvents\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"deviceId\": \"$input.params('deviceId')\", \"eventClass\": \"$input.params('eventClass')\", \"modality\": \"$input.params('modality')\"}}"},"responses":{"default":{"statusCode":"204","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}},"/event/{eventId}":{"parameters":[{"$ref":"#/components/parameters/iotAppIdParam_inHdr"},{"$ref":"#/components/parameters/iotAppVerParam_inHdr"},{"$ref":"#/components/parameters/iotAccIdParam_inHdr"},{"$ref":"#/components/parameters/iotTokenParam_inHdr"},{"$ref":"#/components/parameters/eventIdParam_inPath"}],"options":{"tags":["CORS"],"summary":"","responses":{"200":{"description":"```Default CORS response```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}},"Access-Control-Allow-Methods":{"schema":{"type":"string"}},"Access-Control-Allow-Headers":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}}},"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"{\"statusCode\":200}"},"responses":{"default":{"statusCode":"200","responseParameters":{"method.response.header.Access-Control-Allow-Headers":"'Content-Type,iotAppId,iotAppVer,iotAccId,iotToken,iotCount,iotNext,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'","method.response.header.Access-Control-Allow-Methods":"'GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH'","method.response.header.Access-Control-Allow-Origin":"'*'"}}},"passthroughBehavior":"when_no_match"}},"delete":{"tags":["event"],"summary":"Mark event as 'seen'","responses":{"204":{"$ref":"#/components/responses/Successful"},"400":{"$ref":"#/components/responses/BadRequest"},"500":{"$ref":"#/components/responses/ServerError"}},"x-amazon-apigateway-integration":{"type":"aws","uri":"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:485230977227:function:iot-portal-api-Lambda-1RTC9JH661NOU/invocations","httpMethod":"POST","requestTemplates":{"application/json":"{\"fun\": \"event_ClearSingleEvent\", \"parameters\": {\"iotAppId\": \"$input.params('iotAppId')\", \"iotAppVer\": \"$input.params('iotAppVer')\", \"iotAccId\": \"$input.params('iotAccId')\", \"iotToken\": \"$input.params('iotToken')\", \"eventId\": \"$input.params('eventId')\"}}"},"responses":{"default":{"statusCode":"204","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"},"responseTemplates":{"application/json":"$input.json('$.body')"}},".*\"BadRequest\".*":{"statusCode":"400","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}},".*\"ServerError\".*":{"statusCode":"500","responseParameters":{"method.response.header.Access-Control-Allow-Origin":"'*'"}}}}}}},"components":{"parameters":{"iotAppIdParam_inHdr":{"in":"header","name":"iotAppId","required":true,"schema":{"type":"string","format":"uuid","example":"f9573dc5-f3d0-4336-b224-cd65566639f5"},"description":"```Application Id```"},"iotAppVerParam_inHdr":{"in":"header","name":"iotAppVer","required":true,"schema":{"type":"string"},"description":"```Application version```"},"iotAccIdParam_inHdr":{"in":"header","name":"iotAccId","required":true,"schema":{"type":"string","format":"uuid","example":"779bc58c-3870-4d93-9eed-57c73e815e55"},"description":"```Account Id```"},"iotTokenParam_inHdr":{"in":"header","name":"iotToken","required":true,"schema":{"type":"string","format":"token"},"description":"```Token```"},"userIdParam_inPath":{"in":"path","name":"userId","required":true,"schema":{"type":"string","format":"uuid","example":"779bc58c-3870-4d93-9eed-57c73e815e55"},"description":"```User's own account Id```"},"eventIdParam_inPath":{"in":"path","name":"eventId","required":true,"schema":{"type":"string","format":"ieid"},"description":"```Event Id```"},"deviceIdParam_inPath":{"in":"path","name":"deviceId","required":true,"schema":{"type":"string","format":"idid","example":"HuzESP6600A9282C0016405E5c3cecdf"},"description":"```Device Id```"}},"schemas":{"Empty":{"type":"object"},"Error":{"type":"object","properties":{"number":{"type":"integer","description":"```ioTHOR defined error number```"},"message":{"type":"string","description":"```User friendly error message```"},"stack":{"type":"string","description":"```Technical details of error```"}}},"AccountSettings":{"type":"object","properties":{"language":{"type":"string","description":"```language (en,es,tr ..)```"},"tempUnit":{"type":"string","description":"```temperature unit (F or C)```"},"chartHours":{"type":"integer","description":"```default date range selection in hours for device history```"}}},"LoginRequest":{"type":"object","properties":{"logId":{"type":"string"},"password":{"type":"string","format":"password"},"language":{"type":"string","description":"```language ('en','es','tr' ..) (default 'en')```"}},"required":["logId","password"]},"LoginAccountUser":{"type":"object","properties":{"accountId":{"type":"string","format":"uuid","description":"```User's account Id```"},"name":{"type":"string"},"userRole":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"devices":{"type":"string"}}},"Login":{"type":"object","properties":{"isLoggedIn":{"type":"boolean"},"accountId":{"type":"string","format":"uuid"},"token":{"type":"string","format":"token","description":"```Generated session token valid for 24h```"},"logId":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"settings":{"$ref":"#/components/schemas/AccountSettings"},"users":{"type":"array","items":{"$ref":"#/components/schemas/LoginAccountUser"}}}},"RegisterRequest":{"type":"object","required":["logId","password","confirm","name","email"],"properties":{"logId":{"type":"string","description":"```Login Id (can't be empty)```<br>```You can use A-Z, a-z, 0-9 and punctuation characters /._- without space (7-15 characters)```"},"password":{"type":"string","format":"password","description":"```Password (can't be empty)```<br>```You can use A-Z, a-z, 0-9 and punctuation characters /._- without space```<br>```Should include at least one number and at least one letter (7-15 characters)```"},"confirm":{"type":"string","format":"password","description":"```Should be the same as password```"},"name":{"type":"string","description":"```Full name (can't be empty, max. 31 characters)```"},"email":{"type":"string","format":"email","description":"```E-mail address (can't be empty)```"},"phone":{"type":"string","format":"phone","description":"```Phone number```<br>```If given, Phone number must start with + country code and shouldn't include any punctuation or space characters```"},"callbackUrl":{"type":"string","format":"url","example":"http://www.somename.com/account/activate","description":"If empty, then account will be created as directly usable.```<br>```If not, then an activation loop via email or sms will be executed where the link in the activation message will point to this url which should refer to a specific route on the application. (In this case the parameters below are also effective)```"},"activateBy":{"type":"string","enum":["email","phone"],"description":"```Method of activation (default 'email')```"},"schemaRegisterSubject":{"type":"string","description":"```Optional subject for the message.```"},"schemaRegisterContentText":{"type":"string","description":"```Optional content for the message; text part. (If given, the two schema options below must also be supplied)```<br>```(should include {0} to receive an url. Ex:'Activate by visiting the address {0}')```"},"schemaRegisterContentHtml":{"type":"string","description":"```Optional content for the message; html part```"},"schemaRegisterHtmlLinkText":{"type":"string","description":"```Optional text for the link button at the end of the html part```"}}},"AccountActivateRequest":{"type":"object","required":["iotAppId","iotAppVer","iotAccId","iotToken"],"properties":{"iotAppId":{"type":"string","format":"uuid","example":"f9573dc5-f3d0-4336-b224-cd65566639f5"},"iotAppVer":{"type":"string"},"iotAccId":{"type":"string","format":"uuid","example":"779bc58c-3870-4d93-9eed-57c73e815e55"},"iotToken":{"type":"string","format":"token","description":"```Previously generated register token valid for 24h```"}}},"InitiateResetPasswordRequest":{"type":"object","required":["email","callbackUrl"],"properties":{"email":{"type":"string","format":"email","description":"```E-mail address to send the reset message (can't be empty)```"},"callbackUrl":{"type":"string","format":"url","example":"http://www.somename.com/account/password","description":"```route for new password input by application in the reset message (can't be empty)```"},"schemaResetSubject":{"type":"string","description":"```Optional subject for the message.```"},"schemaResetContent1":{"type":"string","description":"```Optional content line 1 for the message. (If given, the three schema options below must also be supplied)```"},"schemaResetContent2Text":{"type":"string","description":"```Optional content line 2 for the message; text part```<br>```(should include {0} to receive an url. Ex:'Reset by visiting the address {0}')```"},"schemaResetContent2Html":{"type":"string","description":"```Optional content line 2 for the message; html part```"},"schemaResetHtmlLinkText":{"type":"string","description":"```Optional text for the link button at the end of the html part```"}}},"ResetPasswordRequest":{"type":"object","required":["iotAppId","iotAppVer","iotAccId","iotToken","password","confirm"],"properties":{"iotAppId":{"type":"string","format":"uuid","example":"f9573dc5-f3d0-4336-b224-cd65566639f5"},"iotAppVer":{"type":"string"},"iotAccId":{"type":"string","format":"uuid","example":""},"iotToken":{"type":"string","format":"token","description":"```Previously generated reset token valid for 15 minutes```"},"password":{"type":"string","format":"password","description":"```New password (can't be empty)```<br>```You can use A-Z, a-z, 0-9 and punctuation characters /._- without space```<br>```Should include at least one number and at least one letter (7-15 characters)```"},"confirm":{"type":"string","format":"password","description":"```Should be the same as password```"}}},"ChangePasswordRequest":{"type":"object","required":["current","password","confirm"],"properties":{"current":{"type":"string","format":"password","description":"```Current password (can't be empty)```"},"password":{"type":"string","format":"password","description":"```New password (can't be empty)```<br>```You can use A-Z, a-z, 0-9 and punctuation characters /._- without space```<br>```Should include at least one number and at least one letter (7-15 characters)```"},"confirm":{"type":"string","format":"password","description":"```Should be the same as password```"}}},"AccountProfile":{"type":"object","properties":{"name":{"type":"string","description":"```Full name```"},"logId":{"type":"string","description":"```Login Id```"},"email":{"type":"string","format":"email","description":"```E-mail address```"},"phone":{"type":"string","description":"```Phone number```"},"refId":{"type":"string","description":"```External reference```"}}},"SaveAccountProfileRequest":{"type":"object","required":["name","email"],"properties":{"name":{"type":"string","description":"```Full name (can't be empty, max. 31 characters)```"},"email":{"type":"string","format":"email","description":"```E-mail address (can't be empty)```"},"phone":{"type":"string","description":"```Phone number```<br>```If given, Phone number must start with + country code and shouldn't include any punctuation or space characters```"},"refId":{"type":"string","description":"```External reference```"}}},"AccountUser":{"type":"object","properties":{"shareId":{"type":"string","format":"uuid","description":"```Id of the user sharing record```"},"shareStatus":{"type":"string","enum":["Invited","Active","Rejected"],"description":"```User's status```","example":"Active"},"invitedBy":{"type":"string","description":"```Full name of the inviting account```<br>```(present only in the response for 'GET/user' endpoint when used with 'inviteMail' option)```"},"accountId":{"type":"string","format":"uuid","description":"```User's account Id```"},"name":{"type":"string","description":"```User's full name```"},"phone":{"type":"string","description":"```User's phone number```"},"userMail":{"type":"string","format":"email","description":"```User's e-mail address```"},"userRole":{"type":"string","enum":["basic","trusted","admin"],"example":"basic","description":"```User's role```"},"devices":{"type":"array","items":{"type":"string","format":"idid","description":"```Array of deviceId's of the devices that user is allowed to work with```"}},"created":{"type":"number","example":"1564466751","description":"```Epoch value (seconds since 1/1/1970) of creation date of the user sharing record (renewed with re-invitations on the same user sharing record)```"},"updated":{"type":"number","example":"1564466751","description":"```Epoch value of update date for the user sharing record```"},"responded":{"type":"number","example":"1564466751","description":"```Epoch value of the date of response from the user```"},"lastSeen":{"type":"number","example":"1564466751","description":"```Epoch value of user's last login date```"}}},"SaveAccountUserRequest":{"type":"object","required":["userRole"],"properties":{"userRole":{"type":"string","enum":["basic","trusted","admin"],"example":"basic","description":"```User's role (can't be empty)```"},"devices":{"type":"array","items":{"type":"string","format":"idid","description":"```Array of deviceId's of the devices that user is allowed to work with```"},"example":"['HuzESP6600A9282C0016405E5c3cecdf', 'HuzESP6600A92442C02264010bd7c06a4', ...]"}}},"InviteAccountUserRequest":{"type":"object","required":["invitedBy","userMail","callbackLoginUrl","callbackRegisterUrl"],"properties":{"invitedBy":{"type":"string","description":"```Full name of the account which is sending the invitation```<br>```(can't be empty, it will be used in the notifications for this invitation)```"},"userMail":{"type":"string","format":"email","description":"```E-mail address of the user to send the invitation (can't be empty)```"},"userRole":{"type":"string","enum":["basic","trusted","admin"],"example":"basic","description":"```User's role (default 'basic')```"},"devices":{"type":"string","description":"```comma seperated list of DeviceId's to be shared with the user```<br>```(If 'userRole' is other than 'admin' and 'devices' field is empty, users will not be able to work with any devices until the user sharing record is updated with a valid deviceId list by the inviting account)```"},"shareId":{"type":"string","format":"uuid","example":"ee283dc5-a1d0-4236-b12c-cd65567899f5","description":"```If a value is given here, system updates the user sharing record with this 'shareId' instead of creating a new one```<br>```This option can be used for repeating the invitation on the same record without creating a new share```"},"callbackLoginUrl":{"type":"string","format":"url","example":"http://www.somename.com/account/login","description":"```route for login to the application in the invitation message (if an account exists with this e-mail)```<br>```(can't be empty)```"},"callbackRegisterUrl":{"type":"string","format":"url","example":"http://www.somename.com/account/register","description":"```route for new account registration by application in the invitation message (if an account could not be found)```<br>```(can't be empty)```"},"schemaInviteSubject":{"type":"string","description":"```Optional subject for the message.```"},"schemaInviteContent1":{"type":"string","description":"```Optional content line 1 for the message. (If given, the five schema options below must also be supplied)```<br>```(should include {0} to receive a name. Ex:'You have been invited by {0}')```"},"schemaInviteContent2NewText":{"type":"string","description":"```Optional content line 2 for the message to send to users who doesn't have an account (text part)```<br>```(should include {0} to receive an url. Ex:'Approve by visiting the address {0}')```"},"schemaInviteContent2NewHtml":{"type":"string","description":"```Optional content line 2 for the message to send to users who doesn't have an account (html part)```"},"schemaInviteContent2OldText":{"type":"string","description":"```Optional content line 2 for the message to send to users who already has an account (text part)```<br>```(should include {0} to receive an url. Ex:'Approve by visiting the address {0}')```"},"schemaInviteContent2OldHtml":{"type":"string","description":"```Optional content line 2 for the message to send to users who already has an account (html part)```"},"schemaInviteHtmlLinkText":{"type":"string","description":"```Optional text for the link button at the end of the html part```"}}},"RespondToAccountInviteRequest":{"type":"object","required":["shareId","shareStatus"],"properties":{"shareId":{"type":"string","format":"uuid","example":"ee283dc5-a1d0-4236-b12c-cd65567899f5","description":"```Database key of this account sharing record```"},"shareStatus":{"type":"string","enum":["Active","Rejected"],"example":"Active","description":"```Accept or reject the invitation```"}}},"DeviceBase":{"type":"object","properties":{"deviceId":{"type":"string","format":"idid","example":"HuzESP6600A9282C0016405E5c3cecdf","description":"```Device Id```"},"account":{"$ref":"#/components/schemas/DeviceAccount"},"name":{"type":"string","description":"```Name of device```"},"type":{"type":"string","enum":["tempTHOR","temp2THORNs","temp2THORNb","acTHOR","bubbleTHOR"],"example":"tempTHOR","description":"```Type of device```"},"refId":{"type":"string","description":"```External reference```"}}},"DeviceSettingsBase":{"type":"object","properties":{"deviceId":{"type":"string","format":"idid","example":"HuzESP6600A9282C0016405E5c3cecdf","description":"```Device Id```","readOnly":true},"deviceName":{"type":"string","description":"```Device name (can't be empty)```<br>```You can use A-Z, a-z, 0-9 and punctuation characters /._- without space (max. 15 characters)```"},"deviceType":{"type":"string","enum":["tempTHOR","temp2THORNs","temp2THORNb","acTHOR","bubbleTHOR"],"description":"```Type of device```","example":"tempTHOR","readOnly":true},"deviceRefId":{"type":"string","description":"```Device external reference```"},"deviceSketch":{"type":"string","readOnly":true,"description":"```Firmware version of device```<br>```(Device needs firmware upgrade if this value starts with '!' character)```"},"deviceCreated":{"type":"integer","readOnly":true,"description":"```Epoch value (seconds since 1/1/1970) of device creation timestamp```"},"deviceUpdated":{"type":"integer","readOnly":true,"description":"```Epoch value (seconds since 1/1/1970) of last device parameters update timestamp```"},"deviceLogged":{"type":"integer","readOnly":true,"description":"```Epoch value (seconds since 1/1/1970) of last device connection timestamp```"},"deviceStatus":{"type":"string","enum":["offline","idle","online"],"example":"online","description":"```Device status```","readOnly":true},"deviceSubStatus":{"type":"string","description":"```Device sub-status```","readOnly":true},"notifyForConnectivity":{"type":"boolean","example":true,"description":"```Send notification when device goes online/offline```"},"notifyForPowerLoss":{"type":"boolean","example":true,"description":"```Send notification when status of external power source changes```"},"sendEmail":{"type":"boolean","example":true,"description":"```Send e-mail for notifications```"},"emailContent":{"type":"string","description":"```E-mail notification content```"},"emailAddresses":{"type":"array","items":{"type":"string","format":"email","description":"```array of E-mail addresses for notifications (max. 500 chars)```"}},"sendText":{"type":"boolean","example":true,"description":"```Send text message for notifications```"},"textContent":{"type":"string","description":"```Text notification content```"},"phoneNumbers":{"type":"array","items":{"type":"string","format":"phone","description":"```array of Phone numbers for notifications (max. 500 chars)```<br>```Phone numbers must start with + country code and shouldn't include any punctuation or space characters```"}}}},"DeviceSettingsModalityPulse":{"type":"object","properties":{"modality":{"type":"string","description":"```Modality code```"},"modalityName":{"type":"string","description":"```Modality name```"},"modalityUnit":{"type":"string","description":"```Modality unit```"},"modalityPrcs":{"type":"integer","description":"```Modality precision```"},"modalityIntv":{"type":"integer","description":"```Modality interval```"},"absoluteLow":{"type":"integer","readOnly":true,"description":"```Absolute minimum sensor value```"},"absoluteHigh":{"type":"integer","readOnly":true,"description":"```Absolute maximum sensor value```"},"lowThreshold":{"type":"integer","description":"```Low threshold setting for notifications```"},"highThreshold":{"type":"integer","description":"```High threshold setting for notifications```"},"notifyForOutOfThreshold":{"type":"boolean","description":"```Send notification when sensor data is out of thresholds```"},"notifyForBackInThreshold":{"type":"boolean","description":"```Send notification when sensor data is back within thresholds```"},"delayBetweenNotifications":{"type":"integer","description":"```Wait at least this much minutes before sending another notification```<br>```(default 15 minutes)```"},"delayBeforeNotifications":{"type":"integer","description":"```Wait this much minutes before sending a notification in the case of an event```<br>```(default 0)```<br>```(This feature is not implemented yet)```"}}},"DeviceSettingsModalityFlow":{"type":"object","properties":{"modality":{"type":"string","description":"```modality code```"},"modalityName":{"type":"string","description":"```Modality name```"},"modalityPrcs":{"type":"integer","description":"```Modality precision```"},"initVal":{"type":"integer","description":"```initial value for sensitivity```"},"sendType":{"type":"integer","description":"```flow data sending type```"},"sendThreshold":{"type":"integer","description":"```threshold value for sending data```"},"triggerThreshold":{"type":"integer","description":"```threshold value for triggering action```"},"triggerRepeat":{"type":"integer","description":"```trigger repeat factor before initiating action```"},"triggerChannel":{"type":"integer","description":"```output channells to trigger action upon```"}}},"DeviceSettingsModalityState":{"type":"object","properties":{"modality":{"type":"string","description":"```modality code```"},"modalityName":{"type":"string","description":"```Modality name```"}}},"DeviceSettingsModalityAction":{"type":"object","properties":{"modality":{"type":"string","description":"```modality code```"},"modalityName":{"type":"string","description":"```Modality name```"},"initVal":{"type":"integer","description":"```initial value```"},"responseType":{"type":"integer","description":"```response type```"},"timeout":{"type":"integer","description":"```timeout value```"}}},"DeviceSettings":{"type":"object","properties":{"base":{"$ref":"#/components/schemas/DeviceSettingsBase"},"mods":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/DeviceSettingsModalityPulse"},{"$ref":"#/components/schemas/DeviceSettingsModalityFlow"},{"$ref":"#/components/schemas/DeviceSettingsModalityState"},{"$ref":"#/components/schemas/DeviceSettingsModalityAction"}]}}}},"DeviceAccount":{"type":"object","properties":{"accountId":{"type":"string","format":"uuid","description":"```Id of the account that this device belongs```"},"userRole":{"type":"string","enum":["basic","trusted","admin"],"example":"basic","description":"```User's role in this account```"},"name":{"type":"string","description":"```Name of the account that this device belongs```"},"email":{"type":"string","format":"email","description":"```Email of the account that this device belongs```"},"phone":{"type":"string","format":"phone","description":"```Phone number of the account that this device belongs```"}}},"DeviceEvent":{"type":"object","properties":{"eventId":{"type":"string","format":"ieid","example":"HuzESP6600A9282C0016405E5c3cecdf,t,1555123668000","description":"```Event Id```"},"date":{"type":"number","example":"1564466751","description":"```Epoch value (seconds since 1/1/1970) of event timestamp```"},"eventClass":{"type":"string","enum":["data","device"],"example":"data","description":"```Event class```"},"modality":{"type":"string","enum":["#","t","r","u","s","f","g","1","2"],"example":"#","description":"```Modality code for data class events ('t':temperature, 'r':temperature2, 'u':humidity, 's':humidity2, 'f':flow, 'g':flow-st.dev, '1':action1, '2':action2) or '#' for device class events```"},"type":{"type":"string","enum":["SENSOR ERROR","ABOVE THRESHOLD","BELOW THRESHOLD","BACK TO NORMAL","ON BATTERY","EXTERNAL","ONLINE","OFFLINE","DISCONNECT","ERROR"],"example":"ABOVE THRESHOLD","description":"```Event type```"},"level":{"type":"string","enum":["normal","error","warning"],"example":"warning"},"duration":{"type":"number","format":"int32","example":45,"description":"```Positive values indicates the duration of the event (difference between the timestamps of two events) in seconds```<br>```Negative values indicate the timestamp of the most recent event in the list in Epoch time format (seconds since 1/1/1970) where the duration should be calculated by your application as the difference between now() and absolute value of this timestamp```"},"value":{"type":"number","format":"float","example":68,"description":"```Sensor value at the time of event```"},"threshold":{"type":"number","format":"float","example":50,"description":"```Threshold value at the time of event```"},"device":{"$ref":"#/components/schemas/DeviceBase"},"cleared":{"type":"boolean","example":true,"description":"```Indicates whether event is cleared of its new event flag by user action or not```"}}},"DeviceData":{"type":"object","properties":{"date":{"type":"number","example":"1564466751000","description":"```Milli-epoch value (milliseconds since 1/1/1970) of data timestamp```"},"value":{"type":"number","format":"float","description":"```Sensor value```"}}},"DeviceLastData":{"type":"object","properties":{"modality":{"type":"string","description":"```Modality code (t:temperature, r:temperature2, u:humidity, s:humidity2)```"},"date":{"type":"number","example":"1564466751000","description":"```Milli-epoch value (milliseconds since 1/1/1970) of data timestamp```"},"value":{"type":"number","format":"float","description":"```Sensor value```"}}},"DeviceDetail":{"allOf":[{"$ref":"#/components/schemas/DeviceBase"},{"type":"object","properties":{"settings":{"$ref":"#/components/schemas/DeviceSettings"},"lastData":{"type":"array","items":{"$ref":"#/components/schemas/DeviceLastData"}},"hasNewEvent":{"type":"boolean","description":"```Indicates if device has a new data event```"},"lastEvent":{"type":"array","items":{"$ref":"#/components/schemas/DeviceEvent"}},"hasNewDeviceEvent":{"type":"boolean","description":"```Indicates if device has a new device event```"},"lastDeviceEvent":{"$ref":"#/components/schemas/DeviceEvent"}}}]},"DeviceItem":{"oneOf":[{"$ref":"#/components/schemas/DeviceBase"},{"$ref":"#/components/schemas/DeviceDetail"}]}},"responses":{"Successful":{"description":"```Successful```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Empty"}}}},"BadRequest":{"description":"```Bad request```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"NotFound":{"description":"```Resource was not found```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"Unauthorized":{"description":"```Unauthorized```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"ServerError":{"description":"```Server error```","headers":{"Access-Control-Allow-Origin":{"schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}}}}