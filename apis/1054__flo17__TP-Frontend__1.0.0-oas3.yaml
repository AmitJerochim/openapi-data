penapi: 3.0.0
info:
  description: TP SI2 FrontEnd
  version: "1.0.0-oas3"
  title: Simple Drink Inventory API
  contact:
    email: florent.kilchoer@edu.hefr.ch
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:3000'

paths:
  /drinks:
    get:
      summary: Returns a list of drinks
      tags: ["Drinks"]
      responses:
        '200':
          description: A list of drink object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDrinks'
    post:
      summary: Create a new Drink
      tags: ["Drinks"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Drink'
                - $ref: '#/components/schemas/Liquor'
                - $ref: '#/components/schemas/Beer'
                - $ref: '#/components/schemas/Mineral'
      responses:
        '200':
          description: The new drink object
        '422':
          description: Error specifying why the object hasn't been created
  /drinks/{drinkId}:
    get:
      summary: Returns a specific drink
      tags: ["Drinks"]
      parameters:
        - in: path
          name: drinkId
          schema:
            type: integer
          required: true
          description: Numeric ID of the drink to get
      responses:
        '200':
          description: A Drink object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        '404':
          description: Drink not found
    patch:
      summary: Edit a drink
      tags: ["Drinks"]
      parameters:
        - in: path
          name: drinkId
          schema:
            type: integer
          required: true
          description: Numeric ID of the drink to edit
      responses:
        '200':
          description: The edited Drink object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        '422':
          description: Error specifying why the object hasn't been edited
    put:
      summary: Edit a drink
      tags: ["Drinks"]
      parameters:
        - in: path
          name: drinkId
          schema:
            type: integer
          required: true
          description: Numeric ID of the drink to edit
      responses:
        '200':
          description: The edited Drink object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink' 
        '422':
          description: Error specifying why the object hasn't been edited
    delete:
      summary: Delete a drink
      tags: ["Drinks"]
      parameters:
        - in: path
          name: drinkId
          schema:
            type: integer
          required: true
          description: Numeric ID of the drink to edit
      responses:
        '204':
          description: Drink deleted
        '404':
          description: Drink not found
  /drinks/{drinkId}/reviews:
    get:
      summary: Returns a list of reviews for a specific drink
      tags: ["Drinks"]
      parameters:
        - in: path
          name: drinkId
          schema:
            type: integer
          required: true
          description: Numeric ID of the drink to get
      responses:
        '200':
          description: A list of reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReviews'
        '404':
          description: Drink not found
  /manufacturers:
    get:
      summary: Returns a list of manufacturers
      tags: ["Manufacturers"]
      responses:
        '200':
          description: A list of manufacturer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManufacturers'
    post:
      summary: Create a new Manufacturer
      tags: ["Manufacturers"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
      responses:
        '200':
          description: The new manufacturer object
        '422':
          description: Error specifying why the object hasn't been created
  /manufacturers/{manufacturerId}:
    get:
      summary: Returns a specific manufacturer
      tags: ["Manufacturers"]
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the manufacturer to get
      responses:
        '200':
          description: A Manufacturer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
    patch:
      summary: Edit a manufacturer
      tags: ["Manufacturers"]
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the manufacturer to edit
      responses:
        '200':
          description: The edited Manufacturer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        '422':
          description: Error specifying why the object hasn't been edited
    put:
      summary: Edit a manufacturer
      tags: ["Manufacturers"]
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the manufacturer to edit
      responses:
        '200':
          description: The edited Manufacturer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer' 
        '422':
          description: Error specifying why the object hasn't been edited
    delete:
      summary: Delete a manufacturer
      tags: ["Manufacturers"]
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the manufacturer to edit
      responses:
        '204':
          description: Manufacturer deleted
        '404':
          description: Manufacturer not found
  /manufacturers/{manufacturerId}/drinks:
    get:
      summary: Returns a list of drinks producted by this manufacturer
      tags: ["Manufacturers"]
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the manufacturer to get
      responses:
        '200':
          description: List of drinks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDrinks'
        '404':
          description: Manufacturer not found
  /minerals:
    get:
      summary: Returns a list of minerals
      tags: ["Minerals"]
      responses:
        '200':
          description: A list of mineral object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMinerals'
  /minerals/{mineralId}:
    get:
      summary: Returns a specific mineral
      tags: ["Minerals"]
      parameters:
        - in: path
          name: mineralId
          schema:
            type: integer
          required: true
          description: Numeric ID of the mineral to get
      responses:
        '200':
          description: A Mineral object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mineral'  
  /liquors:
    get:
      summary: Returns a list of liquors
      tags: ["Liquors"]
      responses:
        '200':
          description: A list of liquor object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLiquors'
  /liquors/{liquorId}:
    get:
      summary: Returns a specific liquor
      tags: ["Liquors"]
      parameters:
        - in: path
          name: liquorId
          schema:
            type: integer
          required: true
          description: Numeric ID of the liquor to get
      responses:
        '200':
          description: A Liquor object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liquor'
  /beers:
    get:
      summary: Returns a list of beers
      tags: ["Beers"]
      responses:
        '200':
          description: A list of beer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBeers'
  /beers/{beerId}:
    get:
      summary: Returns a specific beer
      tags: ["Beers"]
      parameters:
        - in: path
          name: beerId
          schema:
            type: integer
          required: true
          description: Numeric ID of the beer to get
      responses:
        '200':
          description: A Beer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
  /reviews:
    post:
      summary: Create a new Review
      tags: ["Reviews"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: The new review object
        '422':
          description: Error specifying why the object hasn't been created
  /reviews/{reviewId}:
    get:
      summary: Returns a specific review
      tags: ["Reviews"]
      parameters:
        - in: path
          name: reviewId
          schema:
            type: integer
          required: true
          description: Numeric ID of the review to get
      responses:
        '200':
          description: A Review object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
    patch:
      summary: Edit a review
      tags: ["Reviews"]
      parameters:
        - in: path
          name: reviewId
          schema:
            type: integer
          required: true
          description: Numeric ID of the review to edit
      responses:
        '200':
          description: The edited Review object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '422':
          description: Error specifying why the object hasn't been edited
    put:
      summary: Edit a review
      tags: ["Reviews"]
      parameters:
        - in: path
          name: reviewId
          schema:
            type: integer
          required: true
          description: Numeric ID of the review to edit
      responses:
        '200':
          description: The edited Review object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review' 
        '422':
          description: Error specifying why the object hasn't been edited
    delete:
      summary: Delete a review
      tags: ["Reviews"]
      parameters:
        - in: path
          name: reviewId
          schema:
            type: integer
          required: true
          description: Numeric ID of the review to edit
      responses:
        '204':
          description: Review deleted
        '404':
          description: Review not found
  
# tags are used for organizing operations
components:
  schemas:
    Manufacturer:
      type: object
      required:
        - name
        - locality
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string   
        locality:
          type: string
    Drink:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        manufacturerId:
          type: integer
        details:
          type: string
        reviews_count:
          type: integer
          readOnly: true
        color:
          type: string
          readOnly: true
        alcool:
          type: number
          readOnly: true
        type:
          type: string
        manufacturer:
          type: string
          readOnly: true
        averageCost:
          type: number
          readOnly: true
        averageStars:
          type: number
          readOnly: true
    Mineral:
      allOf:     # Combines the Drink and the inline model
        - $ref: '#/components/schemas/Drink'
        - type: object
    Liquor:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/components/schemas/Drink'
        - type: object
          required:
            - alcool
          properties:
            alcool:
              type: number
              readOnly: false
    Beer:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/components/schemas/Liquor'
        - type: object
          required:
            - color
          properties:
            color:
              type: string
              readOnly: false
    Review:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
        drink_id:
          type: integer
        cost:
          type: string
        stars:
          type: string
        place:
          type: string
        created_at:
          type: string
          readOnly: true
    ListDrinks:
      type: array
      items:
        $ref: '#/components/schemas/Drink'
    ListManufacturers:
      type: array
      items:
        $ref: '#/components/schemas/Manufacturer'
    ListMinerals:
      type: array
      items:
        $ref: '#/components/schemas/Mineral'
    ListLiquors:
      type: array
      items:
        $ref: '#/components/schemas/Liquor'
    ListBeers:
      type: array
      items:
        $ref: '#/components/schemas/Beer'
    ListReviews:
      type: array
      items:
        $ref: '#/components/schemas/Review'