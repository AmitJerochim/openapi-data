penapi: 3.0.0

info:
  description: |
    The API of BitSale's end points
  version: "1.1.0"
  title: TSTechPro BitSale API
  contact:
    email: mykyta.popov@tstechpro.com
  license:
    name: TSTechPro

externalDocs:
  description: Find out more about agents and permissions on confluence
  url: 'https://itservice.atlassian.net/wiki/spaces/REQ/pages/1373405216/User+management'

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/mp091689/tstechpro.bitsale/1.1.0

tags:
  - name: Agents
    description: Endpoints related to Agent

paths:
  /agents:
    post:
      tags:
        - Agents
      summary: Create new agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  maxLength: 255
                email:
                  type: string
                  maxLength: 255
                  format: email
                isActive:
                  type: boolean
                comment:
                  type: string
                  maxLength: 255
              required:
                - username
                - isActive
      responses:
        '201':
          description: Agent created
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  agent:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      password:
                        type: string
                        example: "izvq7ObWPhVkHNL5fFM8lRce"
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                ValidationError:
                  $ref: '#/components/examples/ValidationError'

  /agents/{id}:
    get:
      tags:
        - Agents
      summary: Returns an agent by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the agent
          schema:
            type : integer
      responses:
        '200':
          description: Agent info
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                  agent:
                    $ref: '#/components/schemas/AgentFull'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                AgentNotFound:
                  $ref: '#/components/examples/AgentNotFound'
    put:
      tags:
        - Agents
      summary: Update agent data
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the agent
          schema:
            type : integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                username:
                  type: string
                  maxLength: 255
                  example: "john.doe"
                email:
                  type: string
                  maxLength: 255
                  format: email
                  example: "john.doe@example.com"
                isActive:
                  type: boolean
                  example: false
                comment:
                  type: string
                  maxLength: 255
                  example: "Example of the comment"
                actualDataHash:
                  type: string
                  example: "a269d523dde43b582199e1ea612b5eea"
              required:
                - id
                - actualDataHash
      responses:
        '200':
          description: Agent updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  agent:
                    $ref: '#/components/schemas/AgentGeneral'
        '404':
          description: Specified agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                AgentNotFound:
                  $ref: '#/components/examples/AgentNotFound'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                ValidationError:
                  $ref: '#/components/examples/ValidationError'

  /agents/{id}/reset-password:
    put:
      tags:
        - Agents
      summary: Reset agent's password
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the agent
          schema:
            type: integer
      responses:
        '200':
          description: New password is generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                  agent:
                    type: object
                    properties:
                      password:
                        type: string
        '404':
          description: Specified agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                AgentNotFound:
                  $ref: '#/components/examples/AgentNotFound'
                  
  /agents/{id}/access:
    put:
      tags:
        - Agents
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the agent
          schema:
            type : integer
            example: 1
      summary: Update agent's access
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
                    - 3
                permissions:
                  type: array
                  items:
                    type: object
                    properties:
                      isGranted:
                        type: boolean
                        example: true
                      id:
                        type: integer
                        example: 1
                actualDataHash:
                  type: string
                  example: "6fa2cdbd6caecf49550e313637e60454"
              required:
                - roles
                - permissions
                - actualDataHash
      responses:
        '200':
          description: Agents access updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  agent:
                    $ref: '#/components/schemas/AgentAccess'
        '404':
          description: Specified agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithErrors'
              examples:
                AgentNotFound:
                  $ref: '#/components/examples/AgentNotFound'

components:
  schemas:
    window.GLOBALS.pageData:
      type: object
      properties:
        agents:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 123
              username:
                type: string
                example: "qa.engineer"
              email:
                type: string
                format: email
                example: "qa.engineer@example.com"
              comment:
                type: string
                example: "example comment"
              isActive:
                type: boolean
                example: true
              lastLogin:
                type: string
                format: "dateTime(Y-m-d H:i:s)"
                example: "2019-10-07 07:08:04"

        accesses:
          type: array
          items:
            type: object
            properties:
              roles:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: "Role Example"
                    description:
                      type: string
                      example: "description example"
                    weight:
                      type: integer
                      example: 900
                    isActive:
                      type: boolean
                      example: true
                    isSystem:
                      type: boolean
                      example: false
              permissions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: "Can Example"
                    description:
                      type: string
                      example: "description example"
                    isActive:
                      type: boolean
                      example: true
                    isSystem:
                      type: boolean
                      example: false
              assignments:
                type: array
                items:
                  type: object
                  properties:
                    isGranted:
                      type: boolean
                      example: true
                    roleId:
                      type: integer
                      example: 123
                    permissionId:
                      type: integer
                      example: 123
        urls:
          type: array
          items:
            type: object
            properties:
              infoUrl:
                type: string
                example: "/agents/info/{id}"
              createUrl:
                type: string
                example: "/agents/create"
              updateUrl:
                type: string
                example: "/agents/update"
              updateAccessUrl:
                type: string
                example: "/access/agent/321/update"

        permissions:
          type: array
          items:
            type: object
            properties:
              viewUserManagement:
                type: boolean
                example: true
              editUserManagement:
                type: boolean
                example: true
        
        pagination:
          type: object
          properties:
            currentPage:
              type: integer
              example: 1
            perPage:
              type: integer
              example: 25
            totalCount:
              type: integer
              example: 249
            linkPattern:
              type: string
              example: "/system/users?page={page}"

    AgentFull:
      type: object
      properties:
        general:
          type: object
          properties:
            id:
              type: integer
              example: 1
            username:
              type: string
              minLength: 4
              maxLength: 255
              example: "john.doe"
            email:
              type: string
              format: email
              maxLength: 255
              example: "john.doe@example.com"
            comment:
              type: string
              maxLength: 255
              example: "Example of the comment"
            isActive:
              type: boolean
              example: true
            lastLogin:
              type: string
              example: "1970-01-01 12:00:00"
            actualDataHash:
              type: string
              example: "6fa2cdbd6caecf49550e313637e60454"
        access:
          type: object
          properties:
            roles:
              type: array
              items:
                type: integer
              example:
                - 1
                - 2
            permissions:
              type: array
              items:
                type: object
                properties:
                  isGranted:
                    type: boolean
                    example: true
                  id:
                    type: integer
                    example: 1
            actualDataHash:
              type: string
              example: "fb30491c7e02cd043e63ee2383be0903"
    
    AgentGeneral:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          minLength: 4
          maxLength: 255
          example: "john.doe"
        email:
          type: string
          format: email
          maxLength: 255
          example: "john.doe@example.com"
        comment:
          type: string
          maxLength: 255
          example: "Example of the comment"
        isActive:
          type: boolean
          example: true
        lastLogin:
          type: string
          example: "1970-01-01 12:00:00"
        actualDataHash:
          type: string
          example: "6fa2cdbd6caecf49550e313637e60454"
              
    AgentAccess:
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
          example:
            - 1
            - 2
        permissions:
          type: array
          items:
            type: object
            properties:
              isGranted:
                type: boolean
                example: true
              id:
                type: integer
                example: 1
        actualDataHash:
          type: string
          example: "fb30491c7e02cd043e63ee2383be0903"
                
    ResponseWithErrors:
      type: object
      properties:
        isSuccess:
          type: boolean
          example: true
        errors:
          type: object
          properties:
            field:
              type: array
              items:
                type: string
                
    ResponseWithSystemError:
      type: object
      properties:
        isSuccess:
          type: boolean
          example: false
        error:
          type: string
          example: "Access denied"
          
  examples:
    AgentNotFound:
      summary: A sample agent not found
      value:
        isSuccess: false
        error: "Agent not found"
        
    ValidationError:
      summary: A sample validation error
      value:
        isSuccess: false
        errors:
          email: ["Must be e-mail format"]
          username: ["Must be 4 characters min", "Must be unique"]