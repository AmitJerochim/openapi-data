openapi: 3.0.0
info:
  version: "v1.3"
  title: CompliChain API
  description: Exposed endpoints for client use to interact with Sepire's CompliChain SaaS tool
paths:
  /api/services/app/Items/GetItemsByTenant:
    get:
      tags:
        - Items
      operationId: ApiServicesAppItemsGetitemsbytenantGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListForLocalDbDto'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListForLocalDbDto'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListForLocalDbDto'
  /api/services/app/Items/GetJobItemsListByJobId:
    get:
      tags:
        - Items
      operationId: ApiServicesAppItemsGetjobitemslistbyjobidGet
      parameters:
        - name: jobId
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListDto'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListDto'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ItemListDto'
  /api/services/app/JobAttachment/GetJobAttachmentList:
    get:
      tags:
        - JobAttachment
      operationId: ApiServicesAppJobattachmentGetjobattachmentlistGet
      parameters:
        - name: JobId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfJobAttachmentsListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfJobAttachmentsListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfJobAttachmentsListDto'
  /api/services/app/Jobs/GetJobByJobId:
    get:
      tags:
        - Jobs
      operationId: ApiServicesAppJobsGetjobbyjobidGet
      parameters:
        - name: jobId
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobsListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/JobsListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsListDto'
  /api/services/app/Jobs/GetJobsList:
    get:
      tags:
        - Jobs
      operationId: ApiServicesAppJobsGetjobslistGet
      parameters:
        - name: UserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: JobFilterSearch
          in: query
          required: false
          schema:
            type: string
        - name: JobStatus
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: AssignTo
          in: query
          required: false
          schema:
            type: string
        - name: JobHealth
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: JobNextAction
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: Sorting
          in: query
          required: false
          schema:
            type: string
        - name: MaxResultCount
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
        - name: SkipCount
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PagedResultDtoOfJobsListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultDtoOfJobsListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PagedResultDtoOfJobsListDto'
  /api/services/app/Jobs/GetJobsListByProgram:
    get:
      tags:
        - Jobs
      operationId: ApiServicesAppJobsGetjobslistbyprogramGet
      parameters:
        - name: programId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobsListDto'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobsListDto'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobsListDto'
  /api/services/app/Jobs/GetProgramList:
    get:
      tags:
        - Jobs
      operationId: ApiServicesAppJobsGetprogramlistGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobProgramInput'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobProgramInput'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/JobProgramInput'
  /api/services/app/OrganizationUnit/GetOrganizationUnits:
    get:
      tags:
        - OrganizationUnit
      operationId: ApiServicesAppOrganizationunitGetorganizationunitsGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfOrganizationUnitDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfOrganizationUnitDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ListResultDtoOfOrganizationUnitDto'
  /api/services/app/OrganizationUnit/CreateOrganizationUnit:
    post:
      tags:
        - OrganizationUnit
      operationId: ApiServicesAppOrganizationunitCreateorganizationunitPost
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUnitInput'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUnitInput'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUnitInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUnitInput'
  /api/services/app/OrganizationUnit/UpdateOrganizationUnit:
    put:
      tags:
        - OrganizationUnit
      operationId: ApiServicesAppOrganizationunitUpdateorganizationunitPut
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitDto'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUnitInput'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUnitInput'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUnitInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUnitInput'
  /api/services/app/OrganizationUnit/DeleteOrganizationUnit:
    delete:
      tags:
        - OrganizationUnit
      operationId: ApiServicesAppOrganizationunitDeleteorganizationunitDelete
      parameters:
        - name: Id
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /api/TokenAuth/Authenticate:
    post:
      tags:
        - TokenAuth
      operationId: ApiTokenauthAuthenticatePost
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticateResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResultModel'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuthenticateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthenticateModel'
  /api/TokenAuth/RefreshToken:
    post:
      tags:
        - TokenAuth
      operationId: ApiTokenauthRefreshtokenPost
      parameters:
        - name: refreshToken
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RefreshTokenResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResult'
  /api/TokenAuth/LogOut:
    get:
      tags:
        - TokenAuth
      operationId: ApiTokenauthLogoutGet
      responses:
        '200':
          description: Success
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ItemListForLocalDbDto:
      type: object
      properties:
        itemId:
          type: string
        tenantId:
          format: int32
          type: integer
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
    ItemListDto:
      type: object
      properties:
        itemId:
          type: string
        jobId:
          format: int32
          type: integer
        quantity:
          format: int32
          type: integer
        tenantId:
          format: int32
          type: integer
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
    ListResultDtoOfJobAttachmentsListDto:
      type: object
      properties:
        items:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/JobAttachmentsListDto'
    JobAttachmentsListDto:
      type: object
      properties:
        jobId:
          format: int64
          type: integer
        jobNumber:
          type: string
        fileName:
          type: string
        fileSize:
          type: string
        fileUrl:
          type: string
        fileTypeId:
          format: int64
          type: integer
        fileTypeName:
          type: string
        sepireApproval:
          format: int64
          type: integer
        customerApproval:
          format: int64
          type: integer
        reason:
          type: string
        modifiedUserName:
          type: string
        isDeleted:
          type: boolean
        deleterUserId:
          format: int64
          type: integer
        deletionTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierUserId:
          format: int64
          type: integer
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int32
          type: integer
    PagedResultDtoOfJobsListDto:
      type: object
      properties:
        totalCount:
          format: int32
          type: integer
        items:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/JobsListDto'
    JobTypeDto:
      type: object
      properties:
        name:
          type: string
        value:
          format: int64
          type: integer
    JobsListDto:
      type: object
      properties:
        jobNumber:
          type: string
        jobName:
          type: string
        jobDescription:
          type: string
        jobHealth:
          format: int64
          type: integer
        jobHealthName:
          type: string
        jobHealthImage:
          type: string
        jobNextAction:
          format: int64
          type: integer
        jobNextActionStyle:
          type: string
        clientOwnerId:
          format: int64
          type: integer
        clientOwner:
          type: string
        productionOwnerId:
          format: int64
          type: integer
        productionOwner:
          type: string
        jobType:
          format: int64
          type: integer
        jobTypeName:
          type: string
        jobDueDate:
          format: date-time
          type: string
        jobStatusName:
          type: string
        jobStatus:
          format: int64
          type: integer
        jobStatusCode:
          format: int64
          type: integer
        programName:
          type: string
        program:
          type: string
        tenantId:
          format: int32
          type: integer
        recipientCount:
          format: int32
          type: integer
        msDynamicsJobId:
          type: string
        jobAttachmentTypes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/JobTypeDto'
        isDeleted:
          type: boolean
        deleterUserId:
          format: int64
          type: integer
        deletionTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierUserId:
          format: int64
          type: integer
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int32
          type: integer
    JobProgramInput:
      type: object
      properties:
        programId:
          type: string
        name:
          type: string
        accountId:
          type: string
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
    ListResultDtoOfOrganizationUnitDto:
      type: object
      properties:
        items:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUnitDto'
    OrganizationUnitDto:
      type: object
      properties:
        parentId:
          format: int64
          type: integer
        code:
          type: string
        displayName:
          type: string
        memberCount:
          format: int32
          type: integer
        roleCount:
          format: int32
          type: integer
        lastModificationTime:
          format: date-time
          type: string
        lastModifierUserId:
          format: int64
          type: integer
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
    CreateOrganizationUnitInput:
      required:
        - displayName
      type: object
      properties:
        parentId:
          format: int64
          type: integer
        displayName:
          maxLength: 128
          minLength: 0
          type: string
    UpdateOrganizationUnitInput:
      required:
        - displayName
      type: object
      properties:
        id:
          format: int64
          maximum: 9223372036854780000
          minimum: 1
          type: integer
        displayName:
          maxLength: 128
          minLength: 0
          type: string
    AuthenticateModel:
      required:
        - userNameOrEmailAddress
        - password
      type: object
      properties:
        userNameOrEmailAddress:
          maxLength: 256
          type: string
        password:
          maxLength: 32
          type: string
        twoFactorVerificationCode:
          type: string
        rememberClient:
          type: boolean
        twoFactorRememberClientToken:
          type: string
        singleSignIn:
          type: boolean
        returnUrl:
          type: string
    AuthenticateResultModel:
      type: object
      properties:
        accessToken:
          type: string
        encryptedAccessToken:
          type: string
        expireInSeconds:
          format: int32
          type: integer
        shouldResetPassword:
          type: boolean
        passwordResetCode:
          type: string
        userId:
          format: int64
          type: integer
        requiresTwoFactorVerification:
          type: boolean
        twoFactorAuthProviders:
          uniqueItems: false
          type: array
          items:
            type: string
        twoFactorRememberClientToken:
          type: string
        returnUrl:
          type: string
        refreshToken:
          type: string
    RefreshTokenResult:
      type: object
      properties:
        accessToken:
          type: string
