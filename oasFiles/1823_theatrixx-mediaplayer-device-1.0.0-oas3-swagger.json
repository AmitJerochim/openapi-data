{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "REST API to communicate with the Media Player hardware",
    "version" : "1.0.0-oas3",
    "title" : "Media Player Device API",
    "contact" : {
      "email" : "gduschinsky@theatrixx.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "queue management",
    "description" : "calls to managed the active queue"
  }, {
    "name" : "playlist management",
    "description" : "calls to manage playlists"
  }, {
    "name" : "media management",
    "description" : "calls to manage media (files) and folders"
  }, {
    "name" : "state",
    "description" : "device state"
  }, {
    "name" : "settings",
    "description" : "device settings and management"
  }, {
    "name" : "admins",
    "description" : "secured Admin-only calls"
  }, {
    "name" : "public",
    "description" : "operations available to everyone without authenthentication"
  } ],
  "paths" : {
    "/playlists" : {
      "get" : {
        "tags" : [ "public", "playlist management" ],
        "summary" : "lists all playlists available",
        "responses" : {
          "200" : {
            "description" : "playlist lists returned successfuly",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Playlist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playlists/{playlistId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "playlistId",
        "required" : true,
        "description" : "ID of the playlist to get",
        "schema" : {
          "$ref" : "#/components/schemas/Playlist/properties/id"
        }
      } ],
      "get" : {
        "tags" : [ "public", "playlist management" ],
        "summary" : "gets a single playlist by id",
        "responses" : {
          "200" : {
            "description" : "playlist retrieved sucessfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlist"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "public", "playlist management" ],
        "summary" : "creates a new entry in the playlist",
        "responses" : {
          "201" : {
            "description" : "item created"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItem"
              }
            }
          }
        }
      }
    },
    "/media" : {
      "get" : {
        "tags" : [ "public", "media management" ],
        "summary" : "lists all files stored on the devie as a flat list",
        "responses" : {
          "200" : {
            "description" : "media list successully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Media"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "public", "media management" ],
        "summary" : "creates (uploads) a new media item",
        "responses" : {
          "201" : {
            "description" : "item created"
          }
        },
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "fileName" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/media/{mediaId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "mediaId",
        "required" : true,
        "description" : "ID of the media item to select",
        "schema" : {
          "$ref" : "#/components/schemas/Media/properties/id"
        }
      } ],
      "get" : {
        "tags" : [ "public", "media management" ],
        "summary" : "gets a single media item by ID",
        "responses" : {
          "200" : {
            "description" : "media item returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Media"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "public", "media management" ],
        "summary" : "updates a media item",
        "responses" : {
          "200" : {
            "description" : "item successully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Media"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Media"
              }
            }
          }
        }
      }
    },
    "/folders" : {
      "get" : {
        "tags" : [ "public", "media management" ],
        "summary" : "lists all folders as a flat structure",
        "responses" : {
          "200" : {
            "description" : "folder list successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Folder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folderId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "folderId",
        "required" : true,
        "description" : "ID of the folder to select",
        "schema" : {
          "$ref" : "#/components/schemas/Folder/properties/id"
        }
      } ],
      "get" : {
        "tags" : [ "public", "media management" ],
        "summary" : "lists details on a single folder and all media items in that folder",
        "responses" : {
          "200" : {
            "description" : "folder details successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FolderDetails"
                }
              }
            }
          }
        }
      }
    },
    "/device/state" : {
      "get" : {
        "tags" : [ "public", "state" ],
        "summary" : "returns current device state",
        "responses" : {
          "200" : {
            "description" : "device state returned sucessfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceState"
                }
              }
            }
          }
        }
      }
    },
    "/device/info" : {
      "get" : {
        "tags" : [ "public", "state" ],
        "summary" : "returns device information",
        "responses" : {
          "200" : {
            "description" : "device information returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceInfo"
                }
              }
            }
          }
        }
      }
    },
    "/settings/video" : {
      "get" : {
        "tags" : [ "public", "settings" ],
        "summary" : "returns video settings",
        "responses" : {
          "200" : {
            "description" : "video settings information returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoSettings"
                }
              }
            }
          }
        }
      }
    },
    "/settings/multi-device" : {
      "get" : {
        "tags" : [ "public", "settings" ],
        "summary" : "returns multi-device settings",
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultiDeviceSettings"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/theatrixx/mediaplayer-device/1.0.0-oas3"
  }, {
    "url" : "https://virtserver.swaggerhub.com/theatrixx/mediaplayer-device/1.0.0"
  } ],
  "components" : {
    "schemas" : {
      "Playlist" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItem"
            }
          },
          "endAction" : {
            "type" : "string",
            "enum" : [ "stop", "loop", "link" ],
            "description" : "defines what to do after the last item in the playlist is done playing"
          },
          "endLinkId" : {
            "type" : "string",
            "description" : "if endAction = link, the ID of the next playlist to load once this playlist is done playing"
          }
        }
      },
      "PlaylistItem" : {
        "type" : "object",
        "description" : "represents a single entry in a playlist",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "playlistId" : {
            "type" : "string",
            "description" : "the ID of the parent playlist"
          },
          "position" : {
            "type" : "integer",
            "description" : "represents the position index of the playlist item in the playlist"
          },
          "media" : {
            "$ref" : "#/components/schemas/Media"
          },
          "trigger" : {
            "type" : "string",
            "enum" : [ "previous", "wait" ]
          },
          "wait" : {
            "type" : "integer",
            "description" : "if trigger = previous, specifies the time to wait, in miliseconds, before executing this playlist item"
          },
          "startPoint" : {
            "type" : "string"
          },
          "endPoint" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "Media" : {
        "type" : "object",
        "description" : "represents a single media item (video, image or audio file)",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "b00041256",
            "description" : "internal unique id of the media item",
            "readOnly" : true
          },
          "remoteId" : {
            "type" : "number",
            "description" : "numerical identifier used to sync playback across devices - should be unique per device"
          },
          "fileName" : {
            "type" : "string",
            "example" : "myvideo",
            "description" : "represents the file name of the media item",
            "readOnly" : true
          },
          "fileType" : {
            "type" : "string",
            "example" : "mp4",
            "description" : "represents the file type (extension) of the media item",
            "readOnly" : true
          },
          "fileSize" : {
            "type" : "integer",
            "description" : "represents the file size, in bytes",
            "readOnly" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/VideoResolution"
          },
          "startPoint" : {
            "type" : "integer"
          },
          "endPoint" : {
            "type" : "integer"
          },
          "duration" : {
            "type" : "integer",
            "description" : "represents the original duration, in miliseconds, of the video file. For still images, should be 0"
          },
          "durationTrimmed" : {
            "type" : "integer",
            "description" : "represents the trimmed duration of the video, including start and end points",
            "readOnly" : true
          },
          "modified" : {
            "type" : "string",
            "example" : "2012-04-23T18:25:43.511Z",
            "format" : "ISO 8601",
            "description" : "represents the last modification date of this item",
            "readOnly" : true
          },
          "title" : {
            "type" : "string",
            "description" : "a user-defined title for the item"
          },
          "comment" : {
            "type" : "string",
            "description" : "a user-defined comment for the item"
          },
          "folderId" : {
            "$ref" : "#/components/schemas/Folder/properties/id"
          },
          "locked" : {
            "type" : "boolean",
            "example" : false,
            "description" : "indicates wether the item can be modified or deleted by anyone, or by admins only"
          },
          "previewURL" : {
            "type" : "string",
            "example" : "/media/b00041256/preview.mp4",
            "description" : "the URL where the preview of the media item can be found",
            "readOnly" : true
          },
          "thumbnailURL" : {
            "type" : "string",
            "example" : "/media/b00041256/thumbnail.png",
            "description" : "the URL where the thumbnail of the media item can be found",
            "readOnly" : true
          },
          "thumbnailPoint" : {
            "type" : "number",
            "description" : "the point in the video, in miliseconds, from where the thumbnail should be generated"
          }
        }
      },
      "Folder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "the internal ID of the folder",
            "readOnly" : true
          },
          "title" : {
            "type" : "string",
            "description" : "the title of the folder"
          },
          "parentFolderId" : {
            "type" : "string",
            "description" : "the internal ID of the parent folder, or null if folder is at root level"
          },
          "locked" : {
            "type" : "boolean",
            "example" : false,
            "description" : "indicates wether the item can be modified or deleted by anyone, or by admins only"
          }
        }
      },
      "FolderDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/Folder/properties/id"
          },
          "title" : {
            "$ref" : "#/components/schemas/Folder/properties/title"
          },
          "parentFolderId" : {
            "$ref" : "#/components/schemas/Folder/properties/parentFolderId"
          },
          "locked" : {
            "$ref" : "#/components/schemas/Folder/properties/locked"
          },
          "files" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          }
        }
      },
      "DeviceState" : {
        "type" : "object",
        "properties" : {
          "playMode" : {
            "type" : "string",
            "enum" : [ "playlist", "abpreset", "direct" ],
            "description" : "represents the device playback mode"
          },
          "playState" : {
            "type" : "string",
            "enum" : [ "stopped", "paused", "playing" ],
            "description" : "represents the current play state"
          },
          "currentMedia" : {
            "$ref" : "#/components/schemas/Media"
          },
          "nextMedia" : {
            "$ref" : "#/components/schemas/Media"
          },
          "elapsed" : {
            "type" : "integer",
            "description" : "represents, in miliseconds, the time elasped since the current media started playback",
            "readOnly" : true
          },
          "remaining" : {
            "type" : "integer",
            "description" : "represents, in miliseconds, the time elasped since the current media started playback",
            "readOnly" : true
          },
          "outputPreviewURL" : {
            "type" : "string",
            "example" : "/device/state/output-preview.png",
            "description" : "provides a URL where the current video output can be monitored as a PNG snapshot (the device should refresh this snapshot at least once per second)",
            "readOnly" : true
          }
        }
      },
      "DeviceInfo" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "example" : "3210-0313",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "example" : "My Media Player"
          },
          "owner" : {
            "type" : "string",
            "example" : "FMAV, Inc."
          },
          "serialNo" : {
            "type" : "string",
            "example" : "0000112341",
            "readOnly" : true
          },
          "hardwareVer" : {
            "type" : "string",
            "example" : "1.3",
            "readOnly" : true
          },
          "firmwareVer" : {
            "type" : "string",
            "example" : "0.1",
            "readOnly" : true
          },
          "language" : {
            "type" : "string",
            "example" : "en-CA",
            "description" : "Languange string in standard locale format."
          },
          "multiDeviceMode" : {
            "$ref" : "#/components/schemas/MultiDeviceSettings/properties/mode"
          },
          "storageStats" : {
            "$ref" : "#/components/schemas/StorageStatistics"
          }
        }
      },
      "VideoSettings" : {
        "type" : "object",
        "properties" : {
          "resolutionId" : {
            "$ref" : "#/components/schemas/VideoResolution/properties/id"
          },
          "availableResolutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoResolution"
            },
            "readOnly" : true
          },
          "outputMode" : {
            "type" : "string",
            "enum" : [ "normal", "test", "blackout" ]
          },
          "testPatternId" : {
            "type" : "string"
          }
        }
      },
      "VideoResolution" : {
        "type" : "object",
        "readOnly" : true,
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "width" : {
            "type" : "integer",
            "example" : 1920
          },
          "height" : {
            "type" : "integer",
            "example" : 1080
          },
          "frameRate" : {
            "type" : "number",
            "example" : 23.97,
            "description" : "represents the video frame rate, in frames per second. For still images, should be 0"
          }
        }
      },
      "MultiDeviceSettings" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "enum" : [ "master", "follower" ]
          },
          "mastersAvailable" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceInfo"
            },
            "readOnly" : true
          },
          "masterSerialNo" : {
            "type" : "string",
            "description" : "if mode = master, represents the serial number of the remote device selected as master"
          },
          "masterState" : {
            "$ref" : "#/components/schemas/DeviceState"
          }
        }
      },
      "StorageStatistics" : {
        "type" : "object",
        "properties" : {
          "free" : {
            "type" : "integer",
            "example" : 10816,
            "readOnly" : true
          },
          "used" : {
            "type" : "integer",
            "example" : 1024,
            "readOnly" : true
          },
          "remain" : {
            "type" : "integer",
            "example" : 9792,
            "readOnly" : true
          }
        }
      }
    }
  }
}