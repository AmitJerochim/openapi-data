openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: XNAT Metrics SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/XNAT/Metrics/1.0.0
info:
  title: XNAT Metrics Plugin REST API
  description: Provides functions to manage and configure the XNAT Metrics plugin on an XNAT server.
  version: "1.0.0"
  contact:
    email: jrherrick@wustl.edu
  license:
    name: Simplified BSD License
    url: 'https://opensource.org/licenses/BSD-2-Clause'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /prefs:
    get:
      tags:
        - developers
      summary: Returns a map containing all of the preferences and settings for the metrics plugin.
      operationId: getPreferences
      description: |
        Provides a view of the preferences and values associated with the metrics plugin.
      responses:
        '200':
          description: The preferences were successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
              example:
                enabled: true
                siteUUID: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                piName: "Ada Lovelace"
                piEmail: "ada@miskatonic.edu"
                adminName: "Henry Armitage"
        '404':
          description: Indicates that the user doesn't have sufficient privileges to view the preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "The requested URI path could not be found."
    put:
      tags:
        - admins
      summary: Updates the preferences from the contents of the request.
      operationId: setPreferences
      description: Sets the values for the preferences specified in the object in the request body.
      responses:
        '200':
          description: Preferences updated successfully.
        '400':
          description: Indicates a problem with the preferences or values sent with the request.
        '404':
          description: Indicates that the user doesn't have sufficient privileges to update the preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "The requested URI path could not be found."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
        description: The map of preferences to update.
  /prefs/{preference}:
    get:
      tags:
        - developers
      summary: Returns the value of the specified preference.
      operationId: getPreference
      description: |
        Gets the value of the specified preference associated with the metrics plugin.
      parameters:
        - in: path
          name: preference
          description: Specify the name of the particular preference to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The requested preference was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
              examples:
                enabled:
                  value: true
                siteUUID:
                  value: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                piName:
                  value: "Ada Lovelace"
                piEmail:
                  value: "ada@miskatonic.edu"
                adminName:
                  value: "Henry Armitage"
        '404':
          description: If the user has sufficient privileges to view the preferences, this indicates that the specified preference doesn't exist. This can also indicate that the user does not have sufficient privileges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "The requested URI path could not be found."
    put:
      tags:
        - admins
      summary: Updates a preference setting.
      operationId: setPreference
      description: Updates the value of the preference setting indicated by the preference parameter.
      parameters:
        - in: path
          name: preference
          description: Specify the name of the particular preference to update.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Preferences updated successfully.
        '400':
          description: Indicates a problem with the preferences or values sent with the request.
        '404':
          description: Indicates that the user doesn't have sufficient privileges to update the preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "The requested URI path could not be found."
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The value to which the specified preference should be set.
  /reports:
    get:
      tags:
        - developers
      summary: Returns a list of reports.
      operationId: getReports
      description: |
        Returns a map of report IDs and the date on which the report was submitted to the XNAT metrics collector service or, if the report has not yet been successfully submitted, the date of the last attempted submission.
      parameters:
        - in: query
          name: page
          description: Which page of the overall results to display.
          required: false
          schema:
            type: integer
        - in: query
          name: size
          description: Indicates the size of the results set.
          required: false
          schema:
            type: integer
        - in: query
          name: sort
          description: Indicates how the results should be sorted.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The requested preference was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
              example:
                1: "2020-01-01 12:00:00.000-0500"
                2: "2020-01-02 12:00:00.000-0500"
                3: "2020-01-03 12:00:00.000-0500"
                4: "2020-01-04 12:00:00.000-0500"
                5: "2020-01-05 12:00:00.000-0500"
                6: "2020-01-06 12:00:00.000-0500"
                7: "2020-01-07 12:00:00.000-0500"
        '404':
          description: Indicates that the user does not have sufficient privileges to view the list of reports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "The requested URI path could not be found."
  /reports/{reportId}:
    get:
      tags:
        - developers
      summary: Returns the report with the requested ID.
      operationId: getReport
      description: |
        Returns the report with the requested ID.
      parameters:
        - in: path
          name: reportId
          description: Which report the user wants to retrieve.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The requested report was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
              examples:
                1:
                  value:
                    id: 1
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-01 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                2:
                  value:
                    id: 2
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-02 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                3:
                  value:
                    id: 3
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-03 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                4:
                  value:
                    id: 4
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-04 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                5:
                  value:
                    id: 5
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-05 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                6:
                  value:
                    id: 6
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-06 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
                7:
                  value:
                    id: 7
                    uuid: "85e2a3d7-61f5-4ae7-86a8-6b0732240655"
                    submitDate: "2020-01-07 12:00:00.000-0500"
                    version: "1.7.6"
                    plugins:
                      pluginId: "container-service"
                      version: "2.1"
        '404':
          description: If the user has sufficient privileges to view reports, this indicates that the specified report doesn't exist. This can also indicate that the user does not have sufficient privileges to view reports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Preferences:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Preference'
    Preference:
      type: object
    Reports:
      type: object
      additionalProperties:
        type: string
    Report:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uuid:
          type: string
        submitDate:
          type: string
        version:
          type: string
      required:
        - uuid
        - submitDate
        - version
      additionalProperties:
        type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
