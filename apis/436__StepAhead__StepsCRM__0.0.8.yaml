openapi: 3.0.0
info:
  title: Steps CRM API
  description: Steps CRM API
  version: "0.0.8"
servers:
- url: https://api.stepahead.de:{port}/{basepath}
  description: Production server
- url: https://{subdomain}.stepahead.de:{port}/{basepath}
  description: Development & Integration servers
  variables:
    username:
      enum:
        - 'dev'
        - 'int'
        - 'sta'
      default: dev
      description: Describes the IT landscape (dev=development, int=integration, sta=staging)
    port:
#      enum:
#        - '8443'
#        - '443'
#      default: '8443'
      default: '8080'
      description: Defines the port
    basePath:
      default: v0.7.7
- url: https://virtserver.swaggerhub.com/StepAhead/StepsCRM/0.0.7
  description: Mockserver from SwaggerHub
- url: http://WfxTest.cloudapp.net:8089/
  description: Own Mockserver based on ServiceV
paths:
  /CRM/metadata/{domain}:
    head:
      tags:
      - CRM Data domains
      summary: Metadata for domains
      description: Returns metadata for domains, e.g. count of domain entries
      operationId: getDomainMetadata
      parameters:
      - name: domain
        in: path
        description: Id of the domain wherefore the metadata are requested
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned account addresses.
    get:
      tags:
      - CRM Data Metadata
      summary: Domain of a code
      description: Returns codes and values in all supported languages
      operationId: getDomainValues
      parameters:
      - name: domain
        in: path
        description: Code domain
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/$metadata#Metadata
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomain'
                      - $ref: '#/components/schemas/ValueCodedDomainWithTranslations'
                      - $ref: '#/components/schemas/ListDomain'
                #$ref: '#/components/schemas/Domain'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/CodesOfIndustry:
    head:
      tags:
      - CRM Data Domains
      summary: Metadata for Industry Codes
      description: Returns count of industry codes
      operationId: getMetadataCodesOfIndustry
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of Industry Codes.
    get:
      tags:
      - CRM Data Domains
      summary: Industry Codes
      description: Returns codes and values in all supported languages
      operationId: getDomainCodesOfIndustry
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/CodesOfIndustry
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomainWithTranslations'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/CodesOfBusinessType:
    head:
      tags:
      - CRM Data Domains
      summary: Metadata for BusinessType Codes
      description: Returns count of BusinessType codes
      operationId: getMetadataCodesOfBusinessType
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of BusinessType Codes.
    get:
      tags:
      - CRM Data Domains
      summary: BusinessType Codes
      description: Returns BusinessType codes and values in all supported languages
      operationId: getDomainCodesOfBusinessType
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/CodesOfBusinessType
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomainWithTranslations'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/CodesOfCustomerGroups:
    head:
      tags:
      - CRM Data Domains
      summary: Metadata for CustomerGroup Codes
      description: Returns count of CustomerGroup codes
      operationId: getMetadataCodesOfCustomerGroups
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of CustomerGroup Codes.
    get:
      tags:
      - CRM Data Domains
      summary: CustomerGroup Codes
      description: Returns CustomerGroup codes
      operationId: getDomainCodesOfCustomerGroups
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/CodesOfCustomerGroups
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomain'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/CodesOfSupplierGroups:
    head:
      tags:
      - CRM Data Domains
      summary: Metadata for SupplierGroup Codes
      description: Returns count of SupplierGroup codes
      operationId: getMetadataCodesOfSupplierGroups
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of SupplierGroup Codes.
    get:
      tags:
      - CRM Data Domains
      summary: SupplierGroup Codes
      description: Returns SupplierGroup codes
      operationId: getDomainCodesOfSupplierGroups
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/CodesOfSupplierGroups
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomain'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/ClerkTypes:
    head:
      tags:
      - CRM Data Domains
      summary: Metadata for ClerkTypes
      description: Returns count of ClerkTypes
      operationId: getMetadataClerkTypes
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of ClerkTypes.
    get:
      tags:
      - CRM Data Domains
      summary: ClerkTypes
      description: Returns ClerkTypes
      operationId: getDomainClerkTypes
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/ClerkTypes
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    oneOf:
                      - $ref: '#/components/schemas/ValueCodedDomain'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/customers/:
    head:
      tags:
      - CRM Data Customer
      summary: Metadata for customers
      description: Returns metadata for customers, e.g. count of customers
      operationId: getCustomersMetadata
      parameters: []
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned customers.
    get:
      tags:
      - CRM Data Customer
      summary: Customers by optional filter, sort and fields clause
      description: Returns all customers based on optional filter, sort and fields clause
      operationId: getCustomers
      parameters:
      - name: sort
        in: query
        description: Define the sorting of the results
        schema:
          type: string
      - name: fields
        in: query
        description: Define which fields should be returned in partial responses
        schema:
          type: string
      - name: lastEditTimestamp
        in: query
        description: Filter for last edit timestamp
        schema:
          type: string
      - name: ids
        in: query
        description: Filter for IDs
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned customers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: "http://example.com:5000/crm/$metadata#Customers"
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/suppliers/:
    head:
      tags:
      - CRM Data Supplier
      summary: Metadata for suppliers
      description: Returns metadata for suppliers, e.g. count of suppliers
      operationId: getSuppliersMetadata
      parameters: []
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned suppliers
    get:
      tags:
      - CRM Data Supplier
      summary: Suppliers by optional filter, sort and fields clause
      description: Returns all suppliers based on optional filter, sort and fields clause
      operationId: getSuppliers
      parameters:
      - name: sort
        in: query
        description: Define the sorting of the results
        schema:
          type: string
      - name: fields
        in: query
        description: Define which fields should be returned in partial responses
        schema:
          type: string
      - name: lastEditTimestamp
        in: query
        description: Filter for last edit timestamp
        schema:
          type: string
      - name: ids
        in: query
        description: Filter for IDs
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned suppliers
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: "http://example.com:5000/crm/$metadata#Suppliers"
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/customers({customerId})/:
    get:
      tags:
      - CRM Data Customer
      summary: Customer by ID
      description: Returns a customer based on ID
      operationId: getCustomerByCustomerId
      parameters:
      - name: customerId
        in: path
        description: Todo
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      '@odata.context':
                        type: string
                        description: self-referencing URL
                        example: "http://example.com:5000/crm/$metadata#Customer"
                      '@odata.count':
                        type: integer
                        description: Number of result items 
                        example: 123
                  - $ref: '#/components/schemas/Customer'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/suppliers/{supplierId}:
    get:
      tags:
      - CRM Data Supplier
      summary: Supplier by ID
      description: Returns a supplier based on ID
      operationId: getSupplierBySupplierId
      parameters:
      - name: supplierId
        in: path
        description: Todo
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      '@odata.context':
                        type: string
                        description: self-referencing URL
                        example: "http://example.com:5000/crm/$metadata#Supplier"
                      '@odata.count':
                        type: integer
                        description: Number of result items 
                        example: 123
                  - $ref: '#/components/schemas/Supplier'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/customers/{customerId}/addresses:
    head:
      tags:
      - CRM Data Address
      summary: Metadata for customer addresses
      description: Returns metadata for customer addresses, e.g. count of customer addresses
      operationId: getCustomerAddressesMetadata
      parameters:
      - name: customerId
        in: path
        description: Id of the customer wherefore the addresses are requested
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned customer addresses.
                example: 123
    get:
      tags:
      - CRM Data Address
      summary: Addresses of customer
      description: Returns all addresses based on a customers
      operationId: getAddressesByCustomerId
      parameters:
      - name: customerId
        in: path
        description: Id of the customer wherefore the addresses are requested
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned addresses
                example: 123
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocations'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/suppliers/{supplierId}/addresses:
    head:
      tags:
      - CRM Data Address
      summary: Metadata for supplier addresses
      description: Returns metadata for supplier addresses, e.g. count of supplier addresses
      operationId: getSupplierAddressesMetadata
      parameters:
      - name: supplierId
        in: path
        description: Id of the supplier wherefore the addresses are requested
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned supplier addresses
                example: 123
    get:
      tags:
      - CRM Data Address
      summary: Addresses of supplier
      description: Returns all addresses based on a supplier
      operationId: getAddressesBySupplierId
      parameters:
      - name: supplierId
        in: path
        description: Id of the supplier wherefore the addresses are requested
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned addresses
                example: 123
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocations'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/contacts/:
    head:
      tags:
      - CRM Data Contact
      summary: Metadata for accounts
      description: Returns metadata for contacts, e.g. count of contacts
      operationId: getContactsMetadata
      parameters: []
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned contacts
                example: 123
    get:
      tags:
      - CRM Data Contact
      summary: Contacts by optional filter, sort and fields clause
      description: Returns all contacts based on optional filter, sort and fields clause
      operationId: getContacts
      parameters:
      - name: sort
        in: query
        description: Define the sorting of the results
        schema:
          type: string
      - name: fields
        in: query
        description: Define which fields should be returned in partial responses
        schema:
          type: string
      - name: lastEditTimestamp
        in: query
        description: Filter for last edit timestamp
        schema:
          type: string
      - name: ids
        in: query
        description: Filter for IDs
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned contacts
                example: 123
          content:
            application/json:
              schema:
                type: object
                description: Successful response
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/$metadata#Contact
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/contacts/{contactId}:
    get:
      tags:
      - CRM Data Contact
      summary: Contact by ID
      description: Returns a contact based on ID
      operationId: getContactByContactId
      parameters:
      - name: contactId
        in: path
        description: Todo
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid or missing request parameters
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/employees/:
    head:
      tags:
      - CRM Data Employee
      summary: Metadata for employee
      description: Returns metadata for employees, e.g. count of employees
      operationId: getEmployeeMetadata
      parameters: []
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned employees
                example: 123
    get:
      tags:
      - CRM Data Employee
      summary: Employees by optional filter, sort and fields clause
      description: Returns all contacts based on optional filter, sort and fields clause
      operationId: getEmployee
      parameters:
      - name: sort
        in: query
        description: Define the sorting of the results
        schema:
          type: string
      - name: fields
        in: query
        description: Define which fields should be returned in partial responses
        schema:
          type: string
      - name: lastEditTimestamp
        in: query
        description: Filter for last edit timestamp
        schema:
          type: string
      - name: ids
        in: query
        description: Filter for IDs
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned employees
                example: 123
          content:
            application/json:
              schema:
                type: object
                description: Successful response
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: http://example.com:5000/crm/$metadata#Employee
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/employees({employeeId})/Image:
    get:
      tags:
      - CRM Data Employee Image
      summary: Image of an employee
      description: Returns the image of a dedicated employee
      operationId: getEmployeeImage
      parameters:
      - name: employeeId
        in: path
        description: Define the employee wherefore the image is requestede 
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            image/*:
              schema:
                type: string
                format: binary
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

  /CRM/invoices/:
    head:
      tags:
      - CRM Data Invoice
      summary: Metadata for invoices
      description: Returns metadata for invoices, e.g. count of invoices
      operationId: getInvoicesMetadata
      parameters: []
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned invoices.
    get:
      tags:
      - CRM Data Invoice
      summary: Invoices by optional filter, sort and fields clause
      description: Returns all invoice based on optional filter, sort and fields clause
      operationId: getInvoices
      parameters:
      - name: sort
        in: query
        description: Define the sorting of the results
        schema:
          type: string
      - name: fields
        in: query
        description: Define which fields should be returned in partial responses
        schema:
          type: string
      - name: lastEditTimestamp
        in: query
        description: Filter for last edit timestamp
        schema:
          type: string
      - name: ids
        in: query
        description: Filter for IDs
        schema:
          type: string
      responses:
        200:
          description: Successful response
          headers:
            X-Total-Count:
              schema:
                type: integer
                description: Count of returned invoices.
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@odata.context':
                    type: string
                    description: self-referencing URL
                    example: "http://example.com:5000/crm/$metadata#Invoices"
                  '@odata.count':
                    type: integer
                    description: Number of result items 
                    example: 123
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
        401:
          description: Invalid access token. Please try with a valid token
        403:
          description: Authorization credentials passed and accepted but account does not have permission
        404:
          description: The requested URI does not exist
        405:
          description: The requested resource does not support the supplied verb
        415:
          description: API does not support the requested content type
        422:
          description: The request is formed correctly, but due to some condition the request cannot be processed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      
  schemas:
    ListDomain:
      title: List of values
      description: List of values (e.g. simple Lookup-Lists)
      type: array
      items:
        type: string

    ValueCodedDomain:
      title: List of Codes
      description: List of Codes
      type: array
      items:
        $ref: '#/components/schemas/Code'
    
    Code:
      title: Code
      description: Code
      type: object
      properties:
        Ref:
          type: integer
        Code:
          type: string
        ParentCode:
          type: string
        Description:
          type: string
          
    ValueCodedDomainWithTranslations:
      title: List of Codes
      description: List of Codes
      type: array
      items:
        $ref: '#/components/schemas/CodeWithTranslations'
    
    CodeWithTranslations:
      title: Code
      description: Code
      type: object
      properties:
        Ref:
          type: integer
          description: Unique database identifier for the code
          example: 123
        Code:
          type: string
          description: Unique identifier inside the organisation
          example: SAG
        ParentCode:
          type: string
          description: Reference to a parent entity to model master detail relationships
          example: 123
        Translations:
          $ref: '#/components/schemas/Translations'

    Translations:
      title: List of Translations
      description: List of Translations
      type: array
      items:
        $ref: '#/components/schemas/Translation'
    
    Translation:
      type: object
      description: Translation
      properties:
        Language:
          type : string
          description: ISO language code
          maxLength: 2
          example: "de"
        Description:
          type : string
          description: Translated Value
          example: "Deutscher Text"

    Customer:
      title: Customer
      description: Business that represents a customer or potential customer
      allOf:
        - $ref: '#/components/schemas/Account'
        - type: object
          properties:
            IsDebitor:
              type: boolean
              description: Marks a customer as debtor 
              example: true
            CustomerGroup:
              type: string
              description: Relationships to the customer
              example: "Interessent"
            EmployeeCount:
              type: integer
              description: Count of employees inside the organization  
              example: 123
            SalesAmount:
              type: integer
              description: Annual revenue of an organization in thousand units  
              example: 100
        
    Supplier:
      title: Supplier
      description: Business that represents a supplier or potential supplier
      allOf:
        - $ref: '#/components/schemas/Account'
        - type: object
          properties:
            IsCreditor:
              type: boolean
              description: Marks a customer as creditor 
              example: true
            SupplierGroup:
              type: string
              description: Relationships to the supplier
              example: "Lieferant"

    Account:
      title: Account
      description: Business that represents a customer or potential customer.
      type: object
      required:
      - name
      - contacts
      properties:
        Ref:
          type: integer
          readOnly: true
          description: Unique database identifier for the organization 
          example: 123
        Number:
          type: string
          readOnly: true
          description: Unique key for the organization 
          example: "SAG"
        Name:
          type: string
          description: Name of the company or business
          example: Musterfirma GmbH
        BusinessArea:
          $ref: '#/components/schemas/BusinessArea'
        Information:
          type: string
          description: Details about the organization
          example: Musterfirma GmbH is working with world-leading industrial companies and data communication organisations around the world.
        Logo:
          type: string
          format: binary
          description: Binary representation of the organization's logo  
          #example: 
          #writeOnly: true
        Website:
          type: string
          format: uri
          description: The URL of the organization
          example: www.stepahead.de
        Contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: List of contacts
        Clerks:
          type: array
          items:
            $ref: '#/components/schemas/Clerk'
          description: List of clerks
        Locations:
          $ref: '#/components/schemas/AccountLocations'

    AccountLocations:
      title: List of AccountLocations
      description: List of AccountLocations
      type: array
      items:
        $ref: '#/components/schemas/AccountLocation'

    BusinessArea:
      title: Area of the business
      description: Area of the business of the account
      type: object
      properties:
        CodeOfIndustryType:
          type: string
          description: Code of the industy where the account is making its business
          example: IT
        CodeOfBusinessType:
          type: string
          description: Code of the business where the account is making its business
          example: Telecommunication

    PointOfLocation:
      title: Point of a location
      description: Spatial point of a location
      type: object
      writeOnly: true
      properties:
        Longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          writeOnly: true
          description: Longitude of the address
          example: 48.14
        Latitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          writeOnly: true
          description: Latitude of the address
          example: 11.58

    Communication:
      title: Options to communicate
      description: Options to communicate with a business partner
      type: object
      properties:
        Phone:
          type: string
          description: Primary telephone number
          example: +49 123 456789-0
        Fax:
          type: string
          description: Fax number
          example: +49 123 456789-99
        Mobile:
          type: string
          description: Mobile telephone
          example: +49 170 1234567
        Email:
          type: string
          format: email
          description: Email address
          example: 'info@musterfirma.de'

    Address:
      title: Address
      description: Address and/or shipping information
      type: object
      properties:
        Name:
          type: string
          description: Name of the company or person
          example: Musterfirma GmbH c/o Mustermann
        Ref:
          type: integer
          description: Identifier for additional addresses
          example: 123
        CustomerRef:
          type: integer
          description: Reference for customer ID
          example: 123
        SupplierRef:
          type: integer
          description: Reference for supplier ID
          example: 123
        ContactRef:
          type: integer
          description: Reference for contact ID
          example: 123
        EmployeeRef:
          type: integer
          description: Reference for employee ID
          example: 123
        IsDefault:
          type: boolean
          description: If true it is the default address, otherwise an alternative address
          example: true
        Street:
          type: string
          description: First line of the address
          example: Musterstrasse 123
        Postbox:
          type: string
          description: Post-office box of the address
          example: Postfach 123
        Zip:
          type: string
          description: Postal code of the address
          example: 10117
        City:
          type: string
          description: Location of the address
          example: Berlin
        Region:
          type: string
          description: Region (e.g. state) of the address
          example: Bavaria
        Country:
          type: string
          description: Country of the address
          example: Germany

    Contact:
      title: Person
      description: Person
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            Number:
              type: string
              description: "Id of the employee"
              example: 123
            WorkingForCustomer:
              $ref: '#/components/schemas/Customer'
            WorkingForSupplier:
              $ref: '#/components/schemas/Supplier'

    Clerk:
      title: Clerk
      description: Clerk who supports a customer or supplier
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            Number:
              type: string
              description: "Id of the employee"
              example: 123
            EmployeeRef:
              type: integer
              description: "Id of the employee"
              example: 123
            ClerkTypeRef:
              type: integer
              description: "Id of the ClerkType"
              example: 123
            Responsibility:
              type: object
              description: "blabla"
              example: "..."
    
    Employee:
      $ref: '#/components/schemas/Person'

    Person:
      title: Person
      description: Person
      type: object
      required:
      - lastname
      properties:
        Ref:
          type: integer
          readOnly: true
          description: Unique database identifier for the organization 
          example: 123
        Firstname:
          type: string
          description: Given name of a contact
          example: "Max"
        Lastname:
          type: string
          description: Surname of a contact
          example: "Mustermann"
        Salutation:
          type: string
          description: A salutation is a greeting used in a letter or other written or non-written communication
          example: "Herr"
        Function:
          type: string
          description: Function of a contact
          example: "Key Account Manager"
        Department:
          type: string
          description: Department or business unit where the contact works
          example: "Sales"
        Description:
          type: string
          description: Additional information about a contact
          example: "Decision maker"
        Locations:
          $ref: '#/components/schemas/AccountLocations'

    AccountLocation:
      title: Location of an address
      description: Location of an address
      type: object
      properties:
        CodeOfAddressType:
          $ref: '#/components/schemas/AddressTypeCodeEnum'
        Address:
          $ref: '#/components/schemas/Address'
        Communication:
          $ref: '#/components/schemas/Communication'
        Point:
          $ref: '#/components/schemas/PointOfLocation'

    AddressTypeCodeEnum:
      title: Enumeration for Address Type Code 
      enum:
      - Legal
      - Billing
      - Shipping
      - Other
      type: string
      description: Enumeration for addresstypecode
      example: Shipping
    
    Invoice:
      title: Invoice
      description: Invoice
      type: object
      properties:
        Ref:
          type: integer
          readOnly: true
          description: Unique database identifier for the organization 
          example: 123
        Number:
          type: string
          description: Number of the invoice
          example: No123
        Description:
          type: string
          description: Description/Title of the invoice
          example: "Description of the invoice"
        Date:
          type: string
          format: date
          description: Date of the invoice
          example: '1970-01-01'
        CustomerRef:
          type: string
          description: Reference for customer ID
          example: Cust123
        Address:
          $ref: '#/components/schemas/InvoiceAddress'
        NetAmount:
          type: number
          format: float
          description: Net amount of the invoice
          example: 123.45
        GrossAmount:
          type: number
          format: float
          description: Gross amount of the invoice
          example: 123.45
        Currency:
          type: string
          description: Currency of the invoice
          example: EUR
        CreditNote:
          type: boolean
          description: Flag to describe invoice as credit note
          example: false
        ReversalInvoice:
          type: boolean
          description: Flag to describe invoice as a reversal invoice
          example: false
        LineItems:
          $ref: '#/components/schemas/InvoiceLineItems'
    
    InvoiceAddress:
      title: Invoice Adress
      description: Address for an invoice
      type: object
      properties:
        Name1:
          type: string
          description: Address Line 1
          example: Mustermann
        Name2:
          type: string
          description: Address Line 2
          example: c/o Muster Organisation
        Street:
          type: string
          description: Street of the address
          example: Musterstrasse 1
        Postbox:
          type: string
          description: Postbox office of the address
          example: PF123
        Zip:
          type: string
          description: Zip code of the address
          example: Zip12345
        City:
          type: string
          description: City of the address
          example: Musterstadt
        CountryCode:
          type: string
          description: Alpha2-2 ISO-code of the address
          example: DE

    InvoiceLineItems:
      title: List of InvoiceLineItems
      description: List of InvoiceLineItems
      type: array
      items:
        $ref: '#/components/schemas/InvoiceLineItem'
    
    InvoiceLineItem:
      title: Invoice Line Item
      description: Line item of an invoice
      type: object
      properties:
        Ref:
          type: integer
          readOnly: true
          description: Unique database identifier for the organization 
          example: 123
        PositionNumber:
          type: integer
          description: Position of the line item
          example: No123
        Number:
          type: string
          description: Number of the line item, usually the article name
          example: a0815
        Article:
          $ref: '#/components/schemas/Article'
        Name:
          type: string
          description: Name of the line item, usually the article name
          example: Article 0815
        Description:
          type: string
          description: Long name of the line item, usually the article long description
          example: Article 0815, new in 2018
        Quantity:
          type: number
          format: float
          description: Quantity of an article
          example: 123
        NetAmount:
          type: number
          format: float
          description: Net amount of the line item
          example: 123.45
        Discount:
          type: number
          format: float
          description: Discount of the line item
          example: 123.45

    Article:
      title: Article
      description: Article used for invoice line items
      type: object
      properties:
        Ref: 
          type: string
          readOnly: true
          description: Unique database identifier for the organization (article number)
          example: 123
        Price:
          type: number
          format: float
          description: Unit price of the article
          example: 123.45

    Error:
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: integer
          format: int32 # has to be an enumeration with valid HTTP codes
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          description: The HTTP status code generated by the origin server for this occurrence of the problem
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem

  responses:
    NotFound:
#      description: The specified resource was not found
      description: The requested URI does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      # Invalid access token. Please try with a valid token
      # Authorization credentials passed and accepted but account does not have permission
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

# end