openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: >-
      https://virtserver.swaggerhub.com/American-Airlines7/OrderFulfillment/2.0.0
  - description: SwaggerHub API Auto Mocking
    url: >-
      https://virtserver.swaggerhub.com/American-Airlines7/OrderFulfillment/2.0.0
info:
  version: "2.0.7"
  title: Swagger OrderFulfill
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: orderFulfillment
    description: 'Everything about fulfilling a collection of order items'
paths:
  /orderFulfillment:
    post:
      tags:
        - orderFulfillment
      summary: fulfills an order request
      operationId: orderFulfillment
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
        '206':
          description: partial success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
        '500':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderFulfillmentRequest'
components:
  schemas:
    personalDetails:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: 'Jacob'
        middleName:
          type: string
          example: 'Alexander'
        lastName:
          type: string
          example: 'Wilkins'
      xml:
        name: personDetails
    unaffiliatedUpgradeProduct:
      type: object
      properties:
        quantity:
          description: 'Quantity required for the purchase of stickers using credit card'
          type: number
          example: '15.00'
        eightPackageQuantity:
          description: 'Each sticker of quantity of 8'
          type: number
          example: '2.00'
        sixteenPackageQuantity:
          description: 'Each sticker of quantity of 16'
          type: number
          example: '2.00'
      xml:
        name: unaffiliatedUpgradeProduct
    amount:
      type: object
      required:
        - value
        - currencyCode
      properties:
        value:
          description: 'Amount to be authorized'
          type: number
          example: '15.00'
        currencyCode:
          description: 'ISO 3 char currency code'
          type: string
          example: USD
      xml:
        name: amount
    creditCardFormOfPayment:
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
          required:
            - expiryMonth
            - expiryYear
            - cardNumber
            - billingAddress
            - holder
            - cardType
          properties:
            cardNumber:
              type: string
              example: '4111111111111111'
              description: 'Full Credit card'
            cardType:
              type: string
              example: AX
              description: 'type of the card that is being used'
            expiryMonth:
              type: string
              format: MM
              description: 'two digits; zero padded for 1 digit, January to be send as 01'
            expiryYear:
              type: string
              format: YYYY
              example: 2018
              description: '4 digit number'
            cvc:
              type: string
              example: 737
              description: 'required for AMEX,Visa and Mastercard'
              minLength: 1
              maxLength: 20
            holder:
              $ref: '#/components/schemas/personalDetails'
            billingAddress:
              $ref: '#/components/schemas/address'
            authorizationDetails:
              $ref: '#/components/schemas/authorizationDetails'
      xml:
        name: creditCardFormOfPayment
    milesFormOfPayment:
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
          required:
            - cardNumber
            - conversionRate
            - numberOfMiles
            - billingAddress
            - holder
          properties:
            cardNumber:
              type: string
              example: '4111111111111111'
              description: 'Full Credit card'
            conversionRate:
              type: number
              description: 'Conversion Rate from Miles to Dollars'
            numberOfMiles:
              type: integer
              example: 1000
              description: 'Number of miles'
            holder:
              $ref: '#/components/schemas/personalDetails'
            billingAddress:
              $ref: '#/components/schemas/address'
            authorizationDetails:
              $ref: '#/components/schemas/authorizationDetails'
      xml:
        name: milesFormOfPayment
    emdsFormOfPayment:
      allOf:
         - $ref: '#/components/schemas/formOfPayment'
         - type: object
           required:
             - emdsDocumentCollection
           properties:
             emdsDocumentCollection:
               minItems: 1
               type: array
               items:
                 $ref: '#/components/schemas/emdsDocumentCollection'
      xml:
        name: emdsFormOfPayment
    awardFormOfPayment:
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
          required:
            - auditId
            - requestType
            - awards
          properties:
            auditId:
              type: string
              example: A726334
              description: 'Employee ID who is initiating the channel request'
            requestType:
              type: string
              enum:
                - REINSTATE
                - ISSUE
                - REINSTATE_ISSUE
            awards:
              minItems: 1
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/awardReinstate'
                  - $ref: '#/components/schemas/awardIssue'
      xml:
        name: awardFormOfPayment
    reinstateAwardCode:
      type: object
      required:
        - awardPackageCode
        - transactionId
        - aadvantageMemberId
      properties:
        awardPackageCode:
          type: string
          description: 'Dynamic vs static award code'
          example: 'T90MMU'
        transactionId:
          type: string
          description: 'Transaction ID per award'
        aadvantageMemberId:
          type: string
          example: 044TFK6
          description: 'AA advantage account ID'
        awardType:
          type: string
          example: B
      xml:
        name: reinstateAwardCode
    issueAwardCode:
      type: object
      required:
        - awardPackageCode
        - aadvantageMemberId
        - mileageRequiredAmount
        - awardUsers
        - flightDate
        - flightNumber
        - awardDestinationCode
        - awardOriginCode
      properties:
        awardPackageCode:
          type: string
          example: 'T90MMU'
          description: 'award code value'
        aadvantageMemberId:
          type: string
          example: 044TFK6
          description: 'AA advantage account ID'
        mileageRequiredAmount:
          type: integer
          example: 1000
          description: 'Mileage Required Amount'
        awardUsers:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/awardUser'
        flightDate:
          type: string
          example: '2020-08-31'
          description: 'Format is yyyy-MM-dd'
        flightNumber:
          type: string
          example: '1566'
        awardDestinationCode:
          type: string
          example: 'BOS'
        awardOriginCode:
          type: string
          example: 'LAX'
        awardType:
          type: string
          example: B
      xml:
        name: issueAwardCode
    awardReinstate:
      type: object
      required:
        - awardCodes
      properties:
        awardReason:
          type: string
          default: REINSTATE
          enum:
            - REINSTATE
        awardCodes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/reinstateAwardCode'
      xml:
        name: awardReinstate
    awardIssue:
      type: object
      required:
        - awardCodes
      properties:
        awardReason:
          type: string
          default: ISSUE
          enum:
            - ISSUE
        awardCodes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/issueAwardCode'
      xml:
        name: awardIssue
    awardUser:
      type: object
      required:
        - passengerId
        - certUserFirstName
        - certUserLastName
      properties:
        passengerId:
          type: string
        certUserFirstName:
          type: string
          example: 'Jacob'
        certUserLastName:
          type: string
          example: 'Wilkins'
      xml:
        name: awardUser
    segment:
      type: object
      required:
        - carrierCode
        - classOfTravel
        - dateOfTravel
        - destinationAirportCode
        - flightNumber
        - id
        - originAirportCode
      properties:
        originAirportCode:
          type: string
          example: 'DFW'
          description: '3 letter IATA code'
        flightNumber:
          type: string
          example: '2242'
          minLength: 1
          maxLength: 5
        carrierCode:
          type: string
          example: 'AA'
          description: '2 letter IATA code'
        fareBaseCode:
          type: string
          example: B
          description: >-
            Even though it is optional Channel needs to populate it if they can
            , since it is a mandatory element on the payment services.
          minLength: 1
        classOfTravel:
          type: string
          example: 'Y'
          description: '1 letter, alphabetical'
        stopOverCode:
          type: string
          example: x
          description: |-
            1 letter, alphabetical 
             Valid Values: 
             O: stopover allow 
             X: stopover not allowed. Even though it is optional Channel needs to populate it if they can , since it is a mandatory element on the payment services.
        destinationAirportCode:
          type: string
          example: JFK
          description: 3 letter IATA code
        dateOfTravel:
          type: string
          format: 'YYYY-MM-DD HH:MM'
          example: '2019-01-20 10:22'
          description: ''
        id:
          type: string
          pattern: '^[1-9]+\.?[1-9]+$'
          example: '1.1'
          description: >-
            Number before . represents slice id and number after . represents
            segment number in that slice 
      xml:
        name: segment
    loyaltyProgramInfo:
      type: object
      required:
        - id
        - carrier
        - tierLevel
      properties:
        id:
          type: string
          description: 'Frequent flyer program number like AAdvantage number'
        carrier:
          type: string
          description: 'carrier code to which loyalty program subscribed to.'
        tierLevel:
          type: string
          enum:
            - ConciergeKey
            - ExecutivePlatinum
            - PlatinumPro
            - Platinum
            - Gold
            - LimitedGold
            - Regular
            - Other
      xml:
        name: loyaltyProgramInfo
    passenger:
      type: object
      required:
        - person
        - id
      properties:
        personalDetails:
          $ref: '#/components/schemas/personalDetails'
        id:
          description: |-
            Passenger identifier  
             sequential number starting with 1.1, but it could have 1.2,1.3, 1.4 ....2.1,2.2 ...
          type: string
          example: '1.1'
        passengerType:
          type: string
          enum:
            - ADULT
            - CHILD
            - SENIOR
            - LAP_INFANT
            - COMPANION
            - YOUTH
            - FEDERAL_GOVT
            - MILITARY
            - STATE_GOVT
            - APASS
            - NONREV
          example: ADULT
        elitePassenger:
          type: boolean
          description: 'set to true if the passenger has elite status'
        isRevenuePassenger:
          type: boolean
          description: 'is he/she a revenue passenger'
        loyaltyProgramInfo:
          $ref: '#/components/schemas/loyaltyProgramInfo'
      xml:
        name: passenger
    paymentDetails:
      type: object
      required:
        - formOfPayments
      properties:
        shopperInfo:
          $ref: '#/components/schemas/shopperInfo'
        formOfPayments:
          minItems: 1
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/awardFormOfPayment'
              - $ref: '#/components/schemas/creditCardFormOfPayment'
              - $ref: '#/components/schemas/emdsFormOfPayment'
              - $ref: '#/components/schemas/milesFormOfPayment'
              - $ref: '#/components/schemas/noPayment'
        
      xml:
        name: paymentDetails
    shopperInfo:
      type: object
      required:
        - email
        - countryCode
        - languageCode
      properties:
        deviceFingerprint:
          type: string
          example: m7Cmrf++0cW4P6XfF7m/rA
          description: >-
            Device Fingerprinting allows you to log unique attributes of\ \ the
            shopper device and analyze them during repeat visits of the same
            shopper
        email:
          type: string
          format: email
          example: <email-Address>@aa.com
        ip:
          type: string
          format: ipv4
          example: 83.53.51.61
        interaction:
          type: string
          example: Ecommerce
          description: 'Interaction will always be Ecommerce for the MVP'
        countryCode:
          type: string
          pattern: '^[A-Z]{2}$'
          example: US
          description: '2 letter code, Based on site locale.'
        languageCode:
          type: string
          pattern: '^[A-Z]{2}$'
          example: EN
          description: '2 letter code, based on site locale language'
        browserInfo:
          $ref: '#/components/schemas/browserInfo'
      xml:
        name: shopperInfo
    browserInfo:
      type: object
      required:
        - acceptHeader
        - userAgent
      properties:
        acceptHeader:
          type: string
          example: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
        userAgent:
          type: string
          example: >-
            Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008052912
            Firefox/3.0
      xml:
        name: browserInfo
    address:
      type: object
      required:
        - city
        - country
        - addressLine1
      properties:
        city:
          type: string
          example: Richardson
        country:
          type: string
          example: US
        postalCode:
          type: string
          example: 75802
        stateOrProvince:
          type: string
          example: TX
        addressLine1:
          type: string
          example: 350 vistacourt dr
        addressLine2:
          type: string
          example: apartment no 7214
      xml:
        name: address
    airline:
      type: object
      required:
        - airlineCode
        - passengers
      properties:
        computerizedReservationSystem:
          type: string
          minLength: 0
          maxLength: 4
          description: 'GDS in which the PNR was created'
          example: 1S
        airlineCode:
          description: '3 digit IATA code '
          type: string
          example: '001'
        flightDate:
          description: ''
          format: YYYY-MM-DD
          type: string
          example: '2018-09-24'
        designatorCode:
          description: '2 letter IATA code '
          type: string
          pattern: '^[A-Z]{2}$'
          example: AA
        slices:
          minItems: 1
          type: array
          description: >-
            An array of slices in the itinerary where each slice contain 1 or
            more segments
          items:
            $ref: '#/components/schemas/slice'
        passengers:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/passenger'
      xml:
        name: airline
    slice:
      type: object
      required:
        - segments
        - id
      properties:
        segments:
          minItems: 1
          type: array
          description: It's an array of segments in the itinerary
          items:
            $ref: '#/components/schemas/segment'
        id:
          type: string
          example: '1...start with 1 and increment by 1'
      xml:
        name: slice
    authorizationDetails:
      type: object
      required:
        - approvalCode
        - pspReferenceNumber
      properties:
        approvalCode:
          type: string
          example: 123456
        pspReferenceNumber:
          type: string
          example: null
          description: >-
            the reference number provided the payment gateway for capture
            reconciliation
      xml:
        name: authorizationDetails
    formOfPayment:
      type: object
      required:
        - paymentId
        - paymentType
      properties:
        paymentId:
          type: string
          example: 1
        paymentType:
          type: string
          enum:
            - SCHEME
            - CREDITCARDAPPROVAL
            - AWARD
            - EMDS
            - MILES
            - GIFTCARD
            - VOUCHER
            - AFOP
            - OTHER
            - NOPAYMENT
            - CASH
        amountToBeCharged:
          $ref: '#/components/schemas/amount'
          discriminator:
            propertyName: paymentType
            mapping:
              AWARD: '#/components/schemas/awardFormOfPayment'
              SCHEME: '#/components/schemas/creditCardFormOfPayment'
              CREDITCARDAPPROVAL: '#/components/schemas/creditCardFormOfPayment'
              EMDS: '#/components/schemas/emdsFormOfPayment'
              MILES: '#/components/schemas/milesFormOfPayment'
              NOPAYMENT: '#/components/schemas/noPayment'
              CASH: '#/components/schemas/cashFormOfPayment'
      xml:
        name: formOfPayment
    
    cashFormOfPayment:
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
          required:
            - referenceId
          properties:
            referenceId:
              type: string
              minLength: 1
              maxLength: 128
              description: Identifier created by the point of sale - for the reference purpose during reconciliation
      xml:
        name: cashFormOfPayment
        
        
    noPayment:
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
      xml:
        name: noPayment
      
    emdCoupon:
      type: object
      required:
        - emdID
        - couponNumber
      properties:
        emdID:
          type: string
          example: ''
        couponNumber:
          type: string
          example: ''
      xml:
        name: emdCoupon
    segmentEMDCoupon:
      type: object
      required:
        - legIdReference
        - emdCoupon
      properties:
        emdCoupon:
          $ref: '#/components/schemas/emdCoupon'
        legIdReference:
          type: integer
          description: 'same leg id value from the list of legs in the airline object'
      xml:
        name: segmentEMDCoupon
    productCatalogParams:
      type: object
      required:
        - commercialName
        - rfic
        - rfisc
        - groupCode
        - emdType
        - vendorID
      properties:
        commercialName:
          type: string
          description: 'CommercialName of Service or product'
        rfic:
          type: string
          description: 'Reason For Issuance'
        rfisc:
          type: string
          description: 'Reason for issuance subcode'
        groupCode:
          type: string
          description: 'Group code identifying type of Service'
        owningCarrier:
          type: string
        emdType:
          type: string
          enum:
            - STANDALONE
            - FLIGHT_COUPON
            - TICKET_NUMBER
            - OTHER_THAN_EMD
            - ELECTRONIC_TICKET
          example: OTHER_THAN_EMD
        sjcIndicator:
          type: string
          example: ''
        feeAppInd:
          type: string
        vendorID:
          type: string
        equipmentType:
          type: string
        eTicketNumber:
          type: string
        couponNumber:
          type: string
        bookingMethod:
          type: string
        ssrCode:
          type: string
        noOfItems:
          type: integer
        statusCode:
          type: string
        optionalStatusCode:
          type: string
        fqtvCarrierFiledTierLevel:
          type: string
        formOfRefundIndicator:
          type: string
        guaranteedFeeIndicator:
          type: string
        refundIndicator:
          type: string
        brandedFareId:
          type: string
        tourCode:
          type: string
        purchaseBy:
          type: string
        reasonForFeeWaiver:
          type: string
        fulfillmentType:
          type: string
        ssimCode:
          type: string
        emdNumber:
          type: string
        emdCouponNumber:
          type: string
        iATAAppIndicator:
          type: string
        commissionIndicator:
          type: boolean
        interlineIndicator:
          type: boolean
        consumedIndicator:
          type: boolean
        feeApplicationIndicator:
          type: boolean
        taxExemptIndicator:
          type: boolean
        segmentEMDCoupon:
          $ref: '#/components/schemas/segmentEMDCoupon'
      xml:
        name: productCatalogParams
    orderItem:
      type: object
      required:
        - itemType
        - itemId
        - totalItemBaseAmount
        - passengerIds
      properties:
        itemType:
          type: string
          enum:
            - TICKET
            - EXCHANGE_TICKET
            - REISSUE
            - REVAL
            - PREFERRED_SEAT
            - REGULAR_SEAT
            - LOAD_FACTOR_BASED_UPGRADE
            - EARLY_UPGRADE
            - GROUP_ONE_BOARDING
            - IMPULSE_MILES
            - FIRST_BAG
            - SECOND_TO_N_BAG
            - CHECKED_BAG_WAIVER
            - STANDBY
            - INFLIGHT_WIFI
            - ADM_CLUB_ONE_DAY_PASS
            - FIVE_STAR
            - PRIORITY_REACCOM
            - REDUCED_CHANGE_FEE
            - CONFIRMED_FLIGHT_CHANGE
            - AUTOASSIGN_SEAT
            - FARE_BUNDLE
            - MAIN_CABIN_EXTRA
            - PREORDER_MEAL
            - ALTERNATE_FLIGHT_CHANGE
            - ALTERNATE_FLIGHT_CHANGE_FIRST_CABIN
            - ALTERNATE_FLIGHT_STANDBY
            - US_AIR_SEAT
            - MILEAGE_MULTIPLIER
            - EXTENDED_HOLD
            - PRIORITY_LIST_TRANSFER
            - SDS_PRIORITY_LIST_TRANSFER
            - CANCEL_SEGMENT
            - PRIORITY_PRODUCT
            - PAID_SEAT
            - MILEAGE_REINSTATE
            - PREPAID_BAGS
            - REVENUE_LATE_CHECK_IN
            - PAID_PROMTION
            - OXYGEN
            - VOLUNTARY_PAPER_TICKET
            - UNACCOMPANIED_MINOR_SERVICE
            - LOST_TICKET_SERVICE
            - STA_INDIVIDUAL_SERVICE_REQUEST
            - US_AADV_EXPEDITE_SERVICE
            - INTL_AADV_EXPEDITE_SERVICE
            - AADV_SAME_DAY_SERVICE
            - ASC_CHANGE_FEE
            - MILEAGE_REINSTATEMENT_FEE
            - E500
            - GROUP_DEPOSIT
            - OTHER_MISC_SVCS_FEE
            - OTHER_ITEM
          example: TICKET
          description: type of Order to be fulfilled
        itemId:
          type: string
          format: uuid
          description: order item identifier for reference
          example: GUID
        paymentIds:
          minItems: 1
          type: array
          items:
            type: string
          description: >-
            Populate this array when an order item is purchased with a specific
            form of payment and it's details are listed in payment details. By
            default we would take creditcard approval code as form of payment if
            not mentioned specifically.
        passengerIds:
          minItems: 1
          type: array
          items:
            type: string
          description: >-
            Populate this array, only when it refers to atleast a Pax. provide
            the array of Passenger ID details to whom Order is to be fulfilled.
            For any ancillary item, there will be single passenger ID for an
            order item.
          example: '[1.1,2.1]'
        totalItemBaseAmount:
          description: Total base amount of the order item for all passengers
          $ref: '#/components/schemas/amount'
        totalItemTaxAmount:
          description: >-
            Total tax amount of the order item for all passengers.Tax amount
            would be added to the item amount.
          $ref: '#/components/schemas/amount'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'  
        dependsOnItemID:
          type: string
          format: uuid
          description: The corelation ID of an item for which this item is dependant on
          discriminator:
            propertyName: itemType
            mapping:
              PREFERRED_SEAT: '#/components/schemas/seatOrderItem'
              TICKET: '#/components/schemas/ticketIssuanceOrderItem'
              EXCHANGE_TICKET: '#/components/schemas/exchangeTicketOrderItem'
              REISSUE: '#/components/schemas/ticketReIssuanceOrderItem'
              REVAL:   '#/components/schemas/ticketReIssuanceOrderItem'
              MILEAGE_REINSTATEMENT_FEE: '#/components/schemas/ancillaryOrderItem'
              GROUP_DEPOSIT: '#/components/schemas/groupDepositOrderItem'
              E500: '#/components/schemas/unaffiliatedUpgradeOrderItem'
      xml:
        name: orderItem
    ticketReIssuanceOrderItem:
      allOf:
        - $ref: '#/components/schemas/ticketOrderItem'
        - type: object
          required:
            - reissueType
            - reissueReason
            - affectedSegments
            - desiredSegments
          properties:
            reissueType:
              type: string
              enum: [EVN_XCH,ADD_COLLECT,REFUND_XCH]
            refundType:
              type: string
              enum: [VOUCHER,CREDITCARD,CASH,CHEQUE,ACCOUNTING]
            reissueReason:
              type: string
              enum: [SCHEDULE_CHANGE,AUTO_REACCOM,DYNAMIC_REACCOM,VOLUNTARY,DENIED_BOARDING,MIDPOINT_CHANGE,INVOLUNTARY,NONE_SPECIFIC,INSTANT_UPSELL,BASIC_ECONOMY_BUYOUT]
            isRebookNeeded:
              type: boolean
              default: true
            pqrNumber:
              type: number
              description: >-
                If the PQR is been built by point of Sale, give us the ID that
                exists in the SABRE for reissue.
            affectedSegments:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/segmentId'
            desiredSegments:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/segmentId'
            passengerDocumentMap:
              $ref: '#/components/schemas/passengerDocumentMap'
      xml:
        name: ticketReIssuanceOrderItem
    passengerDocumentMap:
      type: object
      properties:
        paxId:
          type: string
          description: Pax Id  mentioned in the Airline object.
          additionalProperties:
            $ref: '#/components/schemas/travelDocCollection'
      xml:
        name: passengerDocumentMap
        
    additionalKeyValueMap:
      type: object
      additionalProperties:
        type: string
      xml:
        name: additionalKeyValueMap
        
    emdsDocumentCollection:
      type: object
      properties:
        paxId:
          type: string
          description: Pax Id for the EMDS list.
        primaryEMDSDocumentNumber:
           type: string
           description: primary EMDS number to be used for exchange 
        emdDocuments:
          type: array
          minItems: 1
          description: List of EMDS documents for a paxId to be exchanged into a VCR.
          items:
            $ref: '#/components/schemas/document'
      xml:
        name: emdsDocumentCollection
        
    travelDocCollection:
      type: object
      properties:
        responseStatus:
          description: 'Look for this value in response only. To check if the order item is completely fulfilled or partial.As of now, this is more useful for reissue order item.'
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: 'Look for this in response only. To check the fulfillment status at passenger level. As of now, this is more useful for reissue order item.'
        errorResponseMessage:
          type: string
          description: 'Look for this value in response only.As of now, this is more useful for reissue order item.'
        newDocuments:
          type: array
          description: Populated in the response for the tickets that were generated cause of the given fulfillment request
          items:
            $ref: '#/components/schemas/document'
        originalDocuments:
          type: array
          description: This is populated for the Reissue order item, to provide the original documents prior to reissuing or revaling the order item.
          items:
            $ref: '#/components/schemas/document'
      xml:
        name: travelDocCollection
    document:
      type: object
      required:
        - documentType
        - documentNumber
      properties:
        documentType:
          type: string
          enum:
            - EMD
            - VCR
            - MSR
            - EMDS
            - REFUND_CREDITCARD
            - REFUND_CASH
            - REFUND_EMDS
            - REFUND_ACCOUNTING
            - REFUND_VOUCHER
            - OTHER
        documentNumber:
          type: string
        amount:
          $ref: '#/components/schemas/amount'
      xml:
        name: document
    segmentId:
      type: string
      description: segmentId to refer to the Segment object under Airline.
      xml:
        name: segmentId
    exchangeTicketOrderItem:
      allOf:
      - $ref: '#/components/schemas/ticketOrderItem'
      - type: object
      - required:
        - pqrNumber
        - isDeletePQRRequired
        - exchangeType
        type: object
        properties:
          pqrNumber:
            type: number
            description: Point of Sale should provide the PQR that has been created
              per passenger for EMDS to VCR exchange.
            example: 1
          isDeletePQRRequired:
             type: boolean
             description: delete the PQR when specified true
             example: true
          exchangeType:
            type: string
            description: Exchange type for EMDS to VCR exchange. 
            enum: [EVEN_XCH, REFUND_XCH, ADD_COLLECT]
          refundType:
            type: string
            description: Need the refund type specified for a refund based exchange.
            enum: [ACCOUNTING, STAND_ALONE_EMD]
      xml:
        name: exchangeicketOrderItem
    ticketIssuanceOrderItem:
      allOf:
        - $ref: '#/components/schemas/ticketOrderItem'
        - type: object
          required:
            - priceQuoteNumber
          properties:
            priceQuoteNumber:
              type: integer
              description: price quote number in the pnr to be ticketed
              example: 1
      xml:
        name: ticketIssuanceOrderItem
    ticketOrderItem:
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - type: object
          required:
            - individualPaxBaseAmount
            - individualPaxTaxAmount
          properties:
            individualPaxBaseAmount:
              description: Base amount for individual passenger in the order item
              $ref: '#/components/schemas/amount'
            individualPaxTaxAmount:
              description: >-
                tax amount for the individual passenger in the order item. Tax
                amount would be added to the base amount.
              $ref: '#/components/schemas/amount'
      xml:
        name: ticketOrderItem
    unaffiliatedOrderItem:
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - type: object
      xml:
        name: unaffiliatedOrderItem
    unaffiliatedUpgradeOrderItem:
      allOf:
        - $ref: '#/components/schemas/unaffiliatedOrderItem'
        - type: object
          properties:
            e500UpgradeItem:
              description: e500 product will be purchased as unaffiliated
              $ref: '#/components/schemas/unaffiliatedUpgradeProduct'
      xml:
        name: unaffiliatedUpgradeOrderItem
    ancillaryOrderItem:
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - type: object
          properties:
            productCatalogParams:
              $ref: '#/components/schemas/productCatalogParams'
            itineraryReference:
              type: object
              oneOf:
                - $ref: '#/components/schemas/segmentIdRef'
                - $ref: '#/components/schemas/sliceIdRef'
              discriminator:
                propertyName: referenceType
                mapping:
                  segmentReference: '#/components/schemas/segmentIdRef'
                  sliceReference: '#/components/schemas/sliceIdRef'
      xml:
        name: ancillaryOrderItem
    seatOrderItem:
      allOf:
        - $ref: '#/components/schemas/ancillaryOrderItem'
        - type: object
          properties:
            isPrsSeat:
              type: boolean
            isAcsSeat:
              type: boolean
            newSeat:
              type: string
              example: 1A
            oldSeat:
              type: string
              example: 12B
            changeOfGuage:
              type: boolean
            cabinClass:
              type: string
              enum:
                - FIRST
                - BUSINESS
                - PREIMUM_COACH
                - COACH
                - UNKNOWN
            unblockRequired:
              type: boolean
            exitRowMove:
              type: boolean
            isPayNeeded:
              type: string
              description: declare true if payment is needed for seat items
              enum:
                - true
                - false
            isProvisionNeeded:
              type: string
              description: declare true if provisioning needed for seat items
              enum:
                - true
                - false
      xml:
        name: seatOrderItem
    groupDepositOrderItem:
      allOf:
       - $ref: '#/components/schemas/ancillaryOrderItem'
       - type: object
         required:
            - groupDepositType
            - numberOfDeposits
            - individualDepositAmount
         properties:
            groupDepositType:
              type: string
              enum:
                - INITIAL_DEPOSIT
                - FARE_DIFFERENCE
            numberOfDeposits:
             type: integer
             minimum: 1
             maximum: 9
             description: Number of EMDs to be generated
             example: 1
            individualDepositAmount:
             description: Individual deposit amount for the passenger
             $ref: '#/components/schemas/amount' 
      xml:
       name: groupDepositOrderItem
              
    segmentIdRef:
      type: object
      required:
       - referenceType
       - id
      properties:
        referenceType:
          type: string
          enum:
           - segmentReference
        id:
          type: string
          pattern: '^[0-9]+\.?[0-9]*$'
          description: Segment Id reference that is been defined in the airline data
          example: '1.1'
      xml:
        name: segmentIdRef
        
    sliceIdRef:
      type: object
      required:
       - referenceType
       - id
      properties:
        referenceType:
          type: string
          enum:
           - sliceReference
        id:
          type: number
          description: >-
              Populate this for the order which is pertaining to a slice and the id
              that is defined in the airline data
          example: 1
      xml:
        name: sliceIdRef
    orderGroup:
      type: object
      required:
        - groupId
        - groupType
        - orderItems
      properties:
        groupType:
          type: string
          description: type of Order group to be fulfilled
          enum:
            - ticket
            - reissue
            - ancillary
            - fees
            - unaffiliated
            - other
        groupId:
          type: number
          description: order group identifier for reference
          example: '1'
        dependsOnGroupId:
          type: number
          description: reference of the group ID to which this group is dependant on
          example: '2'
        groupSubType:
          type: string
          description: sub type of the group
          example: Seat or award ticketing
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'  
        orderItems:
          minItems: 1
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/seatOrderItem'
              - $ref: '#/components/schemas/ticketIssuanceOrderItem'
              - $ref: '#/components/schemas/exchangeTicketOrderItem'
              - $ref: '#/components/schemas/ticketReIssuanceOrderItem'
              - $ref: '#/components/schemas/ancillaryOrderItem'
              - $ref: '#/components/schemas/groupDepositOrderItem'
              - $ref: '#/components/schemas/unaffiliatedUpgradeOrderItem'
              - $ref: '#/components/schemas/unaffiliatedOrderItem'
          
      xml:
        name: orderGroup
    header:
      type: object
      required:
        - clientId
        - transactionId
        - pointOfSale
      properties:
        clientId:
          type: string
          description: Client Identifier
          example: AACOM
        channel:
          type: string
          description: Channel Identifier for the client.Optional field
          example: ARC
        transactionId:
          type: string
          format: uuid
          description: unique id for each request
        host:
          type: string
          description: SABRE host patition for the record locator lookup
          example: CERT| TSTS | RES
        stationId:
          type: string
          description: station ID to which the Sales has to be associated to, for the accounting purpose.
          example: '31491574'
        nofepSessionToken:
          type: string
          description: >-
            sabre jcsapi ession token generated by the client, if it needs to be
            shared for using the same token
        swstoken:
          type: string
          description: >-
            sabre web service token if it needs to be used for the further
            actions
        pointOfSale:
          description: 3 letter - POS city code.
          type: string
          pattern: '^[a-zA-Z]{3}$'
          example: dfw
        recordLocator:
          description: PNR locator - if the fulfillment is affiliated to a reservation
          type: string
          pattern: '^[a-zA-Z]{6}$'
          example: ABCDEF
      xml:
        name: header
    orderFulfillmentRequest:
      type: object
      required:
        - header
        - orderGroups
      properties:
        header:
          $ref: '#/components/schemas/header'
        orderGroups:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderGroup'
        airline:
          $ref: '#/components/schemas/airline'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'  
      xml:
        name: orderFulfillmentRequest
    orderItemResponse:
      type: object
      required:
        - status
        - responseCode
        - itemId
        - individualDocBaseAmount
      properties:
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
          example: ''
        responseMessage:
          type: string
          description: >-
            description of the response code...to capture underneath MS error
            details
        nativeHostMessage:
          type: string
          description: >-
            The reponse message captured from PSS system i.e. SABRE..for
            analysis
        individualDocBaseAmount:
          description: Base amount of individual document generated for the order Item
          $ref: '#/components/schemas/amount'
        individualDocTaxAmount:
          description: Tax amount of individual document generated for the order Item
          $ref: '#/components/schemas/amount'
        itemId:
          type: string
          format: uuid
          description: order item identifier for reference...same that of request
          example: GUID
        passengerDocumentMap:
          type: array
          items:
            $ref: '#/components/schemas/passengerDocumentMap'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'   
        purchaseDocument:
          type: string
          description: order item identifier for reference...same that of request
      xml:
        name: orderItemResponse
    status:
      type: string
      enum:
        - SUCCESS
        - FAILED
        - PARTIAL
        - SKIPPED
      xml:
        name: status
    orderGroupResponse:
      type: object
      required:
        - status
        - responseCode
        - groupId
        - orderItemResponses
      properties:
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
          example: ''
        responseMessage:
          type: string
          description: >-
            description of the response code...to capture underneath MS error
            details
        groupId:
          type: number
          description: group Identifier same as request
          example: '1'
        orderItemResponses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderItemResponse'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'    
      xml:
        name: orderGroupResponse
    orderFulfillmentResponse:
      type: object
      required:
        - transactionId
        - status
        - responseCode
        - orderGroupResponses
      properties:
        transactionId:
          type: string
          format: uuid
          description: transaction id received in the request
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
          example: ''
        authCode:
          type: string
          description: Approval code generated in the error scenario.
          example: 'AB2354'  
        responseMessage:
          type: string
          description: >-
            description of the response code...to capture underneath MS error
            details
        recordLocator:
          description: PNR locator - if the fulfillment is affiliated to a reservation
          type: string
          pattern: '^[a-zA-Z]{6}$'
          example: ABCDEF
        orderGroupResponses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderGroupResponse'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
      xml:
        name: orderFulfillmentResponse