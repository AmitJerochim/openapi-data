openapi: 3.0.0
servers:
  - description: |
      This is an example of travel insurance contract saving as proposal, contract concluding and insurance payment calculation.
    url: https://virtserver.swaggerhub.com/Integration_tourists/Travel_contract_integration/1.0.6
info:
  description: |
    This is an example of travel insurance contract saving as proposal, contract concluding and insurance payment calculation. You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.6"
  title: 'Travel: contract saving as proposal, contract concluding and insurance payment calculation'
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: travel
    description: 'Travel: contract saving as proposal, contract concluding and insurance payment calculation'
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /bo/app/rest/api/contract/broker/travel:
    post:
      tags:
        - travel
      summary: Save travel contract as proposal
      operationId: saveTravelContract
      
      requestBody:
        description: Travel contract that needs to be saved as proposal at the BACK-OFFICE system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelContractRequest'
              
      responses:
        200:
          description: Успешное или неуспешное сохранение договора(ов) в статусе "Предложение" или "Заключен". Для запроса из одного договора будет возвращен ответ ContractCreationResponse, для запроса из массива договоров будет возвращен ответ ContractsCreationResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractCreationResponse'
        400:
          description: 'Некорректные параметры запроса'
        401:
          description: 'Неавторизирован'
        403:
          description: 'Доступ запрещён'
        404:
          description: 'Ресурс не найден'
        500:
          description: 'Внутрення ошибка сервера'
          
      security:
        - bearerAuth: []
        
  /bo/app/rest/api/contract/conclude/broker/travel:
    post:
      tags:
        - travel
      summary: Conclude contract
      operationId: concludeContract
      
      requestBody:
        description: Travel contract that needs to be concluded at the BACK-OFFICE system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractConclusionRequest'
              
      responses:
        200:
          description: Успешное или неуспешное заключение договора
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractConclusionResponse'
        400:
          description: 'Некорректные параметры запроса'
        401:
          description: 'Неавторизирован'
        403:
          description: 'Доступ запрещён'
        404:
          description: 'Ресурс не найден'
        500:
          description: 'Внутрення ошибка сервера'
          
      security:
        - bearerAuth: []
        
  /bo/app/rest/api/contract/calc/broker/travel:
    post:
      tags:
        - travel
      summary: Calculate insurance payment
      operationId: calculateInsurancePayment
      
      requestBody:
        description: Data for calculation at the BACK-OFFICE system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelCalculationRequest'
              
      responses:
        200:
          description: Успешное или неуспешное выполнение расчета страховой премии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractCalculationResponse'
        400:
          description: 'Некорректные параметры запроса'
        401:
          description: 'Неавторизирован'
        403:
          description: 'Доступ запрещён'
        404:
          description: 'Ресурс не найден'
        500:
          description: 'Внутрення ошибка сервера'
          
      security:
        - bearerAuth: []

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    TravelContractRequest:
      type: object
      properties:
        aquisitor_id:
          type: string
          description: 'Код соответствия аквизитора (Используется для таблицы "Настройка кода соответвия Аквизитора" в API. При этом должна быть настройка поля "Аквизитор" со значением "Аквизитор по коду соответствия". Если соответствия не найдено, аквизитор берется из онлайн-продукта.)'
        tarifPlanId:
          type: integer
          format: int64
          description: 'Идентификатор тарифного плана'
        saleChannelId:
          type: integer
          format: int64
          description: 'Идентификатор канала продаж'
        contractNumber:
          type: string
          description: 'Номер договора (поле обязательно для бланкового договора)'
        contractDateBegin:
          type: string
          format: date
          description: >-
            Дата начала действия договора (допустимые форматы: 'dd/MM/yyyy',
            'dd.MM.yyyy')
        contractDateEnd:
          type: string
          format: date
          description: >-
            Дата окончания действия договора (допустимые форматы: 'dd/MM/yyyy',
            'dd.MM.yyyy')
        paymentSum:
          type: number
          format: double
          description: 'Страховой платеж'
        client:
          $ref: '#/components/schemas/ClientDataRequestDto'
        objects:
          type: array
          items:
            $ref: '#/components/schemas/TravelContractInsObjectRequestDto'
        confirmationCode:
          type: string
          description: 'Код подтверждения заключения договора клиентом'
        checkNumber:
          type: string
          description: 'Номер чека'
        territories:
          type: array
          items:
            type: string
          description: >-
            Страны путешествия (ISO-коды стран в двухбуквенной системе).
            Исключения: Australia_and_Oceania (Австралия и Океания), Asia (Азия),
            Alderney (Альдерней), world (весь мир), Europe (Европа), sng (СНГ),
            ussr (Советский Союз (бывший)), shengen (Шенген)
        travelType:
          $ref: '#/components/schemas/TravelType'
        durationMultitrip:
          type: string
          description: >-
            Срок действия для многоразового путешествия. Формат строки - a/b, где
            где a - общее количество дней действия договора, b - количество
            возможных дней пребывания за границей на протяжении действия договора,
            независимо от дат поездок. Для отличного от предложенных сроков
            действия используется значение 'other'
        durationMultitripRealDays:
          type: integer
          description: >-
            Количество дней для многоразового путешествия (если в поле срока
            действия выбрано значение 'other')
        mppEnabled:
          type: boolean
          default: false
          description: 'Страхование медицинских расходов'
        mppInsSum:
          $ref: '#/components/schemas/InsSum'
        dnsEnabled:
          type: boolean
          default: false
          description: 'Страхование от несчастного случая'
        dnsInsSum:
          $ref: '#/components/schemas/InsSum'
        luggageEnabled:
          type: boolean
          default: false
          description: 'Страховая сумма по страхованию багажа'
        luggageInsSum:
          $ref: '#/components/schemas/InsSum'
        tripCancelEnabled:
          type: boolean
          default: false
          description: 'Страхование отмены путешествия'
        tripCancelInsSum:
          $ref: '#/components/schemas/InsSum'
      required:
        - contractDateBegin
        - contractDateEnd
        - paymentSum
        - client
        - objects
        - territories
        - travelType
        - mppEnabled
        - dnsEnabled
        - luggageEnabled
        - tripCancelEnabled
        
    ClientDataRequestDto:
      type: object
      properties:
        personType:
          $ref: '#/components/schemas/PersonType'
        person:
          $ref: '#/components/schemas/PersonRequestDto'
        firm:
          $ref: '#/components/schemas/FirmRequestDto'
        contact:
          $ref: '#/components/schemas/ContactRequestDto'
        identificationCard:
          $ref: '#/components/schemas/IdentificationCardRequestDto'
        additionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationCardRequestDto'
          description: 'Список документов, удостоверяющих личность'
        address:
          $ref: '#/components/schemas/AddressRequestDto'
        resident:
          type: boolean
          default: true
          description: 'Признак резидента. По умолчанию: true'
      required:
        - personType
        - contact
        - identificationCard
        - address
        
    PersonType:
      type: string
      enum:
        - NATURAL
        - PRIVATE
        - LEGAL
      default: NATURAL
      description: |
        Тип контрагента:
         * `NATURAL` - физическое лицо
         * `PRIVATE` - СПД-ФЛ
         * `LEGAL` - юридическое лицо
         
        По умолчанию: `NATURAL`
        
    PersonRequestDto:
      description: 'Личные данные (обязательны, если контрагентом является физическое лицо)'
      type: object
      properties:
        surname:
          type: string
          description: 'Фамилия'
        name:
          type: string
          description: 'Имя'
        fullNameLatin:
          type: string
          description: 'ФИО (латиницей)'
        birthDate:
          type: string
          format: date
          description: 'Дата рождения (допустимые форматы: ''dd/MM/yyyy'', ''dd.MM.yyyy'')'
      required:
        - surname
        - name
        - birthDate
        
    FirmRequestDto:
      description: 'Данные организации (обязательны, если контрагентом является юридическое лицо)'
      type: object
      properties:
        name:
          type: string
          description: 'Название'
        egrpou:
          type: string
          description: 'Код ЕГРПОУ'
        firmFullNameLatin:
          type: string
          description: 'Название (латиницей)'
      required:
        - name
        - egrpou
        
    ContactRequestDto:
      description: 'Контактные данные'
      type: object
      properties:
        email:
          type: string
          description: 'Адрес электронной почты'
        phone:
          type: string
          description: >-
            Номер мобильного телефона (в десятициферном формате с или без префикса
            '+38')
      required:
        - email
        - phone
        
    ContactInsuredPersonRequestDto:
      description: 'Контактные данные застрахованного лица (обязательны, если значение блока не равно null)'
      type: object
      properties:
        email:
          type: string
          description: 'Адрес электронной почты'
        phone:
          type: string
          description: >-
            Номер мобильного телефона (в десятициферном формате с или без префикса
            '+38')
      required:
        - email
        - phone
        
    IdentificationCardRequestDto:
      description: 'Данные документа, удостоверяющего личность'
      type: object
      properties:
        serie:
          type: string
          description: 'Серия документа'
        number:
          type: string
          description: 'Номер документа'
        docTypeCode:
          $ref: '#/components/schemas/DocTypeCode'
      required:
        - number
        
    DocTypeCode:
      type: string
      enum:
        - PASSPORT
        - ID_PASSPORT
        - DRIVING_LICENSE
        - PENSION_CERTIFICATE
        - E_PENSION_CERTIFICATE
        - DISABILITY_CERTIFICATE
        - VETERAN_CERTIFICATE
        - CHERNOBYL_CERTIFICATE
        - EXTERNAL_PASSPORT
        - FOREIGN_PASSPORT
        - RESIDENCE_PERMIT
        - REGISTRATION_CARD
        - BIRTH_CERTIFICATE
        - REFUGEE_STATUS_CERTIFICATE
        - MILITARY_IDENTITY_CARD
        - VGIRFO_DOCUMENT
        - PERMANENT_RESIDENCE_PERMIT_CERTIFICATE
        - TEMPORARY_RESIDENCE_PERMIT_CERTIFICATE
        - NEW_PASSPORT_TEMPLATE
      description: |
        Код типа документа, удостоверяющего личность:
         * `PASSPORT` - паспорт
         * `ID_PASSPORT` - ID-паспорт
         * `DRIVING_LICENSE` - водительское удостоверение
         * `PENSION_CERTIFICATE` - пенсионное удостоверение
         * `E_PENSION_CERTIFICATE` - электронное пенсионное удостоверение
         * `DISABILITY_CERTIFICATE` - удостоверение об инвалидности
         * `VETERAN_CERTIFICATE` - удостоверение участника войны
         * `CHERNOBYL_CERTIFICATE` - чернобыльское удостоверение
         * `EXTERNAL_PASSPORT` - заграничный паспорт
         * `FOREIGN_PASSPORT` - иностранный паспорт
         * `RESIDENCE_PERMIT` - вид на жительство
         * `REGISTRATION_CARD` - регистрационный талон
         * `BIRTH_CERTIFICATE` - свидетельство о рождении
         * `REFUGEE_STATUS_CERTIFICATE` - справка о статусе беженца
         * `MILITARY_IDENTITY_CARD` - военный билет
         * `VGIRFO_DOCUMENT` - документ, выданый ОГИРФЛ
         * `PERMANENT_RESIDENCE_PERMIT_CERTIFICATE` - постоянный вид на жительство в Украине
         * `TEMPORARY_RESIDENCE_PERMIT_CERTIFICATE` - временный вид на жительство в Украине
         * `NEW_PASSPORT_TEMPLATE` - паспорт (новый образец)
         
    AddressRequestDto:
      description: 'Данные адреса'
      type: object
      properties:
        country:
          type: string
          description: 'Страна (ISO-коды страны в двухбуквенной системе)'
        region:
          $ref: '#/components/schemas/Region'
        area:
          type: string
          description: 'Район'
        town:
          type: string
          description: 'Населенный пункт'
        street:
          type: string
          description: 'Улица'
        house:
          type: string
          description: 'Номер дома'
        addressLatin:
          type: string
          description: 'Адрес латиницей'
      required:
        - country
        
    Region:
      type: string
      enum:
        - NONE_REGION
        - KRIM_REGION
        - VINNITSA_REGION
        - VOLIN_REGION
        - DNEPROPETROVSK_REGION
        - DONEZK_REGION
        - ZHITOMIR_REGION
        - ZAKARPATIE_REGION
        - ZAPOROZIE_REGION
        - IVANOFRANKOVSK_REGION
        - KIEV_REGION
        - KIROVOGRAD_REGION
        - LUGANSK_REGION
        - LVOV_REGION
        - NIKOLAEV_REGION
        - ODESSA_REGION
        - POLTAVA_REGION
        - ROVEN_REGION
        - SUMI_REGION
        - TERNOPOL_REGION
        - KHARKOV_REGION
        - KHERSON_REGION
        - KHMELNIZK_REGION
        - CHERKASSI_REGION
        - CHERNIGOV_REGION
        - CHERNOVZI_REGION
      description: |
        Область:
         * `NONE_REGION` - не задана
         * `KRIM_REGION` - Автономная Республика Крым
         * `VINNITSA_REGION` - Винницкая
         * `VOLIN_REGION` - Волынская
         * `DNEPROPETROVSK_REGION` - Днепропетровская
         * `DONEZK_REGION` - Донецкая
         * `ZHITOMIR_REGION` - Житомирская
         * `ZAKARPATIE_REGION` - Закарпатская
         * `ZAPOROZIE_REGION` - Запорожская
         * `IVANOFRANKOVSK_REGION` - Ивано-Франковская
         * `KIEV_REGION` - Киевская
         * `KIROVOGRAD_REGION` - Кировоградская
         * `LUGANSK_REGION` - Луганская
         * `LVOV_REGION` - Львовская
         * `NIKOLAEV_REGION` - Николаевская
         * `ODESSA_REGION` - Одесская
         * `POLTAVA_REGION` - Полтавская
         * `ROVEN_REGION` - Ровенская
         * `SUMI_REGION` - Сумская
         * `TERNOPOL_REGION` - Тернопольская
         * `KHARKOV_REGION` - Харьковская
         * `KHERSON_REGION` - Херсонская
         * `KHMELNIZK_REGION` - Хмельницкая
         * `CHERKASSI_REGION` - Черкасская
         * `CHERNIGOV_REGION` - Черниговская
         * `CHERNOVZI_REGION` - Черновицкая
         
    TravelContractInsObjectRequestDto:
      description: 'Застрахованный объект'
      type: object
      properties:
        objectCode:
          type: string
          description: 'Код застрахованного объекта (insuredPerson)'
        insuredPerson:
          $ref: '#/components/schemas/ContractInsuredPersonDataRequestDto'
        goalTravel:
          type: array
          items:
            $ref: '#/components/schemas/GoalTravel'
      required:
        - objectCode
        - insuredPerson
        
    ContractInsuredPersonDataRequestDto:
      description: 'Застрахованное лицо'
      type: object
      properties:
        personType:
          type: string
          enum:
            - NATURAL
          default: NATURAL
          description: |
            Тип контрагента:
              * `NATURAL` - физическое лицо
            По умолчанию: `NATURAL`
        person:
          $ref: '#/components/schemas/PersonRequestDto'
        contact:
          $ref: '#/components/schemas/ContactInsuredPersonRequestDto'
        identificationCard:
          $ref: '#/components/schemas/IdentificationCardRequestDto'
        additionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationCardRequestDto'
          description: 'Список документов, удостоверяющих личность'
        address:
          $ref: '#/components/schemas/AddressRequestDto'
        resident:
          type: boolean
          default: true
          description: 'Признак резидента. По умолчанию: true'
      required:
        - personType
        - person
        - identificationCard
        - address
        
    TravelType:
      type: string
      enum:
        - ONE
        - MANY
      description: |
        Тип путешествия:
         * `ONE` - одноразовое
         * `MANY` - многоразовое
         
    InsSum:
      description: 'Страховая сумма (значение и валюта)'
      type: object
      properties:
        value:
          type: number
          format: double
          description: 'Страховая сумма'
        type:
          $ref: '#/components/schemas/CurrencyType'
      required:
        - value
        - type
        
    GoalTravel:
      type: string
      enum:
        - EXTRIM
        - DANGEROUS
        - TREINING
        - SPORT
        - EDUCATION
      description: |
        Цель поездки:
         * `EXTRIM` - экстремальный спорт
         * `DANGEROUS` - физическая (или опасная) работа
         * `TREINING` - тренировки и соревнования
         * `SPORT` - спорт
         * `EDUCATION` - обучение
         
    CurrencyType:
      type: string
      enum:
        - UAH
        - USD
        - EUR
      description: |
        Валюта:
         * `UAH` - гривна
         * `USD` - доллар США
         * `EUR` - евро
         
    ResponseStatus:
      type: string
      enum:
        - SUCCESS
        - ERROR
      description: |
        Статус ответа:
         * `SUCCESS` - успешное выполнение
         * `ERROR` - ошибка выполнения
         
    ContractCreationEntityType:
      type: string
      enum:
        - CONTRACT
        - ORDER
      description: |
        Сущность:
         * `CONTRACT` - договор
         * `ORDER` - заказ
         
    ContractCreationResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        responseMessage:
          type: string
          description: 'Текстовое сообщение о результате операции'
        entity:
          $ref: '#/components/schemas/ContractCreationEntityType'
        id:
          type: string
          description: 'Идентификатор сущности'
        requestContractNumber:
          type: string
          description: 'Номер договора из запроса'
      required:
        - status
        
    ContractsCreationResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        responseMessage:
          type: string
          description: 'Текстовое сообщение о результате операции'
        contractCreationResults:
          type: array
          items:
            $ref: '#/components/schemas/ContractCreationResponse'
      required:
        - status
        
    ContractCalculationResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        responseMessage:
          type: string
          description: 'Текстовое сообщение о результате операции'
        payment:
          type: number
          format: double
          description: 'Рассчитанный страховой платеж'
      required:
        - status
        
    ContractConclusionRequest:
      type: object
      properties:
        id:
          type: string
          description: 'Идентификатор сущности'
        entity:
          $ref: '#/components/schemas/ContractCreationEntityType'
      required:
        - id
        - entity
        
    ContractConclusionResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        responseMessage:
          type: string
          description: 'Текстовое сообщение о результате операции'
        contractNumber:
          type: string
          description: 'Номер заключенного договора'
      required:
        - status
        
    TravelCalculationRequest:
      type: object
      properties:
        travelType:
          $ref: '#/components/schemas/TravelType'
        duration:
          type: string
          description: >-
            Срок действия путешествия. Для одноразового путешествия задается
            количеством дней. Формат строки для многоразового путешествия - a/b,
            где где a - общее количество дней действия договора, b - количество
            возможных дней пребывания за границей на протяжении действия договора,
            независимо от дат поездок
        territories:
          type: array
          items:
            type: string
          description: >-
            Страны путешествия (ISO-коды стран в двухбуквенной системе).
            Исключения: Australia_and_Oceania (Австралия и Океания), Asia (Азия),
            Alderney (Альдерней), world (весь мир), Europe (Европа), sng (СНГ),
            ussr (Советский Союз (бывший)), shengen (Шенген)
        objects:
          type: array
          items:
            $ref: '#/components/schemas/TravelCalculationInsObjectRequestDto'
        mppEnabled:
          type: boolean
          default: false
          description: 'Страхование медицинских расходов'
        mppInsSum:
          $ref: '#/components/schemas/InsSum'
        dnsEnabled:
          type: boolean
          default: false
          description: 'Страхование от несчастного случая'
        dnsInsSum:
          $ref: '#/components/schemas/InsSum'
        luggageEnabled:
          type: boolean
          default: false
          description: 'Страховая сумма по страхованию багажа'
        luggageInsSum:
          $ref: '#/components/schemas/InsSum'
        tripCancelEnabled:
          type: boolean
          default: false
          description: 'Страхование отмены путешествия'
        tripCancelInsSum:
          $ref: '#/components/schemas/InsSum'
      required:
        - travelType
        - duration
        - territories
        - objects
        - mppEnabled
        - dnsEnabled
        - luggageEnabled
        - tripCancelEnabled
        
    TravelCalculationInsObjectRequestDto:
      description: Застрахованный объект
      type: object
      properties:
        objectCode:
          type: string
          description: 'Код застрахованного объекта (insuredPerson)'
        insuredPerson:
          $ref: '#/components/schemas/CalculationInsuredPersonDataRequestDto'
        goalTravel:
          type: array
          items:
            $ref: '#/components/schemas/GoalTravel'
      required:
        - objectCode
        - insuredPerson
        
    CalculationInsuredPersonDataRequestDto:
      description: 'Застрахованное лицо'
      allOf:
        - $ref: '#/components/schemas/CalculationClientDataRequestDto'
        - type: object
        - properties:
            personType:
              type: string
              enum:
                - NATURAL
              default: NATURAL
              description: |
                Тип контрагента:
                 * `NATURAL` - физическое лицо
                По умолчанию: `NATURAL`
                
    CalculationClientDataRequestDto:
      type: object
      properties:
        personType:
          $ref: '#/components/schemas/PersonType'
        person:
          $ref: '#/components/schemas/CalculationPersonRequestDto'
        resident:
          type: boolean
          default: true
          description: 'Признак резидента. По умолчанию: true'
      required:
        - personType
        - person
        
    CalculationPersonRequestDto:
      description: 'Личные данные'
      type: object
      properties:
        birthDate:
          type: string
          format: date
          description: 'Дата рождения (допустимые форматы: ''dd/MM/yyyy'', ''dd.MM.yyyy'')'
      required:
        - birthDate
