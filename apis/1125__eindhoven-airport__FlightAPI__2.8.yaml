openapi: 3.0.0
servers:
  - url: 'http://10.1.0.75:8181/api/Flight/v2'
  - url: 'http://10.1.0.77:8181/api/Flight/v2'
  - url: 'https://api.acc.eindhovenairport.nl/Flight/v2'
  - url: 'https://api.eindhovenairport.nl/Flight/v2'
info:
  version: "2.8"
  title: FlightAPI
paths:
  /baggageBelts:
    get:
      tags:
        - public
      summary: Search for baggage belts
      operationId: searchBaggageBelts
      parameters:
        - in: query
          name: code
          description: 'Code of a baggage belt'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaggageBelt'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /baggageBelts/{id}:
    get:
      tags:
        - public
      summary: 'Get a baggage belt'
      operationId: getBaggageBelt
      parameters:
        - in: path
          name: id
          required: true
          description: 'Baggage belt id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaggageBelt'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /checkInPositions:
    get:
      tags:
        - public
      summary: Search for check-in positions
      operationId: searchCheckInPositions
      parameters:
        - in: query
          name: code
          description: 'Code of a check-in position'
          required: false
          schema:
            type: string
        - in: query
          name: type
          description: 'Code of a check-in position'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckInPosition'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /checkInPositions/{id}:
    get:
      tags:
        - public
      summary: 'Get a check-in position'
      operationId: getCheckInPosition
      parameters:
        - in: path
          name: id
          required: true
          description: 'Check-in position id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInPosition'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /flights:
    get:
      tags:
        - public
      summary: Search for flights
      operationId: searchFlights
      parameters:
        - in: query
          name: startDate
          description: 'search period start date'
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: endDate
          description: 'search period end date'
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: direction
          description: 'Flight direction indicator'
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 1
        - in: query
          name: flightName
          description: Flight name
          required: false
          schema:
            type: string
            minLength: 3
            maxLength: 10
        - in: query
          name: handler
          description: Handler code
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 1
        - in: query
          name: prefixIATA
          description: 'IATA airline prefix'
          required: false
          schema:
            type: string
            minLength: 2
            maxLength: 3
        - in: query
          name: prefixICAO
          description: 'ICAO airline prefix'
          required: false
          schema:
            type: string
            minLength: 3
            maxLength: 3
        - in: query
          name: routeICAO
          description: 'List of ICAO airport codes'
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 4
              maxLength: 4
        - in: query
          name: pageSize
          description: 'Maximum size of the result set'
          required: false
          schema:
            type: integer
            default: 100
        - in: query
          name: offset
          description: 'Offset of the result set'
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /flights/{id}:
    get:
      tags:
        - public
      summary: Get a flight
      operationId: getFlight
      parameters:
        - in: path
          name: id
          required: true
          description: 'Flight id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '503':
          description: Service not available
    patch:
      tags:
        - public
      summary: Update a flight
      operationId: updateFlight
      parameters:
        - name: id
          in: path
          required: true
          description: 'ID of the flight to patch'
          schema:
            type: string
            format: uuid
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        - name: If-Match
          in: header
          required: true
          description: 'Version of the flight to patch'
          schema:
            type: string
          example: 'W/"1509120429"'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '409':
          description: Conflict
        '412':
          description: Precondition failed
        '415':
          description: Not supported
        '422':
          description: Unprocessable entity
        '501':
          description: Not implemented
        '503':
          description: Service not available
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatchList'
        required: true
  /flights/{id}/baggageBelts/{id2}:
    get:
      tags:
        - public
      summary: Get a flight's baggage belt
      operationId: getFlightBaggageBelt
      parameters:
        - in: path
          name: id
          required: true
          description: 'Flight id'
          schema:
            type: string
            format: uuid
        - in: path
          name: id2
          required: true
          description: 'Baggage belt id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaggageBelt'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /flights/{id}/checkInPositions:
    get:
      tags:
        - public
      summary: Get a flight's check-in positions
      operationId: getFlightCheckInPositions
      parameters:
        - in: path
          name: id
          required: true
          description: 'Flight id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckInPosition'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /flights/{id}/delays:
    get:
      tags:
        - public
      summary: Get a flight's delays
      operationId: getFlightFlightDelays
      parameters:
        - in: path
          name: id
          required: true
          description: 'Flight id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delay'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /flights/{id}/gates:
    get:
      tags:
        - public
      summary: Get a flight's gates
      operationId: getFlightGates
      parameters:
        - in: path
          name: id
          required: true
          description: Flight id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gate'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /flights/{id}/parkingStands/{id2}:
    get:
      tags:
        - public
      summary: Get a flight's parking stand
      operationId: getFlightParkingStand
      parameters:
        - in: path
          name: id
          required: true
          description: 'Flight id'
          schema:
            type: string
            format: uuid
        - in: path
          name: id2
          required: true
          description: 'Parking stand id'
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingStand'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /gates:
    get:
      tags:
        - public
      summary: Search for gates
      operationId: searchGates
      parameters:
        - in: query
          name: code
          description: Code of a gate
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gate'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /gates/{id}:
    get:
      tags:
        - public
      summary: Get a gate
      operationId: getGate
      parameters:
        - in: path
          name: id
          required: true
          description: Gate id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gate'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /parkingStands:
    get:
      tags:
        - public
      summary: Search for parking stands
      operationId: searchParkingStands
      parameters:
        - in: query
          name: code
          description: Code of a parking stand
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParkingStand'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '406':
          description: Not acceptable
        '503':
          description: Service not available
  /parkingStands/{id}:
    get:
      tags:
        - public
      summary: Get a parking stand
      operationId: getParkingStand
      parameters:
        - in: path
          name: id
          required: true
          description: Parking stand id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingStand'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '503':
          description: Service not available
components:
  schemas:
    Aerodrome:
      type: object
      properties:
        codeIATA:
          type: string
          example: 'EIN'
        codeICAO:
          type: string
          example: 'EHEH'
        name:
          type: string
          example: 'Eindhoven'
    Aircraft:
      type: object
      properties:
        maximumTakeOffWeight:
          type: integer
          example: 65500
        numberOfSeats:
          type: integer
          example: 189
        registration:
          type: string
          example: 'PHHSI'
        typeICAO:
          type: string
          example: 'B738'
    BaggageBelt:
      type: object
      required:
        - id
      properties:
        capacity:
          type: integer
          example: 100
        code:
          type: string
          example: '1'
        id:
          type: string
          format: uuid
          example: 'b2146969-3524-421d-bca4-930bd6ea3582'
        isActive:
          type: boolean
          example: true
        isSchengenOnly:
          type: boolean
          example: true
    CheckInPosition:
      type: object
      required:
        - id
      properties:
        code:
          type: string
          example: '01'
        id:
          type: string
          format: uuid
          example: 'cad20607-f1e6-45f8-a502-ddd77d0b514d'
        name:
          type: string
          example: 'Check-in 1'
        type:
          type: string
          example: 'S'
    Delay:
      type: object
      required:
        - codeNumeric
      properties:
        codeNumeric:
          type: string
          example: '19'
        delayMinutes:
          type: integer
          example: 15
        description:
          type: string
          example: 'REDUCED MOBILITY, boarding / deboarding of passengers with reduced mobility.'
        explanation:
          type: string
          example: 'We had more PRMs than initially announced.'
        isAirportControllable:
          type: boolean
          example: true
    Flight:
      type: object
      required:
        - id
      properties:
        actualBlockTime:
          type: string
          format: date-time
          description: Actual on- or off-block date time
          example: '2017-12-19T06:12:00Z'
        actualCheckInClosureTime:
          type: string
          format: date-time
          description: Actual check-in closure date time
          example: '2017-12-19T05:47:00Z'
        actualCheckInOpenTime:
          type: string
          format: date-time
          description: Actual check-in open date time
          example: '2017-12-19T04:26:00Z'
        actualFirstBagOnBeltTime:
          type: string
          format: date-time
          description: Actual first bag on baggage belt date time
          example: '2017-12-19T07:10:00Z'
        actualGateClosureTime:
          type: string
          format: date-time
          description: Actual gate closure date time
          example: '2017-12-19T05:50:00Z'
        actualGateOpenTime:
          type: string
          format: date-time
          description: Actual gate open date time
          example: '2017-12-19T05:30:00Z'
        actualLastBagOnBeltTime:
          type: string
          format: date-time
          description: Actual last bag on baggage belt date time
          example: '2017-12-19T07:30:00Z'
        actualNumberOfBaggageItems:
          type: integer
          description: Actual number of baggage items
          example: 121
        actualNumberOfPassengers:
          $ref: '#/components/schemas/FlightPassengers'
        actualNumberOfPRMPassengers:
          type: array
          items:
            $ref: '#/components/schemas/FlightPRMPassengersRecord'
          description: Actual PRM passenger numbers
        actualTakeOffWeight:
          type: integer
          description: Actual take-off weight
          example: 62000
        actualTime:
          type: string
          format: date-time
          description: Actual arrival or departure date time
          example: '2017-12-19T06:15:00Z'
        actualHandlingTime:
          type: string
          format: date-time
          description: Actual handling date time
          example: '2017-12-19T07:06:00Z'
        actualHandlingTimeExcludeTaxiTime:
          type: boolean
          description: Exclude taxi time from actual handling date time indicator
          example: false
        aircraft:
          $ref: '#/components/schemas/Aircraft'
        airTrafficType:
          type: string
          description: Air-traffic type code
          example: '1L'
        baggageBeltId:
          type: string
          format: uuid
          description: Baggage belt id
          example: 'b2146969-3524-421d-bca4-930bdea3582'
        baggageBeltChangeTime:
          type: string
          format: date-time
          description: Last luggage belt change date-time
        baggageBeltStatusText:
          $ref: '#/components/schemas/Text'
        baggagePreviousBeltId:
          type: string
          format: uuid
          description: Previously assigned baggage belt id
          example: '2576a686-1f59-4b44-ac30-3b154045357d'
        baggageStatusText:
          $ref: '#/components/schemas/Text'
        borderControlStatusText:
          $ref: '#/components/schemas/Text'
        calculatedTakeOffTime:
          type: string
          format: date-time
          description: Calculated take-off date time
          example: '2017-12-19T06:13:00Z'
        callSign:
          type: string
          description: Call sign
          example: 'KLM64L'
        checkInPositionIds:
          type: array
          items:
            type: string
            format: uuid
          description: Check-in positions
          example: 
          - '2bc6514f-7dee-49ba-a827-e5e004c5324c'
          - '4920ed9c-262d-4548-9e1b-5acc2071ea99'
        checkInStatus:
          type: string
          description: Check-in status
          example: 'O'
        checkInStatusText:
          $ref: '#/components/schemas/Text'
        codeshares:
          type: array
          items:
            $ref: '#/components/schemas/FlightNumber'
          description: Codeshare flight numbers
        delayBoardingCardPulled:
          type: boolean
          description: Boarding card has been pulled at the gate indicator
          example: true
        delayNumberOfGateBagsSold:
          type: integer
          description: Number of gate bags sold
          example: 3
        delaysDiscussed:
          type: boolean
          description: Gate delays are discussed and mutually agreed with captain
          example: true
        delayTotalMinutes:
          type: integer
          description: Total delay time in minutes
          example: 15
        delayTotalMinutesExplained:
          type: integer
          description: Total explained delay time in minutes
          example: 15
        direction:
          type: string
          description: Flight direction code
          example: 'A'
        displaySubTextAirside:
          $ref: '#/components/schemas/Text'
        displayTextAirside:
          $ref: '#/components/schemas/Text'
        displayTextLandside:
          $ref: '#/components/schemas/Text'
        displaySubTextLandside:
          $ref: '#/components/schemas/Text'
        displayTextPublic:
          $ref: '#/components/schemas/Text'
        expectedCheckInClosureTime:
          type: string
          format: date-time
          description: Expected check-in closure date time
          example: '2017-12-19T05:45:00Z'
        expectedGateActivationTime:
          type: string
          format: date-time
          description: Expected gate activation date time
          example: '2017-12-19T05:15:00Z'
        expectedTime:
          type: string
          format: date-time
          description: Expected arrival or departure date time
          example: '2017-12-19T06:10:00Z'
        expectedHandlingTime:
          type: string
          format: date-time
          description: Expected handling date time
          example: '2017-12-19T07:05:00Z'
        expectedHandlingTimeExcludeTaxiTime:
          type: boolean
          description: Exclude taxi time from expected handling date time indicator
          example: false
        expectedTotalNumberOfPassengers:
          type: integer
          description: Expected total number of passengers
          example: 179
        flightLevel:
          type: string
          description: Requested flight level according to flight plan
          example: '350'
        flightNumber:
          $ref: '#/components/schemas/FlightNumber'
        flightRules:
          type: string
          description: Applicable flight rules code (IFR/VFR)
          example: 'IFR'
        flightStatus:
          type: string
          description: Flight status code
          example: 'DIV'
        flightStatusText:
          $ref: '#/components/schemas/Text'
        gateActivationText:
          $ref: '#/components/schemas/Text'
        gateIds:
          type: array
          items:
            type: string
            format: uuid
          description: List of gate ids
          example: 
          - 'fc59c4e7-89a0-40b0-96c1-861cdecefcfe'
          - 'adbce97c-5050-4674-9210-494c2ff5f807'
        gateIsActive:
          type: boolean
          description: Gate active indicator
          example: true
        gateIsConflict:
          type: boolean
          description: Gate assignment conflict indicator
          example: false
        gateStatus:
          type: string
          description: Gate status code
          example: 'B'
        gateStatusText:
          $ref: '#/components/schemas/Text'
        handler:
          type: string
          description: Handler code
          example: 'H'
        id:
          type: string
          format: uuid
          description: Flight id
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        isClosedHandling:
          type: boolean
          description: Flight closed and checked by Handler indicator
          example: false
        isClosedOperations:
          type: boolean
          description: Flight closed and checked by Operations indicator
          example: false
        isEU:
          type: boolean
          description: Flight is within the European Union
          example: false
        isPublicInternal:
          type: boolean
          description: Flight is shared publicly at the Airport.
          example: true
        isPublicExternal:
          type: boolean
          description: Flight is shared publicly externally.
          example: true
        isSchengen:
          type: boolean
          description: Flight is within the Schengen area
          example: false
        isSlotCoordinated:
          type: boolean
          description: Flight is slot coordinated
          example: true
        load:
          type: integer
          description: Additional cargo load (in kilograms)
          example: 150
        linkedFlightId:
          type: string
          format: uuid
          description: Linked flight id
          example: '2a4723d6-5a71-459e-946e-bf96785b081e'
        parkingStandId:
          type: string
          format: uuid
          description: Parking stand id
          example: '4f22dfe1-cd33-4343-9f0f-8dbbe0535770'
        publicTime:
          type: string
          format: date-time
          description: Public scheduled arrival or departure date time
          example: '2017-12-19T06:00:00Z'
        runway:
          type: string
          description: Runway code
          example: '21'
        route:
          $ref: '#/components/schemas/Route'
        routeWaypointFirst:
          type: string
          description: First way point of flight route
          example: 'WOODY'
        routeWaypointFirstForecast:
          type: string
          description: Forecast of first way point of flight route
          example: 'WOODY'
        schemaTime:
          type: string
          format: date-time
          description: Private scheduled arrival or departure date time
          example: '2017-12-19T06:00:00Z'
        slotDelayCode:
          type: string
          description: Delay code for delayed slot
          example: '81'
        version:
          type: integer
          format: int64
          description: Version of the Flight object
          example: 1509120429
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    FlightNumber:
      type: object
      properties:
        prefixICAO:
          type: string
          description: ICAO prefix of flight number
          example: 'KLM'
        prefixIATA:
          type: string
          description: IATA prefix of flight number
          example: 'KL'
        number:
          type: string
          description: Flight number
          example: '64'
        flightName:
          type: string
          description: Full common name of the flight
          example: 'KL 64'
    FlightPassengers:
      type: object
      properties:
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/FlightPassengersRecord'
        transitPassengersInTerminal:
          type: boolean
          description: Transit passengers in terminal indicator
          example: false
    FlightPassengersRecord:
      type: object
      properties:
        aerodrome:
          $ref: '#/components/schemas/Aerodrome'
        crew:
          type: integer
          description: Number of crew
          example: 2
        infant:
          type: integer
          description: Number of infants
          example: 2
        normal:
          type: integer
          description: Number of normal passengers (adults+children)
          example: 168
        special:
          type: integer
          description: Number of special passengers (e.g. jumpseat passenger)
          example: 0
        transit:
          type: integer
          description: Number of transit passengers
          example: 10
    FlightPRMPassengersRecord:
      type: object
      properties:
        code:
          type: string
          description: PRM type code
          example: 'DEAF'
        number:
          type: integer
          description: Number of passengers for PRM type code
          example: 2
    Gate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Gate id
          example: '267a1f0e-64ff-4635-8d99-050a4087aad4'
        code:
          type: string
          description: Gate code
          example: '01'
        name:
          type: string
          description: Gate name
          example: 'Gate 1'
    Link:
      type: object
      description: HATEOAS link object in accordance to RFC5988
      required:
        - href
        - rel
        - type
      properties:
        href:
          type: string
          description: URL that defines the resource
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851/gates'
        rel:
          type: string
          description: Relation descriptor
          example: 'gates'
        type:
          type: string
          description: Supported methods
          example: 'GET'
    ParkingStand:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Parking stand id
          example: '4f22dfe1-cd33-4343-9f0f-8dbbe0535770'
        code:
          type: string
          description: Parking stand code
          example: 'S1'
        name:
          type: string
          description: Parking stand name
          example: 'Parking S1'
    Route:
      description: Flight route
      properties:
        origin:
          $ref: '#/components/schemas/Aerodrome'
        destination:
          $ref: '#/components/schemas/Aerodrome'
        via-1:
          $ref: '#/components/schemas/Aerodrome'
        via-2:
          $ref: '#/components/schemas/Aerodrome'
        diversion:
          $ref: '#/components/schemas/Aerodrome'
      type: object
    Text:
      description: Text
      properties:
        en:
          type: string
        nl:
          type: string
        colour:
          type: string
          example: '#FFFFFF'
    JSONPatch:
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: JSON pointer
        value:
          type: object
          description: The value to be set
        from:
          type: string
          description: JSON pointer
      required:
        - op
        - path
      type: object
      description: A JSONPatch document as defined by RFC6902
      example: '{ "op": "replace", "path": "gateIds", "value": "[''f4ed5205-b0aa-44df-835b-f18ff673704a'',''33fa6394-d679-4919-b7e9-c433ce7170f2'']" }'
    JSONPatchList:
        type: array
        items:
          $ref: '#/components/schemas/JSONPatch'
        description: List of JSONPatch objects
        example: '[{ "op": "replace", "path": "gateIds", "value": "[''f4ed5205-b0aa-44df-835b-f18ff673704a'',''33fa6394-d679-4919-b7e9-c433ce7170f2'']" },
        { "op": "replace", "path": "parkingStandId", "value": "[''4f22dfe1-cd33-4343-9f0f-8dbbe0535770'']" }]'
security:
  - bearerAuth: [handler-w, handler-r, operations-r, operations-w]