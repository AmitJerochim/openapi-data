penapi: 3.0.0
info:
  description: Access Daysk inventory for your community or space
  version: "1.0.0"
  title: Daysk open inventory
  contact:
    email: ben@daysk.com
tags:
  - name: Units
    description: Return desks or meeting room objects
  - name: Leads
paths:
  /inventory/units/:id:
    get:
      tags:
        - Units
      summary: Return the data of a single unit (meeting room or desk)
      operationId: SingleUnit
      responses:
        '200':
          description: unit object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitItem'
        '400':
          description: bad input parameter
  /inventory/spaces/:id/units:
    get:
      tags:
        - Units
      summary: Return the units of a space (meeting room or desk)
      operationId: SpaceUnits
      responses:
        '200':
          description: array of units of the specified space
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitItem'
        '400':
          description: bad input parameter
  /inventory/communities/:id/units:
    get:
      tags:
        - Units
      summary: searches for spaces, desks or meeting rooms
      operationId: CommunityUnits
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: type
          description: Type of results to return
          schema: 
            type: string
            enum: ['desks', 'meeting-rooms']
        - in: query
          name: lat
          description: pass lat coordinates for the search
          schema:
            type: string
        - in: query
          name: long
          description: pass long coordinates for the search
          schema:
            type: string
        - in: query
          name: startDate
          description: start date of the booking, to filter for only available spaces on that date
          schema: 
            type: string
            format: date
        - in: query
          name: endDate
          description: end date of the booking, to filter for only available spaces on that date
          schema: 
            type: string
            format: date-time
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: array of unit object matching passed criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitItem'
                  spaces: 
                    type: object
                    properties:
                      spaceId:
                        $ref: '#/components/schemas/SpaceItem'
        '400':
          description: bad input parameter
  
  /calendar/unit/:id:
    get:
      tags:
        - Calendars
      summary: Return calendar of bookings of a single unit (meeting room or desk)
      operationId: UnitCalendar
      parameters:
        - in: header
          name: api-key
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: range
          description: Filter events by time range
          schema: 
            type: string
            enum: ['future', 'week']
      responses:
        '200':
          description: calendar object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarItem'
        '400':
          description: bad input parameter
  /calendars/screen/:id:
    get:
      tags:
        - Calendars
      summary: Return calendar of bookings of a single screen (meeting room or desk)
      operationId: ScreenCalendar
      parameters:
        - in: header
          name: api-key
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: range
          description: Filter events by time range
          schema: 
            type: string
            enum: ['future', 'week']
      responses:
        '200':
          description: calendar object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarItem'
        '400':
          description: bad input parameter
  
  /calendars/sync/all:
    post:
      tags:
        - Calendars
      summary: Syncs calendars in your space from a provided json
      operationId: Sync
      parameters:
        - in: header
          name: api-key
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: array
                  items:
                    $ref: '#/components/schemas/SyncItem'
              
      responses:
        '200':
          description: result of the sync operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  synced:
                    type: object
                    properties:
                      newRequests:
                        type: number
                      updatedRequests:
                        type: number
                      deletedRequests:
                        type: number
        '400':
          description: bad input parameter
  
  /spaces/:id/leads/create:
    post:
      tags:
        - Leads
      summary: Create a new lead for the specified space
      description: The space will be notified of the new lead and a new lead will be shown in the space's backend
      operationId: CreateLead
      parameters:
        - in: header
          name: api-key
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lead:
                  $ref: '#/components/schemas/NewLead'
                
      responses:
        '200':
          description: lead creation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: bad input parameter
components:
  schemas:
    UnitItem:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: u72rmBuG4scCMC58b
        name:
          type: string
          example: Luminous desk
        url:
          type: string
          example: http://localhost:3000/list/meeting room/i29K9bSDFwN9SyhfE/test
        type:
          type: string
          enum: ['desk', 'meeting room']
        capacity:
          type: object
          properties: 
            standing: 
              type: number
            ushape:
              type: number
            boardroom:
              type: number
            classroom:
              type: number
        prices:
          type: object
          properties:
            hour:
              type: number
            halfday: 
              type: number
            day:
              type: number
            month:
              type: number
        parent:
          type: string
          example: 'qxvmgkFkefBxoPDBk'
        instant_booking:
          type: boolean
        features:
          type: array
          items:
            type: string
          example: ['booth']
        distance:
          type: number
          format: float
        images:
          type: array
          items:
            type: string
            example: 'https://s3-eu-west-1.amazonaws.com/daysk-app-dev-2/space_images/qxvmgkFkefBxoPDBk/pieces/i29K9bSDFwN9SyhfE/k8N42knBBWdoRANBG.jpg'
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
    CalendarItem:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: u72rmBuG4scCMC58b
        name:
          type: string
          example: Luminous desk
        images:
          type: array
          items:
            type: string
            example: 'https://s3-eu-west-1.amazonaws.com/daysk-app-dev-2/space_images/qxvmgkFkefBxoPDBk/pieces/i29K9bSDFwN9SyhfE/k8N42knBBWdoRANBG.jpg'
        type:
          type: string
          enum: ['desk', 'meeting room']
        schedule:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
                example: u72rmBuG4scCMC58b
                description: the booking id
              fromDate:
                type: object
                example: Date('2019-12-10T15:00:00.000Z')
              toDate:
                type: object
                example: Date('2019-12-10T17:00:00.000Z')
              info:
                type: object
                properties:
                  userId: 
                    type: string
                    format: uuid
                    example: u72rmBuG4scCMC58b
                  userName:
                    type: string
                    example: "Ben"
                  title:
                    type: string
                  descritpion:
                    type: string
              
          
    SpaceItem:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: u72rmBuG4scCMC58b
        name:
          type: string
          example: Luminous desk
        url:
          type: string
          example: http://localhost:3000/list/meeting room/i29K9bSDFwN9SyhfE/test
        type:
          type: string
          enum: ['desk', 'meeting room']
        images:
          type: array
          items:
            type: string
            example: 'https://s3-eu-west-1.amazonaws.com/daysk-app-dev-2/space_images/qxvmgkFkefBxoPDBk/pieces/i29K9bSDFwN9SyhfE/k8N42knBBWdoRANBG.jpg'
    NewLead:
      type: object
      properties:
        unitId:
          type: string
        name:
          type: string
          example: "Jose Sanchez"
        email:
          type: string
          example: "me@josesanchezdesign.com"
        startDate:
          type: string
          format: date
        numberDays:
          type: number
        numberPeople:
          type: number
        info:
          type: string
          example: "We will need also catering and extra chairs"
          
    SyncItem:
      type: object
      properties:
        _id: 
          type: string
          description: unique id of the booking. Generally the id of the booking in the external system
        deleted: 
          type: boolean
          description: optional, only pass to signify deletion of the event
        externalUnitId: 
          type: string
          description: value you have to specify in Daysk for your units. Generally the id of the unit in your external system
        start: 
          type: string
          format: date
        end: 
          type: string
          format: date
        title:
          type: string
        description:
          type: string