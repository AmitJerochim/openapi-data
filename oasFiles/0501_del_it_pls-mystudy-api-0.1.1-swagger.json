{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Current API",
    "description" : "Модели и запросы которые существуют на данный момент.\n",
    "termsOfService" : "http://swagger.io/terms/",
    "version" : "0.1.1"
  },
  "tags" : [ {
    "name" : "Authentication",
    "description" : "Запросы работающие с аунтефикацией пользователей в системе.\n"
  } ],
  "paths" : {
    "/courses/" : {
      "get" : {
        "summary" : "Получить все существующие курсы на платформе.\n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AllCoursesList"
          }
        }
      },
      "post" : {
        "summary" : "Создать пустой курс, с указаными мета-данными.\n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "required" : true,
          "description" : "JSON объект, содержащий необходимую информацию для создания курса.\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "title", "description" ],
                "properties" : {
                  "title" : {
                    "description" : "Название курса",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Описание курса",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Возращает айд-ди созданного курса.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "dsds\n",
                  "required" : [ "course_id" ],
                  "properties" : {
                    "course_id" : {
                      "type" : "integer",
                      "description" : "Ай-ди созданного курса.\n",
                      "example" : 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/courses/{courseId}" : {
      "get" : {
        "summary" : "Получить данные про один конкретный курс.\n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OneSpecificCourse"
          }
        }
      },
      "delete" : {
        "summary" : "Удалить указанный курс.\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      } ]
    },
    "/courses/{courseId}/publish/" : {
      "post" : {
        "summary" : "Опубликовать существующий курс.\n",
        "description" : "No documentation.\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      } ]
    },
    "/courses/{courseId}/unpublish/" : {
      "post" : {
        "summary" : "Де-опубликовать существующий опубликованный курс.\n",
        "description" : "No documentation.\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      } ]
    },
    "/courses/{courseId}/lessons/" : {
      "get" : {
        "summary" : "Получить список всех уроков\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Количество уроков в текущем курсе.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "number_of_lessons" : {
                      "type" : "integer",
                      "example" : 5
                    }
                  },
                  "required" : [ "number_of_lessons" ]
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Создать пустой урок\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "No idea what it is",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "index" : {
                      "type" : "integer",
                      "example" : 0
                    }
                  },
                  "required" : [ "index" ]
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      } ]
    },
    "/courses/{courseId}/lessons/swap" : {
      "post" : {
        "summary" : "Поменять метсами два урока\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "description" : "???\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "first" : {
                    "type" : "integer",
                    "example" : 0,
                    "description" : "Индекс урока, который должен поменяться местами с другим."
                  },
                  "second" : {
                    "type" : "integer",
                    "example" : 1,
                    "description" : "Индекс урока, который должен поменяться местами с другим."
                  }
                },
                "required" : [ "first", "second" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      } ]
    },
    "/courses/{courseId}/lessons/{index}" : {
      "get" : {
        "summary" : "Получить список всех учебных блоков. \n",
        "description" : "В ответ, не включаются __smart_only__ блоки.\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Описание одного урока.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneLesson"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Добавить учебный блок\n",
        "description" : "Не очень ясно насчет тела запроса.\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OneStudyBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Возращается ай-ди созданного блока",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "study_block_id" : {
                      "type" : "integer",
                      "example" : 1
                    }
                  },
                  "required" : [ "study_block_id" ]
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Удалить урок.\n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/{studyBlockType}/{studyBlockId}" : {
      "delete" : {
        "summary" : "Удалить учебный блок.\n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      }, {
        "$ref" : "#/components/parameters/studyBlockType"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/{studyBlockType}/{studyBlockId}/meta" : {
      "get" : {
        "summary" : "Получить данные об одном учебном блоке. \n",
        "description" : "????\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Описание одного учебного блока.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneStudyBlock"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      }, {
        "$ref" : "#/components/parameters/studyBlockType"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/{studyBlockType}/{studyBlockId}/progress" : {
      "post" : {
        "summary" : "Обновить прогресс по прохождению учебного блока\n",
        "description" : "На текущий момент, он просто \"полностью\" отмечает блок как выполенный.\n\n`requestBody` TBD\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      }, {
        "$ref" : "#/components/parameters/studyBlockType"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/songs/{studyBlockId}/audio" : {
      "get" : {
        "summary" : "Получить аудио файл.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/ogg" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/songs/{studyBlockId}/lyrics" : {
      "get" : {
        "summary" : "Получить слова для песни..\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "lyrics" : {
                      "type" : "string",
                      "example" : "la-la-la"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/grammars/{studyBlockId}/lyrics" : {
      "get" : {
        "summary" : "Получить тело граматической справки\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "string",
                      "example" : "English has SVO word ordering in most cases."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      }, {
        "$ref" : "#/components/parameters/studyBlockId"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/sessions" : {
      "get" : {
        "summary" : "Получить информацию про сессию.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionObject"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Попросить создать новую сессию.\n",
        "description" : "Этот метод тригерит таймер сессии.\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "Текущие результаты HAM теста.",
                "properties" : {
                  "health" : {
                    "type" : "integer",
                    "maximum" : 0,
                    "minimum" : 100,
                    "example" : 55
                  },
                  "activity" : {
                    "type" : "integer",
                    "maximum" : 0,
                    "minimum" : 100,
                    "example" : 55
                  },
                  "mood" : {
                    "type" : "integer",
                    "maximum" : 0,
                    "minimum" : 100,
                    "example" : 55
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionObject"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      } ]
    },
    "/courses/{courseId}/lessons/{index}/sessions/next" : {
      "post" : {
        "summary" : "Залить текущий прогресс и получить следующий учебный блок.\n",
        "description" : "Довольно сложный эндпоинт. \n\nДля него выполняются следющие правила:\n* Если больше нет блоков в сессии - возвращает сообщение\n* Что бы получить следующий блок - \"прогресс\" для предыдущего должен быть залит(на сервер).\n* Первы йраз, прогресс игнорируется??\n\n`requestBody` TBD\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "study_block_id" : {
                      "type" : "integer",
                      "example" : 11
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/courseId"
      }, {
        "$ref" : "#/components/parameters/index"
      } ]
    },
    "/files/audios" : {
      "post" : {
        "summary" : "Залить аудио-файл с песней.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "artist" : {
                    "type" : "string",
                    "example" : "Pupa"
                  },
                  "album" : {
                    "type" : "string",
                    "example" : "Lupa"
                  },
                  "title" : {
                    "type" : "string",
                    "example" : "Salary"
                  },
                  "lyrics" : {
                    "type" : "string",
                    "example" : "Once upon a time Pupa and Lupa went to get their salary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "audio" : {
                      "type" : "integer",
                      "example" : 11
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/audio/{audioId}" : {
      "get" : {
        "summary" : "Получить мета-данные об аудио-записи.\n",
        "description" : "!!!Скокро этот эндпоитнт станет deprecated!!!\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "OK\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudioBlock"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "summary" : "Обновить мета к аудио-файлам.\n",
        "description" : "???? Поля не обновлятся??\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "artist" : {
                    "type" : "string",
                    "example" : "Pupa"
                  },
                  "album" : {
                    "type" : "string",
                    "example" : "Lupa"
                  },
                  "title" : {
                    "type" : "string",
                    "example" : "Salary"
                  },
                  "lyrics" : {
                    "type" : "string",
                    "example" : "Once upon a time Pupa and Lupa went to get their salary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/audioId"
      } ]
    },
    "/files/grammars" : {
      "post" : {
        "summary" : "Залить новую граматику\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string",
                    "example" : "Sample Grammar"
                  },
                  "body" : {
                    "type" : "string",
                    "example" : "English has SVO word ordering in most cases"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "grammar" : {
                      "type" : "integer",
                      "example" : 11
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/grammars/{grammarId}" : {
      "patch" : {
        "summary" : "Обновить граматику.\n",
        "description" : "???? Поля не обновлятся??\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string",
                    "example" : "Sample Grammar"
                  },
                  "body" : {
                    "type" : "string",
                    "example" : "English has SVO word ordering in most cases"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/grammarId"
      } ]
    },
    "/dictionaries" : {
      "get" : {
        "summary" : "Получить списко всех словарей.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Достование списка прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dictionaries" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/OneDictionary"
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "post" : {
        "summary" : "Созадть пустой словарь.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "example" : "Some name"
                      },
                      "language" : {
                        "type" : "string",
                        "description" : "Язык всегда указывается в виде [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) кода.\n",
                        "example" : "ru"
                      },
                      "level" : {
                        "$ref" : "#/components/schemas/proficiency_level"
                      },
                      "description" : {
                        "type" : "string",
                        "example" : "Some description"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Создание словаря прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dictionary_id" : {
                      "type" : "integer",
                      "example" : 12
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestBody"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/dictionaries/{dictionaryId}" : {
      "get" : {
        "summary" : "Получить словарь по его ай-ди.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Достование одного словаря прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dictionary" : {
                      "$ref" : "#/components/schemas/OneDictionary"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/DictionaryNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete" : {
        "summary" : "Удалить словарь по его id.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Удаление одного словаря прошло успешно.\n"
          },
          "404" : {
            "description" : "Словарь с таким id не найдем.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "err" : {
                      "type" : "string",
                      "example" : "Some err description"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/dictionaryId"
      } ]
    },
    "/dictionaries/{dictionaryId}/words" : {
      "post" : {
        "summary" : "Добавить слово в словарь.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "$ref" : "#/components/schemas/TranslationWord"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Добавление слова прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "word_id" : {
                      "type" : "integer",
                      "example" : 12
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestBody"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/dictionaryId"
      } ]
    },
    "/dictionaries/{dictionaryId}/words/{studyMode}" : {
      "get" : {
        "summary" : "Получить список слов из словарь, для изучения в канкретном режиме.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Достование списка слов прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "words" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/TranslationWord"
                      }, {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "example" : 123
                          },
                          "dictionary_id" : {
                            "type" : "integer",
                            "example" : 1234
                          },
                          "date" : {
                            "type" : "string",
                            "format" : "date-time",
                            "example" : "2018-03-29T22:31:27-07:00"
                          }
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/DictionaryNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/dictionaryId"
      }, {
        "$ref" : "#/components/parameters/studyMode"
      } ]
    },
    "/dictionaries/{dictionaryId}/words/{studyMode}/progress" : {
      "post" : {
        "summary" : "Сохранить новый прогресс для словаря.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "progress" : {
                    "type" : "object",
                    "properties" : {
                      "word_id" : {
                        "type" : "integer",
                        "example" : 12
                      },
                      "learned" : {
                        "type" : "boolean",
                        "example" : false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Добавление прогресса прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "progress_id" : {
                      "type" : "integer",
                      "example" : 12
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestBody"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "get" : {
        "summary" : "Получить список \"прогрессов\" изучения заданного словаря в заданом режиме\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Достование списка \"прогрессов\" прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "progress" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "example" : 123
                          },
                          "user_id" : {
                            "type" : "integer",
                            "example" : 555
                          },
                          "dictionary_id" : {
                            "type" : "integer",
                            "example" : 1234
                          },
                          "date" : {
                            "type" : "string",
                            "format" : "date-time",
                            "example" : "2018-03-29T22:31:27-07:00"
                          },
                          "mode" : {
                            "$ref" : "#/components/parameters/studyMode"
                          },
                          "percent_learned" : {
                            "type" : "integer",
                            "example" : 19
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/DictionaryNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/dictionaryId"
      }, {
        "$ref" : "#/components/parameters/studyMode"
      } ]
    },
    "/dictionaries/{dictionaryId}/words/{studyMode}/progress/{progressId}" : {
      "get" : {
        "summary" : "Получить детальную информацию на какой-то из прогрессов.\n",
        "description" : "???\n",
        "tags" : [ "Courses" ],
        "responses" : {
          "200" : {
            "description" : "Достование \"прогресса\" прошло успешно.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "progress_info" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "progress_id" : {
                            "type" : "integer",
                            "example" : 123
                          },
                          "word_id" : {
                            "type" : "integer",
                            "example" : 555
                          },
                          "learned" : {
                            "type" : "boolean",
                            "example" : false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/DictionaryNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/dictionaryId"
      }, {
        "$ref" : "#/components/parameters/studyMode"
      }, {
        "$ref" : "#/components/parameters/progressId"
      } ]
    }
  },
  "components" : {
    "parameters" : {
      "progressId" : {
        "name" : "progressId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер прогресса по словарю.\n",
        "example" : 123
      },
      "studyMode" : {
        "name" : "studyMode",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "enum" : [ "manual", "smart" ]
        },
        "required" : true,
        "description" : "????\n",
        "example" : "smart"
      },
      "dictionaryId" : {
        "name" : "dictionaryId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер словаря.\n",
        "example" : 123
      },
      "grammarId" : {
        "name" : "grammarId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер граматического файла.\n",
        "example" : 123
      },
      "audioId" : {
        "name" : "audioId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер аудио-записи.\n",
        "example" : 123
      },
      "studyBlockType" : {
        "name" : "studyBlockType",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "enum" : [ "songs", "dictionaries", "grammars" ]
        },
        "required" : true,
        "description" : "Тип блока.\n",
        "example" : "songs"
      },
      "studyBlockId" : {
        "name" : "studyBlockId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер блока.\n",
        "example" : 123
      },
      "courseId" : {
        "name" : "courseId",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Уникальный идентификационный номер курса.\n",
        "example" : 123
      },
      "index" : {
        "name" : "index",
        "in" : "path",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "????.\n",
        "example" : 123
      }
    },
    "responses" : {
      "DictionaryNotFound" : {
        "description" : "Словарь с таким id не найдем.\n",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "err" : {
                  "type" : "string",
                  "example" : "Some err description"
                }
              }
            }
          }
        }
      },
      "BadRequestBody" : {
        "description" : "Неправильное тело запроса.\n",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "err" : {
                  "type" : "string",
                  "example" : "Some err description"
                }
              }
            }
          }
        }
      },
      "UnexpectedError" : {
        "description" : "Произошла какая-то ошибка.\n",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "err" : {
                  "type" : "string",
                  "example" : "Some err description"
                }
              }
            }
          }
        }
      },
      "OneSpecificCourse" : {
        "description" : "Возращает информацию(объекты типа `CourseMetaObject`) про интересующий нас курс.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CourseMetaObject"
            }
          }
        }
      },
      "AllCoursesList" : {
        "description" : "Возращает полный список всех курсов(объекты типа `CourseMetaObject`), купленых пользователем и нет.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CourseMetaObject"
              }
            }
          }
        }
      }
    },
    "schemas" : {
      "proficiency_level" : {
        "type" : "string",
        "enum" : [ "NPD", "N", "C2.High", "C2.Low", "C1.High", "C1.Low", "B2.High", "B2.Low", "B1.High", "B1.Low", "A2.High", "A2.Low", "A1.High", "A1.Low" ],
        "description" : "Уровень знания пользователем какого-либо языка. Мы квантуем _знание_ в текущей программе на 12(6 * 2) + 2 уровней:\n* `NP` - Нативный специлист по языку;\n* `N` - Нативный;\n* `C2.High` - Cпециалист I;\n* `C2.Low` - Cпециалист I;\n* `C1.High` - Продвинутый II;\n* `C1.Low` - Продвинутый I;\n* `B2.High` - Выше-среднего II;\n* `B2.Low` - Выше-среднего I;\n* `B1.High` - Промежуточный II;\n* `B1.Low` - Промежуточный I;\n* `A2.High` - Элементарный II;\n* `A2.Low` - Элементарный I;\n* `A1.High` - Начальный II;\n* `A1.Low` - Начальный I;\n",
        "example" : "C1.High"
      },
      "TranslationWord" : {
        "type" : "object",
        "properties" : {
          "origin_word" : {
            "type" : "string",
            "example" : "Some word"
          },
          "translation_word" : {
            "type" : "string",
            "example" : "Какой-то перевод"
          },
          "translation_lang" : {
            "type" : "string",
            "description" : "Язык всегда указывается в виде [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) кода.\n",
            "example" : "ru"
          },
          "part_of_speech" : {
            "$ref" : "#/components/schemas/PartOfSpeech"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Строчка?\n",
            "example" : "какая-то частотность"
          },
          "level" : {
            "$ref" : "#/components/schemas/proficiency_level"
          }
        }
      },
      "PartOfSpeech" : {
        "type" : "string",
        "enum" : [ "noun", "verb", "adjective", "adverb", "pronoun", "preposition", "conjunction", "interjection", "determiner" ],
        "description" : "Возможные части речи.\n* `noun` - \n* `verb` - \n* `adjective` - \n* `adverb` - \n* `pronoun` - \n* `preposition` - \n* `conjunction` - \n* `interjection` - \n* `determiner` - \n",
        "example" : "noun"
      },
      "OneDictionary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Some name"
          },
          "language" : {
            "type" : "string",
            "description" : "Язык всегда указывается в виде [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) кода.\n",
            "example" : "ru"
          },
          "level" : {
            "$ref" : "#/components/schemas/proficiency_level"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-29T22:31:27-07:00"
          },
          "description" : {
            "type" : "string",
            "example" : "Some description"
          }
        }
      },
      "SessionObject" : {
        "type" : "object",
        "properties" : {
          "lesson_id" : {
            "type" : "integer",
            "example" : 121,
            "description" : "REMOVE"
          },
          "user" : {
            "type" : "integer",
            "example" : 1121
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-29T22:31:27-07:00"
          },
          "duration" : {
            "type" : "integer",
            "description" : "Длинна сессии в секундах. `0` значит бесконечность.",
            "example" : 600
          },
          "closed_at" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-29T22:31:27-07:00"
          },
          "health" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "example" : 55
          },
          "activity" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "example" : 55
          },
          "mood" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "example" : 55
          }
        },
        "required" : [ "mood", "activity", "health", "closed_at", "duration", "created_at", "user", "lesson_id" ]
      },
      "OneLesson" : {
        "type" : "object",
        "properties" : {
          "course_id" : {
            "type" : "integer",
            "example" : 1
          },
          "index" : {
            "type" : "integer",
            "example" : 0
          },
          "study_blocks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OneStudyBlock"
            }
          }
        },
        "required" : [ "course_id", "index", "study_blocks" ]
      },
      "OneStudyBlock" : {
        "type" : "object",
        "description" : "Не забываем про баг в [UI](https://github.com/swagger-api/swagger-ui/issues/4819) с отображением `oneOf`(смотри схему а не пример).\n",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "study_block_type" : {
            "type" : "string",
            "enum" : [ "song", "dictionary", "grammar" ],
            "example" : "song"
          },
          "cost" : {
            "type" : "integer",
            "description" : "Сколько пользователь получит очков за выполнение данного данного блока.\n",
            "example" : 100
          },
          "points_to_open" : {
            "type" : "integer",
            "description" : "Сколько пользователю нужно очков что бы \"открыть\" этот учебный блок.\n",
            "example" : 50
          },
          "smart_only" : {
            "type" : "boolean",
            "description" : "Если значение `true`, значит этот блок может использоваться только для \"умных\" сессий.\n",
            "example" : false
          },
          "entity_id" : {
            "type" : "integer",
            "description" : "DB id for content????\n",
            "example" : 1
          },
          "content" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AudioBlock"
            }, {
              "$ref" : "#/components/schemas/GrammarBlock"
            } ]
          },
          "progress" : {
            "type" : "string",
            "enum" : [ "closed", "opened", "passed" ],
            "description" : "* `closed` - На текущий момент, у студента не достаточно очнов, что бы \"изучать\" этот блок.\n* `opened` - У студента достаточно очков, для изучения этого блока.\n* `passed` - Студент уже успешно выучил этот блок.\n",
            "example" : "passed"
          }
        },
        "required" : [ "progress", "content", "entity_id", "smart_only", "points_to_open", "cost", "study_block_type", "id" ]
      },
      "AudioBlock" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "artist" : {
            "type" : "string",
            "example" : "Pupa"
          },
          "album" : {
            "type" : "string",
            "example" : "Lupa"
          },
          "title" : {
            "type" : "string",
            "example" : "Salary"
          },
          "language" : {
            "type" : "string",
            "description" : "Язык всегда указывается в виде [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) кода.\n",
            "example" : "en"
          },
          "lyrics" : {
            "type" : "string",
            "example" : "Once upon a time Pupa and Lupa went to get their salary"
          }
        },
        "required" : [ "id" ]
      },
      "GrammarBlock" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "example" : "Sample Grammar"
          },
          "body" : {
            "type" : "string",
            "example" : "English has SVO word ordering in most cases"
          }
        },
        "required" : [ "id", "title", "body" ]
      },
      "CourseMetaObject" : {
        "type" : "object",
        "description" : "dsds\n",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 2
          },
          "name" : {
            "type" : "string",
            "example" : "Test"
          },
          "description" : {
            "type" : "string",
            "example" : "Some test course"
          },
          "published" : {
            "type" : "boolean",
            "example" : false
          },
          "parent_id" : {
            "type" : "integer",
            "example" : 1
          }
        },
        "required" : [ "id", "name", "published" ]
      }
    }
  }
}