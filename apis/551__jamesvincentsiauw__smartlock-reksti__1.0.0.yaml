openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: Heroku Application
    url: https://smartlock-reksti.herokuapp.com/api
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jamesvincentsiauw/smartlock-reksti/1.0.0
info:
  description: API untuk Tugas Besar II3240
  version: "1.0.0"
  title: SMART LOCK API DOCUMENTATION
  contact:
    email: jamesvincentsiauw@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: application
    description: User Application
  - name: simulation
    description: IOT Simulation
paths:
  /verify/card/{uid}:
    post:
      description: verify card
      tags:
        - simulation
      operationId: verifyCard
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: status
                    example: 200
                  message:
                    type: string
                    format: message
                    example: Silahkan masuk
        '400':
          description: bad input parameter
  /mail:
    post:
      description: end security mail
      tags:
        - application
      operationId: sendMail
      responses:
        '200':
          description: email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Mail Sent"
  /notify:
    post:
      description: push notification to user
      tags:
        - simulation
      operationId: sendNotification
      responses:
        '200':
          description: notification sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Notification Sent"
  /door/{status}:
    put:
      description: change door state (locked/opened)
      tags: 
        - simulation
      parameters: 
        - in: path
          name: status
          required: true
          schema:
            type: string
      operationId: changeDoorState
      responses:
        '200':
          description: door state changed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Door Opened"
        '400':
          description: bad input parameter
  /cards:
    get:
      tags:
        - application
      summary: show all registered cards
      operationId: showCards
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: status
                    example: 200
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
        '400':
          description: bad input parameter
    post:
      tags:
        - application
      summary: adds an inventory item
      operationId: addCard
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
        description: Inventory item to add
    delete:
      tags:
        - application
      parameters: 
        - in: query
          name: id
          required: true
          schema:
            type: string
      summary: delete registered card by ID
      operationId: deleteCard
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: responseCode
                    example: 200
                  message: 
                    type: string
                    format: message
                    example: "Sukses Menghapus Kartu"
        '400':
          description: bad input parameter
    put:
      tags:
        - application
      parameters: 
        - in: query
          name: id
          required: true
          schema:
            type: string
      summary: edit registered card by ID
      operationId: editCard
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: responseCode
                    example: 200
                  message: 
                    type: string
                    format: message
                    example: "Sukses Mengubah Kartu"
        '400':
          description: bad input parameter
          
components:
  schemas:
    Card:
      type: object
      required: 
        - uid
        - owner
      properties:
        uid:
          type: string
          format: uid
          example: "1998 3945 7602 5677"
        owner:
          type: string
          format: owner
          example: Concepcion Raynor
        registeredBy:
          type: string
          format: registeredBy
          example: "Vincent"
