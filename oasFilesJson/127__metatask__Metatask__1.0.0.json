{"openapi":"3.0.0","info":{"description":"Metatask is a simple tool to organize and control internal processes\nthat lets normal users quickly build and execute business workflows. \n","version":"1.0.0","title":"Metatask","termsOfService":"https://metatask.io/metatask-terms","contact":{"email":"support@metatask.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"tags":[{"name":"template","description":"Working with process templates"},{"name":"process","description":"Working with processes"},{"name":"user","description":"Working with users and groups"}],"security":[{"api_key":[]}],"paths":{"/templates":{"get":{"tags":["template"],"summary":"Get list of Templates","description":"Get a list of all available Templates, sorted by title.","operationId":"templateList","parameters":[{"$ref":"#/components/parameters/size"},{"$ref":"#/components/parameters/nextOffset"}],"responses":{"200":{"description":"List of templates and 'nextOffset' if more records exist","content":{"application/json":{"schema":{"properties":{"list":{"type":"array","description":"list of templates","items":{"$ref":"#/components/schemas/TemplateForList"}},"nextOffset":{"$ref":"#/components/schemas/NextOffset"}},"required":["list"]}}}},"400":{"$ref":"#/components/responses/BadParameters"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/NoAccessToAPI"},"429":{"$ref":"#/components/responses/RateLimitExceeded"},"500":{"$ref":"#/components/responses/InternalError"}}}},"/templates/{templateId}":{"get":{"tags":["template"],"summary":"Get template by id","description":"Template with Data Form and Tasks by id","operationId":"templateById","parameters":[{"name":"templateId","in":"path","description":"ID of template that needs to be fetched","required":true,"schema":{"$ref":"#/components/schemas/TemplateId"}}],"responses":{"200":{"description":"Template details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TemplateDetails"}}}},"400":{"$ref":"#/components/responses/BadParameters"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/NoAccessToAPI"},"404":{"description":"Template is not found by id"},"429":{"$ref":"#/components/responses/RateLimitExceeded"},"500":{"$ref":"#/components/responses/InternalError"}}}},"/users":{"get":{"tags":["user"],"summary":"Get list of active and invited users","description":"All active and invited users sorted by full name","operationId":"userList","parameters":[{"$ref":"#/components/parameters/size"},{"$ref":"#/components/parameters/nextOffset"}],"responses":{"200":{"description":"List of users and 'nextOffset' if more records exist","content":{"application/json":{"schema":{"properties":{"list":{"type":"array","description":"list of users","items":{"$ref":"#/components/schemas/User"}},"nextOffset":{"$ref":"#/components/schemas/NextOffset"}},"required":["list"]}}}},"400":{"$ref":"#/components/responses/BadParameters"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/NoAccessToAPI"},"429":{"$ref":"#/components/responses/RateLimitExceeded"},"500":{"$ref":"#/components/responses/InternalError"}}}},"/processes":{"get":{"tags":["process"],"summary":"Get list of Processes by params","description":"Processes sorted by started date (descending)","operationId":"processList","parameters":[{"$ref":"#/components/parameters/size"},{"$ref":"#/components/parameters/nextOffset"},{"$ref":"#/components/parameters/startDateFrom"},{"$ref":"#/components/parameters/startDateTo"},{"$ref":"#/components/parameters/statuses"},{"$ref":"#/components/parameters/templates"},{"$ref":"#/components/parameters/starters"}],"responses":{"200":{"description":"List of processes and 'nextOffset' if more records exist","content":{"application/json":{"schema":{"properties":{"list":{"type":"array","description":"list of processes","items":{"$ref":"#/components/schemas/ProcessForList"}},"nextOffset":{"$ref":"#/components/schemas/NextOffset"}},"required":["list"]}}}},"400":{"$ref":"#/components/responses/BadParameters"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/NoAccessToAPI"},"429":{"$ref":"#/components/responses/RateLimitExceeded"},"500":{"$ref":"#/components/responses/InternalError"}}}},"/processes/{processId}":{"get":{"tags":["process"],"summary":"Get process by id","description":"Process with Data Form and Tasks by id","operationId":"processById","parameters":[{"name":"processId","in":"path","description":"ID of process that needs to be fetched","required":true,"schema":{"$ref":"#/components/schemas/ProcessId"}}],"responses":{"200":{"description":"Process details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcessDetails"}}}},"400":{"$ref":"#/components/responses/BadParameters"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/NoAccessToAPI"},"404":{"description":"Process is not found by id"},"429":{"$ref":"#/components/responses/RateLimitExceeded"},"500":{"$ref":"#/components/responses/InternalError"}}}}},"externalDocs":{"description":"Find out more about Metatask","url":"https://metatask.io"},"servers":[{"url":"https://metatask.io/external_api/v1"}],"components":{"parameters":{"size":{"name":"size","in":"query","description":"Number of items returned. Provide size from 1 to 50","required":false,"schema":{"type":"integer","format":"int32","minimum":1,"maximum":50,"default":10}},"nextOffset":{"name":"nextOffset","in":"query","description":"Offset indicating the first item on page. Use `nextOffset` returned by previous request.","allowEmptyValue":false,"required":false,"schema":{"type":"string"}},"startDateFrom":{"name":"startDateFrom","in":"query","description":"Dates range for Process Start Date. Should be passed together with `startDateTo` parameter as UNIX timestamp. If dates range is missing, API returns processes started during last 24 hours","allowEmptyValue":false,"required":false,"schema":{"$ref":"#/components/schemas/UTCTimestamp"}},"startDateTo":{"name":"startDateTo","in":"query","description":"Dates range for Process Start Date. Should be passed together with `startDateFrom` parameter as UNIX timestamp. Should be greather than `startDateFrom`. Also maximum allowed Dates Range is 30 days.","allowEmptyValue":false,"required":false,"schema":{"$ref":"#/components/schemas/UTCTimestamp"}},"statuses":{"name":"statuses","in":"query","description":"List of Process statuses separated by comma. For example: `active,completed`. If parameter is missing, it is treated as `all` statuses.\n","allowEmptyValue":false,"required":false,"style":"form","explode":false,"schema":{"type":"array","items":{"type":"string","default":"all","enum":["active","completed","rejected","all"]}}},"templates":{"name":"templates","in":"query","description":"List of Templates IDs the Process is started from, separated by comma. Templates IDs are returned as `id` value by `GET /templates` API\n","allowEmptyValue":false,"required":false,"style":"form","explode":false,"schema":{"type":"array","items":{"$ref":"#/components/schemas/TemplateId"}}},"starters":{"name":"starters","in":"query","description":"List of Users IDs, who started the process, separated by comma. Users IDs are returned as `id` value by `GET /users` API\n","allowEmptyValue":false,"required":false,"style":"form","explode":false,"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserId"}}}},"securitySchemes":{"api_key":{"type":"http","scheme":"bearer","description":"API token you've generated in your Company settings","bearerFormat":"JWT"}},"schemas":{"NextOffset":{"type":"string","description":"Offset for next page if next page exists","example":"Sm9obiBEb2U="},"UTCTimestamp":{"type":"integer","format":"int64","description":"UNIX timestamp","minimum":0,"example":1560902400},"UserId":{"type":"string","description":"User id","example":"851050bad5c24b789cb215834492596c","pattern":"[0-9a-fA-F]{32}"},"UserGeneral":{"type":"object","required":["id","name","email"],"properties":{"id":{"$ref":"#/components/schemas/UserId"},"name":{"type":"string","description":"User full name","example":"John Doe"},"email":{"type":"string","description":"User email","example":"john@gmail.com"}}},"User":{"allOf":[{"$ref":"#/components/schemas/UserGeneral"},{"type":"object","required":["status"],"properties":{"status":{"type":"string","description":"User Status","enum":["active","invited"]}}}]},"TemplateId":{"type":"string","description":"Template id","example":"47e701bb19794d05a8209921c6469feb","pattern":"[0-9a-fA-F]{32}"},"TemplateForList":{"type":"object","required":["id","name"],"properties":{"id":{"$ref":"#/components/schemas/TemplateId"},"name":{"type":"string","description":"Template title","example":"Employee onboarding"}}},"TemplateDetails":{"allOf":[{"$ref":"#/components/schemas/TemplateForList"},{"type":"object","required":["url","tasks"],"properties":{"url":{"type":"string","description":"Template Url","example":"https://testteam.metatask.io/templates/47e701bb19794d05a8209921c6469feb"},"tasks":{"type":"array","description":"List of tasks","minItems":0,"items":{"$ref":"#/components/schemas/TemplateTask"}},"dataForm":{"type":"array","description":"Template data form","items":{"$ref":"#/components/schemas/TemplateDataFormSectionOrTable"}},"subTree":{"type":"array","description":"Tree of tasks and groups","items":{"$ref":"#/components/schemas/TemplateSubTreeEntity"}}}}]},"TemplateSubTreeEntity":{"type":"object","oneOf":[{"type":"object","description":"Task inside tree","required":["task"],"properties":{"task":{"$ref":"#/components/schemas/TemplateSubTreeTask"}}},{"type":"object","description":"Group inside tree","required":["group"],"properties":{"group":{"$ref":"#/components/schemas/TemplateSubTreeGroup"}}}]},"TemplateSubTreeTask":{"allOf":[{"$ref":"#/components/schemas/TemplateTask"},{"type":"object","properties":{"dueDate":{"$ref":"#/components/schemas/TemplateTaskDueDate"},"conditions":{"$ref":"#/components/schemas/TemplateConditionsForTaskOrGroup"}}}]},"TemplateTask":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string","description":"Task id","example":"47e701bb19794d05a8209921c6469feb","pattern":"[0-9a-fA-F]{32}"},"name":{"type":"string","description":"Task title","example":"Prepare contract"},"type":{"type":"string","description":"Task Type","enum":["task","approval"]}}},"TemplateTaskDueDate":{"type":"object","description":"Due date settings for the task","required":["interval","units","calculationRule"],"properties":{"interval":{"type":"integer","description":"Number of days / weeks / months for Due Date calculation","format":"int32","minimum":1,"example":5},"units":{"type":"string","description":"Units of measure for Due Date calculation","example":"business day","enum":["calendar day","business day","week","month"]},"calculationRule":{"type":"string","description":"Rule for Due Date calculation","example":"after process start","enum":["after process start","before process deadline","after previous task complete"]}}},"TemplateConditionsForTaskOrGroup":{"type":"object","required":["logicalOperator","rules"],"properties":{"logicalOperator":{"type":"string","description":"Main rule when Task / Group is created","example":"if any condition is met","enum":["if any condition is met","if all conditions are met"]},"rules":{"type":"array","description":"list of condition's rules","items":{"$ref":"#/components/schemas/TemplateSingleConditionRule"}}}},"TemplateSingleConditionRule":{"type":"object","required":["fieldId","operation"],"properties":{"fieldId":{"$ref":"#/components/schemas/FieldId"},"fieldLabel":{"type":"string","description":"Field label","example":"First name"},"operation":{"type":"string","description":"operation for condition rule for concrete field","example":"is equal to","enum":["is equal to","is not equal to","is filled in","is not filled in","is before","is after","is less than","is less than or equal to","is greater than","is greater than or equal to","starts with","ends with","contains","does not contain"]},"expression":{"oneOf":[{"$ref":"#/components/schemas/DataFormValueString"},{"$ref":"#/components/schemas/DataFormValueNumber"},{"$ref":"#/components/schemas/DataFormValueDate"},{"$ref":"#/components/schemas/DataFormValueDateTime"},{"$ref":"#/components/schemas/DataFormValueYesNo"},{"$ref":"#/components/schemas/DataFormValueEmail"}],"example":"Tom Grey"}}},"TemplateSubTreeGroup":{"type":"object","required":["id","name","execution","subTree"],"properties":{"id":{"type":"string","description":"Group id","example":"47e701bb19794d05a8209921c6469feb","pattern":"[0-9a-fA-F]{32}"},"name":{"type":"string","description":"Group title","example":"Accounting tasks"},"execution":{"type":"string","description":"execution order inside group - One by one or in any order","example":"one by one","enum":["one by one","in any order"]},"conditions":{"$ref":"#/components/schemas/TemplateConditionsForTaskOrGroup"},"subTree":{"type":"array","description":"nested tasks and groups","items":{"$ref":"#/components/schemas/TemplateSubTreeEntity"},"example":[]}}},"TemplateDataFormSectionOrTable":{"type":"object","description":"Data Form section or table","oneOf":[{"$ref":"#/components/schemas/TemplateDataFormSection"},{"$ref":"#/components/schemas/TemplateDataFormTable"}]},"TemplateDataFormSection":{"type":"object","description":"Data Form Section","required":["section"],"properties":{"section":{"type":"object","required":["name","fields"],"properties":{"name":{"type":"string","description":"Section name","example":"Personal info"},"fields":{"type":"array","description":"Section fields","items":{"$ref":"#/components/schemas/DataFormField"}}}}}},"TemplateDataFormTable":{"type":"object","description":"Data Form Table","required":["table"],"properties":{"table":{"type":"object","required":["name","columns"],"properties":{"name":{"type":"string","description":"Table name","example":"Invoices"},"columns":{"type":"array","description":"Table columns","items":{"$ref":"#/components/schemas/DataFormField"}}}}}},"FieldId":{"type":"string","description":"Field id","example":"d17edaac92a14b71a1d2a05af4b5eedf","pattern":"[0-9a-fA-F]{32}"},"DataFormField":{"type":"object","required":["id","label","type"],"properties":{"id":{"$ref":"#/components/schemas/FieldId"},"label":{"type":"string","description":"Field Label","example":"First Name"},"type":{"$ref":"#/components/schemas/DataFormFieldType"},"options":{"$ref":"#/components/schemas/DataFormGeneralOptions"},"defaultValue":{"$ref":"#/components/schemas/DataFormFieldDefaultValue"}}},"DataFormFieldWithParent":{"allOf":[{"$ref":"#/components/schemas/DataFormField"},{"type":"object","properties":{"parentId":{"type":"string","description":"Link to Field Id from Template","example":"a955a9cd315045009effda6bbbabbebe"}}}]},"DataFormFieldWithValue":{"allOf":[{"$ref":"#/components/schemas/DataFormFieldWithParent"},{"type":"object","properties":{"value":{"$ref":"#/components/schemas/DataFormValueAny"}}}]},"DataFormFieldType":{"type":"string","example":"text_input","description":"Field type","enum":["text_input","multiline","number","multiselect","dropdown","date","date_time","file_upload","yes_no","money","email","user"]},"DataFormGeneralOptions":{"type":"object","nullable":true,"description":"Field Options which depend on Field Type:\n\"type\"| options\n------------|-----------\ntext_input  | #/components/schemas/DataFormStringOptions\nmultiline   | #/components/schemas/DataFormStringOptions\nnumber      | #/components/schemas/DataFormNumberOptions\nmultiselect | #/components/schemas/DataFormDropDownOptions\ndropdown    | #/components/schemas/DataFormDropDownOptions\ndate        | #/components/schemas/DataFormDateOptions\ndate_time   | #/components/schemas/DataFormDateTimeOptions\nfile_upload | #/components/schemas/DataFormFileUploadOptions\nmoney       | #/components/schemas/DataFormMoneyOptions\nuser        | #/components/schemas/DataFormUserOptions\nyes_no      | no options\nemail       | no options\n","oneOf":[{"$ref":"#/components/schemas/DataFormStringOptions"},{"$ref":"#/components/schemas/DataFormNumberOptions"},{"$ref":"#/components/schemas/DataFormDropDownOptions"},{"$ref":"#/components/schemas/DataFormDateOptions"},{"$ref":"#/components/schemas/DataFormDateTimeOptions"},{"$ref":"#/components/schemas/DataFormFileUploadOptions"},{"$ref":"#/components/schemas/DataFormMoneyOptions"},{"$ref":"#/components/schemas/DataFormUserOptions"}],"discriminator":{"propertyName":"type","mapping":{"text_input":"#/components/schemas/DataFormStringOptions","multiline":"#/components/schemas/DataFormStringOptions","number":"#/components/schemas/DataFormNumberOptions","multiselect":"#/components/schemas/DataFormDropDownOptions","dropdown":"#/components/schemas/DataFormDropDownOptions","date":"#/components/schemas/DataFormDateOptions","date_time":"#/components/schemas/DataFormDateTimeOptions","file_upload":"#/components/schemas/DataFormFileUploadOptions","yes_no":"null","money":"#/components/schemas/DataFormMoneyOptions","email":"null","user":"#/components/schemas/DataFormUserOptions"}}},"DataFormStringOptions":{"type":"object","required":["maxLength"],"properties":{"minLength":{"type":"integer","description":"Minimum Length","example":50},"maxLength":{"type":"integer","description":"Maximum Length","example":255}}},"DataFormNumberOptions":{"type":"object","properties":{"minValue":{"type":"number","description":"Minimum value","example":32},"maxValue":{"type":"number","description":"Maximum value","example":10300},"precision":{"type":"integer","description":"Number precision. Precision 0 means integer","example":2,"minimum":0,"maximum":15}}},"DataFormDropDownOptions":{"type":"object","required":["allowedValues"],"description":"List of values that can be selected by user","properties":{"allowedValues":{"type":"array","minItems":1,"example":["apple","orange","cherry"],"items":{"type":"string"}}}},"DataFormDateOptions":{"type":"object","properties":{"minValue":{"type":"string","format":"date","description":"Minimum date","example":"2019-07-20"},"maxValue":{"type":"string","format":"date","description":"Maximum date","example":"2019-12-31"}}},"DataFormDateTimeOptions":{"type":"object","properties":{"minValue":{"type":"string","format":"date-time","description":"Minimum date and time in Company timezone","example":"2019-07-20T08:15:00.000+12:00"},"maxValue":{"type":"string","format":"date-time","description":"Maximum date and time in Company timezone","example":"2019-12-31T20:15:55.000+12:00"}}},"DataFormFileUploadOptions":{"type":"object","required":["maxFiles"],"properties":{"maxFiles":{"type":"integer","format":"int32","description":"Maximum number of files which can be uploaded","example":2,"minimum":1,"maximum":10}}},"DataFormMoneyOptions":{"type":"object","required":["currency"],"properties":{"minValue":{"type":"number","description":"Minimum amount","example":320},"maxValue":{"type":"number","description":"Maximum amount","example":3900.45},"currency":{"type":"object","required":["default"],"properties":{"default":{"type":"string","description":"Default currency code","example":"USD"},"available":{"type":"array","description":"Other currency codes","example":["EUR","GBP"],"items":{"type":"string"}}}}}},"DataFormUserOptions":{"type":"object","required":["allUsers"],"properties":{"allUsers":{"type":"boolean","description":"Indicates whether ALL users can be selected in this User Field","example":true},"group":{"type":"string","description":"If 'allUsers' is false, indicates the Group name which User should be part of","example":"IT department"}}},"DataFormFieldDefaultValue":{"type":"string","nullable":true,"description":"Default Field Value which depends on Field Type. Can be set for Dropdown and Yes/No fields only","example":"apple"},"DataFormValueAny":{"oneOf":[{"$ref":"#/components/schemas/DataFormValueString"},{"$ref":"#/components/schemas/DataFormValueNumber"},{"$ref":"#/components/schemas/DataFormValueMultiselect"},{"$ref":"#/components/schemas/DataFormValueDate"},{"$ref":"#/components/schemas/DataFormValueDateTime"},{"$ref":"#/components/schemas/DataFormValueFiles"},{"$ref":"#/components/schemas/DataFormValueMoney"},{"$ref":"#/components/schemas/DataFormValueEmail"},{"$ref":"#/components/schemas/DataFormValueYesNo"},{"$ref":"#/components/schemas/UserGeneral"}],"nullable":true,"example":"orange","discriminator":{"propertyName":"type","mapping":{"text_input":"#/components/schemas/DataFormValueString","multiline":"#/components/schemas/DataFormValueString","number":"#/components/schemas/DataFormValueNumber","multiselect":"#/components/schemas/DataFormValueMultiselect","dropdown":"#/components/schemas/DataFormValueString","date":"#/components/schemas/DataFormValueDate","date_time":"#/components/schemas/DataFormValueDateTime","file_upload":"#/components/schemas/DataFormValueFiles","yes_no":"#/components/schemas/DataFormValueYesNo","money":"#/components/schemas/DataFormValueMoney","email":"#/components/schemas/DataFormValueEmail","user":"#/components/schemas/UserGeneral"}},"description":"Field Value depends on Field Type\n\"type\"| value definition\n------------|-----------\ntext_input  | #/components/schemas/DataFormValueString\nmultiline   | #/components/schemas/DataFormValueString\nnumber      | #/components/schemas/DataFormValueNumber\nmultiselect | #/components/schemas/DataFormValueMultiselect\ndropdown    | #/components/schemas/DataFormValueString\ndate        | #/components/schemas/DataFormValueDate\ndate_time   | #/components/schemas/DataFormValueDateTime\nfile_upload | #/components/schemas/DataFormValueFiles\nyes_no      | #/components/schemas/DataFormValueYesNo\nmoney       | #/components/schemas/DataFormValueMoney\nemail       | #/components/schemas/DataFormValueEmail\nuser        | #/components/schemas/UserGeneral\n"},"DataFormValueString":{"type":"string","example":"cherry"},"DataFormValueNumber":{"type":"number","example":540.0},"DataFormValueMultiselect":{"type":"array","items":{"type":"string"},"description":"Array of selected values","example":["apple","orange"]},"DataFormValueDate":{"type":"string","format":"date","example":"2019-09-15"},"DataFormValueDateTime":{"type":"string","format":"date-time","example":"2019-12-31T20:15:55.000+12:00"},"DataFormValueFiles":{"type":"array","description":"Array of Files' urls","items":{"type":"string"},"example":["https://test.metatask.io/files/3d02d243c12b488bbb3e5ea10c300"]},"DataFormValueYesNo":{"type":"string","example":true,"enum":[true,false]},"DataFormValueMoney":{"type":"object","description":"Money field value with Amount and Currency","properties":{"amount":{"type":"number","description":"Amount value","example":500.99},"currency":{"type":"string","description":"Currency code","example":"USD"}}},"DataFormValueEmail":{"type":"string","example":"tom.black@acme.com"},"ProcessId":{"type":"string","description":"Process id","example":"8e7672c784854b5c86345bbc2a7b1ace","pattern":"[0-9a-fA-F]{32}"},"ProcessForList":{"type":"object","required":["id","name","url","status","startedDate","starter"],"properties":{"id":{"$ref":"#/components/schemas/ProcessId"},"name":{"type":"string","description":"Process title","example":"Employee onboarding for John Doe"},"url":{"type":"string","description":"Process url","example":"https://testteam.metatask.io/process/8e7672c784854b5c86345bbc2a7b1ace"},"status":{"type":"string","description":"Process status","example":"active","enum":["active","completed","rejected"]},"deadline":{"type":"string","description":"Process deadline in Company timezone","format":"date","example":"2019-07-23"},"startedDate":{"type":"string","description":"Process started date in Company timezone","format":"date-time","example":"2019-07-20T08:15:00.000+12:00"},"starter":{"description":"User, who started the process","allOf":[{"$ref":"#/components/schemas/UserGeneral"}]},"completedDate":{"type":"string","description":"Process completed date in Company timezone","format":"date-time","example":"2019-07-31T21:13:54.000+12:00"},"templateId":{"$ref":"#/components/schemas/TemplateId"},"templateName":{"type":"string","description":"Template title","example":"Employee onboarding"},"templateUrl":{"type":"string","description":"Template Url","example":"https://testteam.metatask.io/templates/47e701bb19794d05a8209921c6469feb"}}},"ProcessDetails":{"allOf":[{"$ref":"#/components/schemas/ProcessForList"},{"type":"object","required":["tasks"],"properties":{"rejectReason":{"type":"array","description":"Rejection reasons if Process is rejected","example":["Employee has rejected our offer"],"items":{"type":"string"}},"tasks":{"type":"array","description":"List of tasks","minItems":0,"items":{"$ref":"#/components/schemas/ProcessTask"}},"dataForm":{"type":"array","description":"Process data form","items":{"$ref":"#/components/schemas/ProcessDataFormSectionOrTable"}}}}]},"ProcessTask":{"allOf":[{"$ref":"#/components/schemas/TemplateTask"},{"type":"object","required":["url","status","creationDate"],"properties":{"dueDate":{"type":"string","description":"Task due date in Company timezone","format":"date","example":"2019-08-01"},"url":{"type":"string","description":"Task Url","example":"https://testteam.metatask.io/processes/task/05ca097bf68843048efd8d5bdee0dea2"},"templateTaskId":{"type":"string","description":"Link to Task Id from Template","example":"3d02d243c12b488bbb3e5ea10c3f4bae","pattern":"[0-9a-fA-F]{32}"},"status":{"type":"string","description":"Task status","example":"completed","enum":["upcoming","not_assigned","assigned","completed","approved","rejected","cancelled","pending","skipped"]},"creationDate":{"type":"string","description":"Task creation date in Company timezone","example":"2019-07-20T08:15:00.000+12:00","format":"date-time"},"assignee":{"description":"Task assignee","allOf":[{"$ref":"#/components/schemas/UserGeneral"}]},"assignedDate":{"type":"string","description":"Date when Task was assigned in Company timezone","example":"2019-07-20T09:20:32.000+12:00","format":"date-time"},"completedBy":{"description":"User who completed the Task","allOf":[{"$ref":"#/components/schemas/UserGeneral"}]},"rejectReason":{"type":"string","description":"Rejection reason. Appears for Rejected tasks only","example":"Employee has rejected our offer"},"reviewNote":{"type":"string","description":"Change Request note. Appears only for the Approval tasks where Change Request were made.","example":"employee contract has some typos, please redo"},"revision":{"type":"integer","minimum":1,"description":"Task revision. Appears only if Task were made several times after Change Request is made.","example":2}}}]},"ProcessDataFormSectionOrTable":{"type":"object","description":"Data Form section or table","oneOf":[{"$ref":"#/components/schemas/ProcessDataFormSection"},{"$ref":"#/components/schemas/ProcessDataFormTable"}]},"ProcessDataFormSection":{"type":"object","description":"Data Form Section","required":["section"],"properties":{"section":{"type":"object","required":["name","fields"],"properties":{"name":{"type":"string","description":"Section name","example":"Personal info"},"fields":{"type":"array","description":"Section fields","items":{"$ref":"#/components/schemas/DataFormFieldWithValue"}}}}}},"ProcessDataFormTable":{"type":"object","description":"Data Form Table","required":["table"],"properties":{"table":{"type":"object","required":["name","columns"],"properties":{"name":{"type":"string","description":"Table name","example":"Invoices"},"columns":{"type":"array","description":"Table columns","items":{"$ref":"#/components/schemas/DataFormFieldWithParent"}},"rows":{"type":"array","description":"Table rows","items":{"type":"array","description":"Single row","items":{"type":"object","required":["id"],"properties":{"id":{"$ref":"#/components/schemas/FieldId"},"value":{"$ref":"#/components/schemas/DataFormValueAny"}}}}}}}}}},"responses":{"BadParameters":{"description":"Invalid parameters specified"},"RateLimitExceeded":{"description":"Rate limit exceeded, maximum 1 call per second"},"UnauthorizedError":{"description":"Unauthorized. API token is invalid or missing"},"NoAccessToAPI":{"description":"Access to API restricted"},"InternalError":{"description":"Internal API error occurs"}}}}