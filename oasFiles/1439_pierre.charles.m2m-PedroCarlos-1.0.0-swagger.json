{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "MATOOMA APIs",
    "description" : "Describes available APIs"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/pierre.charles.m2m/PedroCarlos/1.0.0"
  }, {
    "description" : "Matooma API",
    "url" : "https://api.matooma.com/"
  } ],
  "security" : [ {
    "oAuth" : [ ]
  } ],
  "paths" : {
    "/token" : {
      "post" : {
        "security" : [ ],
        "tags" : [ "Authentication" ],
        "operationId" : "getTokenV1",
        "summary" : "Get Access Token",
        "description" : "To be able to connect, the grant_type need to be set to client_credentials.\n\nThe lifetime of the token is 1 hour. Once that time limit had expired you have to regenerate a new token.\n---\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Authorization"
        }, {
          "$ref" : "#/components/parameters/ContentForm"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AuthenticationSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/AuthenticationFailure"
          },
          "415" : {
            "description" : "Unsupported Media Type"
          }
        }
      }
    },
    "/v1/consumptions/daily/{iccid}" : {
      "get" : {
        "tags" : [ "Consumptions" ],
        "operationId" : "getDailyConsumptionsV1",
        "summary" : "Get Daily Consumptions for a specific Simcard filtered by its ICCID",
        "parameters" : [ {
          "$ref" : "#/components/parameters/IccidIdentifier"
        }, {
          "$ref" : "#/components/parameters/DateStartQueryParameter"
        }, {
          "$ref" : "#/components/parameters/DateEndQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumptionDaily"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/consumptions/total/{iccid}" : {
      "get" : {
        "tags" : [ "Consumptions" ],
        "operationId" : "getTotalConsumptionsV1",
        "summary" : "Get Total Consumptions for a specific Simcard filtered by its ICCID",
        "parameters" : [ {
          "$ref" : "#/components/parameters/IccidIdentifier"
        }, {
          "$ref" : "#/components/parameters/DateStartQueryParameter"
        }, {
          "$ref" : "#/components/parameters/DateEndQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumptionTotal"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/devices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "getDevicesV1",
        "summary" : "Get Devices List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeQueryParameter"
        }, {
          "$ref" : "#/components/parameters/IccidQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/devices/{id}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "getDeviceV1",
        "summary" : "Get Device Information",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Device"
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Devices" ],
        "operationId" : "patchDeviceV1",
        "summary" : "Update Device Information",
        "description" : "Allow to edit one or several field on a device",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        }, {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to update device information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "example" : {
                    "id" : 1
                  },
                  "properties" : {
                    "id" : {
                      "$ref" : "#/components/schemas/id"
                    }
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/devices/models" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "getDevicesModelsV1",
        "summary" : "Get Devices Models List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeQueryParameter"
        }, {
          "$ref" : "#/components/parameters/CustomerOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/AgencyOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/OperatorOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceModel"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/agencies" : {
      "get" : {
        "tags" : [ "Agencies" ],
        "operationId" : "getAgenciesV1",
        "summary" : "Get Agencies List",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Agency"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/offers" : {
      "get" : {
        "tags" : [ "Offers" ],
        "operationId" : "getOffersV1",
        "summary" : "Get Offers List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/CustomerOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/OperatorOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Offer"
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/offers/{id}" : {
      "get" : {
        "tags" : [ "Offers" ],
        "operationId" : "getOfferV1",
        "summary" : "Get Offer information",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Offer"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/operators" : {
      "get" : {
        "tags" : [ "Operators" ],
        "operationId" : "getOperatorsV1",
        "summary" : "Get Operators List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AgencyOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/ManufacturerOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Operator"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/pairing" : {
      "post" : {
        "tags" : [ "Pairing" ],
        "operationId" : "postPairingV1",
        "summary" : "Pair a device",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to post pairing request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairingPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingPostResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/pairing/templates" : {
      "get" : {
        "tags" : [ "Pairing" ],
        "operationId" : "getPairingTemplatesV1",
        "summary" : "List available pairing templates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PairingTemplate"
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Pairing" ],
        "operationId" : "postPairingTemplateV1",
        "summary" : "Create a pairing template",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to create a new pairing template",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairingTemplatePost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTemplatePostResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/pairing/templates/{id}" : {
      "get" : {
        "tags" : [ "Pairing" ],
        "operationId" : "getPairingTemplateV1",
        "summary" : "Get Pairing template information",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTemplate"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Pairing" ],
        "operationId" : "putPairingTemplateV1",
        "summary" : "Update Pairing template label",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        }, {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to update pairing template label",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairingTemplateUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTemplatePostResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Pairing" ],
        "operationId" : "deletePairingTemplateV1",
        "summary" : "Delete a Pairing template",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        }, {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "example" : {
                    "message" : "Pairing template deleted"
                  },
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/provisioning-requests" : {
      "post" : {
        "tags" : [ "Provisioning" ],
        "operationId" : "postProvisioningRequestV1",
        "summary" : "Create Provisioning Request",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to post provisioning request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProvisioningRequestPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      },
      "get" : {
        "tags" : [ "Provisioning" ],
        "operationId" : "getProvisioningRequestsV1",
        "summary" : "Get Provisioning Requests List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/DateOptStartQueryParameter"
        }, {
          "$ref" : "#/components/parameters/DateOptEndQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProvisioningRequest"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/provisioning-requests/{id}" : {
      "get" : {
        "tags" : [ "Provisioning" ],
        "operationId" : "getProvisioningRequestV1",
        "summary" : "Get Provisioning Request Information",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningRequest"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/simcards" : {
      "get" : {
        "tags" : [ "Simcards" ],
        "operationId" : "getSimcardsV1",
        "summary" : "Get Simcards List",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SimcardStateQueryParameter"
        }, {
          "$ref" : "#/components/parameters/IccidQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Simcard"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/simcards/{id}" : {
      "get" : {
        "tags" : [ "Simcards" ],
        "operationId" : "getSimcardV1",
        "summary" : "Get Simcard Information",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Simcard"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/sms" : {
      "post" : {
        "tags" : [ "SMS" ],
        "operationId" : "postSMSV1",
        "summary" : "Send SMS",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to post provisioning request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SMSPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Ok"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/v1/bills" : {
      "get" : {
        "tags" : [ "Bills" ],
        "operationId" : "getBills",
        "summary" : "Get bill list",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Bill"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/bills/download/{date}/{reference}" : {
      "get" : {
        "tags" : [ "Bills" ],
        "operationId" : "downloadBills",
        "summary" : "Get bill list",
        "parameters" : [ {
          "$ref" : "#/components/parameters/BillFormatAcceptHeader"
        }, {
          "$ref" : "#/components/parameters/BillReferenceIdentifier"
        }, {
          "$ref" : "#/components/parameters/BillDateIdentifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/simcard-orders" : {
      "post" : {
        "tags" : [ "Orders" ],
        "operationId" : "postOrder",
        "summary" : "Create order",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to create an order",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Ok"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          }
        }
      },
      "get" : {
        "tags" : [ "Orders" ],
        "operationId" : "getOrders",
        "summary" : "Get orders list",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/simcard-orders/{id}" : {
      "get" : {
        "tags" : [ "Orders" ],
        "operationId" : "getOrderDetails",
        "summary" : "Get order details",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/alerts" : {
      "post" : {
        "tags" : [ "Alerts" ],
        "operationId" : "postAlert",
        "summary" : "Create alerte",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to create an order",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertPost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Ok"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          }
        }
      },
      "get" : {
        "tags" : [ "Alerts" ],
        "operationId" : "getAlerts",
        "summary" : "Get alerts list",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Alert"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/alerts/{id}" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "operationId" : "getAlertDetails",
        "summary" : "Get alert details",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alert"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Alerts" ],
        "operationId" : "updatetAlertDetails",
        "summary" : "Update an alert",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        }, {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Payload to update alert",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertPut"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alert"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alerts" ],
        "operationId" : "deleteAlerts",
        "summary" : "Delete an alert",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContentJson"
        }, {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/alerts-reports" : {
      "get" : {
        "tags" : [ "Alerts reports" ],
        "operationId" : "getAlertReports",
        "summary" : "Get alert reports list",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageOptQueryParameter"
        }, {
          "$ref" : "#/components/parameters/SizeOptQueryParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "count" : {
                "$ref" : "#/components/schemas/count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AlertNotification"
                  }
                }
              }
            }
          },
          "204" : {
            "$ref" : "#/components/responses/EmptyContent"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/alert-reports/{id}" : {
      "get" : {
        "tags" : [ "Alerts reports" ],
        "operationId" : "getAlertReportDetails",
        "summary" : "Get alert report details",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertNotification"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Alerts reports" ],
        "operationId" : "updateAlertReportDetails",
        "summary" : "Mark an alert report as read",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/alert-reports/all" : {
      "put" : {
        "tags" : [ "Alerts reports" ],
        "operationId" : "updateAllAlertReport",
        "summary" : "Mark all alert reports as read",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "Authorization" : {
        "in" : "header",
        "name" : "Authorization",
        "required" : true,
        "description" : "Basic Base64(client_key:client_secret)",
        "schema" : {
          "description" : "Basic Base64(client_key:client_secret)",
          "type" : "string"
        },
        "example" : "Basic Y2xpZW50X2tleTpjbGllbnRfc2VjcmV0"
      },
      "Identifier" : {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "description" : "The resource unique Identifier",
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "BillReferenceIdentifier" : {
        "in" : "path",
        "name" : "reference",
        "required" : true,
        "description" : "The bill reference",
        "schema" : {
          "$ref" : "#/components/schemas/reference"
        },
        "example" : "XXXXXXXXX"
      },
      "BillDateIdentifier" : {
        "in" : "path",
        "name" : "date",
        "required" : true,
        "description" : "The bill date",
        "schema" : {
          "$ref" : "#/components/schemas/date"
        },
        "example" : "YYYYMM"
      },
      "IccidIdentifier" : {
        "in" : "path",
        "name" : "iccid",
        "required" : true,
        "description" : "The resource unique ICCID Identifier",
        "schema" : {
          "$ref" : "#/components/schemas/iccid"
        },
        "example" : "XXXXXXXXXXXXXXXXXXXX"
      },
      "AgencyOptQueryParameter" : {
        "in" : "query",
        "name" : "agencyId",
        "description" : "An agency id",
        "schema" : {
          "type" : "integer"
        },
        "required" : false
      },
      "CustomerOptQueryParameter" : {
        "in" : "query",
        "name" : "customerId",
        "description" : "A customer id",
        "schema" : {
          "type" : "integer"
        },
        "required" : false
      },
      "ContentForm" : {
        "in" : "header",
        "name" : "Content-Type",
        "description" : "The Content-Type entity header is used to indicate the media type of the resource.",
        "schema" : {
          "type" : "string",
          "enum" : [ "application/x-www-form-urlencoded" ]
        },
        "required" : true
      },
      "ContentJson" : {
        "in" : "header",
        "name" : "Content-Type",
        "description" : "The Content-Type entity header is used to indicate the media type of the resource.",
        "schema" : {
          "type" : "string",
          "enum" : [ "application/json" ]
        },
        "required" : true
      },
      "BillFormatAcceptHeader" : {
        "in" : "header",
        "name" : "Accept",
        "description" : "The Content-Type entity header is used to indicate the media type of the resource.",
        "schema" : {
          "type" : "string",
          "enum" : [ "application/pdf", "text/csv" ]
        },
        "required" : true
      },
      "DateOptStartQueryParameter" : {
        "in" : "query",
        "name" : "start",
        "description" : "Period starting date with format YYYY-MM-DDTHH:MM:SS",
        "schema" : {
          "type" : "string",
          "example" : "2018-07-01T10:00:00"
        },
        "required" : false,
        "example" : "2018-07-01T10:00:00"
      },
      "DateStartQueryParameter" : {
        "in" : "query",
        "name" : "start",
        "description" : "Period starting date with format YYYY-MM-DD",
        "schema" : {
          "type" : "string",
          "example" : "2018-07-01"
        },
        "required" : true,
        "example" : "2018-07-01"
      },
      "DateOptEndQueryParameter" : {
        "in" : "query",
        "name" : "end",
        "description" : "Period starting date with format YYYY-MM-DDTHH:MM:SS",
        "schema" : {
          "type" : "string",
          "example" : "2018-07-01T10:00:00"
        },
        "required" : false,
        "example" : "2018-07-01T10:00:00"
      },
      "DateEndQueryParameter" : {
        "in" : "query",
        "name" : "end",
        "description" : "Period starting date with format YYYY-MM-DD",
        "schema" : {
          "type" : "string",
          "example" : "2018-07-01"
        },
        "required" : true,
        "example" : "2018-07-01"
      },
      "DeviceOptQueryParameter" : {
        "in" : "query",
        "name" : "deviceModelId",
        "description" : "A device model ID",
        "schema" : {
          "type" : "integer"
        },
        "required" : false
      },
      "IccidQueryParameter" : {
        "in" : "query",
        "name" : "iccid",
        "description" : "Filter by Simcard ICCID",
        "schema" : {
          "$ref" : "#/components/schemas/iccid"
        },
        "required" : false,
        "example" : ""
      },
      "ManufacturerOptQueryParameter" : {
        "in" : "query",
        "name" : "manufacturerId",
        "description" : "A manufacturer id",
        "schema" : {
          "type" : "integer"
        },
        "required" : false
      },
      "OperatorOptQueryParameter" : {
        "in" : "query",
        "name" : "operatorSlug",
        "description" : "An operator slug",
        "schema" : {
          "type" : "string"
        },
        "required" : false
      },
      "PageOptQueryParameter" : {
        "in" : "query",
        "name" : "page",
        "description" : "The listing pagination to be displayed",
        "schema" : {
          "type" : "integer",
          "example" : 1
        },
        "required" : false,
        "example" : 1
      },
      "PageQueryParameter" : {
        "in" : "query",
        "name" : "page",
        "description" : "The listing pagination to be displayed",
        "schema" : {
          "type" : "integer",
          "example" : 1
        },
        "required" : true,
        "example" : 1
      },
      "SimcardStateQueryParameter" : {
        "in" : "query",
        "name" : "state",
        "description" : "Filter by simcard status",
        "schema" : {
          "$ref" : "#/components/schemas/simcardState"
        },
        "required" : false,
        "example" : "active"
      },
      "SizeOptQueryParameter" : {
        "in" : "query",
        "name" : "size",
        "description" : "The number of item to display",
        "schema" : {
          "type" : "integer",
          "example" : 10
        },
        "required" : false,
        "example" : 10
      },
      "SizeQueryParameter" : {
        "in" : "query",
        "name" : "size",
        "description" : "The number of item to display",
        "schema" : {
          "type" : "integer",
          "example" : 10
        },
        "required" : true,
        "example" : 10
      }
    },
    "responses" : {
      "AuthenticationSuccess" : {
        "description" : "OK",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthSuccess"
            }
          }
        }
      },
      "AuthenticationFailure" : {
        "description" : "User credential failed to authenticate",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthFailure"
            }
          }
        }
      },
      "EmptyContent" : {
        "description" : "Empty Content"
      },
      "BadRequest" : {
        "description" : "There are parameter missing to preceed",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Ok" : {
        "description" : "OK",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/smsId"
            }
          }
        }
      }
    },
    "schemas" : {
      "smsId" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "smsId" : {
            "type" : "string"
          }
        }
      },
      "count" : {
        "type" : "integer",
        "description" : "The list total count"
      },
      "id" : {
        "type" : "integer",
        "description" : "The resource unique Identifier"
      },
      "simcardState" : {
        "title" : "Simcard Status",
        "description" : "The Simcard status",
        "example" : "active",
        "type" : "string",
        "enum" : [ "paired", "test-mode", "active", "terminated", "suspended", "in-stock" ]
      },
      "iccid" : {
        "type" : "string",
        "description" : "The resource unique ICCID Identifier",
        "example" : ""
      },
      "reference" : {
        "type" : "string",
        "description" : "The bill reference",
        "example" : ""
      },
      "date" : {
        "type" : "string",
        "description" : "The bill date",
        "example" : "YYYYMM"
      },
      "Agency" : {
        "title" : "Agency",
        "type" : "object",
        "example" : {
          "default" : false,
          "id" : "XXX",
          "name" : "XXXXXXX"
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "default" : {
            "description" : "XXXXXXX",
            "type" : "boolean"
          },
          "name" : {
            "description" : "XXXXXXX",
            "type" : "string"
          }
        }
      },
      "AuthFailure" : {
        "title" : "AuthFailure",
        "type" : "object",
        "example" : {
          "error_description" : "Client Authentication failed.",
          "error" : "invalid_client"
        },
        "properties" : {
          "error_description" : {
            "description" : "",
            "type" : "string",
            "example" : "Client Authentication failed."
          },
          "error" : {
            "description" : "White spaced list of API access scope",
            "type" : "string",
            "example" : "invalid_client"
          }
        }
      },
      "AuthPost" : {
        "title" : "AuthPost",
        "type" : "object",
        "example" : "grant_type=client_credentials",
        "description" : "grant_type=client_credentials",
        "properties" : {
          "grant_type" : {
            "enum" : [ "client_credentials" ]
          }
        },
        "required" : [ "grant_type" ]
      },
      "AuthSuccess" : {
        "title" : "AuthenticationResponse",
        "type" : "object",
        "example" : {
          "access_token" : "4f4a73e6-00ef-35ea-8d21-0cfa907f2d57",
          "scope" : "am_application_scope default",
          "token_type" : "Bearer",
          "expires_in" : 3600
        },
        "properties" : {
          "access_token" : {
            "description" : "Access token",
            "type" : "string",
            "example" : "4f4a73e6-00ef-35ea-8d21-0cfa907f2d57"
          },
          "scope" : {
            "description" : "White spaced list of API access scope",
            "type" : "string",
            "example" : "am_application_scope default"
          },
          "token_type" : {
            "description" : "Token authentification type",
            "type" : "string",
            "example" : "Bearer"
          },
          "expires_in" : {
            "description" : "Token access expiration time in second",
            "type" : "integer",
            "example" : 3600
          }
        }
      },
      "Device" : {
        "title" : "Device",
        "type" : "object",
        "example" : {
          "id" : 1,
          "reference" : "12345",
          "contractNumber" : "123456",
          "serialNumber" : "123456",
          "apn" : "m2minternet",
          "gsmData" : null,
          "comment" : "",
          "imei" : "",
          "msisdn" : "+33xxxxxxxxx",
          "offerName" : "DATA XXX Ko X SMS Voix Entrante XXX",
          "simcardIccid" : "XXXXXXXXXXXXXXXXXXXX",
          "simcardState" : "active",
          "operatorSlug" : "XXX",
          "customer" : {
            "id" : 1,
            "name" : "Customer 1"
          },
          "agency" : {
            "id" : 2,
            "name" : "Agency A"
          },
          "modelId" : 1234,
          "modelName" : "Device Model name",
          "manufacturerName" : "Manufacturer name",
          "simcardActivationDate" : "XXXX-XX-XX XX:XX:XX",
          "simcardTerminationDate" : null,
          "networkIp" : null,
          "networkLogin" : null,
          "networkPassword" : null
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "reference" : {
            "description" : "The device reference",
            "type" : "string"
          },
          "contractNumber" : {
            "description" : "The device contract number",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "The device serial number",
            "type" : "string"
          },
          "apn" : {
            "description" : "The device networkt",
            "type" : "string"
          },
          "gsmData" : {
            "description" : "",
            "type" : "string"
          },
          "comment" : {
            "description" : "The device comment from the Agency",
            "type" : "string"
          },
          "imei" : {
            "description" : "The device IMEI number",
            "type" : "string"
          },
          "msisdn" : {
            "description" : "The device number",
            "type" : "string"
          },
          "profileName" : {
            "description" : "The offer's name linked to the device",
            "type" : "string"
          },
          "simcardIccid" : {
            "description" : "The simcard ICCID linked to the device",
            "type" : "string"
          },
          "simcardState" : {
            "$ref" : "#/components/schemas/simcardState"
          },
          "operatorSlug" : {
            "description" : "The operator identifier slug linked to the device's simcard",
            "type" : "string"
          },
          "agency" : {
            "type" : "object",
            "description" : "The owner agency",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/id"
              },
              "name" : {
                "type" : "string",
                "description" : "The agency name"
              }
            }
          },
          "modelId" : {
            "description" : "The device model Identifier",
            "type" : "integer"
          },
          "modelName" : {
            "description" : "The device model name",
            "type" : "string"
          },
          "manufacturerName" : {
            "description" : "The device manufacturer name",
            "type" : "string"
          },
          "simcardActivationDate" : {
            "description" : "The device's simcard activation date",
            "type" : "string"
          },
          "simcardTerminationDate" : {
            "description" : "The device's simcard resiliation date",
            "type" : "string"
          },
          "networkIp" : {
            "description" : "The device IP",
            "type" : "string"
          },
          "networkLogin" : {
            "description" : "The device login",
            "type" : "string"
          },
          "networkPassword" : {
            "description" : "The device password",
            "type" : "string"
          }
        }
      },
      "DeviceModel" : {
        "title" : "DeviceModel",
        "type" : "object",
        "example" : {
          "id" : 1239,
          "label" : "EPIR3"
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "label" : {
            "description" : "The device model name",
            "type" : "string"
          }
        }
      },
      "ConsumptionAggregate" : {
        "type" : "object",
        "properties" : {
          "date_range_start" : {
            "type" : "string"
          },
          "total_hits" : {
            "type" : "integer"
          },
          "aggregated_volume" : {
            "type" : "integer"
          }
        }
      },
      "ConsumptionDaily" : {
        "type" : "object",
        "properties" : {
          "total_hits" : {
            "type" : "integer"
          },
          "aggregated_volumes_grouped_by" : {
            "type" : "string",
            "enum" : [ "day" ]
          },
          "data_offer" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ConsumptionAggregate"
                }
              }
            }
          },
          "data_counter" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ConsumptionAggregate"
                }
              }
            }
          },
          "sms_offer" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "object",
                "properties" : {
                  "OUT" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  },
                  "IN" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  }
                }
              }
            }
          },
          "sms_counter" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "object",
                "properties" : {
                  "OUT" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  },
                  "IN" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  }
                }
              }
            }
          },
          "voice_offer" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "object",
                "properties" : {
                  "OUT" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  },
                  "IN" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  }
                }
              }
            }
          },
          "voice_counter" : {
            "type" : "object",
            "properties" : {
              "total_hits" : {
                "type" : "integer"
              },
              "aggregated_volumes" : {
                "type" : "object",
                "properties" : {
                  "OUT" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  },
                  "IN" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ConsumptionAggregate"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ConsumptionData" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "integer"
          },
          "sms_in" : {
            "type" : "integer"
          },
          "sms_out" : {
            "type" : "integer"
          },
          "voice_in" : {
            "type" : "integer"
          },
          "voice_out" : {
            "type" : "integer"
          }
        }
      },
      "ConsumptionTotal" : {
        "type" : "object",
        "properties" : {
          "target" : {
            "type" : "string"
          },
          "target_value" : {
            "type" : "string"
          },
          "capacity" : {
            "$ref" : "#/components/schemas/ConsumptionData"
          },
          "consumption" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "offer" : {
                  "$ref" : "#/components/schemas/ConsumptionData"
                },
                "counter" : {
                  "$ref" : "#/components/schemas/ConsumptionData"
                }
              }
            }
          }
        }
      },
      "DeviceUpdate" : {
        "title" : "Device Patch",
        "type" : "object",
        "example" : {
          "reference" : "string",
          "serialNumber" : "string",
          "imei" : "string",
          "comment" : "string",
          "contractNumber" : "string"
        },
        "properties" : {
          "reference" : {
            "description" : "The device reference",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "The device Serial number",
            "type" : "string"
          },
          "imei" : {
            "description" : "The device IMEI",
            "type" : "string"
          },
          "comment" : {
            "description" : "The device comment",
            "type" : "string"
          },
          "contractNumber" : {
            "description" : "The device contract number",
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ]
      },
      "Offer" : {
        "title" : "Offer",
        "type" : "object",
        "example" : {
          "id" : 2,
          "name" : "DATA 500 Ko",
          "customerId" : 2,
          "customerName" : "Customer 2"
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "profileId" : {
            "description" : "The offer profile ID",
            "type" : "integer",
            "example" : 5
          },
          "name" : {
            "description" : "The offer name",
            "type" : "string",
            "example" : "Data 500 Ko"
          },
          "agencyId" : {
            "description" : "The agency ID",
            "type" : "integer",
            "example" : 2
          },
          "agencyName" : {
            "description" : "The agency name",
            "type" : "string",
            "example" : "My Agency 2"
          }
        }
      },
      "Operator" : {
        "title" : "Operator",
        "type" : "object",
        "example" : {
          "id" : "XXX",
          "name" : "XXXXXXX"
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "name" : {
            "description" : "XXXXXXX",
            "type" : "string"
          }
        }
      },
      "PairingPost" : {
        "title" : "Pairing",
        "type" : "object",
        "example" : {
          "dry-run" : true,
          "customerId" : "XXX",
          "agencyId" : "XXX",
          "modelId" : "XXX",
          "offerId" : "XXX",
          "items" : [ {
            "iccid" : "XXXXXXXXXXXXXXXXXXXX",
            "serialNumber" : "XXXXXXXXXXXXXXXXXXXX",
            "reference" : "XXXXXXXXXXXXXXXXXXXX",
            "imei" : "XXXXXXXXXXXXXXXXXXXX",
            "comment" : "XXXXXXXXXXXXXXXXXXXX"
          } ]
        },
        "properties" : {
          "dry-run" : {
            "description" : "Test a pairing action, no database action will be taken if this option is set to true",
            "type" : "boolean"
          },
          "templateId" : {
            "description" : "If this option is specified, the corresponding template will be use",
            "type" : "integer"
          },
          "agencyId" : {
            "description" : "The agency ID",
            "type" : "integer"
          },
          "manufacturerId" : {
            "description" : "The manufacturer ID",
            "type" : "integer"
          },
          "operatorSlug" : {
            "description" : "The operator slug",
            "type" : "string"
          },
          "modelId" : {
            "description" : "The device model ID",
            "type" : "integer"
          },
          "profileId" : {
            "description" : "The profile ID",
            "type" : "integer"
          },
          "items" : {
            "description" : "List of simcards ICCD on which to apply this pairing",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "iccid" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "PairingPostResponse" : {
        "title" : "Pairing Response",
        "type" : "object",
        "example" : {
          "success" : [ ],
          "errors" : {
            "is-a-duplicate" : [ ],
            "does-not-exist-in-fleet" : [ ],
            "is-not-available" : [ ],
            "is-already-paired" : [ ],
            "wrong-operator" : [ ],
            "is-not-a-valid-offer" : [ ],
            "undefined-error" : [ ],
            "generation" : [ ]
          }
        },
        "properties" : {
          "success" : {
            "description" : "List of ICCID successfully paired",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "errors" : {
            "description" : "List of ICCID successfully paired",
            "type" : "object",
            "properties" : {
              "is-a-duplicate" : {
                "description" : "List of ICCID unsuccessfully paired as it was duplicate",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "does-not-exist-in-fleet" : {
                "description" : "List of ICCID unsuccessfully paired as it does not exist in fleet",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "is-not-available" : {
                "description" : "List of ICCID unsuccessfully paired as it is not available",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "is-already-paired" : {
                "description" : "List of ICCID unsuccessfully paired as it was already paired",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "wrong-operator" : {
                "description" : "List of ICCID unsuccessfully paired as it does not have a valid operator",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "is-not-a-valid-offer" : {
                "description" : "List of ICCID unsuccessfully paired as it does not have a valid offer",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "undefined-error" : {
                "description" : "List of ICCID unsuccessfully paired",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "generation" : {
                "description" : "List of ICCID unsuccessfully paired",
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "PairingTemplate" : {
        "title" : "Pairing Template Response",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The pairing template ID"
          },
          "label" : {
            "type" : "string",
            "description" : "The pariring template label"
          },
          "agency" : {
            "type" : "object",
            "properties" : {
              "agencyId" : {
                "type" : "integer",
                "description" : "The agency ID"
              },
              "agencyName" : {
                "type" : "string",
                "description" : "The agency name"
              }
            }
          },
          "profile" : {
            "type" : "object",
            "properties" : {
              "profileId" : {
                "type" : "integer",
                "description" : "The profile ID"
              },
              "profileName" : {
                "type" : "string",
                "description" : "The profile name"
              }
            }
          },
          "model" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "integer",
                "description" : "The model ID"
              },
              "modelName" : {
                "type" : "string",
                "description" : "The model name"
              }
            }
          },
          "manufacturer" : {
            "type" : "object",
            "properties" : {
              "manufacturerId" : {
                "type" : "integer",
                "description" : "The manufacturer ID"
              },
              "manufacturerName" : {
                "type" : "string",
                "description" : "The manufacturer name"
              }
            }
          },
          "operatorSlug" : {
            "type" : "string",
            "description" : "The operator slug"
          }
        },
        "example" : {
          "id" : "XXXX",
          "label" : "XXXX",
          "customer" : {
            "customerId" : "XXXX",
            "customerName" : "XXXX"
          },
          "agency" : {
            "agencyId" : "XXXX",
            "agencyName" : "XXXX"
          },
          "offer" : {
            "offerId" : "XXXX",
            "offerName" : "XXXX"
          },
          "model" : {
            "modelId" : "XXXX",
            "modelName" : "XXXX"
          },
          "operatorSlug" : "XXXX"
        }
      },
      "PairingTemplatePost" : {
        "title" : "Pairing",
        "type" : "object",
        "example" : {
          "label" : "XXXXX",
          "customerId" : "XXXXX",
          "agencyId" : "XXXXX",
          "modelId" : "XXXXX",
          "offerId" : "XXXXX"
        },
        "properties" : {
          "label" : {
            "description" : "The template label",
            "type" : "string"
          },
          "agencyId" : {
            "description" : "The template agency ID",
            "type" : "integer"
          },
          "manufacturerId" : {
            "description" : "The template manufacturer ID",
            "type" : "integer"
          },
          "operatorSlug" : {
            "description" : "The template operator slug",
            "type" : "string"
          },
          "modelId" : {
            "description" : "The template device model ID",
            "type" : "integer"
          },
          "profileId" : {
            "description" : "The template profile ID",
            "type" : "integer"
          }
        }
      },
      "PairingTemplateUpdate" : {
        "title" : "Pairing Template Patch",
        "type" : "object",
        "example" : {
          "label" : "string"
        },
        "properties" : {
          "label" : {
            "description" : "The pairing template label",
            "type" : "string"
          }
        }
      },
      "PairingTemplatePostResponse" : {
        "title" : "Pairing Template Response",
        "type" : "object",
        "example" : {
          "id" : 6008
        },
        "properties" : {
          "id" : {
            "description" : "The newly create template ID",
            "type" : "integer"
          }
        }
      },
      "ProvisioningRequest" : {
        "title" : "Provisioning Request",
        "type" : "object",
        "example" : {
          "id" : 1234,
          "agencyName" : "My Agency",
          "user" : "Me",
          "status" : "done",
          "action" : "activate",
          "createdAt" : "XXXX-XX-XX XX:XX:XX",
          "items" : {
            "1234" : {
              "id" : 1234,
              "iccid" : "XXXXXXXXXXXXXXXXXXXX",
              "requestAt" : "XXXX-XX-XX XX:XX:XX",
              "status" : "done",
              "requestedForAgency" : "My Agency",
              "requestedForCustomer" : "My Customer",
              "operatorSlug" : "XXX",
              "processingDate" : "XXXX-XX-XX XX:XX:XX"
            }
          },
          "createdByAgency" : {
            "id" : 1,
            "name" : "My Agency"
          },
          "createdByCustomer" : {
            "id" : 1,
            "name" : "My Agency"
          },
          "createdByUser" : {
            "id" : 1,
            "name" : "Me"
          }
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "agencyName" : {
            "description" : "The agency name",
            "type" : "string",
            "example" : "My Agency"
          },
          "user" : {
            "description" : "The user full name",
            "type" : "string",
            "example" : "Me"
          },
          "status" : {
            "description" : "The request status",
            "type" : "string",
            "enum" : [ "new", "pending", "done" ],
            "example" : "done"
          },
          "action" : {
            "description" : "The requested action",
            "type" : "string",
            "enum" : [ "activate", "resiliate", "suspend" ],
            "example" : "done"
          },
          "createdAt" : {
            "description" : "The request creation date",
            "type" : "string",
            "example" : "XXXX-XX-XX XX:XX:XX"
          },
          "items" : {
            "description" : "Simcards to which apply the request",
            "type" : "number",
            "example" : 2
          }
        }
      },
      "ProvisioningRequestPost" : {
        "title" : "Provisioning Request",
        "type" : "object",
        "example" : {
          "action" : "suspend",
          "items" : [ "XXXXXXXXXXXXXXXXXXXX" ]
        },
        "properties" : {
          "action" : {
            "description" : "The provisioning action to be done",
            "type" : "string",
            "enum" : [ "activate", "suspend", "reactivate", "resiliate" ]
          },
          "items" : {
            "description" : "List of simcards ICCD on which to apply the provisioning request",
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "XXXXXXXXXXXXXXXXXXXX"
            }
          }
        }
      },
      "OrderPost" : {
        "title" : "Order Post",
        "type" : "object",
        "example" : {
          "customerOrderBy" : "XX",
          "agencyOrderBy" : "X",
          "customerOrderFor" : "XX",
          "agencyOrderFor" : "X",
          "shippingAddress" : {
            "organization" : "XXXXX",
            "street" : "XXXXX",
            "street2" : null,
            "postalCode" : "XXXXX",
            "city" : "XXXXX",
            "country" : "XX"
          },
          "orderLines" : [ {
            "comment" : "XXXXX",
            "nbSim" : 10,
            "operator" : 1,
            "simCardFormat" : 2
          } ]
        }
      },
      "Order" : {
        "title" : "Order",
        "type" : "object",
        "example" : {
          "id" : "XX",
          "orderNumber" : "XX",
          "createdAt" : "YYYY-MM-DD HH:mm:ss",
          "customer" : {
            "id" : "XX",
            "name" : "XX"
          },
          "customerTo" : {
            "id" : "XX",
            "name" : "XX"
          },
          "agency" : {
            "id" : "XX",
            "name" : "XX"
          },
          "agencyTo" : {
            "id" : "XX",
            "name" : "XX"
          },
          "state" : "PROCESSED",
          "nbSim" : "XX",
          "items" : [ {
            "id" : "XXX",
            "operator" : {
              "name" : "KPN",
              "slug" : "kpn"
            },
            "simCardFormat" : {
              "name" : "XXXXX",
              "slug" : "XXXXX"
            },
            "comment" : null,
            "nbSim" : "XX"
          } ],
          "orderedBy" : {
            "agency" : {
              "id" : "XX",
              "name" : "XX"
            },
            "customer" : {
              "id" : "X",
              "name" : "XXXXX"
            },
            "user" : {
              "id" : "XXXX",
              "name" : "XXXX XXXX"
            }
          },
          "address" : {
            "organization" : "DOMALYS",
            "street" : "58 RUE DU VERCORS",
            "street2" : "ZI",
            "postalCode" : "86240",
            "city" : "FONTAINE LE COMTE",
            "country" : "FR"
          }
        }
      },
      "AlertPost" : {
        "title" : "Alert Post",
        "type" : "object",
        "example" : {
          "label" : "Label",
          "description" : "My description",
          "enabled" : true,
          "scope" : "user/system",
          "rules" : [ {
            "targetId" : "X",
            "targetType" : "fleet",
            "targetPurpose" : "data",
            "thresholdValue" : "XXXX",
            "thresholdUnit" : "mo"
          } ],
          "actions" : [ {
            "type" : "sms",
            "endpoints" : "06XXXXXXXX,06XXXXXXXX",
            "message" : "test sms"
          }, {
            "type" : "email",
            "endpoints" : "test@test.fr",
            "message" : "test email"
          } ]
        }
      },
      "AlertPut" : {
        "title" : "Alert Post",
        "type" : "object",
        "example" : {
          "actions" : [ {
            "endpoints" : "test@test.fr",
            "type" : "email",
            "message" : "test email"
          }, {
            "endpoints" : "06XXXXXXXX",
            "type" : "sms",
            "message" : "test sms"
          } ],
          "enabled" : true,
          "rules" : [ {
            "targetId" : "XXXX",
            "targetType" : "offer",
            "targetPurpose" : "data",
            "thresholdValue" : "XXXX",
            "thresholdUnit" : "MB",
            "logicOperator" : "",
            "dependOn" : ""
          } ],
          "description" : "My description",
          "delay" : "monthly",
          "label" : "Label"
        }
      },
      "Alert" : {
        "title" : "Alert",
        "type" : "object",
        "example" : {
          "id" : "XX",
          "triggered" : false,
          "created_at" : "YYYY-MM-DD HH:mm:ss",
          "updated_at" : "YYYY-MM-DD HH:mm:ss",
          "label" : "XXXXX",
          "description" : "XXXXX",
          "endUser" : null,
          "enabled" : true,
          "rules" : [ {
            "targetId" : "X",
            "targetType" : "fleet",
            "targetPurpose" : "data",
            "thresholdValue" : 10,
            "thresholdUnit" : "mo"
          } ],
          "actions" : [ {
            "type" : "sms",
            "endpoints" : "06XXXXXXXX,06XXXXXXXX",
            "message" : "test sms"
          } ],
          "reports" : [ {
            "flash_message" : "XXXXX",
            "created_at" : "YYYY-MM-DD HH:mm:ss",
            "updated_at" : "YYYY-MM-DD HH:mm:ss",
            "id" : "XX",
            "label" : "XXXXX",
            "comment" : "XXXXX",
            "delay" : "XX",
            "owner_id" : "XX",
            "read_at" : "YYYY-MM-DD HH:mm:ss"
          } ]
        }
      },
      "AlertNotification" : {
        "title" : "AlertNotification",
        "type" : "object",
        "example" : {
          "alert" : {
            "id" : "XX",
            "triggered" : false,
            "created_at" : "YYYY-MM-DD HH:mm:ss",
            "updated_at" : "YYYY-MM-DD HH:mm:ss",
            "label" : "XXXXX",
            "description" : "XXXXX",
            "endUser" : null,
            "enabled" : true,
            "rules" : [ "..." ],
            "actions" : [ {
              "endpoints" : "test@test.fr",
              "type" : "email",
              "message" : "test email"
            }, {
              "endpoints" : "06XXXXXXXX",
              "type" : "sms",
              "message" : "test sms"
            } ]
          },
          "flash_message" : "XXXXX",
          "created_at" : "YYYY-MM-DD HH:mm:ss",
          "updated_at" : "YYYY-MM-DD HH:mm:ss",
          "id" : "XX",
          "label" : "XXXXX",
          "comment" : "XXXXX",
          "delay" : "XX",
          "owner_id" : "XX",
          "read_at" : "YYYY-MM-DD HH:mm:ss",
          "rules" : [ {
            "targetId" : "XX",
            "targetType" : "offer",
            "targetPurpose" : "data",
            "thresholdValue" : "XX",
            "thresholdUnit" : "MB",
            "logicOperator" : "",
            "dependOn" : ""
          } ]
        }
      },
      "Bill" : {
        "title" : "Bill",
        "type" : "object",
        "example" : {
          "id" : "XX",
          "number" : "XX",
          "amountWithoutTax" : "XX",
          "amountWithTax" : "XX",
          "amountTax" : "XX",
          "date" : "YYYY-MM-DD HH:mm:ss",
          "dueDate" : "YYYY-MM-DD HH:mm:ss",
          "customer" : {
            "id" : "XXXX",
            "name" : "XXXX"
          }
        }
      },
      "Simcard" : {
        "title" : "Simcard",
        "type" : "object",
        "example" : {
          "id" : 1,
          "agency" : {
            "agencyId" : 2,
            "agencyName" : "My Agency 2"
          },
          "customer" : {
            "customerId" : 2,
            "customerName" : "My Customer 2"
          },
          "deviceId" : 1,
          "simcardState" : "in-stock",
          "simcardIccid" : "XXXXXXXXXXXXXXXXXXXX",
          "simcardVersion" : "sav",
          "operatorSlug" : "orange",
          "simcardOrderId" : 1,
          "simcardOrderDate" : "XXXX-XX-XX XX:XX:XX",
          "orderedBy" : "Me",
          "simcardRequest" : null
        },
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "agency" : {
            "type" : "object",
            "description" : "The owner agency",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/id"
              },
              "name" : {
                "type" : "string",
                "description" : "The agency name"
              }
            }
          },
          "deviceId" : {
            "description" : "The device identifier on which the Simcard is linked",
            "type" : "string",
            "example" : "Data 500 Ko"
          },
          "simcardState" : {
            "$ref" : "#/components/schemas/simcardState"
          },
          "simcardIccid" : {
            "description" : "The Simcard ICCID",
            "type" : "string",
            "example" : "My Agency 2"
          },
          "simcardVersion" : {
            "description" : "The Simcard version",
            "type" : "string",
            "example" : "v1"
          },
          "operatorSlug" : {
            "description" : "The Simcard operator identifier slug",
            "type" : "string",
            "example" : "orange"
          },
          "simcardOrderId" : {
            "description" : "The Simcard order Identifier",
            "type" : "integer",
            "example" : 2
          },
          "simcardOrderDate" : {
            "description" : "The Simcard order date",
            "type" : "string",
            "example" : "2018-07-03 09:32:27"
          },
          "orderedBy" : {
            "description" : "The name of who purchase this simcard",
            "type" : "integer",
            "example" : 2
          },
          "simcardRequest" : {
            "description" : "Simcard requests history",
            "type" : "string",
            "example" : "My Agency 2"
          }
        }
      },
      "SMSPost" : {
        "title" : "SMS",
        "type" : "object",
        "example" : {
          "gsm" : "XXXXX",
          "message" : "XXXXX",
          "callbackUrl" : "http://XXXXX"
        },
        "properties" : {
          "gsm" : {
            "description" : "The device GSM number",
            "type" : "string"
          },
          "message" : {
            "description" : "The message to send",
            "type" : "string"
          },
          "callbackUrl" : {
            "description" : "Post the Sent SMS Status on the provided callback URL.\n\nResponse exemple:\n\n{\"to\":\"33612345678\",\"sendAt\":\"2019-01-22T07:24:57.945981+0000\",\"lastUpdate\":\"2019-01-22T07:24:57.945981+0000\",\"smsCount\":1,\"status\":\"REJECTED\", \"smsId\":1234}\n\nStatus list:\n * ERROR\n * PENDING\n * UNDELIVERABLE\n * DELIVERED\n * EXPIRED\n * REJECTED\n",
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "oAuth" : {
        "type" : "oauth2",
        "description" : "Get grant token",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "/token",
            "scopes" : {
              "grant_type" : "client_credentials"
            }
          }
        }
      }
    }
  }
}