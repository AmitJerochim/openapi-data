openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/sharps-portal-api
info:
  version: "2.3.0"
  title: Sharps Portal Data Service API
  description: >-
    Sharps Portal API

# tags are used for organizing operations
tags:
- name: MAS
  description: Operations provided by the MAS API
- name: SharpsTracer
  description: Operations provided by the SharpsTracer API 
- name: Portal
  description: Operations provided by the Portal API
- name: Diagnostics
  description: Operations for diagnostic and testing

security:
  - BearerAuth: []

paths:

  /ping:
    get:
      tags:
      - Diagnostics
      summary: Server heartbeat operation
      description: >-
        Responds OK if server is operating.
      security: []
      responses:
        "200":
          description: OK
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                
  /accounts/accountNames:
    get:
      tags:
      - MAS
      summary: Get authorized account names at or below the level of specified custAddrId, and custAddrId, if specified
      description: >-
        Retrieves all account names accessible to the user within the supplied security context
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      - in: query
        name: pageNumber
        required: false
        description: pageNumber of results to return
        schema: 
          type: integer
          default: 1
      - in: query
        name: pageSize
        required: false
        description: pageSize of each page of results
        schema: 
          type: integer
          default: 10
      - in: query
        name: searchTerm
        required: false
        description: partial customer Id or name ot search against
        schema: 
          type: string

      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountName"   
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                
                
  /accounts:
    get:
      tags:
      - MAS
      summary: Get authorized accounts accessible to the user within the specified security context
      description: >-
        Retrieves all accounts names accessible to the user within the supplied security context
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      - in: query
        name: pageNumber
        required: false
        description: pageNumber of results to return
        schema: 
          type: integer
          default: 1
      - in: query
        name: pageSize
        required: false
        description: pageSize of each page of results
        schema: 
          type: integer
          default: 10
      - in: query
        name: searchTerm
        required: false
        description: partial customer Id or name ot search against
        schema: 
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /accounts/{custId}:
    get:
      tags:
      - MAS
      summary: Get Account with specified custId and custAddrId
      operationId: getAccount
      description: >-
        Retrieves a specific account
      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: query
        name: custAddrId
        required: false
        description: custAddrId - optional custAddrId to retrieve
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

                
  /accounts/{custId}/medSafeAutoShipStatus:
    get:
      tags:
      - MAS
      summary: Get AutoShip status for specified custId and custAddrId
      operationId: getAccountAutoShipStatus
      description: >-
        Retrieves the current AutoShip status
      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: query
        name: custAddrId
        required: false
        description: custAddrId - optional 
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedSafeAutoShipStatus"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /accounts/{custId}/medSafeAutoShips:
    get:
      tags:
      - MAS
      summary: Get AutoShip configuration for account with specified custId
      operationId: getAutoShips
      description: >-
        This operation retrieves a specific Account"s AutoShip configuration
      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: query
        name: custAddrId
        required: false
        description: custAddrId - optional 
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedSafeAutoShip"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                   


  /accounts/{custId}/contacts:
    get:
      tags:
      - MAS
      summary: Get Contacts for specified custId
      operationId: getContacts
      description: >-
        This operation retrieves all contacts for a specific Account
      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: query
        name: custAddrId
        required: false
        description: custAddrId - optional 
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


                
    post:
      tags:
      - MAS
      summary: Add a new contact for specified Account
      operationId: addContact
      description: >-
        This operation adds a new contact to the specified account, with the newly created contact returned

      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: query
        name: custAddrId
        required: false
        description: custAddrId - optional 
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      requestBody:
        description: Contact to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Contact"

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        
                

  /accounts/{custId}/contacts/{contactKey}:
    put:
      tags:
      - MAS
      summary: Updates the specified contact for the specified Account
      operationId: updateContact
      description: >-
        This operation updates a contact to the specified account, with the newly updated contact returned

      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: path
        name: contactKey
        required: true
        description: custId 
        schema:
          type: integer    
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      requestBody:
        description: Contact to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Contact"

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    delete:
      tags:
      - MAS
      summary: Deletes the specified contact for the specified Account
      operationId: deleteContact
      description: >-
        This operation deletes  the specified account

      parameters: 
      - in: path
        name: custId
        required: true
        description: custId 
        schema:
          type: string      
      - in: path
        name: contactKey
        required: true
        description: custId 
        schema:
          type: integer    
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      responses:
        "200":
          description: The contact was deleted or does not exist
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  
  /salesOrders:
    get:
      tags:
      - MAS
      summary: Search Sales Orders
      operationId: getSalesOrders
      description: >-
        This operation allows searching of Sales Orders by account
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      - in: query
        name: searchOrderDateFrom
        description: optional search date range start date
        required: false
        schema:
          type: string
          format: date
      - in: query
        name: searchOrderDateTo
        description: optional search date range end date
        required: false
        schema:
          type: string
          format: date
      - in: query
        name: searchTerm
        description: optional search string
        required: false
        schema:
          type: string
      - in: query
        name: pageNumber
        required: false
        description: pageNumber of results to return
        schema: 
          type: integer
          default: 1
      - in: query
        name: pageSize
        required: false
        description: pageSize of each page of results
        schema: 
          type: integer
          default: 10

      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SalesOrder"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /salesOrders/{salesOrderNumber}:
    get:
      tags:
      - MAS
      summary: Get Sales Order
      operationId: getSalesOrder
      description: >-
        This operation retrieves a specific Sales Order
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrder"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /salesOrders/{salesOrderNumber}/copy:
    post:
      tags:
      - MAS
      summary: Copy All Sales Order Lines
      operationId: copySalesOrder
      description: >-
        This operation requests a new order that copies all lines from an existing Sales Order
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/OrderCopyResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /salesOrders/{salesOrderNumber}/salesOrderLines:
    get:
      tags:
      - MAS
      summary: Get Sales Orders Lines
      operationId: getSalesOrderLines
      description: >-
        This operation retrieves all Sales Order Lines for a specific Sales Order
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/salesOrderLine"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /salesOrders/{salesOrderNumber}/salesOrderLines/{salesOrderLineNumber}:
    get:
      tags:
      - MAS
      summary: Get Sales Order Line
      operationId: getSalesOrderLine
      description: >-
        This operation retrieves a specific Sales Order Line for a specific Sales Order
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: path
        name: salesOrderLineNumber
        required: true
        description: MAS 500 Sales Order Line Number
        schema:
          type: integer
          format: int32
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/salesOrderLine"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /salesOrders/{salesOrderNumber}/salesOrderLines/{salesOrderLineNumber}/copy:
    post:
      tags:
      - MAS
      summary: Copy Sales Order Line
      operationId: copySalesOrderLine
      description: >-
        This operation requests a new order that copies a single Sales Order Line on an existing Sales Order
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: path
        name: salesOrderLineNumber
        required: true
        description: MAS 500 Sales Order Line Number
        schema:
          type: integer
          format: int32
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/OrderCopyResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /salesOrders/{salesOrderNumber}/salesOrderLines/{salesOrderLineNumber}/manifests:
    get:
      tags:
      - MAS
      summary: Get Sales Order Line Manifests
      operationId: getSalesOrderLineManifests
      description: >-
        This operation retrieves all Manifests associated with a sales order line
      parameters: 
      - in: path
        name: salesOrderNumber
        required: true
        description: MAS 500 Sales Order Number
        schema:
          type: string
      - in: path
        name: salesOrderLineNumber
        required: true
        description: MAS 500 Sales Order Line Number
        schema:
          type: integer
          format: int32
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Manifest"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /packages/{packageKey}/manifests:
    get:
      tags:
      - MAS
      summary: Get Package Manifests
      operationId: getPackageManifests
      description: >-
        This operation retrieves all manifests associated with the supplied package.
      parameters: 
      - in: path
        name: packageKey
        required: true
        description: MAS 500 Sales Order Line Order Package Key
        schema:
          type: integer
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Manifest"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /st/manifests:
    get:
      tags:
      - SharpsTracer
      summary: Search for manifests
      operationId: getManifests
      description: >-
        This operation retrieves a Manifest 
      parameters: 
      - in: query
        name: receiveDateFrom
        description: Received date range start date
        required: true
        schema:
          type: string
          format: date
      - in: query
        name: receiveDateTo
        description: Received date search date range end date
        required: true
        schema:
          type: string
          format: date
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Manifest"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /st/manifests/{manifestId}:
    get:
      tags:
      - SharpsTracer
      summary: Gets a specific manifest
      operationId: getManifest
      description: >-
        This operation retrieves a Manifest 
      parameters: 
      - in: path
        name: manifestId
        required: true
        description: ManifestId or SerialNumber of manifest to retrieve
        schema:
          type: string
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manifest"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                
  /st/manifests/{manifestId}/images:
    get:
      tags:
      - SharpsTracer
      summary: Retrieves the image for a specific Manifest Id
      operationId: getManifestImage
      description: >-
        This operation retrieves a Manifest Image a specific Manifest
      parameters: 
      - in: path
        name: manifestId
        required: true
        description: ManifestId of manifest image to retrieve
        schema:
          type: string
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Manifest image in TIFF format
          content:
            image/tiff:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /invoices:
    get:
      tags:
      - MAS
      summary: Search Invoices
      operationId: getInvoices
      description: >-
        This operation allows searching of Invoices
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      - in: query
        name: searchInvoiceDateFrom
        description: optional search date range start date
        required: false
        schema:
          type: string
          format: date
      - in: query
        name: searchInvoiceDateTo
        description: optional search date range end date
        required: false
        schema:
          type: string
          format: date
      - in: query
        name: searchTerm
        description: optional search string
        required: false
        schema:
          type: string
      - in: query
        name: pageNumber
        required: false
        description: pageNumber of results to return
        schema: 
          type: integer
          default: 1
      - in: query
        name: pageSize
        required: false
        description: pageSize of each page of results
        schema: 
          type: integer
          default: 10

      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /invoices/{invoiceNumber}:
    get:
      tags:
      - MAS
      summary: Get Invoice
      operationId: getInvoice
      description: >-
        This operation retrieves a specific Invoice
      parameters: 
      - in: path
        name: invoiceNumber
        required: true
        description: MAS 500 Invoice Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


 
  /invoices/{invoiceNumber}/invoiceLines:
    get:
      tags:
      - MAS
      summary: Get Invoice Lines
      operationId: getInvoiceLines
      description: >-
        This operation retrieves all Invoice Lines for a specific Invoice
      parameters: 
      - in: path
        name: invoiceNumber
        required: true
        description: MAS 500 Invoice Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvoiceLine"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          

          
  /invoices/pay:
    post:
      tags:
      - MAS
      summary: Make an authorize.net payment against multiple invoices
      operationId: payInvoices
      parameters:
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      
      requestBody:
        description: Payment request with array PaymentRequest objects
        required: true
        content: 
          application/json:
            schema: 
              type: array
              items:
                $ref: "#/components/schemas/PaymentRequest"
  
      responses:
        "200":
          description: Payment request processed successfully, returns array of PaymentResponse objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"   
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /invoices/{invoiceNumber}/pay:
    post:
      tags:
      - MAS
      summary: Make an authorize.net payment against the specified invoice
      operationId: payInvoice
      description: >-
        This operation makes a payment against an invoice using authorize.net
      parameters: 
      - in: path
        name: invoiceNumber
        required: true
        description: MAS 500 Invoice Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      requestBody:
        description: Payment request details in PaymentRequest object
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/PaymentRequest"

      responses:
        "200":
          description: Payment request applied successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          
          
  /portal/invoices/{invoiceNumber}/email:
    post:
      tags:
      - Portal
      summary: Email a specified invoice to a list of email addresses
      operationId: emailInvoice
      description: >-
        This operation applies a payment to an existing Invoice
      parameters: 
      - in: path
        name: invoiceNumber
        required: true
        description: MAS 500 Invoice Number
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string

      requestBody:
        description: Email request details in InvoiceEmailRequest object
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/InvoiceEmailRequest"

      responses:
        "200":
          description: Email sent successfully
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /invoices/{invoiceNumber}/invoicePdfs:
    get:
      tags:
      - MAS
      summary: Retrieves the PDF document for a specific Invoice
      operationId: getInvoicePDFs
      description: >-
        This operation retrieves an invoice document in PDF format
      parameters: 
      - in: path
        name: invoiceNumber
        required: true
        description: Invoice Number of the invoice to retrieve
        schema:
          type: string
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Invoice image in PDF format
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              examples:
                sampleFile:
                  summary: A sample file
                  externalValue: http://www.pdf995.com/samples/pdf.pdf   
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

          
  /pickups:
    get:
      tags:
      - MAS
      summary: Get pickups for specified account
      operationId: getPickups
      description: >-
        This operation retrieves all pickups for a given date range and Account 
      parameters: 
      - in: query
        name: searchDateFrom
        description: search date range start date
        required: true
        schema:
          type: string
          format: date
      - in: query
        name: searchDateTo
        description: search date range end date
        required: true
        schema:
          type: string
          format: date          
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: true
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pickup"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


    post:
      tags:
      - MAS
      summary: Request new pickup
      operationId: addPickup
      description: >-
        This operation adds a new one-off pickup request for the specified account, with the newly created pickup returned
      parameters:
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      
      requestBody:
        description: Pickup to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Pickup"

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pickup"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

                
  /pickups/calendarPdf:
    get:
      tags:
      - MAS
      summary: Get pickup calendar in PDF format for the next 14 months
      operationId: getPickupCalendarPdf
      description: >-
        This operation retrieves the PDF pickup calendar for the specified account
      parameters: 
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: true
        description: contextCustAddrId request security context 
        schema:
          type: string
          
      responses:
        "200":
          description: Requested terms in PDF format
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              
             



  /medSafeAutoShipments:
    get:
      tags:
      - MAS
      summary: Get autoShips for specified account
      operationId: getAutoShipments
      description: >-
        This operation retrieves all autoShipments for a given date range and Account
      parameters: 
      - in: query
        name: searchDateFrom
        description: search date range start date
        required: true
        schema:
          type: string
          format: date
      - in: query
        name: searchDateTo
        description: search date range end date
        required: true
        schema:
          type: string
          format: date          
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedSafeAutoShipment"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /medSafeAutoShipments/calendarPdf:
    get:
      tags:
      - MAS
      summary: Get autoShipment calendar for specified year
      operationId: getAutoShipmentCalendarPdf
      description: >-
        This operation retrieves the autoShipment calendar for the given year and Account
        
      parameters: 
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Requested terms in PDF format
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /reports/run:
    post:
      tags:
      - MAS
      summary: Runs the specified report and returns it as a Pdf
      operationId: runMasReport
      description: >-
        This operation runs the specified report and returns it as a Pdf
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request context 
        schema:
          type: string

      requestBody:
        description: RequestParameters to pass to report
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/ReportRunRequest"

      responses:
        "200":
          description: Requested report in PDF format
          content:
            application/pdf:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
             
             

                
  /portal/packageTracking:
    get:
      tags:
      - Portal
      summary: Get tracking status of a package
      operationId: getTracking
      description: >-
        This operation retrieves the tracking details for a package
      parameters: 
      - in: query
        name: trackingNumber
        required: true
        description: Package tracking number
        schema:
          type: string
      - in: query
        name: carrier
        required: true
        description: Shipping carrier
        schema:
          type: string      

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageTrackingResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /portal/sessionLogs:
    get:
      tags:
      - Portal
      summary: Get Session logs for the given date range
      operationId: getSessionLogs
      description: >-
        This operation retrieves all request logs for a given date range 
      parameters: 
      - in: query
        name: searchDateFrom
        description: search date range start date
        required: true
        schema:
          type: string
          format: date
      - in: query
        name: searchDateTo
        description: search date range end date
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionLog"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /portal/reports:
    get:
      tags:
      - Portal
      summary: Gets all available reports that the user has access to
      operationId: getReportDefinitions
      description: >-
        Retrieves all reports accessible to the user
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


    post:
      tags:
      - Portal
      summary: Adds a new report 
      operationId: addReport
      description: >-
        This operation adds a new report 

      requestBody:
        description: Repor to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Report"

      responses:
        "201":
          description: The newly added report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
      

  /portal/reports/{reportId}:
    get:
      tags:
      - Portal
      summary: Gets the specified report
      operationId: getReport
      description: >-
        This operation gets the specified report
      parameters: 
      - in: path
        name: reportId
        required: true
        description: Report 
        schema:
          type: integer

      responses:
        "200":
          description: Requested report definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            
             
    put:
      tags:
      - Portal
      summary: Updates the specified report
      operationId: updateReport
      description: >-
        This operation updates specified report
      parameters: 
      - in: path
        name: reportId
        required: true
        description: Report 
        schema:
          type: integer

      requestBody:
        description: Report to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Report"

      responses:
        "200":
          description: The updated report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                
    delete:
      tags:
      - Portal
      summary: Deletes the specified report
      operationId: deleteReport
      description: >-
        This operation deletes the specified report
      parameters: 
      - in: path
        name: reportId
        required: true
        description: Report 
        schema:
          type: integer

      responses:
        "200":
          description: Report deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                

  /portal/documents/pending:
    get:
      tags:
      - Portal
      summary: Gets all pending documents
      operationId: getPendingDocuments
      description: >-
        Retrieves all documents accessible to the user
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                

  /portal/documents:
    get:
      tags:
      - Portal
      summary: Gets all available documents for the specified custid/custaddrid
      operationId: getDocuments
      description: >-
        Retrieves all documents accessible to the user
      parameters: 
      - in: query
        name: contextCustId
        required: true
        description: contextCustId request security context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: true
        description: contextCustAddrId request security context 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


    post:
      tags:
      - Portal
      summary: Adds a new document
      operationId: addDocument
      description: >-
        This operation adds a new document
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request context 
        schema:
          type: string

      requestBody:
        description: Document to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Document"

      responses:
        "201":
          description: Document added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"



  /portal/documents/{documentId}/download:
    get:
      tags:
      - Portal
      summary: Gets the file associated with the document
      operationId: getDocumentFile
      description: >-
        Retrieves the file for the given documentId
      parameters: 
      - in: path
        name: documentId
        required: true
        description: Document 
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/*:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


  /portal/reports/run:
    post:
      tags:
      - Portal
      summary: Runs the report with the specified report name and returns it as a Pdf
      operationId: runReport
      description: >-
        Runs the report with the specified report name and returns it as a Pdf
      parameters: 
      - in: query
        name: contextCustId
        required: false
        description: contextCustId request context 
        schema:
          type: string      
      - in: query
        name: contextCustAddrId
        required: false
        description: contextCustAddrId request context 
        schema:
          type: string

      requestBody:
        description: RequestParameters to pass to report
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/ReportRunRequest"

      responses:
        "200":
          description: Requested report in PDF format
          content:
            application/pdf:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
             


  /portal/documents/{documentId}/upload:
    post:
      tags:
      - Portal
      summary: Uploads a file to be associated with the specified documentId
      operationId: uploadDocumentFile
      description: >-
        This operation uploads the file for the given document
      parameters: 
      - in: path
        name: documentId
        required: true
        description: Document 
        schema:
          type: string

      requestBody:
        description: Document File to upload
        required: true
        content: 
          application/octet-stream:
            schema:
              type: string
              format: binary

      responses:
        "200":
          description: Requested document uploaded
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"      

  /portal/documents/{documentId}:
    get:
      tags:
      - Portal
      summary: Gets the specified document
      operationId: getDocument
      description: >-
        This operation gets the specified document
      parameters: 
      - in: path
        name: documentId
        required: true
        description: Document 
        schema:
          type: string

      responses:
        "200":
          description: Requested document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            
             
    put:
      tags:
      - Portal
      summary: Updates the specified document
      operationId: updateDocument
      description: >-
        This operation updates specified document
      parameters: 
      - in: path
        name: documentId
        required: true
        description: DocumentId 
        schema:
          type: string

      requestBody:
        description: Document to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/Document"

      responses:
        "200":
          description: Requested document returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
                

  /portal/documents/{documentId}/reject:
    post:
      tags:
      - Portal
      summary: Gets the specified document
      operationId: rejectDocument
      description: >-
        This operation rejects the specified document
      parameters: 
      - in: path
        name: documentId
        required: true
        description: Document 
        schema:
          type: string
          
      requestBody:
        description: DocumentStatus with details
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/DocumentStatus"

      responses:
        "200":
          description: Requested document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                

  /portal/documents/{documentId}/approve:
    post:
      tags:
      - Portal
      summary: Approves the specified document
      operationId: approveDocument
      description: >-
        This operation approves the specified document
      parameters: 
      - in: path
        name: documentId
        required: true
        description: Document 
        schema:
          type: string

      requestBody:
        description: DocumentStatus with details
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/DocumentStatus"

      responses:
        "200":
          description: Requested document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"       

  /portal/portalSettings:
    get:
      tags:
      - Portal
      summary: Gets portal settings with the search options
      operationId: findPortalSettings
      description: >-
        Gets portal settings with the search options
      parameters: 
      - in: query
        name: settingType
        required: false
        description: Portal setting type to limit results to
        schema:
          type: string
      - in: query
        name: settingCategory
        required: false
        description: Portal setting settingCategory to limit results to
        schema:
          type: string
      - in: query
        name: settingName
        required: false
        description: Portal setting settingName to limit results to
        schema:
          type: string
      - in: query
        name: settingKey
        required: false
        description: Portal setting settingKey to limit results to
        schema:
          type: string
      - in: query
        name: userId
        required: false
        description: Portal setting userId to limit results to
        schema:
          type: string
      - in: query
        name: custId
        required: false
        description: Portal setting custId to limit results to
        schema:
          type: string
      - in: query
        name: custAddrId
        required: false
        description: Portal setting custAddrId to limit results to
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortalSetting"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    post:
      tags:
      - Portal
      summary: Adds a portal settings
      operationId: addPortalSetting
      description: >-
        This operation adds a new portal setting
      requestBody:
        description: PortalSettings to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/PortalSetting"

      responses:
        "200":
          description: Portal settings have been updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /portal/portalSettings/{portalSettingId}:
    get:
      tags:
      - Portal
      summary: Gets the specified portal setting
      operationId: getPortalSetting
      description: >-
        Gets portal settings with the search options
      parameters: 
      - in: path
        name: portalSettingId
        required: true
        description: Portal setting id of portalSetting to return
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortalSetting"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    put:
      tags:
      - Portal
      summary: Updates the specified portalSetting
      operationId: updatePortalSetting
      description: >-
        Updates the specified portalSetting
      parameters: 
      - in: path
        name: portalSettingId
        required: true
        description: Portal setting id of portalSetting to update
        schema:
          type: string
      requestBody:
        description: PortalSetting to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/PortalSetting"

      responses:
        "200":
          description: Portal settings have been updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    delete:
      tags:
      - Portal
      summary: Deletes the specified portalSetting
      operationId: deletePortalSetting
      description: >-
        Deletes the specified portalSetting
      parameters: 
      - in: path
        name: portalSettingId
        required: true
        description: Portal setting id of portalSetting to update
        schema:
          type: string

      responses:
        "200":
          description: Portal setting has been deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                

  /portal/portalSettings/bulk:
    post:
      tags:
      - Portal
      summary: Adds/Updates one or more portal settings
      operationId: savePortalSettings
      description: >-
        This operation updates one or more portal settings
      requestBody:
        description: PortalSettings to add/update
        required: true
        content: 
          application/json:
            schema: 
              type: array
              items:
                $ref: "#/components/schemas/PortalSetting"

      responses:
        "200":
          description: Portal settings have been updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            
  /portal/settingTemplates:
    get:
      tags:
      - Portal
      summary: Gets portal settings templates with the given type, name, and/or category
      operationId: getPortalSettingTemplates
      description: >-
        Retrieves all portal settings, optionally with the given type, name, and/or category
      parameters: 
      - in: query
        name: type
        required: false
        description: Portal setting type to limit results to
        schema:
          type: string
      - in: query
        name: category
        required: false
        description: Portal setting category to limit results to
        schema:
          type: string      
      - in: query
        name: name
        required: false
        description: Portal setting name to limit results to
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            X-Paging-PageNo:
              schema:
                type: integer
              description: Page number of response
            X-Paging-PageSize:
              schema:
                type: integer
              description: Page size
            X-Paging-PageCount:
              schema:
                type: integer
              description: Number of pages available
            X-Paging-TotalRecordCount:
              schema:
                type: integer
              description: Total number of records available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortalSettingTemplate"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"


    post:
      tags:
      - Portal
      summary: Adds a new portal setting template
      operationId: addPortalSettingTemplate
      description: >-
        This operation adds a new portal setting template
      requestBody:
        description: PortalSettingTemplate to add
        required: true
        content: 
          application/json:
            schema: 
              type: array
              items:
                $ref: "#/components/schemas/PortalSettingTemplate"

      responses:
        "201":
          description: Portal setting template has been added
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /portal/portalSettingTemplates/{portalSettingTemplateId}:
    get:
      tags:
      - Portal
      summary: Gets portal settings templates with the given type, name, and/or category
      operationId: getPortalSettingTemplate
      description: >-
        Retrieves all portal settings, optionally with the given type, name, and/or category
      parameters: 
      - in: path
        name: portalSettingTemplateId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortalSettingTemplate"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    put:
      tags:
      - Portal
      summary: Updates a portal setting template
      operationId: updatePortalSettingTemplate
      description: >-
        This operation updates an existing portal setting template
      parameters: 
      - in: path
        name: portalSettingTemplateId
        required: true
        schema:
          type: string
      
      requestBody:
        description: PortalSettingTemplate to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/PortalSettingTemplate"

      responses:
        "200":
          description: Portal setting template has been updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    delete:
      tags:
      - Portal
      summary: Deletes a portal setting template
      operationId: deletePortalSettingTemplate
      description: >-
        This operation deletes an existing portal setting template
      parameters: 
      - in: path
        name: portalSettingTemplateId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Portal setting template has been deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"  
                
  /portal/authorizeNetCustomerProfile:
    get:
      tags:
      - Portal
      summary: Gets the Authorize.Net customer profile associated with the current user
      operationId: getAuthorizeNetCustomerProfile
      description: >-
        Gets the Authorize.Net customer profile associated with the current user
     
      responses:
        "200":
          description: Authorize.Net Customer Profile returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthorizeNetCustomerProfile"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    put:
      tags:
      - Portal
      summary: Updates the Authorize.Net customer profile associated with the current user
      operationId: updateAuthorizeNetCustomerProfile
      description: >-
        Updates the Authorize.Net customer profile associated with the current user
      requestBody:
        description: AuthorizeNetCustomerProfile to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthorizeNetCustomerProfile"

      responses:
        "200":
          description: AuthorizeNet Customer Profile successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeNetCustomerProfile"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

    post:
      tags:
      - Portal
      summary: Creates an Authorize.Net customer profile associated with the current user if it doesn't exist
      operationId: addAuthorizeNetCustomerProfile
      description: >-
        Updates the Authorize.Net customer profile associated with the current user
      requestBody:
        description: AuthorizeNetCustomerProfile to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthorizeNetCustomerProfile"

      responses:
        "200":
          description: AuthorizeNet Customer Profile successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeNetCustomerProfile"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                  

  /portal/authorizeNetPaymentProfiles:
    post:
      tags:
      - Portal
      summary: Adds an AuthorizeNet payment profile
      operationId: addAuthorizeNetPaymentProfile
      description: >-
        Adds an AuthorizeNet payment profile
      requestBody:
        description: PaymentProfile to add
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthorizeNetPaymentProfile"

      responses:
        "201":
          description: Payment profile successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeNetPaymentProfile"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"     
    put:
      tags:
      - Portal
      summary: Updates an AuthorizeNet payment profile
      operationId: updateAuthorizeNetPaymentProfile
      description: >-
        Updates an AuthorizeNet payment profile
      requestBody:
        description: PaymentProfile to update
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthorizeNetPaymentProfile"

      responses:
        "201":
          description: Payment profile successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeNetPaymentProfile"        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                


  /portal/authorizeNetPaymentProfiles/{customerPaymentProfileId}:
    delete:
      tags:
      - Portal
      summary: Deletes the specified Authorize.Net payment profile
      operationId: deleteAuthorizeNetPaymentProfile
      description: >-
        This operation deletes a payment profile
      parameters: 
      - in: path
        name: customerPaymentProfileId
        required: true
        description: Authorize.net customerPaymentProfileId
        schema:
          type: string

      responses:
        "200":
          description: Payment profile successfully deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"                

components:
  schemas: 
    SalesOrder:
      type: object
      required:
        - custId
        - salesOrderNumber
      properties:
        custId:
          type: string
          example: test
          readOnly: true
        custName:
          type: string
          example: "TEST # 1234 gr JGH 1"
          readOnly: true
        salesOrderNumber:
          type: string
          example: 343434
          readOnly: true
        custPONo: 
          type: string
          example: 2342342
          readOnly: true
        tranCmnt:
          type: string
          example: Test
          readOnly: true
        salesOrderDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        salesOrderCloseDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        salesOrderExpectedShipDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        paymentTerms:
          type: string
          example: Net 30
          readOnly: true
        salesOrderTotalAmt:
          type: number
          format: float
          example: 90.79
          readOnly: true
        salesOrderSalesAmt:
          type: number
          format: float
          example: 90.79
          readOnly: true
        salesOrderTaxAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        salesOrderFreightAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        contactName:
          type: string
          example: John Smith
          readOnly: true
        contactPhone:
          type: string
          example: +1 713-555-1212
          readOnly: true
        contactEmail:
          type: string
          example: jhatfield@sharpsinc.com      
          readOnly: true
        
        billToAddress:
          $ref: "#/components/schemas/Address"
          
        defaultShipToAddress:
          $ref: "#/components/schemas/Address"
          
        salesOrderStatus:
          type: string
          enum:
            - Pending
            - Processing
            - Complete
          readOnly: true

        salesSource:
          type: string
          enum:
            - AutoReorder
            - Web
            - Email
            - Fax
          readOnly: true
          
        salesOrderSourceOrder:
          type: string
          readOnly: true
          example: null
          description: Sales Order Number of the order that created this order when SalesSource is AutoReorder or Web

        pendingCopyOrderId:
          type: string
          example: WEB323434554
          readOnly: true
          description: Temporary Id to reference a Web order that was created from this order
          
        lastCopySalesOrderNumber:
          type: string
          example: 38475837
          readOnly: true
          description: Sales Order Number that was last created as a copy of this Sales Order

    salesOrderLine:
      type: object
      required:
        - custId
        - salesOrderNumber
        - lineNumber
      properties:
        custId:
          type: string
          example: test
          readOnly: true
        custName:
          type: string
          example: "TEST # 1234 gr JGH 1"
          readOnly: true
        salesOrderNumber:
          type: string
          example: 68581
          readOnly: true
        lineNumber:
          type: integer
          format: int32
          example: 3
          readOnly: true
        custPONo: 
          type: string
          example: 2342342
          readOnly: true
        tranCmnt:
          type: string
          example: Test
          readOnly: true
        extCmnt:
          type: string
          example: Test
          readOnly: true
        salesOrderDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        salesOrderCloseDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        lastShipDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        shipToAddress:
          $ref: "#/components/schemas/Address"
        contactName:
          type: string
          example: John Smith
          readOnly: true
        contactPhone:
          type: string
          example: +1 713-555-1212
          readOnly: true
        contactEmail:
          type: string
          example: jhatfield@sharpsinc.com      
          readOnly: true        
        itemId:
          type: string
          example: 17400
          readOnly: true        
        description:
          type: string
          example: 40 Gallon TakeAway Environmental Return
          readOnly: true        
        qty: 
          type: number
          format: float
          example: 1
          readOnly: true        
        unitPrice:
          type: number
          format: float
          example: 164
          readOnly: true        
        extAmt: 
          type: number
          format: float
          example: 164
          readOnly: true        
        freightAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        sTaxAmt:
          type: number
          format: float
          example: 6.48
          readOnly: true
        autoReorderEnabled:
          type: boolean
          example: true
          readOnly: true
        salesOrderShipments:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/Shipment"

    Address:
      type: object
      properties:
        custAddrId:
          type: string
          example: test
          readOnly: true
        addrName:
          type: string
          example: Test Account
          readOnly: true
        addrLine1:
          type: string
          example: 9220 Kirby Drive
          readOnly: true
        addrLine2:
          type: string
          example: Suite 500
          readOnly: true
        city:
          type: string
          example: Houston
          readOnly: true
        state:
          type: string
          example: TX
          readOnly: true
        postal:
          type: string
          example: 77054
          readOnly: true
        country:
          type: string
          example: USA
          readOnly: true
      
    Shipment:
      type: object
      properties:
        shipmentId:
          type: string
          example: TEST1234
          readOnly: true
        shipmentDate:
          type: string
          format: date
          readOnly: true
          example: 2018-05-04
        shippingMethod:
          type: string
          readOnly: true
          example: FEDEX
        packageCount:
          type: integer
          example: 2
          readOnly: true
        deliveryShipToAddress:
          $ref: "#/components/schemas/Address"
        packages:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/Package"
          
    Package:
      type: object
      properties:
        packageKey:
          type: integer
          readOnly: true
          example: 3
        trackingNumber:
          type: string
          example: 1Z234234234
          readOnly: true
        packageContents:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/PackageContents"

    PackageContents:
      type: object
      properties:
        qty:
          type: number
          format: float
          readOnly: true
          example: 23
        itemId:
          type: string
          readOnly: true
          example: 10222-B
        description:
          type: string
          readOnly: true 
          example: Small box of items

    Manifest:
      type: object
      properties:
        serialNumberOrManifestId:
          type: string
        itemId:
          type: string
        itemDescription:
          type: string
        itemUpc:
          type: string
        itemModel:
          type: string
        custName:
          type: string
        generatorName:
          type: string
        generatorAddress:
          type: string
        generatorCity:
          type: string
        generatorState:
          type: string
        generatorZip:
          type: string
        generatorCountry:
          type: string
        generatorId:
          type: string
        issuedDate:
          type: string
        receiveDate:
          type: string
          format: date
        treatedDate:
          type: string
          format: date
        treatmentMethod:
          type: string
        tareWeight:
          type: number
          format: float
        receiveWeight:
          type: number
          format: float
        status:
          type: string
        comments:
          type: string
        contents:
          type: string
        customField1:
          type: string
        customField2:
          type: string
        customField3:
          type: string
        customField4:
          type: string
        receiveCost:
          type: string
        returnTrackingNumber:
          type: string
        returnShippingMethod:
          type: string
        returned:
          type: boolean
        hasManifest:
          type: boolean
        salesOrderNumber:
          type: string
        salesOrderLineNumber:
          type: integer
          format: int32

          
    Invoice:
      type: object
      required:
        - custId
        - invoiceNumber
      properties:
        custId:
          type: string
          example: CUST001
          readOnly: true
        custName:
          type: string
          example: "Test Customer - TX Branch"
          readOnly: true
        invoiceNumber:
          type: string
          example: 0000109275
        invoiceType: 
          type: string
          enum:
            - IN
            - CM
            - DM
          example: IN
          readOnly: true
        invoiceDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        dueDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        paymentTerms:
          type: string
          example: Net 30
          readOnly: true
        invoiceTotalAmt:
          type: number
          format: float
          example: 90.79
          readOnly: true
        invoiceSalesAmt:
          type: number
          format: float
          example: 90.79
          readOnly: true
        invoiceTaxAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        invoiceFreightAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        balance:
          type: number
          format: float
          example: 0
          readOnly: true
        contactName:
          type: string
          example: John Smith
          readOnly: true
        contactPhone:
          type: string
          example: +1 713-555-1212
          readOnly: true
        contactEmail:
          type: string
          example: jhatfield@sharpsinc.com      
          readOnly: true
        invoiceStatus:
          type: string
          enum:
            - Paid
            - Unpaid
            - Past Due
          readOnly: true
        
        billToAddress:
          $ref: "#/components/schemas/Address"
          
        shipToAddress:
          $ref: "#/components/schemas/Address"
          

    InvoiceLine:
      type: object
      required:
        - custId
        - invoiceNumber
        - invoiceLineNumber
      properties:
        custId:
          type: string
          example: CUST001
          readOnly: true
        custName:
          type: string
          example: "Test Customer - TX Branch"
          readOnly: true
        invoiceNumber:
          type: string
          example: 0000109275
          readOnly: true
        invoiceLineNumber:
          type: integer
          example: 1
          readOnly: true
        invoiceType: 
          type: string
          enum:
            - IN
            - CM
          example: IN
          readOnly: true
        invoiceDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        dueDate:
          type: string
          format: date
          example: 2018-10-04
          readOnly: true
        paymentTerms:
          type: string
          example: Net 30
          readOnly: true
        itemId:
          type: string
          example: 17400
          readOnly: true        
        description:
          type: string
          example: 40 Gallon TakeAway Environmental Return
          readOnly: true        
        qty: 
          type: number
          format: float
          example: 1
          readOnly: true        
        unitPrice:
          type: number
          format: float
          example: 164
          readOnly: true        
        extAmt: 
          type: number
          format: float
          example: 164
          readOnly: true        
        freightAmt:
          type: number
          format: float
          example: 0
          readOnly: true
        taxAmt:
          type: number
          format: float
          example: 6.48
          readOnly: true
        contactName:
          type: string
          example: John Smith
          readOnly: true
        contactPhone:
          type: string
          example: +1 713-555-1212
          readOnly: true
        contactEmail:
          type: string
          example: jhatfield@sharpsinc.com      
          readOnly: true
        shipments:
          type: integer
          example: 2
          readOnly: true
        
        billToAddress:
          $ref: "#/components/schemas/Address"
          
        shipToAddress:
          $ref: "#/components/schemas/Address"
          
        invoiceStatus:
          type: string
          enum:
            - Paid
            - Unpaid
            - Past Due
          readOnly: true

        salesOrderNumber:
          type: string
          readOnly: true
          example: 271823

    PaymentRequest:
      type: object
      required:
        - paymentAmount
      properties:
        invoiceNumber:
          type: string
          example: 0000109275
        paymentAmount:
          type: number
          format: float
        authNetCustomerProfileId:
          type: string
        authNetPaymentProfileId:
          type: string
        authNetPaymentCardCode:
          type: string
        merchantCustomerId:
          type: string
          description: Portal assigned customer ID linked to User ID.  Can be used to get customer's payment profiles to validate the customer profile id and payment profile id before charging the profile. 
        

    PaymentResponse:
      type: object
      properties:
        invoiceNumber:
          type: string
          example: 0000109275
        authNetTransId:
          type: string
          example: 60136611468
        authNetCode:
          type: string
          example: 1
        authNetMessage:
          type: string
          example: This transaction has been approved.
        authRefId:
          type: string
          example: 123456
        userResponse: 
          type: string
          description: Message to display to user, can be same as authNetMessage or a custom message

          
    AuthorizeNetCustomerProfile:
      type: object
      properties:
        merchantCustomerId:
          type: string
        customerProfileId:
          type: string
        profileType:
          type: string
        description:
          type: string
        email:
          type: string
        paymentProfiles:
          type: array
          items:
            $ref: "#/components/schemas/AuthorizeNetPaymentProfile"

    AuthorizeNetPaymentProfile:
      type: object
      properties:
        customerPaymentProfileId:
          type: string
        customerProfileId:
          type: string
        cardNumber:
          type: string
        expirationDate:
          type: string
        cardType: 
          type: string
        issuerNumber:
          type: string
        cardCode:
          type: string          
        customerType:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string      
        phoneNumber:
          type: string
        faxNumber:
          type: string
        defaultPaymentProfile:
          type: boolean

    InvoiceEmailRequest:
      type: object
      properties: 
        invoiceNumber:
          type: string
          example: 23423434
        emailSubject:
          type: string
          example: Sample invoice email
        emailBody:
          type: string
          example: This is an email demonstrating the attached invoice being emailed to you.
        emailAddresses:
          type: array
          items:
            type: string
            example: [apple@apple.com, microsoft@microsoft.com]
            description: comma delimited list of email addresses
    
    OrderCopyResponse:
      type: object
      properties:
        pendingCopyOrderId:
          type: string
          example: WEB323434554
          readOnly: true
          
    Account:
      type: object
      properties: 
        acctLevelType:
          type: string
          description: Describes acctLevel
        custId:
          type: string
        custAddrId:
          type: string
        custName:
          type: string
        insideSalesRep:
          type: string
        signedTerms:
          type: string
        poRequired:
          type: string      
        billToAddress:
          $ref: "#/components/schemas/Address"
        primaryAddress:
          $ref: "#/components/schemas/Address"
        primaryContact:
          $ref: "#/components/schemas/Contact"
        hasMedSafe:
          type: boolean
        hasPickupService:
          type: boolean

    AccountName:
      type: object
      properties:
        acctLevelType:
          type: string
          description: Describes acctLevel
        custId:
          type: string
        custAddrId:
          type: string
        custName:
          type: string
        primaryAddress:
          $ref: "#/components/schemas/Address"
          
    
    MedSafeAutoShip:
     type: object
     properties:
       custId:
         type: string
       custAddrId:
         type: string
       customerName:
         type: string
       addrName:
         type: string
       itemId:
         type: string
       itemDescription:
         type: string
       frequency:
         type: string
       lastOrderDate:
         type: string
         format: date
       nextOrderDate:
         type: string
         format: date

    MedSafeAutoShipStatus:
      type: object
      properties:
        custId:
          type: string
        custAddrId:
          type: string
        linerFrequency:
          type: string
          format: date
        nextOrderDate:
          type: string
          format: date
        lastOrderDate:
          type: string
          format: date

    MedSafeAutoShipment:
      type: object
      properties:
        custId:
          type: string
        custAddrId:
          type: string
        autoShipId:
          type: string
        autoShipDate:
          type: string
          format: date
        status:
          type: string
        autoShipResultText:
          type: string
          description: Full customer facing description of autoShip status.  May include auto ship details, weight, etc, items, count, or any other details that may be desired.  This text will be displayed when customer selects the corresponding date on the interactive calendar.


    Contact:
      type: object
      properties:
        custId:
          type: string
        contactKey:
          type: integer
        name:
          type: string
        title:
          type: string
        email:
          type: string
        phone:
          type: string
        fax:
          type: string
        isEditable:
          type: boolean
        isPrimary:
          type: boolean
        isPrimaryAccounting:
          type: boolean
        primaryAssignments:
          type: array
          items:
            type: object
            properties:
              custAddrId:
                type: string
              addrName:
                type: string
        primaryAccountingAssignments:
          type: array
          items:
            type: object
            properties:
              custAddrId:
                type: string
              addrName:
                type: string                
          

    Pickup:
      type: object
      properties:
        custId:
          type: string
        custAddrId:
          type: string
        pickupId:
          type: string
        pickupDate:
          type: string
          format: date
        status:
          type: string
        pickupResultText:
          type: string
          description: Full customer facing description of pickup result.  May include pickup details, weight, etc, items, count, or any other details that may be desired.  This text will be displayed when customer selects the corresponding date on the interactive calendar.
          
    Document:
      type: object
      properties:
        documentId:
          type: integer
        custId:
          type: string
        custAddrId:
          type: string
        custName:
          type: string
        documentType:
          type: string
          enum: [Certificate of Insurance,DEA Certificate,Tax Exemption(W-9)]
        fileName:
          type: string
        fileSize:
          type: integer
          format: long
        additionalDetails:
          type: string
        status:
          type: string
          enum: [Created,Submitted,Rejected,Approved]
        statusDate:
          type: string
          format: date
        statusComment:
          type: string
        statusUserName:
          type: string
        statusHistory:
          type: array
          items:
            $ref: "#/components/schemas/DocumentStatus"

    DocumentStatus:
      type: object
      properties:
        documentStatusId:
          type: integer
        documentId:
          type: integer
        status:
          type: string
          enum: [Created,Submitted,Rejected,Approved]
        statusDate:
          type: string
          format: date
        statusComment:
          type: string
        userId:
          type: string
        userName:
          type: string

    ReportRunParameter:
      type: object
      properties:
        parameterName:
          type: string
        parameterValue:
          type: string

    ReportRunRequest:
      type: object
      properties:
        reportName:
          type: string
          description: Shared report name between Portal and MAS
        reportParameters:
          type: array
          items:
            $ref: "#/components/schemas/ReportRunParameter"

    ReportParameter:
      type: object
      properties:
        reportParameterId:
          type: integer
        reportId:
          type: integer
        parameterName:
          type: string
        description:
          type: string
        parameterType:
          type: string
        isRequired:
          type: boolean
        valueChoices:
          type: array
          items:
            type: string

    Report:
      type: object
      properties:
        reportId:
          type: integer
          description: Portal report ID
        reportName:
          type: string
          description: Shared report name between Portal and MAS
        description:
          type: string
        reportType:
          type: string
          enum: [Mas,SharpsTracer,Portal]
        allowedRoles:
          type: array
          items:
            type: string
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/ReportParameter"

    ProblemDetails:
      type: object
      required: 
      - title
      - status
      - type
      properties:
        type:
          type: string
          example: https://httpstatuses.com/400
          readOnly: true
          description: A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be "about:blank"
        title:
          type: string
          example: Bad Request
          readOnly: true
          description: A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see[RFC7231], Section 3.4)
        status:
          type: integer
          example: 400
          readOnly: true
          description: The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem
        detail:
          type: string
          example: Payment transaction Id was not specified
          readOnly: true
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          example: /api/invoices/pay
          readOnly: true
          description: A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.

    PackageTrackingResponse:
      type: object
      properties:
        status:
          type: string
        shippingMethod:
          type: string
        trackingNumber:
          type: string
        activity:
          type: array
          items:
            $ref: "#/components/schemas/PackageTrackingActivity"

    PackageTrackingActivity:
      type: object
      properties:
        date:
          type: string
          format: date
        location:
          type: string
        activityDescription:
          type: string
          
    SessionLog:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
        startTime:
          type: string
          format: date
        endTime:
          type: string
          format: date
        duration:
          type: number
          format: double
        clientIp:
          type: string
        hostIp:
          type: string
        userId:
          type: string
        userName:
          type: string
        userRoles:
          type: string
        activeClaims:
          type: string
        userSharpsTracerId:
          type: string
        userMasCustId:
          type: string
        userMasCustAddrId:
          type: string
        userMagentoUserId:
          type: string
        description:
          type: string
        data:
          type: string
        area:
          type: string
        requestLogs:
          type: array
          items:
            $ref: "#/components/schemas/RequestLog"
          
          
    RequestLog:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        startTime:
          type: string
          format: date
        endTime:
          type: string
          format: date
        duration:
          type: number
          format: double
        direction:
          type: string
        clientIp:
          type: string
        hostIp:
          type: string
        area:
          type: string
        description:
          type: string
        method:
          type: string
        request:
          type: string
        requestBody:
          type: string
        statusCode:
          type: string
        responseBody:
          type: string
        requestHeaders:
          type: string
        responseHeaders:
          type: string
        data:
          type: string          
        modifiedData:
          type: string
        logResponseBody:
          type: boolean
        logRequestBody:
          type: boolean

    PortalSettingTemplate:
      type: object
      properties:
        portalSettingTemplateId:
          type: integer
        settingType:
          $ref: '#/components/schemas/PortalSettingType'
        settingCategory:
          type: string
        settingName:
          type: string
        settingKey:
          type: string
        valueType:
          $ref: '#/components/schemas/PortalValueType'
        defaultValue:
          type: string
        enabled: 
          type: boolean
        allowMultipleValues:
          type: boolean
        allowUserEdit: 
          type: boolean
        allowCustomerEdit:
          type: boolean
        allowRolesEdit:
          type: array
          items:
            type: string
        custName:
          type: string
        modifiedDate:
          type: string
          format: date
        modifiedByUserId:
          type: string
        modifiedByUserName:
          type: string

    PortalSettingType:
      type: string
      enum:
        - System
        - User
        - Customer

    PortalValueType:
      type: string
      enum:
        - Date
        - String
        - Number
        - Boolean
  

    PortalSetting:
      type: object
      properties:
        portalSettingId:
          type: integer
        portalSettingTemplateId:
          type: integer
        settingKey:
          type: string
        settingValue:
          type: string
        userId:
          type: string
        userName:
          type: string
        custId: 
          type: string
        custAddrId:
          type: string
        custName:
          type: string
        enabled: 
          type: boolean
        modifiedDate:
          type: string
          format: date
        modifiedByUserId:
          type: string
        modifiedByUserName:
          type: string
        portalSettingTemplate:
          $ref: '#/components/schemas/PortalSettingType'



  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


    implicit:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://example.com/oauth/auth"
          scopes:
            write: allows modifying resources
            read: allows reading resources