openapi: 3.0.2
info:
  title: An API for PDI
  description: >-
    **Note** Related Data tables are to lookup ids of related fields in the core
    models
  contact:
    name: Holtzman Frontend
    url: 'https://holtzman.myfuelhalo.com/'
    email: development@goenergies.com
  version: "0.3.2"
servers:
  - url: https://holtzman-staging.myfuelhalo.com/api/web/v1/
    description: holtzman staging
  - url: https://172.18.250.97/greg/halo/api/web/v1/
    description: dev
security:
  - ApiKeyAuth: []
paths:
  /client-type:
    get:
      summary: Fuel or Freight
      description: Fuel or Freight
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /carriers:
    get:
      tags:
        - Carriers
      summary: List all carriers
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort carriers by id:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Carriers
      summary: Add a new carrier
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Carrier'
            example:
              name: Gregs Fuel Hauling
        required: true
      responses:
        '201':
          description: Created
  '/carriers/{id}':
    get:
      tags:
        - Carriers
      summary: Show a carrier
      parameters:
        - name: id
          in: path
          description: The carrier id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Carrier not found
    delete:
      tags:
        - Carriers
      summary: Delete a carrier
      parameters:
        - name: id
          in: path
          description: The carrier id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
    patch:
      tags:
        - Carriers
      summary: Update a carrier
      parameters:
        - name: id
          in: path
          description: The carrier id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Carrier'
            example:
              name: Gregs Gas Haulers
        required: true
      responses:
        '201':
          description: Ok
  /clients:
    get:
      tags:
        - Clients
      summary: List all clients
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Clients
      summary: Add a new client
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: Gregs Oil and Tires
        required: true
      responses:
        '201':
          description: Created
  '/clients/{id}':
    get:
      tags:
        - Clients
      summary: Show a client
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Client not found
    delete:
      tags:
        - Clients
      summary: Delete a client
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
    patch:
      tags:
        - Clients
      summary: Update a client
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: Gregs Oil and Tires
        required: true
      responses:
        '201':
          description: Ok
  /contacts:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: List all contacts
      tags:
        - Contacts
      responses:
        '200':
          description: Ok
    post:
      tags:
        - Contacts
      summary: Add a new contact
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '201':
          description: Created
          
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: Show a contact's details.
      parameters:
        - name: id
          in: path
          description: The contact id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      parameters:
        - name: id
          in: path
          description: The contact id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
          
  /drivers:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: List all drivers
      tags:
        - Logistics | Drivers
      responses:
        '200':
          description: Ok
    post:
      tags:
        - Logistics | Drivers
      summary: Add a new driver
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      responses:
        '201':
          description: Created
          
  '/drivers/{id}':
    get:
      tags:
        - Logistics | Drivers
      summary: Show a driver's details.
      parameters:
        - name: id
          in: path
          description: The driver id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK     
    delete:
      tags:
        - Logistics | Drivers
      summary: Delete a driver
      parameters:
        - name: id
          in: path
          description: The driver id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
  /counties:
    get:
      summary: Mapping table for counties
      tags:
        - Related Data
      responses:
        '200':
          description: Ok
          
  /integration:
    get:
      summary: List all integration records  (integration is a mapping table for vendor ids) 
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort clients by external_subject:
             * `external_subject` - Alphabetical, A to Z
             * `-external_subject` - Alphabetical, Z to A
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - external_subject
              - '-external_subject'
      tags:
        - Integration
      responses:
        '200':
          description: OK
          
  /integration-property:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: List all integration-properties
      tags:
        - Integration
      responses:
        '200':
          description: OK
    post:
      summary: Create an integration-property
      tags: 
        - Integration
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegrationProperty'
        required: true
      responses:
        '201':
          description: Created
  '/integration-property/{id}':
    get:
      tags:
        - Integration
      summary: Show a specific integration-property
      parameters:
        - name: id
          in: path
          description: The integration-property id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: integration-property not found
    delete:
      tags:
        - Integration
      summary: Delete an integration-property
      parameters:
        - name: id
          in: path
          description: The integration-property id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
    patch:
      tags:
        - Integration
      summary: Update an integration-property
      parameters:
        - name: id
          in: path
          description: The id of the integration-property
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegrationProperty'
            example:
              name: userID
        required: true
      responses:
        '201':
          description: Ok


  /order:
    get:
      summary: Mapping table for vendor ids
      tags:
        - Related Data
      responses:
        '200':
          description: OK
      parameters:
        - name: sort
          in: query
          description: |
            Sort orders by :
             * `-id` - Descending, from highest (newest) to lowest (oldest)
             * `id` - Ascending, lowest (oldest) to highest (newest)
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
  /loading-numbers:
    get:
      description: All loading numbers
      summary: All loading numbers
      tags:
        - Logistics | Loading Numbers
      parameters:
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: Ok
    post:
      tags:
        - Logistics | Loading Numbers
      summary: Add a new loading number
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoadingNumber'
        required: true
      responses:
        '201':
          description: Created
  '/loading-numbers/{id}':
    get:
      tags:
        - Logistics | Loading Numbers
      summary: Show details of a specific loading number.
      parameters:
        - name: id
          in: path
          description: The loading number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Logistics | Loading Numbers
      summary: Delete a loading number
      parameters:
        - name: id
          in: path
          description: The loading number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Logistics | Loading Numbers
      summary: Update a loading number
      parameters:
        - name: id
          in: path
          description: The loading number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoadingNumber'
        required: true
      responses:
        '201':
          description: Ok
  
  /loading-number-destination-numbers:
    get:
      description: All loading number destination numbers
      summary: All loading number destination numbers
      tags:
        - Logistics | Loading Numbers
      parameters:
        - name: sort
          in: query
          description: |
            Sort loading-number-destination-numbers by id:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: Ok
    post:
      tags:
        - Logistics | Loading Numbers
      summary: Add a new loading number destination number
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoadingNumberDestinationNumber'
        required: true
      responses:
        '201':
          description: Created
  '/loading-number-destination-numbers/{id}':
    get:
      tags:
        - Logistics | Loading Numbers
      summary: Show details of a specific loading number destination number.
      parameters:
        - name: id
          in: path
          description: The loading number destination number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Logistics | Loading Numbers
      summary: Delete a loading number destination number
      parameters:
        - name: id
          in: path
          description: The loading number destination number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Logistics | Loading Numbers
      summary: Update a loading number destination number
      parameters:
        - name: id
          in: path
          description: The loading number destination number id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoadingNumberDestinationNumber'
        required: true
      responses:
        '201':
          description: Ok
          
  /loading-number-type:
      get:
        summary: Posted Rack, Contract, Day Deal
        description: Posted Rack, Contract, Day Deal
        tags:
          - Logistics | Loading Numbers
        responses:
          '200':
            description: OK
  /vehicles:
    get:
      tags:
        - Logistics | Vehicles
      summary: List all vehicles
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `id` - Ascending, lowest to highest **(oldest records first)**
             * `-id` - Descending, from highest to lowest **(most recent terminals first)**
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Logistics | Vehicles
      summary: Add a new vehicle
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        '201':
          description: Created
  '/vehicles/{id}':
    patch:
      tags:
        - Logistics | Vehicles
      summary: Update a vehicle
      parameters:
        - name: id
          in: path
          description: The vehicle id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        '201':
          description: Ok
    delete:
      tags:
        - Logistics | Vehicles
      summary: Delete a vehicle
      parameters:
        - name: id
          in: path
          description: The vehicle id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
  /vehicle-trailer-compartments:
    get:
      tags:
        - Logistics | Vehicles
      summary: List all trailer compartments
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort trailer compartments by id:
             * `id` - Ascending, lowest to highest **(oldest records first)**
             * `-id` - Descending, from highest to lowest **(most recent terminals first)**
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Logistics | Vehicles
      summary: Add a new trailer comparment
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTrailerCompartment'
        required: true
      responses:
        '201':
          description: Created
  '/vehicle-trailer-compartments/{id}':
    patch:
      tags:
        - Logistics | Vehicles
      summary: Update a trailer compartment
      parameters:
        - name: id
          in: path
          description: The trailer compartment id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTrailerCompartment'
        required: true
      responses:
        '201':
          description: Ok
    delete:
      tags:
        - Logistics | Vehicles
      summary: Delete a vehicle compartment
      parameters:
        - name: id
          in: path
          description: The trailer compartment id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
  /driver-vehicles:
    get:
      tags:
        - Logistics | Vehicles
      summary: List all driver to vehicle mappings
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `id` - Ascending, lowest to highest **(oldest records first)**
             * `-id` - Descending, from highest to lowest **(most recent terminals first)**
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Logistics | Vehicles
      summary: Add a driver to vehicle mapping (to be used once at initial data push)
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVehicle'
        required: true
      responses:
        '201':
          description: Created
  '/driver-vehicles/{id}':
    patch:
      tags:
        - Logistics | Vehicles
      summary: Update a driver to vehicle mapping
      parameters:
        - name: id
          in: path
          description: The driver-vehicle id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVehicle'
        required: true
      responses:
        '201':
          description: Ok
    delete:
      tags:
        - Logistics | Vehicles
      summary: Delete a driver to vehicle mapping
      parameters:
        - name: id
          in: path
          description: The id of the driver-vehicle mapping
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
  /product-class:
    get:
      summary: List of all product classes (Refined, Distillate, etc)
      description: List of all product classes (Refined, Distillate, etc)
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /products:
    get:
      description: List all products
      summary: List all products
      tags:
        - Products
      parameters:
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `Product id` - Ascending, lowest to highest
             * `-Product id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - ProductID
              - '-ProductID'
      responses:
        '200':
          description: Ok
    post:
      tags:
        - Products
      summary: Add a new product
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '201':
          description: Created
  '/products/{id}':
    get:
      tags:
        - Products
      summary: Show a product's details.
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: id
          in: path
          description: The product id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Products
      summary: Delete a product
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Products
      summary: Update a product
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: E10 87 UNL
        required: true
      responses:
        '201':
          description: Ok
  /rack-cities:
    get:
      tags:
        - Rack Cities and Terminals
      summary: List all rack cities
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - $ref: "#/components/parameters/sort"
      responses:
        '200':
          description: OK
    post:
      tags:
        - Rack Cities and Terminals
      summary: Add a new rack city
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RackCity'
        required: true
      responses:
        '201':
          description: Created
  '/rack-cities/{id}':
    patch:
      tags:
        - Rack Cities and Terminals
      summary: Update a rack city
      parameters:
        - name: id
          in: path
          description: The rack city id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RackCity'
        required: true
      responses:
        '201':
          description: Ok
    delete:
      tags:
        - Rack Cities and Terminals
      summary: Delete a Rack City
      parameters:
        - name: id
          in: path
          description: The rack city id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
  /bulk-suppliers:
    get:
      summary: List all suppliers
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort sites by id:
             * `SupplierID` - Ascending, lowest to highest
             * `-SupplierID` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - SupplierID
              - '-SupplierID'
      tags:
        - Suppliers
      responses:
        '200':
          description: OK
    post:
      tags:
        - Suppliers
      summary: Add a new supplier
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      responses:
        '201':
          description: Created
          
  '/bulk-suppliers/{id}':
    get:
      tags:
        - Suppliers
      summary: Show a supplier
      parameters:
        - name: id
          in: path
          description: The tank id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Suppliers
      summary: Delete a supplier
      parameters:
        - name: id
          in: path
          description: The tank id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Deleted
    patch:
      tags:
        - Suppliers
      summary: Update a supplier
      parameters:
        - name: id
          in: path
          description: The site id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      responses:
        '201':
          description: Ok
  /bulk-supplier-terminal-lookup:
    get:
      summary: List all supplier to terminal mappings
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort supplier to terminal mappings by id:
             * `TerminalLookupID` - Ascending, lowest to highest
             * `-TerminalLookupID` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - TerminalLookupID
              - '-TerminalLookupID'
        - name: BulkSupplierID
          in: query
          description: |
            Filter results by supplier:
              `BulkSupplierID`
          required: false
          style: form
          explode: false
          schema:
            type: integer
        - name: TerminalID
          in: query
          description: |
            Filter results by terminal:
              `TerminalID`
          required: false
          style: form
          explode: false
          schema:
            type: integer
      tags:
        - Suppliers
      responses:
        '200':
          description: OK
    post:
      tags:
        - Suppliers
      summary: Add a new supplier to terminal mapping
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierTerminalLookup'
        required: true
      responses:
        '201':
          description: Created
  '/bulk-supplier-terminal-lookup/{id}':
    get:
      tags:
        - Suppliers
      summary: Show a supplier to terminal mapping
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: id
          in: path
          description: The TerminalLookupID
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Suppliers
      summary: Delete a supplier to terminal mapping
      parameters:
        - name: id
          in: path
          description: The TerminalLookupID
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Deleted
    patch:
      tags:
        - Suppliers
      summary: Update a supplier to terminal mapping
      parameters:
        - name: id
          in: path
          description: The TerminalLookupID
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierTerminalLookup'
        required: true
      responses:
        '201':
          description: Ok
  /sites:
    get:
      tags:
        - Sites
      summary: List all sites
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort sites by id:
             * `SiteLocID` - Ascending, lowest to highest
             * `-SiteLocID` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - SiteLocID
              - '-SiteLocID'
      responses:
        '200':
          description: OK
    post:
      parameters:
        - in: query
          name: external_id
          schema:
            type: integer
          description: pdi id
        - in: query
          name: external_source
          schema:
            type: string
          description: pdi
        - in: query
          name: external_subject
          schema:
            type: string
          description: pdi internal model name
      tags:
        - Sites
      summary: Add a new site
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
  '/sites/{id}':
    get:
      tags:
        - Sites
      summary: Show a site
      parameters:
        - name: id
          in: path
          description: The site id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Sites
      summary: Delete a site
      parameters:
        - name: id
          in: path
          description: The site id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
  /terminal-site-links:
    get:
      tags:
        - Terminal to Site Links
      summary: List all terminal-site-links
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort sites by id:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Terminal to Site Links
      summary: Add a terminal-site-link
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TerminalSiteLink'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalSiteLink'
  '/terminal-site-links/{id}':
    get:
      tags:
        - Terminal to Site Links
      summary: Show a terminal->site link
      parameters:
        - name: id
          in: path
          description: The terminal-site-link id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Terminal to Site Links
      summary: Delete a terminal to site link
      parameters:
        - name: id
          in: path
          description: The terminal-site-link id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
  /states:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: Mapping table for states
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /tanks:
    get:
      tags:
        - Tanks
      summary: List all tanks
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - name: sort
          in: query
          description: |
            Sort order:
             * `id` - Ascending, lowest to highest
             * `-id` - Descending, from highest to lowest
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Tanks
      summary: Add a new tank
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tank'
        required: true
      responses:
        '201':
          description: Created
  '/tanks/{id}':
    get:
      tags:
        - Tanks
      summary: Show a tank
      parameters:
        - name: id
          in: path
          description: The tank id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Tanks
      summary: Delete a tank
      parameters:
        - name: id
          in: path
          description: The tank id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Deleted
    patch:
      tags:
        - Tanks
      summary: Update a tank
      parameters:
        - name: id
          in: path
          description: The tank id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tank'
        required: true
      responses:
        '201':
          description: Ok
  /tank-installation-type:
    get:
      summary: Above-ground or Underground
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /tank-orientation:
    get:
      summary: Horizontal or Vertical orientation
      description: Tank's orientation, either horizontal or vertical.
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /terminals:
    get:
      tags:
        - Rack Cities and Terminals
      summary: List all terminals
      parameters:
        - name: sort
          in: query
          description: |
            Sort clients by id:
             * `id` - Ascending, lowest to highest **(oldest records first)**
             * `-id` - Descending, from highest to lowest **(most recent terminals first)**
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - id
              - '-id'
      responses:
        '200':
          description: OK
    post:
      tags:
        - Rack Cities and Terminals
      summary: Add a new terminal
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Terminal'
        required: true
      responses:
        '201':
          description: Created
  '/terminals/{id}':
    patch:
      tags:
        - Rack Cities and Terminals
      summary: Update a terminal
      parameters:
        - name: id
          in: path
          description: The site id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      requestBody:
        description: _Properties_
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Terminal'
        required: true
      responses:
        '201':
          description: Ok
    delete:
      tags:
        - Rack Cities and Terminals
      summary: Delete a terminal
      parameters:
        - name: id
          in: path
          description: The terminal id
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Ok
  /users:
    get:
      summary: users
      description: users
      tags:
        - Related Data
      responses:
        '200':
          description: OK

  /vehicle-class:
    get:
      summary: Commercial Vehicle Classification
      description: Commercial Vehicle Classes as set by US DOT
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /vehicle-manufacturer:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: Vehicle Manufacturer
      description: Vehicle Manufacturer (Heil, Freightliner, Kenworth, etc)
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  /vehicle-model:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: Vehicle Models
      description: Vehicle Models
      tags:
        - Related Data
      responses:
        '200':
          description: OK       
  /vehicle-type:
    get:
      summary: Tractor or Trailer
      description: Tractor or Trailer
      tags:
        - Related Data
      responses:
        '200':
          description: OK        
  /universal-list-item:
    get:
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
      summary: Mapping table for various constants
      tags:
        - Related Data
      responses:
        '200':
          description: OK
  
components:
  parameters:
    sort:
      name: sort
      in: query
      description: |
        Sort trailer compartments by id:
          * `id` - Ascending, lowest to highest **(oldest records first)**
          * `-id` - Descending, from highest to lowest **(most recent terminals first)**
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
          - id
          - '-id'
    perPage:
      name: per-page
      in: query
      description: Number of responses to return per page (max of 50)
      schema:
        type: integer
    page:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
    externalIdParam:
      in: query
      name: external_id
      required: false
      schema:
        type: string
      description: pdi id
    externalSourceParam:
      in: query
      name: external_source
      required: false
      schema:
        type: string
      description: pdi
    externalSubjectParam:
      in: query
      name: external_subject
      required: false
      schema:
        type: string
      description: pdi model
  schemas:
    Carrier:
        required:
          - legalname
          - name
          - clientTypeID
          - invoiceDisplayFreight
        type: object
        properties:
          internal_id:
            type: string
            description: 'pdi id'
          legalName:
            type: string
            description: 'Name of the carrier'
          dba:
            type: string
            description: 'Doing business as'
          scac:
            type: string
            description: 'SCAC code'
          usDOT:
            type: string
            description: 'US DOT Number'
          primaryAddressOne:
            type: string
            description: "Client's address - **street address 1**"
          primaryAddressTwo:
            type: string
            description: "Client's address - **street address 2**"
          city:
            type: string
            description: "Carrier's address - **city**"
          stateID:
            type: integer
            description: "If state is unknown, use 1.  Otherwise, use `GET /states` from related data to get state ids.  Carrier's address - **state**"
          zipCode:
            type: string
            description: "Carrier's address - **zip code**"
          terms:
            type: integer
            description: ""
            default: '10'
          taxPayerID:
            type: integer
            description: 'FEIN'
          approved:
            maximum: 1
            type: integer
            format: int32
            default: '1'
            description: 'Use 1 for approved, 0 if not'
        description: Carrier
        
    Client:
      required:
        - active
        - name
        - clientTypeID
        - invoiceDisplayFreight
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        name:
          type: string
          description: 'Name of the client'
        clientTypeID:
          type: integer
          description: 'Use 1 for Fuel, 2 for Freight.'
        phoneNumber:
          type: string
          description: "Client's phone number"
        address:
          type: string
          description: "Client's address - **street address**"
        city:
          type: string
          description: "Client's address - **city**"
        stateID:
          type: integer
          description: "Use `GET /states` from related data to get state ids.  Client's address - **state**"
        zip:
          type: string
          description: "Client's address - **zip code**"
        countyID:
          type: integer
          description: "Use `GET /counties` from related data for county ids.  Client's address - **county**"
        invoiceDisplayFreight:
          maximum: 1
          type: integer
          description: 'Use 1 if you want to display freight as seperate line items'
          default: 0
        active:
          maximum: 1
          type: integer
          format: int32
          default: 1
          description: 'Use 1 for active, 0 if not'
      description: Client
    Contact:
      required:
        - firstName
        - lastName
        - modelID
        - modelPk
        - active
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        modelID:
          type: integer
        modelPk:
          type: integer
        emailAddress:
          type: string
        title:
          type: string
        phone_number:
          type: string
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 for active 0 for not -- defaults to active'
    Driver:
      required:
        - active
        - userID
        - firstName
        - lastName
        - driverID
        - emailAddress
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        userID:
          type: integer
          description: 'Drivers must be associated with a user'
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 if active 0 if not -- defaults to 1'
        firstName:
          type: string
          description: ''
        lastName:
          type: string
          description: ''
        driverID:
          type: string
          description: 'Internal company ID'
        emailAddress:
          type: string
          description: ''
        middleName:
          type: string
          description: ''
        dateOfBirth:
          type: string
          description: ''
        date_of_hire:
          type: string
          description: 'Used to calculate seniority for driver pay'
        tagNames:
          type: string
          description: 'Tag drivers to filter dashboards and grids'
          
    DriverVehicle:
      required:
        - driverID
        - vehicleID
        - vehicleTypeID
        - beginDate
      type: object
      properties:
        driverID:
          type: integer
          description: 'From GET /drivers'
        vehicleID:
          type: integer
          description: 'From GET /vehicles'
        vehicleTypeID:
          type: integer
          description: '1 (Tractor) or 2 (Trailer)'
        beginDate:
          type: string
          format: date-time
          description: 'Format -- 2018-03-20T09:12:28Z'
            
    Site:
      required:
        - active
        - SiteName
        - ClientID
        - countyID
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        SiteName:
          type: string
          description: The internal name used for a site -- Gregs Oil and Tires
        ClientID:
          type: integer
          description: >-
            The id of the client which the site belongs to -- use GET /clients (list all clients) to find.
        Address:
          type: string
          description: 'Site address - **street address**'
        City:
          type: string
          description: 'Site address - **city**'
        State:
          type: string
          description: 'Site address - **state**'
        Zip:
          type: string
          description: 'Site address - **zip code**'
        SiteLocContact:
          type: string
          description: 'Name of contact who works at this site'
        PhoneNum:
          type: string
          description: 'Phone number at the site'
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 for active 0 for not -- defaults to active'
        stateID:
          type: integer
          description: 'ID of state this site is in -- use `GET /states` for ids.'
        countyID:
          type: integer
          description: 'Use related data -- counties to find id of county.'
      description: Site
      example:
                SiteName: 'Gregs Oil and Tires'
                SiteLocID: '3'
                CountyID: '45'
                StateID: '32'
                ClientID: '1'
                
    IntegrationProperty:
      type: object
      required:
        - integration_id
        - property
        - value
      properties:
        integration_id:
          type: integer
          description: id of integration you want to map a property to
        property:
          type: string
          description: name of your property
        value:
          type: string
          
    LoadingNumber:
      required:
        - loadingNumber
        - supplierID
        - terminalID
        - rackCityID
        - bulkSupplierID
        - typeID
      type: object
      properties:
        supplierID:
          type: integer
        terminalID:
          type: integer
        destinationStateID:
          type: integer
        rackCityID:
          type: integer
        loadingNumber:
          type: integer
        bulkSupplierID:
          type: integer
        typeID:
          type: integer
        clientID:
          type: integer
        siteID:
          type: integer
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 for active 0 for not -- defaults to active'
          
    LoadingNumberDestinationNumber:
      required:
        - active
        - loadingNumberID
        - stateID
      type: object
      properties:
        loadingNumberID:
          type: integer
        destinationNumber:
          type: integer
        stateID:
          type: integer
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 for active 0 for not -- defaults to active'
    
    Product:
      required:
        - Active
        - ProductName
        - productClassID
        - typeID
        - unitOfMeasureID
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        ProductName:
          type: string
          description: 'The name for a product -- E10 87 UNL, ULSD \#2, E85 Unleaded, DEF'
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: 'Use 1 for active, 0 for inactive - defaults to active'
        productClassID:
          type: integer
          description: 'Use 1 for refined products, 2 for distillate'
        typeID:
          type: integer
          description: 'Use typeID of 20 if product is fuel - this is the default'
          default: 20
        invoiceDescription:
          type: string
          description: 'Sales alias'
        unitOfMeasureID:
          type: integer
          description: >-
            Use 23 for gallons, other units found in related data --
            universal-list-item.  23 (gallons) is the default
          default: 23
      description: Product
    RackCity:
      required:
        - active
        - city
        - state
      type: object
      properties:
        city:
          type: string
          description: Name of city
        state:
          type: string
          description: Use two letter abbreviation for states
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: 'Use 1 for active, 0 for inactive'
    Supplier:
      required:
        - passesTare
        - SupplierName
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        SupplierName:
          type: string
          description: 'Name of the suplier'
        FEIN:
          type: string
          description: 'Tax id'
        BulkSupplierType:
          type: string
          description: 'Distributor, Supplier, Terminal Allocated Supplier (not required -- may pass through empty string by leaving blank)'
        Address:
          type: string
          description: 'Street address'
        City:
          type: string
          description: 'City name'
        State:
          type: string
          description: 'Two letter abbreviation for state'
        Zip:
          type: string
          description: 'Zip code'
        CreditLimit:
          type: integer
          description: 'Maximum amount of outstanding credit allowed'
        passesTare:
          type: integer
          description: '0 or 1 most 0'
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: 'Use 1 for active, 0 for inactive'
    SupplierTerminalLookup:
      required:
      - BulkSupplierID
      - TerminalID
      type: object
      properties:
        BulkSupplierID:
          type: integer
        TerminalID:
          type: integer
        BulkSupplierTerminal:
          type: string
    Tank:
      required:
        - active
        - name
        - siteID
        - capacity
        - capacityLimit
        - productID
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        name:
          type: string
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
        pump:
          type: integer
          default: '0'
        manifold:
          type: integer
          default: '0'
        siteID:
          type: integer
        capacity:
          type: integer
          description: 'Total amount in gallons the tank will hold'
        capacityLimit:
          type: integer
          description: 'Max percentage fillable for saftey.  In decimal format ie .9 for 90%'
        productID:
          type: integer
        installationTypeID:
          type: integer
          default: 2
          description: 'Use 1 if tank is above ground or 2 if tank is underground -- defaults to 2'
        orientationID:
          type: integer
          default: 1
          description: 'Use 1 for horizontal or 2 for vertical orientation of the tank'
        tankGroup:
          type: integer
          default: A
          description: Tank
        company_tank_number:
          type: integer
          description: 'multi use field'
    Terminal:
        required:
          - name
          - active
        type: object
        properties:
          internal_id:
            type: string
            description: 'pdi id'
          name: 
            type: string
            description: 'Terminal name ie *Magellan Pipeline Company, L.P.* '
          rackCityID:
            type: integer
            description: 'Rack city to which terminal belongs, reference GET /rack-cities for this id.  If bulk plant, you may create a new rack city or use existing'
          address:
            type: string
            description: '**Address** -- street address'
          city:
            type: string
            description: '**Address** -- city'
          st:
            type: string
            description: '**Address** -- two letter abbreviation for state'
          zip:
            type: integer
            description: '**Address** -- zip code'
          ctrlNum:
            type: string
            description: 'Terminal Control Number.  If terminal has a TCN enter it here.  If this terminal is a bulk plant, it is suggested you create your own numbering convention'
          active:
            maximum: 1
            type: integer
            format: int32
            example: 0
            default: 1
            description: 'Use 1 for active, 0 for inactive'
    TerminalSiteLink:
        required:
          - terminal_id
          - site_id
        type: object
        properties:
          terminal_id:
            type: integer
            description: 'id of the bulk plant'
          site_id:
            type: integer
            description: 'id of the site which maps to bulk plant terminal'
    Vehicle:
      required:
        - active
        - classID
        - manufacturerID
        - typeID
        - vehicleID
        - vin
        - modelYear
      type: object
      properties:
        internal_id:
            type: string
            description: 'pdi id'
        classID:
          type: integer
          description: 'Vehicle Class - refer to Related Data vehicle-class (Normally 8 for tractors, trailers will vary)'
        modelID:
          type: integer
          description: 'Vehicle Model - refer to Related Data vehicle-model'
        manufacturerID:
          type: integer
          description: 'Vehicle Class - refer to Related Data vehicle-manufacturer'
        typeID:
          type: integer
          description: 'Vehicle Class - refer to Related Data vehicle-type'
        vehicleID:
          type: integer
          description: 'Internally used company id'
        vin:
          type: string
          description: 'Vehicle Identification Number'
        modelYear:
          type: integer
          description: 'Four digit year of the vehicle model'
        active:
          maximum: 1
          type: integer
          format: int32
          example: 0
          default: 1
          description: '1 for active 0 for not -- defaults to active'
    VehicleTrailerCompartment:
      required:
        - vehicleTrailerID
        - capacity
        - compartmentNumber
      type: object
      properties:
        vehicleTrailerID:
          type: integer
          description: id of the trailer (the id of a vehicle that is of typeID=2)
        capacity:
          type: integer
          description: capacity in gallons of the compartment
        compartmentNumber:
          type: integer
          description: compartment number

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: authorization-token
      in: query