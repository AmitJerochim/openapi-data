{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Canopy's API is organized around rest. Our API uses standard HTTP response codes, authentication, and verbs. <p>\nSubscribe to our <a href=\"https://www.getcanopy.com/integrations/api\">API mailing list</a> to receive notifications of future updates. If you have questions you can <a href = \"mailto: integrations@getcanopy.com\">email us.</a>",
    "version" : "1.0.0",
    "title" : "Canopy"
  },
  "paths" : {
    "/contacts" : {
      "get" : {
        "tags" : [ "contact" ],
        "summary" : "Retrieves a simplified list of your contacts (SimpleContact).",
        "parameters" : [ {
          "in" : "query",
          "name" : "updated_at",
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "required" : false,
          "description" : "Retrieve all SimpleContacts that have been updated since the time specified in the updated_at parameter. If missing, it will return all contacts."
        }, {
          "in" : "query",
          "name" : "next_cursor",
          "schema" : {
            "type" : "string"
          },
          "required" : false,
          "description" : "The next_cursor pagination value."
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer"
          },
          "required" : false,
          "description" : "The max number of contacts to return."
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "contacts" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/SimpleContact"
                      }
                    },
                    "next_cursor" : {
                      "type" : "string",
                      "description" : "This represents the start of the next page. If you receive a next_cursor that"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. The updated_at query paramter could not be parsed."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "405" : {
            "description" : "Invalid HTTP request is sent."
          },
          "5XX" : {
            "description" : "Unexpected error."
          }
        }
      }
    },
    "/contacts/{contact_id}" : {
      "get" : {
        "tags" : [ "contact" ],
        "summary" : "Retrieves a business or individual.",
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "contacts" : {
                      "oneOf" : [ {
                        "$ref" : "#/components/schemas/Individual"
                      }, {
                        "$ref" : "#/components/schemas/Business"
                      } ]
                    }
                  }
                },
                "examples" : {
                  "Individual" : {
                    "value" : {
                      "contact" : {
                        "id" : "2323423423",
                        "first_name" : "David",
                        "last_name" : "Homer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. The specified ID must be a string."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "403" : {
            "description" : "The user doesn't have access to the specified contact."
          },
          "404" : {
            "description" : "A contact with the specified ID was not found."
          },
          "405" : {
            "description" : "Invalid HTTP request is sent."
          },
          "5XX" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "SimpleContact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CLIENT", "OTHER", "PROSPECT" ]
          },
          "is_business" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Business" : {
        "type" : "object",
        "required" : [ "business_name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "tin" : {
            "type" : "string"
          },
          "business_name" : {
            "type" : "string"
          },
          "business_type" : {
            "type" : "string",
            "enum" : [ "C_CORPORATION", "ESTATE", "LLC", "NON_PROFIT", "NOT_SELECTED", "OTHER", "PARTNERSHIP", "S_CORPORATION", "SOLE_PROPRIETORSHIP", "TRUST" ]
          },
          "client_since" : {
            "type" : "string",
            "format" : "date",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "deleted_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "archived_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CLIENT", "PROSPECT", "OTHER" ]
          },
          "date_established" : {
            "type" : "string",
            "format" : "date",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Email"
            }
          },
          "phones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            }
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "external_id" : {
            "type" : "string"
          },
          "industry" : {
            "type" : "string"
          },
          "is_archived" : {
            "type" : "boolean"
          },
          "is_deleted" : {
            "type" : "boolean"
          },
          "is_hidden" : {
            "type" : "boolean"
          },
          "is_business" : {
            "type" : "boolean"
          },
          "custom_fields" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DateCustomField"
            }, {
              "$ref" : "#/components/schemas/DropDownCustomField"
            }, {
              "$ref" : "#/components/schemas/MultiSelectCustomField"
            }, {
              "$ref" : "#/components/schemas/TextCustomField"
            } ],
            "discriminator" : {
              "propertyName" : "type",
              "mapping" : {
                "date" : "#/components/schemas/DateCustomField",
                "dropdown" : "#/components/schemas/DropDownCustomField",
                "multiselect" : "#/components/schemas/MultiSelectCustomField",
                "text" : "#/components/schemas/TextCustomField"
              }
            }
          }
        }
      },
      "Individual" : {
        "type" : "object",
        "required" : [ "first_name", "last_name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "tin" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string",
            "example" : "James"
          },
          "middle_name" : {
            "type" : "string",
            "example" : "Jay"
          },
          "last_name" : {
            "type" : "string",
            "example" : "McDoo"
          },
          "birthdate" : {
            "type" : "string",
            "format" : "date",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "client_since" : {
            "type" : "string",
            "format" : "date",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "deleted_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "archived_at" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          },
          "employer_name" : {
            "type" : "string"
          },
          "external_id" : {
            "type" : "string"
          },
          "filing_status" : {
            "type" : "string",
            "enum" : [ "HEAD_OF_HOUSEHOLD", "MARRIED_JOINT", "MARRIED_SEPARATE", "NOT_SELECTED", "QUALIFYING_WITH_DEPENDENTS", "SINGLE" ]
          },
          "is_archived" : {
            "type" : "boolean"
          },
          "is_deleted" : {
            "type" : "boolean"
          },
          "is_hidden" : {
            "type" : "boolean"
          },
          "is_business" : {
            "type" : "boolean"
          },
          "occupation" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Email"
            }
          },
          "phones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            }
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CLIENT", "OTHER", "PROSPECT" ]
          }
        }
      },
      "Email" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "type" : {
            "type" : "string",
            "enum" : [ "OTHER", "PERSONAL", "WORK" ]
          },
          "is_primary" : {
            "type" : "boolean",
            "description" : "If true, this is email address the contact wants to be contacted on. There can only be one is_primary email per contact."
          },
          "value" : {
            "type" : "string",
            "description" : "the email address"
          }
        }
      },
      "Phone" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "is_primary" : {
            "type" : "boolean",
            "description" : "If true, this is phone number the contact wants to be contacted on. There can only be one is_primary phone number per contact."
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FAX", "HOME", "MOBILE", "OTHER", "WORK" ]
          },
          "value" : {
            "type" : "string",
            "description" : "the phone number"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "is_primary" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "MAILING", "OTHER", "PHYSICAL", "WORK" ]
          },
          "value" : {
            "type" : "object",
            "properties" : {
              "region" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "locality" : {
                "type" : "string"
              },
              "address_1" : {
                "type" : "string"
              },
              "address_2" : {
                "type" : "string"
              },
              "postal_code" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "TextCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "field_id" : {
            "type" : "string"
          },
          "field_name" : {
            "type" : "string"
          },
          "type" : {
            "description" : "The value of 'type' will be 'text'",
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "DropDownCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "field_id" : {
            "type" : "string"
          },
          "field_name" : {
            "type" : "string"
          },
          "type" : {
            "description" : "The value of 'type' will be 'dropdown'",
            "type" : "string"
          },
          "dropdown_values" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "MultiSelectCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "field_id" : {
            "type" : "string"
          },
          "field_name" : {
            "type" : "string"
          },
          "type" : {
            "description" : "The value of 'type' will be 'multiselect'",
            "type" : "string"
          },
          "dropdown_values" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "DateCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 50
          },
          "field_id" : {
            "type" : "string"
          },
          "field_name" : {
            "type" : "string"
          },
          "type" : {
            "description" : "The value of 'type' will be 'date'",
            "type" : "string"
          },
          "value" : {
            "type" : "string",
            "format" : "date-time",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
          }
        }
      }
    }
  }
}