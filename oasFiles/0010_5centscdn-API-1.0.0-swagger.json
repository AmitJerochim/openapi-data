{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "API for <a href=\"https://www.5centscdn.net\" target=\"_blank\">5centsCDN Services</a>",
    "version" : "1.0.0",
    "title" : "5centsCDN API",
    "contact" : {
      "email" : "help@5centscdn.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/5centscdn/API/1.0.0"
  }, {
    "url" : "https://api.5centscdn.com/v1",
    "description" : "5centscdn API"
  } ],
  "tags" : [ {
    "name" : "streams",
    "description" : "streams list"
  }, {
    "name" : "streamspush",
    "description" : "streams push list"
  }, {
    "name" : "streamspull",
    "description" : "streams pull list"
  }, {
    "name" : "MultiBitratePush",
    "description" : "Multi Bitrate Push list"
  }, {
    "name" : "DVRStream",
    "description" : "DVR list"
  }, {
    "name" : "DelayedStream",
    "description" : "Delayed Stream list"
  }, {
    "name" : "scheduledplaylist",
    "description" : "Scheduled Playlist"
  }, {
    "name" : "Restream",
    "description" : "Restream list"
  }, {
    "name" : "streamreport",
    "description" : "Stream Report"
  }, {
    "name" : "Account",
    "description" : "Account list"
  }, {
    "name" : "zone",
    "description" : "zone list"
  }, {
    "name" : "zonepush",
    "description" : "HTTP Push Zones list"
  }, {
    "name" : "zonepull",
    "description" : "HTTP Pull Zones list"
  }, {
    "name" : "zonevod",
    "description" : "VoD Push list"
  }, {
    "name" : "zonevodpull",
    "description" : "VoD Pull list"
  }, {
    "name" : "zonepullreport",
    "description" : "Zone Pull Report"
  }, {
    "name" : "zonepushreport",
    "description" : "zone Push Report"
  }, {
    "name" : "zonerecordreport",
    "description" : "zone Record Report"
  }, {
    "name" : "zonevodpushreport",
    "description" : "zone VoD Push Report"
  }, {
    "name" : "zonevodpullreport",
    "description" : "zone VoD Pull Report"
  } ],
  "paths" : {
    "/streams" : {
      "get" : {
        "tags" : [ "streams" ],
        "summary" : "List streams",
        "description" : "list streams\n",
        "operationId" : "streamsList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "streams list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/streams/push" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Stream",
        "description" : "push list",
        "operationId" : "streamsPushList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/new" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Create Publish",
        "description" : "Create a Publish stream",
        "operationId" : "createPushStreams",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePushStream"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Stream",
        "description" : "Returns the details of a publish stream",
        "operationId" : "getStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update Info",
        "description" : "Update the information of publish stream",
        "operationId" : "updateStreamspush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePushStream"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "streamspush" ],
        "summary" : "Delete Info",
        "description" : "Delete the information of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteStreamspush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/status" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/source" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update Source",
        "description" : "Update the source of a publish stream",
        "operationId" : "updatesourceStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushStreamSource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update Domain Lock",
        "description" : "Update the domainlock of a publish stream",
        "operationId" : "updatedomainlockStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update Geo Block",
        "description" : "Update the geoblock of a publish stream",
        "operationId" : "updategeoblockStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/securetoken" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update Secure Token",
        "description" : "Update secure token of a publish stream",
        "operationId" : "updateSecureTokenStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSecureToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/eac" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for publish stream",
        "operationId" : "updateExternalAuthControlStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/rtmpauth" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update RTMPAuth",
        "description" : "Update RTMPAuth of publish stream",
        "operationId" : "updateRtmpauthStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRtmpauth"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/servers" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Servers",
        "description" : "Return the list of servers of publish stream",
        "operationId" : "getServersStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/restore" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Restore",
        "description" : "Restore a Publish stream",
        "operationId" : "restoreStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/restart" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Restart",
        "description" : "Restart a Publish stream",
        "operationId" : "restartStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/record" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update DVR",
        "operationId" : "updateDvrStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRecord"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/transcode" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update transcode",
        "description" : "Update the transcode of a publish stream",
        "operationId" : "updatetranscodeStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Posttranscode"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/platforms" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Add platform",
        "description" : "Add the platform of a publish stream",
        "operationId" : "addplatformStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/platform/{platformid}" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update platform",
        "description" : "Update the platform of a publish stream",
        "operationId" : "updateplatformStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "streamspush" ],
        "summary" : "Delete Info",
        "description" : "Delete the Platform of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletePlatformStreamspush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/platform/{platformid}/restart" : {
      "get" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update platform",
        "description" : "Restart the platform of a publish stream",
        "operationId" : "restartplatformStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/push/{streamid}/platform/{platformid}/status" : {
      "post" : {
        "tags" : [ "streamspush" ],
        "summary" : "Update platform",
        "description" : "Status the platform of a publish stream",
        "operationId" : "platformstatusStreamsPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream" : {
      "get" : {
        "tags" : [ "streamspull" ],
        "summary" : "Stream",
        "description" : "pull streams list",
        "operationId" : "ListPullStreams",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/new" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Create Restream",
        "description" : "Create a restream",
        "operationId" : "createStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRestream"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}" : {
      "get" : {
        "tags" : [ "streamspull" ],
        "summary" : "Stream",
        "description" : "Return the details of a restream",
        "operationId" : "getDetailsStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update Info",
        "description" : "Update information of a restream",
        "operationId" : "updatesStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamsPull"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "streamspull" ],
        "summary" : "Delete Info",
        "description" : "Delete information of a restream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/status" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/source" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update Source",
        "operationId" : "updateSourceStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPullSource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update Domain Lock",
        "description" : "Update domain lock of a restream",
        "operationId" : "updateDomainlockStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/securetoken" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update SecureToken",
        "description" : "Update secure token of a restream",
        "operationId" : "updateSecuretokenStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PullServerToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update Geo Block",
        "operationId" : "updateGeoblockStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/record" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update DVR",
        "description" : "Update DVR of a restream",
        "operationId" : "updateDvrStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRecord"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/eac" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for restream",
        "operationId" : "updateExternalAuthControlStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/servers" : {
      "get" : {
        "tags" : [ "streamspull" ],
        "summary" : "Servers",
        "description" : "Return the list of servers of publish stream",
        "operationId" : "serversStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/restart" : {
      "get" : {
        "tags" : [ "streamspull" ],
        "summary" : "Restart",
        "description" : "Restart a restream",
        "operationId" : "restartStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/restore" : {
      "get" : {
        "tags" : [ "streamspull" ],
        "summary" : "Restore",
        "description" : "Restore a restream",
        "operationId" : "restoreStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/transcode" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update transcode",
        "description" : "Update the transcode of a publish stream",
        "operationId" : "updatetranscodeStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Posttranscode"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/platforms" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Add platform",
        "description" : "Add the platform of a publish stream",
        "operationId" : "addplatformStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/platform/{platformid}" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update platform",
        "description" : "Update the platform of a publish stream",
        "operationId" : "updateplatformStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "streamspull" ],
        "summary" : "Delete Info",
        "description" : "Delete the Platform of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletePlatformStreamspull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/platform/{platformid}/restart" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update platform",
        "description" : "Restart the platform of a publish stream",
        "operationId" : "restartplatformStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/restream/{streamid}/platform/{platformid}/status" : {
      "post" : {
        "tags" : [ "streamspull" ],
        "summary" : "Update platform",
        "description" : "Status the platform of a publish stream",
        "operationId" : "platformstatusStreamsPull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr" : {
      "get" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "ABR",
        "description" : "List Multi Bitrate Push streams",
        "operationId" : "multiBitratePushlist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/new" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Create ABR",
        "description" : "Create a new ABR stream",
        "operationId" : "multiBitratePushCreate",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostMultiBitratePush"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}" : {
      "get" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Stream",
        "description" : "Returns the details of an abr stream",
        "operationId" : "getDetailsMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update Info",
        "description" : "Update information of ABR stream.",
        "operationId" : "updateMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postabr"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Delete Info",
        "description" : "Delete information of ABR stream.To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/status" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusStreamsabr",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/source" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update Source",
        "description" : "Update source of ABR",
        "operationId" : "updateSourceMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/postsourceabr"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update Domain Lock",
        "operationId" : "updateDomainlockMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update Geo Block",
        "description" : "Update Geoblock of ABR",
        "operationId" : "updateGeoblockMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/rtmpauth" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update RTMP Auth",
        "description" : "Update RTMP auth of ABR",
        "operationId" : "updateRtmpauthMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRtmpauth"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/eac" : {
      "post" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for abr",
        "operationId" : "updateExternalAuthControlMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/restart" : {
      "get" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Restart",
        "description" : "Restart ABR",
        "operationId" : "restartMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/abr/{streamid}/restore" : {
      "get" : {
        "tags" : [ "MultiBitratePush" ],
        "summary" : "Restore",
        "description" : "Restore ABR Stream",
        "operationId" : "restoreMultiBitratePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record" : {
      "get" : {
        "tags" : [ "DvrStream" ],
        "summary" : "DvrStream",
        "description" : "List DVR streams",
        "operationId" : "dvrStreamlist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}" : {
      "get" : {
        "tags" : [ "DvrStream" ],
        "summary" : "DvrStream",
        "description" : "Return the details of a DVR stream.",
        "operationId" : "getDetailsDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "DvrStream",
        "description" : "Update information of a record stream.",
        "operationId" : "updateInfoDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRecordServers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DvrStream" ],
        "summary" : "DvrStream",
        "description" : "Delete information of a record stream.",
        "operationId" : "deleteInfoDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/status" : {
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusStreamsdvr",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Update Domain Lock",
        "description" : "Update Domainlock of a record stream",
        "operationId" : "updateDomainlockDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/securetoken" : {
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Update Secure Token",
        "description" : "Update Secure token of record stream.",
        "operationId" : "updateSecureTokenStreamsRecord",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSecureToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Update Geo Block",
        "description" : "Update geo block of record stream",
        "operationId" : "updateGeoblockStreamsRecord",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/eac" : {
      "post" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for DVR",
        "operationId" : "updateExternalAuthControlDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/restore" : {
      "get" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Restore",
        "description" : "Restore record stream",
        "operationId" : "restore-8",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/restart" : {
      "get" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Restart",
        "description" : "Restart record stream",
        "operationId" : "restartDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/record/{streamid}/dvrstatus" : {
      "get" : {
        "tags" : [ "DvrStream" ],
        "summary" : "Restart",
        "description" : "Status record stream",
        "operationId" : "statusDvrStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift" : {
      "get" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Delayedstreams",
        "description" : "List Delayed  streams",
        "operationId" : "DelayedstreamsList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/new" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Create Delayed Stream",
        "description" : "Create new delayed stream",
        "operationId" : "createDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Posttimeshift"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}" : {
      "get" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Stream",
        "description" : "Return Delayed streams",
        "operationId" : "getDetailsDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update Info",
        "description" : "Update informations of a delayed stream",
        "operationId" : "updateDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Puttimeshift"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Delete Info",
        "description" : "Delete informations of a delayed stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/status" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusStreamstimeshift",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/securetoken" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update Secure Token",
        "description" : "Update secure token of a delayed stream",
        "operationId" : "updateSecureDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSecureToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update Geo Block",
        "description" : "Update Geo block of a delayed stream",
        "operationId" : "updateGeoblockDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/eac" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for Delayed stream",
        "operationId" : "updateExternalAuthControlDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update Domain Lock",
        "description" : "Update domainlock of a delayed stream.",
        "operationId" : "updateDomainlockDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/restart" : {
      "get" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Restart",
        "description" : "Restart Delayed stream",
        "operationId" : "restartDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/restore" : {
      "get" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Restore",
        "description" : "Restore Delayed stream",
        "operationId" : "restoreDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/platforms" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Add platform",
        "description" : "Add the platform of a publish stream",
        "operationId" : "addplatformStreamsDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/platform/{platformid}" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update platform",
        "description" : "Update the platform of a publish stream",
        "operationId" : "updateplatformDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Delete Info",
        "description" : "Delete the Platform of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletePlatformDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/platform/{platformid}/restart" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update platform",
        "description" : "Restart the platform of a publish stream",
        "operationId" : "restartplatformtimeshift",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/{streamid}/platform/{platformid}/status" : {
      "post" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Update platform",
        "description" : "Status the platform of a publish stream",
        "operationId" : "platformstatustimeshift",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/timeshift/parents" : {
      "get" : {
        "tags" : [ "DelayedStream" ],
        "summary" : "Source Streams",
        "description" : "Return the parents of a Delayed stream",
        "operationId" : "getParentsDelayedStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist" : {
      "get" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Stream",
        "description" : "scheduledplaylist.",
        "operationId" : "scheduledPlayList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/stats" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "streamreport",
        "description" : "Summary report.",
        "operationId" : "summaryReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/cache" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "streamreport",
        "description" : "Cache Statistics report.",
        "operationId" : "CacheStatisticsReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/topfiles" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "Top Files report",
        "description" : "Top Files report.",
        "operationId" : "TopFilesReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/new" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Create Scheduled Playlist",
        "description" : "Create new scheduled playlist",
        "operationId" : "createScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postscheduledplaylist"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/topreferrers" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "Top Referrers report",
        "description" : "Top Referrers report.",
        "operationId" : "TopReferrersReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/statuscodes" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "Status Codes report",
        "description" : "Status Codes report.",
        "operationId" : "StatusCodesReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/countries" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "By Country report",
        "description" : "By Country report.",
        "operationId" : "ByCountryReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/browsers" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "By Browser report",
        "description" : "By Browser report.",
        "operationId" : "ByBrowserReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/os" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "By OS report",
        "description" : "By OS report.",
        "operationId" : "ByOsReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/reports/on/visitors" : {
      "post" : {
        "tags" : [ "streamreport" ],
        "summary" : "Visitors report",
        "description" : "Visitors report.",
        "operationId" : "VisitorsReport",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}" : {
      "get" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Stream",
        "description" : "Return details of the stream.",
        "operationId" : "getDetailsScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update Info",
        "description" : "Update information of scheduled playlist",
        "operationId" : "updateInfoScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Putscheduledplaylist"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Delete Info",
        "description" : "Delete information of scheduled playlist.To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteInfoScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/securetoken" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update Secure Token",
        "description" : "Update secure token of a scheduled playlist.",
        "operationId" : "updateSecureTokenScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSecureToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/rtmpauth" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update RTMPAuth",
        "description" : "Update RTMP auth of a scheduled playlist.",
        "operationId" : "updateRtmpauthScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRtmpauth"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/geoblock" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update Geo Block",
        "description" : "Update geoblock of scheduled playlist",
        "operationId" : "updateGeoblockScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/eac" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for scheduled playlist",
        "operationId" : "updateExternalAuthControlScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/domainlock" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update Domain Lock",
        "description" : "Update domain lock of scheduled playlist.",
        "operationId" : "updateDomainlockScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/restore" : {
      "get" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Restore",
        "description" : "Restore a scheduled playlist",
        "operationId" : "restoreScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/restart" : {
      "get" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Restart",
        "description" : "Restart scheduled playlist",
        "operationId" : "restartScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/playlist/new" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Create Playlist",
        "description" : "Create new playlist",
        "operationId" : "createPlaylistScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postplaylist"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_31"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/playlist/{playlistid}" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update Playlist",
        "description" : "Update the playlist",
        "operationId" : "updatePlaylistScheduledPlaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "playlistid",
          "in" : "path",
          "description" : "Playlist ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Putplaylist"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/platforms" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Add platform",
        "description" : "Add the platform of a publish stream",
        "operationId" : "addplatformStreamsscheduledplaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/platform/{platformid}" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update platform",
        "description" : "Update the platform of a publish stream",
        "operationId" : "updateplatformRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Delete Info",
        "description" : "Delete the Platform of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletePlatformRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/platform/{platformid}/restart" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update platform",
        "description" : "Restart the platform of a publish stream",
        "operationId" : "restartplatformRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/scheduledplaylist/{streamid}/platform/{platformid}/status" : {
      "post" : {
        "tags" : [ "scheduledplaylist" ],
        "summary" : "Update platform",
        "description" : "Status the platform of a publish stream",
        "operationId" : "platformstatusRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish" : {
      "get" : {
        "tags" : [ "Restream" ],
        "summary" : "Restream List.",
        "description" : "Restream list",
        "operationId" : "RestreamList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_32"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/new" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Create Restream",
        "description" : "Create new Restream",
        "operationId" : "create-Restream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postpublish"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}" : {
      "get" : {
        "tags" : [ "Restream" ],
        "summary" : "Return the details of restream.",
        "description" : "Return the details of restream.",
        "operationId" : "get-details-of-a-stream-restream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_34"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update Info of Restream",
        "description" : "Update information of Restream",
        "operationId" : "update-info-Restream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRestream"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Restream" ],
        "summary" : "Delete Info",
        "description" : "Delete information of a restream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/status" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update status of stream",
        "description" : "Update status of stream",
        "operationId" : "statusRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/rtmpauth" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update RTMP Auth Restream",
        "description" : "Update RTMP auth of Restream",
        "operationId" : "update-rtmpauth-Restream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRtmpauth"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/restore" : {
      "get" : {
        "tags" : [ "Restream" ],
        "summary" : "Restore",
        "description" : "Restore  publish stream",
        "operationId" : "restorePublishStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/restart" : {
      "get" : {
        "tags" : [ "Restream" ],
        "summary" : "Restart",
        "description" : "Restart publish stream.",
        "operationId" : "restartPublishStream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/transcode" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update transcode",
        "description" : "Update the transcode of a publish stream",
        "operationId" : "updatetranscodeRestream",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Posttranscode"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/platforms" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Add platform",
        "description" : "Add the platform of a publish stream",
        "operationId" : "addplatformStreamspublish",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/platform/{platformid}" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update platform",
        "description" : "Update the platform of a publish stream",
        "operationId" : "updateplatformscheduledplaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditStreamPlatform"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Restream" ],
        "summary" : "Delete Info",
        "description" : "Delete the Platform of publish stream. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletePlatformscheduledplaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/platform/{platformid}/restart" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update platform",
        "description" : "Restart the platform of a publish stream",
        "operationId" : "restartplatformscheduledplaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/streams/publish/{streamid}/platform/{platformid}/status" : {
      "post" : {
        "tags" : [ "Restream" ],
        "summary" : "Update platform",
        "description" : "Status the platform of a publish stream",
        "operationId" : "platformstatusscheduledplaylist",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamid",
          "in" : "path",
          "description" : "Stream ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platformid",
          "in" : "path",
          "description" : "Platform ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postdisabled"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones" : {
      "get" : {
        "tags" : [ "zone" ],
        "summary" : "Zones",
        "description" : "Return all zones",
        "operationId" : "zonesList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push" : {
      "get" : {
        "tags" : [ "zonepush" ],
        "summary" : "Zone",
        "description" : "Return  HTTP push zone details",
        "operationId" : "zonePushList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/new" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Create Zone",
        "description" : "Create a new HTTP Push Zone",
        "operationId" : "createZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateZonePush"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}" : {
      "get" : {
        "tags" : [ "zonepush" ],
        "summary" : "Zone",
        "description" : "Return  HTTP push zone details",
        "operationId" : "getDetailsZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_38"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update Info",
        "description" : "Update the information of Push Zone",
        "operationId" : "updateZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_39"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "zonepush" ],
        "summary" : "Delete Info",
        "description" : "Delete the information of Push Zone. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deletZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/ssl" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update SSL",
        "description" : "Update SSL of HTTP push zone",
        "operationId" : "updateSslZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZonessl"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/securetoken" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update Secure Token",
        "description" : "Update SecureToken of HTTP push zone",
        "operationId" : "updateSecureTokenZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postpushzonesecuretoken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/domainlock" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update Domain Lock",
        "description" : "Update Edge settings of HTTP push zone",
        "operationId" : "updateDomainLockZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/edge" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update Edge Settings",
        "description" : "Update Edge settings of HTTP push zone",
        "operationId" : "updateEdgeSettingsZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/zoneshttppushnew_edge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/cache" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Update Cache",
        "description" : "Create a new HTTP Push Zone",
        "operationId" : "updateCacheZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCache"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/restore" : {
      "get" : {
        "tags" : [ "zonepush" ],
        "summary" : "Restore",
        "description" : "Restore HTTP push zone",
        "operationId" : "restoreZonePush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/push/{zoneid}/purge" : {
      "post" : {
        "tags" : [ "zonepush" ],
        "summary" : "Zone Cache Purge",
        "description" : "Purge cache of a HTTP push zone",
        "operationId" : "zonePushCachePurge",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPurge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull" : {
      "get" : {
        "tags" : [ "zonepull" ],
        "summary" : "Zone",
        "description" : "Zone HTTP Pull list",
        "operationId" : "zonePullList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_40"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/new" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Create Zone",
        "description" : "Create a new HTTP Pull Zone",
        "operationId" : "createZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPullzone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}" : {
      "get" : {
        "tags" : [ "zonepull" ],
        "summary" : "Zone",
        "description" : "Return  HTTP pull zone details",
        "operationId" : "getZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_42"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update Info",
        "description" : "update the information of  pull Zone",
        "operationId" : "updateZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_43"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "zonepull" ],
        "summary" : "Delete Info",
        "description" : "Delete the information of pull Zone. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/purge" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Purge",
        "description" : "Purge cache of a HTTP pull zone",
        "operationId" : "zoneCachePurgeZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPurge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/ssl" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update SSL",
        "description" : "Update SSL of HTTP pull zone",
        "operationId" : "updateSslZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZonePullssl"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_43"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/securetoken" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update Secure Token",
        "description" : "Update SecureToken of HTTP pull zone",
        "operationId" : "updateSecureTokenZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZoneSecureToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/edge" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update Edge Settings",
        "description" : "Update Edge settings of HTTP record zone",
        "operationId" : "updateEdgeSettingsZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZoneEdge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/shield" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update shield Settings",
        "description" : "Update shield settings of HTTP record zone",
        "operationId" : "updateShieldSettingsZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/shieldList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/domainlock" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update Domain Lock",
        "description" : "Update Domain lock of HTTP pull zone",
        "operationId" : "updateDomainLockZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/restore" : {
      "get" : {
        "tags" : [ "zonepull" ],
        "summary" : "Restore",
        "description" : "Restore HTTP pull zone",
        "operationId" : "restoreZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/http/pull/{zoneid}/cache" : {
      "post" : {
        "tags" : [ "zonepull" ],
        "summary" : "Update Cache",
        "description" : "Create a new HTTP Push Zone",
        "operationId" : "updateCacheZonePull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCache"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push" : {
      "get" : {
        "tags" : [ "zonevod" ],
        "summary" : "VoD Push",
        "description" : "Return VoD Push zones",
        "operationId" : "zoneVodPushList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_44"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/new" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Create Zone",
        "description" : "Create a new VOD push Zone",
        "operationId" : "createZoneVodPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPushvod"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}" : {
      "get" : {
        "tags" : [ "zonevod" ],
        "summary" : "Zone",
        "description" : "Return  VoD push zone details",
        "operationId" : "getVodzone",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update Info",
        "description" : "Update information of a VoD Push zone",
        "operationId" : "updateinfoZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZoneVodPush"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "zonevod" ],
        "summary" : "Delete Info",
        "description" : "Delete information of a VoD Push zone. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteinfoZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/ssl" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update SSL",
        "description" : "Update SSL of VoD push zone",
        "operationId" : "updateSslZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/zoneshttppushnew_ssl"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/restore" : {
      "get" : {
        "tags" : [ "zonevod" ],
        "summary" : "Restore",
        "description" : "Restore VoD push zone",
        "operationId" : "restoreZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/purge" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Purge",
        "description" : "Purge cache of a VoD Push zone",
        "operationId" : "zoneVodCachePurge",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPurge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/geoblock" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update Geoblock",
        "description" : "Update Geoblock of VoD push zone",
        "operationId" : "updateGeoblockZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlockVodPush"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_47"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/eac" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for  of VoD push zone",
        "operationId" : "updateExternalAuthControlZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_48"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/edge" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update Edge Settings",
        "description" : "Update Edge settings of VoD push zone",
        "operationId" : "updateEdgeSettingsZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postedgepull"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_47"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/push/{zoneid}/domainlock" : {
      "post" : {
        "tags" : [ "zonevod" ],
        "summary" : "Update Domain Lock",
        "description" : "Update Domain lock of VoD push zone",
        "operationId" : "updateDomainLockZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_47"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull" : {
      "get" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "VoD Push",
        "description" : "Return VoD Push zones",
        "operationId" : "zonevodpullPushList",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_49"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/new" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Create Zone",
        "description" : "Create a new VOD push Zone",
        "operationId" : "createzonevodpullPush",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPullvod"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_50"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}" : {
      "get" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Zone",
        "description" : "Return  VoD push zone details",
        "operationId" : "getVodzonepull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_51"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update Info",
        "description" : "Update information of a VoD Pull zone",
        "operationId" : "updateinfozonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostZoneVodPull"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_51"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Delete Info",
        "description" : "Delete information of a VoD Pull zone. To cast request method POST and parameters _METHOD = DELETE",
        "operationId" : "deleteinfozonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/ssl" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update SSL",
        "description" : "Update SSL of VoD push zone",
        "operationId" : "updateSslzonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/zoneshttppushnew_ssl"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_50"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/restore" : {
      "get" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Restore",
        "description" : "Restore VoD push zone",
        "operationId" : "restorezonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/purge" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Purge",
        "description" : "Purge cache of a VoD pull zone",
        "operationId" : "zonevodpullCachePurge",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPurge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/geoblock" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update Geoblock",
        "description" : "Update Geoblock of VoD push zone",
        "operationId" : "updateGeoblockzonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostGeoBlock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/shield" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update shield Settings",
        "description" : "Update shield settings of VOD record zone",
        "operationId" : "updateShieldSettingsZoneVod",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/shieldList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/eac" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update External Auth Control",
        "description" : "Update External auth control for  of VoD push zone",
        "operationId" : "updateExternalAuthControlzonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEac"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_53"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/edge" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update Edge Settings",
        "description" : "Update Edge settings of VoD push zone",
        "operationId" : "updateEdgeSettingszonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Postedgepull"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/vod/pull/{zoneid}/domainlock" : {
      "post" : {
        "tags" : [ "zonevodpull" ],
        "summary" : "Update Domain Lock",
        "description" : "Update Domain lock of VoD push zone",
        "operationId" : "updateDomainLockzonevodpull",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostDomainLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/stats" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push Summary",
        "description" : "Get reports of zone push Summary",
        "operationId" : "reports-by-zone-push-Summary",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/cache" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push  Cache Statistics",
        "description" : "Get reports of zone push Summary",
        "operationId" : "reports-by-zone-push-cache",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/topfiles" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push Top Files",
        "description" : "Get reports of zone top files",
        "operationId" : "reports-by-zone-push-top-files",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/topreferrers" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push Top Referrers",
        "description" : "Get reports of zone top referrers",
        "operationId" : "reports-by-zone-push-top-referrers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/statuscodes" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push Status Codes",
        "description" : "Get reports of zone push Status Codes",
        "operationId" : "reports-by-zone-push-status-code",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/countries" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push countries",
        "description" : "Get reports of zone push countries",
        "operationId" : "reports-by-zone-push-countries",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/browsers" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push browsers",
        "description" : "Get reports of zone push browsers",
        "operationId" : "reports-by-zone-push-browsers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/os" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push os",
        "description" : "Get reports of zone push os",
        "operationId" : "reports-by-zone-push-os",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/push/{zoneid}/on/visitors" : {
      "post" : {
        "tags" : [ "zonepushreport" ],
        "summary" : "Reports by zone push visitors",
        "description" : "Get reports of zone push visitors",
        "operationId" : "reports-by-zone-push-visitors",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/stats" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull Summary",
        "description" : "Get reports of zone pull Summary",
        "operationId" : "reports-by-zone-pull-Summary",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/cache" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull cache",
        "description" : "Get reports of zone pull cache",
        "operationId" : "reports-by-zone-pull-cache",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/topfiles" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull topfiles",
        "description" : "Get reports of zone pull topfiles",
        "operationId" : "reports-by-zone-pull-topfiles",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/topreferrers" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull topreferrers",
        "description" : "Get reports of zone pull topreferrers",
        "operationId" : "reports-by-zone-pull-topreferrers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/statuscodes" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull statuscodes",
        "description" : "Get reports of zone pull statuscodes",
        "operationId" : "reports-by-zone-pull-statuscodes",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/countries" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull country",
        "description" : "Get reports of zone pull country",
        "operationId" : "reports-by-zone-pull-country",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/browsers" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull browsers",
        "description" : "Get reports of zone browsers",
        "operationId" : "reports-by-zone-pull-browsers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/os" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull os",
        "description" : "Get reports of zone os",
        "operationId" : "reports-by-zone-pull-os",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/pull/{zoneid}/on/visitors" : {
      "post" : {
        "tags" : [ "zonepullreport" ],
        "summary" : "Reports by zone pull visitors",
        "description" : "Get reports of zone visitors",
        "operationId" : "reports-by-zone-pull-visitors",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/stats" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record summary",
        "description" : "Get reports of zone summary",
        "operationId" : "reports-by-zone-record-summary",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/cache" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record cache",
        "description" : "Get reports of zone cache",
        "operationId" : "reports-by-zone-record-cache",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/topfiles" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record topfiles",
        "description" : "Get reports of zone topfiles",
        "operationId" : "reports-by-zone-record-topfiles",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/topreferrers" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record topreferrers",
        "description" : "Get reports of zone topreferrers",
        "operationId" : "reports-by-zone-record-topreferrers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/statuscodes" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record statuscodes",
        "description" : "Get reports of zone statuscodes",
        "operationId" : "reports-by-zone-record-statuscodes",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/countries" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record countries",
        "description" : "Get reports of zone countries",
        "operationId" : "reports-by-zone-record-countries",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/browsers" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record browsers",
        "description" : "Get reports of zone browsers",
        "operationId" : "reports-by-zone-record-browsers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/os" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record os",
        "description" : "Get reports of zone os",
        "operationId" : "reports-by-zone-record-os",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/http/record/{zoneid}/on/visitors" : {
      "post" : {
        "tags" : [ "zonerecordreport" ],
        "summary" : "Reports by zone record visitors",
        "description" : "Get reports of zone visitors",
        "operationId" : "reports-by-zone-record-visitors",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/stats" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push summary",
        "description" : "Get reports of zone vod push summary",
        "operationId" : "reports-by-zone-vod-push-summary",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/cache" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push cache",
        "description" : "Get reports of zone vod push cache",
        "operationId" : "reports-by-zone-vod-push-cache",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/topfiles" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push topfiles",
        "description" : "Get reports of zone vod push topfiles",
        "operationId" : "reports-by-zone-vod-push-topfiles",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/topreferrers" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push topreferrers",
        "description" : "Get reports of zone vod push topreferrers",
        "operationId" : "reports-by-zone-vod-push-topreferrers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/statuscodes" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push statuscodes",
        "description" : "Get reports of zone vod push statuscodes",
        "operationId" : "reports-by-zone-vod-push-statuscodes",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/countries" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push countries",
        "description" : "Get reports of zone vod push countries",
        "operationId" : "reports-by-zone-vod-push-countries",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/browsers" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push browsers",
        "description" : "Get reports of zone vod push browsers",
        "operationId" : "reports-by-zone-vod-push-browsers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/os" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push os",
        "description" : "Get reports of zone vod push os",
        "operationId" : "reports-by-zone-vod-push-os",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/push/{zoneid}/on/visitors" : {
      "post" : {
        "tags" : [ "zonevodpushreport" ],
        "summary" : "Reports by zone vod push visitors",
        "description" : "Get reports of zone vod push visitors",
        "operationId" : "reports-by-zone-vod-push-visitors",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/stats" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull summary",
        "description" : "Get reports of zone vod pull summary",
        "operationId" : "reports-by-zone-vod-pull-summary",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostSummaryReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/cache" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull cache",
        "description" : "Get reports of zone vod pull cache",
        "operationId" : "reports-by-zone-vod-pull-cache",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostCacheReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/topfiles" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull topfiles",
        "description" : "Get reports of zone vod pull topfiles",
        "operationId" : "reports-by-zone-vod-pull-topfiles",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PosttopfilesReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/topreferrers" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull topreferrers",
        "description" : "Get reports of zone vod pull topreferrers",
        "operationId" : "reports-by-zone-vod-pull-topreferrers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostTopReferrersReport"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/statuscodes" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod push statuscodes",
        "description" : "Get reports of zone vod push statuscodes",
        "operationId" : "reports-by-zone-vod-pull-statuscodes",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/countries" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull countries",
        "description" : "Get reports of zone vod pull countries",
        "operationId" : "reports-by-zone-vod-pull-countries",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/browsers" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull browsers",
        "description" : "Get reports of zone vod pull browsers",
        "operationId" : "reports-by-zone-vod-pull-browsers",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/os" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull os",
        "description" : "Get reports of zone vod pull os",
        "operationId" : "reports-by-zone-vod-pull-os",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/zones/reports/vod/pull/{zoneid}/on/visitors" : {
      "post" : {
        "tags" : [ "zonevodpullreport" ],
        "summary" : "Reports by zone vod pull visitors",
        "description" : "Get reports of zone vod pull visitors",
        "operationId" : "reports-by-zone-vod-pull-visitors",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zoneid",
          "in" : "path",
          "description" : "Zone ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Poststatuscodes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/account/ssl" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "List SSL Certificates",
        "description" : "List SSL certificates",
        "operationId" : "sslCertificates",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_54"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/account/ssl/new" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Create",
        "description" : "Create new SSL Certificate",
        "operationId" : "createSsl",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostAccount"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_55"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/account/ssl/{sslcertid}" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "SSL Certificate",
        "description" : "Viww a SSL certificate",
        "operationId" : "sslCertificate",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sslcertid",
          "in" : "path",
          "description" : "Id of the SSL certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_56"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Update",
        "description" : "Update SSL certificate",
        "operationId" : "updateSslCertificate",
        "parameters" : [ {
          "name" : "X-API-Key",
          "in" : "header",
          "description" : "Your API Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sslcertid",
          "in" : "path",
          "description" : "Id of the SSL certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_55"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreatePushStream" : {
        "required" : [ "_METHOD", "name", "server" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name.<br>Should be in the format part-1/part-2. Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space"
          },
          "server" : {
            "type" : "string",
            "description" : "server.code, Should be one of the server code from the GET /streams/push/servers call"
          },
          "backup" : {
            "type" : "string",
            "description" : "URL, A link to backup video to roll, when there is no publish"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file."
          },
          "ssl" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if HTTPS should be enabled.<br> Set to N if HTTPS should be disabled."
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_domainlock"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock"
          },
          "vprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "aprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "platform" : {
            "$ref" : "#/components/schemas/Postplatform"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/streamsabrnew_rtmpauth"
          },
          "record" : {
            "$ref" : "#/components/schemas/streamspushnew_record"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_securetoken"
          },
          "eac" : {
            "$ref" : "#/components/schemas/streamsabrnew_eac"
          }
        }
      },
      "CreateZonePush" : {
        "required" : [ "_METHOD", "server" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method  PUT"
          },
          "server" : {
            "type" : "string",
            "description" : "server.code, Should be one of the server code from the GET /zones/http/push/servers call"
          },
          "cnames" : {
            "type" : "string",
            "description" : "Name that points to actual record. <br>Eg: docs.example.com"
          },
          "cache[cache]" : {
            "type" : "string",
            "description" : "This will be the default cache name.The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          },
          "edge" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_edge"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_domainlock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_securetoken"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_ssl"
          }
        }
      },
      "Postvprofiles" : {
        "type" : "object",
        "properties" : {
          "sd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "hd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "uhd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "Postplatform" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Postplatform_inner"
        }
      },
      "Editplatform" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "rtmp" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "auth" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduleontime" : {
            "type" : "string"
          },
          "length" : {
            "type" : "string"
          },
          "transcodetype" : {
            "type" : "string"
          },
          "vprofiles" : {
            "$ref" : "#/components/schemas/Editplatform_vprofiles"
          },
          "aprofiles" : {
            "$ref" : "#/components/schemas/Editplatform_vprofiles"
          }
        }
      },
      "Postdisabled" : {
        "type" : "object",
        "properties" : {
          "disabled" : {
            "type" : "string"
          }
        }
      },
      "streamstimeshiftnew_geoblock" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string"
          },
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if geoblock countries list should be allowed. <br>Set to N if geoblock countries list should be blocked."
          },
          "list" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock_list"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when geoblock is enabled.IPs should be seperated by comma. <br>Eg: 192.168.0.1, 192.168.0.2 .<br>Note: to remove geoblock, set the geoblock[list] to an empty array"
          }
        }
      },
      "streamsabrnew_rtmpauth" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if RTMP auth should be enabled<br> Set to N if RTMP auth should be disabled."
          },
          "username" : {
            "type" : "string",
            "description" : "Username required for rtmp authentication for publishing"
          },
          "password" : {
            "type" : "string",
            "description" : "Password required for rtmp authentication for publishing"
          }
        }
      },
      "zoneshttppushnew_domainlock" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if domainlock should be enabled.<br> Set to N if domainlock should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List of domains seperated by comma .<br> Eg: www.domain-one.com, www.domain-two.com"
          },
          "type" : {
            "type" : "string",
            "description" : "The values can be whitelist or blacklist."
          }
        }
      },
      "zoneshttppushnew_securetoken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values Can be Y or N. <br> Set to Y if secure token should be enabled<br> Set to Y if Secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "The value should be random alpha numeric string, [A-Za-z0-9]"
          },
          "timeout" : {
            "type" : "string",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200"
          }
        }
      },
      "zoneshttppushnew_ssl" : {
        "type" : "object",
        "properties" : {
          "http2" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y for enabling HTTP/2.<br>Set to N for disabling HTTP/2."
          },
          "mode" : {
            "type" : "string"
          },
          "certid" : {
            "type" : "string",
            "description" : "SSL Certificate ID. It can be set if  ssl[mode] is C <br> The value will be already uploaded SSL Certificate ID"
          },
          "name" : {
            "type" : "string",
            "description" : "SSL name . It can be set if  ssl[mode] is other than C."
          },
          "crt" : {
            "type" : "string",
            "description" : "SSL certificate ID . It can be set if  ssl[mode] is other than C."
          },
          "key" : {
            "type" : "string",
            "description" : "SSL certificate Key. It can be set if  ssl[mode] is other than C."
          },
          "cabundle" : {
            "type" : "string",
            "description" : "SSL  CA bundle . It can be set if  ssl[mode] is other than C."
          }
        }
      },
      "streamsabrnew_eac" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if External auth control should be enabled<br> Set to N if  External auth control should be disabled."
          },
          "authurl" : {
            "type" : "string",
            "description" : "Custom script that crosschecks the User/Viewer parameters and determines authorized users<br>Eg: http://example.com/auth.script"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of allowed IPs."
          }
        }
      },
      "streamspushnew_record" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set Y for enable DVR<br> Set N for Diasable DVR<br>Note: Applicable only for users with DVR"
          },
          "retention" : {
            "type" : "string",
            "description" : "To specify the Retention period.<br>A digit followed by letter ‘d’: Retention in days, min: 1, max: 14 eg: 7d (7 days of DVR) \t<br>Digit followed by letter ‘h’: Retention in hours, min: 2, max: 336<br> Eg: 6h (6 hrs of DVR)"
          }
        }
      },
      "streamstimeshiftnew_domainlock" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if domainlock should be enabled.<br> Set to N if domainlock should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List of domains seperated by comma .<br> Eg: www.domain-one.com, www.domain-two.com"
          },
          "noreferer" : {
            "type" : "string"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when domain lock is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          },
          "type" : {
            "type" : "string",
            "description" : "The values can be whitelist or blacklist."
          }
        }
      },
      "streamstimeshiftnew_securetoken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values Can be Y or N. <br> Set to Y if secure token should be enabled<br> Set to Y if Secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "The value should be random alpha numeric string, [A-Za-z0-9]"
          },
          "keyip" : {
            "type" : "string"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when geoblock is enabled. <br> IPs should be seperated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200",
            "format" : "int32"
          }
        }
      },
      "streamstimeshiftnew_geoblock_list" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "description" : "List of country codes (2 letter, ISO A2 country codes). <br>Eg: To allow/block countries USA & Canada<br> geoblock[list][] = ‘US’ <br> geoblock[list][] = ‘CA’"
        }
      },
      "UpdatePushStream" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "string",
            "description" : "Server code of the publish stream which is to be updated.<br>Server code should be one of the server code from the GET /streams/push/servers call"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "The values can be Y or N. <br> Set to Y if the HLS audio only stream should be added to the manifest file"
          },
          "ssl" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if HTTPS should be enabled.<br> Set to N if HTTPS should be disabled."
          },
          "backup" : {
            "type" : "string",
            "description" : "URL, A link to backup video to roll, when there is no publish"
          }
        }
      },
      "PostStreamsPull" : {
        "type" : "object",
        "properties" : {
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file."
          },
          "backup" : {
            "type" : "string",
            "description" : "A link to backup video to roll, when there is no publish"
          },
          "ssl" : {
            "type" : "string"
          }
        }
      },
      "Postabr" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "string",
            "description" : "server.code, Should be one of the server code from the GET /streams/abr/servers call"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file.<br>Set to Y if the HLS audio only stream should not be added."
          },
          "ssl" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if HTTPS should be enabled.<br> Set to N if HTTPS should be disabled."
          },
          "profile[]" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if Multiple Encoders should be enabled.<br> Set to N if Multiple Encoders should be disabled."
          },
          "parentid" : {
            "type" : "string",
            "description" : "enter parentid 1 -5."
          }
        }
      },
      "PushStreamSource" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "string",
            "description" : "Server code of the publish stream which is to be updated.Server code should be one of the server code from the GET /streams/push/servers call"
          }
        }
      },
      "PostSecureToken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if secure token should be enabled.<br> Set to N if secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List can be a random alpha numeric string, [A-Za-z0-9]"
          },
          "keyip" : {
            "type" : "string"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when secure token is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200",
            "format" : "int32"
          }
        }
      },
      "PostZoneSecureToken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values Can be Y or N. <br> Set to Y if secure token should be enabled<br> Set to Y if Secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "Token, The value should be random alpha numeric string, [A-Za-z0-9]."
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200",
            "format" : "int32"
          }
        }
      },
      "PostDomainLock" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if domainlock should be enabled.<br> Set to N if domainlock should not to be enabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List of domains seperated by comma.<br>Eg: www.domain-one.com, www.domain-two.com"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when domain lock is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          },
          "noreferer" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "description" : "The values can be whitelist or blacklist"
          }
        }
      },
      "PostGeoBlock" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if Geo Block should be enabled.<br> Set to N if Geo Block should not to be enabled."
          },
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if geoblock countries list should be allowed.<br> Set to N if geoblock countries list should be blocked"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectSchemaDefinition"
            }
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when geoblock is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          }
        }
      },
      "ObjectSchemaDefinition" : {
        "type" : "string"
      },
      "PostGeoBlockVodPush" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if geoblock countries list should be allowed.<br> Set to N if geoblock countries list should be blocked"
          },
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if geoblock countries list should be allowed.<br> Set to N if geoblock countries list should be blocked"
          },
          "list" : {
            "$ref" : "#/components/schemas/streamsabrstreamidgeoblock_list"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when geoblock is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          }
        }
      },
      "streamsabrstreamidgeoblock_list" : {
        "type" : "object",
        "properties" : {
          "null" : {
            "type" : "string",
            "description" : "List of country codes. <br>Country codes should be 2 letter, ISO A2 country codes. <br>Eg: to allow/block countries USA & Canada set <br>list[] = ‘US’<br>list[] = ‘CA’"
          }
        }
      },
      "PostEac" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if External auth control should be enabled<br> Set to N if  External auth control should be disabled."
          },
          "authurl" : {
            "type" : "string",
            "description" : "Custom script that crosschecks the User/Viewer parameters and determines authorized users<br>Eg: http://example.com/auth.script"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of Allowed IP's"
          }
        }
      },
      "PostRtmpauth" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if secure token should be enabled.<br> Set to N if secure token should be disabled."
          },
          "password" : {
            "type" : "string",
            "description" : "Password required for RTMP authentication for publishing."
          }
        }
      },
      "PostStreamPlatform" : {
        "type" : "object",
        "properties" : {
          "platform" : {
            "$ref" : "#/components/schemas/Postplatform"
          }
        }
      },
      "EditStreamPlatform" : {
        "type" : "object",
        "properties" : {
          "platform" : {
            "$ref" : "#/components/schemas/Editplatform"
          }
        }
      },
      "Posttranscode" : {
        "type" : "object",
        "properties" : {
          "transcodetype" : {
            "type" : "string"
          },
          "vprofiles" : {
            "$ref" : "#/components/schemas/Posttranscode_vprofiles"
          },
          "aprofiles" : {
            "$ref" : "#/components/schemas/Posttranscode_vprofiles"
          }
        }
      },
      "PostRecord" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y for enable DVR<br> Set to N for Disable DVR<br>Applicable only for users with DVR"
          },
          "retention" : {
            "type" : "string",
            "description" : "To specify the Retention period.<br/>A digit followed by letter ‘d’: Retention in days, min: 1, max: 14 eg: 7d (7 days of DVR) \t<br/>Digit followed by letter ‘h’: Retention in hours, min: 2, max: 336<br/> Eg: 6h (6 hrs of DVR)"
          }
        }
      },
      "PostRecordServers" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "string",
            "description" : "server.code should be one of the server code from the GET /streams/record/servers call."
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br/>Set to Y if the HLS audio only stream should be added to the manifest file."
          }
        }
      },
      "PostPullSource" : {
        "required" : [ "restreamtype" ],
        "type" : "object",
        "properties" : {
          "restreamtype" : {
            "type" : "string",
            "description" : "The values can be mediaserver or ffmpeg.<br> mediaserver: for restreaming via media server.<br> ffmpeg: for restreaming via ffmpeg server"
          },
          "server" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_server"
          },
          "url" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_url"
          },
          "audiofix" : {
            "type" : "string",
            "description" : "Used to transcode the audio stream to aac using ffmpeg if required. <br>Available only when 'ffmpeg' restream type is chosen."
          }
        }
      },
      "PostSummaryReport" : {
        "type" : "object",
        "properties" : {
          "range" : {
            "type" : "string",
            "description" : "stats properties keys from /months or ['last_24hrs', 'last_7days', 'last_30days']"
          },
          "type" : {
            "type" : "string",
            "description" : "hourly | daily"
          }
        }
      },
      "PostCacheReport" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "string",
            "description" : "Minute/Hour/Day['0','1','2']"
          },
          "filter_type" : {
            "type" : "string",
            "description" : "GB/HIT/MISS['0','1']"
          },
          "start_date" : {
            "type" : "string",
            "description" : "Start date, Y-m-d (e.g. 2012-01-01)"
          },
          "end_date" : {
            "type" : "string",
            "description" : "End date, Y-m-d (e.g. 2012-01-01)"
          }
        }
      },
      "Postpublish" : {
        "required" : [ "_METHOD", "server", "type" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name should be in the format part-1/part-2. <br>Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space."
          },
          "server" : {
            "type" : "string",
            "description" : "server.code, should be one of the server code from the GET /streams/publish/servers call"
          },
          "type" : {
            "type" : "string",
            "description" : "Enter value  restream/push"
          },
          "url" : {
            "type" : "array",
            "description" : "Type is pull enter source url",
            "items" : {
              "type" : "string"
            }
          },
          "backup" : {
            "type" : "string"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/streamsabrnew_rtmpauth"
          },
          "transcodetype" : {
            "type" : "string"
          },
          "vprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "aprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "platform" : {
            "$ref" : "#/components/schemas/Postplatform"
          }
        }
      },
      "PosttopfilesReport" : {
        "type" : "object",
        "properties" : {
          "start_date" : {
            "type" : "string",
            "description" : "Start date, Y-m-d (e.g. 2012-01-01)"
          },
          "end_date" : {
            "type" : "string",
            "description" : "End date, Y-m-d (e.g. 2012-01-01)"
          },
          "type" : {
            "type" : "string",
            "description" : "Enter dynamic/static/notfound"
          }
        }
      },
      "PostTopReferrersReport" : {
        "type" : "object",
        "properties" : {
          "start_date" : {
            "type" : "string",
            "description" : "Start date, Y-m-d (e.g. 2012-01-01)"
          },
          "end_date" : {
            "type" : "string",
            "description" : "End date, Y-m-d (e.g. 2012-01-01)"
          }
        }
      },
      "Poststatuscodes" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "string",
            "description" : "Minute/Hour/Day['0','1','2']"
          },
          "start_date" : {
            "type" : "string",
            "description" : "Start date, Y-m-d (e.g. 2012-01-01)"
          },
          "end_date" : {
            "type" : "string",
            "description" : "End date, Y-m-d (e.g. 2012-01-01)"
          }
        }
      },
      "PostZonePullssl" : {
        "type" : "object",
        "properties" : {
          "http2" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y for enabling HTTP/2.<br>Set to N for disabling HTTP/2."
          },
          "mode" : {
            "type" : "string",
            "description" : "Select SSL type. <br> The value can be N,S or C.<br> Set to N for None<br> Set to S for Shared.<br>Set to C for Custom."
          },
          "certid" : {
            "type" : "integer",
            "description" : "SSL Certificate ID. It can be set if  ssl[mode] is C <br> The value will be already uploaded SSL Certificate ID",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "SSL name . It can be set if  ssl mode is other than C."
          },
          "crt" : {
            "type" : "string",
            "description" : "SSL certificate ID . It can be set if  ssl mode is other than C."
          },
          "key" : {
            "type" : "string",
            "description" : "SSL certificate Key. It can be set if  ssl mode  is other than C."
          },
          "cabundle" : {
            "type" : "string",
            "description" : "SSL  CA bundle . It can be set if  ssl[mode] is other than C."
          }
        }
      },
      "streamsrestreamnew_server" : {
        "type" : "object",
        "properties" : {
          "mediaserver" : {
            "type" : "string"
          }
        }
      },
      "PullServerToken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if secure token should be enabled.<br> Set to N if secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List can be a random alpha numeric string, [A-Za-z0-9]"
          },
          "ips" : {
            "type" : "string",
            "description" : "List of IPs to whitelist when secure token is enabled. IPs should be separated by comma. <br>Eg: 192.168.0.1, 192.168.0.2"
          },
          "timeout" : {
            "type" : "string",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200"
          }
        }
      },
      "PostAccount" : {
        "required" : [ "_METHOD", "name" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To caste method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the SSL certificate"
          },
          "crt" : {
            "type" : "string",
            "description" : "Certificate's CRT data.<br> Which is in tha format ---BEGIN CERTIFICATE---- [certificate's CRT data ] ----END CERTIFICATE----"
          },
          "key" : {
            "type" : "string",
            "description" : "SSL Key. <br> In the format ---BEGIN PRIVATE KEY---- [certificate's key data ] ----END PRIVATE KEY----"
          },
          "cabundle" : {
            "type" : "string",
            "description" : "Certificates CA Bundle data.<br> Which is in the format ---BEGIN CERTIFICATE---- [your certificate's CA bundle data ] ----END CERTIFICATE----"
          }
        }
      },
      "PostMultiBitratePush" : {
        "required" : [ "_METHOD", "name", "server" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name should be in the format part-1/part-2. <br>Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space."
          },
          "server" : {
            "type" : "string",
            "description" : "server.code, Should be one of the server code from the GET /streams/abr/servers call"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file."
          },
          "profile" : {
            "type" : "array",
            "description" : "Values can be Y or N. <br>Set to Y if Multiple Encoders should be enabled.<br> Set to N if Multiple Encoders should be disabled.",
            "items" : {
              "type" : "string"
            }
          },
          "parentid" : {
            "type" : "string",
            "description" : "Enter parentid to 1-5"
          },
          "ssl" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if HTTPS should be enabled.<br> Set to N if HTTPS should be disabled."
          },
          "abr" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/streamsabrnew_domainlock"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/streamsabrnew_rtmpauth"
          },
          "eac" : {
            "$ref" : "#/components/schemas/streamsabrnew_eac"
          }
        }
      },
      "streamsabrnew_abr" : {
        "type" : "object",
        "properties" : {
          "stream" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_stream"
          },
          "width" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_width"
          },
          "height" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_height"
          },
          "vbps" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_vbps"
          },
          "abps" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_abps"
          }
        }
      },
      "streamsabrnew_domainlock" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if domainlock should be enabled.<br> Set to N if domainlock should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "List of domains seperated by comma .<br> Eg: www.domain-one.com, www.domain-two.com"
          },
          "ips" : {
            "type" : "string",
            "description" : "Comma separated list of IPs to whitelist when domain lock is enabled.<br> eg: 192.168.0.1, 192.168.0.2"
          },
          "noreferer" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "description" : "The values can be whitelist or blacklist."
          }
        }
      },
      "streamsabrnew_abr_abps" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "Audio stream bitrate in kbps.<br>\tEg: abr[stream][2], abr[width][2], abr[height][2], abr[vbps][2], abr[abps][2]<br> Note: add extra streams to the abr array as required. A maximum of 5 streams are supported."
          }
        }
      },
      "streamsabrnew_abr_stream" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "It should be part2 of stream name concatenated with ‘1’"
          }
        }
      },
      "streamsabrnew_abr_width" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "Video stream width in pixels"
          }
        }
      },
      "streamsabrnew_abr_height" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "Video stream height in pixels"
          }
        }
      },
      "streamsabrnew_abr_vbps" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "Video stream bitrate in kbps"
          }
        }
      },
      "postsourceabr" : {
        "type" : "object",
        "properties" : {
          "abr" : {
            "$ref" : "#/components/schemas/streamsabrstreamidsource_abr"
          }
        }
      },
      "streamsabrstreamidsource_abr" : {
        "type" : "object",
        "properties" : {
          "stream" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_stream"
          },
          "width" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_width"
          },
          "height" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_height"
          },
          "vbps" : {
            "$ref" : "#/components/schemas/streamsabrnew_abr_vbps"
          },
          "abps" : {
            "$ref" : "#/components/schemas/streamsabrstreamidsource_abr_abps"
          }
        }
      },
      "UpdateRestream" : {
        "required" : [ "server", "type" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "string",
            "description" : "server.code, should be one of the server code from the GET /streams/publish/servers call"
          },
          "type" : {
            "type" : "string",
            "description" : "Enter value  restream/push"
          },
          "url" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Type is pull enter source url"
            }
          },
          "backup" : {
            "type" : "string"
          }
        }
      },
      "streamsabrstreamidsource_abr_abps" : {
        "type" : "object",
        "properties" : {
          "1" : {
            "type" : "string",
            "description" : "Audio stream bitrate in kbps, A maximum of 5 streams are supported. <br>Eg: abr[stream][2], abr[width][2], abr[height][2], abr[vbps][2], abr[abps][2]<br> Note: Add extra streams to the abr array as required."
          }
        }
      },
      "Posttimeshift" : {
        "required" : [ "_METHOD", "name", "parent", "timeshift" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name should be in the format part-1/part-2.<br> Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space"
          },
          "parent" : {
            "type" : "string",
            "description" : "server.code<br> Should be one of the server code from the GET /streams/timeshift/parentss call"
          },
          "timeshift" : {
            "type" : "integer",
            "description" : "Timeshift in seconds. <br>By which the recorded streams should be shifted.",
            "format" : "int32"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file."
          },
          "ssl" : {
            "type" : "string"
          },
          "preroll" : {
            "type" : "string"
          },
          "loop" : {
            "type" : "string"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_domainlock"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_securetoken"
          },
          "eac" : {
            "$ref" : "#/components/schemas/streamsabrnew_eac"
          }
        }
      },
      "Puttimeshift" : {
        "required" : [ "timeshift" ],
        "type" : "object",
        "properties" : {
          "timeshift" : {
            "type" : "integer",
            "description" : "Timeshift in seconds, by which the recorded streams should be shifted.",
            "format" : "int32"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file. <br>Set to Y if the HLS audio only stream should not be added."
          }
        }
      },
      "Postscheduledplaylist" : {
        "required" : [ "_METHOD", "name", "parent" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name should be in the format part-1/part-2. <br>Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space."
          },
          "parent" : {
            "type" : "string",
            "description" : "parent.codeshould be one of the parent code from the GET /streams/scheduledplaylist/parents call."
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file.<br>Set to Y if the HLS audio only stream should not be added"
          },
          "preroll" : {
            "type" : "string",
            "description" : "Values can br Y or N<br>Set to Y if publish should be enabled. <br> Set to Y if publish should be disabled."
          },
          "loop" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y for loop schedules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_domainlock"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_securetoken"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/streamsabrnew_rtmpauth"
          },
          "eac" : {
            "$ref" : "#/components/schemas/streamsabrnew_eac"
          }
        }
      },
      "Postplaylist" : {
        "required" : [ "_METHOD", "name" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Playlist name.<br>Name should have minimum 2 chars, and maximum 32 chars length."
          },
          "type" : {
            "type" : "string",
            "description" : "Values can be 'live' or 'file'."
          },
          "length" : {
            "type" : "string",
            "description" : "Length should be in the format hh:mm:ss. length can be set if type is 'live'."
          },
          "schedule" : {
            "type" : "string",
            "description" : "The values can be  'instant', ' scheduleontime' or 'scheduleondatetime'"
          },
          "scheduleontime" : {
            "type" : "string",
            "description" : "Scheduleontime should be in the format of hh:mm:ss. <br/>It can be use if the 'schedule'  is 'scheduleontime'."
          },
          "scheduleondatetime" : {
            "type" : "string",
            "description" : "Scheduleondatetime's format should be yyyy-mm-dd hh:min:sec . <br>It can be used if  'schedule' is 'scheduleondatetime'."
          },
          "files" : {
            "$ref" : "#/components/schemas/streamsscheduledplayliststreamidplaylistnew_files"
          }
        }
      },
      "streamsscheduledplayliststreamidplaylistnew_files" : {
        "type" : "object",
        "properties" : {
          "live" : {
            "$ref" : "#/components/schemas/streamsscheduledplayliststreamidplaylistnew_files_live"
          }
        }
      },
      "streamsscheduledplayliststreamidplaylistnew_files_live" : {
        "type" : "object",
        "properties" : {
          "null" : {
            "type" : "string",
            "description" : "If type is 'live' the value will be the stream name.<br> If the type is 'file', The value will be array of relative paths to files<br>Eg: files[live][]='/mp4/file1.mp4' <br>files[live][]='/mp4/file2.mp4'"
          }
        }
      },
      "PostRestream" : {
        "required" : [ "_METHOD", "name", "restreamtype" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "request method  PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "Stream name.<br>Should be in the format part-1/part-2. Each part should have minimum 3 chars, separated by forward slash ‘/’, without any space"
          },
          "restreamtype" : {
            "type" : "string",
            "description" : "The values can be mediaserver or ffmpeg.<br> mediaserver: for restreaming via media server.<br> ffmpeg: for restreaming via ffmpeg server"
          },
          "server" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_server"
          },
          "url" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_url"
          },
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N<br>Set to Y if the HLS audio only stream should be added to the manifest file"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_domainlock"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_geoblock"
          },
          "backup" : {
            "type" : "string",
            "description" : "A link to backup video to roll when there is no publish"
          },
          "audiofix" : {
            "type" : "string",
            "description" : "Used to transcode the audio stream to aac using ffmpeg if required.<br> Available only when 'ffmpeg' restream type is chosen."
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_securetoken"
          },
          "record" : {
            "$ref" : "#/components/schemas/streamsrestreamnew_record"
          },
          "eac" : {
            "$ref" : "#/components/schemas/streamsabrnew_eac"
          },
          "transcodetype" : {
            "type" : "string"
          },
          "vprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "aprofiles" : {
            "$ref" : "#/components/schemas/Postvprofiles"
          },
          "platform" : {
            "$ref" : "#/components/schemas/Postplatform"
          }
        }
      },
      "streamsrestreamnew_url" : {
        "type" : "object",
        "properties" : {
          "mediaserver" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "streamsrestreamnew_geoblock" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string"
          },
          "policy" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br>Set to Y if geoblock countries list should be allowed. <br>Set to N if geoblock countries list should be blocked."
          },
          "list" : {
            "$ref" : "#/components/schemas/streamstimeshiftnew_geoblock_list"
          },
          "ips" : {
            "type" : "string",
            "description" : "Comma separated list of IPs to whitelist when geoblock is enabled. <br>Eg: 192.168.0.1, 192.168.0.2 .<br>Note: to remove geoblock, set the geoblock[list] to an empty array"
          }
        }
      },
      "SummaryReportResult" : {
        "type" : "object",
        "properties" : {
          "bandwidth" : {
            "$ref" : "#/components/schemas/bandwidthList"
          },
          "caching" : {
            "$ref" : "#/components/schemas/hitsList"
          },
          "requests" : {
            "$ref" : "#/components/schemas/requestsList"
          },
          "summary" : {
            "$ref" : "#/components/schemas/summaryList"
          }
        }
      },
      "bandwidthList" : {
        "type" : "object",
        "properties" : {
          "delivered" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deliveredList"
            }
          }
        }
      },
      "requestsList" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deliveredList"
            }
          }
        }
      },
      "hitsList" : {
        "type" : "object",
        "properties" : {
          "hits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deliveredList"
            }
          },
          "misses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deliveredList"
            }
          }
        }
      },
      "summaryList" : {
        "type" : "object",
        "properties" : {
          "bandwidth" : {
            "$ref" : "#/components/schemas/summaryList_bandwidth"
          },
          "requests" : {
            "$ref" : "#/components/schemas/summaryList_requests"
          },
          "caching" : {
            "$ref" : "#/components/schemas/summaryList_caching"
          }
        }
      },
      "streamsrestreamnew_record" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set Y for enable DVR<br> Set N for Diasable DVR<br>Note: Applicable only for users with DVR"
          },
          "retention" : {
            "type" : "string",
            "description" : "To specify the Retention period.<br>A digit followed by letter ‘d’: Retention in days, min: 1, max: 14 eg: 7d (7 days of DVR) \t<br/>Digit followed by letter ‘h’: Retention in hours, min: 2, max: 336<br> Eg: 6h (6 hrs of DVR)"
          }
        }
      },
      "zoneshttppushnew_edge" : {
        "type" : "object",
        "properties" : {
          "compression" : {
            "type" : "string",
            "description" : "The values can be Y or N.<br> Set to Y if edge compression should be enabled.<br> Set to N if edge compression should be disabled."
          },
          "compressionlevel" : {
            "type" : "string",
            "description" : "Set the value of edge[compressionlevel] when edge[compression] is enabled. <br>The values can be 1, 2, 3, 4, 5, 6."
          },
          "dispositionenabled" : {
            "type" : "string"
          },
          "disposition" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable edge disposition. <br> Set to N  to disable edge disposition."
          },
          "cors" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "webp" : {
            "type" : "string"
          },
          "lfo" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "prefresh" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "pseudostreaming" : {
            "type" : "string"
          }
        }
      },
      "PostZoneVodPull" : {
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string"
          }
        }
      },
      "PostZoneEdge" : {
        "type" : "object",
        "properties" : {
          "compression" : {
            "type" : "string",
            "description" : "The values can be Y or N.<br> Set to Y if edge compression should be enabled.<br> Set to N if edge compression should be disabled."
          },
          "compressionlevel" : {
            "type" : "string",
            "description" : "Set the value of edge[compressionlevel] when edge[compression] is enabled. <br>The values can be 1, 2, 3, 4, 5, 6."
          },
          "disposition" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable edge disposition. <br> Set to N  to disable edge disposition."
          },
          "stripcookie" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "xff" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "cors" : {
            "type" : "string",
            "description" : "Values can be Y or N<br> Set to Y to enable. <br> Set to N  to disable."
          },
          "webp" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable WebP.<br> Set to N to disable WebP."
          },
          "lfo" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable Large File Optimization .<br> Set to N to disable Large File Optimization ."
          },
          "prefresh" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable Cache Prefreshing  .<br> Set to N to disable Cache Prefreshing ."
          },
          "wp" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable WordPress Bypass Cache for Administration   .<br> Set to N to disable WordPress Bypass Cache for Administration  ."
          },
          "pseudostreaming" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable pseudo stream seeking.<br> Set to N to disable  pseudo stream seeking."
          }
        }
      },
      "PostZone" : {
        "type" : "object",
        "properties" : {
          "cnames" : {
            "type" : "string",
            "description" : "Enter a custom domain. For example: cdn.domain.com, images.domain.com, static.domain.com"
          }
        }
      },
      "PostZoneVodPush" : {
        "type" : "object",
        "properties" : {
          "server" : {
            "type" : "integer",
            "description" : "server.code, Should be one of the server code from the GET /streams/push/servers call"
          },
          "profiles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "zoneshttppullnew_ssl" : {
        "type" : "object",
        "properties" : {
          "http2" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y for enabling HTTP/2.<br>Set to N for disabling HTTP/2."
          },
          "mode" : {
            "type" : "string",
            "description" : "Select SSL type. <br> The value can be N,S or C.<br> Set to N for None<br> Set to S for Shared.<br>Set to C for Custom."
          },
          "certid" : {
            "type" : "string",
            "description" : "SSL Certificate ID. It can be set if  ssl[mode] is C <br> The value will be already uploaded SSL Certificate ID"
          },
          "name" : {
            "type" : "string",
            "description" : "SSL name . It can be set if  ssl[mode] is other than C."
          },
          "crt" : {
            "type" : "string",
            "description" : "SSL certificate ID . It can be set if  ssl[mode] is other than C."
          },
          "key" : {
            "type" : "string",
            "description" : "SSL certificate Key. It can be set if  ssl[mode] is other than C."
          },
          "cabundle" : {
            "type" : "string",
            "description" : "SSL  CA bundle . It can be set if  ssl[mode] is other than C."
          }
        }
      },
      "PostZonessl" : {
        "type" : "object",
        "properties" : {
          "http2" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y for enabling HTTP/2.<br>Set to N for disabling HTTP/2."
          },
          "mode" : {
            "type" : "string",
            "description" : "Select SSL type. <br> The value can be N,S or C.<br> Set to N for None<br> Set to S for Shared.<br>Set to C for Custom."
          },
          "certid" : {
            "type" : "integer",
            "description" : "SSL Certificate ID. It can be set if  ssl[mode] is C <br> The value will be already uploaded SSL Certificate ID",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "SSL name . It can be set if  ssl mode is other than C."
          },
          "crt" : {
            "type" : "string",
            "description" : "SSL certificate ID . It can be set if  ssl mode is other than C."
          },
          "key" : {
            "type" : "string",
            "description" : "SSL certificate Key. It can be set if  ssl mode  is other than C."
          },
          "cabundle" : {
            "type" : "string",
            "description" : "SSL  CA bundle . It can be set if  ssl[mode] is other than C"
          }
        }
      },
      "PostPullzone" : {
        "required" : [ "_METHOD" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "origin" : {
            "type" : "string",
            "description" : "Your Origin Server Host Name"
          },
          "cnames" : {
            "type" : "string",
            "description" : "Name that points to actual record. <br>Eg: docs.example.com"
          },
          "cache[cache]" : {
            "type" : "string",
            "description" : "This will be the default cache name.The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          },
          "cache[expiry]" : {
            "type" : "string",
            "description" : "This will be the default cache name.The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          },
          "live" : {
            "type" : "string",
            "description" : "Valyes can be Y or N<br> Set to Y to enable HLS live stream with origin."
          },
          "shieldnw" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "edge" : {
            "$ref" : "#/components/schemas/PostZoneEdge"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_domainlock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_securetoken"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_ssl"
          }
        }
      },
      "PostPullvod" : {
        "required" : [ "_METHOD" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "origin" : {
            "type" : "string",
            "description" : "Your Origin Server Host Name"
          },
          "cnames" : {
            "type" : "string",
            "description" : "Name that points to actual record. <br>Eg: docs.example.com"
          },
          "cache[cache]" : {
            "type" : "string",
            "description" : "This will be the default cache name.The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          },
          "shieldnw" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "live" : {
            "type" : "string",
            "description" : "Valyes can be Y or N<br> Set to Y to enable HLS live stream with origin."
          },
          "edge" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_edge"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_domainlock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_securetoken"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_ssl"
          }
        }
      },
      "PostPushvod" : {
        "required" : [ "_METHOD" ],
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method POST to PUT"
          },
          "server" : {
            "type" : "string",
            "description" : "server.code, Should be one of the server code from the GET zones/vod/push/servers call"
          },
          "profiles" : {
            "type" : "array",
            "description" : "All file uploaded to /raw folder will be transcoded to selected profiles. Leave empty to disable auto file transcoding.",
            "items" : {
              "type" : "integer"
            }
          },
          "cache[cache]" : {
            "type" : "string",
            "description" : "This will be the default cache name.The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          },
          "live" : {
            "type" : "string",
            "description" : "Valyes can be Y or N<br> Set to Y to enable HLS live stream with origin."
          },
          "edge" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_edge"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/zoneshttppushnew_domainlock"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_securetoken"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/zoneshttppullnew_ssl"
          }
        }
      },
      "zoneshttppullnew_securetoken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values Can be Y or N. <br> Set to Y if secure token should be enabled<br> Set to Y if Secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "The value should be random alpha numeric string, [A-Za-z0-9]"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200",
            "format" : "int32"
          }
        }
      },
      "Postpushzonesecuretoken" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "type" : "string",
            "description" : "Values Can be Y or N. <br> Set to Y if secure token should be enabled<br> Set to Y if Secure token should be disabled."
          },
          "list" : {
            "type" : "string",
            "description" : "Token, The value should be random alpha numeric string, [A-Za-z0-9]."
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Secure token link expiration time in seconds \tmin: 5, max: 25200",
            "format" : "int32"
          }
        }
      },
      "Putscheduledplaylist" : {
        "type" : "object",
        "properties" : {
          "audioonly" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y if the HLS audio only stream should be added to the manifest file. <br>Set to Y if the HLS audio only stream should not be added.",
            "format" : "int32"
          },
          "ssl" : {
            "type" : "string"
          },
          "preroll" : {
            "type" : "string",
            "description" : "Values can br Y or N<br>Set to Y if publish should be enabled. <br> Set to N if publish should be disabled."
          },
          "loop" : {
            "type" : "string",
            "description" : "Values can be Y or N. <br>Set to Y for loop schedules"
          }
        }
      },
      "PostCache" : {
        "type" : "object",
        "properties" : {
          "cache" : {
            "type" : "string",
            "description" : "This will be the default cache name.<br> The values can be 1d,7d,14d, 1M, 3M, 6M, or 1y"
          }
        }
      },
      "PostPurge" : {
        "type" : "object",
        "properties" : {
          "_METHOD" : {
            "type" : "string",
            "description" : "To cast request method  Post"
          }
        }
      },
      "Postedgepull" : {
        "type" : "object",
        "properties" : {
          "pseudostreaming" : {
            "type" : "string",
            "description" : "Values can be Y or N.<br> Set to Y to enable pseudo stream seeking.<br> Set to N to disable  pseudo stream seeking."
          }
        }
      },
      "Putplaylist" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Playlist name.<br>Name should have minimum 2 chars, and maximum 32 chars length."
          },
          "type" : {
            "type" : "string",
            "description" : "Values can be 'live' or 'file'."
          },
          "length" : {
            "type" : "string",
            "description" : "Length should be in the format hh:mm:ss. length would be set if type is 'live'."
          },
          "schedule" : {
            "type" : "string",
            "description" : "The values can be  'instant', ' scheduleontime' or 'scheduleondatetime'"
          },
          "scheduleontime" : {
            "type" : "string",
            "description" : "Scheduleontime should be in the format of hh:mm:ss. <br>It can be use if the 'schedule'  is 'scheduleontime'."
          },
          "scheduleondatetime" : {
            "type" : "string",
            "description" : "Scheduleondatetime's format should be yyyy-mm-dd hh:min:sec . <br>It can be used if  'schedule' is 'scheduleondatetime'."
          },
          "files" : {
            "$ref" : "#/components/schemas/streamsscheduledplayliststreamidplaylistnew_files"
          }
        }
      },
      "Stream" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/Stream_playbackurls"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "record" : {
            "type" : "string"
          },
          "restream" : {
            "$ref" : "#/components/schemas/restreamplatformsList"
          },
          "preroll" : {
            "type" : "string"
          },
          "loop" : {
            "type" : "string"
          },
          "hasInstantSchedule" : {
            "type" : "string"
          },
          "playlistCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "playlists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/playLists"
            }
          },
          "do" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneList"
          }
        }
      },
      "flowplayerList" : {
        "properties" : {
          "hls" : {
            "type" : "string"
          },
          "hds" : {
            "type" : "string"
          },
          "dash" : {
            "type" : "string"
          }
        }
      },
      "certList" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "crt" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "cabundle" : {
            "type" : "string"
          },
          "domain" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "string",
            "format" : "date"
          },
          "installs" : {
            "type" : "integer"
          }
        }
      },
      "domainlockList" : {
        "properties" : {
          "policy" : {
            "type" : "string"
          },
          "list" : {
            "type" : "string"
          },
          "ips" : {
            "type" : "string"
          },
          "noreferer" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "geoblockList" : {
        "properties" : {
          "policy" : {
            "type" : "string"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ips" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "securetokenList" : {
        "properties" : {
          "policy" : {
            "type" : "string"
          },
          "keyip" : {
            "type" : "string"
          },
          "list" : {
            "type" : "string"
          },
          "timeout" : {
            "type" : "string",
            "example" : "N"
          },
          "ips" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "eacList" : {
        "properties" : {
          "policy" : {
            "type" : "string"
          },
          "authurl" : {
            "type" : "string"
          },
          "ips" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "rtmpauthList" : {
        "properties" : {
          "policy" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "playLists" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "streamid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduletime" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "loop" : {
            "type" : "string"
          },
          "length" : {
            "type" : "string",
            "example" : "00:00:00"
          },
          "files" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "zoneList" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          }
        }
      },
      "tokenizedList" : {
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_http"
          },
          "hls" : {
            "type" : "string"
          },
          "players" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_players"
          }
        }
      },
      "RestreamResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "transcode" : {
            "$ref" : "#/components/schemas/transcodeList"
          },
          "record" : {
            "type" : "string"
          },
          "restream" : {
            "$ref" : "#/components/schemas/RestreamResult_restream"
          },
          "publish" : {
            "$ref" : "#/components/schemas/RestreamResult_publish"
          }
        }
      },
      "PushStreamResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/PushStreamResult_playbackurls"
          },
          "url_prefix_no_id" : {
            "type" : "string"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "record" : {
            "$ref" : "#/components/schemas/recordList"
          },
          "do" : {
            "type" : "string"
          },
          "transcode" : {
            "$ref" : "#/components/schemas/streamtranscodeList"
          },
          "restream" : {
            "$ref" : "#/components/schemas/restreamplatformsList"
          }
        }
      },
      "restreamplatformsList" : {
        "properties" : {
          "platforms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/restreamplatformsList_platforms"
            }
          }
        }
      },
      "recordList" : {
        "properties" : {
          "enabled" : {
            "type" : "string"
          },
          "retention" : {
            "type" : "integer"
          }
        }
      },
      "streamspullResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/PushStreamResult_playbackurls"
          },
          "tokenized" : {
            "$ref" : "#/components/schemas/tokenizedList"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "record" : {
            "$ref" : "#/components/schemas/recordList"
          },
          "transcode" : {
            "$ref" : "#/components/schemas/transcodeList"
          },
          "restream" : {
            "$ref" : "#/components/schemas/restreamplatformsList"
          }
        }
      },
      "PullStreamResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/PushStreamResult_playbackurls"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "record" : {
            "type" : "string"
          },
          "restream" : {
            "$ref" : "#/components/schemas/PullStreamResult_restream"
          },
          "abr" : {
            "$ref" : "#/components/schemas/abrList"
          },
          "do" : {
            "type" : "string"
          }
        }
      },
      "abrList" : {
        "properties" : {
          "streams" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DVRStreamResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/PushStreamResult_playbackurls"
          },
          "url_prefix_no_id" : {
            "type" : "string"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "parent" : {
            "$ref" : "#/components/schemas/parentList"
          },
          "dvr_enabled" : {
            "type" : "string"
          },
          "do" : {
            "type" : "string"
          }
        }
      },
      "DelayedStreamResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "server" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "remaining" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "hasRTMP" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          },
          "ssl_enabled" : {
            "type" : "string"
          },
          "playbackurls" : {
            "$ref" : "#/components/schemas/PushStreamResult_playbackurls"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "rtmpauth" : {
            "$ref" : "#/components/schemas/rtmpauthList"
          },
          "record" : {
            "type" : "string"
          },
          "restream" : {
            "$ref" : "#/components/schemas/restreamplatformsList"
          },
          "timeshift" : {
            "$ref" : "#/components/schemas/timeshiftlist"
          },
          "parent" : {
            "$ref" : "#/components/schemas/parentimesheettList"
          },
          "do" : {
            "type" : "string"
          }
        }
      },
      "transcodeList" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string",
            "example" : "enabled"
          }
        }
      },
      "streamtranscodeList" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "server" : {
            "$ref" : "#/components/schemas/streamtranscodeList_server"
          },
          "hwid" : {
            "type" : "integer"
          },
          "vprofiles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "aprofiles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "watermark" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer"
          }
        }
      },
      "zoneResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "string"
          },
          "cnames" : {
            "type" : "string"
          },
          "edgeruleids" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "hashid" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "edgerules" : {
            "$ref" : "#/components/schemas/edgerules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/sslList"
          },
          "cache" : {
            "$ref" : "#/components/schemas/cacheList"
          },
          "edge" : {
            "$ref" : "#/components/schemas/edgeList"
          },
          "shield" : {
            "$ref" : "#/components/schemas/shieldList"
          },
          "waf" : {
            "$ref" : "#/components/schemas/wafList"
          },
          "seo" : {
            "$ref" : "#/components/schemas/seoList"
          },
          "transcodefile" : {
            "$ref" : "#/components/schemas/transcodefileList"
          },
          "ftpdetails" : {
            "$ref" : "#/components/schemas/ftpdetailsList"
          },
          "server" : {
            "$ref" : "#/components/schemas/serverList"
          },
          "ssl_enabled" : {
            "type" : "string"
          }
        }
      },
      "zonePushResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "string"
          },
          "cnames" : {
            "type" : "string"
          },
          "edgeruleids" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "hashid" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "edgerules" : {
            "$ref" : "#/components/schemas/edgerules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/sslList"
          },
          "cache" : {
            "$ref" : "#/components/schemas/cacheList"
          },
          "edge" : {
            "$ref" : "#/components/schemas/edgeList"
          },
          "transcodefile" : {
            "$ref" : "#/components/schemas/transcodefileList"
          },
          "ftpdetails" : {
            "$ref" : "#/components/schemas/ftpdetailsList"
          },
          "server" : {
            "$ref" : "#/components/schemas/serverList"
          },
          "ssl_enabled" : {
            "type" : "string"
          }
        }
      },
      "zoneVodPushResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "string"
          },
          "cnames" : {
            "type" : "string"
          },
          "edgeruleids" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "hashid" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "fqdnVoD" : {
            "type" : "string"
          },
          "edgerules" : {
            "$ref" : "#/components/schemas/edgerules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/sslList"
          },
          "cache" : {
            "$ref" : "#/components/schemas/cacheList"
          },
          "edge" : {
            "$ref" : "#/components/schemas/edgeList"
          },
          "transcodefile" : {
            "$ref" : "#/components/schemas/transcodefileList"
          },
          "ftpdetails" : {
            "$ref" : "#/components/schemas/ftpdetailsList"
          },
          "server" : {
            "$ref" : "#/components/schemas/serverList"
          },
          "ssl_enabled" : {
            "type" : "string"
          }
        }
      },
      "zonePullResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "string"
          },
          "cnames" : {
            "type" : "string"
          },
          "edgeruleids" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "hashid" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "edgerules" : {
            "$ref" : "#/components/schemas/edgerules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/sslList"
          },
          "cache" : {
            "$ref" : "#/components/schemas/cacheList"
          },
          "edge" : {
            "$ref" : "#/components/schemas/edgeList"
          },
          "shield" : {
            "$ref" : "#/components/schemas/shieldList"
          },
          "waf" : {
            "$ref" : "#/components/schemas/wafList"
          },
          "seo" : {
            "$ref" : "#/components/schemas/seoList"
          },
          "ftpdetails" : {
            "$ref" : "#/components/schemas/ftpdetailsList"
          },
          "ssl_enabled" : {
            "type" : "string"
          }
        }
      },
      "zoneVodPullResult" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "string"
          },
          "cnames" : {
            "type" : "string"
          },
          "edgeruleids" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "hashid" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "fqdnVoD" : {
            "type" : "string"
          },
          "edgerules" : {
            "$ref" : "#/components/schemas/edgerules"
          },
          "domainlock" : {
            "$ref" : "#/components/schemas/domainlockList"
          },
          "geoblock" : {
            "$ref" : "#/components/schemas/geoblockList"
          },
          "securetoken" : {
            "$ref" : "#/components/schemas/securetokenList"
          },
          "eac" : {
            "$ref" : "#/components/schemas/eacList"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/sslList"
          },
          "cache" : {
            "$ref" : "#/components/schemas/cacheList"
          },
          "edge" : {
            "$ref" : "#/components/schemas/edgeList"
          },
          "shield" : {
            "$ref" : "#/components/schemas/shieldList"
          },
          "waf" : {
            "$ref" : "#/components/schemas/wafList"
          },
          "seo" : {
            "$ref" : "#/components/schemas/seoList"
          },
          "ftpdetails" : {
            "$ref" : "#/components/schemas/ftpdetailsList"
          },
          "ssl_enabled" : {
            "type" : "string"
          }
        }
      },
      "transcodefileList" : {
        "properties" : {
          "profiles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "webhooks" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "serversList" : {
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ffmpegserversList" : {
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "sslList" : {
        "properties" : {
          "http" : {
            "type" : "string"
          },
          "http2" : {
            "type" : "string"
          },
          "redirect" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "certid" : {
            "type" : "string"
          },
          "cert" : {
            "$ref" : "#/components/schemas/sslList_cert"
          },
          "enabled" : {
            "type" : "string"
          },
          "warning" : {
            "type" : "string"
          }
        }
      },
      "wafList" : {
        "properties" : {
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "shieldList" : {
        "properties" : {
          "shieldnw" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "visitorsList" : {
        "properties" : {
          "visitor_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/visitor_tableList"
            }
          },
          "visitor_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/visitor_line_chartList"
            }
          }
        }
      },
      "visitor_line_chartList" : {
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "ip" : {
            "type" : "string"
          },
          "useragent" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "visitor_tableList" : {
        "properties" : {
          "ip" : {
            "type" : "string"
          },
          "useragent" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "osList" : {
        "properties" : {
          "os_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/os_tableList"
            }
          },
          "os_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/os_line_chartList"
            }
          }
        }
      },
      "os_line_chartList" : {
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "os" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "os_tableList" : {
        "properties" : {
          "os" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "cache_statistic_List" : {
        "properties" : {
          "cache_statistic_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/cache_statistic_tableList"
            }
          },
          "cache_statistic_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/cache_statistic_line_chartList"
            }
          }
        }
      },
      "top_filesList" : {
        "properties" : {
          "top_fifty_files_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/top_fifty_files_tableList"
            }
          }
        }
      },
      "top_referrersList" : {
        "properties" : {
          "top_fifty_referers_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/top_fifty_referers_tableList"
            }
          }
        }
      },
      "browsersList" : {
        "properties" : {
          "browser_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/browser_tableList"
            }
          },
          "browser_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/browser_line_chartList"
            }
          }
        }
      },
      "browser_line_chartList" : {
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "browser" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "browser_tableList" : {
        "properties" : {
          "browser" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "countriesList" : {
        "properties" : {
          "country_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/country_tableList"
            }
          },
          "country_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/country_line_chartList"
            }
          }
        }
      },
      "country_line_chartList" : {
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "country" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "country_tableList" : {
        "properties" : {
          "country" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "statusCodesList" : {
        "properties" : {
          "status_code_table" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/status_code_tableList"
            }
          },
          "status_code_line_chart" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/status_code_line_chartList"
            }
          }
        }
      },
      "status_code_tableList" : {
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "status_code_line_chartList" : {
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "top_fifty_referers_tableList" : {
        "properties" : {
          "site" : {
            "type" : "string"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "top_fifty_files_tableList" : {
        "properties" : {
          "method" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string",
            "format" : "url"
          },
          "bytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "string"
          }
        }
      },
      "cache_statistic_line_chartList" : {
        "properties" : {
          "time" : {
            "type" : "string",
            "format" : "date"
          },
          "hit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "miss" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bypass" : {
            "type" : "integer",
            "format" : "int32"
          },
          "others" : {
            "type" : "string"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "cache_statistic_tableList" : {
        "properties" : {
          "locationid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gb" : {
            "type" : "integer",
            "format" : "int32"
          },
          "request" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "deliveredList" : {
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "seoList" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "canonical" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "robots" : {
            "type" : "string"
          },
          "robotstxt" : {
            "type" : "string"
          },
          "robotstxtcustom" : {
            "type" : "string"
          }
        }
      },
      "cacheList" : {
        "properties" : {
          "cache" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "string"
          },
          "querystring" : {
            "type" : "string"
          },
          "cachecontrol" : {
            "type" : "string"
          },
          "usestale" : {
            "type" : "string"
          },
          "revalidate" : {
            "type" : "string"
          },
          "cacheInMins" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "parentList" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "parentimesheettList" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "edgeList" : {
        "properties" : {
          "compression" : {
            "type" : "string"
          },
          "compressionlevel" : {
            "type" : "integer"
          },
          "disposition" : {
            "type" : "string"
          },
          "stripcookie" : {
            "type" : "string"
          },
          "xff" : {
            "type" : "string"
          },
          "cors" : {
            "type" : "string"
          },
          "webp" : {
            "type" : "string"
          },
          "pseudostreaming" : {
            "type" : "string"
          }
        }
      },
      "edgerules" : {
        "properties" : {
          "enabled" : {
            "type" : "string"
          }
        }
      },
      "timeshiftlist" : {
        "properties" : {
          "shift" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ftpdetailsList" : {
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "serverList" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PushStreamResult"
            }
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PushStreamResult"
            }
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/PushStreamResult"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/PushStreamResult"
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "servers" : {
            "$ref" : "#/components/schemas/inline_response_200_5_servers"
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/streamspullResult"
            }
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/streamspullResult"
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/streamspullResult"
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "servers" : {
            "$ref" : "#/components/schemas/inline_response_200_9_servers"
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PullStreamResult"
            }
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/PullStreamResult"
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/PullStreamResult"
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DVRStreamResult"
            }
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/DVRStreamResult"
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/DVRStreamResult"
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DelayedStreamResult"
            }
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/DelayedStreamResult"
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/Stream"
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "parents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_19_parents"
            }
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "streams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Stream"
            }
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/SummaryReportResult"
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_22_stats"
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_23_stats"
          }
        }
      },
      "inline_response_200_24" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_24_stats"
          }
        }
      },
      "inline_response_200_25" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_25_stats"
          }
        }
      },
      "inline_response_200_26" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_26_stats"
          }
        }
      },
      "inline_response_200_27" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_27_stats"
          }
        }
      },
      "inline_response_200_28" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_28_stats"
          }
        }
      },
      "inline_response_200_29" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stats" : {
            "$ref" : "#/components/schemas/inline_response_200_29_stats"
          }
        }
      },
      "inline_response_200_30" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/Stream"
          }
        }
      },
      "inline_response_200_31" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "playlist_id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "inline_response_200_32" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestreamResult"
            }
          }
        }
      },
      "inline_response_200_33" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "stream" : {
            "$ref" : "#/components/schemas/RestreamResult"
          }
        }
      },
      "inline_response_200_34" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "stream" : {
            "$ref" : "#/components/schemas/RestreamResult"
          }
        }
      },
      "inline_response_200_35" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zoneResult"
            }
          }
        }
      },
      "inline_response_200_36" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zonePushResult"
            }
          }
        }
      },
      "inline_response_200_37" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePushResult"
          }
        }
      },
      "inline_response_200_38" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePushResult"
          }
        }
      },
      "inline_response_200_39" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePushResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_40" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zonePullResult"
            }
          }
        }
      },
      "inline_response_200_41" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePullResult"
          }
        }
      },
      "inline_response_200_42" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePullResult"
          }
        }
      },
      "inline_response_200_43" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zonePullResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_44" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zoneVodPushResult"
            }
          }
        }
      },
      "inline_response_200_45" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPushResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_46" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPushResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_47" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPushResult"
          }
        }
      },
      "inline_response_200_48" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPushResult"
          }
        }
      },
      "inline_response_200_49" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zoneVodPullResult"
            }
          }
        }
      },
      "inline_response_200_50" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPullResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_51" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPullResult"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_52" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPullResult"
          }
        }
      },
      "inline_response_200_53" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "zone" : {
            "$ref" : "#/components/schemas/zoneVodPullResult"
          }
        }
      },
      "inline_response_200_54" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "certs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/certList"
            }
          }
        }
      },
      "inline_response_200_55" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "message" : {
            "type" : "string"
          },
          "cert" : {
            "$ref" : "#/components/schemas/certList"
          }
        }
      },
      "inline_response_200_56" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "example" : "success"
          },
          "cert" : {
            "$ref" : "#/components/schemas/certList"
          }
        }
      },
      "Postplatform_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "rtmp" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "auth" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduleontime" : {
            "type" : "string"
          },
          "length" : {
            "type" : "string"
          },
          "transcodetype" : {
            "type" : "string"
          },
          "vprofiles" : {
            "type" : "object",
            "properties" : {
              "sd" : {
                "type" : "integer"
              },
              "hd" : {
                "type" : "integer"
              },
              "uhd" : {
                "type" : "integer"
              }
            }
          },
          "aprofiles" : {
            "type" : "object",
            "properties" : {
              "sd" : {
                "type" : "integer"
              },
              "hd" : {
                "type" : "integer"
              },
              "uhd" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "Editplatform_vprofiles" : {
        "type" : "object",
        "properties" : {
          "sd" : {
            "type" : "integer"
          },
          "hd" : {
            "type" : "integer"
          },
          "uhd" : {
            "type" : "integer"
          }
        }
      },
      "Posttranscode_vprofiles" : {
        "type" : "object",
        "properties" : {
          "sd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "hd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "uhd" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "summaryList_bandwidth" : {
        "type" : "object",
        "properties" : {
          "delivered" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "summaryList_requests" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "summaryList_caching" : {
        "type" : "object",
        "properties" : {
          "hits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "misses" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Stream_playbackurls_http" : {
        "type" : "object",
        "properties" : {
          "scheme" : {
            "type" : "string"
          }
        }
      },
      "Stream_playbackurls_players" : {
        "type" : "object",
        "properties" : {
          "hostname" : {
            "type" : "string"
          },
          "flowplayer" : {
            "$ref" : "#/components/schemas/flowplayerList"
          }
        }
      },
      "Stream_playbackurls" : {
        "type" : "object",
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_http"
          },
          "hls" : {
            "type" : "string"
          },
          "players" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_players"
          },
          "tokenizedList" : {
            "$ref" : "#/components/schemas/tokenizedList"
          }
        }
      },
      "RestreamResult_restream_parent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "serviceid" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer"
          },
          "server" : {
            "type" : "integer"
          },
          "profile" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "backbone" : {
            "type" : "integer"
          },
          "disabled" : {
            "type" : "integer"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          }
        }
      },
      "RestreamResult_restream_do" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "assignedips" : {
            "type" : "string"
          },
          "hostname" : {
            "type" : "string"
          },
          "monthlycost" : {
            "type" : "string"
          },
          "noc" : {
            "type" : "string"
          },
          "statusaddress" : {
            "type" : "string"
          },
          "nameserver1" : {
            "type" : "string"
          },
          "nameserver1ip" : {
            "type" : "string"
          },
          "nameserver2" : {
            "type" : "string"
          },
          "nameserver2ip" : {
            "type" : "string"
          },
          "nameserver3" : {
            "type" : "string"
          },
          "nameserver3ip" : {
            "type" : "string"
          },
          "nameserver4" : {
            "type" : "string"
          },
          "nameserver4ip" : {
            "type" : "string"
          },
          "nameserver5" : {
            "type" : "string"
          },
          "nameserver5ip" : {
            "type" : "string"
          },
          "maxaccounts" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "accesshash" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "string"
          },
          "port" : {
            "type" : "string"
          },
          "active" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          }
        }
      },
      "RestreamResult_restream_platforms" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "relid" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "rtmp" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "auth" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduletime" : {
            "type" : "string"
          },
          "length" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "scheduleDisplay" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/RestreamResult_restream_parent"
          },
          "ffmpegStreamName" : {
            "type" : "string"
          },
          "transcode" : {
            "$ref" : "#/components/schemas/transcodeList"
          },
          "pushTo" : {
            "type" : "string"
          },
          "do" : {
            "$ref" : "#/components/schemas/RestreamResult_restream_do"
          }
        }
      },
      "RestreamResult_restream" : {
        "type" : "object",
        "properties" : {
          "platforms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestreamResult_restream_platforms"
            }
          },
          "count" : {
            "type" : "integer"
          }
        }
      },
      "RestreamResult_publish" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "urls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PushStreamResult_playbackurls" : {
        "type" : "object",
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_http"
          },
          "hls" : {
            "type" : "string"
          },
          "players" : {
            "$ref" : "#/components/schemas/Stream_playbackurls_players"
          }
        }
      },
      "restreamplatformsList_parent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "serviceid" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "audioonly" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "string"
          },
          "parentid" : {
            "type" : "integer"
          },
          "server" : {
            "type" : "integer"
          },
          "profile" : {
            "type" : "string"
          },
          "backup" : {
            "type" : "string"
          },
          "backbone" : {
            "type" : "integer"
          },
          "disabled" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "string"
          }
        }
      },
      "restreamplatformsList_do" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "assignedips" : {
            "type" : "string"
          },
          "hostname" : {
            "type" : "string"
          },
          "monthlycost" : {
            "type" : "string"
          },
          "noc" : {
            "type" : "string"
          },
          "statusaddress" : {
            "type" : "string"
          },
          "nameserver1" : {
            "type" : "string"
          },
          "nameserver1ip" : {
            "type" : "string"
          },
          "nameserver2" : {
            "type" : "string"
          },
          "nameserver2ip" : {
            "type" : "string"
          },
          "nameserver3" : {
            "type" : "string"
          },
          "nameserver3ip" : {
            "type" : "string"
          },
          "nameserver4" : {
            "type" : "string"
          },
          "nameserver4ip" : {
            "type" : "string"
          },
          "nameserver5" : {
            "type" : "string"
          },
          "nameserver5ip" : {
            "type" : "string"
          },
          "maxaccounts" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "accesshash" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "string"
          },
          "port" : {
            "type" : "string"
          },
          "active" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          }
        }
      },
      "restreamplatformsList_platforms" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "relid" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "rtmp" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "auth" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduletime" : {
            "type" : "string"
          },
          "length" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "scheduleDisplay" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/restreamplatformsList_parent"
          },
          "ffmpegStreamName" : {
            "type" : "string"
          },
          "transcode" : {
            "$ref" : "#/components/schemas/streamtranscodeList"
          },
          "do" : {
            "$ref" : "#/components/schemas/restreamplatformsList_do"
          },
          "pushTo" : {
            "type" : "string"
          }
        }
      },
      "PullStreamResult_restream" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer"
          }
        }
      },
      "streamtranscodeList_server_meta" : {
        "type" : "object",
        "properties" : {
          "gpu" : {
            "type" : "integer"
          },
          "transcoder" : {
            "type" : "string"
          },
          "apiPort" : {
            "type" : "string"
          }
        }
      },
      "streamtranscodeList_server_curlopts" : {
        "type" : "object",
        "properties" : {
          "13" : {
            "type" : "integer"
          },
          "78" : {
            "type" : "integer"
          },
          "10102" : {
            "type" : "string"
          }
        }
      },
      "streamtranscodeList_server" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "assignedips" : {
            "type" : "string"
          },
          "hostname" : {
            "type" : "string"
          },
          "monthlycost" : {
            "type" : "string"
          },
          "noc" : {
            "type" : "string"
          },
          "statusaddress" : {
            "type" : "string"
          },
          "nameserver1" : {
            "type" : "string"
          },
          "nameserver1ip" : {
            "type" : "string"
          },
          "nameserver2" : {
            "type" : "string"
          },
          "nameserver2ip" : {
            "type" : "string"
          },
          "nameserver3" : {
            "type" : "string"
          },
          "nameserver3ip" : {
            "type" : "string"
          },
          "nameserver4" : {
            "type" : "string"
          },
          "nameserver4ip" : {
            "type" : "string"
          },
          "nameserver5" : {
            "type" : "string"
          },
          "nameserver5ip" : {
            "type" : "string"
          },
          "maxaccounts" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "accesshash" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "string"
          },
          "port" : {
            "type" : "string"
          },
          "active" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "string"
          },
          "countrycode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/streamtranscodeList_server_meta"
          },
          "curlopts" : {
            "$ref" : "#/components/schemas/streamtranscodeList_server_curlopts"
          }
        }
      },
      "sslList_cert" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "crt" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "cabundle" : {
            "type" : "string"
          },
          "domain" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "string",
            "format" : "date"
          },
          "installs" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "inline_response_200_5_servers" : {
        "type" : "object",
        "properties" : {
          "mediaservers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/serversList"
            }
          },
          "wowzaservers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/serversList"
            }
          }
        }
      },
      "inline_response_200_9_servers" : {
        "type" : "object",
        "properties" : {
          "mediaservers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/serversList"
            }
          },
          "ffmpegservers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ffmpegserversList"
            }
          }
        }
      },
      "inline_response_200_19_parents" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_22_stats" : {
        "type" : "object",
        "properties" : {
          "cache_statistics" : {
            "$ref" : "#/components/schemas/cache_statistic_List"
          }
        }
      },
      "inline_response_200_23_stats" : {
        "type" : "object",
        "properties" : {
          "top_files" : {
            "$ref" : "#/components/schemas/top_filesList"
          }
        }
      },
      "inline_response_200_24_stats" : {
        "type" : "object",
        "properties" : {
          "top_referrers" : {
            "$ref" : "#/components/schemas/top_referrersList"
          }
        }
      },
      "inline_response_200_25_stats" : {
        "type" : "object",
        "properties" : {
          "status_codes" : {
            "$ref" : "#/components/schemas/statusCodesList"
          }
        }
      },
      "inline_response_200_26_stats" : {
        "type" : "object",
        "properties" : {
          "countries" : {
            "$ref" : "#/components/schemas/countriesList"
          }
        }
      },
      "inline_response_200_27_stats" : {
        "type" : "object",
        "properties" : {
          "browsers" : {
            "$ref" : "#/components/schemas/browsersList"
          }
        }
      },
      "inline_response_200_28_stats" : {
        "type" : "object",
        "properties" : {
          "os" : {
            "$ref" : "#/components/schemas/osList"
          }
        }
      },
      "inline_response_200_29_stats" : {
        "type" : "object",
        "properties" : {
          "visitors" : {
            "$ref" : "#/components/schemas/visitorsList"
          }
        }
      }
    },
    "parameters" : {
      "xapikeyParam" : {
        "name" : "X-API-Key",
        "in" : "header",
        "description" : "Your API Key",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "streamidParam" : {
        "name" : "streamid",
        "in" : "path",
        "description" : "Stream ID",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "zoneidParam" : {
        "name" : "zoneid",
        "in" : "path",
        "description" : "Zone ID",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "platformidParam" : {
        "name" : "platformid",
        "in" : "path",
        "description" : "Platform ID",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "playlistidParam" : {
        "name" : "playlistid",
        "in" : "path",
        "description" : "Playlist ID",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "sslcertidParam" : {
        "name" : "sslcertid",
        "in" : "path",
        "description" : "Id of the SSL certificate",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "rParam" : {
        "name" : "r",
        "in" : "header",
        "description" : "Enter value last_24hrs/hourly or last_7days/hourly or last_30days/daily",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      }
    }
  }
}