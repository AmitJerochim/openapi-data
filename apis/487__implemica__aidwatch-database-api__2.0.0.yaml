openapi: 3.0.1
info:
  title: Aidwatch Database API
  description: API for storing data in the Aidwatch system.
  contact: {}
  license:
    name: ""
  version: "2.0.0"
tags:
  - name: command-parameter-resource
    description: Command Parameter Resource
  - name: command-resource
    description: Command Resource
  - name: command-response-parameter-resource
    description: Command Response Parameter Resource
  - name: command-response-resource
    description: Command Response Resource
  - name: device-resource
    description: Device Resource
  - name: emergency-contact-resource
    description: Emergency Contact Resource
  - name: end-user-resource
    description: End User Resource
paths:
  /command-parameters:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-parameter-resource
      summary: getAllCommandParameters
      operationId: getAllCommandParametersUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandParameterDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,send_command]
      tags:
        - command-parameter-resource
      summary: updateCommandParameter
      operationId: updateCommandParameterUsingPUT
      requestBody:
        description: commandParameterDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandParameterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandParameterDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandParameterDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,send_command]
      tags:
        - command-parameter-resource
      summary: createCommandParameter
      operationId: createCommandParameterUsingPOST
      requestBody:
        description: commandParameterDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandParameterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandParameterDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandParameterDTO
  /command-parameters/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-parameter-resource
      summary: getCommandParameter
      operationId: getCommandParameterUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandParameterDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-parameter-resource
      summary: deleteCommandParameter
      operationId: deleteCommandParameterUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /command-response-parameters:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-parameter-resource
      summary: getAllCommandResponseParameters
      operationId: getAllCommandResponseParametersUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandResponseParameterDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-parameter-resource
      summary: updateCommandResponseParameter
      operationId: updateCommandResponseParameterUsingPUT
      requestBody:
        description: commandResponseParameterDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandResponseParameterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseParameterDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandResponseParameterDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,write_commandresponse]
      tags:
        - command-response-parameter-resource
      summary: createCommandResponseParameter
      operationId: createCommandResponseParameterUsingPOST
      requestBody:
        description: commandResponseParameterDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandResponseParameterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseParameterDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandResponseParameterDTO
  /command-response-parameters/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-parameter-resource
      summary: getCommandResponseParameter
      operationId: getCommandResponseParameterUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseParameterDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-parameter-resource
      summary: deleteCommandResponseParameter
      operationId: deleteCommandResponseParameterUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /command-responses:
    get:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,write_commandresponse]
      tags:
        - command-response-resource
      summary: getAllCommandResponses
      operationId: getAllCommandResponsesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-resource
      summary: updateCommandResponse
      operationId: updateCommandResponseUsingPUT
      requestBody:
        description: commandResponseDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandResponseDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandResponseDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-resource
      summary: createCommandResponse
      operationId: createCommandResponseUsingPOST
      requestBody:
        description: commandResponseDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandResponseDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandResponseDTO
  /command-responses/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-resource
      summary: getCommandResponse
      operationId: getCommandResponseUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-response-resource
      summary: deleteCommandResponse
      operationId: deleteCommandResponseUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /commands:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-resource
      summary: getAllCommands
      operationId: getAllCommandsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,write_commandresponse,WEBSITE_CONFIG_USER,send_command]
      tags:
        - command-resource
      summary: updateCommand
      operationId: updateCommandUsingPUT
      requestBody:
        description: commandDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,send_command]
      tags:
        - command-resource
      summary: createCommand
      operationId: createCommandUsingPOST
      requestBody:
        description: commandDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: commandDTO
  /commands/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,write_commandresponse,ROLE_WEBSITE_CONFIG_USER,write_device]
      tags:
        - command-resource
      summary: getCommand
      operationId: getCommandUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - command-resource
      summary: deleteCommand
      operationId: deleteCommandUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /devices:
    get:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,subscribe_device]
      tags:
        - device-resource
      summary: getAllDevices
      operationId: getAllDevicesUsingGET
      parameters:
        - name: endUserId
          in: query
          description: endUserId
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,subscribe_device]
      tags:
        - device-resource
      summary: updateDevice
      operationId: updateDeviceUsingPUT
      requestBody:
        description: deviceDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: deviceDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,write_device]
      tags:
        - device-resource
      summary: createDevice
      operationId: createDeviceUsingPOST
      requestBody:
        description: deviceDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: deviceDTO
  /devices/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,send_command]
      tags:
        - device-resource
      summary: getDevice
      operationId: getDeviceUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - device-resource
      summary: deleteDevice
      operationId: deleteDeviceUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /emergency-contacts:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - emergency-contact-resource
      summary: getAllEmergencyContacts
      operationId: getAllEmergencyContactsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyContactDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - emergency-contact-resource
      summary: updateEmergencyContact
      operationId: updateEmergencyContactUsingPUT
      requestBody:
        description: emergencyContactDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmergencyContactDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: emergencyContactDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,write_user]
      tags:
        - emergency-contact-resource
      summary: createEmergencyContact
      operationId: createEmergencyContactUsingPOST
      requestBody:
        description: emergencyContactDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmergencyContactDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: emergencyContactDTO
  /emergency-contacts/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - emergency-contact-resource
      summary: getEmergencyContact
      operationId: getEmergencyContactUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmergencyContactDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - emergency-contact-resource
      summary: deleteEmergencyContact
      operationId: deleteEmergencyContactUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
  /end-users:
    get:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WATCH_USER,subscribe_device]
      tags:
        - end-user-resource
      summary: getAllEndUsers
      operationId: getAllEndUsersUsingGET
      parameters:
        - name: email
          in: query
          description: email
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndUserDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    put:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - end-user-resource
      summary: updateEndUser
      operationId: updateEndUserUsingPUT
      requestBody:
        description: endUserDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndUserDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: endUserDTO
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,write_user]
      tags:
        - end-user-resource
      summary: createEndUser
      operationId: createEndUserUsingPOST
      requestBody:
        description: endUserDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndUserDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: endUserDTO
  /end-users/register:
    post:
      security:
        - OAuth2: [ROLE_ADMIN,ROLE_WEBSITE_CONFIG_USER,write_user]
      tags:
        - end-user-resource
      summary: registerEndUser
      operationId: registerEndUserUsingPOST
      requestBody:
        description: endUserRegisterDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserRegisterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndUserDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: endUserRegisterDTO
  /end-users/{id}:
    get:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - end-user-resource
      summary: getEndUser
      operationId: getEndUserUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndUserDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      security:
        - OAuth2: [ROLE_ADMIN]
      tags:
        - end-user-resource
      summary: deleteEndUser
      operationId: deleteEndUserUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://auth.aidwatch.net/auth/realms/aidwatch/protocol/openid-connect/auth'
          tokenUrl: 'https://auth.aidwatch.net/auth/realms/aidwatch/protocol/openid-connect/token'
          scopes:
            subscribe_device: Allows subscribe access to a device
            send_command: Allows send access to a device
            write_device: Allows write access to device data
            write_user: Allows write access to user data
            write_commandresponse: Allows write access to command responses
        password:
          tokenUrl: 'https://auth.aidwatch.net/auth/realms/aidwatch/protocol/openid-connect/token'
          scopes:
            subscribe_device: Allows subscribe access to a device
            send_command: Allows send access to a device
            write_device: Allows write access to device data
            write_user: Allows write access to user data
            write_commandresponse: Allows write access to command responses
  schemas:
    CommandDTO:
      title: CommandDTO
      required:
        - active
        - commandName
        - commandType
        - created
        - syncStatus
      type: object
      properties:
        active:
          type: boolean
        commandName:
          maxLength: 50
          minLength: 0
          type: string
        commandType:
          maxLength: 10
          minLength: 0
          type: string
        created:
          type: string
          format: date-time
        deviceId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        syncStatus:
          maxLength: 20
          minLength: 0
          type: string
    CommandParameterDTO:
      title: CommandParameterDTO
      required:
        - created
        - key
        - value
      type: object
      properties:
        commandId:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        key:
          maxLength: 50
          minLength: 0
          type: string
        value:
          maxLength: 250
          minLength: 0
          type: string
    CommandResponseDTO:
      title: CommandResponseDTO
      required:
        - commandName
        - commandType
        - created
      type: object
      properties:
        commandId:
          type: integer
          format: int64
        commandName:
          maxLength: 50
          minLength: 0
          type: string
        commandType:
          maxLength: 10
          minLength: 0
          type: string
        created:
          type: string
          format: date-time
        errorCode:
          type: integer
          format: int64
        errorDescription:
          maxLength: 512
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
    CommandResponseParameterDTO:
      title: CommandResponseParameterDTO
      required:
        - created
        - key
        - value
      type: object
      properties:
        commandresponseId:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        key:
          maxLength: 50
          minLength: 0
          type: string
        value:
          maxLength: 250
          minLength: 0
          type: string
    DeviceDTO:
      title: DeviceDTO
      required:
        - created
        - enduserId
        - id
        - order
        - product
        - variation
      type: object
      properties:
        created:
          type: string
          format: date-time
        deviceToken:
          maxLength: 512
          minLength: 0
          type: string
        enduserId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        imei:
          maxLength: 30
          minLength: 0
          type: string
        order:
          type: integer
          format: int64
        product:
          type: integer
          format: int64
        protocol:
          maxLength: 50
          minLength: 0
          type: string
        telno:
          maxLength: 15
          minLength: 0
          type: string
        variation:
          type: integer
          format: int64
    EmergencyContactDTO:
      title: EmergencyContactDTO
      required:
        - email
        - firstname
        - gender
        - lastname
        - sequence
        - telno
      type: object
      properties:
        email:
          maxLength: 50
          minLength: 0
          type: string
        enduserId:
          type: integer
          format: int64
        firstname:
          maxLength: 50
          minLength: 0
          type: string
        gender:
          maxLength: 1
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
        lastname:
          maxLength: 100
          minLength: 0
          type: string
        sequence:
          maximum: 11
          exclusiveMaximum: false
          type: integer
          format: int32
        telno:
          maxLength: 50
          minLength: 0
          type: string
    EndUserDTO:
      title: EndUserDTO
      required:
        - authid
        - created
        - customer
        - email
        - id
      type: object
      properties:
        authid:
          maxLength: 128
          minLength: 0
          type: string
        birthdate:
          type: string
          format: date
        country:
          maxLength: 3
          minLength: 0
          type: string
        created:
          type: string
          format: date-time
        customer:
          type: integer
          format: int64
        email:
          maxLength: 50
          minLength: 0
          type: string
        firstname:
          maxLength: 50
          minLength: 0
          type: string
        gender:
          maxLength: 1
          minLength: 0
          type: string
        group:
          type: integer
          format: int64
        height:
          maxLength: 20
          minLength: 0
          type: string
        houseno:
          maxLength: 10
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
        salutation:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 50
          minLength: 0
          type: string
        street:
          maxLength: 50
          minLength: 0
          type: string
        surname:
          maxLength: 100
          minLength: 0
          type: string
        weight:
          maxLength: 20
          minLength: 0
          type: string
        zip:
          maxLength: 20
          minLength: 0
          type: string
    EndUserRegisterDTO:
      title: EndUserRegisterDTO
      required:
        - authid
        - created
        - customer
        - email
        - id
        - password
      type: object
      properties:
        authid:
          maxLength: 128
          minLength: 0
          type: string
        birthdate:
          type: string
          format: date
        country:
          maxLength: 3
          minLength: 0
          type: string
        created:
          type: string
          format: date-time
        customer:
          type: integer
          format: int64
        email:
          maxLength: 50
          minLength: 0
          type: string
        firstname:
          maxLength: 50
          minLength: 0
          type: string
        gender:
          maxLength: 1
          minLength: 0
          type: string
        group:
          type: integer
          format: int64
        height:
          maxLength: 20
          minLength: 0
          type: string
        houseno:
          maxLength: 10
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
        password:
          maxLength: 100
          minLength: 0
          type: string
        salutation:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 50
          minLength: 0
          type: string
        street:
          maxLength: 50
          minLength: 0
          type: string
        surname:
          maxLength: 100
          minLength: 0
          type: string
        weight:
          maxLength: 20
          minLength: 0
          type: string
        zip:
          maxLength: 20
          minLength: 0
          type: string