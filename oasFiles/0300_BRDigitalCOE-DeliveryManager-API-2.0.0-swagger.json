{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Delivery Manager API",
    "version" : "2.0.0",
    "title" : "Delivery Manager API",
    "termsOfService" : "https://www.broadridge.com/legal/terms-of-use",
    "contact" : {
      "email" : "aman.mundra@broadridge.com"
    }
  },
  "paths" : {
    "/document/delivery" : {
      "post" : {
        "tags" : [ "Deliver Document" ],
        "summary" : "Delivers a real time document (email,sms, etc)",
        "description" : "",
        "operationId" : "deliverDocument",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RTEDeliverDocument"
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RTEResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "503" : {
            "description" : "503 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/delivery/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Real-Time & Batch Delivery Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSet" : {
                  "$ref" : "#/components/examples/SortDataSet"
                },
                "LimitAndSortDataSet" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSet"
                },
                "GetByRangeQuery" : {
                  "$ref" : "#/components/examples/RangeQuery"
                },
                "GetDocumentsByStatusQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByStatusQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/DocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/delivery/brand/{brandId}/batches" : {
      "post" : {
        "tags" : [ "Real-Time & Batch Delivery Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSet" : {
                  "$ref" : "#/components/examples/SortDataSet"
                },
                "LimitAndSortDataSet" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSet"
                },
                "GetByRangeQuery" : {
                  "$ref" : "#/components/examples/RangeQuery"
                },
                "GetCompletedBatchesQuery" : {
                  "$ref" : "#/components/examples/GetBatchesByStatusQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryBatchReportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/delivery/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Real-Time & Batch Delivery Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSet" : {
                  "$ref" : "#/components/examples/SortDataSet"
                },
                "LimitAndSortDataSet" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSet"
                },
                "GetByRangeQuery" : {
                  "$ref" : "#/components/examples/RangeQuery"
                },
                "GetCompletedBatchesQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByStatusQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/DocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_rsa_auth" : [ ]
        }, {
          "dm_oauth" : [ ]
        } ]
      }
    },
    "/reports/delivery/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}/batches" : {
      "post" : {
        "tags" : [ "Real-Time & Batch Delivery Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "description" : "unique source system id of a Brand",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSet" : {
                  "$ref" : "#/components/examples/SortDataSet"
                },
                "LimitAndSortDataSet" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSet"
                },
                "GetCompletedBatchesQuery" : {
                  "$ref" : "#/components/examples/GetBatchesByStatusQuery"
                },
                "GetByRangeQuery" : {
                  "$ref" : "#/components/examples/RangeQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryBatchReportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/open/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Open Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/OpenedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/open/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Open Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSet" : {
                  "$ref" : "#/components/examples/SortDataSet"
                },
                "LimitAndSortDataSet" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSet"
                },
                "GetByRangeQuery" : {
                  "$ref" : "#/components/examples/RangeQuery"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/OpenedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/click/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Click Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/ClickedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/click/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Click Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/ClickedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/bounce/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Bounce Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/BouncedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/bounce/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Bounce Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/BouncedDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/retry/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Retry Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/RetryDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/retry/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Retry Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/RetryDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/fbl/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Feedback Loop Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/FeedbackLoopDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/fbl/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Feedback Loop Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByCreatedTimestamp"
                },
                "LimitAndSortDataSetByCreatedTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByCreatedTimestamp"
                },
                "GetDocumentsByEnvelopeQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByEnvelopeQuery"
                },
                "GetDocumentsByRcptQuery" : {
                  "$ref" : "#/components/examples/GetDocumentsByRcptQuery"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/FeedbackLoopDocumentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/enrollments/brand/{brandId}" : {
      "post" : {
        "tags" : [ "Enrollment Reports" ],
        "parameters" : [ {
          "name" : "brandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByConsentTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByConsentTimestamp"
                },
                "LimitAndSortDataSetByConsentTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByConsentTimestamp"
                },
                "GetEnrollmentsByContentType" : {
                  "$ref" : "#/components/examples/GetEnrollmentsByContentType"
                },
                "GetEnrollmentsByContentTypeAndAccountNumber" : {
                  "$ref" : "#/components/examples/GetEnrollmentsByContentTypeAndAccountNumber"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/EnrollmentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    },
    "/reports/enrollments/sourcesystem/{sourceSystemId}/sourcesystembrand/{sourceSystemBrandId}" : {
      "post" : {
        "tags" : [ "Enrollment Reports" ],
        "parameters" : [ {
          "name" : "sourceSystemBrandId",
          "in" : "path",
          "description" : "unique source system id of a Brand",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional query to filter the data set in JSON format.<br>\n[Please refer to Elasticsearch documentation how to define a query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/query-dsl.html)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "examples" : {
                "LimitDataSet" : {
                  "$ref" : "#/components/examples/LimitDataSet"
                },
                "SortDataSetByConsentTimestamp" : {
                  "$ref" : "#/components/examples/SortDataSetByConsentTimestamp"
                },
                "LimitAndSortDataSetByConsentTimestamp" : {
                  "$ref" : "#/components/examples/LimitAndSortDataSetByConsentTimestamp"
                },
                "GetEnrollmentsByContentType" : {
                  "$ref" : "#/components/examples/GetEnrollmentsByContentType"
                },
                "GetEnrollmentsByContentTypeAndAccountNumber" : {
                  "$ref" : "#/components/examples/GetEnrollmentsByContentTypeAndAccountNumber"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                },
                "examples" : {
                  "DocumentsReportsResponse" : {
                    "$ref" : "#/components/examples/EnrollmentsReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                },
                "examples" : {
                  "Unauthorized" : {
                    "value" : {
                      "message" : "Unauthorized"
                    }
                  },
                  "TokenExpired" : {
                    "value" : {
                      "message" : "The incoming token has expired"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security" : [ {
          "dm_oauth" : [ ]
        }, {
          "dm_rsa_auth" : [ ]
        } ]
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Broadridge",
    "url" : "http://broadridge.com"
  },
  "components" : {
    "requestBodies" : {
      "RTEDeliverDocument" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RTEDeliverDocument"
            }
          }
        },
        "description" : "RTE Document that needs to be delivered",
        "required" : true
      },
      "ReportQuery" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReportQuery"
            }
          }
        },
        "description" : "Additional queries that can be provided to filter the request",
        "required" : false
      }
    },
    "responses" : {
      "RTEInternalError" : {
        "description" : "Internal error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/500RTEApiResponse"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "dm_rsa_auth" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      },
      "dm_oauth" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://subdomain.domain.com/oauth2/token",
            "scopes" : { }
          }
        }
      }
    },
    "schemas" : {
      "CCAddresses" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "array",
            "example" : [ "first.last@domain.com", "ron.lee@broadridge.com" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "CCAddresses"
        }
      },
      "FromEmail" : {
        "type" : "object",
        "required" : [ "email", "name" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "email addresses",
            "example" : "first.last@domain.com"
          },
          "name" : {
            "type" : "string",
            "description" : "email alias(friendly) name",
            "example" : "John Lee"
          }
        },
        "xml" : {
          "name" : "FromEmail"
        }
      },
      "ReplyToEmail" : {
        "type" : "object",
        "required" : [ "email" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "email addresses",
            "example" : "first.last@domain.com"
          },
          "name" : {
            "type" : "string",
            "description" : "email alias(friendly) name",
            "example" : "John Lee"
          }
        },
        "xml" : {
          "name" : "ReplyToEmail"
        }
      },
      "EmailOptions" : {
        "type" : "object",
        "required" : [ "email" ],
        "properties" : {
          "openTracking" : {
            "type" : "boolean",
            "description" : "option to set if you want to track when and whether the delivered email has been opened by the email recipient.",
            "example" : true
          },
          "clickTracking" : {
            "type" : "boolean",
            "description" : "option to set if you want to track when and whether the attached links in the delivered email has been clicked by the email recipient.",
            "example" : true
          },
          "retryPeriod" : {
            "type" : "string",
            "description" : "if the delivery fails, how often to retry the delivery attempt.",
            "example" : "2days"
          }
        },
        "xml" : {
          "name" : "EmailOptions"
        }
      },
      "UnstructuredAddress" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Address Type. It can be Home address, Office address, etc",
            "example" : "Home"
          },
          "address1" : {
            "type" : "string",
            "description" : "Address Line 1 of consumer address",
            "example" : "1155 Long Island Ave"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address Line 2 of consumer address",
            "example" : "Edgewood"
          },
          "address3" : {
            "type" : "string",
            "description" : "Address Line 3 of consumer address",
            "example" : "NY - 11717"
          },
          "address4" : {
            "type" : "string",
            "description" : "Address Line 4 of consumer address",
            "example" : "PO 1345"
          },
          "address5" : {
            "type" : "string",
            "description" : "Address Line 5 of consumer address",
            "example" : "PO 1345"
          },
          "address6" : {
            "type" : "string",
            "description" : "Address Line 6 of consumer address",
            "example" : "PO 1345"
          },
          "address7" : {
            "type" : "string",
            "description" : "Address Line 7 of consumer address",
            "example" : "PO 1345"
          }
        },
        "xml" : {
          "name" : "UnstructuredAddress"
        }
      },
      "StructuredAddress" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Address Type. It can be Home address, Office address, etc",
            "example" : "Home"
          },
          "address1" : {
            "type" : "string",
            "description" : "Address Line 1 of consumer address",
            "example" : "1155 Long Island Ave"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address Line 2 of consumer address",
            "example" : "API 2A"
          },
          "city" : {
            "type" : "string",
            "description" : "City of consumer address",
            "example" : "Edgewood"
          },
          "state" : {
            "type" : "string",
            "description" : "State of consumer address",
            "example" : "NY"
          },
          "zip" : {
            "type" : "string",
            "description" : "Zip of consumer address",
            "example" : 11717
          },
          "country" : {
            "type" : "string",
            "description" : "Country of consumer address",
            "example" : "USA"
          }
        },
        "xml" : {
          "name" : "StructuredAddress"
        }
      },
      "FullyComposedEmail" : {
        "type" : "object",
        "description" : "This is to deliver fully composed email as is through Delivery Manager. Provide this field only if you are not using Broadridge's Experience Manager Content provider. Note also that this is only applicable when deliveryMethod is set to EMAIL.",
        "required" : [ "from", "replyTo", "subject", "content" ],
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/FromEmail"
          },
          "replyTo" : {
            "$ref" : "#/components/schemas/ReplyToEmail"
          },
          "subject" : {
            "type" : "string",
            "description" : "Email Subject",
            "example" : "Your Billing Statement is here"
          },
          "returnPath" : {
            "type" : "string",
            "description" : "email address for bounced emails.",
            "example" : "return@bounce.ipm.com"
          },
          "content" : {
            "type" : "object",
            "description" : "Html or text content of the email.",
            "properties" : {
              "html" : {
                "type" : "string",
                "description" : "content in html format.",
                "example" : "<p><strong>This is your monthly billing statement</strong></p>"
              },
              "text" : {
                "type" : "string",
                "description" : "content in txt format.",
                "example" : "This is your monthly billing statement"
              }
            },
            "oneOf" : [ {
              "required" : [ "html" ]
            }, {
              "required" : [ "text" ]
            } ]
          },
          "options" : {
            "$ref" : "#/components/schemas/EmailOptions"
          }
        },
        "xml" : {
          "name" : "FullyComposedEmailEx"
        }
      },
      "FullyComposedSMS" : {
        "type" : "object",
        "description" : "This is to deliver fully composed SMS message as is through Delivery Manager. Provide this field only if you are not using Broadridge's Experience Manager Content provider. Note also that this is only applicable when deliveryMethod is set to SMS.",
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "SMS content",
            "example" : "Your monthly statement is here. Please login to your account to view."
          },
          "options" : {
            "$ref" : "#/components/schemas/FullyComposedSMS"
          }
        },
        "xml" : {
          "name" : "FullyComposedSMS"
        }
      },
      "Attachment" : {
        "type" : "object",
        "required" : [ "name", "data", "type" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the document associated with the envelope",
            "example" : "Billing Statement.txt"
          },
          "data" : {
            "type" : "string",
            "description" : "Base64 version of document (PDF, txt, zip, etc)",
            "example" : "VGhpcyBpcyB5b3VyIGJpbGxpbmcgc3RhdGVtZW50Lg"
          },
          "type" : {
            "type" : "string",
            "description" : "MimeType of the document (application/pdf, text/plain etc)",
            "example" : "text/plain"
          }
        },
        "xml" : {
          "name" : "Attachment"
        }
      },
      "RTEDeliverDocument" : {
        "type" : "object",
        "oneOf" : [ {
          "required" : [ "brandId" ]
        }, {
          "required" : [ "sourceSystemId", "sourceSystemBrandId" ]
        } ],
        "required" : [ "contentType", "brandId" ],
        "properties" : {
          "brandId" : {
            "type" : "string",
            "description" : "IPM Unique id to identify the brand (client). Required field if sourceSystemId and sourceSystemBrandId is not specified. Specifying the brandId is the preferred choice.",
            "example" : "HXT"
          },
          "sourceSystemId" : {
            "type" : "string",
            "description" : "Source system Id. Its unique id to group the clients. Required field if brandId is not specified",
            "example" : "HEXTONE"
          },
          "sourceSystemBrandId" : {
            "type" : "string",
            "description" : "Identifies an organization which provides Content for its Consumers.This is required field if brandId is not specified.",
            "example" : "HEXTONE"
          },
          "sourceUniqueId" : {
            "type" : "string",
            "description" : "Unique id for an email/document. This is to uniquely identity the email delivered through Real-Time email process.",
            "example" : "HEXTONE"
          },
          "consumerId" : {
            "type" : "string",
            "description" : "Unique id for an user",
            "example" : "CUST12345"
          },
          "accountNumber" : {
            "type" : "string",
            "description" : "Unique id for an user",
            "example" : "ACCT12345ABC"
          },
          "contentType" : {
            "type" : "string",
            "description" : "This is for document types such as Banking Statement, Loan Statements , Trust Performance Statements, Trust Accounting Personal Statements, Trust Accounting Corporate Statements, Banking Tax Forms, Loan Tax Forms, etc",
            "example" : "Banking Statement"
          },
          "unstructuredAddress" : {
            "$ref" : "#/components/schemas/UnstructuredAddress"
          },
          "structuredAddress" : {
            "$ref" : "#/components/schemas/StructuredAddress"
          },
          "preference" : {
            "type" : "object",
            "description" : "Delivery preference (method and channel) describing how and where to deliver the document.",
            "required" : [ "deliveryMethod", "deliveryChannel" ],
            "properties" : {
              "deliveryMethod" : {
                "type" : "string",
                "description" : "consumer's document delivery method such as EMAIL or FAX or PRINT or DIGITAL",
                "example" : "EMAIL",
                "enum" : [ "EMAIL", "PRINT", "FAX", "DIGITAL" ]
              },
              "deliveryChannel" : {
                "type" : "string",
                "description" : "channel where the document is delivered. email id or fax number or digtal channel like Google Drive, Evernote, etc"
              },
              "emailCCAddresses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CCAddresses"
                }, {
                  "description" : "List of CC Email addresses in array format"
                } ]
              },
              "emailBCCAddresses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CCAddresses"
                }, {
                  "description" : "List of BCC Email addresses in array format"
                } ]
              }
            },
            "example" : {
              "deliveryMethod" : "EMAIL",
              "deliveryChannel" : "first.last@domain.com"
            }
          },
          "additionalAttributes" : {
            "type" : "object",
            "description" : "Its an open key-pair section. client can store any additional information about the consumer.",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "account" : "bank-loan"
            }
          },
          "fullyComposedEmails" : {
            "$ref" : "#/components/schemas/FullyComposedEmail"
          },
          "fullyComposedSMS" : {
            "$ref" : "#/components/schemas/FullyComposedSMS"
          },
          "attachments" : {
            "type" : "array",
            "description" : "PDF document(s) to be attached",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            }
          }
        },
        "xml" : {
          "name" : "RTEDeliverDocument"
        }
      },
      "ReportQuery" : {
        "type" : "object",
        "xml" : {
          "name" : "ReportQuery"
        }
      },
      "RTEResponse" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "string",
            "example" : "b3a98ecf-3b38-41f9-b2c5-c99c32c9a863"
          },
          "status" : {
            "type" : "string",
            "example" : "SUCCESS"
          }
        }
      },
      "500RTEApiResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "No brand profile found for the brandId:HXT"
          }
        }
      },
      "DeliveryBatchReportResponse" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "example" : 2
          },
          "records" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ {
              "triggerAction" : "Insert",
              "retryCount" : 2,
              "sourceSystemId" : "HXT",
              "count" : 8,
              "batchId" : "a5cc3e30-3c1a-4b58-ffff-ffffffffffff",
              "updatedDateTime" : "2020-03-19T20:35:23",
              "blkdVersion" : "BLKD3.0",
              "fileStatus" : "glueInitiate",
              "brandId" : "WFM",
              "ingestionTimestamp" : "2020-03-19T20:35:23",
              "orgin" : "Batch",
              "sourceSystemBrandId" : "HXT",
              "successCount" : 8,
              "bulkfileName" : "BLKD-HXT-FILE.xml",
              "failureCount" : 0,
              "fileId" : 9999.0,
              "status" : "Inprogress",
              "timestamp" : "2020-03-19T20:35:23"
            }, {
              "triggerAction" : "INSERT",
              "fileName" : "UR_IF_XML.cbu.vstrm.HXT_HXTCUP_UR_44204.04062020.123456.xml.tar",
              "retryCount" : 0,
              "sourceSystemId" : "HXT",
              "count" : "9",
              "deliveryType" : "EMAIL",
              "batchId" : "BDB_99999",
              "updatedDateTime" : "2020-04-07T08:23:30.293000",
              "fileStatus" : "Initiated",
              "brandId" : "BB:99999999999",
              "ingestionTimestamp" : "2020-04-07T08:23:30.293000",
              "urProductId" : "HXT/STATEMENT",
              "orgin" : "Batch",
              "sourceSystemBrandId" : "HXT",
              "successCount" : 0,
              "bulkfileName" : "BLKD-HXT-vstrm-2385874_hxtcup_HXT_HXTCUP-20200407T040338.xml",
              "failureCount" : 0,
              "fileId" : "2385874_hxtcup_HXT_HXTCUP",
              "status" : "Completed",
              "timestamp" : "2020-04-07T08:23:30.293000"
            } ]
          }
        }
      },
      "BadRequest" : {
        "description" : "Bad request. Required fields are missing in the request rrl or body",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Invalid Request Body"
          }
        }
      },
      "NotFound" : {
        "description" : "Requested data not found",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "NotFound"
          }
        }
      },
      "Unauthorized" : {
        "description" : "Requester is not authorized to get the content",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unauthorized"
          }
        }
      },
      "Forbidden" : {
        "description" : "Requester is not authorized to get the content",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Forbidden"
          }
        }
      },
      "InternalServerError" : {
        "description" : "Internal Server Error",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Internal Server Error"
          }
        }
      },
      "ServiceUnavailable" : {
        "description" : "Service Unavailable",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Service Unavailable"
          }
        }
      },
      "Empty" : {
        "title" : "Empty Schema1",
        "type" : "object"
      },
      "Error" : {
        "title" : "Error Schema",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      }
    },
    "examples" : {
      "LimitDataSet" : {
        "summary" : "Limit the Data Set",
        "value" : {
          "from" : "0",
          "size" : 10
        }
      },
      "SortDataSet" : {
        "summary" : "Sort the Data Set",
        "value" : {
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "LimitAndSortDataSet" : {
        "summary" : "Limit and Sort Data Set",
        "value" : {
          "from" : "0",
          "size" : 10,
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetBatchesByStatusQuery" : {
        "summary" : "Get Data Set that match a specific status",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "status" : "Completed"
                }
              } ]
            }
          },
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetDocumentsByStatusQuery" : {
        "summary" : "Get Data Set that match a specific status",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "deliveryStatus" : "Delivered"
                }
              } ]
            }
          },
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "RangeQuery" : {
        "summary" : "Get Data Set in a specific timestamp range",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "range" : {
                  "timestamp" : {
                    "gte" : "2020-01-01 00:00:00",
                    "lt" : "2021-01-01 00:00:00",
                    "format" : "yyyy-MM-dd HH:mm:ss"
                  }
                }
              } ]
            }
          },
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "SortDataSetByCreatedTimestamp" : {
        "summary" : "Sort the Data Set by created timestamp",
        "value" : {
          "sort" : [ {
            "createdTimeStamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "LimitAndSortDataSetByCreatedTimestamp" : {
        "summary" : "Limit and Sort Data Set by created timestamp",
        "value" : {
          "from" : "0",
          "size" : 10,
          "sort" : [ {
            "createdTimeStamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetDocumentsByEnvelopeQuery" : {
        "summary" : "Get Data Set that match a specific envelope",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "envelopeId.keyword" : "99999999-9999-9999-9999-999999999999"
                }
              } ]
            }
          },
          "sort" : [ {
            "createdTimeStamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetDocumentsByRcptQuery" : {
        "summary" : "Get Data Set that match a specific recipient",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "rcpt_to.keyword" : "first.last@domain.com"
                }
              } ]
            }
          },
          "sort" : [ {
            "createdTimeStamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "SortDataSetByConsentTimestamp" : {
        "summary" : "Sort the Data Set by consent timestamp",
        "value" : {
          "sort" : [ {
            "consentTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "LimitAndSortDataSetByConsentTimestamp" : {
        "summary" : "Limit and Sort Data Set by created timestamp",
        "value" : {
          "from" : "0",
          "size" : 10,
          "sort" : [ {
            "consentTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetEnrollmentsByContentType" : {
        "summary" : "Get Data Set that match a specific content type",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "contentType" : "Statement"
                }
              } ]
            }
          },
          "sort" : [ {
            "consentTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "GetEnrollmentsByContentTypeAndAccountNumber" : {
        "summary" : "Get Data Set that match a specific content type and account number",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "match" : {
                  "contentType" : "Statement"
                }
              }, {
                "match" : {
                  "accountNo" : "999999"
                }
              } ]
            }
          },
          "sort" : [ {
            "consentTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "XXX" : {
        "summary" : "Get Completed Batches",
        "value" : {
          "query" : {
            "bool" : {
              "must" : [ {
                "term" : {
                  "status" : "Completed"
                }
              } ]
            }
          },
          "sort" : [ {
            "ingestionTimestamp" : {
              "order" : "desc"
            }
          } ]
        }
      },
      "DocumentsReportResponse" : {
        "summary" : "Get Documents",
        "value" : {
          "total" : 2,
          "records" : [ {
            "emailToAddress" : "first.last@domain.com",
            "sourceSystemId" : "HXT",
            "sourceSystemBrandId" : "HXT",
            "contentType" : "Statement",
            "notificationJson" : {
              "sourceSystemId" : "HXT",
              "sourceConsumerId" : "999999",
              "accountNumber" : "99999",
              "preference" : {
                "deliveryMethod" : "EMAIL",
                "deliveryChannel" : "first.last@domain.com"
              },
              "sourceSystemBrandId" : "HXT",
              "brandId" : "HXT",
              "contentType" : "Statement",
              "emailMetaData" : { }
            },
            "fileName" : "NA",
            "batchId" : "NA",
            "deliveryType" : "EMAIL",
            "envelopeId" : "288252dd-773a-4286-bce4-7a282803ca48",
            "timestamp" : "2020-03-31T13:27:30.178Z",
            "brandId" : "HXT",
            "orgin" : "API",
            "ingestionTimestamp" : "2020-03-31T13:27:16.013Z",
            "deliveryStatus" : "Delivered",
            "emailFileName" : "HXT/288252dd-773a-4286-bce4-7a282803ca48_email.html",
            "brandContentTypeId" : "",
            "subBatchId" : "",
            "emailConsolidationFlag" : "",
            "subContentType" : "",
            "accountNo" : ""
          }, {
            "emailToAddress" : "first.last@domain.com",
            "sourceSystemId" : "HXT",
            "sourceSystemBrandId" : "HXT",
            "contentType" : "Statement",
            "notificationJson" : {
              "brandContentTypeId" : "100459",
              "envelopeId" : "BD:999999999",
              "sourceSystemId" : "HXT",
              "sourceSystemBrandId" : "HXT",
              "deliveryType" : "EMAIL",
              "envelopeData" : {
                "envelopeName" : "Statements",
                "emailBodyData" : {
                  "mimeType" : "text/html"
                },
                "sourceEnvId" : "992",
                "billData" : {
                  "date" : "2020-04-09",
                  "accountNumber" : "992"
                }
              },
              "contentType" : "Statement",
              "consumer" : {
                "sourceCid" : "992",
                "deliveryPoints" : {
                  "emailDeliveryPoint" : {
                    "email" : "first.last@domain.com"
                  }
                },
                "preferences" : {
                  "preference" : {
                    "distributionChannel" : "first.last@domain.com",
                    "contentType" : "Statement",
                    "value" : "E"
                  }
                },
                "sequenceNum" : "4962"
              },
              "envelopeBodyFileName" : "BD_999999999_20200409034022_70598.html",
              "echoBack" : {
                "configName" : "2days",
                "emailCCAddresses" : [ ],
                "fromAlias" : "edelivery",
                "inputFileName" : "BLKD-HXT-vstrm-2388321_hxtcup_aux_HXT_TM-20200409T032204.xml",
                "emailToAddress" : "first.last@domain.com",
                "replyTo" : "name@domain.com",
                "needInterceptor" : "Y",
                "emailBCCAddresses" : [ ],
                "hasAttachments" : "N",
                "envelopeBodyFileName" : "BD_999999999_20200409034022_70598.html"
              },
              "emailMetaData" : { }
            },
            "fileName" : "BLKD-HXT-vstrm-2388321_hxtcup_aux_HXT_TM-20200409T032204.xml",
            "batchId" : "BDB_99999",
            "emailConfigName" : "2days",
            "deliveryType" : "EMAIL",
            "envelopeId" : "BD:999999999",
            "timestamp" : "2020-04-09T07:40:31.685Z",
            "brandId" : "BB:9999999999",
            "orgin" : "Batch",
            "ingestionTimestamp" : "2020-04-09T07:40:22.802000",
            "deliveryStatus" : "Delivered",
            "emailFileName" : "BD_999999999_20200409034022_70598.html",
            "sourceEnvelopeId" : "992",
            "sourceCId" : "992",
            "deliveryOrderId" : "BDO:9999999999999",
            "brandContentTypeId" : "",
            "subBatchId" : "",
            "emailConsolidationFlag" : "",
            "subContentType" : "",
            "accountNo" : ""
          } ]
        }
      },
      "OpenedDocumentsReportResponse" : {
        "summary" : "Get Opened Documents",
        "value" : {
          "total" : 2,
          "records" : [ {
            "tenant_id" : "keyspace_default",
            "template_version" : "0",
            "createdTimeStamp" : "2019-04-10T14:07:25.314Z",
            "node_name" : "mailserver@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "214993|1|BD:99999999",
              "X_Binding" : "2days",
              "dep_run_id" : "214993"
            },
            "rcpt_tags" : [ ],
            "message_id" : "00007bf3ad5c182a1805",
            "type" : "open",
            "transactionId" : "00000000-0000-0000-0000-000000000000",
            "raw_rcpt_to" : "first.last@domain.com",
            "event_id" : "13041798687491084",
            "rcpt_to" : "first.last@domain.com",
            "envelopeId" : "BD:99999999",
            "deliveryManger" : {
              "sourceCId" : "102713739003",
              "fileName" : "BLKD-HXT-HXT-10042019006-20190409T001004.xml",
              "sourceSystemId" : "HXT",
              "brandId" : "BB:99999999999",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "Batch",
              "sourceEnvelopeId" : "3060",
              "created_timestamp" : "2019-04-10T14:07:25.327Z",
              "batchId" : "BDB_99999"
            },
            "template_id" : "template_13041798687490296",
            "delv_method" : "esmtp",
            "transmission_id" : "13041798687490296",
            "customer_id" : "1",
            "campaign_id" : "YN2H1FIlXYUxC6MhRUv4r4h7kQggRD",
            "user_agent" : "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; wbx 1.0.0; Microsoft Outlook 15.0.5101; Microsoft Outlook 15.0.5101; ms-office; MSOffice 15)",
            "timestamp" : "1554905234"
          }, {
            "tenant_id" : "keyspace_default",
            "template_version" : "0",
            "createdTimeStamp" : "2019-06-27T15:15:26.122Z",
            "node_name" : "mailserver@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "249774|574730|99999999-9999-9999-9999-999999999999",
              "X_Binding" : "2days",
              "seq_nbr" : "1",
              "rcpt_type" : "cc",
              "dep_run_id" : "249774"
            },
            "rcpt_tags" : [ ],
            "message_id" : "000049d6145d7c62d1e1",
            "type" : "open",
            "transactionId" : "00000000-0000-0000-0000-000000000001",
            "raw_rcpt_to" : "first.last@domain.com",
            "event_id" : "13090596685875822",
            "rcpt_to" : "first.last@domain.com",
            "envelopeId" : "99999999-9999-9999-9999-999999999999",
            "accept_language" : "en-us",
            "deliveryManger" : {
              "sourceCId" : "2345",
              "sourceSystemId" : "HXT",
              "brandId" : "HXT",
              "accountNo" : "12345",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "API",
              "sourceEnvelopeId" : "2345123",
              "created_timestamp" : "2019-06-27T15:15:26.330Z"
            },
            "template_id" : "template_13090596681375818",
            "delv_method" : "esmtp",
            "transmission_id" : "13090596681375818",
            "customer_id" : "1",
            "campaign_id" : "email-domain.com.cc_bcc",
            "user_agent" : "Outlook-iOS/711.2420181.prod.iphone (3.29.0)",
            "timestamp" : "1561648495"
          } ]
        }
      },
      "ClickedDocumentsReportResponse" : {
        "summary" : "Get Clicked Documents",
        "value" : {
          "total" : 2,
          "records" : [ {
            "tenant_id" : "keyspace_default",
            "template_version" : "0",
            "createdTimeStamp" : "2019-04-10T14:07:25.314Z",
            "node_name" : "mailserver@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "214993|1|BD:99999999",
              "X_Binding" : "2days",
              "dep_run_id" : "214993"
            },
            "rcpt_tags" : [ ],
            "message_id" : "00007bf3ad5c182a1805",
            "type" : "click",
            "transactionId" : "00000000-0000-0000-0000-000000000000",
            "raw_rcpt_to" : "first.last@domain.com",
            "event_id" : "13041798687491084",
            "rcpt_to" : "first.last@domain.com",
            "envelopeId" : "BD:99999999",
            "accept_language" : "en-US",
            "deliveryManger" : {
              "sourceCId" : "102713739003",
              "fileName" : "BLKD-HXT-HXT-10042019006-20190409T001004.xml",
              "sourceSystemId" : "HXT",
              "brandId" : "BB:99999999999",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "Batch",
              "sourceEnvelopeId" : "3060",
              "created_timestamp" : "2019-04-10T14:07:25.327Z",
              "batchId" : "BDB_99999"
            },
            "target_link_url" : "https://google.com",
            "template_id" : "template_13041798687490296",
            "delv_method" : "esmtp",
            "transmission_id" : "13041798687490296",
            "customer_id" : "1",
            "campaign_id" : "YN2H1FIlXYUxC6MhRUv4r4h7kQggRD",
            "user_agent" : "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; wbx 1.0.0; Microsoft Outlook 15.0.5101; Microsoft Outlook 15.0.5101; ms-office; MSOffice 15)",
            "timestamp" : "1554905234"
          }, {
            "tenant_id" : "keyspace_default",
            "template_version" : "0",
            "createdTimeStamp" : "2019-07-10T16:07:27.833Z",
            "node_name" : "mailserver@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "268898|173138|99999999-9999-9999-9999-999999999999",
              "X_Binding" : "2days",
              "dep_run_id" : "268898"
            },
            "rcpt_tags" : [ ],
            "message_id" : "0000b30c265dbc216528",
            "type" : "click",
            "transactionId" : "00000000-0000-0000-0000-000000000001",
            "raw_rcpt_to" : "first.last@domain.com",
            "event_id" : "13108948052167673",
            "rcpt_to" : "first.last@domain.com",
            "envelopeId" : "99999999-9999-9999-9999-999999999999",
            "accept_language" : "en-us",
            "deliveryManger" : {
              "sourceCId" : "2345",
              "sourceSystemId" : "HXT",
              "brandId" : "HXT",
              "accountNo" : "12345",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "API",
              "sourceEnvelopeId" : "2345123",
              "created_timestamp" : "2019-07-10T16:07:27.931Z"
            },
            "target_link_url" : "https://domain.net/HXT/NOTICE/99999999-9999-9999-9999-999999999999/index.html",
            "template_id" : "template_13108948051848811",
            "delv_method" : "esmtp",
            "transmission_id" : "13108948051848811",
            "customer_id" : "1",
            "campaign_id" : "email-domain.com",
            "user_agent" : "Mozilla/5.0 (iPhone; CPU iPhone OS 12_1_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1",
            "timestamp" : "1562774817"
          } ]
        }
      },
      "BouncedDocumentsReportResponse" : {
        "summary" : "Get Bounced Documents",
        "value" : {
          "total" : 2,
          "records" : [ {
            "tenant_id" : "keyspace_default",
            "reason" : "550 no mailbox by that name is currently available",
            "conn_stage" : "5",
            "template_version" : "0",
            "subject" : "Your Account Statement is Now Available",
            "createdTimeStamp" : "2019-08-06T16:32:43.272Z",
            "binding" : "qa_1",
            "rcpt_tags" : [ ],
            "type" : "bounce",
            "num_retries" : "0",
            "bounce_class" : "10",
            "raw_rcpt_to" : "unknownuser@domain.com",
            "msg_from" : "name@domain.com",
            "recv_method" : "rest",
            "rcpt_to" : "unknownuser@domain.com",
            "conn_name" : "00/00-00000-00000000",
            "envelopeId" : "BD:999999999",
            "msg_batchname" : "50/4D-02185-E2BA94D5",
            "transmission_id" : "13128040112558224",
            "msg_spoolname" : "60/4D-02185-E2BA94D5",
            "campaign_id" : "hvPxll7v0StTTHYzAAfqTkriz2HTWJ",
            "timestamp" : "1565109161",
            "node_name" : "ediqvldepm01.@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "291768|1|BD:99999999999",
              "X_Binding" : "2",
              "dep_run_id" : "291768"
            },
            "binding_group" : "group1",
            "message_id" : "00002eab495d890806d4",
            "transactionId" : "00000000-0000-0000-0000-000000000000",
            "queue_time" : "123231",
            "event_id" : "13128040112785606",
            "routing_domain" : "test.com",
            "raw_reason" : "550 no mailbox by that name is currently available",
            "deliveryManger" : {
              "sourceCId" : "2891",
              "fileName" : "BLKD-HXT-HXT-VSAFP-P-SIMYA2127850-20190627T030648.xml",
              "sourceSystemId" : "HXT",
              "brandId" : "BB:9999999999",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "Batch",
              "sourceEnvelopeId" : "99999999",
              "created_timestamp" : "2019-08-06T16:32:43.281Z",
              "batchId" : "BDB_99999"
            },
            "error_code" : "550",
            "template_id" : "template_13128040112558224",
            "customer_id" : "1",
            "msg_size" : "8311"
          }, {
            "tenant_id" : "keyspace_default",
            "reason" : "Invalid email address <unknownuser@domain.com>",
            "conn_stage" : "9",
            "template_version" : "NA",
            "subject" : "NA",
            "createdTimeStamp" : "2019-08-07T17:24:08.696Z",
            "binding" : "2days",
            "type" : "bounce",
            "num_retries" : "0",
            "bounce_class" : 11,
            "raw_rcpt_to" : "unknownuser@domain.com",
            "msg_from" : "name@subdomain.domain.com",
            "recv_method" : "rest",
            "rcpt_to" : "unknownuser@domain.com",
            "conn_name" : "00/00-00000-00000000",
            "envelopeId" : "99999999-9999-9999-9999-999999999999",
            "msg_batchname" : "NA",
            "transmission_id" : "NA",
            "msg_spoolname" : "NA",
            "campaign_id" : "email-domain.com",
            "timestamp" : 1564599193,
            "node_name" : "mailserver@domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "280252|102|99999999-9999-9999-9999-999999999999",
              "X_Binding" : "2days",
              "dep_run_id" : 280252
            },
            "binding_group" : "default",
            "transactionId" : "00000000-0000-0000-0000-000000000001",
            "queue_time" : "0",
            "event_id" : "13100823360657697",
            "routing_domain" : "NA",
            "raw_reason" : "Invalid email address <unknownuser@domain.com>",
            "deliveryManger" : {
              "sourceCId" : "hxt",
              "sourceSystemId" : "HXT",
              "brandId" : "77777777-7777-7777-7777-777777777777",
              "accountNo" : "hxt100",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "API",
              "sourceEnvelopeId" : "11111111-1111-1111-1111-111111111111",
              "created_timestamp" : "2019-08-07T17:24:08.735Z"
            },
            "error_code" : 550,
            "template_id" : "NA",
            "customer_id" : "1",
            "msg_size" : "0"
          } ]
        }
      },
      "EnrollmentsReportResponse" : {
        "summary" : "Get Enrollments",
        "value" : {
          "total" : 2,
          "records" : [ {
            "historicalData" : false,
            "accountSubscriptId" : "99999999-9999-9999-9999-999999999991",
            "accountNo" : "99999991",
            "contentType" : "Statements",
            "deliveryType" : "EMAIL",
            "deliveryChannel" : "first.last@domain.com",
            "status" : "ACTIVE",
            "consumerId" : "ABC8901",
            "type" : "Delivery",
            "brandId" : "HXT",
            "userId" : "00000000-0000-0000-0000-000000000001",
            "updatedBy" : "MAS",
            "timestamp" : "2020-04-09T15:10:43.865Z",
            "consentTimestamp" : "2019-12-17T17:32:28.000Z",
            "lastUpdatedTimestamp" : "2019-12-17T17:32:28.000Z",
            "sourceSystemId" : "HXT",
            "sourceSystemBrandId" : "HXT"
          }, {
            "historicalData" : false,
            "accountSubscriptId" : "99999999-9999-9999-9999-999999999992",
            "accountNo" : "99999992",
            "contentType" : "Statements",
            "deliveryType" : "EMAIL",
            "deliveryChannel" : "first.last@domain.com",
            "status" : "ACTIVE",
            "consumerId" : "ABC8902",
            "type" : "Delivery",
            "brandId" : "HXT",
            "userId" : "00000000-0000-0000-0000-000000000002",
            "updatedBy" : "MAS",
            "timestamp" : "2020-04-09T15:10:43.865Z",
            "consentTimestamp" : "2019-12-17T17:32:28.000Z",
            "lastUpdatedTimestamp" : "2019-12-17T17:32:28.000Z",
            "sourceSystemId" : "HXT",
            "sourceSystemBrandId" : "HXT"
          } ]
        }
      },
      "RetryDocumentsReportResponse" : {
        "summary" : "Get Retry Documents",
        "value" : {
          "total" : 1,
          "records" : [ {
            "tenant_id" : "keyspace_default",
            "reason" : "451 4.4.2 [internal] connection closed by remote host",
            "conn_stage" : "5",
            "template_version" : "0",
            "subject" : "Test",
            "createdTimeStamp" : "2019-09-03T15:15:32.586Z",
            "binding" : "2days",
            "rcpt_tags" : [ ],
            "type" : "delay",
            "num_retries" : "0",
            "next_attempt" : "1567524931",
            "bounce_class" : "70",
            "raw_rcpt_to" : "first.last@domain.com",
            "msg_from" : "name@subdomain.domain.com",
            "recv_method" : "rest",
            "rcpt_to" : "first.last@domain.com",
            "conn_name" : "00/00-00000-00000000",
            "envelopeId" : "99999999-9999-9999-9999-999999999999",
            "msg_batchname" : "8D/A5-02185-5438E6D5",
            "transmission_id" : "13128040114243071",
            "msg_spoolname" : "9D/A5-02185-5438E6D5",
            "campaign_id" : "emails.campaign",
            "timestamp" : "1567523731",
            "node_name" : "node01.domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "297301|876663|99999999-9999-9999-9999-999999999999",
              "X_Binding" : "2days",
              "dep_run_id" : "297301"
            },
            "binding_group" : "default",
            "message_id" : "0000458364444908d95a",
            "transactionId" : "99999-00000-88888-321234-33443",
            "queue_time" : "77695",
            "event_id" : "13128040117866791",
            "routing_domain" : "mailbox.domain.com",
            "raw_reason" : "451 4.4.2 [internal] connection closed by remote host",
            "deliveryManger" : {
              "sourceSystemId" : "HXT",
              "brandId" : "HXT",
              "accountNo" : "hxt100",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "API",
              "created_timestamp" : "2019-09-03T15:15:32.597Z"
            },
            "error_code" : "451",
            "template_id" : "template_13128040114243071",
            "customer_id" : "1",
            "msg_size" : "23450"
          } ]
        }
      },
      "FeedbackLoopDocumentsReportResponse" : {
        "summary" : "Get Retry Documents",
        "value" : {
          "total" : 1,
          "records" : [ {
            "tenant_id" : "keyspace_default",
            "template_version" : "0",
            "createdTimeStamp" : "2019-05-15T07:02:27.332Z",
            "binding" : "default",
            "rcpt_tags" : [ ],
            "type" : "spam_complaint",
            "rcpt_to" : "first.last@domain.com",
            "envelopeId" : "BD:85096966",
            "report_to" : "bounce.domain.com",
            "transmission_id" : "229112400677224531",
            "msg_spoolname" : "B0/65-15144-453AE1C5",
            "campaign_id" : "emails.campaign",
            "fbtype" : "other",
            "timestamp" : "1545511764",
            "node_name" : "node01.domain.net",
            "rcpt_meta" : {
              "dep_msg_id" : "10023|1212|99999999-9999-9999-9999-999999999999",
              "dep_record_id" : "78148",
              "dep_run_id" : "441520"
            },
            "binding_group" : "default",
            "message_id" : "000c9fd1ff5b4320678f",
            "transactionId" : "00000000-0000-0000-0000-000000000000",
            "report_by" : "domain.com",
            "event_id" : "211122521080224603",
            "deliveryManger" : {
              "sourceSystemId" : "HXT",
              "brandId" : "HXT",
              "accountNo" : "hxt100",
              "sourceSystemBrandId" : "HXT",
              "orgin" : "API",
              "created_timestamp" : "2019-09-03T15:15:32.597Z"
            },
            "template_id" : "template_13128040114243071",
            "customer_id" : "1",
            "msg_size" : "23450"
          } ]
        }
      }
    }
  },
  "servers" : [ {
    "description" : "DM Real Time Delivery and Report APIs",
    "url" : "https://qa-dm.broadridge.com/v2"
  }, {
    "description" : "DM Real Time Delivery and Report APIs",
    "url" : "https://qa-dm.broadridge.com/v1"
  } ],
  "tags" : [ {
    "name" : "Deliver Document",
    "description" : "__Real-Time Deliver Document API__\n"
  }, {
    "name" : "Real-Time & Batch Delivery Reports",
    "description" : "__Documents and Batches Reports__\n"
  }, {
    "name" : "Open Reports",
    "description" : "__Opened Documents Reports__\n"
  }, {
    "name" : "Click Reports",
    "description" : "__Clicked Documents Reports__\n"
  }, {
    "name" : "Bounce Reports",
    "description" : "__Bounced Document Reports__ \n"
  }, {
    "name" : "Retry Reports",
    "description" : "__Retry Documents Reports__        \n"
  }, {
    "name" : "Feedback Loop Reports",
    "description" : "__Feedback Loop Documents Reports__   \n"
  }, {
    "name" : "Enrollment Reports",
    "description" : "__Enrollments Reports__"
  } ]
}