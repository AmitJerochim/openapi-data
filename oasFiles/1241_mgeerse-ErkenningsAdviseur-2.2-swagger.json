{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2.2",
    "title" : "ELBHO Swagger API",
    "description" : "ELBHO API Project for the Cloud Minor"
  },
  "paths" : {
    "/vehicles" : {
      "get" : {
        "description" : "Retrieves all vehicles",
        "operationId" : "getVehicles",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "date",
          "schema" : {
            "type" : "string"
          },
          "description" : "date on which the vehicles are not claimed"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicles"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No vehicles found"
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      },
      "post" : {
        "summary" : "Create a vehicle",
        "description" : "Creates a vehicle from the provided data in the requestbody",
        "operationId" : "createVehicle",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/vehicles"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/vehicles"
                }
              }
            }
          },
          "400" : {
            "description" : "PUT failed."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/{vehicle-id}" : {
      "get" : {
        "description" : "Retrieves one single vehicle from the /vehicle-id/ parameter and returns the vehicle encoded in JSON",
        "operationId" : "getVehicleById",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the vehicle to get"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/vehicles"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not logged in"
          },
          "404" : {
            "description" : "Vehicle with vehicleId not found"
          }
        }
      },
      "put" : {
        "summary" : "Update a vehicle",
        "description" : "Updates one single vehicle from the /vehicle-id/ parameter",
        "operationId" : "updateVehicle",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the vehicle to get"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/vehicles"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/vehicles"
                }
              }
            }
          },
          "400" : {
            "description" : "PUT failed."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      },
      "delete" : {
        "summary" : "Delete a vehicle",
        "description" : "Deletes a vehicle",
        "operationId" : "deleteVehicle",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Numeric ID of the vehicle to delete"
        } ],
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/claims/" : {
      "get" : {
        "summary" : "Get all claims",
        "operationId" : "getClaims",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "date",
          "schema" : {
            "type" : "object"
          },
          "description" : "The number of items to skip before starting to collect the result set"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "advisor-id",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Claims retrieved"
          },
          "400" : {
            "description" : "Query parameters wrong"
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      },
      "post" : {
        "summary" : "Claim a vehicle",
        "description" : "Claims one single vehicle",
        "operationId" : "claimVehicle",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Vehicle" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/vehicle-claim"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Claim created"
          },
          "400" : {
            "description" : "PUT failed (car might already be claimed)."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/claims/{claim-id}/" : {
      "delete" : {
        "summary" : "Delete a claim on a vehicle",
        "description" : "Delete claim one single vehicle",
        "operationId" : "deleteclaimVehicle",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "claim-id",
          "required" : true,
          "schema" : {
            "type" : "object"
          },
          "description" : "The number of items to skip before starting to collect the result set"
        } ],
        "tags" : [ "Vehicle" ],
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/requests" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "Get all requests",
        "description" : "Gets all requests",
        "operationId" : "getRequests",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/requests"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not logged in"
          },
          "404" : {
            "description" : "Request not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "Create a request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "operationId" : "createRequest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/requests"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request id supplied"
          },
          "404" : {
            "description" : "Request not found"
          }
        }
      }
    },
    "/requests/{request-id}/" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "Get request by Id",
        "operationId" : "GetRequestById",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "request-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the request to get"
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requests"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request id supplied"
          },
          "404" : {
            "description" : "No request with this ID found."
          }
        }
      },
      "put" : {
        "tags" : [ "Requests" ],
        "summary" : "Put on ruquest by Id",
        "operationId" : "putOnRequest",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "request-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the request to get"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/requests"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requests"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request id supplied"
          },
          "404" : {
            "description" : "No request with this ID found."
          }
        }
      },
      "delete" : {
        "tags" : [ "Requests" ],
        "summary" : "Delete request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "description" : "This can only be done by the logged in user to which the request is assigned.",
        "operationId" : "deleteRequest",
        "parameters" : [ {
          "in" : "path",
          "name" : "request-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the request to delete"
        } ],
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          }
        }
      }
    },
    "/requests/{request-id}/remove-advisor" : {
      "delete" : {
        "tags" : [ "Requests" ],
        "summary" : "Delete an advisor from an already accepted request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "request-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the request to delete the advisor from"
        } ],
        "operationId" : "removeAdvisorFromRequest",
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requests"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid user id supplied"
          }
        }
      }
    },
    "/advisors" : {
      "get" : {
        "tags" : [ "Advisor" ],
        "summary" : "Creates list of all users",
        "parameters" : [ {
          "in" : "query",
          "name" : "date",
          "schema" : {
            "type" : "string"
          },
          "description" : "date on which the vehicles are not claimed"
        } ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "succesful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/advisors"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/advisors/login" : {
      "post" : {
        "tags" : [ "Advisor" ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "summary" : "Logs user into the system",
        "operationId" : "loginUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisors-login"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/advisor-succesful-login"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/advisor-failed-login"
                }
              }
            }
          }
        }
      }
    },
    "/advisors/me/logout" : {
      "post" : {
        "tags" : [ "Advisor" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logoutUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisor-logout"
              }
            }
          }
        },
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "default" : {
            "description" : "Successful operation"
          }
        }
      }
    },
    "/advisors/{advisors-id}" : {
      "get" : {
        "tags" : [ "Advisor" ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "summary" : "Get user by user name",
        "operationId" : "getUserByName",
        "parameters" : [ {
          "name" : "advisors-id",
          "in" : "path",
          "description" : "The ID of the user that needs to be fetched.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/advisors"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Advisor" ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "summary" : "put on  in user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "putUser",
        "parameters" : [ {
          "name" : "advisors-id",
          "in" : "path",
          "description" : "The ID of the advisor.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisors"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Advisor" ],
        "summary" : "Delete user",
        "parameters" : [ {
          "name" : "advisors-id",
          "in" : "path",
          "description" : "The ID of the user that needs to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteAdvisor",
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          }
        }
      }
    },
    "/advisors/me" : {
      "get" : {
        "tags" : [ "Me" ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "summary" : "Get current logged in user",
        "operationId" : "getCurrentUser",
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/advisors"
                }
              }
            }
          },
          "401" : {
            "description" : "Currently not logged in"
          }
        }
      },
      "put" : {
        "tags" : [ "Me" ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "summary" : "put on current logged in user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "patchUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisors"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/advisors"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Me" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteMe",
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          }
        }
      }
    },
    "/advisors/me/requests" : {
      "get" : {
        "tags" : [ "Me" ],
        "summary" : "Accept a request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "operationId" : "getRequestsByUserId",
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requests"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid user id supplied"
          }
        }
      }
    },
    "/advisors/me/requests/accept" : {
      "post" : {
        "tags" : [ "Me" ],
        "summary" : "Accept request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisors-accept-request"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requests"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid user id supplied"
          }
        }
      }
    },
    "/advisors/me/requests/deny" : {
      "post" : {
        "tags" : [ "Me" ],
        "summary" : "deny request",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/advisors-accept-request"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK"
          }
        }
      }
    },
    "/advisors/me/claims/" : {
      "get" : {
        "summary" : "Get claimed vehicles",
        "operationId" : "myClaimedVehicles",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "tags" : [ "Me" ],
        "parameters" : [ {
          "name" : "expired",
          "in" : "query",
          "description" : "Include the fetching of expired claims?",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "All claimed vehicle objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicles"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "PUT failed (car might already be claimed)."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/advisors/me/availabilities" : {
      "get" : {
        "tags" : [ "Availabilities" ],
        "summary" : "Get availability from current logged in user",
        "operationId" : "getUserAvailability",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/availabilities"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Availabilities" ],
        "summary" : "Add a new availability to the user",
        "operationId" : "addAvailability",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/availabilities"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/advisors/me/availabilities/{availability-id}" : {
      "get" : {
        "tags" : [ "Availabilities" ],
        "summary" : "get availability by id",
        "operationId" : "getAvailablityById",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "availability-id",
          "description" : "ID of the availability to get",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/availabilities"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "Availabilities" ],
        "summary" : "Delete current logged in user",
        "operationId" : "deleteAvailability",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "availability-id",
          "description" : "ID of the availability to delete",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/advisors/me/status" : {
      "get" : {
        "tags" : [ "Status" ],
        "summary" : "Get status from current logged in user",
        "operationId" : "getUserStatus",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/status"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Status" ],
        "summary" : "Update status of loggedin User",
        "operationId" : "patchStatus",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/status"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "User not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "Status" ],
        "summary" : "Delete current logged in users' status",
        "operationId" : "deleteStatus",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "OK"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/advisors/me/location" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Get location from current logged in user",
        "operationId" : "getUserLocation",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/location"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Location" ],
        "summary" : "Update location of User",
        "operationId" : "updateLocation",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/location"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location" ],
        "summary" : "Delete current logged in users' location",
        "operationId" : "deleteLocation",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "OK"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/invoices" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Get all invoices currently registered",
        "description" : "Get all the data on all the invoices",
        "operationId" : "getAllInvoices",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/invoice"
                }
              }
            }
          },
          "404" : {
            "description" : "No invoice found"
          }
        }
      },
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Posts invoice",
        "operationId" : "createInvoice",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/invoice"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "404" : {
            "description" : "Invoice not found"
          }
        }
      }
    },
    "/invoices/{invoice-id}" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Get an invoices currently registered",
        "description" : "Get all the data on all the invoices",
        "operationId" : "getInvoiceById",
        "parameters" : [ {
          "name" : "invoice-id",
          "in" : "path",
          "description" : "ID of company that needs to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/invoice"
                }
              }
            }
          },
          "404" : {
            "description" : "No Companies found"
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice" ],
        "summary" : "Get by invoice-id",
        "description" : "Returns invoice object",
        "operationId" : "patchInvoiceById",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/invoice"
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "invoice-id",
          "in" : "path",
          "description" : "The Id of the invoice to be fetched",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Id supplied"
          },
          "404" : {
            "description" : "Invoice not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "Deletes a invoice",
        "operationId" : "deleteInvoiceById",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "invoice-id",
          "in" : "path",
          "description" : "ID of company that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Resource marked for deletion."
          }
        }
      }
    },
    "/settings/timelimit" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Sets the time limt for advisors to reply on a request",
        "operationId" : "setTimeLimit",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "set",
          "in" : "query",
          "description" : "the amount of time delay before a new advisor will be asked (in days)",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "401" : {
            "description" : "You're not authorized"
          }
        }
      }
    },
    "/settings/admins" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Sets the time limt for advisors to reply on a request",
        "operationId" : "addAdmin",
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/admin"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "401" : {
            "description" : "You're not authorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes an admin",
        "operationId" : "deleteAdmin",
        "parameters" : [ {
          "name" : "adminId",
          "in" : "query",
          "description" : "Id of admin to be deleted",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "security" : [ {
          "jwt-auth" : [ ]
        } ],
        "responses" : {
          "202" : {
            "description" : "Admin marked for deletion."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "admin" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "advisor-logout" : {
        "type" : "object",
        "properties" : {
          "advisor-id" : {
            "type" : "string"
          }
        }
      },
      "vehicles" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "licenseplate" : {
            "type" : "string"
          },
          "brand" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "transmission" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "picture" : {
            "type" : "string"
          }
        }
      },
      "vehicle-reservations" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "advisor-id" : {
            "type" : "string"
          },
          "request-id" : {
            "type" : "string"
          },
          "startdatetime" : {
            "type" : "string"
          },
          "enddatetime" : {
            "type" : "string"
          }
        }
      },
      "advisors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "phonenumber" : {
            "type" : "string"
          },
          "active" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "workarea" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          }
        }
      },
      "advisors-login" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "availabilities" : {
        "type" : "object",
        "properties" : {
          "availability-id" : {
            "type" : "string"
          },
          "advisor-id" : {
            "type" : "string"
          },
          "startdatetime" : {
            "type" : "string"
          },
          "enddatetime" : {
            "type" : "string"
          }
        }
      },
      "requests" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "company-id" : {
            "type" : "string"
          },
          "advisor-id" : {
            "type" : "string"
          },
          "appointment-datetime" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "phonenumber" : {
            "type" : "string"
          },
          "contactperson-name" : {
            "type" : "string"
          },
          "contactperson-phonenumber" : {
            "type" : "string"
          },
          "contactperson-function" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "website" : {
            "type" : "string"
          },
          "logo" : {
            "type" : "string"
          },
          "kvk-number" : {
            "type" : "integer"
          },
          "kvk-name" : {
            "type" : "string"
          },
          "first-choice" : {
            "type" : "string"
          },
          "second-choice" : {
            "type" : "string"
          },
          "third-choice" : {
            "type" : "string"
          }
        }
      },
      "invoice" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "string",
            "description" : "base 64 encoded string"
          },
          "month" : {
            "type" : "string"
          },
          "advisor-id" : {
            "type" : "string"
          }
        }
      },
      "vehicle-claim" : {
        "type" : "object",
        "properties" : {
          "vehicle-id" : {
            "type" : "integer"
          },
          "user-id" : {
            "type" : "integer"
          },
          "request-id" : {
            "type" : "integer"
          },
          "datetimeslot" : {
            "type" : "object",
            "properties" : {
              "start-datetime" : {
                "type" : "string"
              },
              "end-datetime" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "status" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          }
        }
      },
      "location" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string"
          }
        }
      },
      "advisor-succesful-login" : {
        "type" : "object",
        "properties" : {
          "jwt" : {
            "type" : "string"
          },
          "advisor-id" : {
            "type" : "string"
          }
        }
      },
      "advisor-failed-login" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "error code"
          }
        }
      },
      "advisors-accept-request" : {
        "type" : "object",
        "properties" : {
          "advisor-id" : {
            "type" : "string"
          },
          "request-id" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "jwt-auth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  },
  "security" : [ {
    "jwt-auth" : [ ]
  } ]
}