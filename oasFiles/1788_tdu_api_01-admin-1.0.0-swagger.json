{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/tdu_api_01/admin/1.0.0"
  } ],
  "info" : {
    "description" : "API for Admin Operations",
    "version" : "1.0.0",
    "title" : "TDU ADMIN",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Concept Management",
    "description" : "Operations for Concepts"
  }, {
    "name" : "Currency Management",
    "description" : "Operations for Currencies"
  }, {
    "name" : "User Management",
    "description" : "Operations for Users"
  } ],
  "paths" : {
    "/admin/concepts" : {
      "get" : {
        "tags" : [ "Concept Management" ],
        "summary" : "List all the concepts that are available for the given params.",
        "description" : "This operation lists all the concepts that are available for the given params.",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Amount of items in each result page",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Starting point for the required page. First item will be offset+1 and last item will be offset+limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting definitions. It may include more than one field separated by comma. For example, >amount,<currency",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "columns",
          "in" : "query",
          "description" : "List of desired columns. For example, currency,amount,status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status values for filtering",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "any", "confirmed", "pending", "rejected" ]
            }
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter query. It may include more than one criteria separated operator:AND or operator:OR. Each criteria item will have the format FIELD:OPERATOR:VALUE[,VALUE-N]. Operators can be gt (greater than), ge (greater equal), lt (less than), le (less equal), eq, bt (between), in. For example, currency:eq:ARS operator:OR amount:bt:1000,5000 operator:AND user:in:rperez,mgomez",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminConceptListResponse"
                }
              },
              "application/json" : {
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSG00001",
                          "rMsg" : "Sucessfully Processed",
                          "paramsStatus" : null
                        } ]
                      },
                      "body" : {
                        "items" : [ {
                          "conceptId" : "A05",
                          "conceptDescription" : "Derivados Financieros",
                          "creationDatetime" : "2019-03-29T17:52:37.793Z",
                          "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                          "status" : "confirmed"
                        }, {
                          "conceptId" : "A06",
                          "conceptDescription" : "Préstamos otorgados a no residentes",
                          "creationDatetime" : "2019-03-29T17:52:37.793Z",
                          "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                          "status" : "confirmed"
                        }, {
                          "conceptId" : "A07",
                          "conceptDescription" : "Depósitos de Residentes en el Exterior",
                          "creationDatetime" : "2019-03-29T17:52:37.793Z",
                          "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                          "status" : "confirmed"
                        }, {
                          "conceptId" : "A08",
                          "conceptDescription" : "Otras inversiones en el exterior de residentes",
                          "creationDatetime" : "2019-03-29T17:52:37.793Z",
                          "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                          "status" : "confirmed"
                        }, {
                          "conceptId" : "A09",
                          "conceptDescription" : "Billetes y Cheques de viajeros en poder de residentes",
                          "creationDatetime" : "2019-03-29T17:52:37.793Z",
                          "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                          "status" : "confirmed"
                        } ],
                        "totalItems" : 50
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      },
      "post" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Create a Concept",
        "description" : "This operation creates a Concept (Maker)",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConceptBody"
              },
              "example" : {
                "conceptId" : "A07",
                "conceptDescription" : "Depósitos de Residentes en el Exterior",
                "status" : "confirmed"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseWithHeader"
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSO00008",
                          "rMsg" : "Concept sucessfully created",
                          "paramsStatus" : [ 3497835947541 ]
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      }
    },
    "/admin/concept/{conceptId}" : {
      "get" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Get a Concept",
        "description" : "This operation gets a Concept",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "conceptId",
          "in" : "path",
          "description" : "Concept ID to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminConceptResponse"
                }
              },
              "application/json" : {
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSG00001",
                          "rMsg" : "Sucessfully Processed",
                          "paramsStatus" : null
                        } ]
                      },
                      "body" : {
                        "conceptId" : "A07",
                        "conceptDescription" : "Depósitos de Residentes en el Exterior",
                        "creationDatetime" : "2019-03-29T17:52:37.793Z",
                        "lastUpdateDatetime" : "2019-05-19T19:15:13.793Z",
                        "status" : "confirmed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      },
      "put" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Update a Concept",
        "description" : "This operation updates a Concept (Maker)",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "conceptId",
          "in" : "path",
          "description" : "Concept ID to update",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConceptBody"
              },
              "example" : {
                "conceptId" : "A07",
                "conceptDescription" : "Depósitos de Residentes en el Exterior",
                "status" : "confirmed"
              }
            }
          },
          "description" : "Concept Data to be updated",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSO00007",
                          "rMsg" : "Concept sucessfully modified",
                          "paramsStatus" : [ 4564564565656 ]
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      },
      "delete" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Delete a Concept",
        "description" : "This operation deletes a Concept",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "conceptId",
          "in" : "path",
          "description" : "Concept ID to delete",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseWithHeader"
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSO00008",
                          "rMsg" : "Concept sucessfully deleted",
                          "paramsStatus" : [ "349¿7835947541" ]
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      }
    },
    "/admin/concept/{conceptId}/approve" : {
      "put" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Approve a Concept's change",
        "description" : "This operation approves a Concept's change (Checker)",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "conceptId",
          "in" : "path",
          "description" : "Concept ID to approve",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "example" : "Approved"
            }
          },
          "description" : "Comments",
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSO00007",
                          "rMsg" : "Concept sucessfully approved",
                          "paramsStatus" : [ 4564564565656 ]
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      }
    },
    "/admin/concept/{conceptId}/reject" : {
      "put" : {
        "tags" : [ "Concept Management" ],
        "summary" : "Reject a Concept's change",
        "description" : "This operation rejects a Concept's change (Checker)",
        "parameters" : [ {
          "name" : "userToken",
          "in" : "header",
          "description" : "User token to work with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "conceptId",
          "in" : "path",
          "description" : "Concept ID to reject",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              },
              "example" : "Rejected"
            }
          },
          "description" : "Comments",
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "header" : {
                        "trxStatus" : "00000",
                        "trxMsg" : "OK",
                        "responseStatuses" : [ {
                          "rStatus" : "RSO00007",
                          "rMsg" : "Concept sucessfully rejected",
                          "paramsStatus" : [ 4564564565656 ]
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Check parameters!"
          },
          "401" : {
            "description" : "Not Authenticated"
          },
          "403" : {
            "description" : "Access token does not have the required scope"
          },
          "404" : {
            "description" : "Page Not Found. Please check the resource you are trying to reach"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ResponseStatus" : {
        "type" : "object",
        "description" : "Status in the response",
        "properties" : {
          "rStatus" : {
            "type" : "string",
            "example" : "RSG00001",
            "description" : "Result or Response Status"
          },
          "rMsg" : {
            "type" : "string",
            "example" : "Sucessfully Processed",
            "description" : "Internal Result or Response Status Message"
          },
          "paramsStatus" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 20190205121545
            }
          }
        }
      },
      "ResponseHeader" : {
        "type" : "object",
        "description" : "Response Header",
        "properties" : {
          "trxStatus" : {
            "type" : "string",
            "example" : "00000",
            "description" : "Transaction Status"
          },
          "trxMsg" : {
            "type" : "string",
            "example" : "OK",
            "description" : "Transaction Status Message"
          },
          "responseStatuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResponseStatus"
            }
          }
        }
      },
      "ResponseWithHeader" : {
        "type" : "object",
        "description" : "Response with header",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ResponseHeader"
          }
        }
      },
      "Concept" : {
        "type" : "object",
        "description" : "Concept",
        "properties" : {
          "conceptId" : {
            "type" : "string",
            "example" : "A07",
            "description" : "Concept ID"
          },
          "conceptDescription" : {
            "type" : "string",
            "example" : "Depósitos de residentes en el exterior",
            "description" : "Concept Description"
          },
          "creationDatetime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-03-21T11:12:40.995Z",
            "description" : "Creation Date Time"
          },
          "lastUpdateDatetime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-03-21T11:12:40.995Z",
            "description" : "Last Update Date Time"
          },
          "status" : {
            "type" : "string",
            "example" : "confirmed",
            "description" : "Concept Status"
          }
        }
      },
      "ConceptBody" : {
        "type" : "object",
        "description" : "Concept Body",
        "properties" : {
          "conceptId" : {
            "type" : "string",
            "example" : "A07",
            "description" : "Concept ID"
          },
          "conceptDescription" : {
            "type" : "string",
            "example" : "Depósitos de residentes en el exterior",
            "description" : "Concept Description"
          },
          "status" : {
            "type" : "string",
            "example" : "confirmed",
            "description" : "Concept Status"
          }
        }
      },
      "AdminConceptResponse" : {
        "type" : "object",
        "description" : "Admin Concept Response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResponseWithHeader"
        } ],
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/Concept"
          }
        }
      },
      "AdminConceptListResponse" : {
        "type" : "object",
        "description" : "Admin Concept List Response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResponseWithHeader"
        } ],
        "properties" : {
          "body" : {
            "type" : "object",
            "properties" : {
              "items" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Concept"
                }
              },
              "totalItems" : {
                "type" : "integer"
              }
            }
          }
        }
      }
    }
  }
}