{"openapi":"3.0.0","servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/SNET/foodTrans/1.0.0"}],"info":{"description":"This is the restful API of FoodTrans. It provides interfaces to information about the scanned food and recipies.","version":"1.0.0","title":"FoodTrans API","contact":{"email":"alancaschneider0610@gmail.com"}},"paths":{"/products":{"get":{"tags":["/products"],"summary":"Returns a list of product information profiles that match the specified search criteria.","operationId":"getProducts","description":"This call returns a list of product information profiles that match the specified search criteria. The search criteria are defined in the query parameter *searchString*. This parameter is matched agains the *productName*, *productCategory* and the *productID*, fields of the product information profile. The response consists of an array of items, as decribed in the *productProfile* schema.","parameters":[{"name":"searchString","in":"query","description":"Search criteria that are matched against the *productName*, *productCategory* and the *productID*, fields of the product information profile.","required":false,"schema":{"type":"string","example":"bioschnitzel-pute-00134"}}],"responses":{"200":{"description":"Returns all product information profiles contained in FoodTrans database that match the search criteria.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/productProfile"}}},"application/xml":{"schema":{"type":"array","xml":{"name":"product"},"items":{"$ref":"#/components/schemas/productProfile"}}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"post":{"tags":["/products"],"summary":"Adds a new product to FoodTrans and uploads the product Profile.","operationId":"addProduct","description":"The call adds a new product to FoodTrans by uploading its product Profile. The product Profile must follow the *product* schema. As a result of sucessful operation, the response contains the *Location* header attribute with the URI of he new product.","responses":{"201":{"description":"New product added and product Profile uploaded successfully.","headers":{"Location":{"description":"The URI of the added product Profile.","schema":{"type":"string"}}}},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}},"requestBody":{"description":"product Profile to be uploaded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/productProfile"}}}}},"put":{"tags":["/products"],"summary":"Updates the FoodTrans product Profile database with the list of product Profiles contained in the request.","operationId":"updateProducts","description":"This call is not allowed and therfore triggers a 405 (Method not allowed) status. This is to prevent that the products in the database get overwritten unintentionally.","responses":{"405":{"description":"It is not allowed to invoke a PUT request on this resource.","headers":{"Allow":{"description":"Is set to \"GET, POST\" in order to indicate to the client that \"GET\" and \"POST\" are the only methods allowed to be invoked on this resource.","schema":{"type":"string"}}}},"500":{"description":"Internal server error."}}},"delete":{"tags":["/products"],"summary":"Deletes the FoodTrans database of all product Profiles.","operationId":"deleteProducts","description":"This call is not allowed and therfore triggers a 405 (Method not allowed) status. This is to prevent that the products in the database get deleted unintentionally.","responses":{"405":{"description":"It is not allowed to invoke a DELETE request on this resource.","headers":{"Allow":{"description":"Is set to \"GET, POST\" in order to indicate to the client that \"GET\" and \"POST\" are the only methods allowed to be invoked on this resource.","schema":{"type":"string"}}}},"500":{"description":"Internal server error."}}}},"/products/{productId}":{"get":{"tags":["/products/{productId}"],"summary":"Returns the product profile of the product with the specified productId.","operationId":"getProduct","description":"The call delivers the profile of the product with the specified productId. The deliverd profile correspond the *product* schema.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product whose profile is to be returned","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/productProfile"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"put":{"tags":["/products/{productId}"],"summary":"Updates the profile of the product specified by productId.","operationId":"updateProduct","description":"The call updates the profile of a product specified by productId with the new profile carried in the request. The transmitted profile follows the *product* schema.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product whose profile is to be updated.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Resource updated successfully."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"delete":{"tags":["/products/{productId}"],"summary":"Deletes the profile of the product specified by productId.","operationId":"deleteProduct","description":"The call deletes the profile of the product specified by productId and removes it permanently from FoodTrans.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product which profile is to be deleted.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Product profile deleted successfully."},"400":{"description":"Bad input parameters."}}}},"/product/{productId}/producers":{"get":{"tags":["/product/{productId}/producers"],"summary":"Returns a list with an overview of all producers contained in the product profile of the product specified by productId.","operationId":"getProducers","description":"The call delivers an overview of all producers contained in the product profile of the product specified by productId. The producer overview is an array of items as defined by the *producer* schema. The list is sorted by the position in the supplychain of the product.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product for which the producers are to be delivered.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/supplyChain"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."}}}},"/product/{productId}/producers/{producerId}":{"get":{"tags":["/product/{productId}/producers/{producerId}"],"summary":"Returns a producer contained in the information profile of the product.","operationId":"getProducer","description":"The call delivers the producer specified by *producerId*. The producer is contained in the information profile of the product specified by *productId*. The delivered producer follows the *producerProfile* schema definition.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product from whose profile the producer is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"producerId","in":"path","description":"Identifier of the producer that is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/producerProfile"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"delete":{"tags":["/product/{productId}/producers/{producerId}"],"summary":"Removes the producer from the profile of the product.","operationId":"removeProducerFromProduct","description":"The call removes the producer specified by *producerId* from the profile of the product specified by *productId*. Note that the producer is not deleted but remains stored in the FoodTrans producer database.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product from whose profile the producer is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"producerId","in":"path","description":"Identifier of the producer that is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Producer removed from the product profile."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}}},"/product/{productId}/reviews":{"get":{"tags":["/product/{productId}/reviews"],"summary":"Returns a list with an overview of all reviews contained in the product profile of the product specified by productId.","operationId":"getReviews","description":"The call delivers an overview of all reviews contained in the product profile of the product specified by productId. The review overview is an array of items as defined by the *review* schema. The list is sorted by the position in the supplychain of the product.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product for which the reviews are to be delivered.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/reviewInbox"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."}}}},"/product/{productId}/reviews{reviewId}":{"get":{"tags":["/product/{productId}/reviews{reviewId}"],"summary":"Returns a review contained in the information profile of the product.","operationId":"getReview","description":"The call delivers the review specified by *reviewId*. The review is contained in the information profile of the product specified by *productId*. The delivered review follows the *reviewItem* schema definition.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product from whose profile the review is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"reviewId","in":"path","description":"Identifier of the review that is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/reviewItem"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"delete":{"tags":["/product/{productId}/reviews{reviewId}"],"summary":"Removes the review from the profile of the product.","operationId":"removeReviewFromProduct","description":"The call removes the review specified by *reviewId* from the profile of the product specified by *productId*. Note that the review is not deleted but remains stored in the FoodTrans product database.","parameters":[{"name":"productId","in":"path","description":"Identifier of the product from whose profile the review is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"reviewId","in":"path","description":"Identifier of the review that is to be fetched.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Review removed from the product profile."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}}},"/producers":{"get":{"tags":["/producers"],"summary":"Returns a list of producer information profiles that match the specified search criteria.","operationId":"getAllProducers","description":"This call returns a list of producer information profiles that match the specified search criteria. The search criteria are defined in the query parameter *searchString*. This parameter is matched agains the *producerName* and the *producerID*, fields of the producer information profile. The response consists of an array of items, as decribed in the *producerProfile* schema.","parameters":[{"name":"searchString","in":"query","description":"Search criteria that are matched against the *producerName* and the *producerID*, fields of the producer information profile.","required":false,"schema":{"type":"string","example":"gefluegelhofmaier-004526"}}],"responses":{"200":{"description":"Returns all producer information profiles contained in FoodTrans database that match the search criteria.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/producerProfile"}}},"application/xml":{"schema":{"type":"array","xml":{"name":"producer"},"items":{"$ref":"#/components/schemas/producerProfile"}}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"post":{"tags":["/producers"],"summary":"Adds a new producer to FoodTrans and uploads the producer Profile.","operationId":"addProducer","description":"The call adds a new producer to FoodTrans by uploading its producer Profile. The producer Profile must follow the *producerProfile* schema. As a result of sucessful operation, the response contains the *Location* header attribute with the URI of he new producer.","responses":{"201":{"description":"New producer added and producer Profile uploaded successfully.","headers":{"Location":{"description":"The URI of the added producer Profile.","schema":{"type":"string"}}}},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}},"requestBody":{"description":"producer Profile to be uploaded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/producerProfile"}}}}}},"/reviews":{"post":{"tags":["/reviews"],"summary":"Posts new review for certain product","operationId":"postReview","description":"The call posts a new review to the FoodTrans database. The database stores the review, and the backend delivers the review to the profile of the user who sent the review and the product profile of the reviewed product.","requestBody":{"description":"Contains the review message and rating to be uploaded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/reviewInbox"}}}},"responses":{"201":{"description":"OK","headers":{"Location":{"description":"The URI of the added review. The URI of the reviews includes the path of the user who has submitted the review, i.e. /users/{userId}/reviews/{reviewId}.","schema":{"type":"string"}}}},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}}},"/users":{"get":{"tags":["/users"],"summary":"Returns a list of user profiles that fulfill some search criteria.","operationId":"getUsers","description":"The call delivers a list of user profiles that match with some search criteria. The search criteria are defined in the query parameter *searchString*. This parameter is matched against the *userName*, *firstName* and *lastName* fields of the user profile. The response contains an array of items as defined by the *userProfile* schema.","parameters":[{"name":"searchString","in":"query","description":"Search criteria that are matched against the *userName*, *firstName* and *lastName* fields of user profiles.","required":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Returns all user profiles contained in FoodTrans that match the search criteria.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/userProfile"}}},"application/xml":{"schema":{"type":"array","xml":{"name":"user"},"items":{"$ref":"#/components/schemas/userProfile"}}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"post":{"tags":["/users"],"summary":"Adds a new user to FoodTrans and uploads her/his user profile.","operationId":"addUser","description":"The call adds a new user to FoodTrans by uploading its user profile. The user profile must follow the *userProfile* schema. As a result of sucessful operation, the response contains the *Location* header attribute with the URI of he new user.","responses":{"201":{"description":"New user added and user profile uploaded successfully.","headers":{"Location":{"description":"The URI of the added user profile.","schema":{"type":"string"}}}},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}},"requestBody":{"description":"User profile to be uploaded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/userProfile"}}}}}},"/users/{userId}":{"get":{"tags":["/users/{userId}"],"summary":"Returns the user profile of the user with the specified userId.","operationId":"getUser","description":"The call delivers the profile of the user with the specified userId. The deliverd profile correspond the *userProfile* schema.","parameters":[{"name":"userId","in":"path","description":"Identifier of the user whose profile is to be returned","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/userProfile"}}}},"204":{"description":"No content."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}},"put":{"tags":["/users/{userId}"],"summary":"Updates the user of the product specified by userId.","operationId":"updateUser","description":"The call updates the profile of a user specified by productId with the new profile carried in the request. The transmitted profile follows the *user* schema.","parameters":[{"name":"userId","in":"path","description":"Identifier of the user whose profile is to be updated.","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Resource updated successfully."},"400":{"description":"Bad input parameter."},"500":{"description":"Internal server error."}}}}},"components":{"schemas":{"userProfile":{"type":"object","required":["userId","userName","email"],"properties":{"userId":{"type":"integer","example":34716290},"userName":{"type":"string","example":"lisa_maier"},"firstName":{"type":"string","example":"Lisa"},"lastName":{"type":"string","example":"Maier"},"email":{"type":"string","format":"url","example":"mailto:lisa.maiers@gmx.de"},"bonuspoints":{"type":"number","format":"integer","example":180},"favorites":{"type":"array","items":{"type":"integer"},"example":[91678259,19002347,66126211]}}},"producerProfile":{"type":"object","required":["producerId","producerName","location"],"properties":{"producerId":{"type":"integer","format":"int64","example":78128923},"producerName":{"type":"string","example":"Biohof Müller"},"location":{"type":"string","example":"Möhringen, Nähe Stuttgart"},"ownSellingPoint":{"type":"boolean","example":true},"hygeneCategory":{"type":"string","example":"excellent"},"bio":{"type":"boolean","example":true},"seals":{"type":"string","example":"Fair Trade, Vegan"}}},"supplyChain":{"type":"array","items":{"$ref":"#/components/schemas/producerProfile"}},"productProfile":{"type":"object","required":["productId","productCategory","productName","producerId","price"],"properties":{"producerIds":{"type":"array","items":{"type":"integer"},"example":[91678259,19002347,66126211]},"productId":{"type":"integer","format":"int64","example":13547623},"productCategory":{"type":"string","example":"meat"},"productName":{"type":"string","example":"chicken"},"price":{"type":"number","format":"double","example":4.5},"numberSupplyChainStops":{"type":"integer","example":3},"nutritionalValues":{"type":"object","properties":{"caloriesPerHundredGram":{"type":"number","format":"double","example":40.0},"proteinsPerHundredGram":{"type":"number","format":"double","example":4.6},"fatsPerHundedGram":{"type":"number","format":"double","example":3.2},"containsVitamins":{"type":"string","example":"B, D, G"}}}}},"reviewItem":{"type":"object","required":["reviewId","userId","userName","productId","reviewRating"],"properties":{"reviewId":{"type":"integer","format":"int64","example":334789},"userId":{"type":"integer","format":"int64","example":78128923},"userName":{"type":"string","example":"lisa_maier"},"productId":{"type":"integer","format":"int64","example":13547623},"reviewTimestamp":{"type":"string","format":"date-time","example":"2019-03-12T15:20:13Z"},"reviewRating":{"type":"number","minimum":0,"exclusiveMinimum":true,"maximum":5,"example":4},"reviewSubject":{"type":"string","example":"Hochqualitatives Bio-Fleisch von Lokalproduzent"},"reviewText":{"type":"string","example":"Tolles Geschmackserlebnis bei Bio-Hähnchenfleisch. Wir kochten ein leckeres Schnitzel, welches die gesamte Familie begeistert. Super Qualität und lokal produziert, was will man mehr!"}}},"reviewInbox":{"type":"array","items":{"$ref":"#/components/schemas/reviewItem"}}}}}