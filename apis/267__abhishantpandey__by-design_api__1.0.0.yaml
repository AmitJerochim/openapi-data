openapi: 3.0.0
info:
  version: 1.0.0
  title: ByDesign API
  description: >-
    The ByDesign API is a REST compatibility layer for the SOAP interface of the
    ByDesign ERP. Its clients include IDM, SOA and EBS. The API implements a
    transitional design, intended to provide a foundation for future
    SOAP-to-REST migration. Therefore it is chiefly a REST API, in which SOAP
    messages are supported as a resource.
servers:
  - url: 'https://bydesign.dev.gateway.beachbody.com'
    description: Development
  - url: 'https://bydesign.qa.gateway.beachbody.com'
    description: QA
paths:
  /order-info:
    get:
      tags:
        - bydesign
      summary: Get Order Info
      description: >-
        Returns information about the order with a &lt;TBBOrderID&gt; value that
        matches the tbb-order-id query parameter. Note: for legacy
        compatibility, &lt;TBBOrderID&gt; is also received as a child of
        &lt;CSGetOrderInfo&gt; in the request body. In all cases the
        &lt;TBBOrderID&gt; value is ignored in favour of the tbb-order-id
        parameter, and the resource will return a 400 error if tbb-order-id is
        not provided.
      operationId: GetOrderInfo
      parameters:
        - $ref: '#/components/parameters/tbb-order-id'
      responses:
        '200':
          $ref: '#/components/responses/GetOrderResponseForSuccess'
        '400':
          $ref: '#/components/responses/GetOrderResponseForBadRequest'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '504':
          $ref: '#/components/responses/NoResponseReceivedResponse'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrderInfoByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /orders:
    post:
      tags:
        - bydesign
      summary: Create Order
      description: Send request to Bydesign system to create an Order
      operationId: CreateOrder
      requestBody:
        $ref: '#/components/requestBodies/CreateOrderRequestPayload'
      responses:
        '200':
          $ref: '#/components/responses/CreateOrderResponseForSuccess'
        '400':
          $ref: '#/components/responses/CreateOrderResponseForBadRequest'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '504':
          $ref: '#/components/responses/NoResponseReceivedResponse'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateOrderByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /orders/updates:
    post:
      tags:
        - bydesign
      summary: Update Order
      description: Send request to Bydesign system to create an Order
      operationId: UpdateOrder
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrderRequestPayload'
      responses:
        '200':
          $ref: '#/components/responses/UpdateOrderResponseForSuccess'
        '400':
          $ref: '#/components/responses/UpdateOrderResponseForBadRequest'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '504':
          $ref: '#/components/responses/NoResponseReceivedResponse'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrderByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /skus:
    post:
      tags:
        - bydesign
      summary: Create Update SKU
      description: Send request to Bydesign system to create update SKU
      operationId: CreateUpdateSKU
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateSKUPayload'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateSKUResponseForSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateSKUResponseForBadRequest'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '504':
          $ref: '#/components/responses/NoResponseReceivedResponse'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateUpdateSKUByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /sponsor:
    put:
      tags:
        - bydesign
      summary: Update Sponsor
      description: This API is used to change the sponsor (Coach) for a user account.
      operationId: UpdateSponsor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSponsorRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSponsorResponse'
        '400':
          description: User passed invalid input to method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchema'
              example:
                responseCode: 0
                responseMessage: >-
                  JSON schema validation failure, Input JSON data does not match
                  with defined schema
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeoutError'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateSponsorByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /useraccount:
    post:
      tags:
        - bydesign
      summary: Create Coach/Customer
      description: >-
        The purpose of this API is to syndicate the Coach/Customer data from IDM
        to Bydesign (/api/bydesign/account)
      operationId: CreateCoach
      requestBody:
        $ref: '#/components/requestBodies/CreateCoachRequestPayload'
      responses:
        '200':
          $ref: '#/components/responses/CreateCoachResponse'
        '400':
          description: User passed invalid input to method
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSchema'
              examples:
                text/xml:
                  value: >-
                    <soap:Envelope
                    xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                    xmlns="http://www.securefreedom.com/"> <soap:Body>
                    <CSCreateCoachResponse> <CSCreateCoachResult>
                    <RequestID>0</RequestID> <Success>0</Success>
                    <Message>Missing Mandatory Field</Message>
                    <TBBGUID>xxxxxxxxxxxxxxxx</TBBGUID> </CSCreateCoachResult>
                    </CSCreateCoachResponse> </soap:Body> </soap:Envelope>
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorForCreateCoach'
        '504':
          $ref: '#/components/responses/GatewayTimeoutErrorForCreateCoach'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateCoachByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    put:
      tags:
        - bydesign
      summary: Update Coach/Customer
      description: >-
        The purpose of this API is to update the Coach/Customer data from IDM to
        Bydesign (/api/bydesign/account)
      operationId: UpdateCoach
      requestBody:
        $ref: '#/components/requestBodies/UpdateCoachRequestPayload'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCoachResponse'
        '400':
          description: User passed invalid input to method
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSchema'
              examples:
                text/xml:
                  value: >-
                    <soap:Envelope
                    xmlns:soap="http://www.w3.org/2003/05/soap-envelope"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <soap:Body> <CSUpdateCoachResponse
                    xmlns="http://www.securefreedom.com/"> <CSUpdateCoachResult>
                    <RequestID>0</RequestID> <Success>1</Success>
                    <Message>Customer successfully updated</Message>
                    <TBBGUID>da2deae1-faea-4976-b337-5308d584f712</TBBGUID>
                    </CSUpdateCoachResult> </CSUpdateCoachResponse> </soap:Body>
                    </soap:Envelope>
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorForCreateCoach'
        '504':
          $ref: '#/components/responses/GatewayTimeoutErrorForCreateCoach'
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateCoachByDesignFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
components:
  responses:
    GetOrderResponseForBadRequest:
      description: Bad Request. (Incorrect XML)
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/BadRequest'
          examples:
            xml:
              value: Bad Request
    GetOrderResponseForSuccess:
      description: successful operation
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSGetOrderInfoResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <CSGetOrderInfoResponse> <CSGetOrderInfoResult>
                <RequestID>0</RequestID> <Success>1</Success>
                <TBBOrderID>93705123</TBBOrderID> <OrderID>89045520</OrderID>
                <TBBGUID>f4792ad2-92a3-4e0a-abc3-8b1f65fad89d</TBBGUID>
                <CoachDID>1637710</CoachDID> <CustomerDID/>
                <BonusDate>2018-12-19T00:00:00</BonusDate>
                <Status>Posted</Status>
                <TotalCommissions>0.0000</TotalCommissions>
                <TotalSubscriptionCommissions>0.0000</TotalSubscriptionCommissions>
                <TotalFastStartAmount>0.0000</TotalFastStartAmount>
                <TotalCV>90.0000</TotalCV> <TotalPV>90.0000</TotalPV>
                <OrderDetails> <OrderDetail>
                <TBBOrderLineNumber>1</TBBOrderLineNumber>
                <SKU>MDSHK0402N1E103</SKU> <Quantity>1</Quantity>
                <Commissions>0.0000</Commissions>
                <SubscriptionCommissions>0.0000</SubscriptionCommissions>
                <FastStartAmount>0.0000</FastStartAmount> <CV>90.0000</CV>
                <PV>90.0000</PV> <HDTriggerItem>false</HDTriggerItem>
                </OrderDetail> </OrderDetails> </CSGetOrderInfoResult>
                </CSGetOrderInfoResponse>
    CreateOrderResponseForSuccess:
      description: successful operation
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSCreateOrderResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSCreateOrderResponse>
                <CSCreateOrderResult> <RequestID>0</RequestID>
                <Success>1</Success> <Message>Order Created
                Successfully</Message> <OrderID>93799427</OrderID>
                <CoachDID>1804814</CoachDID> <CustomerDID>0</CustomerDID>
                <BonusDate>2019-07-02T00:00:00</BonusDate> <PeriodText>WE
                07/03/19</PeriodText> <OrderDetails> <CreateOrderDetail>
                <TBBOrderLineNumber>1</TBBOrderLineNumber>
                <SKU>MDSHK0404V1F101</SKU> <Commissions>0.0000</Commissions>
                <SubscriptionCommissions>0.0000</SubscriptionCommissions>
                <FastStartAmount>0.0000</FastStartAmount> <CV>90.0000</CV>
                <PV>90.0000</PV> </CreateOrderDetail> </OrderDetails>
                </CSCreateOrderResult> </CSCreateOrderResponse>
    CreateOrderResponseForBadRequest:
      description: Missing TBBGUID or TBBOrderId or SKU for OrderLine
      content:
        text/xml:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CSCreateOrderResponse'
              - $ref: '#/components/schemas/BadRequest'
          examples:
            text/xml:
              summary: Missing TBBGUID or TBBOrderId or SKU for OrderLine
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSCreateOrderResponse>
                <CSCreateOrderResult> <RequestID>0</RequestID>
                <Success>0</Success> <Message>TBBGUID is Required.</Message>
                <OrderID>0</OrderID> <BonusDate>0001-01-01T00:00:00</BonusDate>
                </CSCreateOrderResult> </CSCreateOrderResponse>
    UpdateOrderResponseForSuccess:
      description: successful operation
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSUpdateOrderResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSUpdateOrderResponse>
                <CSUpdateOrderResult> <RequestID>0</RequestID>
                <Success>1</Success> <Message>Order Updated
                Successfully</Message> <OrderID>93799427</OrderID>
                <CoachDID>1804814</CoachDID> <CustomerDID>0</CustomerDID>
                <BonusDate>2019-07-02T00:00:00</BonusDate> <PeriodText>WE
                07/03/19</PeriodText> <OrderDetails> <UpdateOrderDetail>
                <TBBOrderLineNumber>1</TBBOrderLineNumber>
                <SKU>MDSHK0404V1F101</SKU> <Commissions>0.0000</Commissions>
                <SubscriptionCommissions>0.0000</SubscriptionCommissions>
                <FastStartAmount>0.0000</FastStartAmount> <CV>90.0000</CV>
                <PV>90.0000</PV> </UpdateOrderDetail> </OrderDetails>
                </CSUpdateOrderResult> </CSUpdateOrderResponse>
    UpdateOrderResponseForBadRequest:
      description: Missing TBBOrderId or SKU for OrderLine
      content:
        text/xml:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CSUpdateOrderResponse'
              - $ref: '#/components/schemas/BadRequest'
          examples:
            text/xml:
              summary: Missing TBBOrderId or SKU for OrderLine
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSUpdateOrderResponse>
                <CSUpdateOrderResult> <RequestID>0</RequestID>
                <Success>0</Success> <Message>TBBOrderId is Required.</Message>
                <OrderID>0</OrderID> <BonusDate>0001-01-01T00:00:00</BonusDate>
                </CSUpdateOrderResult> </CSUpdateOrderResponse>
    CreateUpdateSKUResponseForSuccess:
      description: successful operation
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSCreateUpdateSKUResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <CSCreateUpdateSKUResponse> <CSCreateUpdateSKUResult>
                <RequestID>0</RequestID> <Success>1</Success> <Message />
                <Product> <ProductID>MDTESTSKU01407</ProductID>
                <Success>1</Success> <Message>SKU successfully updated</Message>
                </Product> </CSCreateUpdateSKUResult>
                </CSCreateUpdateSKUResponse>
    CreateUpdateSKUResponseForBadRequest:
      description: Missing ProductId for Product
      content:
        text/xml:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CSCreateUpdateSKUResponse'
              - $ref: '#/components/schemas/BadRequest'
          examples:
            text/xml:
              summary: Missing ProductId for Product.
              value: >-
                <CSCreateUpdateSKUResponse> <CSCreateUpdateSKUResult>
                <RequestID>0</RequestID> <Success>0</Success> <Message>See
                Product Line responses for details.</Message> <Product>
                <Success>0</Success> <Message>ProductId is Required.</Message>
                </Product> </CSCreateUpdateSKUResult>
                </CSCreateUpdateSKUResponse>
    UpdateSponsorResponse:
      description: Returns the response from BYD for Update Sponsor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BYDUpdateSponsorResponse'
    CreateCoachResponse:
      description: Returns the response from BYD for Create Coach
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/BYDCreateCoachResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <soap:Envelope
                xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns="http://www.securefreedom.com/"> <soap:Body>
                <CSCreateCoachResponse> <CSCreateCoachResult>
                <RequestID>0</RequestID> <Success>1</Success> <Message>Customer
                successfully created</Message>
                <TBBGUID>da2deae1-faea-4976-b337-5308d584f712</TBBGUID>
                <CustomerDID>15946462</CustomerDID>
                <SponsorDID>690277</SponsorDID> <CoachDID/>
                </CSCreateCoachResult> </CSCreateCoachResponse> </soap:Body>
                </soap:Envelope>
    UpdateCoachResponse:
      description: Returns the response from BYD for Update Coach
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/BYDUpdateCoachResponse'
          examples:
            text/xml:
              summary: Successful operation
              value: >-
                <soap:Envelope
                xmlns:soap="http://www.w3.org/2003/05/soap-envelope"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soap:Body> <CSUpdateCoachResponse
                xmlns="http://www.securefreedom.com/"> <CSUpdateCoachResult>
                <RequestID>0</RequestID> <Success>1</Success> <Message>Customer
                successfully updated</Message>
                <TBBGUID>da2deae1-faea-4976-b337-5308d584f712</TBBGUID>
                </CSUpdateCoachResult> </CSUpdateCoachResponse> </soap:Body>
                </soap:Envelope>
    ForbiddenResponse:
      description: 'Missing api key, or sent from unapproved IP address'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Forbidden'
          example:
            message: Forbidden
        text/xml:
          schema:
            $ref: '#/components/schemas/Forbidden'
          examples:
            text/xml:
              summary: Fobidden.
              value: <message>Forbidden</message>
    InternalServerErrorResponse:
      description: General catch-all error when server side throws any exception
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    NoResponseReceivedResponse:
      description: No response recevied from upstream system. The request will be retried.
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/NoResponseReceived'
          example: >-
            The server encountered an unexpected condition which prevented it
            from fulfilling the request.  Check the service or try again.
    InternalServerError:
      description: General catch-all error when server side throws any exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.  Check the service or try again.
    GatewayTimeoutError:
      description: No response received from upstream system.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.  Check the service or try again.
    InternalServerErrorForCreateCoach:
      description: General catch-all error when server side throws any exception
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            text/xml:
              summary: Internal Server Error.
              value: >-
                <soap:Envelope
                xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns="http://www.securefreedom.com/"> <soap:Body>
                <CSCreateCoachResponse> <CSCreateCoachResult>
                <RequestID>0</RequestID> <Success>0</Success> <Message>The
                server encountered an unexpected condition which prevented it
                from fulfilling the request.  Check the service or try
                again.</Message> <TBBGUID>xxxxxxxxxxxxxxxx</TBBGUID>
                </CSCreateCoachResult> </CSCreateCoachResponse> </soap:Body>
                </soap:Envelope>
    GatewayTimeoutErrorForCreateCoach:
      description: Gateway Timeout reading response from ByDesign Service.
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            text/xml:
              value: >-
                <soap:Envelope
                xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns="http://www.securefreedom.com/"> <soap:Body>
                <CSCreateCoachResponse> <CSCreateCoachResult>
                <RequestID>0</RequestID> <Success>0</Success> <Message>Gateway
                Timeout reading response from ByDesign Service.</Message>
                </CSCreateCoachResult> </CSCreateCoachResponse> </soap:Body>
                </soap:Envelope>
  schemas:
    InvalidSchema:
      type: object
      properties:
        responseCode":
          type: number
          example: 0
        responseMessage:
          type: string
          example: >-
            JSON schema validation failure, Input JSON data does not match with
            defined schema
    Error:
      properties:
        errorMessage:
          type: string
    NoResponseReceived:
      type: string
      description: No Response Received.
      xml:
        name: NoResponseReceived
    Forbidden:
      type: string
      description: Forbidden Access.
      xml:
        name: Forbidden
    InternalServerError:
      type: string
      description: Internal server error.
      xml:
        name: NoResponseReceived
    BadRequest:
      type: string
      description: Bad Request for Incorrect XML.
      xml:
        name: BadRequest
    CSCreateUpdateSKURequest:
      type: object
      description: Request payload for Create Update SKU
      properties:
        input:
          $ref: '#/components/schemas/CSCreateUpdateSKUInput'
          minimum: 0
          maximum: 1
      xml:
        name: CSCreateUpdateSKU
      required:
        - input
    CSCreateUpdateSKUInput:
      type: object
      description: Input object for CSCreateUpdateSKURequest
      properties:
        Product:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          minimum: 0
      xml:
        name: input
    Product:
      type: object
      properties:
        ProductID:
          type: string
          minimum: 0
          maximum: 1
        Description:
          type: string
          minimum: 1
          maximum: 1
        CurrencyType:
          type: string
          minimum: 1
          maximum: 1
        IsVBCCustLeadRequirementFlag:
          type: number
          minimum: 1
          maximum: 1
        IsShakeology:
          type: number
          minimum: 1
          maximum: 1
        IsBusinessServiceFee:
          type: number
          minimum: 1
          maximum: 1
        IsFastStart:
          type: number
          minimum: 1
          maximum: 1
        Retail:
          $ref: '#/components/schemas/SKUVolumes'
          minimum: 1
          maximum: 1
        Wholesale:
          $ref: '#/components/schemas/SKUVolumes'
          minimum: 1
          maximum: 1
        Club:
          $ref: '#/components/schemas/SKUVolumes'
          minimum: 1
          maximum: 1
      xml:
        name: Product
      required:
        - ProductID
    SKUVolumes:
      type: object
      description: SKUVolumes of Product object
      properties:
        CV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        PV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        Commissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        SubscriptionCommissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        FastStartAmount:
          type: number
          format: float
          minimum: 1
          maximum: 1
      xml:
        name: SKUVolumes
    CSCreateUpdateSKUResponse:
      type: object
      description: Response object fror CreateUpdateSKU API
      properties:
        CSCreateUpdateSKUResult:
          $ref: '#/components/schemas/CSCreateUpdateSKUResult'
      xml:
        name: CSCreateUpdateSKUResponse
    CSCreateUpdateSKUResult:
      type: object
      description: object of CSCreateUpdateSKUResponse
      properties:
        RequestID:
          type: number
          minimum: 1
          maximum: 1
        Success:
          type: number
          minimum: 1
          maximum: 1
        Message:
          type: string
          minimum: 0
          maximum: 1
        Product:
          type: array
          items:
            $ref: '#/components/schemas/CSCreateUpdateSKUOutputProduct'
          minimum: 0
      xml:
        name: CSCreateUpdateSKUResult
    CSCreateUpdateSKUOutputProduct:
      type: object
      properties:
        ProductID:
          type: string
          minimum: 0
          maximum: 1
        Success:
          type: number
          minimum: 1
          maximum: 1
        Message:
          type: string
          minimum: 0
          maximum: 1
      xml:
        name: Product
    CSGetOrderInfoRequest:
      type: object
      description: Request payload for the Get OrderInfo
      properties:
        TBBOrderID:
          type: string
      xml:
        name: CSGetOrderInfo
      required:
        - TBBOrderID
    CSGetOrderInfoResponse:
      type: object
      description: Returns the Get OrderInfo Response
      properties:
        CSGetOrderInfoResult:
          $ref: '#/components/schemas/CSGetOrderInfoResult'
      xml:
        name: CSGetOrderInfoResponse
    CSGetOrderInfoResult:
      type: object
      properties:
        RequestID:
          type: integer
        Success:
          type: integer
        Message:
          type: string
        TBBOrderID:
          type: string
          minimum: 0
          maximum: 1
        OrderID:
          type: integer
          minimum: 1
          maximum: 1
        TBBGUID:
          type: string
          minimum: 1
          maximum: 1
        CoachDID:
          type: string
          minimum: 0
          maximum: 1
        CustomerDID:
          type: string
          minimum: 0
          maximum: 1
        BonusDate:
          type: string
          format: date-time
        Status:
          type: string
          minimum: 0
          maximum: 1
        TotalCommissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        TotalSubscriptionCommissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        TotalFastStartAmount:
          type: number
          format: float
          minimum: 1
          maximum: 1
        TotalCV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        TotalPV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        OrderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'
          minimum: 0
    OrderDetail:
      type: object
      properties:
        TBBOrderLineNumber:
          type: integer
          minimum: 1
          maximum: 1
        SKU:
          type: string
          minimum: 0
          maximum: 1
        Quantity:
          type: integer
          minimum: 1
          maximum: 1
        Commissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        SubscriptionCommissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        FastStartAmount:
          type: number
          format: float
        CV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        PV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        HDTriggerItem:
          type: number
          format: float
          minimum: 1
          maximum: 1
    CSUpdateOrder:
      type: object
      properties:
        TBBOrderID:
          type: string
          minimum: 1
          maximum: 1
        input:
          $ref: '#/components/schemas/CSCreateOrderInput'
      xml:
        name: CSUpdateOrder
      required:
        - TBBOrderID
    CSCreateOrder:
      type: object
      properties:
        TBBGUID:
          type: string
          minimum: 1
          maximum: 1
        TBBOrderID:
          type: string
          minimum: 1
          maximum: 1
        input:
          $ref: '#/components/schemas/CSCreateOrderInput'
      xml:
        name: CSCreateOrder
      required:
        - TBBGUID
        - TBBOrderID
    CSCreateOrderInput:
      type: object
      properties:
        BonusDate:
          type: string
          format: date
          minimum: 1
          maximum: 1
        PriceType:
          type: string
          minimum: 1
          maximum: 1
        IsReturnOrder:
          type: number
          minimum: 1
          maximum: 1
        ReturnOrderOriginalTBBOrderID:
          type: string
          minimum: 1
          maximum: 1
        CurrencyType:
          type: string
          minimum: 1
          maximum: 1
        CustomerDID:
          type: string
          minimum: 1
          maximum: 1
        CoachDID:
          type: string
          minimum: 1
          maximum: 1
        EBSOrderType:
          type: string
          minimum: 1
          maximum: 1
        ZeroOutShakeologyItems:
          type: number
          minimum: 1
          maximum: 1
        OrderStatus:
          type: string
          minimum: 1
          maximum: 1
        OrderDate:
          type: string
          format: date
          minimum: 1
          maximum: 1
        BillingAddress:
          $ref: '#/components/schemas/Address'
        ShippingAddress:
          $ref: '#/components/schemas/Address'
        MarketShow:
          type: string
          minimum: 1
          maximum: 1
        OriginalContinuityTBBOrderID:
          type: string
          minimum: 1
          maximum: 1
        OrderLines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
          minimum: 1
          maximum: 1
        IsPersonalUse:
          type: number
          minimum: 1
          maximum: 1
      xml:
        name: input
      required:
        - PriceType
        - OrderLines
    Address:
      type: object
      properties:
        Name:
          type: string
          minimum: 1
          maximum: 1
        Street1:
          type: string
          minimum: 1
          maximum: 1
        Street2:
          type: string
          minimum: 1
          maximum: 1
        City:
          type: string
          minimum: 1
          maximum: 1
        State:
          type: string
          minimum: 1
          maximum: 1
        PostalCode:
          type: string
          minimum: 1
          maximum: 1
        County:
          type: string
          minimum: 1
          maximum: 1
        Country:
          type: string
          minimum: 1
          maximum: 1
      xml:
        name: Address
    OrderLine:
      type: object
      properties:
        TBBOrderLineNumber:
          type: number
          minimum: 1
          maximum: 1
        OriginatingTBBOrderLineNumber:
          type: number
          minimum: 1
          maximum: 1
        SKU:
          type: string
          minimum: 1
          maximum: 1
        Quantity:
          type: number
          minimum: 1
          maximum: 1
        Commissions:
          type: number
          format: double
          minimum: 1
          maximum: 1
        SubscriptionCommissions:
          type: number
          format: double
          minimum: 1
          maximum: 1
        FastStartAmount:
          type: number
          format: double
          minimum: 1
          maximum: 1
        CV:
          type: number
          format: double
          minimum: 1
          maximum: 1
        PV:
          type: number
          format: double
          minimum: 1
          maximum: 1
        HDTriggerItem:
          type: number
          minimum: 1
          maximum: 1
      xml:
        name: OrderLine
      required:
        - OrderLine
    CSCreateOrderResponse:
      type: object
      properties:
        CSCreateOrderResult:
          $ref: '#/components/schemas/CSCreateOrderResult'
      xml:
        name: CSCreateOrderResponse
    CSCreateOrderResult:
      type: object
      properties:
        RequestID:
          type: number
          minimum: 1
          maximum: 1
        Success:
          type: number
          minimum: 1
          maximum: 1
        Message:
          type: number
          minimum: 1
          maximum: 1
        OrderID:
          type: number
          minimum: 1
          maximum: 1
        CoachDID:
          type: number
          minimum: 1
          maximum: 1
        CustomerDID:
          type: number
          minimum: 1
          maximum: 1
        BonusDate:
          type: number
          minimum: 1
          maximum: 1
        PeriodText:
          type: number
          minimum: 1
          maximum: 1
        OrderDetails:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderDetail'
      xml:
        name: CSCreateOrderResult
    CSUpdateOrderResponse:
      $ref: '#/components/schemas/CSCreateOrderResponse'
      xml:
        name: CSUpdateOrderResponse
    CSUpdateOrderResult:
      $ref: '#/components/schemas/CSCreateOrderResult'
      xml:
        name: CSUpdateOrderResult
    UpdateOrderDetail:
      $ref: '#/components/schemas/CreateOrderDetail'
      xml:
        name: UpdateOrderDetail
    CreateOrderDetail:
      type: object
      properties:
        TBBOrderLineNumber:
          type: integer
          minimum: 1
          maximum: 1
        SKU:
          type: string
          minimum: 0
          maximum: 1
        Quantity:
          type: integer
          minimum: 1
          maximum: 1
        Commissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        SubscriptionCommissions:
          type: number
          format: float
          minimum: 1
          maximum: 1
        FastStartAmount:
          type: number
          format: float
        CV:
          type: number
          format: float
          minimum: 1
          maximum: 1
        PV:
          type: number
          format: float
          minimum: 1
          maximum: 1
      xml:
        name: CreateOrderDetail
    UpdateSponsorRequest:
      type: object
      properties:
        userType:
          type: string
        sponsorRepId:
          type: string
        customerId:
          type: string
      example:
        userType: REGISTEREDUSER
        sponsorRepId: '11073'
        customerId: '15780275'
      required:
        - userType
        - sponsorRepId
        - customerId
    BYDUpdateSponsorResponse:
      type: object
      properties:
        responseCode:
          type: number
        responseMessage:
          type: string
      example:
        responseCode: 1
        responseMessage: Customer moved successfully
    BYDUpdateCoachResponse:
      type: object
      properties:
        Envelope:
          type: object
          properties:
            Body:
              $ref: '#/components/schemas/CSUpdateCoachResponse'
    CSUpdateCoachResponse:
      type: object
      properties:
        CSUpdateCoachResult:
          type: object
          properties:
            RequestID:
              type: string
            Success:
              type: number
            Message:
              type: string
            TBBGUID:
              type: string
    BYDCreateCoachResponse:
      type: object
      properties:
        Envelope:
          type: object
          properties:
            Body:
              $ref: '#/components/schemas/CSCreateCoachResponse'
    CSCreateCoachResponse:
      type: object
      properties:
        CSCreateCoachResult:
          type: object
          properties:
            RequestID:
              type: string
            Success:
              type: number
            Message:
              type: string
            TBBGUID:
              type: string
            CustomerDID:
              type: string
            SponsorDID:
              type: string
            CoachDID:
              type: string
    UpdateCoachSoapEnvelope:
      type: object
      properties:
        'soap:Envelope':
          type: object
          properties:
            'soap:Body':
              type: object
              properties:
                CSCreateCoach:
                  $ref: '#/components/schemas/CSUpdateCoachRequest'
    CSUpdateCoachRequest:
      type: object
      properties:
        CustomerDID:
          type: string
          minimum: 0
          maximum: 1
        CoachDID:
          type: string
          minimum: 0
          maximum: 1
        TBBGUID:
          type: string
          minimum: 1
          maximum: 1
        input:
          $ref: '#/components/schemas/CSCreateCoachInput'
      xml:
        name: CSUpdateCoach
      required:
        - input
    SoapEnvelope:
      type: object
      properties:
        'soap:Envelope':
          type: object
          properties:
            'soap:Body':
              type: object
              properties:
                CSCreateCoach:
                  $ref: '#/components/schemas/CSCreateCoachRequest'
    CSCreateCoachRequest:
      type: object
      properties:
        TBBGUID:
          type: string
          minimum: 1
          maximum: 1
        input:
          $ref: '#/components/schemas/CSCreateCoachInput'
      xml:
        name: CSCreateCoach
      required:
        - input
    CSCreateCoachInput:
      type: object
      properties:
        FirstName:
          type: string
          minimum: 1
          maximum: 1
        LastName:
          type: string
          minimum: 1
          maximum: 1
        MiddleInitial:
          type: number
          minimum: 1
          maximum: 1
        Company:
          type: string
          minimum: 1
          maximum: 1
        Email:
          type: string
          minimum: 1
          maximum: 1
        Phone1:
          type: string
          minimum: 1
          maximum: 1
        Phone2:
          type: string
          minimum: 1
          maximum: 1
        Phone3:
          type: string
          minimum: 1
          maximum: 1
        Phone4:
          type: string
          minimum: 1
          maximum: 1
        Phone5:
          type: string
          minimum: 1
          maximum: 1
        Phone6:
          type: string
          minimum: 1
          maximum: 1
        BillingAddress:
          $ref: '#/components/schemas/Address'
        ShippingAddress:
          $ref: '#/components/schemas/Address'
        IsTaxExempt:
          type: string
          minimum: 1
          maximum: 1
        TaxExemptID:
          type: string
          minimum: 1
          maximum: 1
        Gender:
          type: string
          minimum: 1
          maximum: 1
        RepType:
          type: string
          minimum: 1
          maximum: 1
        JoinDate:
          type: string
          minimum: 1
          maximum: 1
        BirthDate:
          type: string
          minimum: 1
          maximum: 1
        TokenizedTaxID:
          type: string
          minimum: 1
          maximum: 1
        WaiveServiceFeeRequirement:
          type: string
          minimum: 1
          maximum: 1
        PayoutVendorName:
          type: string
          minimum: 1
          maximum: 1
        PayoutRoutingNumber:
          type: string
          minimum: 1
          maximum: 1
        PayoutAccountNumber:
          type: string
          minimum: 1
          maximum: 1
        PayoutAccountType:
          type: string
          minimum: 1
          maximum: 1
        PayoutMethod:
          type: string
          minimum: 1
          maximum: 1
        PayToName:
          type: string
          minimum: 1
          maximum: 1
        CustomerType:
          type: string
          minimum: 1
          maximum: 1
        SponsorDID:
          type: string
          minimum: 1
          maximum: 1
        LeadWheelType:
          type: string
          minimum: 1
          maximum: 1
        LeadWheelLanguage:
          type: string
          minimum: 1
          maximum: 1
      xml:
        name: input
      required:
        - CustomerType
  parameters:
    tbb-order-id:
      name: tbb-order-id
      in: query
      description: The order id
      required: true
      schema:
        type: string
      example: 93705123
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
  requestBodies:
    CreateOrderRequestPayload:
      description: XML input for create order
      required: true
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSCreateOrder'
          examples:
            xml:
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSCreateOrder>
                <TBBOrderID>STORE_821918537</TBBOrderID> <input>
                <ZeroOutShakeologyItems>0</ZeroOutShakeologyItems>
                <OrderStatus>POSTED</OrderStatus>
                <OrderDate>2019-03-25</OrderDate> <EBSOrderType>WEB
                ORDER_NT</EBSOrderType> <BillingAddress> <Name>pvMLhY
                EVjr</Name> <Street1>819 2nd Ave</Street1> <Street2 />
                <City>Seattle</City> <State>WA</State>
                <PostalCode>98104-1501</PostalCode> <County />
                <Country>US</Country> </BillingAddress> <ShippingAddress>
                <Name>pvMLhY EVjr</Name> <Street1>819 2nd Ave</Street1> <Street2
                /> <City>Seattle</City> <State>WA</State>
                <PostalCode>98104-1501</PostalCode> <County />
                <Country>US</Country> </ShippingAddress> <OrderLines>
                <OrderLine> <TBBOrderLineNumber>1</TBBOrderLineNumber>
                <SKU>MDBCP21D</SKU> <Quantity>1</Quantity>
                <Commissions>50.0</Commissions>
                <SubscriptionCommissions>0.0</SubscriptionCommissions>
                <FastStartAmount>0</FastStartAmount> <CV>45.00</CV>
                <PV>135.00</PV> <HDTriggerItem>1</HDTriggerItem> </OrderLine>
                </OrderLines> <IsPersonalUse>1</IsPersonalUse>
                <PriceType>Club</PriceType> <CurrencyType>USD</CurrencyType>
                <CustomerDID>15388527</CustomerDID> </input> </CSCreateOrder>
    UpdateOrderRequestPayload:
      description: XML input for Update Order
      required: true
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSUpdateOrder'
          examples:
            text/xml:
              value: >-
                <?xml version="1.0" encoding="UTF-8"?> <CSUpdateOrder>
                <TBBOrderID>STORE_821918537</TBBOrderID> <input>
                <ZeroOutShakeologyItems>0</ZeroOutShakeologyItems>
                <OrderStatus>POSTED</OrderStatus>
                <OrderDate>2019-03-25</OrderDate> <EBSOrderType>WEB
                ORDER_NT</EBSOrderType> <BillingAddress> <Name>pvMLhY
                EVjr</Name> <Street1>819 2nd Ave</Street1> <Street2 />
                <City>Seattle</City> <State>WA</State>
                <PostalCode>98104-1501</PostalCode> <County />
                <Country>US</Country> </BillingAddress> <ShippingAddress>
                <Name>pvMLhY EVjr</Name> <Street1>819 2nd Ave</Street1> <Street2
                /> <City>Seattle</City> <State>WA</State>
                <PostalCode>98104-1501</PostalCode> <County />
                <Country>US</Country> </ShippingAddress> <OrderLines>
                <OrderLine> <TBBOrderLineNumber>1</TBBOrderLineNumber>
                <SKU>MDBCP21D</SKU> <Quantity>1</Quantity>
                <Commissions>50.0</Commissions>
                <SubscriptionCommissions>0.0</SubscriptionCommissions>
                <FastStartAmount>0</FastStartAmount> <CV>45.00</CV>
                <PV>135.00</PV> <HDTriggerItem>1</HDTriggerItem> </OrderLine>
                </OrderLines> <IsPersonalUse>1</IsPersonalUse>
                <PriceType>Club</PriceType> <CurrencyType>USD</CurrencyType>
                <CustomerDID>15388527</CustomerDID> </input> </CSUpdateOrder>
    CreateUpdateSKUPayload:
      description: XML input for Create Update SKU
      required: true
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/CSCreateUpdateSKURequest'
          examples:
            text/xml:
              value: >-
                <CSCreateUpdateSKU> <input> <Product>
                <ProductID>MDTESTSKU01407</ProductID> <Description>Test
                Product</Description> <CurrencyType>USD</CurrencyType>
                <IsVBCCustLeadRequirementFlag>0</IsVBCCustLeadRequirementFlag>
                <IsShakeology>0</IsShakeology>
                <IsBusinessServiceFee>0</IsBusinessServiceFee>
                <IsFastStart>0</IsFastStart> <Retail> <CV>10.0</CV>
                <PV>10.0</PV> <Commissions>10.0</Commissions>
                <SubscriptionCommissions>10.0</SubscriptionCommissions>
                <FastStartAmount>10.0</FastStartAmount> </Retail> <Wholesale>
                <CV>5.0</CV> <PV>5.0</PV> <Commissions>5.0</Commissions>
                <SubscriptionCommissions>5.0</SubscriptionCommissions>
                <FastStartAmount>5.0</FastStartAmount> </Wholesale> <Club>
                <CV>7.0</CV> <PV>7.0</PV> <Commissions>7.0</Commissions>
                <SubscriptionCommissions>7.0</SubscriptionCommissions>
                <FastStartAmount>7.0</FastStartAmount> </Club> </Product>
                </input> </CSCreateUpdateSKU>
    CreateCoachRequestPayload:
      description: XML input for create coach
      required: true
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/SoapEnvelope'
          examples:
            text/xml:
              value: >-
                <soap:Envelope
                xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
                <soap:Body> <CSCreateCoach
                xmlns="http://www.securefreedom.com/">
                <TBBGUID>DA2DEAE1-FAEA-4976-B337-5308D584F712</TBBGUID> <input>
                <FirstName>STGTESTER</FirstName> <LastName>JMETEROAG</LastName>
                <MiddleInitial
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Company>BBTechEntQA</Company>
                <Email>jMtr.OAG10518sncgy@yopmail.com</Email>
                <Phone1>8009910518</Phone1> <Phone2
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone3
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone4
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone5
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone6
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <BillingAddress> <Street1>10518 JMETERTEST
                DR.</Street1> <Street2>SUITE 530</Street2> <City>Santa
                Monica</City> <State>CA</State> <PostalCode>90404</PostalCode>
                <County xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Country>US</Country> </BillingAddress>
                <ShippingAddress> <Street1>400 Continental Blvd.</Street1>
                <Street2>Suite 530</Street2> <City>El Segundo</City>
                <State>CA</State> <PostalCode>90245</PostalCode> <County
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Country>US</Country> </ShippingAddress>
                <IsTaxExempt
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <TaxExemptID
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Gender>Male</Gender> <RepType
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <JoinDate>2019/03/24</JoinDate>
                <BirthDate>1990/01/01</BirthDate>
                <TokenizedTaxID>000710518</TokenizedTaxID>
                <WaiveServiceFeeRequirement
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutVendorName
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutRoutingNumber
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutAccountNumber
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutAccountType
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutMethod
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayToName
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <CustomerType>CUSTOMER</CustomerType>
                <SponsorDID
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <LeadWheelType>CUSTOMER</LeadWheelType>
                <LeadWheelLanguage>en_US</LeadWheelLanguage> </input>
                </CSCreateCoach> </soap:Body> </soap:Envelope>
    UpdateCoachRequestPayload:
      description: XML input for update coach
      required: true
      content:
        text/xml:
          schema:
            $ref: '#/components/schemas/UpdateCoachSoapEnvelope'
          examples:
            text/xml:
              value: >-
                <soap:Envelope
                xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
                <soap:Body> <CSUpdateCoach
                xmlns="http://www.securefreedom.com/">
                <CoachDID>2037724</CoachDID>
                <TBBGUID>DA2DEAE1-FAEA-4976-B337-5308D584F712</TBBGUID> <input>
                <FirstName xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <LastName
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <MiddleInitial
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Company
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" />
                <Email>cherylmimbs455126989@beachbodytest.com</Email>
                <Phone1>17062558645</Phone1> <Phone2
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone3
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone4
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone5
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Phone6
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <BillingAddress
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <ShippingAddress
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <IsTaxExempt
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <TaxExemptID
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <Gender
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <RepType
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <JoinDate
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <BirthDate
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <TokenizedTaxID
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <WaiveServiceFeeRequirement
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutVendorName
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutRoutingNumber
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutAccountNumber
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutAccountType
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayoutMethod
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <PayToName
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> <CustomerType>COACH</CustomerType>
                <LeadWheelLanguage
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:nil="true" /> </input> </CSUpdateCoach> </soap:Body>
                </soap:Envelope>