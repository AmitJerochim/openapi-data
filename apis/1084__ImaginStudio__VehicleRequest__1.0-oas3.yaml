openapi: 3.0.0
info:
  description: >-
    API to handle car image requests from data-suppliers, lease companys or car vendors.
  version: "1.0-oas3"
  title: Vehicle Request API
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: "The bearer should be retrieved with the /public/gettoken API The bearer will expire when your contract or trial ends. If the bearer is invalid (401), renew it via the /public/gettoken API. If a new token is not supplied, most likely your contract has expired without a renewal. Contact support."
  schemas:

    Vehicle:
      properties:
        customerId:
          type: string
          description: "The customer id you have received with your contract"
        dataOrigin:
          type: string
          example: 'Specify the source of where the data is coming from. for example jato-nl'
          description: "The "
        vendorId:
          type: string
          description: 'The unique identifier or vehicle id as defined by the data vendor of the source (as supplied in dataOrigin)'
        country:
          type: string
          description: "ISO 3166-1 Alpha 2 country code"
        timeStamp:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: 'The date and time this entry was added to your dataset.'

        make:
          type: string
          minLength: 3
          description: 'Specifies the car brand (make) of the car for which the image is being requested.'
        modelFamily:
          type: string
          minLength: 3
          description: 'Specifies the car model of the car for which the image is being requested.'
        modelRange:
          type: string
          minLength: 3
          description: 'This is a custom key that we add to the JATO data set to be able to differentiate special model lines such as Audi S, BMW M, Mercedes AMG, etc'
        modelYear:
          type: number
          minimum: 2000
          maximum: 2030
          description: 'Specifies the car`s model year (not assignment or production year) of the car for which the image is being requested.'
        bodyVariant:
          type: string
          enum: [HA , SA, CO, ES, CA, TA, MC, OD, PU, FW, MM, BP, BU, CC, PV, VA, CE, CH, CV, DP, RV, WV, 3C, 4C, BH, SH, BT, CM, CP, CR, CX, DH, DS, OM, MY, OC, TI, TR, WH, WT]
          description: 'Specifies the car`s body type. For passenger vehicles you typically specify if the car is a coupe (CO), sedan (SE) or hatchback (HA) vehicle. For commercial vehicles this attribute is used to specify the cabin type.'
          
        bodysize:
          type: string
          description: 'Specifies the car`s body size. For passenger vehicles you specify the number of doors. For commercial vehicles this attribute is used to specify the height and length of the vehicle (L1H2).'

        localBodyvariant:
         enum: [HA , SA, CO, ES, CA, TA, MC, OD, PU, FW, MM, BP, BU, CC, PV, VA, CE, CH, CV, DP, RV, WV, 3C, 4C, BH, SH, BT, CM, CP, CR, CX, DH, DS, OM, MY, OC, TI, TR, WH, WT]
         description: 'Specifies the car`s body type. For passenger vehicles you typically specify if the car is a coupe (CO), sedan (SE) or hatchback (HA) vehicle. For commercial vehicles this attribute is used to specify the cabin type.'

        faceliftGeneration:
          type: number
          description: 'Identifier of the facelift being requested. Together with model year and model generation the visual character of a car is established.'
        modelGeneration:
          type: number
          description: 'Identifier of the facelift being requested. Together with model year and model generation the visual character of a car is established.'
        localMake:
          description: 'Specifies the car brand (make) locally used of the car for which the image is being requested.'
        localModel:
          type: string
          description: 'Specifies the car model name used locally of the car for which the image is being requested.'

        localBodysize:
          type: string
          description: 'Specifies the car`s body size. For passenger vehicles you specify the number of doors. For commercial vehicles this attribute is used to specify the height and length of the vehicle (L1H2).'
        trim:
          type: string
          description: 'Specifies the car`s trim (also referred to as body trim, trimline, uitvoering, ausstattung) of the car for which the image is being requested. This should not be mistaken for an option pack, which could impact the exterior style of a vehicle.'
        localTrim:
          type: string
          description: 'Specifies the car`s trim (also referred to as body trim, trimline, uitvoering, ausstattung) of the car for which the image is being requested. This should not be mistaken for an option pack, which could impact the exterior style of a vehicle.'
        transmission:
          type: string
          enum: [a , m]
          description: 'Use the value “m” request an interior image with a manual gear (stick shift) interior layout and “a” to request an image with an automatic gear vehicle layout.'
        steering:
          type: string
          enum: [lhd , rhd]
          description: 'Use this parameter to divert to Right Hand Drive (rhd) steering car layout for both exterior and interior images. This feature only works in conjunction with the Right Hand Drive Expansion Pack.'

        carLength:
          type: integer
          format: int32
          description: 'Specifies the the end-to-end (bumper to bumper) length of the car for which the image is being requested, measured in millimeters.'
        soldOnline:
          type: boolean
          description: 'Specify if you are currently commercially offering this vehicle in your online channels. Only online orderable vehicles will be produced. You may send us car data with a false flag, IMAGIN can prepare for production, then when you send the vehicle again with a true flag production will commence. Often used in decentralised organisations.'
        lcv:
          type: boolean
          description: 'Identifies if this car is a light commercial vehicle.'
        pv:
          type: boolean
          description: 'Identifies if this car is a passenger vehicle.'
          
        interior:
          type: array
          items:
            $ref: '#/components/schemas/Interior'
          description: 'Array of interiors. Please refer to specification'
        bodyColor:
          type: array
          items:
            $ref: '#/components/schemas/BodyColor'
          description: 'Array of body colors. Please refer to specification'
        roofColor:
          type: array
          items:
            $ref: '#/components/schemas/RoofColor'
          description: 'Array of roof colors. Please refer to specification'
        rims:
          type: array
          items:
            $ref: '#/components/schemas/Rims'
          description: 'Array of rims. Please refer to specification'
          
          
        ignore:
          type: boolean
          description: 'When you set this attribute to true, IMAGIN.studio`s DataCollection API will ignore the request and not push it to the production queue. This is intended to assist with API development without disrupting the production data.'
      required:
        - customerId
        - dataOrigin
        - vendorId
        - timeStamp
        - country
        - make
        - modelFamily
        - modelRange
        - modelYear
        - bodyVariant
        - bodySize
        
    Interior:
      properties:
        id:
          type: string
          description: 'Specifies the car`s interior factory code'
        description:
          type: string
          description: 'English description of the interior'
        localDescription:
          type: string
          description: 'Local description of the interior'
      required:
        - id
        - description
          
    BodyColor:
      properties:
        id:
          type: string
          description: 'Specifies the car`s exterior factory color code'
        type:
          type: string
          enum: [uni,metallic,pearlescent,gloss,mattened]
          description: 'Specifies the car`s exterior paint type of the car for which the image is being requested.'
        description:
          type: string
          description: 'English description of the body color'
        localDescription:
          type: string
          description: 'Local description of the body color'
      required:
        - id
        - description
        - type
          
    RoofColor:
      properties:
        id:
          type: string
          description: 'Specifies the car`s roof factory color code'
        type:
          type: string
          enum: [uni,metallic,pearlescent,gloss,mattened]
          description: 'Specifies the car`s roof paint type of the car for which the image is being requested.'
        description:
          type: string
          description: 'English description of the roof color'
        localDescription:
          type: string
          description: 'Local description of the roof color'
      required:
        - id
        - description
        - type
          
    Rims:
      properties:
        id:
          type: string
          description: 'Specifies the car`s factory code of the wheel on the car for which the image is being requested.' 
        description:
          type: string
          description: 'Specifies the car`s factory english description of the wheel on the car for which the image is being requested.'
        localDescription:
          type: string
          description: 'Specifies the car`s factory local description of the wheel on the car for which the image is being requested.'
        frontTireSize:
          description: 'Specifies the tire measurements of the front wheels on the car for which the image is being requested. '
          type: string
        rearTireSize:
          description: 'Specifies the tire measurements of the rear wheels on the car for which the image is being requested. '
          type: string
      required:
        - id
        - description
      

        
          
          
    SuccessResponse:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    ErrorResponse:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        code:
          type: integer
          format: int32
        message:
          type: string
    
    ErrorDetail:
      properties:
        reason:
          type: string
        message:
          type: string
          
          
paths:
  /vehiclerequest:
    post:
      description: >-
        Insert a request to produce an image for a specific car. Requires an
        authorization key
      responses:
        '200':
          description: 'Succesfully processed (Ok)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: 'Unauthorized. Token does not match or is expired. Renew your token and/or contract.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'URL mismatch /  not found. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid method. When (for example) a GET it used.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
        '504': 
          description: 'Internal error. The data you provided could not be processed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
      security:
        - Secured: [BearerAuth]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
servers:
  - url: 'https://api.imagin.studio/customer/v1'
