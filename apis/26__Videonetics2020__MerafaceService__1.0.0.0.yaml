openapi: 3.0.0
info:
  version: "1.0.0.0"
  title: 'Meraface Service'
  description: 'Meraface Service'


servers:
  - description: Development API
    url: http://{domainName}:{port}/api
    variables:
      domainName:
        description: development domain name of MeraFace Master Service
        default: 127.0.0.1
      port:
        enum:
          - '8080'
        default: '8080'
  - description: Production API
    url: https://{domainName}:{port}/api
    variables:
      domainName:
        description: production domain name of VCPaaS Master Service
        default: videonetics.com
      port:
        enum:
          - '8080'
        default: '8080'
paths:

  '/login':
    post:
      tags:
        - User
      summary: Login to VCPaaS Customer platfrom.
      description: >-
        Login to VCPaaS Customer platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLoginModel'
      responses:
        '201':
          description: Login to VCPaaS Customer platfrom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
                
  '/register':
    post:
      tags:
        - User
      summary: Login to VCPaaS Customer platfrom.
      description: >-
        Login to VCPaaS Customer platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '201':
          description: Login to VCPaaS Customer platfrom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
                
  '/systemdetails':
    get:
      tags:
        - System Configuration
      summary: Get all System Configuration
      description: >-
        Get all engineTasks details
      responses:
        '200':
          description: Get all System Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemDetailsGetResponse'
    post:
      tags:
        - System Configuration
      summary: Create System Configuration
      description: >-
        Create a engineTasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfigurationModel'
      responses:
        '201':
          description: Create System Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
    put:
      tags:
        - System Configuration
      summary: Updates a Yojaka Box details in the platfrom
      description: >-
        Updates a Yojaka Box details in the platfrom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfigurationModel'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'

  '/featureconfig':
    get:
      tags:
        - System Configuration
      summary: Get all features configuration i.e. age estimation, gender estimation
      description: >-
        Get all features configuration i.e. age estimation, gender estimation
      responses:
        '200':
          description: Get all features configuration i.e. age estimation, gender estimation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureConfigurationResponse'
    post:
      tags:
        - System Configuration
      summary: Create/Update features configuration i.e. age estimation, gender estimation
      description: >-
        Create/Update features configuration i.e. age estimation, gender estimation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureConfigurationModel'
      responses:
        '201':
          description: Create/Update features configuration i.e. age estimation, gender estimation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureConfigurationResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'

  /fea.csv:
    get:
      tags:
        - System Configuration
      summary: Returns the fea.csv from master service.
      responses:
        '200':
          description: Returns the fea.csv from master service
          content:
            text/csv:
              schema:
                type: string
                format: binary
                example: "5e70590a0842d615c87573fa,abhisekh,5e7059080842d615c8757353,Abhisekh,-0.152106985,0.054745253,0.035844035,-0.088060461,-0.066684097,-0.176598117,-0.029167397,-0.057160735,0.133865163,-0.064413607,0.229392096,-0.055598803,-0.271105826,-0.086068846,-0.015494588,0.086534798,-0.127171844,-0.060411312,0.001062839,-0.101905242,0.03571495,0.044590324,0.071592107,-0.021796271,-0.086858869,-0.369428098,-0.114037275,-0.075236402,0.052740257,-0.014711029,0.020388206,0.122391872,-0.120857671,-0.093815267,0.060505915,0.162131131,-0.012233761,-0.006199971,0.204732612,0.030687464,-0.065329723,-0.100487985,0.024370028,0.302805573,0.139468238,0.075493477,0.079027794,-0.049630616,0.051272012,-0.23124221,0.113044001,0.12892431,0.071834855,0.021779204,0.160442159,-0.135305732,0.052199483,0.093076281,-0.197256491,0.080439053,0.087893926,-0.010560554,-0.05617984,-0.042889319,0.249189362,0.082633801,-0.115320578,-0.061154861,0.204318836,-0.160299644,-0.066704117,0.017339736,-0.110589482,-0.133784562,-0.263578057,0.049017753,0.30521667,0.13914749,-0.101413779,0.049310442,-0.0063013,-0.078853071,0.077152386,0.023463754,-0.135235235,0.028669028,-0.108453527,0.031622123,0.153539017,-0.00093723,-0.056646254,0.200018048,-0.033425059,0.080909021,0.069312505,0.022324968,-0.084526815,-0.022295145,-0.109050907,-0.011212935,0.189189479,-0.221260697,-0.01202147,0.131112829,-0.18382062,0.084368698,-0.068410091,-0.010137931,-0.018997394,0.000585807,-0.107800879,-0.014736501,0.162761733,-0.188799143,0.22470741,0.199182853,-0.005808699,0.139961705,0.073323674,0.025957186,0.037129827,-0.034134507,-0.110676505,-0.115146637,-0.044900998,0.002544985,0.040603396,0.078148134"

  '/markeventunknown':
    patch:
      tags:
        - Face Event
      summary: Mark events unknown by removing registeredFaceId
      description: >-
        Mark events unknown by removing registeredFaceId
      parameters:
        - in: query
          name: 'registeredFaceId'
          schema:
            type: string
            format: string
          required: true
          description: Unique ID
          example: 'registeredFaceId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Mark events unknown by removing registeredFaceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'

  '/findname':
    get:
      tags:
        - Face Event
      summary: 'Find unique full names from face events that contains input string'
      description: >-
        Seach unique full names from face events that contains input string
      parameters:
        - in: query
          name: 'find'
          schema:
            type: string
            format: string
            default: ''
          required: true
          description: 'Find full names containing this input'
          example: 'mad'
        - in: query
          name: 'limit'
          schema:
            type: integer
            format: int32
            default: 5
          required: true
          description: 'Limit the results'
          example: '5'
      responses:
        '200':
          description: 'List of distinct full names frond from face events containing the input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindNameResponse'

  '/occurance':
    get:
      tags:
        - Face Event
      summary: 'Find occurances of a face event'
      description: >-
        Find occurances of a face event
      parameters:
        - in: query
          name: 'eventId'
          schema:
            type: string
            format: string
            default: ''
          required: true
          description: '_id of the face event from faceEvents collection'
          example: '5c1956e925b6b30001103eb6'
        - in: query
          name: 'startTimeStamp'
          schema:
            type: integer
            format: int64
            example: 1546041600000
          required: true
          description: 'Find face events FROM this unix timestamp'
          example: 1546041600000
        - in: query
          name: 'endTimeStamp'
          schema:
            type: integer
            format: int64
            example: 1546041600000
          required: true
          description: 'Find face events TO this unix timestamp'
          example: 1546041600000
        - in: query
          name: 'confidence'
          schema:
            type: integer
            format: int32
            default: 90
            example: 90
          required: true
          description: 'Get results above this confidence'
          example: 90
        - in: query
          name: 'sort'
          schema:
            type: string
            format: string
            default: 'DESC'
          required: false
          description: 'Sort the result set by event time i.e. ASC or DESC'
          example: 'DESC'
        - in: query
          name: 'page'
          schema:
            type: integer
            format: int32
            default: 1
          required: true
          description: 'The offset = page x limit'
          example: '1'
        - in: query
          name: 'limit'
          schema:
            type: integer
            format: int32
            default: 20
          required: true
          description: 'Limit the results'
          example: '20'
      responses:
        '200':
          description: 'List of face events'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccuranceResponse'

  '/validateevent/{registeredFaceId}':
    post:
      tags:
        - Face Event
      summary: 'Patch face event after validation, validated as event.registeredFaceId matched with event.closeMatchRegisteredFace'
      description: >-
        Patch face event after validation, validated as event.registeredFaceId matched with event.closeMatchRegisteredFace
      parameters:
        - in: path
          name: 'registeredFaceId'
          schema:
            type: string
            format: string
            default: ''
          required: true
          description: 'metaFaceEvent.registeredFaceId to patch the events'
          example: 'f9ee6cd2-97a2-11ea-ae58-4cedfb60e1ea'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventValidationModel'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'
                
  '/markvalid/{eventId}':
    get:
      tags:
        - Face Event
      summary: 'Mark event as valid'
      description: >-
        Mark event as valid
      parameters:
        - in: path
          name: 'eventId'
          schema:
            type: string
            format: string
            default: ''
          required: true
          description: '_id of faceEvent'
          example: '5c1956e925b6b30001103eb6'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'

  '/report/gender/{starttimestamp}/{endtimestamp}':
    get:
      tags:
        - Report
      summary: Returns Gender Distribution
      description: >-
        Returns Gender Distribution
      parameters:
        - in: path
          name: starttimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: Start Timestamp
          example: 1546041600000
        - in: path
          name: endtimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: End Timestamp
          example: 1546041600000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'

  '/report/age/{starttimestamp}/{endtimestamp}':
    get:
      tags:
        - Report
      summary: Returns Age Distribution
      description: >-
        Returns Age Distribution
      parameters:
        - in: path
          name: starttimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: Start Timestamp
          example: 1546041600000
        - in: path
          name: endtimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: End Timestamp
          example: 1546041600000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'

  '/report/category/{starttimestamp}/{endtimestamp}':
    get:
      tags:
        - Report
      summary: Returns Category Distribution
      description: >-
        Returns Category Distribution
      parameters:
        - in: path
          name: starttimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: Start Timestamp
          example: 1546041600000
        - in: path
          name: endtimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: End Timestamp
          example: 1546041600000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'

  '/report/event/{starttimestamp}/{endtimestamp}':
    get:
      tags:
        - Report
      summary: Returns Event Distribution
      description: >-
        Returns Event Distribution
      parameters:
        - in: path
          name: starttimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: Start Timestamp
          example: 1546041600000
        - in: path
          name: endtimestamp
          schema:
            type: integer
            format: int64
          required: true
          description: End Timestamp
          example: 1546041600000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
                
  '/streaming/startlive':
    post:
      tags:
        - Streaming
      summary: Returns live view streaming of requested camera from the platfrom
      description: >-
        Returns live view streaming of requested camera from the platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamingRequestModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponse'
                
  '/streaming/keeplivesession':
    get:
      tags:
        - Streaming
      summary: Returns live view streaming of requested camera from the platfrom
      description: >-
        Returns live view streaming of requested camera from the platfrom.
      parameters:
        - in: query
          name: 'nodeId'
          schema:
            type: string
            format: string
          description: >-
            Camera Id of the requested camera.
          example: '5c1956e925b6b30001103eb6'
        - in: query
          name: 'sessionId'
          schema:
            type: string
            format: string
          description: >-
            Stream session Id of the requested camera.
          example: 'A458DTH005MA'
        - in: query
          name: 'keepLiveSessionActive'
          schema:
            type: boolean
            default: false
            example: false
          description: >-
            Stream session active mode. False to stop session, True to keep session alive.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponse'
              
components:
  schemas:
  
    defaultResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
          
    MetaFaceEvent:
      type: object
      properties:
        registeredFaceId:
          type: string
          format: string
          nullable: true
          example: 'barak_obama_1'
          default: ""
          description: "registeredFaceId of '#/components/schemas/registeredFace'"
        fullName:
          type: string
          format: string
          example: 'Mike Johnson'
        age:
          type: integer
          format: int32
          example: 22
          default: 0
          description: 'Age of person from registerd face database if registered face'
        ageMin:
          type: integer
          format: int32
          example: 20
          default: 0
          description: 'Minimum age estimated by Detection Engine from the estimated age range'
        ageMax:
          type: integer
          format: int32
          example: 25
          default: 0
          description: 'Maximum age estimated by Detection Engine from the estimated age range'
        sex:
          $ref: '#/components/schemas/Gender'
        type:
          $ref: '#/components/schemas/FaceCategory'
        bestSnap:
          type: string
          format: uri
          example: 'https://s3.amazonaws.com/monotosh/snaps/fe6d3dd9-2820-4512-81c2-2e871db3cdaf.jpg'
        confidence:
          type: integer
          format: int32
          example: 89
          default: 0
        eventId:
          type: string
          format: string
          example: "5c1956e925b6b30001103eaa"
          default: "0"
          description: 'Source EventId'
        scars:
          type: string
          format: string
          example: "Black Mole on right cheek"
          nullable: true
          description: 'Scars on face'
        tattoo:
          type: string
          format: string
          example: "Tattoo on right cheek"
          nullable: true
          description: 'Tattoo on face'
        sketch:
          type: string
          format: string
          example: "Detected from a image sketch"
          nullable: true
          description: 'Detected from a image sketch'
        emotion:
          type: string
          format: string
          example: "Sad expression"
          nullable: true
          description: 'Emotion detected by detection engine'
        faceAttribute:
          type: string
          format: string
          example: "Black Hat, black sunglass"
          nullable: true
          description: 'Face features detected by detection engine'
        humanRace:
          type: string
          format: string
          example: "Asian"
          nullable: true
          description: 'Human race detected by detection engine'

    Gender:
      type: string
      format: string
      enum: ['Male', 'Female', 'Other', 'NA']
      example: 'Male'
      default: 'Male'
      description: 'Sex of person predicted by engine during event'

    FaceCategory:
      type: object
      properties:
        caption:
          type: string
          format: string
          nullable: false
          readOnly: false
          example: 'VIP'
        color:
          type: string
          format: string
          nullable: false
          readOnly: false
          default: 'green'
          example: 'olive'
          description: 'Highlighter color, allowed ["red", "green", "blue","silver", "gray", "black","maroon", "yellow", "olive","lime", "aqua", "teal", "navy", "fuchsia", "purple", "teal", "teal"]'

    EventValidationModel:
      type: object
      properties:
        fullName:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        age:
          type: integer
          format: int32
          example: 22
          default: 0
          description: 'Age of person from registerd face database if registered face'
        sex:
          type: string
          format: string
          nullable: false
          example: 'Male'
        type:
          type: object
          properties:
            caption:
              type: string
              format: string
              nullable: false
              readOnly: false
              example: 'VIP'
            color:
              type: string
              format: string
              nullable: false
              readOnly: false
              default: 'green'
              example: 'olive'
              description: 'Highlighter color, allowed ["red", "green", "blue","silver", "gray", "black","maroon", "yellow", "olive","lime", "aqua", "teal", "navy", "fuchsia", "purple", "teal", "teal"]'
        closeMatchUrl:
          type: string
          format: uri
          nullable: false
          example: 'https://s3.amazonaws.com/monotosh/snaps/fe6d3dd9-2820-4512-81c2-2e871db3cdaf.jpg'
          description: "event snap Url"
        closeMatchRegisteredFaceId:
          type: string
          format: string
          nullable: false
          example: 'barak_obama_1'
          description: "registeredFaceId of '#/components/schemas/registeredFace'"
        matchingConfidence:
          type: integer
          format: int32
          default: 90
          nullable: false
          example: 90
          description: "Confidecne to update to"
        isValid:
          type: boolean
          default: false
          example: false
          nullable: true
          description: 'If event validated by operator/admin'
  
    LiveStreamingRequestModel:
      type: object
      properties:
        nodeId:
          type: string
          format: string
          example: "UXED56789TYP"
        rtspUrl:
          type: string
          format: string
          example: "rtsp://192.168.1.185/media.amp"
        userName:
          type: string
          format: string
          example: 'root'
        password:
          type: string
          format: string
          example: 'root'
    
    FindNameResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Success'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          example: ['Madhab Chandra Pal', 'Madhab Pal', 'Maddy Madz']
          items:
            type: string
            format: string
            readOnly: true
            nullable: false
            default: ''
            example: 'Madhab Chandra Pal'

    OccuranceResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Success'
          example: 'Success'
        total:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 100
        items:
          type: array
          readOnly: true
          nullable: false
          items:
            $ref: '#/components/schemas/OccuranceModel'

    ReportResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        labels:
          type: array
          readOnly: true
          nullable: false
          items:
            type: string
            format: string
          example: ['00-01', '01-02', '02-03', '03-04']
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/ReportModel'
            
    StreamingResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/CameraStreamingUrlModel'

    ReportModel:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          nullable: false
          items:
            type: integer
            format: int64
          example: [10,20,30,40]
        label:
          type: string
          format: string
          readOnly: true
          nullable: true
          default: '-'
          example: 'Employee'
        borderWidth:
          type: integer
          format: int32
          readOnly: true
          nullable: true
          default: 0
          example: 0
          
    CameraStreamingUrlModel:
      type: object
      properties:
        hlsUrl:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'http://streaming.iot-videonetics.com/live/hls/11-22-33-44-55-major/play.m3u8'
        webRtc:
          type: string
          format: string
          readOnly: true
          nullable: true
          default: 'Unexpected API Exception'
          example: 'Success'
        sessionId:
          type: string
          format: string
          readOnly: true
          nullable: true
          default: 'Unexpected API Exception'
          example: 'A458DTH005MA'
  
    MerafacePostResponse:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          nullable: false
          example: '5c1956e925b6b30001103eb6'
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
    
    SystemDetailsGetResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/SystemConfigurationModel'

    FeatureConfigurationResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Success'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/FeatureConfigurationModel'
  
    LoginResponseModel:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/UserLoginResponseModel'
  
    CustomerLoginModel:
      type: object
      properties:
        username:
          type: string
          format: string
          nullable: false
          example: 'sajal.maji@gmail.com'
        password:
          type: string
          format: string
          nullable: false
          example: 'sm@1234'
          
  
    UserLoginResponseModel:
      type: object
      properties:
        fullName:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        userId:
          type: string
          format: string
          nullable: true
          example: 'user001'
        emailAddress:
          type: string
          format: email
          nullable: false
          example: 'supriya.das@company.com'
        age:
          type: integer
          format: int32
          nullable: false
          default: 0
          example: 0
        sex:
          type: string
          format: string
          nullable: false
          example: 'Male'
        userType:
          type: string
          format: string
          nullable: true
          example: 'admin'
        lastLoginTime:
          type: integer
          format: int64
          example: 1546041600000
          description: 'Last Login time'
        systemconfiguration:
          $ref: '#/components/schemas/SystemConfigurationModel'
        engines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EngineModel'
        access:
          $ref: '#/components/schemas/accessRole'
        
  
    UserModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        fullName:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        emailAddress:
          type: string
          format: email
          nullable: false
          example: 'supriya.das@company.com'
        age:
          type: integer
          format: int32
          nullable: false
          default: 0
          example: 0
        sex:
          type: string
          format: string
          nullable: false
          example: 'Male'
        userId:
          type: string
          format: string
          nullable: true
          example: '5c1956e925b6b3000110456'
        password:
          type: string
          format: string
          nullable: false
          example: '5c1956e925b6b3000110456'
        userType:
          type: string
          format: string
          nullable: true
          example: 'admin'
        lastLoginTime:
          type: integer
          format: int64
          example: 1546041600000
          description: 'Last Login time'
        access:
          $ref: '#/components/schemas/accessRole'
    
    accessRole:
      type: object
      properties:
        liveview:
          type: boolean
          default: false
          example: false
          description: 'Operator can watch camera live view'
        faceRegistration:
          type: boolean
          default: false
          example: false
          description: 'Operator can perform single and bulk registration'
        faceGallery:
          type: boolean
          default: false
          example: false
          description: 'Operator can access Face Gallery'
        eventSearch:
          type: boolean
          default: false
          example: false
          description: 'Operator can access Event Search'
        investigation:
          type: boolean
          default: false
          example: false
          description: 'Operator can perform 1:indexedFaces, 1:1, 1:N and 1:video investigation'
        alert:
          type: boolean
          default: false
          example: false
          description: 'Operator can access live alert'
        report:
          type: boolean
          default: false
          example: false
          description: 'Operator can watch reports'
          
    EngineModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        engineName:
          type: string
          format: string
          nullable: false
          example: 'Engin One'
        engineType:
          $ref: '#/components/schemas/engineTypeCode'
        machineId:
          type: string
          format: string
          nullable: true
          example: '5c1956e925b6b3000110456'
       
    engineTypeCode:
      type: string
      format: string
      enum: ['', 'registration', 'investigation', 'recognition', 'matching']
      example: 'registration'
      description: >-
        Destination Method Type supported are as follows:
         * `''` - Not Labeled Yet
         * `'registration'` - Registration Node
         * `'investigation'` - Investigation Node
         * `'recognition'` - Recognition Node
         * `'matching'`  - Matching Node
          
    Destinationmethodtype:
      type: string
      format: string
      enum: ['none', 'http', 'mqtt', 'tcp','vs3']
      example: 'S3'
      description: >-
        Destination Method Type supported are as follows:
         * `'none'` - None
         * `'http'` - HTTP
         * `'tcp'` - TCP
         * `'mqtt'` - MQ over mqtt protocol
         * `'VS3'`  - VS3 protocol
    
    FileDestination:
      type: object
      properties:
        destinatiotype:
          $ref: '#/components/schemas/Destinationmethodtype'
        baseurl:
          type: string
          format: string
          example: 'bucket'
        name:
          type: string
          format: string
          example: 'visage/'
        user:
          type: string
          format: string
          example: 'admin'
        pass:
          type: string
          format: string
          example: 'admin'
          
    SystemConfigurationModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          example: '5c1956e925b6b30001103eb6'
        messagingServiceUrl:
          type: string
          format: string
          example: 'http://message.iot-videonetics.com/'
        messagingServiceUsername:
          type: string
          format: string
          example: 'useradmin'
        messagingServicePassword:
          type: string
          format: string
          example: '03eb6e925b6b30005c195611'
        databaseServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        databaseServiceUsername:
          type: string
          format: string
          example: 'useradmin'
        databaseServicePassword:
          type: string
          format: string
          example: '03eb6e925b6b30005c195611'
        destinationlist:
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/FileDestination'
        investigationServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        eveAPIServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        registrationServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'

    FeatureConfigurationModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          example: '5c1956e925b6b30001103eb6'
        ageEstimation:
          type: boolean
          default: false
          example: false
        genderEstimation:
          type: boolean
          default: false
          example: false
        scarsDetection:
          type: boolean
          default: false
          example: false
        tattooDetection:
          type: boolean
          default: false
          example: false
        sketchDetection:
          type: boolean
          default: false
          example: false
        emotionDetection:
          type: boolean
          default: false
          example: false
        faceAttributeDetection:
          type: boolean
          default: false
          example: false
        humanRaceDetection:
          type: boolean
          default: false
          example: false
        faceMaskDetection:
          type: boolean
          default: false
          example: false
        matchingConfidence:
          type: integer
          format: int32
          default: 90

    OccuranceModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        eventDetails:
          $ref: '#/components/schemas/EventDetails'
        eventSnap:
          $ref: '#/components/schemas/FaceSnap'
        metaFaceEvent:
          $ref: '#/components/schemas/MetaFaceEvent'
        confidence:
          type: integer
          format: int32
          example: 89
          default: 0
          description: 'match confidence predicted by engine during event detection'

    EventDetails:
      type: object
      properties:
        cameraId:
          type: string
          format: string
          example: '5c1956e925b6b30001103eaa'
          description: "_id of camera #$ref: '#/components/schemas/camera' from project cameras"
        cameraIp:
          type: string
          format: string
          example: '192.168.1.154'
        engineTaskId:
          type: string
          format: string
          example: '5c1956e925b6b30001103eaa'
          description: "_id of engineTasks #$ref: '#/components/schemas/engineTasks'"
        zoneId:
          type: integer
          format: int64
          example: 1
          default: 0
          description: "the zoneId of the engineTask in zoneSetting, #$ref: '#/components/schemas/zone'"
        confidence:
          type: number
          format: float
          example: 0.9
          default: 0.0
          description: 'match confidence predicted by engine during event detection'
        startTimeStamp:
          type: integer
          format: int64
          example: 1546041600000
          description: 'Event start timestamp in Unix epoch milliseconds'
        endTimeStamp:
          type: integer
          format: int64
          example: 1546041600000
          description: 'Event end timestamp in Unix epoch milliseconds'

    FaceSnap:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        snap:
          type: string
          format: uri
          example: 'https://s3.amazonaws.com/monotosh/snaps/fe6d3dd9-2820-4512-81c2-2e871db3cdaf.jpg'
        snapId:
          type: string
          format: string
          example: 'fe6d3dd9-2820-4512-81c2-2e871db3cdaf'
        processCount:
          type: integer
          format: int32
          default: 0
        registeredFaceId:
          type: string
          format: string
          example: 'barak_obama_1'
        featureVector1:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
              default: 0
              example: [-0.03991749510169029, 0.10491644591093063, 0.0908227413892746, -0.008847326040267944]
          nullable: true
          default: null
        featureVector2:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
              default: 0
              example: [-0.03991749510169029, 0.10491644591093063, 0.0908227413892746, -0.008847326040267944]
          nullable: true
          default: null
        confidence:
          type: number
          format: float
          default: 0
          example: 0.04