{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Parloa Global Services",
    "version" : "1.0.3",
    "title" : "Parloa Global Services",
    "contact" : {
      "email" : "contact@futureofvoice.com"
    }
  },
  "servers" : [ {
    "url" : "https://ok4b1qq6za.execute-api.eu-central-1.amazonaws.com/{basePath}",
    "variables" : {
      "basePath" : {
        "default" : "dev"
      }
    }
  } ],
  "tags" : [ {
    "name" : "basic",
    "description" : "Operations for basic functionality"
  }, {
    "name" : "channel",
    "description" : "Operations taking data to a different channel"
  }, {
    "name" : "data",
    "description" : "Operations to manipulate data"
  }, {
    "name" : "external",
    "description" : "Operations using third parties to process data"
  }, {
    "name" : "alexa",
    "description" : "Operations for alexa"
  }, {
    "name" : "dummy",
    "description" : "Example operations for demonstration"
  } ],
  "paths" : {
    "/dummyCheckAvailability" : {
      "post" : {
        "tags" : [ "dummy" ],
        "summary" : "dummy service for demonstaration",
        "operationId" : "dummyCheckAvailability",
        "description" : "return example data for demo projects",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "available"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "bookingSlot" : {
                          "type" : "string",
                          "example" : "Fri Mar 13 2020 13:56:28 GMT+0100"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/getAddressFromPlatform" : {
      "post" : {
        "tags" : [ "external" ],
        "summary" : "verifies an address",
        "operationId" : "getAddressFromPlatform",
        "description" : "Verifies an address with google maps api",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "formattedAddress" : {
                          "type" : "string",
                          "example" : "Münzstraße 5, 10178 Berlin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "address", "googleApiKey" ],
                "properties" : {
                  "address" : {
                    "type" : "string",
                    "example" : "I live in Münzstraße 5 in Berlin"
                  },
                  "googleApiKey" : {
                    "type" : "string",
                    "example" : "GOOGLEAPIKEY_FORMAT_STRING"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getCustomerContactInformation" : {
      "post" : {
        "tags" : [ "alexa" ],
        "summary" : "return alexa conatct information",
        "operationId" : "getCustomerContactInformation",
        "description" : "return the unlocked contact information from the alexa user",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string",
                          "example" : "demo-de@futureofvoice.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "information" : {
                    "type" : "string",
                    "example" : "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getDateTimeNow" : {
      "post" : {
        "tags" : [ "basic" ],
        "summary" : "return the current date and time",
        "operationId" : "getDateTimeNow",
        "description" : "uses moment-timezone to returns the current date and the current time",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string",
                          "example" : "10:17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "format" : {
                    "type" : "string",
                    "example" : "HH:mm"
                  },
                  "timezone" : {
                    "type" : "string",
                    "example" : "Berlin/Germany"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserInfoFromToken" : {
      "post" : {
        "tags" : [ "basic" ],
        "summary" : "get user token via payload",
        "operationId" : "getUserInfoFromToken",
        "description" : "get the user token from the user via the request payload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParloaResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "platform" : {
                    "type" : "string",
                    "example" : "alexa"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeInputNoise" : {
      "post" : {
        "tags" : [ "data" ],
        "summary" : "removes input noise from user input",
        "operationId" : "removeInputNoise",
        "description" : "removes noise like special characters from the plattform user input",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "text" : {
                          "type" : "string",
                          "example" : "KV4535345"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "text" ],
                "properties" : {
                  "text" : {
                    "type" : "string",
                    "example" : "KV-4535345"
                  },
                  "noiseChars" : {
                    "type" : "string",
                    "example" : "-+/"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resetReminders" : {
      "post" : {
        "tags" : [ "alexa" ],
        "summary" : "reset all alexa reminders",
        "operationId" : "resetReminders",
        "description" : "reset all alexa reminder of the user for the specific skill",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParloaResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "nextNode" : {
                    "type" : "string",
                    "example" : "success"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/saveValueFromRequest" : {
      "post" : {
        "tags" : [ "basic" ],
        "summary" : "returns value from request",
        "operationId" : "saveValueFromRequest",
        "description" : "returns a specific value from the request object",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string",
                          "example" : ""
                        },
                        "choice" : {
                          "type" : "string",
                          "example" : "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "key" ],
                "properties" : {
                  "key" : {
                    "type" : "string",
                    "example" : null
                  },
                  "platform" : {
                    "type" : "string",
                    "example" : "alexa"
                  },
                  "nextNode" : {
                    "type" : "string",
                    "example" : "success"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendMail" : {
      "post" : {
        "tags" : [ "channel" ],
        "summary" : "sends an email",
        "operationId" : "sendMail",
        "description" : "Sends an email using AWS",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParloaResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "mail_from", "mail_to" ],
                "properties" : {
                  "mail_from" : {
                    "type" : "string",
                    "example" : "dev@futureofvoice.com"
                  },
                  "mail_to" : {
                    "type" : "string"
                  },
                  "mail_cc" : {
                    "type" : "string"
                  },
                  "mail_bcc" : {
                    "type" : "string"
                  },
                  "mail_subject" : {
                    "type" : "string"
                  },
                  "mail_body" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/setReminder" : {
      "post" : {
        "tags" : [ "alexa" ],
        "summary" : "set the alexa reminder",
        "operationId" : "setReminder",
        "description" : "set a alexa reminder for the user for the specific skill",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParloaResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : "string",
                    "example" : "11:12"
                  },
                  "duration" : {
                    "type" : "string",
                    "example" : "PT30M"
                  },
                  "nextNode" : {
                    "type" : "string",
                    "example" : "success"
                  },
                  "reminderText" : {
                    "type" : "string",
                    "example" : "Denke an unseren Skill!"
                  },
                  "frequence" : {
                    "type" : "string",
                    "example" : "onetime"
                  },
                  "resetExistingReminders" : {
                    "type" : "string",
                    "example" : true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templateGetTraining" : {
      "post" : {
        "tags" : [ "dummy" ],
        "summary" : "template service for training demonstaration",
        "operationId" : "templateGetTraining",
        "description" : "return example data for training demo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "available"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "freeSeats" : {
                          "type" : "string",
                          "example" : 5
                        },
                        "day" : {
                          "type" : "string",
                          "example" : 20
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "city" : {
                    "type" : "string",
                    "example" : "Berlin"
                  },
                  "month" : {
                    "type" : "string",
                    "example" : 4
                  }
                }
              }
            }
          }
        }
      }
    },
    "/validateReminderTime" : {
      "post" : {
        "tags" : [ "data" ],
        "summary" : "validate an user input time",
        "operationId" : "validateReminderTime",
        "description" : "validate and reformat a time input from an user to set a reminder with that",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "time" : {
                          "type" : "string",
                          "example" : "08:00"
                        },
                        "timeAfternoon" : {
                          "type" : "string",
                          "example" : "20:00"
                        },
                        "reminderTimeStatus" : {
                          "type" : "string",
                          "example" : "valid"
                        },
                        "reminderTimeText" : {
                          "type" : "string",
                          "example" : "am morgen"
                        },
                        "reminderTimeTextAfternoon" : {
                          "type" : "string",
                          "example" : "am morgen"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "time" ],
                "properties" : {
                  "time" : {
                    "type" : "string",
                    "example" : "08:00"
                  },
                  "timeDesignation" : {
                    "type" : "string",
                    "example" : "morgens"
                  },
                  "nextNode" : {
                    "type" : "string",
                    "example" : "success"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zipToCity" : {
      "post" : {
        "summary" : "maps zip to german city",
        "operationId" : "zipToCity",
        "description" : "maps a german zip code to a specific city",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ApiToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service returns choice and output",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "choice" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "output" : {
                      "type" : "object",
                      "properties" : {
                        "city" : {
                          "type" : "string",
                          "example" : "Berlin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "zip" ],
                "properties" : {
                  "zip" : {
                    "type" : "string",
                    "example" : 10178
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ParloaResponse" : {
        "type" : "object",
        "properties" : {
          "choice" : {
            "type" : "string",
            "example" : "success"
          },
          "output" : {
            "type" : "object"
          }
        }
      }
    },
    "parameters" : {
      "ApiToken" : {
        "in" : "header",
        "name" : "x-api-key",
        "description" : "API Key used for auth",
        "schema" : {
          "type" : "string"
        }
      }
    }
  }
}