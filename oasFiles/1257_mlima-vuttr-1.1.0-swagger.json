{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Vuttr API",
    "description" : "Vuttr API Challenge for BossaBox",
    "version" : "1.1.0"
  },
  "servers" : [ {
    "url" : "https://vuttrchallenge.herokuapp.com",
    "description" : "Main (production) server"
  }, {
    "url" : "https://vuttr-staging.herokuapp.com",
    "description" : "Staging server for testing"
  } ],
  "tags" : [ {
    "name" : "Auth",
    "description" : "Authorization"
  }, {
    "name" : "Tools",
    "description" : "Everything about Tools"
  }, {
    "name" : "Users",
    "description" : "Operations about user"
  } ],
  "paths" : {
    "/auth/token" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Get a JWT token",
        "description" : "Get a JWT token",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              },
              "examples" : {
                "login" : {
                  "$ref" : "#/components/examples/login"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Operation Successful"
          },
          "401" : {
            "description" : "Authentication failed"
          }
        }
      }
    },
    "/tools" : {
      "get" : {
        "tags" : [ "Tools" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Returns a list of tools.",
        "description" : "Returns a list of tools.",
        "parameters" : [ {
          "name" : "tag",
          "in" : "query",
          "required" : false,
          "description" : "Tag to filter by",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Tools" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Create a new tool",
        "description" : "Create a new tool",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tool"
              },
              "examples" : {
                "tool" : {
                  "$ref" : "#/components/examples/tool"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Tool created Successful"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "422" : {
            "description" : "Validation error"
          }
        }
      }
    },
    "/tools/{id}" : {
      "get" : {
        "tags" : [ "Tools" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Find a tool by ID",
        "description" : "Returns a single tool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of tool to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Tools" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update an existing tool",
        "description" : "Update an existing tool",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tool"
              },
              "examples" : {
                "tool" : {
                  "$ref" : "#/components/examples/tool"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of tool to update",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          },
          "422" : {
            "description" : "Validation error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Tools" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Remove an existing tool",
        "description" : "Remove a tool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of tool to delete",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Returns a list of users.",
        "description" : "Returns a list of users.",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "description" : "E-mail to filter by",
          "schema" : {
            "type" : "string",
            "format" : "email"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Create a new user",
        "description" : "Create a new user",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              },
              "examples" : {
                "tool" : {
                  "$ref" : "#/components/examples/user"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "User created Successful"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "422" : {
            "description" : "Validation error"
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Find a user by ID",
        "description" : "Returns a single user",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of user to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update an existing user",
        "description" : "Update an existing user",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              },
              "examples" : {
                "tool" : {
                  "$ref" : "#/components/examples/user"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of user to update",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          },
          "422" : {
            "description" : "Validation error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Remove an existing user",
        "description" : "Remove a user",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "ID of user to delete",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    }
  },
  "components" : {
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Token not provided, Token has expired"
      }
    },
    "schemas" : {
      "Tool" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array"
          }
        },
        "required" : [ "id", "title", "link", "description", "tags" ]
      },
      "User" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          }
        },
        "required" : [ "id", "name", "email" ]
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "examples" : {
      "tool" : {
        "summary" : "An example of a tool",
        "value" : {
          "title" : "Tool Title",
          "link" : "http://toollink.com.br",
          "description" : "Tool Description",
          "tags" : [ "tag1", "tag2", "tag3" ]
        }
      },
      "user" : {
        "summary" : "An example of a user",
        "value" : {
          "name" : "Vuttr Name",
          "email" : "vuttrmail@vuttr.com",
          "password" : "secret"
        }
      },
      "login" : {
        "summary" : "An example of a login to get a JWT",
        "value" : {
          "email" : "vuttrmail@vuttr.com",
          "password" : "secret"
        }
      }
    }
  },
  "security" : [ {
    "bearerAuth" : [ ]
  } ]
}