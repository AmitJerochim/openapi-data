openapi: 3.0.1
info:
  title: Deepbuzz API
  version: "v1-oas3"
paths:
  /api/Command/StartCamera:
    post:
      tags:
        - Command
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Command/StopCamera:
    post:
      tags:
        - Command
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Command/StartVideo:
    post:
      tags:
        - Command
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Command/StopVideo:
    post:
      tags:
        - Command
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Device:
    get:
      tags:
        - Device
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /api/ImageUpload:
    post:
      tags:
        - ImageUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ImageFile:
                  type: string
                  format: binary
                FileName:
                  type: string
                IpAddress:
                  type: string
                DateCreated:
                  type: string
                  format: date-time
            encoding:
              ImageFile:
                style: form
              FileName:
                style: form
              IpAddress:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
    get:
      tags:
        - ImageUpload
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  /api/Location:
    post:
      tags:
        - Location
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                DeviceId:
                  type: string
                Latitude:
                  type: number
                  format: double
                Longitude:
                  type: number
                  format: double
                UserId:
                  type: string
                DateCreated:
                  type: string
                  format: date-time
            encoding:
              DeviceId:
                style: form
              Latitude:
                style: form
              Longitude:
                style: form
              UserId:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
  /api/Project:
    get:
      tags:
        - Project
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
        - Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          text/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Project'
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
  '/api/Project/{id}':
    get:
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    put:
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Register:
    get:
      tags:
        - Register
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                DeviceName:
                  type: string
                DateCreated:
                  type: string
            encoding:
              DeviceName:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
  '/api/Register/{id}':
    get:
      tags:
        - Register
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    put:
      tags:
        - Register
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Register
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/VideoUpload/PostStream:
    post:
      tags:
        - VideoUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                VideoFile:
                  type: string
                  format: binary
                FileName:
                  type: string
                IpAddress:
                  type: string
                DateCreated:
                  type: string
                  format: date-time
            encoding:
              VideoFile:
                style: form
              FileName:
                style: form
              IpAddress:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
  /api/VideoUpload:
    post:
      tags:
        - VideoUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                VideoFile:
                  type: string
                  format: binary
                FileName:
                  type: string
                IpAddress:
                  type: string
                DateCreated:
                  type: string
                  format: date-time
            encoding:
              VideoFile:
                style: form
              FileName:
                style: form
              IpAddress:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
    get:
      tags:
        - VideoUpload
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  '/{id}':
    get:
      tags:
        - VideoUpload
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/VideoUploadController1:
    get:
      tags:
        - VideoUploadController1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  '/api/VideoUploadController1/{id}':
    get:
      tags:
        - VideoUploadController1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/VideoUploadController1/Image:
    post:
      tags:
        - VideoUploadController1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ImageFile:
                  type: string
                  format: binary
                FileName:
                  type: string
                IpAddress:
                  type: string
                DateCreated:
                  type: string
                  format: date-time
            encoding:
              ImageFile:
                style: form
              FileName:
                style: form
              IpAddress:
                style: form
              DateCreated:
                style: form
      responses:
        '200':
          description: Success
    get:
      tags:
        - VideoUploadController1
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  /api/VideoUploadController1/Stream:
    post:
      tags:
        - VideoUploadController1
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
  /api/VideoUploadController1/Video:
    get:
      tags:
        - VideoUploadController1
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  /api/WayPoint:
    post:
      tags:
        - WayPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WayPoint'
          text/json:
            schema:
              $ref: '#/components/schemas/WayPoint'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WayPoint'
      responses:
        '200':
          description: Success
components:
  schemas:
    Device:
      type: object
      properties:
        deviceId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        projectId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
      additionalProperties: false
    Project:
      type: object
      properties:
        projectId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          nullable: true
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
      additionalProperties: false
    Location:
      type: object
      properties:
        deviceId:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        userId:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
      additionalProperties: false
    WayPoint:
      type: object
      properties:
        deviceId:
          type: string
          nullable: true
        wayPointData:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          nullable: true
        userId:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
      additionalProperties: false
