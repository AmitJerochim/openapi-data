openapi: 3.0.0
info:
  title: Thinker.WebApi
  description: Thinker WebApi Documentation
  version: "1.0.0"
servers:
  - url: https://tmy.rd.migoapp.com/api/v1
  - url: https://ui.thinker.dev/api/v1
tags:
  - name: user
    description: Operations about users
  - name: auth
    description: Operations about authentication
  - name: language
    description: Operations about languages
  - name: menu
    description: Operations about menu
paths:
  /user/workspace:
    post:
      tags:
      - user
      summary: 使用者選擇當前的 Company / Department / Campaign
      operationId: userPostWorkspace
      requestBody:
        $ref: '#/components/requestBodies/Workspace'
      responses:
        "200":
          $ref: '#/components/responses/General'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "412":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
        - jwtAuth: []
    get:
      tags:
      - user
      summary: 使用者選擇當前的 Company / Department / Campaign
      operationId: userGetWorkspace
      responses:
        "200":
          description: 使用者選擇當前的 Company / Department / Campaign
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseModelBase'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workspace'
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
        - jwtAuth: []
  /menu:
    get:
      tags:
      - menu
      summary: 獲得當前用戶擁有的菜單列表
      operationId: menuCurrentUserOwn
      responses:
        "200":
          description: 獲得當前用戶擁有的菜單列表
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResponseModelBase'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Menu'
                      
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
        - jwtAuth: []
  /menu/shortcut:
    post:
      tags:
      - menu
      summary: 修改當前用戶的快捷列
      operationId: menuPostUserShortcut
      requestBody:
        content:
          application/json:
            schema:
              required:
              - menuId
              properties:
                data:
                  type: array
                  example:
                    - menuId: 5
                    - menuId: 7
                  items:
                    $ref: '#/components/schemas/ShortcutItem'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/General'
        "401":
          $ref: '#/components/responses/Unauthorized'          
        "412":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
        - jwtAuth: []
    get:
      tags:
      - menu
      summary: 獲得當前用戶的快捷列
      operationId: menuGetUserShortcut
      responses:
        "200":
          description: 獲得當前用戶的快捷列
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResponseModelBase'
                - type: object
                properties: 
                  data: 
                    type: array
                    example:
                        - id: "dashboard"
                          label: "dashboard-label"
                          url: ""
                        - id: "dt-mgr"
                          label: "dt-mgr-label"
                          url: "/gda/list-management.aspx"
                    items:
                      $ref: '#/components/schemas/Menu'                      
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
        - jwtAuth: []
  /language/{languageCode}:
    get:
      tags:
      - language
      summary: 多國語言字典
      operationId: languageDictionary
      parameters:
      - name: languageCode
        in: path
        description: 語言代碼, 採用 ISO-639-1 編碼
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: zh-tw
      responses:
        "200":
          description: 各語系字典定義
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResponseModelBase'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        words:
                          type: array
                          example:
                          - label: app.cancel
                            word: 取消
                          - label: app.confirm
                            word: 确认
                          items:
                            $ref: '#/components/schemas/LanguageWord'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
        "412":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []
      
  /user/forgetPassword:
    post:
      tags:
      - user
      summary: 忘記密碼
      operationId: userForgetPassword
      requestBody:
        $ref: '#/components/requestBodies/UserForgetPassword'
      responses:
        "200":
          description: General Api response
          headers:
            X-Token-Refresh:
              style: simple
              explode: false
              schema:
                type: string
                description: 更新有效期限的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
        "412":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []      
  /user/{userId}/functions:
    get:
      tags:
      - user
      summary: 使用者有權限的功能列表
      operationId: userAuthorisedFunctionList
      parameters:
      - name: userId
        in: path
        description: 使用者的Id, 由 {companyId + 數字} 組成。
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: company.12345
      responses:
        "200":
          description: 參數錯誤
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResponseModelBase'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        functions:
                          type: array
                          items:
                            $ref: '#/components/schemas/MenuFunction'

        "404":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []
  /user:
    patch:
      tags:
      - user
      summary: 更新使用者資料
      operationId: userPatch
      requestBody:
        $ref: '#/components/requestBodies/UserPatch'
      responses:
        "200":
          description: General Api response
          headers:
            X-Token-Refresh:
              style: simple
              explode: false
              schema:
                type: string
                description: 更新有效期限的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
        "412":
          description: 參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []
  /auth:
    get:
      tags:
      - auth
      summary: 獲得當前登入使用者
      operationId: authCurrentLogin
      responses:
        "200":
          $ref: '#/components/responses/UserLoginSuccess'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []
    post:
      tags:
      - auth
      summary: 使用者登入
      operationId: authLogin1
      requestBody:
        $ref: '#/components/requestBodies/UserLogin'
      responses:
        "200":
          $ref: '#/components/responses/UserLoginSuccess'
        "412":
          description: 用戶名密碼驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/responses/General'
      security:
        - jwtAuth: []
    delete:
      tags:
      - auth
      summary: 使用者登出
      operationId: authLogout
      responses:
        "200":
          description: General Api response
          headers:
            X-Token-Refresh:
              style: simple
              explode: false
              schema:
                type: string
                description: 更新有效期限的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModelBase'
      security:
      - jwtAuth: []
      
components:
  schemas:
    ResponseModelBase:
      required:
      - code
      - msg
      type: object
      properties:
        code:
          type: integer
        msg:
          type: string
        errors:
          type: array
          items:
            type: object
    LanguageWord:
      type: object
      properties:
        label:
          type: string
        words:
          type: string
    MenuFunction:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        url:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        companyId:
          type: string
        accessToken:
          type: string
        accessExpire:
          type: string
          format: date-time
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    Company:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        webPath:
          type: string
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    Department:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
    Campaign:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Menu:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        url:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Menu'
    Workspace:
      required: 
        - companyId
      type: object
      properties:
        companyId:
          type: string
          example: "ikea"
        departmentId:
          type: string
          example: "marketing"
        campaignId:
          type: string
          example: ""
    ShortcutItem:
      required: 
        - menuId
      type: object
      properties:
        menuId:
          type: integer
          example: 7
  responses:
    General:
      description: General Api response
      headers:
        X-Token-Refresh:
          style: simple
          explode: false
          schema:
            type: string
            description: 更新有效期限的 token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseModelBase'
    Unauthorized:
      description: Asscess Denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseModelBase'
    UserLoginSuccess:
      description: 驗證成功
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/ResponseModelBase'
            - type: object
              properties:
                data:
                  allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      alreadyLoggedIn:
                        type: boolean
    UserForgetPasswordSuccess:
      description: 忘記密碼信寄出成功
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/responses/General'
  parameters:
    userIdParam:
      name: userId
      in: path
      description: 使用者的Id, 由 {companyId + 數字} 組成。
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: company.12345
    languageCodeParam:
      name: languageCode
      in: path
      description: 語言代碼, 採用 ISO-639-1 編碼
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: zh-tw
  requestBodies:
    UserLogin:
      content:
        application/json:
          schema:
            required:
            - companyId
            - password
            - username
            type: object
            properties:
              companyId:
                type: string
              username:
                type: string
              password:
                type: string
              trial:
                type: boolean
                description: true 代表不進行正式登入，只是試驗該用戶是否已經登入。
                default: false
      required: true
    UserPatch:
      content:
        application/json:
          schema:
            required:
            - id
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              language:
                type: string
              name:
                type: string
              password:
                type: string
      required: true
    Workspace:  
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/Workspace'
      required: true
    UserForgetPassword:
      content:
        application/json:
          schema:
            required:
            - companyId
            - username
            type: object
            properties:
              companyId:
                type: string
              username:
                type: string
      required: true
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
