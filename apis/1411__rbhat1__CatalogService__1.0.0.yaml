openapi: 3.0.0
info:
  title: platform-cms-catalog-mgmt
  version: 1.0.0
  description: Catalog service
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking server
    url: https://virtserver.swaggerhub.com/rbhat/CatalogService/1.0.0
  - url: /test # for contract testing against a server with relative path '/test'
paths:
  '/catalogs':
    get:
      summary: Get the catalogs current user has access to
      description: The get request is used to retrieve catalog name, status, and sort order
      operationId: catalogs
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  catalogs:
                    type: object
                    properties:
                      catalogId:
                        type: string
                      name:
                        type: string
                      status:
                        type: string
                      sortOrder:
                        type: integer
                    required:
                      - catalogId
                      - name
                      - status
                      - sortOrder
                required:
                  - catalogs
              examples:
                example:
                  value:
                    catalogs:
                      - catalogId: '123456'
                        name: 'sampleName'
                        status: 'Active'
                        sortOrder: 1
                      - catalogId: '123457'
                        name: 'sampleName2'
                        status: 'Active'
                        sortOrder: 2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Token is required.
                    code: 400
        '401':
          description: Unauthorized. Cannot get the specified content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Unauthorized. Cannot get the specified content.
                    code: 401
        '403':
          description: Insufficient permissions to get the specified content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions to get the specified content
                    code: 403
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Unexpected error occurred.
                    code: 500
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
