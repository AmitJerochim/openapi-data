openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/vinothmswasth/virtualhospital/1.0.0
  - description: Swasth API
    url: https://virtserver.swaggerhub.com/vinothmswasth/covid19/1.0.0
info:
  description: Swasth virtual hospital
  version: "1.0.0"
  title: Swasth virtual hospital API
  contact:
    email: vinoth@swasth.tech
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: patient
    description: patient can access circle
paths:
  /ptcircle:
    get:
      tags:
        - patient
      summary: Get Patient Circle Information
      operationId: userID
      description: |
        By passing in the appropriate options, you can get petient circle information
      parameters:
        - in: query
          name: userID
          description: pass an optional userId to get patient circle infomration
          required: true
          schema:
            type: string
      responses:
        '200':
          description: patient id is matching return the patient circle details
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/patientcircle'
                example: 
                  - {ptCircleID "pat12355",userID "Ramu",circleCode "M15116"}
        '400':
          description: user id not matching
    post:
      tags:
        - patient
      summary: add patient to doctor circle
      operationId: ptCircleEntity
      description: Adds patient to doctor circle
      responses:
        '201':
          description: patient sub circle saved
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patientcircle'
        description: add patient circle detail
  /plan:
    get:
      tags:
        - admin
      summary: Get subscribe plans
      operationId: subscribePlanID
      description: |
        By passing in the appropriate options, you can get circle subscripe plan information
      parameters:
        - in: query
          name: circleCode
          description: pass an optional circleCode to get subscribe plan
          required: true
          schema:
            type: string
      responses:
        '200':
          description: circle Code is matching return the subscribe plan details
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/subscribeplan'
                example: 
                  - {planName "yearly",amount "1000"}
        '400':
          description: There is nosubscribe plans
    post:
      tags:
        - admin
      summary: add subscribe plan
      operationId: subscribeEntity
      description: Add circle plan 
      responses:
        '201':
          description: subscribe plan saved
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscribeplan'
        description: add circle plan detail
  /circle:
    get:
      tags:
        - doctor
      summary: Get circle by circle id
      operationId: circleID
      description: |
        By passing in the appropriate options, you can get circle information
      parameters:
        - in: query
          name: circleCode
          description: pass an optional circleCode to get circle detail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: circle Code is matching return the circle details
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/circle'
                example: 
                  - {circleID "12",circleCode "HJ524",
                    circleName "chdoctor"
                  }
        '400':
          description: There is nosubscribe plans
    post:
      tags:
        - doctor
      summary: create new circle
      operationId: circleEntity
      description: Add circle  
      responses:
        '201':
          description: doctor virtual circle
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/circle'
        description: create doctor virtual circle
  /doccircle:
    get:
      tags:
        - doctor
      summary: Get circle by circle id
      operationId: dovCircleID
      description: |
        By passing in the appropriate options, you can get circle information
      parameters:
        - in: query
          name: docUserID
          description: pass an optional doctor id to get circle members
          required: true
          schema:
            type: string
      responses:
        '200':
          description: doctor id is matching return the circle details
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/doctorcircle'
                example: 
                  - {circleID "12",circleCode "HJ524",
                    circleName "chdoctor"
                  }
        '400':
          description: There is nosubscribe plans
    post:
      tags:
        - doctor
      summary: add doctors to the circle
      operationId: docCircleEntity
      description: Add doctors to circle  
      responses:
        '201':
          description: doctor virtual circle
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/doctorcircle'
        description: add doctor to circle
components:
  schemas:
    patientcircle:
      type: object
      required: 
        - patientID
      properties:
        ptCircleID:
          type: integer
          format: int32 
        userID:
         type: string
        circleCode:
          type: string
        createdDateTime:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        subscribePlanID:
          type: integer
          format: int32
        UpdateDateTime:
          type: string
          format: date-time
        Status:
          type: string
          
    subscribeplan:
      type: object
      required: 
        - patientID
      properties:
        subscribePlanID:
          type: integer
          format: int32 
        planName:
         type: string
        planAmount:
          type: integer
        planValidity:
          type: string
        createdDateTime:
          type: string
          format: date-time
        createdByUserID:
          type: string
        UpdateDateTime:
          type: string
          format: date-time
        Status:
          type: string
          
    circle:
      type: object
      required: 
        - patientID
      properties:
        circleID:
          type: integer
          format: int32 
        circleName:
         type: string
        circleCode:
          type: string
        createdDateTime:
          type: string
          format: date-time
        createdByUserID:
          type: string
        UpdateDateTime:
          type: string
          format: date-time
        updateByUserID:
          type: string
        Status:
          type: string
          
    doctorcircle:
      type: object
      required: 
        - patientID
      properties:
        docCircleID:
          type: integer
          format: int32 
        docUserID:
         type: string
        circleCode:
          type: string
        userRole:
          type: string
        createdDateTime:
          type: string
          format: date-time
        createdByUserID:
          type: string
        UpdateDateTime:
          type: string
          format: date-time
        updateByUserID:
          type: string
        Status:
          type: string
