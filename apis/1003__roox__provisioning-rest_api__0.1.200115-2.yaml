openapi: 3.0.0
info:
  description:  API управления пользователями и ролями от лица серверной системы
  version: 0.1.200115-2
  title: Provisioning REST API
servers:
- url: /sso
paths:
  /provision/principals:
    get:
      description: |
        Поиск пользователя в системе.
        Для поиска в настоящий могут использоваться следующие связки параметров:
          - msisdn,
          - msisdn + realm
          - contactAddress + contactType
          - login
          - orgId + orgRole
          - ids
          - Так же 'ids' можно передать с помощью json body: { "ids":["id1","id2","id3"]}

        Для других типов поиска следует обратиться  в техподдержку
      operationId: findPrincipal
      parameters:
      - $ref: "#/components/parameters/msisdn"
      - $ref: "#/components/parameters/realm"
      - $ref: "#/components/parameters/contactAddress"
      - $ref: "#/components/parameters/contactType"
      - $ref: "#/components/parameters/login"
      - $ref: "#/components/parameters/orgId"
      - $ref: "#/components/parameters/orgRole"
      - $ref: "#/components/parameters/ids"
      summary: Поиск учетной записи пользователя
      responses:
        "200":
          description: Успешный ответ. Список найденных пользователей в response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrincipalListResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Доступ запрещен. Авторизация не пройдена.
        "404":
          $ref: "#/components/responses/NotFound"

      tags:
      - getPrincipal
    post:
      description: Создание учетной записи. В некоторых версиях продукта msisdn и login в теле JSON запроса, являются обязательными полями.
      operationId: createPrincipal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Principal"
      summary: Создание учетной записи пользователя
      responses:
        "201":
          description: Успешный ответ. Пользователь создан.
          headers:
            Location:
              schema:
                type: string
              description: "содержит ID созданной учетной записи в формате /sso/provision/principals/<присвоенный ID"
            X-Login-Location:
              schema:
                type: string
              description: "URL, при переходе на который произойдет автоматическая аутентификация пользлвателя без дополнительного запроса учетных данных"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Доступ запрещен. Авторизация не пройдена. Ошибка является non-retryable.
          headers:
            X-Context-Id:
              schema:
                type: string
              description: "Уникальный идентификатор запроса для сквозного логирования"
        "403":
          description: Доступ запрещен. Используемому системному пользователю API не разрешено выполнять операцию создания. Ошибка является non-retryable.
          headers:
            X-Context-Id:
              schema:
                type: string
              description: "Уникальный идентификатор запроса для сквозного логирования"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/UserExists"
        "408":
          $ref: "#/components/responses/GatewayError"
        "429":
          $ref: "#/components/responses/GatewayError"
        "500":
          $ref: "#/components/responses/UnexpectedServerError"
        "502":
          $ref: "#/components/responses/GatewayError"
        "503":
          $ref: "#/components/responses/GatewayError"
        "504":
          $ref: "#/components/responses/GatewayError"
      tags:
      - createPrincipal
    patch:
      description: Изменение учетной записи. Обычно запрос требует только параметра uid (помимо данных в теле), но в версиях для телеком вместо параметра uid может использоваться msisdn, externalId или (msisdn, externalId)
      operationId: patchPrincipal
      parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/msisdn"
      - $ref: "#/components/parameters/externalId"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PrincipalPatchOperation"
      summary: Изменение учетной записи пользователя
      responses:
        "204":
          description: Успешный ответ. Пользователь изменен
          headers:
            X-Context-Id:
              schema:
                type: string
              description: "Уникальный идентификатор запроса для сквозного логирования"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Доступ запрещен. Авторизация не пройдена. Ошибка является non-retryable.
          headers:
            X-Context-Id:
              schema:
                type: string
              description: "Уникальный идентификатор запроса для сквозного логирования"
        "403":
          description: Доступ запрещен. Используемому системному пользователю API не разрешено выполнять операцию изменения. Ошибка является non-retryable.
          headers:
            X-Context-Id:
              schema:
                type: string
              description: "Уникальный идентификатор запроса для сквозного логирования"
        "404":
          $ref: "#/components/responses/NotFound"
        "408":
          $ref: "#/components/responses/GatewayError"
        "429":
          $ref: "#/components/responses/GatewayError"
        "500":
          $ref: "#/components/responses/UnexpectedServerError"
        "502":
          $ref: "#/components/responses/GatewayError"
        "503":
          $ref: "#/components/responses/GatewayError"
        "504":
          $ref: "#/components/responses/GatewayError"

      tags:
      - modifyPrincipal
    delete:
      description: Удаление учетной записи. В версиях для телеком вместо параметра uid может использоваться msisdn, externalId, (msisdn, externalId)
      operationId: deletePrincipal
      parameters:
      - $ref: "#/components/parameters/msisdn"
      - $ref: "#/components/parameters/externalId"
      summary: Удаление учетной записи пользователя
      responses:
        "204":
          description: формат успешного ответа
        "401":
          description: Доступ запрещен
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionError"
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionError"
      tags:
      - deletePrincipal
  /provision/principals/{id}:
    get:
      description: "Поиск пользователя в системе по уникальному идентификатору"
      operationId: getPrincipal
      parameters:
      - $ref: "#/components/parameters/id"
      summary: Поиск учетной записи пользователя по id
      responses:
        "200":
          description: Успешный ответ. Результат поиска в response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrincipalWithOrganizationsResponse"
        "401":
          description: Доступ запрещен. Авторизация не пройдена
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      tags:
      - getPrincipal
    patch:
      description: Изменение учетной записи
      operationId: patchPrincipalById
      parameters:
      - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PrincipalPatchOperation"
      summary: Изменение учетной записи пользователя
      responses:
        "200":
          description: Успешный ответ. Пользователь изменен. Результат в response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrincipalResponse"
        "401":
          description: Доступ запрещен. Авторизация не пройдена
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionError"
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionError"
      tags:
      - modifyPrincipal
    put:
      description: Изменение учетной записи
      operationId: putPrincipal
      parameters:
      - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Principal"
      summary: Изменение учетной записи пользователя
      responses:
        "200":
          description: Успешный ответ. Пользователь изменен. Результат в response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrincipalResponse"
        "401":
          description: Доступ запрещен Авторизация не пройдена
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      tags:
      - modifyPrincipal
    delete:
      description: Удаление учетной записи.
      operationId: deletePrincipalById
      parameters:
      - $ref: "#/components/parameters/id"
      summary: Удаление учетной записи пользователя
      responses:
        "204":
          description: Успешный ответ. Учетная запись удалена
        "401":
          description: Доступ запрещен. Авторизация не пройдена
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      tags:
      - deletePrincipal
  /provision/principals/{id}/password/reset:
    put:
      description: Сброс пароля
      operationId: resetPassword
      parameters:
      - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationContext"
      summary: Сброс пароля пользователя
      responses:
        "204":
          description: Успешный ответ. Пароль сброшен
        "401":
          description: Доступ запрещен. Авторизация не пройдена
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      tags:
      - modifyPrincipal
  /provision/principals/{id}/blocked:
    get:
      description: проверка пользователя на блокировку
      operationId: isBlocked
      parameters:
      - $ref: "#/components/parameters/id"
      summary: Проверка пользователя на блокировку
      tags:
      - isBlocked
      responses:
        "200":
          description: Успешный ответ. Результат типа "boolean" в response body
          content:
            application/json:
              schema:
                type: boolean
        "401":
          description: Доступ запрещен. Авторизация не пройдена
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

security:
- basicAuth: []

components:
  responses:
    UserExists:
      description: "Пользователь уже существует. Ошибка является non-retryable."
      headers:
        X-Context-Id:
          schema:
            type: string
          description: "Уникальный идентификатор запроса для сквозного логирования"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionError'
          example:
            "error":
              "code": 409
              "message": "User with msisdn '9211234567' already exists"
    NotFound:
      description: "Адресуемая сущность не найдена. Ошибка является non-retryable."
      headers:
        X-Context-Id:
          schema:
            type: string
          description: "Уникальный идентификатор запроса для сквозного логирования"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionError'
          example:
            "error":
              "code": 404
              "message": "RX_SSO_PROVIS_9001: User with msisdn '9211234567' not found"
    BadRequest:
      description: "Некорректный запрос. Краткое описание причины будет в теле ответа. Ошибка является non-retryable."
      headers:
        X-Context-Id:
          schema:
            type: string
          description: "Уникальный идентификатор запроса для сквозного логирования"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionError'
          example:
            "error":
              "code": 400
              "message": "RX_SSO_PROVIS_9004: credentials should have property 'login'"
    UnexpectedServerError:
      description: "Сервер не смог выполнить запрос из-за непредвиденной ошибки. Ошибка является non-retryable, если не возвращается заголовок Retry-After."
      headers:
        X-Context-Id:
          schema:
            type: string
          description: "Уникальный идентификатор запроса для сквозного логирования"
        Retry-After:
          schema:
            type: string
            format: 'date-time'
          description: "Если заголовок выставлен, ошибка является retryable, и запрос следует повторить после указанного в заголовке времени"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionError'
          example:
            "error":
              "code": 500
              "message": "RX_SSO_PROVIS_1001: StackOverflowError"
    GatewayError:
      description: "Запрос не может быть обработан сервером или цепочкой обратных прокси из-за перегрузки или недоступности по иной причине. Ошибка является retryable"
      headers:
        X-Context-Id:
          schema:
            type: string
          description: "Уникальный идентификатор запроса для сквозного логирования"

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  parameters:
    id:
      name: id
      in: path
      description: "идентификатор пользователя в UIDM вида {prefix}_{id}, например sso_____3273f1ad-1811-410f-8ac9-f459312f15f6. Возвращается в headers при запросе на создание учетной записи, или при поиске в поле id в теле ответа"
      required: true
      schema:
        type: string
    ids:
      name: ids
      in: query
      description: "список идентификаторов пользователей"
      required: false
      schema:
        type: array
        items:
          type: string
    idParam:
      name: uid
      in: query
      description: идентификатор ресурса
      required: false
      schema:
        type: string
    msisdn:
      name: msisdn
      in: query
      description: номер пользователя
      required: false
      schema:
        type: string
    contactAddress:
      name: contactAddress
      in: query
      description: контактный адрес пользователя
      required: false
      schema:
        type: string
    login:
      name: login
      in: query
      description: логин пользователя
      required: false
      schema:
        type: string
    contactType:
      name: contactType
      in: query
      description: тип контакта пользователя
      required: false
      schema:
        type: string
    realm:
      name: realm
      in: query
      description: группа пользователей
      required: false
      schema:
        type: string
    externalId:
      name: externalId
      in: query
      description: внешний идентификатор пользователя
      required: false
      schema:
        type: string
    orgId:
      name: orgId
      in: query
      description: идентификатор организации
      required: false
      schema:
        type: string
    orgRole:
      name: orgRole
      in: query
      description: роль в организации
      required: false
      schema:
        type: string

  schemas:
    NotificationContext:
      type: object
      properties:
        category:
          type: string
        context:
          type: object
          additionalProperties: true
    ProvisionError:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: код ответа

            message:
              type: string
              description: описание ошибки
              example: "RX_SSO_PROVIS_9002: Principal format error. Unrecognized field 'wrong_property"
    PrincipalListResponse:
      type: array
      items:
        $ref: "#/components/schemas/PrincipalWithOrganizations"
    PrincipalResponse:
      type: object
      properties:
        id:
          type: string
          description: идентификатор пользователя
        td:
          type: string
          description: Дата окончания действия записи
        ts:
          type: string
          description: Дата создания записи
      allOf:
      - $ref: "#/components/schemas/Principal"

    PrincipalWithOrganizationsResponse:
      allOf:
      - $ref: "#/components/schemas/PrincipalResponse"
      - $ref: "#/components/schemas/PrincipalWithOrganizations"

    PrincipalContact:
      required:
      - "@c"
      - contactType
      - address
      properties:
        "@c":
          type: string
          enum:
          - ".Contact"
        contactType:
          type: string
          description: "(обязательно) тип контакта"
          enum:
          - "phone"
          - "email"
        address:
          type: string
          description: "(обязательно). Значение адреса (email или номер телефона), в зависимости от contactType, строка не более 1000 символов"
    GenericRelation:
      type: object
      properties:
        target:
          oneOf:
          - $ref: "#/components/schemas/PrincipalContact"
    Person:
      properties:
        firstNameNat:
          type: string
          description: " (опционально) имя пользователя, строковое значение, максимальная длина 255 символов"
        lastNameNat:
          type: string
          description: "(опционально) фамилия пользователя, строковое значение, максимальная длина 255 символов"
        patronymicNameNat:
          type: string
          description: " (опционально) отчество пользователя, строковое значение, максимальная длина 255 символов"
        displayNameNat:
          type: string
          description: "(опционально) полное имя пользователя, если нет отдельных полей, строковое значение, максимальная длина 255 символов"
        genericRelations:
          type: array
          description: "(опционально) структура и массив для задания контактных данных пользователя"
          items:
            $ref: "#/components/schemas/GenericRelation"
    Credentials:
      type: object
      properties:
        login:
          type: string
          description: "(обязательно) строковое поле с логином пользователя. В некоторых версиях продукта должен совпадать с msisdn или email"
        password:
          type: string
          description: "хеш пароля пользователя, строковое значение. Алгоритм хеширования может указываться с помощью префикса, непосредственно предшествующего значению хеша. В зависимости от версии продукта поддерживаются следующие префиксы:
{md5} - хеш md5. Является вариантом по умолчанию, если префикс не указан. {srp6a} - хеш алгоритм srp6a {bcrypt} - хеш bcrypt {resetrequired} - специальное значение, после которого не требуется передачи хеш пароля. Указывает на то, что пароль не установлен, вход по логину-паролю невозможен и пользователь должен пройти процедуру сброса/восстановления пароля."
    Principal:
      type: object
      properties:
        externalId:
          type: string
          description: "(опционально) уникальный идентификатор пользователя во внешней системе. Если передано, ID пользователя в сервере SSO будет создан на основе полученного значения. Если поле отсутствует, уникальный идентификатор будет сгенерирован сервером sso"
        msisdn:
          type: string
          description: "(опционально) строковое поле с номером телефона длиной 10 символов, только цифры"
        fd:
          type: string
          description: "(опционально) дата и время изменения профиля во внешней системе в формате UTC (в формате дата-время ISO 8601)"
        person:
          $ref: "#/components/schemas/Person"
          description: "(опционально) описание физ.лица/пользователя"
        credentials:
          type: array
          description: "(обязательно) структура с описанием учетных данных"
          items:
            $ref: "#/components/schemas/Credentials"
        extendedAttributes:
          type: object
          description: "(опционально). Дополнительные атрибуты пользователя, могут передаваться произвольные атрибуты с общим объемом данных не более 2000 символов."
          additionalProperties: true
        blocked:
          type: boolean
          description: "(опционально) признак блокировки (true - учетная запись заблокирована, false - разблокирована)"
        blockedTo:
          type: string
          description: "(опционально) дата, время в формате UTC определяет срок окончания блокировки. Если передать дату пустой или null, то учетная запись будет заблокирована бессрочно до явной разблокировки"
        blockedReasonId:
          type: string
          description: "(опционально) код причины блокировки (в рамках проекта должен быть согласовано свой справочник кодов)"
        networkAuthenticationType:
          type: string
          description: "(опционально, поддерживается только в версиях продукта для мобильных операторов) разрешение автоматического логина на основании данных мобильной сети (AUTO - автологин разрешен, NONE - автологин запрещен)"
          enum:
          - "AUTO"
          - "NONE"
          default: "AUTO"

    PrincipalWithOrganizations:
      allOf:
      - $ref: "#/components/schemas/Principal"
      - type: object
        properties:
          organizations:
            type: array
            description: "(опционально) список организаций, в которых состоит пользователь"
            items:
              $ref: "#/components/schemas/PrincipalOrganization"

    PrincipalOrganization:
      type: object
      properties:
        id:
          type: string
          description: "(обязательно) уникальный идентификатор организации"
        roles:
          type: array
          description: "(опционально) роли пользователя в данной организации"
          items:
            type: string

    PrincipalPatchOperation:
      type: object
      required:
      - op
      - path
      properties:
        op:
          type: string
          enum:
          - add
          - replace
          - remove
        path:
          type: string
          enum:
          - /person/firstNameNat
          - /person/firstNameNat
          - /person/displayNameNat
          - /credentials/login
          - /credentials/password
          - /credentials/passwordMustChange
          - /credentials/passwordExpiresAfter
          - /credentials/passwordExpired
          - /extendedAttributes/<attribute>
          - /person/genericRelations/<ordinal>/target/address
          description: >
            Указатель изменяемого свойства:
            * `/person/firstNameNat` - Имя пользователя в национальной локали
            * `/person/lastNameNat` - Фамилия пользователя в национальной локали
            * `/person/displayNameNat` - ФИО пользователя в национальной локали
            * `/credentials/login` - Логин пользователя. NOTE: при смене логина и если в системе используется SRP, произойдет сброс пароля
            * `/credentials/password` - Пароль. Может быть изменен только при алгоритмах хранения: bcrypt, aes. Для SRP следует устанавливать флаг passwordMustChange
            * `/credentials/passwordMustChange` - Флаг сброса пароля. При следующем входе пользователю будет предложена обязательная установка нового пароля.
            * `/credentials/passwordExpiresAfter` - Дата и время сброса пароля
            * `/credentials/passwordExpired` - Флаг устаревания пароля
            * `/extendedAttributes/<attribute>` - Атрибут из числа свободных атрибутов
            * `/person/genericRelations/<index>/target/address` - Контактные данные. Индекс следует получать из GET-запроса на данного принципала. NOTE: при смене контактных данных, которые являются так же и авторизационными, будет произведена операция смены и credentials/login

        value:
          type: object
          description: новое значение для поля, указанного в  'path' (RFC 6902)
