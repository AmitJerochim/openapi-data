{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "FleetView",
    "description" : "FleetView",
    "version" : "0.1"
  },
  "paths" : {
    "/auth/login/" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Return a token to be authorized",
        "operationId" : "auth_login_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObtainToken"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/auth/reset_password/" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Send an email to the user to reset the password",
        "operationId" : "auth_reset_password_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailField"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Sends an email to the associated emails requested"
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/auth/reset_password/confirm/{token}/" : {
      "put" : {
        "tags" : [ "auth" ],
        "description" : "Change the password of the user using the token provided in the url of the email to reset the password",
        "operationId" : "auth_reset_password_confirm_update",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResetPassword"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "auth" ],
        "description" : "Change the password of the user using the token provided in the url of the email to reset the password",
        "operationId" : "auth_reset_password_confirm_partial_update",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResetPassword"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/users/" : {
      "get" : {
        "tags" : [ "users" ],
        "description" : "Returns a list of users' profile",
        "operationId" : "users_list",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserRead"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "description" : "Creates a new user",
        "operationId" : "users_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "users" ],
        "description" : "Returns a list of users' profile",
        "operationId" : "user_profile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserRead"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "description" : "Updates the current user profile",
        "operationId" : "users_update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "users" ],
        "description" : "Updates the current user profile",
        "operationId" : "users_partial_update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "x-codegen-request-body-name" : "data"
    },
    "/users/me/" : {
      "get" : {
        "tags" : [ "users" ],
        "description" : "Returns current user's profile",
        "operationId" : "users_me_read",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "description" : "Updates the current user profile",
        "operationId" : "users_me_update",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "users" ],
        "description" : "Updates the current user profile",
        "operationId" : "users_me_partial_update",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/roles/" : {
      "get" : {
        "tags" : [ "roles" ],
        "description" : "Returns a list of roles",
        "operationId" : "role_list",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "roles" ],
        "description" : "Creates a new Role",
        "operationId" : "role_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/roles/{id}" : {
      "put" : {
        "tags" : [ "roles" ],
        "description" : "Updates a Role",
        "operationId" : "role_update_put",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "roles" ],
        "description" : "Updates a Role",
        "operationId" : "role_update_patch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/customer/" : {
      "get" : {
        "tags" : [ "customer" ],
        "description" : "Returns a list of companies",
        "operationId" : "Customer_list",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "customer" ],
        "description" : "Creates a new Customer",
        "operationId" : "Customer_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/customer/{id}" : {
      "put" : {
        "tags" : [ "customer" ],
        "description" : "Updates a Customer",
        "operationId" : "Customer_update_put",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "customer" ],
        "description" : "Updates a Customer",
        "operationId" : "Customer_update_patch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/plant/" : {
      "get" : {
        "tags" : [ "plant" ],
        "description" : "Returns a list of Plants",
        "operationId" : "plant_list",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PlantRead"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "plant" ],
        "description" : "Creates a new plant",
        "operationId" : "plant_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Plant"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlantRead"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/plant/{id}" : {
      "put" : {
        "tags" : [ "plant" ],
        "description" : "Updates a plant",
        "operationId" : "plant_update_put",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Plant"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlantRead"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "plant" ],
        "description" : "Updates a plant",
        "operationId" : "plant_update_patch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Plant"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlantRead"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/point/" : {
      "get" : {
        "tags" : [ "point" ],
        "description" : "Returns a list of points",
        "operationId" : "point_list",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Point"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "point" ],
        "description" : "Creates a new point",
        "operationId" : "point_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Point"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Point"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    },
    "/point/{id}" : {
      "put" : {
        "tags" : [ "point" ],
        "description" : "Updates a point",
        "operationId" : "point_update_put",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Point"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Point"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      },
      "patch" : {
        "tags" : [ "point" ],
        "description" : "Updates a point",
        "operationId" : "point_update_patch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Point"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Point"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "data"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Location" : {
        "title" : "Location",
        "required" : [ "name", "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "latitude" : {
            "title" : "Latitude",
            "type" : "number"
          },
          "longitude" : {
            "title" : "Longitude",
            "type" : "number"
          }
        }
      },
      "Point" : {
        "required" : [ "name", "order" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "name" : {
            "title" : "Point Name",
            "minLength" : 1,
            "type" : "string"
          },
          "order" : {
            "title" : "Order Point",
            "minLength" : 1,
            "type" : "integer"
          }
        }
      },
      "Plant" : {
        "required" : [ "name", "url_cable", "url_plant", "plant_user", "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "name" : {
            "title" : "Name of the Plant",
            "minLength" : 1,
            "type" : "string"
          },
          "url_cable" : {
            "title" : "Socket Url",
            "minLength" : 1,
            "type" : "string"
          },
          "url_plant" : {
            "title" : "Plant HMI url",
            "minLength" : 1,
            "type" : "string"
          },
          "plant_user" : {
            "title" : "Plant User",
            "minLength" : 1,
            "type" : "string"
          },
          "plant_password" : {
            "title" : "Plant Password",
            "minLength" : 1,
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "points" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "PlantRead" : {
        "required" : [ "name", "url_cable", "url_plant", "plant_user", "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "name" : {
            "title" : "Name of the Plant",
            "minLength" : 1,
            "type" : "string"
          },
          "url_cable" : {
            "title" : "Socket Url",
            "minLength" : 1,
            "type" : "string"
          },
          "url_plant" : {
            "title" : "Plant HMI url",
            "minLength" : 1,
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "points" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "Customer" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "name" : {
            "title" : "Point Name",
            "minLength" : 1,
            "type" : "string"
          },
          "plant" : {
            "title" : "Plants assigned to customer",
            "minLength" : 1,
            "type" : "array",
            "format" : "uuid",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "role" : {
            "title" : "Roles assigned to customer",
            "minLength" : 1,
            "type" : "array",
            "format" : "uuid",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "ObtainToken" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "title" : "Email",
            "minLength" : 1,
            "type" : "string"
          },
          "password" : {
            "title" : "Password",
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "TokenResponse" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "title" : "Token",
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "EmailField" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "title" : "Email",
            "minLength" : 1,
            "type" : "string",
            "format" : "email"
          }
        }
      },
      "ResetPassword" : {
        "required" : [ "password", "repeat_password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "title" : "Password",
            "minLength" : 1,
            "type" : "string"
          },
          "repeat_password" : {
            "title" : "Repeat password",
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "User" : {
        "title" : "User",
        "required" : [ "name", "email", "password", "expiry_date", "role" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "email" : {
            "title" : "Email address",
            "maxLength" : 254,
            "minLength" : 1,
            "type" : "string",
            "format" : "email"
          },
          "name" : {
            "title" : "First name",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "password" : {
            "title" : "Password",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string",
            "format" : "password"
          },
          "expiry_date" : {
            "title" : "Expiry Date",
            "type" : "integer",
            "enum" : [ 30, 60, 90, 365 ],
            "default" : 30
          },
          "role" : {
            "type" : "string",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "UserRead" : {
        "title" : "User",
        "required" : [ "name", "email", "expiry_date", "role" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "email" : {
            "title" : "Email address",
            "maxLength" : 254,
            "minLength" : 1,
            "type" : "string",
            "format" : "email"
          },
          "name" : {
            "title" : "First name",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "expiry_date" : {
            "title" : "Expiry Date",
            "type" : "integer",
            "enum" : [ 30, 60, 90, 365 ],
            "default" : 30
          },
          "role" : {
            "$ref" : "#/components/schemas/Role"
          }
        }
      },
      "Role" : {
        "title" : "Role",
        "required" : [ "name", "order" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Id",
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "name" : {
            "title" : "Name",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "order" : {
            "title" : "Order",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "integer"
          },
          "plant" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      }
    }
  }
}