penapi: 3.0.0

servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CIBG/Emailservice/1.0.0
  - url: http://cibg-api-egw-dev.mso.mhsrijk.nl
  - url: http://cibg-api-egw-test.mst.mhsrijk.nl
  - url: http://cibg-api-egw-acc.frd.otassonet.local
  - url: http://cibg-api-egw-prod.frd.ssonet.nl
info:
  description: Service om emails te versturen
  version: "1.0.1"
  title: Emailservice
  contact:
    email: dienstpostbusCIBG-ICTKoppelvlakken@minvws.nl
paths:
  /cgs/email/1/basic:
    post:
      summary: Eenvoudigde email
      description: |
        'Verstuur een eenvoudige email met een html opmaak van het bericht.''
      responses:
        '201':
          description: 'mail send'
        '400':
          description: 'invalide input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Bad Request'
                  reason: 'Invalid Schema ($.from: does not match the regex pattern ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$)'
        '500':
          description: 'onverwachte fout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Internal Server Error'
                  reason: 'Routing failure'
              
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/mailItem'
                - $ref: '#/components/schemas/basic'
        description: Mail bericht
  /cgs/email/1/logo:
    post:
      summary: Email met CIBG logo
      description: |
         'Verstuur een email met een CIBG logo in de koptekst en een html opmaak van het bericht'
      responses:
        '201':
          description: 'mail send'
        '400':
          description: 'invalide input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Bad Request'
                  reason: 'Invalid Schema ($.from: does not match the regex pattern ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$)'
        '500':
          description: 'onverwachte fout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Internal Server Error'
                  reason: 'Routing failure'
              
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/mailItem'
                - $ref: '#/components/schemas/basic'
        description: Mail bericht        
  /cgs/email/1/text:
    post:
      summary: Email zonder opmaak
      description: |
         'Verstuur een email als normale tekst zonder opmaakt'
      responses:
        '201':
          description: 'mail send'
        '400':
          description: 'invalide input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Bad Request'
                  reason: 'Invalid Schema ($.from: does not match the regex pattern ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$)'
        '500':
          description: 'onverwachte fout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cibgFault'
              example:
                fault:
                  code: 'Internal Server Error'
                  reason: 'Routing failure'
              
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/mailItem'
                - $ref: '#/components/schemas/text'
        description: Mail bericht
  /cgs/api/1/health/ping:
    get:
      summary: Controleer of service operationeel is
      responses:
        '200':
          description: Service is operationeel
components:
  schemas:
    emailadres:
      type: string
      format: email
      minLength: 1
      maxLength: 255
      pattern: '^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$'
      example: info@cibg.nl
    cibgFault:
      type: object
      properties:
        fault:
          type: object
          properties:
            code:
              type: string
              example: 'ErrorCode'
            reason:
              type: string
              example: 'Reden van fout'
            detail:
              type: string
              example: 'Extra informatie over fout'
    mailItem:
      type: object
      required:
        - from
        - to
        - subject
        - htmlBody
      properties:
        from:
          $ref: '#/components/schemas/emailadres'
        to:
          type: array
          example: 
            - 'b.de.vries@holland.nl' 
          items:
            $ref: '#/components/schemas/emailadres'
              
        cc:
          type: array
          example:
            - 's.de.vries@holland.nl'
          items:
             $ref: '#/components/schemas/emailadres'
        bcc:
          type: array
          example:
            - 'k.de.vries@holland.nl'
          items:
             $ref: '#/components/schemas/emailadres'
        subject:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '^[a-zA-Z0-9 .-]+$'
          example: Uw notificatie
        attachments:
          type: array
          items:
            type: object
            required:
              - content
              - filename
            properties:
              content:
                type: string
                format: base64
                pattern: '^(?:[A-Za-z0-9+]{4})*(?:[A-Za-z0-9+]{2}==|[A-Za-z0-9+]{3}=)?$'
                example: 'SW5o...b3Vk='
                
              filename:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '^[a-zA-Z0-9 .-]+$'
                example: 'document.pdf'
    basic:
      type: object
      properties:
        placeholders:
          properties:
            message:
              type: string
              minLength: 1
              description: 'De html representatie van de tekst in de mail'
              example: "<p>Geachte heer, mevrouw,</><p>Dit is de mail inhoud.</p>"
    text:
      type: object
      properties:
        placeholders:
          properties:
            message:
              type: string
              minLength: 1
              description: 'De tekst in de mail.'
              example: "Geachte heer, mevrouw, \n\nDit is de mail inhoud."