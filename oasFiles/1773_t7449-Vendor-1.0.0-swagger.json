{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/t7449/Vendor/1.0.0"
  }, {
    "description" : "Tiendamia Test Environment.",
    "url" : "https://vendor-api.tiendamia.com/api/vendor/v1"
  }, {
    "description" : "Tiendamia Production Environment.",
    "url" : "https://tiendamia.com/api/vendor/v1"
  } ],
  "info" : {
    "description" : "Tiendamia API Vendor",
    "version" : "1.0.0",
    "title" : "API Vendor"
  },
  "tags" : [ {
    "name" : "orders",
    "description" : "Orders"
  }, {
    "name" : "queues",
    "description" : "Queues"
  } ],
  "paths" : {
    "/orders/{code}/shipments" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "Create order shipment",
        "operationId" : "createOrderShipment",
        "description" : "Creates a new order shipment\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Order code",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrderShipment"
              }
            }
          }
        }
      }
    },
    "/orders/{code}/shipments/{shipment_code}" : {
      "put" : {
        "tags" : [ "orders" ],
        "summary" : "Update order shipment",
        "operationId" : "updateOrderShipment",
        "description" : "Updates an order shipment\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Order code",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "shipment_code",
          "required" : true,
          "description" : "Shipment code",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderShipment"
              }
            }
          }
        }
      }
    },
    "/orders/{code}/cancel" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "Create order cancelation",
        "operationId" : "createOrderCancelation",
        "description" : "Creates an order cancelation\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Order code",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrderCancelation"
              }
            }
          }
        }
      }
    },
    "/orders/{code}/delivery" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create order delivery",
        "operationId" : "createOrderDelivery",
        "description" : "Marks order as delivered",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Code of the order status must be updated",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Order successfully updated"
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrderDelivery"
              }
            }
          }
        }
      }
    },
    "/statuses/{code}" : {
      "put" : {
        "tags" : [ "status" ],
        "summary" : "update order status",
        "operationId" : "updateOrderStatus",
        "description" : "Updates the order's status\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Code of the order status must be updated",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Order successfully updated"
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStatus"
              }
            }
          }
        }
      }
    },
    "/queues/orders/" : {
      "get" : {
        "tags" : [ "queues" ],
        "summary" : "fetches the next order waiting to be processed",
        "operationId" : "getQueuedOrder",
        "description" : "Fetches next order from orders queue [WARNING] After fetching an order, you should remove within 5 minutes. Otherwise the order will be reenqueued",
        "responses" : {
          "200" : {
            "description" : "Order Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "queues" ],
        "summary" : "Removes the order form the order processing queue.",
        "operationId" : "deleteQueuedOrder",
        "parameters" : [ {
          "in" : "path",
          "name" : "code",
          "required" : true,
          "description" : "Order code",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Order removed from queue."
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Error"
          }
        }
      }
    },
    "/reset/" : {
      "post" : {
        "tags" : [ "reset" ],
        "summary" : "For testing purposes only. Resets test data to initial state so tests can be re-run.",
        "operationId" : "reset",
        "description" : "Resets the order queue to its initial state.",
        "responses" : {
          "200" : {
            "description" : "API Testing data reset."
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "apiKey" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "x-api-key"
      },
      "userEmail" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "x-user-email"
      }
    },
    "schemas" : {
      "ShipmentTrack" : {
        "type" : "object",
        "required" : [ "code", "carrier", "method" ],
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Shipment track code",
            "example" : "code"
          },
          "carrier" : {
            "type" : "string",
            "description" : "Shipping carrier",
            "example" : "carrier"
          },
          "method" : {
            "type" : "string",
            "description" : "Shipping method",
            "example" : "method"
          },
          "url" : {
            "type" : "string",
            "description" : "Tracking URL",
            "example" : "url"
          }
        }
      },
      "ShipmentData" : {
        "type" : "object",
        "required" : [ "code" ],
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Order shipment identification code",
            "example" : "code"
          },
          "delivered_carrier_date" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "Date and time the products were delivered to carrier",
            "example" : "2019-01-27T12:30:00-03:00"
          },
          "track" : {
            "$ref" : "#/components/schemas/ShipmentTrack"
          }
        }
      },
      "InvoiceData" : {
        "type" : "object",
        "required" : [ "key" ],
        "properties" : {
          "key" : {
            "type" : "string",
            "pattern" : "^\\d{44}$",
            "description" : "Order invoice key"
          },
          "issue_date" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "Date and time the invoice was issued"
          },
          "volume_qty" : {
            "type" : "integer",
            "description" : "Order volume quantity"
          }
        }
      },
      "CreateOrderCancelation" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Order status code"
          }
        }
      },
      "Status" : {
        "type" : "object",
        "required" : [ "code", "label", "type" ],
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Order status code"
          },
          "label" : {
            "type" : "string",
            "description" : "Order status label"
          },
          "type" : {
            "type" : "string",
            "description" : "Order status type"
          }
        }
      },
      "UpdateShipmentData" : {
        "type" : "object",
        "required" : [ "track" ],
        "properties" : {
          "delivered_carrier_date" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "Date and time the products were delivered to carrier"
          },
          "track" : {
            "$ref" : "#/components/schemas/ShipmentTrack"
          }
        }
      },
      "UpdateOrderShipment" : {
        "type" : "object",
        "required" : [ "shipment" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Order status code",
            "example" : "status"
          },
          "shipment" : {
            "$ref" : "#/components/schemas/UpdateShipmentData"
          },
          "estimated_delivery" : {
            "type" : "string",
            "description" : "Estimated delivery date",
            "format" : "datetime",
            "example" : "2019-01-27T12:30:00-03:00"
          }
        }
      },
      "CreateOrderShipment" : {
        "type" : "object",
        "required" : [ "shipment" ],
        "properties" : {
          "shipment" : {
            "$ref" : "#/components/schemas/ShipmentData"
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoiceData"
          },
          "status" : {
            "type" : "string",
            "description" : "Order status code",
            "example" : "status"
          },
          "estimated_delivery" : {
            "type" : "string",
            "format" : "datetime",
            "example" : "2019-01-27T12:30:00-03:00"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "required" : [ "error" ],
        "properties" : {
          "error" : {
            "type" : "string"
          }
        }
      },
      "OrderStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "Item" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "product_id" : {
            "type" : "string",
            "description" : "Vendor's SKU"
          },
          "name" : {
            "type" : "string"
          },
          "qty" : {
            "type" : "number"
          },
          "original_price" : {
            "type" : "number"
          },
          "special_price" : {
            "type" : "number"
          },
          "shipping_cost" : {
            "type" : "number",
            "example" : 0,
            "description" : "unused."
          },
          "giftwrap" : {
            "type" : "number",
            "example" : 0,
            "description" : "unused."
          },
          "detail" : {
            "type" : "string"
          },
          "remote_store_id" : {
            "type" : "string",
            "example" : "PRODUCTSAL0029",
            "description" : "Tiendamia's internal item SKU."
          }
        }
      },
      "Customer" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "date_of_birth" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "gender" : {
            "type" : "number",
            "description" : "Will always be empty."
          },
          "vat_number" : {
            "type" : "number",
            "description" : "Will always be empty."
          },
          "phones" : {
            "$ref" : "#/components/schemas/phones"
          },
          "state_registration" : {
            "type" : "number",
            "description" : "Will always be empty."
          },
          "tax_payer" : {
            "type" : "number",
            "description" : "Will always be empty."
          }
        }
      },
      "phones" : {
        "type" : "object",
        "properties" : {
          "customer_phone_list" : {
            "type" : "string",
            "description" : "Will always be empty."
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "full_name" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string",
            "description" : "Will always be empty -- street field already includes number."
          },
          "detail" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "deprecated" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "complement" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "neighborhood" : {
            "type" : "string",
            "description" : "Will always be empty."
          },
          "city" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "number"
          },
          "phone" : {
            "type" : "number",
            "description" : "Will always be empty."
          },
          "secondary_phone" : {
            "type" : "number",
            "description" : "Will always be empty."
          }
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Tiendamia's unique Order identifier. [A-Z 1-9]"
          },
          "channel" : {
            "type" : "string",
            "description" : "unused"
          },
          "placed_at" : {
            "format" : "datetime",
            "example" : "2019-01-27T12:30:00-03:00"
          },
          "updated_at" : {
            "format" : "datetime",
            "example" : "2019-01-27T12:30:00-03:00"
          },
          "imported_at" : {
            "format" : "string",
            "description" : "unusued"
          },
          "exported_at" : {
            "format" : "string",
            "description" : "unused"
          },
          "shipping_carrier" : {
            "type" : "string",
            "description" : "unused"
          },
          "shipping_estimate_id" : {
            "type" : "string",
            "description" : "unused"
          },
          "shipping_cost" : {
            "type" : "number",
            "description" : "unusued"
          },
          "seller_shipping_cost" : {
            "type" : "number",
            "description" : "unusued"
          },
          "calculation_type" : {
            "type" : "string",
            "description" : "unusued"
          },
          "shipping_method_id" : {
            "type" : "string",
            "description" : "ENUM [dropship_dropship, consolidatedshipping_consolidatedshipping]"
          },
          "expedition_limit_date" : {
            "type" : "string",
            "description" : "unused"
          },
          "estimated_delivery" : {
            "format" : "datetime",
            "example" : "2019-01-27T12:30:00-03:00"
          },
          "estimated_delivery_shift" : {
            "type" : "string",
            "example" : "AFTERNOON",
            "description" : "will always be AFTERNOON"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Item"
            }
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "shipping_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "billing_address" : {
            "$ref" : "#/components/schemas/Address",
            "description" : "will always match shipping address as we do not differentiate between them"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "sync_status" : {
            "type" : "string",
            "example" : "NOT_SYNCED",
            "description" : "unusued."
          },
          "total_ordered" : {
            "type" : "number",
            "description" : "order's grand total paid."
          },
          "interest" : {
            "type" : "number",
            "description" : "unusued. set to 0."
          },
          "payment" : {
            "type" : "string",
            "description" : "unused. Always empty."
          },
          "invoices" : {
            "type" : "string",
            "description" : "unused. Always empty."
          },
          "shipments" : {
            "type" : "string",
            "description" : "unused. Always empty."
          },
          "tags" : {
            "type" : "string",
            "description" : "unused. Always empty."
          },
          "delivered_date" : {
            "type" : "string",
            "description" : "unusued"
          },
          "available_to_sync" : {
            "type" : "string",
            "description" : "unused."
          }
        }
      },
      "UpdateStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "object",
            "properties" : {
              "label" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "CreateOrderDelivery" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "delivered_date" : {
            "type" : "string"
          }
        }
      }
    }
  }
}