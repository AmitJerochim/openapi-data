{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "v1.1",
    "title" : "Search API",
    "description" : "Search API provides functionality to index and search Resources",
    "license" : {
      "name" : "Â© Casebook"
    }
  },
  "paths" : {
    "/search/people" : {
      "get" : {
        "summary" : "Returns search results sorted by relevance to the search query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "in" : "query",
          "name" : "page[number]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "page[size]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "query",
          "required" : true,
          "description" : "The query being searched for as entered by the user\n  - Full text query searches following attributes:\n       - first_name\n       - last_name\n       - middle_name\n       - suffix\n       - formatted_name\n       - ssn\n       - race\n       - gender\n       - aliases\n       - phone_number\n       - email\n       - legacy_id\n       - location\n         - address1\n         - address2\n         - city\n         - zip_code\n         - county\n         - state\n         - country\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter[type]",
          "description" : "The type of search to perform.\n  - type=text : performs text search\n  - type=auto : performs autocomplete search only searching the first_name, middle_name, last_name & ssn, id\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "text", "auto" ],
            "default" : "text"
          }
        }, {
          "in" : "query",
          "name" : "filter[min_age]",
          "description" : "Filter search result by date of birth that person age should be greater than or equal to min_age (Person should be same age or older than min_age)\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "filter[max_age]",
          "description" : "Filter search result by date of birth that person age should be less than or equal to max_age (Person should be same age or younger than max_age)\n",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeopleSearchResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/people/{id}" : {
      "get" : {
        "summary" : "Get a person by Id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "required" : true,
          "in" : "path",
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single Person resource",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonData"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Standard401ErrorResponse"
          },
          "403" : {
            "$ref" : "#/components/responses/Standard403ErrorResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/Standard404ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/providers" : {
      "get" : {
        "summary" : "Returns search results sorted by relevance to the search query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "in" : "query",
          "name" : "page[number]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "page[size]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "query",
          "required" : true,
          "description" : "The query being searched for as entered by the user - Full text query searches following attributes:\n      - id\n      - name\n      - ein\n      - email\n      - phone_number\n      - provider_type\n      - contact_person\n        - first_name\n        - last_name\n        - middle_name\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter[type]",
          "description" : "The type of search to perform.\n  - type=text : performs text search\n  - type=auto : performs autocomplete search only searching the name & ein\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "text", "auto" ],
            "default" : "text"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderSearchResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/providers/{id}" : {
      "get" : {
        "summary" : "Get a provider by Id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "required" : true,
          "in" : "path",
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single Provider resource",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderData"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Standard401ErrorResponse"
          },
          "403" : {
            "$ref" : "#/components/responses/Standard403ErrorResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/Standard404ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/users" : {
      "get" : {
        "summary" : "Returns search results sorted by relevance to the search query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "in" : "query",
          "name" : "page[number]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "page[size]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "query",
          "required" : true,
          "description" : "The query being searched for as entered by the user\n  - Full text query searches following attributes:\n       - id\n       - first_name\n       - last_name\n       - identity_provider_id\n       - groups\n       - aliases\n       - phone_number\n       - email\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter[type]",
          "description" : "The type of search to perform.\n  - type=text : performs text search\n  - type=auto : performs autocomplete search only searching the first_name, last_name, id\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "text", "auto" ],
            "default" : "text"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersSearchResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/users/{id}" : {
      "get" : {
        "summary" : "Get a user by Id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "required" : true,
          "in" : "path",
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single User resource",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserData"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Standard401ErrorResponse"
          },
          "403" : {
            "$ref" : "#/components/responses/Standard403ErrorResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/Standard404ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/reports" : {
      "get" : {
        "summary" : "Returns search results sorted by relevance to the search query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "in" : "query",
          "name" : "page[number]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "page[size]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "query",
          "required" : true,
          "description" : "The query being searched for as entered by the report\n  - Full text query searches following attributes:\n       - id\n       - name\n       - reported_at\n       - intake_people\n       - location\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter[type]",
          "description" : "The type of search to perform.\n  - type=text : performs text search\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "text", "auto" ],
            "default" : "text"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportsSearchResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/reports/{id}" : {
      "get" : {
        "summary" : "Get a report by Id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "required" : true,
          "in" : "path",
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single Report resource",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportData"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Standard401ErrorResponse"
          },
          "403" : {
            "$ref" : "#/components/responses/Standard403ErrorResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/Standard404ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/search/global" : {
      "get" : {
        "summary" : "Returns search results sorted by relevance to the search query",
        "parameters" : [ {
          "$ref" : "#/components/parameters/version"
        }, {
          "$ref" : "#/components/parameters/jwt-authentication"
        }, {
          "in" : "query",
          "name" : "page[number]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "page[size]",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "query",
          "required" : true,
          "description" : "The query being searched for as entered by the user\n  - Full text query searches following attributes:\n       - Provider Searchable Fields\n       - People Searchable Fields\n       - Report Searchable Fields\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "indexes",
          "description" : "Comma seperated list of indexes to search. Defaults to all globally searchable indexes. Valid values are 'people', 'reports', and 'providers'\n",
          "schema" : {
            "type" : "string",
            "default" : "providers,people,reports"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalSearchResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Standard400ErrorResponse"
          },
          "406" : {
            "$ref" : "#/components/responses/Standard406ErrorResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "version" : {
        "name" : "Accept-Version",
        "in" : "header",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "v0"
        }
      },
      "jwt-authentication" : {
        "name" : "Authorization: Bearer",
        "in" : "header",
        "description" : "JSON Web Token signed by the authentication service, required for every request",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "responses" : {
      "Standard406ErrorResponse" : {
        "description" : "No version submitted in request header",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      },
      "Standard400ErrorResponse" : {
        "description" : "Invalid request body",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      },
      "Standard500ErrorResponse" : {
        "description" : "Internal server error",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      },
      "Standard401ErrorResponse" : {
        "description" : "Not Authenticated",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      },
      "Standard403ErrorResponse" : {
        "description" : "Forbidden - Not Authorized",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      },
      "Standard404ErrorResponse" : {
        "description" : "Not Found",
        "content" : {
          "application/vnd.api+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        }
      }
    },
    "schemas" : {
      "PeopleSearchResponse" : {
        "type" : "object",
        "required" : [ "data", "meta" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonSearchResult"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaPagingData"
          }
        }
      },
      "MetaPagingData" : {
        "type" : "object",
        "required" : [ "totalResourceCount" ],
        "properties" : {
          "totalResourceCount" : {
            "type" : "number",
            "minimum" : 0
          }
        }
      },
      "MetaResultData" : {
        "type" : "object",
        "required" : [ "score" ],
        "properties" : {
          "score" : {
            "type" : "number",
            "minimum" : 0
          },
          "text_highlighted" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "field_name" : {
                  "type" : "string"
                },
                "matches" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "PersonSearchResult" : {
        "type" : "object",
        "required" : [ "type", "id", "attributes" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Person"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaResultData"
          }
        }
      },
      "PersonData" : {
        "type" : "object",
        "required" : [ "data" ],
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "$ref" : "#/components/schemas/Person"
              }
            }
          }
        }
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "last_name" : {
            "type" : "string"
          },
          "middle_name" : {
            "type" : "string"
          },
          "first_ame" : {
            "type" : "string"
          },
          "suffix" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "formatted_name" : {
            "type" : "string"
          },
          "ssn" : {
            "type" : "string"
          },
          "date_of_birth" : {
            "type" : "string",
            "format" : "date-time"
          },
          "date_of_birth_text" : {
            "$ref" : "#/components/schemas/Day",
            "readOnly" : true
          },
          "is_deceased" : {
            "type" : "boolean"
          },
          "date_of_death" : {
            "type" : "string",
            "format" : "date-time"
          },
          "races" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonRace"
            }
          },
          "hispanic_or_latino" : {
            "type" : "string",
            "enum" : [ "yes", "no", "unknown", "declined" ]
          },
          "gender_identity" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "sexual_orientation" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "sex" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alias"
            }
          },
          "phones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            }
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Email"
            }
          },
          "current_profile_picture" : {
            "$ref" : "#/components/schemas/ProfilePicture"
          },
          "legacy_id" : {
            "type" : "string"
          },
          "primary_langauge" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "languages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonLanguage"
            }
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonLocation"
            }
          },
          "created_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          }
        }
      },
      "Alias" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "middle_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "suffix" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "aliax_type" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "Email" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "email_type" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "PersonLanguage" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "language" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "PersonLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "started_on" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ended_on" : {
            "type" : "string",
            "format" : "date-time"
          },
          "location" : {
            "$ref" : "#/components/schemas/PeopleAPILocation"
          },
          "person_location_type" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "PeopleAPILocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "school_district" : {
            "type" : "string"
          },
          "location_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "name" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "google_place_id" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number"
          },
          "longitude" : {
            "type" : "number"
          },
          "verified" : {
            "type" : "boolean"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "zip_code" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "geo_point" : {
            "$ref" : "#/components/schemas/GeoPoint"
          }
        }
      },
      "PersonRace" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "race" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "Phone" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "phone_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "contact_time" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "ProfilePicture" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "attachment_id" : {
            "type" : "string"
          }
        }
      },
      "ProviderData" : {
        "type" : "object",
        "required" : [ "data" ],
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "$ref" : "#/components/schemas/Provider"
              }
            }
          }
        }
      },
      "ProviderSearchResponse" : {
        "type" : "object",
        "required" : [ "data", "meta" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSearchResult"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaPagingData"
          }
        }
      },
      "ProviderSearchResult" : {
        "type" : "object",
        "required" : [ "type", "id", "attributes" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaResultData"
          }
        }
      },
      "Provider" : {
        "type" : "object",
        "properties" : {
          "provider_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phone_number" : {
            "type" : "string"
          },
          "ein" : {
            "type" : "string"
          },
          "under_contract" : {
            "type" : "number"
          },
          "accredited" : {
            "type" : "number"
          },
          "active" : {
            "type" : "boolean"
          },
          "provider_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Service"
            }
          },
          "license" : {
            "items" : {
              "$ref" : "#/components/schemas/License"
            }
          },
          "provider_people" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPerson"
            }
          },
          "assignees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Assignee"
            }
          },
          "contact_person" : {
            "$ref" : "#/components/schemas/ProviderPerson"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "created_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          }
        }
      },
      "Service" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "capacity_usage" : {
            "type" : "integer"
          },
          "service_type" : {
            "$ref" : "#/components/schemas/Reference"
          }
        }
      },
      "License" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "max_capacity" : {
            "type" : "integer"
          },
          "license_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "license_status" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "started_on" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ended_on" : {
            "type" : "string",
            "format" : "date-time"
          },
          "license_conditions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseCondition"
            }
          }
        }
      },
      "ProviderPerson" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/PersonReference"
          },
          "title" : {
            "type" : "string"
          },
          "org_id" : {
            "type" : "string"
          },
          "provider_person_role" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "started_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ended_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Assignee" : {
        "type" : "object",
        "properties" : {
          "assigned_user" : {
            "$ref" : "#/components/schemas/UserReference"
          },
          "started_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ended_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Day" : {
        "example" : "07/22/1992",
        "format" : "date",
        "type" : "string"
      },
      "Location" : {
        "properties" : {
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "zip_code" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "geo_point" : {
            "$ref" : "#/components/schemas/GeoPoint"
          }
        }
      },
      "GeoPoint" : {
        "properties" : {
          "lat" : {
            "type" : "number"
          },
          "lon" : {
            "type" : "number"
          }
        }
      },
      "LicenseCondition" : {
        "properties" : {
          "gender" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "min_age" : {
            "type" : "number"
          },
          "max_age" : {
            "type" : "number"
          }
        }
      },
      "UsersSearchResponse" : {
        "type" : "object",
        "required" : [ "data", "meta" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSearchResult"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaPagingData"
          }
        }
      },
      "UserSearchResult" : {
        "type" : "object",
        "required" : [ "type", "id", "attributes" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserSearchResultItem"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaResultData"
          }
        }
      },
      "UserData" : {
        "type" : "object",
        "required" : [ "data" ],
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "last_name" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "identity_provider_id" : {
            "type" : "string"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string",
            "description" : "name@domain"
          },
          "status" : {
            "type" : "string"
          },
          "external" : {
            "type" : "boolean"
          },
          "created_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          }
        }
      },
      "UserSearchResultItem" : {
        "type" : "object",
        "properties" : {
          "last_name" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "identity_provider_id" : {
            "type" : "string"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string",
            "description" : "name@domain"
          }
        }
      },
      "ReportsSearchResponse" : {
        "type" : "object",
        "required" : [ "data", "meta" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportSearchResult"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaPagingData"
          }
        }
      },
      "ReportSearchResult" : {
        "type" : "object",
        "required" : [ "type", "id", "attributes" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Report"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaResultData"
          }
        }
      },
      "ReportData" : {
        "type" : "object",
        "required" : [ "data" ],
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "$ref" : "#/components/schemas/Report"
              }
            }
          }
        }
      },
      "Report" : {
        "type" : "object",
        "properties" : {
          "report_name" : {
            "type" : "string"
          },
          "provider_id" : {
            "type" : "string"
          },
          "referred_by" : {
            "type" : "string"
          },
          "decision" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "report_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "report_status" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "response_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "assigned_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reported_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reported_at_text" : {
            "$ref" : "#/components/schemas/Day",
            "readOnly" : true
          },
          "published" : {
            "type" : "boolean"
          },
          "published_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "published_by" : {
            "type" : "string"
          },
          "intake_people" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonReference"
            }
          },
          "primary_intake_person" : {
            "$ref" : "#/components/schemas/PersonReference"
          },
          "reporter" : {
            "$ref" : "#/components/schemas/PersonReference"
          },
          "assigned_user" : {
            "$ref" : "#/components/schemas/UserReference"
          },
          "location" : {
            "$ref" : "#/components/schemas/ReportsAPILocation"
          },
          "created_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true,
            "format" : "date-time"
          }
        }
      },
      "ReportsAPILocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "phone_number" : {
            "type" : "string"
          },
          "location_type" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "name" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "google_place_id" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number"
          },
          "longitude" : {
            "type" : "number"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "zip_code" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "geo_point" : {
            "$ref" : "#/components/schemas/GeoPoint"
          }
        }
      },
      "GlobalSearchResponse" : {
        "type" : "object",
        "required" : [ "data", "meta" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/ProviderSearchResult"
              }, {
                "$ref" : "#/components/schemas/PersonSearchResult"
              } ]
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaPagingData"
          }
        }
      },
      "Reference" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PersonReference" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "middle_name" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "suffix" : {
            "$ref" : "#/components/schemas/Reference"
          },
          "formatted_name" : {
            "type" : "string"
          }
        }
      },
      "UserReference" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "middle_name" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "formatted_name" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "detail" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "Errors" : {
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}