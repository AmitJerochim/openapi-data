{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "http://<servername>/conweb/RESTServices"
  } ],
  "info" : {
    "description" : "Concerto Third party integration API",
    "version" : "5.10.11911",
    "title" : "Integration API"
  },
  "tags" : [ {
    "name" : "Authentication"
  }, {
    "name" : "Projects"
  }, {
    "name" : "Tier1 Tasks"
  }, {
    "name" : "Fullkit Tasks"
  }, {
    "name" : "Checklist"
  }, {
    "name" : "Tier2 Tasks"
  }, {
    "name" : "Tier3 Tasks"
  } ],
  "paths" : {
    "/AuthenticationService.svc/v1/GetAPIToken" : {
      "post" : {
        "security" : [ {
          "basicAuth" : [ ]
        } ],
        "tags" : [ "Authentication" ],
        "summary" : "To get the authentication token",
        "description" : "Authentication\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              },
              "example" : {
                "ServerName" : "Concerto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Token generation successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/token"
                },
                "example" : {
                  "authenticated" : true,
                  "timestamp" : "/Date(1542288855209+0530)/",
                  "token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiUmVzQWRtaW4iLCJzZXJ2ZXIiOiJDb25jZXJ0byIsImlhdCI6IjE1NDIyODg4NTUifQ.ZeaWi1LoLzHX1ZBdFx_hpcIox2HZH4fVKrev1g82oSg",
                  "userName" : "ResAdmin"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter/Invalid Credentials"
          }
        }
      }
    },
    "/ProjectRestService.svc/v1/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "To get all project details by status",
        "description" : "To get all project details by status\ncontent:\n  application/json:\n    schema:\n      items:\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "status",
          "description" : "Concerto Project Status. User can pass the comma seperated status codes.Codes for various status are as follows:- Planned = \"0\", In-process = \"2\", Completed = \"8\", Committed-In Queue = \"16\", On Hold=\"32\". In case this query is not passed, the response will contain all projects irrespective of the status. e.g. in order to filter Planned and IP projects user can pass query as status=0,2",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "status=0,2,8,16,32"
          },
          "example" : "status=0,2"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectsApiResponse"
                },
                "example" : {
                  "Data" : [ {
                    "BusinessUnit" : null,
                    "Customer" : null,
                    "Division" : "DIV1",
                    "ManagerId" : "PM1",
                    "Portfolio" : null,
                    "ProjectAttribute1" : null,
                    "ProjectAttribute2" : null,
                    "ProjectAttribute3" : null,
                    "ProjectAttribute4" : null,
                    "ProjectAttribute5" : null,
                    "ProjectId" : 39,
                    "ProjectName" : "new1",
                    "ProjectStatus" : 0,
                    "ProjectStatusDesc" : "Planned",
                    "SecsPerDay" : 28800,
                    "SubtaskEnabled" : true
                  }, {
                    "BusinessUnit" : null,
                    "Customer" : null,
                    "Division" : "DEFAULT",
                    "ManagerId" : "ResAdmin",
                    "Portfolio" : null,
                    "ProjectAttribute1" : null,
                    "ProjectAttribute2" : null,
                    "ProjectAttribute3" : null,
                    "ProjectAttribute4" : null,
                    "ProjectAttribute5" : null,
                    "ProjectId" : 42,
                    "ProjectName" : "Test_VS",
                    "ProjectStatus" : 2,
                    "ProjectStatusDesc" : "In Process",
                    "SecsPerDay" : 28800,
                    "SubtaskEnabled" : true
                  } ],
                  "Errors" : [ ],
                  "ReturnTypeCode" : 1,
                  "Warnings" : [ ]
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter",
            "content" : {
              "application/json" : {
                "example" : {
                  "Data" : null,
                  "Errors" : [ {
                    "Code" : "1",
                    "Description" : " Database error: %s ODBC CBrowseDbDatabase - Unexpected database error - retCode: -1, dbRetCode: 498, sdwNativeError: 102, sqlState: 37000, errorMsg: [Microsoft][ODBC SQL Server Driver][SQL Server]Incorrect syntax near ')'. *** *****",
                    "Type" : "INTERNAL_ERROR"
                  } ],
                  "ReturnTypeCode" : 2,
                  "Warnings" : [ ]
                }
              }
            }
          }
        }
      }
    },
    "/ProjectRestService.svc/v1/projects/{projectId}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "To get the project details by projectid",
        "description" : "To get the project details by projectid",
        "parameters" : [ {
          "in" : "path",
          "name" : "projectId",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 27
        } ],
        "responses" : {
          "200" : {
            "description" : "successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectApiResponse"
                },
                "example" : {
                  "Data" : {
                    "BusinessUnit" : null,
                    "CheckOutUser" : "ResAdmin",
                    "CheckedOut" : 1,
                    "Customer" : null,
                    "Description" : null,
                    "Division" : "Default",
                    "IsComplexMode" : false,
                    "ManagerDisplayName" : "Concerto Admin",
                    "ManagerId" : "ResAdmin",
                    "Portfolio" : null,
                    "ProjectAttribute1" : null,
                    "ProjectAttribute2" : null,
                    "ProjectAttribute3" : null,
                    "ProjectAttribute4" : null,
                    "ProjectAttribute5" : null,
                    "ProjectId" : 27,
                    "ProjectName" : "SPI",
                    "SecsPerDay" : 82800,
                    "Status" : "Planned",
                    "SubtaskEnabled" : true
                  },
                  "Errors" : [ ],
                  "ReturnTypeCode" : 1,
                  "Warnings" : [ ]
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/ProjectRestService.svc/v1/projects/filters" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Projects" ],
        "summary" : "To get a list of project filterd by project attributes",
        "description" : "To get a list of project filterd by project attributes",
        "parameters" : [ {
          "in" : "path",
          "name" : "projectId",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 27
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              },
              "example" : { }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectApiResponse"
                },
                "example" : {
                  "Data" : [ {
                    "businessUnit" : "FL3",
                    "color" : null,
                    "colorAbbr" : null,
                    "customDate1" : null,
                    "customDate2" : null,
                    "customer" : null,
                    "division" : "DIV1",
                    "divisionId" : 2,
                    "dueDate" : "9/4/2014",
                    "managerId" : "ResAdmin",
                    "plannedStartDate" : null,
                    "portfolio" : "H1",
                    "projectAttribute1" : null,
                    "projectAttribute2" : null,
                    "projectAttribute3" : null,
                    "projectAttribute4" : null,
                    "projectAttribute5" : null,
                    "projectFileCheckInType" : 2,
                    "projectName" : "Concerto_Global_DIV1",
                    "projectStatus" : 0,
                    "projectStatusDesc" : "Planned",
                    "projectUid" : 557,
                    "projectedDate" : "9/4/2014",
                    "secsPerDay" : 57600,
                    "subtaskEnabled" : false
                  } ],
                  "Errors" : [ ],
                  "ReturnTypeCode" : 1,
                  "Warnings" : [ ]
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectid}/tasks" : {
      "get" : {
        "tags" : [ "Tier1 Tasks" ],
        "summary" : "gets a list of tasks based on projectid",
        "operationId" : "getTasks",
        "description" : "By passing projectid, you can get list of tasks that are in execution in the concerto system, works only for In Process projects\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "projectid",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 243
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tasksApiResponse"
                },
                "example" : {
                  "Data" : [ {
                    "actualEndDate" : "04/17/2018 17:00:00",
                    "actualStartDate" : "04/17/2018 16:18:00",
                    "baselineDuration" : 2592000,
                    "comments" : null,
                    "durationRemainingInSecs" : 0,
                    "expectedFinish" : "07/14/2018 08:00:00",
                    "expectedStart" : "07/14/2018 08:00:00",
                    "isReadyToStart" : "Y",
                    "lastUpdatedDate" : "09/28/2018 00:00:00",
                    "mspTaskUID" : 230,
                    "name" : "Test Task #1",
                    "parentTaskUniqueId" : -1,
                    "participants" : null,
                    "predecessorsList" : null,
                    "projectName" : "Test Project",
                    "projectUID" : 16,
                    "resourceList" : "Default(1)",
                    "taskColor" : "80FF80",
                    "taskColorAbbr" : "LG",
                    "taskDurationInSecs" : 2592000,
                    "taskManager" : "Test_Mgr",
                    "taskManagerIDForDisplay" : "Test Mgr",
                    "taskStatus" : 2,
                    "taskStatusDesc" : "CO",
                    "taskType" : null,
                    "text1" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text10" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text2" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text3" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text4" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text5" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text6" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text7" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text8" : {
                      "status" : 0,
                      "text" : null
                    },
                    "text9" : {
                      "status" : 0,
                      "text" : null
                    },
                    "uniqueId" : 657
                  } ],
                  "Errors" : [ ],
                  "ReturnTypeCode" : 1,
                  "Warnings" : [ ]
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectId}/tasks/{taskId}" : {
      "patch" : {
        "tags" : [ "Tier1 Tasks" ],
        "summary" : "partial update of a tier1 task",
        "description" : "Updates specified fields for task - following fields can be updated:  name, taskManager, comments, participants, taskStatus, durationRemainingInSecs, resourceList, expectedFinishedDate\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 43
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 14
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRequest"
              }
            }
          },
          "description" : "path - can be any of updatable fields name value - string value of field, for dates format required - MM/DD/YYYY\n"
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectid}/fullkits" : {
      "get" : {
        "tags" : [ "Fullkit Tasks" ],
        "summary" : "gets a list of fullkitTasks based on projectid",
        "operationId" : "getFullkitTasks",
        "description" : "By passing projectid, you can get list of fulkitTasks that are in execution in the concerto system",
        "parameters" : [ {
          "in" : "path",
          "name" : "projectid",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/fullkit"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectid}/fullkits/{taskId}" : {
      "patch" : {
        "tags" : [ "Fullkit Tasks" ],
        "summary" : "update the expected end date and status of fullkit task",
        "operationId" : "update",
        "description" : "Update the fullkit task",
        "parameters" : [ {
          "in" : "path",
          "name" : "projectid",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "taskId",
          "description" : "concerto taskId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "get results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/ChecklistRestService.svc/v1/projects/{projectId}/tasks/{taskId}/checklists/{fieldId}" : {
      "get" : {
        "tags" : [ "Checklist" ],
        "summary" : "get all checklistitems",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "fieldId. In the case of checklist belongs to \"Description\" column, please pass this value as 0. In the case of custom fields pass this value as 1 to 10 respective to text1 to text10 custom fields. fieldId. Field Id mapping is as follows [fieldId -> Checklist] [0 -> Task Description], [1 -> Custom Text Field 1], [2 -> Custom Text Field 2], [3 -> Custom Text Field 3], [4 -> Custom Text Field 4], [5 -> Custom Text Field 5], [6 -> Custom Text Field 6], [7 -> Custom Text Field 7], [8 -> Custom Text Field 8], [9 -> Custom Text Field 9], [10 -> Custom Text Field 10]",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/checklistitem"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Checklist" ],
        "summary" : "add checklistitem",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "fieldId. In the case of checklist belongs to \"Description\" column, please pass this value as 0. In the case of custom fields pass this value as 1 to 10 respective to text1 to text10 custom fields. fieldId. Field Id mapping is as follows [fieldId -> Checklist] [0 -> Task Description], [1 -> Custom Text Field 1], [2 -> Custom Text Field 2], [3 -> Custom Text Field 3], [4 -> Custom Text Field 4], [5 -> Custom Text Field 5], [6 -> Custom Text Field 6], [7 -> Custom Text Field 7], [8 -> Custom Text Field 8], [9 -> Custom Text Field 9], [10 -> Custom Text Field 10]",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/checklistitem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ChecklistRestService.svc/v1/projects/{projectId}/tasks/{taskId}/checklists/{fieldId}/checklistItems/{checklistItemId}" : {
      "patch" : {
        "tags" : [ "Checklist" ],
        "summary" : "update particular checklistItem",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "fieldId. In the case of checklist belongs to \"Description\" column, please pass this value as 0. In the case of custom fields pass this value as 1 to 10 respective to text1 to text10 custom fields. fieldId. Field Id mapping is as follows [fieldId -> Checklist] [0 -> Task Description], [1 -> Custom Text Field 1], [2 -> Custom Text Field 2], [3 -> Custom Text Field 3], [4 -> Custom Text Field 4], [5 -> Custom Text Field 5], [6 -> Custom Text Field 6], [7 -> Custom Text Field 7], [8 -> Custom Text Field 8], [9 -> Custom Text Field 9], [10 -> Custom Text Field 10]",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "checklistItemId",
          "in" : "path",
          "description" : "fieldId. In the case of fullkit checklist please pass this value as 0.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Checklist" ],
        "summary" : "delete particular checklistitem",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "fieldId. In the case of checklist belongs to \"Description\" column, please pass this value as 0. In the case of custom fields pass this value as 1 to 10 respective to text1 to text10 custom fields. fieldId. Field Id mapping is as follows [fieldId -> Checklist] [0 -> Task Description], [1 -> Custom Text Field 1], [2 -> Custom Text Field 2], [3 -> Custom Text Field 3], [4 -> Custom Text Field 4], [5 -> Custom Text Field 5], [6 -> Custom Text Field 6], [7 -> Custom Text Field 7], [8 -> Custom Text Field 8], [9 -> Custom Text Field 9], [10 -> Custom Text Field 10]",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "checklistItemId",
          "in" : "path",
          "description" : "checklistitemId.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ChecklistRestService.svc/v1/projects/{projectId}/tasks/{taskId}/checklists/{fieldId}/checklistItems" : {
      "delete" : {
        "tags" : [ "Checklist" ],
        "summary" : "delete all checklistitems",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "fieldId. In the case of checklist belongs to \"Description\" column, please pass this value as 0. In the case of custom fields pass this value as 1 to 10 respective to text1 to text10 custom fields. fieldId. Field Id mapping is as follows [fieldId -> Checklist] [0 -> Task Description], [1 -> Custom Text Field 1], [2 -> Custom Text Field 2], [3 -> Custom Text Field 3], [4 -> Custom Text Field 4], [5 -> Custom Text Field 5], [6 -> Custom Text Field 6], [7 -> Custom Text Field 7], [8 -> Custom Text Field 8], [9 -> Custom Text Field 9], [10 -> Custom Text Field 10]",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectId}/tasks/{taskId}/subtasks" : {
      "get" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "gets all tier2 tasks under a tier1 task",
        "description" : "you can get list of sub tasks that are in execution in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get all tier2 tasks under a tier1 task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/tier2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "add a new tier2 task",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "description" : "Adds an tier 2 task to the concerto system under a parent task.",
        "responses" : {
          "200" : {
            "description" : "get all tier2 tasks under a tier1 task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tier2"
              }
            }
          },
          "description" : "tier2 taskto add"
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectId}/tasks/{taskId}/subtasks/{subtaskId}" : {
      "delete" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "delete a tier2 task",
        "description" : "you can delete a tier2 tasks in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectId",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "subtaskId",
          "in" : "path",
          "description" : "concerto tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "delete a tier2 tasks under a parent task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "Update/partial update of a tier2",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "subtaskId",
          "in" : "path",
          "description" : "concerto tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRequest"
              }
            }
          },
          "description" : "https://www.aaronsaray.com/2016/using-json-patch-in-swagger"
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/TaskRestService.svc/v1/projects/{projectId}/tasks/{taskId}/subtasks/{externalsubtaskId}" : {
      "delete" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "delete a tier2 task with external id",
        "description" : "you can delete a tier2 task with external id in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectId",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "externalsubtaskId",
          "in" : "path",
          "description" : "third party tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "isExternalId",
          "in" : "query",
          "description" : "This parameter should pass as a \"true\" then system will recognize subtaskid parameter as third party subtask id",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "delete a tier2 tasks under a parent task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Tier2 Tasks" ],
        "summary" : "Update/partial update of a tier2 task with external id",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "externalsubtaskId",
          "in" : "path",
          "description" : "third party tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "isExternalId",
          "in" : "query",
          "description" : "This parameter should pass as a \"true\" then system will recognize subtaskid parameter as third party subtask id",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRequest"
              }
            }
          },
          "description" : "https://www.aaronsaray.com/2016/using-json-patch-in-swagger"
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/apiResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Tier3RestService.svc/v1/projects/{projectId}/tasks/{tier1Id}/subtasks/{tier2Id}/Tier3Tasks" : {
      "get" : {
        "tags" : [ "Tier3 Tasks" ],
        "summary" : "gets all tier3 tasks under a tier2 task",
        "description" : "you can get list of sub tasks that are in execution in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier1Id",
          "in" : "path",
          "description" : "task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier2Id",
          "in" : "path",
          "description" : "tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get all tier2 tasks under a tier1 task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/tier3"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Tier3 Tasks" ],
        "summary" : "add a new tier3 task",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier1Id",
          "in" : "path",
          "description" : "tier1 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier2Id",
          "in" : "path",
          "description" : "tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "description" : "Adds an tier 3 task to the concerto system under a tier2 task.",
        "responses" : {
          "200" : {
            "description" : "successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tier3"
              }
            }
          },
          "description" : "tier3 taskto add"
        }
      }
    },
    "/Tier3RestService.svc/v1/projects/{projectId}/tasks/{taskid}/subtasks/{tier2id}/Tier3Tasks/{tier3id}" : {
      "get" : {
        "tags" : [ "Tier3 Tasks" ],
        "summary" : "get a particular tier3 task",
        "description" : "you can delete a tier3 task in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskid",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier2id",
          "in" : "path",
          "description" : "concerto tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier3id",
          "in" : "path",
          "description" : "concerto tier3 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get a particular tier3 task under a tier2 task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tier3"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tier3 Tasks" ],
        "summary" : "delete a tier3 task",
        "description" : "you can delete a tier3 task in the concerto system\n",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskid",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier2id",
          "in" : "path",
          "description" : "concerto tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier3id",
          "in" : "path",
          "description" : "concerto tier3 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "delete a tier3 task under a tier2 task",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/apiResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Tier3 Tasks" ],
        "summary" : "update a tier3 task",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "concerto projectid",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "taskid",
          "in" : "path",
          "description" : "concerto task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier2id",
          "in" : "path",
          "description" : "concerto tier2 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tier3id",
          "in" : "path",
          "description" : "concerto tier3 task unique id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "description" : "Adds an tier 3 task to the concerto system under a parent task.",
        "responses" : {
          "200" : {
            "description" : "item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tier3"
              }
            }
          },
          "description" : "tier3 taskto add"
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "basicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    },
    "schemas" : {
      "apiResponse" : {
        "type" : "object",
        "required" : [ "Data", "Errors", "ReturnTypeCode", "Warnings" ],
        "properties" : {
          "Data" : {
            "type" : "object"
          },
          "Errors" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "ReturnTypeCode" : {
            "type" : "integer"
          },
          "Warnings" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "projectsApiResponse" : {
        "type" : "object",
        "required" : [ "Data", "Errors", "ReturnTypeCode", "Warnings" ],
        "properties" : {
          "Data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectInfo"
            }
          },
          "Errors" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "ReturnTypeCode" : {
            "type" : "integer"
          },
          "Warnings" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "projectApiResponse" : {
        "type" : "object",
        "required" : [ "Data", "Errors", "ReturnTypeCode", "Warnings" ],
        "properties" : {
          "Data" : {
            "$ref" : "#/components/schemas/project"
          },
          "Errors" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "ReturnTypeCode" : {
            "type" : "integer"
          },
          "Warnings" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "tasksApiResponse" : {
        "type" : "object",
        "required" : [ "Data", "Errors", "ReturnTypeCode", "Warnings" ],
        "properties" : {
          "Data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/task"
            }
          },
          "Errors" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "ReturnTypeCode" : {
            "type" : "integer"
          },
          "Warnings" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "token" : {
        "type" : "object",
        "required" : [ "authenticated", "timestamp", "token", "userName" ],
        "properties" : {
          "authenticated" : {
            "type" : "boolean"
          },
          "timestamp" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          }
        }
      },
      "user" : {
        "type" : "object",
        "required" : [ "ServerName" ],
        "properties" : {
          "ServerName" : {
            "type" : "string"
          }
        }
      },
      "projectInfo" : {
        "type" : "object",
        "required" : [ "BusinessUnit", "Customer", "Division", "ManagerId", "Portfolio", "ProjectAttribute1", "ProjectAttribute2", "ProjectAttribute3", "ProjectAttribute4", "ProjectAttribute5", "ProjectId", "ProjectName", "ProjectStatus", "ProjectStatusDesc", "SubtaskEnabled", "secsPerDay" ],
        "properties" : {
          "BusinessUnit" : {
            "type" : "string"
          },
          "Customer" : {
            "type" : "string"
          },
          "Division" : {
            "type" : "string"
          },
          "ManagerId" : {
            "type" : "string"
          },
          "Portfolio" : {
            "type" : "string"
          },
          "ProjectAttribute1" : {
            "type" : "string"
          },
          "ProjectAttribute2" : {
            "type" : "string"
          },
          "ProjectAttribute3" : {
            "type" : "string"
          },
          "ProjectAttribute4" : {
            "type" : "string"
          },
          "ProjectAttribute5" : {
            "type" : "string"
          },
          "ProjectId" : {
            "type" : "integer"
          },
          "ProjectName" : {
            "type" : "string"
          },
          "ProjectStatus" : {
            "type" : "integer"
          },
          "ProjectStatusDesc" : {
            "type" : "string"
          },
          "SecsPerDay" : {
            "type" : "integer"
          },
          "SubtaskEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "project" : {
        "type" : "object",
        "required" : [ "BusinessUnit", "CheckOutUser", "CheckedOut", "Customer", "Description", "Division", "IsComplexMode", "ManagerDisplayName", "ManagerId", "Portfolio", "ProjectAttribute1", "ProjectAttribute2", "ProjectAttribute3", "ProjectAttribute4", "ProjectAttribute5", "ProjectId", "ProjectName", "SecsPerDay", "Status", "SubtaskEnabled" ],
        "properties" : {
          "BusinessUnit" : {
            "type" : "string"
          },
          "CheckOutUser" : {
            "type" : "string"
          },
          "CheckedOut" : {
            "type" : "integer"
          },
          "Customer" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Division" : {
            "type" : "string"
          },
          "IsComplexMode" : {
            "type" : "boolean"
          },
          "ManagerDisplayName" : {
            "type" : "string"
          },
          "ManagerId" : {
            "type" : "string"
          },
          "Portfolio" : {
            "type" : "string"
          },
          "ProjectAttribute1" : {
            "type" : "string"
          },
          "ProjectAttribute2" : {
            "type" : "string"
          },
          "ProjectAttribute3" : {
            "type" : "string"
          },
          "ProjectAttribute4" : {
            "type" : "string"
          },
          "ProjectAttribute5" : {
            "type" : "string"
          },
          "ProjectId" : {
            "type" : "integer"
          },
          "ProjectName" : {
            "type" : "string"
          },
          "SecsPerDay" : {
            "type" : "integer"
          },
          "Status" : {
            "type" : "string"
          },
          "SubtaskEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "PatchRequest" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PatchDocument"
        }
      },
      "PatchDocument" : {
        "description" : "A JSONPatch document as defined by RFC 6902",
        "required" : [ "op", "path" ],
        "properties" : {
          "op" : {
            "type" : "string",
            "description" : "The operation to be performed",
            "enum" : [ "replace", "remove", "add", "move", "copy", "test" ]
          },
          "path" : {
            "type" : "string",
            "description" : "A JSON-Pointer"
          },
          "value" : {
            "type" : "string",
            "description" : "The value to be used within the operations."
          },
          "from" : {
            "type" : "string",
            "description" : "A string containing a JSON Pointer value."
          }
        }
      },
      "task" : {
        "type" : "object",
        "required" : [ "actualEndDate", "actualStartDate", "baselineDuration", "comments", "durationRemainingInSecs", "expectedFinish", "expectedStart", "isReadyToStart", "lastUpdatedDate", "mspTaskUID", "name", "parentTaskUniqueId", "participants", "predecessorsList", "projectName", "projectUID", "resourceList", "taskColor", "taskColorAbbr", "taskDurationInSecs", "taskManager", "taskManagerIDForDisplay", "taskStatus", "taskStatusDesc", "taskType", "text1", "text2", "text3", "text5", "text6", "text7", "text8", "text9", "text10", "uniqueId" ],
        "properties" : {
          "actualEndDate" : {
            "type" : "string",
            "description" : "End date of completed tasks, in MM/DD/YYYY format"
          },
          "actualStartDate" : {
            "type" : "string",
            "description" : "Start date of in-progress/completed tasks, in MM/DD/YYYY format"
          },
          "baselineDuration" : {
            "type" : "integer"
          },
          "comments" : {
            "type" : "string"
          },
          "durationRemainingInSecs" : {
            "type" : "integer"
          },
          "expectedFinish" : {
            "type" : "string"
          },
          "expectedStart" : {
            "type" : "string"
          },
          "isReadyToStart" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "type" : "string"
          },
          "mspTaskUID" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "parentTaskUniqueId" : {
            "type" : "integer",
            "description" : "-1 for tier1 task"
          },
          "predecessorsList" : {
            "type" : "string",
            "description" : "comma separated task uids of predecessors tasks"
          },
          "projectName" : {
            "type" : "string"
          },
          "projectUId" : {
            "type" : "string"
          },
          "resourceList" : {
            "type" : "string",
            "description" : "comma separated list of resources assigned to task, units are in () ex - Default(1),R1(2)"
          },
          "taskColor" : {
            "type" : "string",
            "description" : "rgb value"
          },
          "taskColorAbbr" : {
            "type" : "string",
            "description" : "first letter of color - ex - R, G, Y, LG etc."
          },
          "taskDurationInSecs" : {
            "type" : "integer"
          },
          "taskManager" : {
            "type" : "string"
          },
          "taskManagerIDForDisplay" : {
            "type" : "string"
          },
          "taskStatus" : {
            "type" : "integer",
            "description" : "integer value for this parameter NOT_STARTED-0,IN_PROGRESS-1,COMPLETED-2."
          },
          "taskStatusDesc" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string",
            "description" : "null for normal task, ex - SNET, PT, CMS, PE etc."
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "text5" : {
            "type" : "string"
          },
          "text6" : {
            "type" : "string"
          },
          "text7" : {
            "type" : "string"
          },
          "text8" : {
            "type" : "string"
          },
          "text9" : {
            "type" : "string"
          },
          "text10" : {
            "type" : "string"
          },
          "uniqueId" : {
            "type" : "integer"
          }
        }
      },
      "fullkit" : {
        "type" : "object",
        "required" : [ "taskUniqueId", "name", "taskColor", "taskColorAbbr", "taskManager", "taskManagerIDForDisplay", "expectedFinishDate", "helpNeeded", "expectedStart", "isReadyToStart", "suggestedStartDate", "participants", "taskStatus", "taskStatusDesc", "comments", "completionDate", "constraintDate", "delay", "dueDate", "lastUpdatedDate", "parentTaskUniqueId", "predecessorsList", "taskType", "resources", "projectUId", "projectName", "projectStatus", "text1", "text2", "text3", "text5", "text6", "text7", "text8", "text9", "text10", "mspTaskUID", "taskDurationInSecs", "baselineDuration", "percentCompletion", "readyToStart", "startDate" ],
        "properties" : {
          "taskUniqueId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "taskColor" : {
            "type" : "string"
          },
          "taskColorAbbr" : {
            "type" : "string"
          },
          "taskManager" : {
            "type" : "string"
          },
          "taskManagerIDForDisplay" : {
            "type" : "string"
          },
          "expectedFinishDate" : {
            "type" : "string"
          },
          "helpNeeded" : {
            "type" : "string"
          },
          "expectedStart" : {
            "type" : "string"
          },
          "isReadyToStart" : {
            "type" : "string"
          },
          "suggestedStartDate" : {
            "type" : "string"
          },
          "participants" : {
            "type" : "string"
          },
          "taskStatus" : {
            "type" : "integer",
            "description" : "You can pass integer value for this parameter FK_INVALID - -1, FK_NS (Not Started)- 0, FK_IP (In Process) - 1, FK_REL (Released) - 2 FK_CO (Completed) - 4."
          },
          "taskStatusDesc" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "completionDate" : {
            "type" : "string"
          },
          "constraintDate" : {
            "type" : "string"
          },
          "delay" : {
            "type" : "string"
          },
          "dueDate" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "type" : "string"
          },
          "parentTaskUniqueId" : {
            "type" : "string"
          },
          "predecessorsList" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string"
          },
          "resources" : {
            "type" : "string"
          },
          "projectUId" : {
            "type" : "string"
          },
          "projectName" : {
            "type" : "string"
          },
          "projectStatus" : {
            "type" : "string"
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "text5" : {
            "type" : "string"
          },
          "text6" : {
            "type" : "string"
          },
          "text7" : {
            "type" : "string"
          },
          "text8" : {
            "type" : "string"
          },
          "text9" : {
            "type" : "string"
          },
          "text10" : {
            "type" : "string"
          },
          "mspTaskUID" : {
            "type" : "string"
          },
          "taskDurationInSecs" : {
            "type" : "string"
          },
          "baselineDuration" : {
            "type" : "string"
          },
          "percentCompletion" : {
            "type" : "string"
          },
          "readyToStart" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string"
          }
        }
      },
      "tier2" : {
        "type" : "object",
        "required" : [ "uniqueId", "name", "taskColor", "taskColorAbbr", "taskManager", "taskManagerIDForDisplay", "expectedFinish", "expectedStart", "isReadyToStart", "suggestedStartDate", "participants", "taskStatus", "taskStatusDesc", "durationRemainingInSecs", "comments", "lastUpdatedDate", "parentTaskUniqueId", "predecessorsList", "taskType", "resourceList", "actualStartDate", "actualEndDate", "projectUId", "projectName", "text1", "text2", "text3", "text5", "text6", "text7", "text8", "text9", "text10", "mspTaskUID", "taskDurationInSecs", "baselineDuration" ],
        "properties" : {
          "uniqueId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "taskColor" : {
            "type" : "string"
          },
          "taskColorAbbr" : {
            "type" : "string"
          },
          "taskManager" : {
            "type" : "string"
          },
          "taskManagerIDForDisplay" : {
            "type" : "string"
          },
          "expectedFinish" : {
            "type" : "string"
          },
          "expectedStart" : {
            "type" : "string"
          },
          "isReadyToStart" : {
            "type" : "string"
          },
          "suggestedStartDate" : {
            "type" : "string"
          },
          "participants" : {
            "type" : "string"
          },
          "taskStatus" : {
            "type" : "integer",
            "description" : "You can pass integer value for this parameter NOT_STARTED-0,IN_PROGRESS-1,COMPLETED-2."
          },
          "taskStatusDesc" : {
            "type" : "string"
          },
          "durationRemainingInSecs" : {
            "type" : "integer"
          },
          "comments" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "type" : "string"
          },
          "parentTaskUniqueId" : {
            "type" : "string"
          },
          "predecessorsList" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string"
          },
          "resourceList" : {
            "type" : "string"
          },
          "actualStartDate" : {
            "type" : "string"
          },
          "actualEndDate" : {
            "type" : "string"
          },
          "projectUId" : {
            "type" : "string"
          },
          "projectName" : {
            "type" : "string"
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "text5" : {
            "type" : "string"
          },
          "text6" : {
            "type" : "string"
          },
          "text7" : {
            "type" : "string"
          },
          "text8" : {
            "type" : "string"
          },
          "text9" : {
            "type" : "string"
          },
          "text10" : {
            "type" : "string"
          },
          "mspTaskUID" : {
            "type" : "string"
          },
          "taskDurationInSecs" : {
            "type" : "string"
          },
          "baselineDuration" : {
            "type" : "string"
          }
        }
      },
      "tier3" : {
        "type" : "object",
        "required" : [ "uniqueId", "name", "tier2Id", "tier1Id", "projectId", "plannedStartDate", "suggestedStartDate", "actualStartDate", "plannedRateOfWork", "currentRateOfWork", "remainingWork", "plannedWork", "actualCompletedWork", "projectedRateOfWork", "projectedDate" ],
        "properties" : {
          "uniqueId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "tier2Id" : {
            "type" : "integer"
          },
          "tier1Id" : {
            "type" : "integer"
          },
          "projectId" : {
            "type" : "integer"
          },
          "plannedStartDate" : {
            "type" : "string"
          },
          "suggestedStartDate" : {
            "type" : "string"
          },
          "actualStartDate" : {
            "type" : "string"
          },
          "plannedRateOfWork" : {
            "type" : "string"
          },
          "currentRateOfWork" : {
            "type" : "string"
          },
          "remainingWork" : {
            "type" : "string"
          },
          "plannedWork" : {
            "type" : "string"
          },
          "actualCompletedWork" : {
            "type" : "string"
          },
          "projectedRateOfWork" : {
            "type" : "string"
          },
          "projectedDate" : {
            "type" : "string"
          }
        }
      },
      "checklistitem" : {
        "type" : "object",
        "required" : [ "date1", "date2", "id", "sequenceId", "text", "text1", "text2", "text3", "text4", "status" ],
        "properties" : {
          "date1" : {
            "type" : "string"
          },
          "date2" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "sequenceId" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "text4" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer",
            "description" : "This field is used in the case of update only. You can pass integer here. NS (Not Started) - 0, CO (Completed) - 1"
          }
        }
      },
      "ProjectFilter" : {
        "type" : "object",
        "required" : [ "date1", "date2", "id", "sequenceId", "text", "text1", "text2", "text3", "text4", "status" ],
        "properties" : {
          "date1" : {
            "type" : "string"
          },
          "date2" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "sequenceId" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "text4" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer",
            "description" : "This field is used in the case of update only. You can pass integer here. NS (Not Started) - 0, CO (Completed) - 1"
          }
        }
      }
    }
  },
  "security" : [ {
    "bearerAuth" : [ ]
  } ]
}