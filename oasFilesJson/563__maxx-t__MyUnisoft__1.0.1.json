{"openapi":"3.0.0","info":{"description":"# Introduction\nThis service exposes an API to manage \"api tokens\", a swagger server and is a proxy to other services. <br> API tokens can be used by third parties to call proxied routes.\n# Authentication\nWhen using the API, you must authenticate with a user token (delivered by the auth service) in the request. You can find and manage your API keys from the web application under Settings, in the API tab. <br><br> Authentication to the API is performed via HTTP, using the `Authorization` header. <br><br> ``` Authorization: { user token } ```<br> ``` X-Third-Party-Secret: { a secret shared between MyUnisoft and you } ``` <br><br> All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.\n# Key format\n```\n  {\n    \"id\": Key identifier (allocated by the platform).\n    \"grantedFor\": The third party id that will have access to the society.\n    \"grantedBy\": The member group id.\n    \"target\": The society id.\n    \"value\": Secret API token (allocated by the platform).\n  }\n```\n> Note that the `value` filed is only displayed once (in the create and regen operations).\n","version":"1.0.1","title":"MyUnisoft internal API v1"},"security":[{"UserTokenAuth":[]}],"paths":{"/key/list":{"get":{"tags":["API key"],"summary":"Get key list.","description":"Returns the list of API token delivered by the user's organisation.\n","security":[{"UserTokenAuth":[]}],"operationId":"listKeys","responses":{"200":{"description":"Returns a list of key.","content":{"application/json":{"schema":{"$ref":"#/components/responses/KeyArray"}}}},"default":{"description":"Error.","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error"}}}}}}},"/key/create":{"post":{"tags":["API key"],"summary":"Creates a key.","description":"Post body must contain the following paramters:\n```\n  {\n    \"grantedFor\": The third party id that will have access to the society.\n    \"target\": The society (schema) that will be targetted by the API token.\n  }\n```\n","security":[{"UserTokenAuth":[]}],"operationId":"createKey","parameters":[{"$ref":"#/components/parameters/KeyIdParameter"}],"requestBody":{"$ref":"#/components/requestBodies/KeyPost"},"responses":{"200":{"description":"Returns a new key.","content":{"application/json":{"schema":{"$ref":"#/components/responses/KeyCreate"}}}},"default":{"description":"Error.","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error"}}}}}}},"/key/{keyId}/regen":{"put":{"tags":["API key"],"summary":"Update a key.","description":"Single call to delete a key and get a new one.<br> Note that the the returned key identifier will not be the same.\n","security":[{"UserTokenAuth":[]}],"operationId":"regenKey","parameters":[{"$ref":"#/components/parameters/KeyIdParameter"}],"responses":{"200":{"description":"Returns a new key.","content":{"application/json":{"schema":{"$ref":"#/components/responses/KeyRegen"}}}},"404":{"description":"Targeted key not found (maybe deleted).","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error404"}}}},"default":{"description":"Error.","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error"}}}}}}},"/key/{keyId}/delete":{"delete":{"tags":["API key"],"summary":"Delete a key.","description":"Deletes the key by its identifier.\n","security":[{"UserTokenAuth":[]}],"operationId":"deleteKey","parameters":[{"$ref":"#/components/parameters/KeyIdParameter"}],"responses":{"200":{"description":"Returns a boolean (always true).","content":{"application/json":{"schema":{"$ref":"#/components/responses/KeyDelete"}}}},"404":{"description":"Targeted key not found (maybe deleted).","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error404"}}}},"default":{"description":"Error.","content":{"application/json":{"schema":{"$ref":"#/components/responses/Error"}}}}}}}},"components":{"schemas":{"KeyBase":{"type":"object","properties":{"id":{"type":"string","format":"uuid","readOnly":true,"description":"Key identifier (allocated by the platform).","example":"a35c9fee-3893-4eb7-adde-205e1be03209"},"grantedFor":{"type":"integer","format":"int64","readOnly":true,"description":"The third party id that will have access to the society.","example":1},"grantedBy":{"type":"integer","format":"int64","readOnly":true,"description":"The member group id.","example":1},"target":{"type":"integer","format":"int64","readOnly":true,"description":"The society id.","example":2}}},"KeyValue":{"type":"object","properties":{"value":{"type":"string","format":"string","readOnly":true,"description":"Secret API token (allocated by the platform).","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Et9HFtf9R3GEMA0IICOfFMVXY7kkTX1wr4qCyhIf58U"}}},"Key":{"allOf":[{"$ref":"#/components/schemas/KeyBase"},{"$ref":"#/components/schemas/KeyValue"}]},"KeyPost":{"type":"object","properties":{"grantedFor":{"type":"integer","format":"int64","description":"The third party that will have access to the society.","example":1},"target":{"type":"integer","format":"int64","description":"The society (schema) that will be targetted by the API token.","example":2}},"required":["grantedFor","target"]},"KeyArray":{"type":"array","items":{"$ref":"#/components/schemas/KeyBase"}},"KeyDelete":{"description":"Returns true.","type":"boolean"},"Error":{"type":"object","properties":{"status":{"type":"integer","format":"int32","example":418},"message":{"type":"string","example":"I'm a teapot"}}},"Error404":{"type":"object","properties":{"status":{"type":"integer","example":404},"message":{"type":"string","example":"Not Found"}}}},"parameters":{"KeyIdParameter":{"name":"keyId","in":"path","description":"Identifier of the key.","required":true,"schema":{"type":"string","format":"uuid","example":"552aa3fd-3b5e-434f-bdd3-9b6c58c269c1"}}},"requestBodies":{"KeyPost":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeyPost"}}},"description":"Object to send to create a key.","required":true}},"responses":{"Error":{"$ref":"#/components/schemas/Error"},"Error404":{"$ref":"#/components/schemas/Error404"},"KeyArray":{"$ref":"#/components/schemas/KeyArray"},"KeyCreate":{"$ref":"#/components/schemas/Key"},"KeyRegen":{"$ref":"#/components/schemas/Key"},"KeyDelete":{"$ref":"#/components/schemas/KeyDelete"}},"securitySchemes":{"UserTokenAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"Token delivered by the auth service."}}},"servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/maxx-t/MyUnisoft/1"}]}