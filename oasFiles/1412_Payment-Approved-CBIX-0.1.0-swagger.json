{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Payment Approved CBIX API",
    "description" : "Payment Approved Cross-Border Information Exchange API",
    "contact" : {
      "email" : "support@paymentapproved.com"
    },
    "version" : "0.1.0"
  },
  "servers" : [ {
    "url" : "https://api.sandbox.paymentapproved.com",
    "description" : "API endpoint without live transactions to be used by customers for development"
  }, {
    "url" : "https://api.live.paymentapproved.com",
    "description" : "API endpoint with live transactions"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "partners",
    "description" : "Manage partners (businesses)"
  }, {
    "name" : "users",
    "description" : "User management (team members)"
  }, {
    "name" : "passwords",
    "description" : "Password recovery"
  }, {
    "name" : "payments",
    "description" : "Payment routes"
  } ],
  "paths" : {
    "/user/{partner_id}/{email_phone_id}/info" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Returns the requested User - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "partner_id associated with the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "email_phone_id",
          "in" : "path",
          "description" : "Email or phone number of user to fetch",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/user/{partner_id}/{email_phone_id}" : {
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Deletes the requested user - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "partner_id associated with the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "email_phone_id",
          "in" : "path",
          "description" : "Email or phone number of user to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User deleted"
          },
          "404" : {
            "description" : "User Not Found"
          }
        }
      }
    },
    "/user/{user_id}/partner/{partner_id}" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Updates the user information - NOTE Requires Partner-Admin Token for Auth",
        "description" : "Updates a user in the system. Must include user id and user must exist and be active",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "partner_id associated with the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "code from email or sms",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "a71ab2a3-ff4d-43b7-812c-b3877340e81c"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/User"
        },
        "responses" : {
          "200" : {
            "description" : "Updated User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "404" : {
            "description" : "User not Found or inactive"
          },
          "422" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Logs user in to the system - NOTE Requires Client Token for Auth",
        "description" : "Validated user email or phone againt password. Return Auth Token",
        "operationId" : "loginUser",
        "requestBody" : {
          "description" : "User item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Login"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "AuthToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginSuccess"
                }
              }
            }
          },
          "404" : {
            "description" : "Username or Password is incorrect."
          },
          "422" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/user/partner/{partner_id}" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Create a user and returns new object with user id populated - NOTE Requires Partner-Admin Token for Auth",
        "description" : "Adds a User to the system",
        "operationId" : "addUser",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "partner_id associated with the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/User"
        },
        "responses" : {
          "201" : {
            "description" : "User created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRegister"
                }
              }
            }
          },
          "422" : {
            "description" : "invalid input, object invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/verification/code/resend" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Request a user verification code - NOTE Requires Client Token for Auth",
        "description" : "Checks if the email in the request is a valid users' email and sends a verification code via email if user is not verified.",
        "operationId" : "resendVerificationCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully sent verification code",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404" : {
            "description" : "invalid user, user already verified",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/user/verification/{code}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Validates a user using the supplied code",
        "operationId" : "userVerificationCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "code from email or sms",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "99999999-9999-9999-9999-999999999999"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully verified user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Verification code expired",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_1"
                }
              }
            }
          }
        }
      }
    },
    "/password/code/send" : {
      "post" : {
        "tags" : [ "passwords" ],
        "summary" : "Request a password reset code - NOTE Requires Client Token for Auth",
        "operationId" : "passwordCode",
        "requestBody" : {
          "description" : "User item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResetRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Password Email Sent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_2"
                }
              }
            }
          }
        }
      }
    },
    "/password/reset" : {
      "post" : {
        "tags" : [ "passwords" ],
        "summary" : "Reset a password for a given user - NOTE Requires Client Token for Auth",
        "operationId" : "passwordReset",
        "requestBody" : {
          "description" : "Password and reset code",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordReset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Password Reset"
          },
          "404" : {
            "description" : "Invalid or Expired code.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_3"
                }
              }
            }
          }
        }
      }
    },
    "/partner" : {
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Adds a Partner - NOTE Requires Client Token for Auth",
        "operationId" : "postPartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PartnerNew"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The newly created partner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Returns the requested partner - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getPartner",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of Partner to fetch",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested Partner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PartnerFull"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      },
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Updates the supplied partner - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "updatePartner",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of partner to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated Partner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      },
      "delete" : {
        "tags" : [ "partners" ],
        "summary" : "Deletes the requested Partner - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "deletePartner",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of Partner to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Partner successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}/gateway" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Returns list of all partner gateways - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getPartnerGateway",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested gateways",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayofGateways"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      },
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Adds a payment gateway configuration - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "gatewayConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner not found"
          }
        }
      }
    },
    "/partner/{partner_id}/SMSConfig" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Returns List of partner SMS configurations - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getSMSConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested Partner SMS Configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SMSConfig"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      },
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Adds a SMS configuration - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "smsConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SMSConfigPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The newly created SMS Configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SMSConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "partners" ],
        "summary" : "Delete partner SMS configurations - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "deleteSMSConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted Partner SMS Configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SMSConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      }
    },
    "/partner/{partner_id}/MailConfig" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Returns list of partner mail configurations - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getMailConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested partner mail configurations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MailConfig"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner does not exist"
          }
        }
      },
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Adds a email provider configuration - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "mailConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailConfigPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The newly created mail configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          },
          "404" : {
            "description" : "Partner not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "partners" ],
        "summary" : "Delete partner Email configurations - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "deleteMailConfig",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted Partner Email Configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}/customers_instruments_count" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Get customer and instrument count (for dashboard). - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getCustomersAndInstrumentsCount",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the number of customers and instruments for a partner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}/rule" : {
      "post" : {
        "tags" : [ "partners" ],
        "summary" : "Create a Behavior Rule. The rule can written in the format provided by json-rules-engine framework. - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "addBehaviorRule",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BehaviorRuleNew"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added behavior rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BehaviorRule"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}/rule/{hook}" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Retrieve a Behavior Rule - NOTE Requires Partner-Admin Token for Auth",
        "operationId" : "getBehaviorRule",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "id of partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hook",
          "in" : "path",
          "description" : "hook where the behavior rule is applied",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "pre_transaction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved behavior rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BehaviorRule"
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/partner/{partner_id}/users" : {
      "get" : {
        "tags" : [ "partners" ],
        "summary" : "Returns list of all partner users - NOTE Requires Partner-User Token for Auth",
        "operationId" : "getPartnerUsers",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "description" : "Id of Partner",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "invalid token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/quotes" : {
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Create a new quote",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionQuoteRequest"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/acceptances" : {
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Accept an existing quote",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredebitedTransaction"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredebitedTransactionQuoteAcceptance"
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "/transactions/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve an existing transaction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredebitedTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/transaction-searches" : {
      "get" : {
        "description" : "Searches transactions",
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Address" : {
        "type" : "object",
        "properties" : {
          "street" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "postal" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          }
        }
      },
      "PredebitedTransactionStatus" : {
        "enum" : [ "New", "Creditable", "Crediting", "Credited", "Erred", "TimedOut", "Cancelled" ]
      },
      "PredebitedTransaction" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/PredebitedTransactionStatus"
          },
          "quote_id" : {
            "type" : "string"
          },
          "quote_fees" : {
            "type" : "string"
          },
          "quote_expiration" : {
            "type" : "number"
          },
          "quote_instant" : {
            "type" : "number"
          },
          "sender_amount" : {
            "type" : "number"
          },
          "sender_currency_code" : {
            "type" : "string"
          },
          "sender_country_code" : {
            "type" : "string"
          },
          "sender_payment_instrument_id" : {
            "type" : "string"
          },
          "sender_payment_instrument" : {
            "type" : "string"
          },
          "sender_id" : {
            "type" : "string"
          },
          "sender_family_name" : {
            "type" : "string"
          },
          "sender_given_name" : {
            "type" : "string"
          },
          "sender_email" : {
            "type" : "string"
          },
          "sender_phone" : {
            "type" : "string"
          },
          "sender_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "beneficiary_amount" : {
            "type" : "number"
          },
          "beneficiary_currency_code" : {
            "type" : "string"
          },
          "beneficiary_country_code" : {
            "type" : "string"
          },
          "beneficiary_payment_instrument_id" : {
            "type" : "string"
          },
          "beneficiary_payment_instrument" : {
            "type" : "string"
          },
          "beneficiary_id" : {
            "type" : "string"
          },
          "beneficiary_family_name" : {
            "type" : "string"
          },
          "beneficiary_given_name" : {
            "type" : "string"
          },
          "beneficiary_email" : {
            "type" : "string"
          },
          "beneficiary_phone" : {
            "type" : "string"
          },
          "beneficiary_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "partner_id" : {
            "type" : "string"
          },
          "partner_name" : {
            "type" : "string"
          },
          "credit_gateway_id" : {
            "type" : "string"
          },
          "credit_gateway_name" : {
            "type" : "string"
          },
          "credit_gateway_response" : {
            "type" : "string"
          },
          "credit_gateway_transaction_id" : {
            "type" : "string"
          },
          "debit_gateway_id" : {
            "type" : "string"
          },
          "debit_gateway_name" : {
            "type" : "string"
          },
          "debit_gateway_response" : {
            "type" : "string"
          },
          "debit_gateway_transaction_id" : {
            "type" : "string"
          },
          "examination_id" : {
            "type" : "string"
          },
          "folio_id" : {
            "type" : "string"
          },
          "finalized_at" : {
            "type" : "string"
          }
        }
      },
      "Clabe" : {
        "type" : "object",
        "properties" : {
          "familyName" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string",
            "maxLength" : 18,
            "minLength" : 18
          }
        }
      },
      "PredebitedTransactionQuoteAcceptance" : {
        "type" : "object",
        "properties" : {
          "quote_id" : {
            "type" : "string"
          },
          "sender" : {
            "$ref" : "#/components/schemas/PartnerCustomerNew"
          },
          "beneficiary" : {
            "$ref" : "#/components/schemas/PartnerCustomerNew"
          },
          "beneficiary_instrument" : {
            "$ref" : "#/components/schemas/Clabe"
          },
          "partner_id" : {
            "type" : "string"
          },
          "partner_name" : {
            "type" : "string"
          },
          "folio_id" : {
            "type" : "string"
          }
        }
      },
      "PaymentInstrumentType" : {
        "enum" : [ "AchAccount", "SpeiAccount" ]
      },
      "TransactionQuoteRequest" : {
        "required" : [ "partner_id", "sender_currency_code", "sender_amount", "sender_country_code", "beneficiary_currency_code", "beneficiary_country_code", "beneficiary_instrument_type" ],
        "type" : "object",
        "properties" : {
          "partner_id" : {
            "type" : "string"
          },
          "sender_currency_code" : {
            "type" : "string",
            "description" : "ISO-4217 format"
          },
          "sender_amount" : {
            "type" : "string"
          },
          "sender_country_code" : {
            "type" : "string",
            "description" : "ISO-3166-1 alpha-2 format"
          },
          "beneficiary_currency_code" : {
            "type" : "string",
            "description" : "ISO-4217 format"
          },
          "beneficiary_country_code" : {
            "type" : "string",
            "description" : "ISO-3166-1 alpha-2 format"
          },
          "beneficiary_instrument_type" : {
            "$ref" : "#/components/schemas/PaymentInstrumentType"
          }
        }
      },
      "UserPost" : {
        "required" : [ "email", "first_name", "last_name", "partner_id", "password", "phone" ],
        "properties" : {
          "partner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Arya"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Stark"
          },
          "email" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          },
          "password" : {
            "type" : "string",
            "example" : "P@m3ntAppr0ved"
          }
        }
      },
      "UserRegister" : {
        "required" : [ "email", "first_name", "id", "is_verified", "last_name", "partner_id", "phone" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "a71ab2a3-ff4d-43b7-812c-b3877340e81c"
          },
          "partner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Arya"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Stark"
          },
          "email" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          },
          "is_verified" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "User" : {
        "required" : [ "email", "first_name", "id", "is_verified", "last_name", "partner_id", "phone", "tags", "verified_at" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "a71ab2a3-ff4d-43b7-812c-b3877340e81c"
          },
          "partner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Sansa"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Stark"
          },
          "email" : {
            "type" : "string",
            "example" : "sansa.stark@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          },
          "password" : {
            "type" : "string",
            "example" : "P@m3ntAppr0ved"
          },
          "tags" : {
            "type" : "string",
            "example" : "something,else"
          }
        }
      },
      "PartnerNew" : {
        "required" : [ "administrator", "contact", "description", "name", "status_id" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Winterfell Inc."
          },
          "description" : {
            "type" : "string",
            "example" : "Sword and fur exports."
          },
          "contact" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "status_id" : {
            "type" : "integer",
            "example" : 1
          },
          "administrator" : {
            "$ref" : "#/components/schemas/RegistrationUserDTO"
          }
        }
      },
      "Partner" : {
        "required" : [ "contact", "id", "name", "partner_token", "status_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "300bf555-90e4-40ac-9917-5b5a7059ca30"
          },
          "partner_token" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "3cf58532-c711-4a89-8a4c-af29083e9259"
          },
          "name" : {
            "type" : "string",
            "example" : "Winterfell Inc."
          },
          "contact" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "status_id" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PartnerFull" : {
        "required" : [ "contact", "customers", "id", "instruments", "name", "partner_email_providers", "partner_gateways", "partner_sms_providers", "partner_token", "status_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "300bf555-90e4-40ac-9917-5b5a7059ca30"
          },
          "partner_token" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "3cf58532-c711-4a89-8a4c-af29083e9259"
          },
          "name" : {
            "type" : "string",
            "example" : "Winterfell Inc."
          },
          "contact" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "status_id" : {
            "type" : "integer",
            "example" : 1
          },
          "partner_gateways" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Gateway"
            }
          },
          "customers" : {
            "type" : "integer",
            "example" : 0
          },
          "instruments" : {
            "type" : "integer",
            "example" : 0
          },
          "partner_email_providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MailConfig"
            }
          },
          "partner_sms_providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SMSConfig"
            }
          }
        }
      },
      "BehaviorRule" : {
        "required" : [ "created_at", "deleted", "hook", "id", "partner_id", "rule_set", "type", "updated_at" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "6e9228da-e60f-4d48-ade7-18f61c0dc259"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "c758da99-0d9e-4aa3-9e83-0c3bf3bc7360"
          },
          "type" : {
            "type" : "integer",
            "example" : 0
          },
          "hook" : {
            "type" : "string",
            "example" : "pre_transaction"
          },
          "rule_set" : {
            "type" : "string",
            "example" : "{\\\"conditions\\\": {\\\"any\\\": [{\\\"all\\\": [{\\\"fact\\\": \\\"transaction\\\",\\\"operator\\\": \\\"equal\\\",\\\"value\\\": \\\"USD\\\",\\\"path\\\": \\\".currency\\\"},{\\\"fact\\\": \\\"transaction\\\",\\\"operator\\\": \\\"greaterThan\\\",\\\"value\\\": 50, \\\"path\\\":\\\".amount\\\"},{\\\"fact\\\": \\\"gateway\\\",\\\"operator\\\": \\\"equal\\\",\\\"value\\\": \\\"PASandbox\\\",\\\"path\\\": \\\".processor\\\"}]}]},\\\"event\\\": {\\\"type\\\": \\\"pre_transaction_fee\\\",\\\"params\\\": {\\\"description\\\": \\\"pre transaction fee for individual transaction\\\",\\\"fee_details\\\":{\\\"USD\\\": {\\\"flat_rate\\\": 1.10,\\\"percent_rate\\\": 1.95}}}}}"
          },
          "created_at" : {
            "type" : "integer",
            "example" : 1566331803
          },
          "updated_at" : {
            "type" : "integer",
            "example" : 1566331904
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "BehaviorRuleNew" : {
        "required" : [ "hook", "partner_id", "rule_set", "type" ],
        "properties" : {
          "partner_id" : {
            "type" : "string",
            "example" : "c758da99-0d9e-4aa3-9e83-0c3bf3bc7360"
          },
          "type" : {
            "type" : "integer",
            "example" : 0
          },
          "hook" : {
            "type" : "string",
            "example" : "user_registration | verification_complete | pre_transaction | transaction_complete"
          },
          "rule_set" : {
            "type" : "string",
            "example" : "{\\\"conditions\\\": {\\\"any\\\": [{\\\"all\\\": [{\\\"fact\\\": \\\"transaction\\\",\\\"operator\\\": \\\"equal\\\",\\\"value\\\": \\\"USD\\\",\\\"path\\\": \\\".currency\\\"},{\\\"fact\\\": \\\"transaction\\\",\\\"operator\\\": \\\"greaterThan\\\",\\\"value\\\": 50, \\\"path\\\":\\\".amount\\\"},{\\\"fact\\\": \\\"gateway\\\",\\\"operator\\\": \\\"equal\\\",\\\"value\\\": \\\"PASandbox\\\",\\\"path\\\": \\\".processor\\\"}]}]},\\\"event\\\": {\\\"type\\\": \\\"pre_transaction_fee\\\",\\\"params\\\": {\\\"description\\\": \\\"pre transaction fee for individual transaction\\\",\\\"fee_details\\\":{\\\"USD\\\": {\\\"flat_rate\\\": 1.10,\\\"percent_rate\\\": 1.95}}}}}"
          }
        }
      },
      "Notification" : {
        "required" : [ "contact", "name", "token" ],
        "properties" : {
          "to" : {
            "type" : "string",
            "example" : "LeroyJenkins@gmail.com | 425-555-1212"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "c758da99-0d9e-4aa3-9e83-0c3bf3bc7360"
          },
          "template_id" : {
            "type" : "string",
            "example" : "6e9228da-e60f-4d48-ade7-18f61c0dc259"
          },
          "context" : {
            "type" : "object",
            "example" : {
              "firstName" : "TestUserFirstName"
            }
          },
          "inline" : {
            "type" : "array",
            "items" : { }
          },
          "is_test" : {
            "type" : "boolean"
          }
        }
      },
      "NotificationTemplate" : {
        "required" : [ "id", "name", "partner_id", "subject", "template", "type" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "dab6a4c4-1b51-48ec-8469-76556ecf58f6"
          },
          "name" : {
            "type" : "string",
            "example" : "Welcome Template"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "c81b0d4f-1b41-4320-a968-3078cfc8209f"
          },
          "subject" : {
            "type" : "string",
            "example" : "Welcome to merchant services"
          },
          "template" : {
            "type" : "string",
            "example" : "<html><body>Hello $firstName </body></html>"
          },
          "type" : {
            "type" : "string",
            "example" : "email | sms"
          }
        }
      },
      "NotificationTemplateGet" : {
        "required" : [ "id", "name", "partner_id", "subject", "tags", "template", "type" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "dab6a4c4-1b51-48ec-8469-76556ecf58f6"
          },
          "name" : {
            "type" : "string",
            "example" : "Welcome Template"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "c81b0d4f-1b41-4320-a968-3078cfc8209f"
          },
          "subject" : {
            "type" : "string",
            "example" : "Welcome to merchant services"
          },
          "template" : {
            "type" : "string",
            "example" : "<html><body>Hello $firstName </body></html>"
          },
          "type" : {
            "type" : "string",
            "example" : "email | sms"
          },
          "tags" : {
            "type" : "string",
            "example" : "some,tags"
          }
        }
      },
      "NotificationTemplateNew" : {
        "required" : [ "name", "partner_id", "subject", "template", "type" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Welcome Template"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "c81b0d4f-1b41-4320-a968-3078cfc8209f"
          },
          "subject" : {
            "type" : "string",
            "example" : "Welcome to merchant services"
          },
          "template" : {
            "type" : "string",
            "example" : "<html><body>Hello $firstName </body></html>"
          },
          "type" : {
            "type" : "string",
            "example" : "email | sms"
          }
        }
      },
      "SMSConfigPost" : {
        "required" : [ "account_sid", "auth_token", "from_number", "name", "partner_id", "service_provider" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "PaymentApproved SMS Provider"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "d0dc9a1b-2c6e-4aaf-ac13-bfa7ca0b16fb"
          },
          "account_sid" : {
            "type" : "string",
            "example" : "XXxxx07jh6608e4316b6298b09e4f2n99d"
          },
          "auth_token" : {
            "type" : "string",
            "example" : "e99999ffxx50d1f6c00444ae5bc87y4h"
          },
          "from_number" : {
            "type" : "string",
            "example" : "14255551212"
          },
          "service_provider" : {
            "type" : "string",
            "example" : "Twilio"
          }
        }
      },
      "SMSConfig" : {
        "required" : [ "account_sid", "auth_token", "from_number", "id", "name", "partner_id", "service_provider" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "27638a72-2d25-49f5-91df-0e3c1e0a26ec"
          },
          "name" : {
            "type" : "string",
            "example" : "PaymentApproved SMS Provider"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "d0dc9a1b-2c6e-4aaf-ac13-bfa7ca0b16fb"
          },
          "account_sid" : {
            "type" : "string",
            "example" : "XXxxx07jh6608e4316b6298b09e4f2n99d"
          },
          "auth_token" : {
            "type" : "string",
            "example" : "e99999ffxx50d1f6c00444ae5bc87y4h"
          },
          "from_number" : {
            "type" : "string",
            "example" : "14255551212"
          },
          "service_provider" : {
            "type" : "string",
            "example" : "Twilio"
          }
        }
      },
      "MailConfigPost" : {
        "required" : [ "api_key", "domain", "from_who", "name", "partner_id", "service_provider" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "PaymentApproved Mail Provider"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "d0dc9a1b-2c6e-4aaf-ac13-bfa7ca0b16fb"
          },
          "from_who" : {
            "type" : "string",
            "example" : "You <you@yourdomain.com>"
          },
          "domain" : {
            "type" : "string",
            "example" : "sandbox991f8987d1ce4999x388ede5296e8x5x.mailgun.org"
          },
          "api_key" : {
            "type" : "string",
            "example" : "key-e9995e1d2xz4afg7ec1a3609a61998h"
          },
          "service_provider" : {
            "type" : "string",
            "example" : "mailgun"
          }
        }
      },
      "MailConfig" : {
        "required" : [ "api_key", "domain", "from_who", "id", "name", "partner_id", "service_provider" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "3deab5c1-b4bc-45ee-98f2-51ae1c1f14b6"
          },
          "name" : {
            "type" : "string",
            "example" : "PaymentApproved Mail Provider"
          },
          "partner_id" : {
            "type" : "string",
            "example" : "d0dc9a1b-2c6e-4aaf-ac13-bfa7ca0b16fb"
          },
          "from_who" : {
            "type" : "string",
            "example" : "You <you@yourdomain.com>"
          },
          "domain" : {
            "type" : "string",
            "example" : "sandbox991f8987d1ce4999x388ede5296e8x5x.mailgun.org"
          },
          "api_key" : {
            "type" : "string",
            "example" : "key-e9995e1d2xz4afg7ec1a3609a61998h"
          },
          "service_provider" : {
            "type" : "string",
            "example" : "mailgun"
          }
        }
      },
      "ArrayofGateways" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Gateway"
        }
      },
      "Gateway" : {
        "required" : [ "created_at", "deleted", "description", "details", "id", "name", "partner_id", "processor", "status", "updated_at" ],
        "type" : "object",
        "properties" : {
          "partner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "28ea404b-2068-424f-b499-5f029f3512b9"
          },
          "name" : {
            "type" : "string",
            "example" : "test gateway name"
          },
          "created_at" : {
            "type" : "integer",
            "example" : 1566331803
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "description" : {
            "type" : "string",
            "example" : "test gateway for swagger documentation"
          },
          "details" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/BraintreeDetail"
            }, {
              "$ref" : "#/components/schemas/StripeDetail"
            }, {
              "$ref" : "#/components/schemas/PaySafeDetail"
            }, {
              "$ref" : "#/components/schemas/AuthorizeNetDetail"
            }, {
              "$ref" : "#/components/schemas/AlipayDetail"
            }, {
              "$ref" : "#/components/schemas/PASandboxDetail"
            } ]
          }
        }
      },
      "BraintreeConfig" : {
        "required" : [ "description", "details", "name", "processor" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyBraintree"
          },
          "description" : {
            "type" : "string",
            "example" : "Production Braintree Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "Braintree"
          },
          "details" : {
            "$ref" : "#/components/schemas/BraintreeDetail"
          }
        }
      },
      "BraintreeDetail" : {
        "type" : "object",
        "properties" : {
          "merchant_id" : {
            "type" : "string",
            "example" : "999nwvqxxxxx7jhn"
          },
          "environment" : {
            "type" : "string",
            "example" : "braintree.Environment.Sandbox"
          },
          "public_key" : {
            "type" : "string",
            "example" : "aa9s8xxq9kqpyxx7"
          },
          "private_key" : {
            "type" : "string",
            "example" : "9915xxx307083adxx8fcaxzyf490xyz"
          }
        }
      },
      "AuthorizeNetConfig" : {
        "required" : [ "api_login_id", "description", "duplicate_window", "environment", "name", "processor", "transaction_key" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyAuthorize"
          },
          "description" : {
            "type" : "string",
            "example" : "Production AuthorizeNet Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "AuthorizeNet"
          },
          "details" : {
            "$ref" : "#/components/schemas/AuthorizeNetDetail"
          }
        }
      },
      "AuthorizeNetDetail" : {
        "type" : "object",
        "properties" : {
          "api_login_id" : {
            "type" : "string",
            "example" : "99xXXf7V567"
          },
          "transaction_key" : {
            "type" : "string",
            "example" : "989s3FGRjY5x9m7z"
          },
          "duplicate_window" : {
            "type" : "integer",
            "example" : 0
          }
        }
      },
      "PaySafeConfig" : {
        "required" : [ "account_id", "api_key_id", "api_key_secret", "currency_base_unit_multiplier", "description", "environment", "merchant_ref_number", "name", "processor" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyPaysafe"
          },
          "description" : {
            "type" : "string",
            "example" : "Production Paysafe Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "PaySafe"
          },
          "details" : {
            "$ref" : "#/components/schemas/PaySafeDetail"
          }
        }
      },
      "PaySafeDetail" : {
        "type" : "object",
        "properties" : {
          "api_key_id" : {
            "type" : "string",
            "example" : "test_my_ecom_site"
          },
          "api_key_secret" : {
            "type" : "string",
            "example" : "B-qa2-9-9bvx2e35-503c02596030d28e4b1ad6f5c4v942c543bc4b561dcde9000245265e5f78df46xwsdff83fg3a6x5x6a2ce43bd01c99"
          },
          "account_id" : {
            "type" : "string",
            "example" : "8761682399"
          },
          "currency_base_unit_multiplier" : {
            "type" : "string",
            "example" : "100"
          },
          "environment" : {
            "type" : "string",
            "example" : "TEST"
          },
          "merchant_ref_number" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "StripeConfig" : {
        "required" : [ "client_email", "description", "name", "processor", "publishable", "secret" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyPaysafe"
          },
          "description" : {
            "type" : "string",
            "example" : "Production Paysafe Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "Stripe"
          },
          "details" : {
            "$ref" : "#/components/schemas/StripeDetail"
          }
        }
      },
      "StripeDetail" : {
        "type" : "object",
        "properties" : {
          "client_email" : {
            "type" : "string",
            "example" : "leroy.jenkins@gmail.com"
          },
          "secret" : {
            "type" : "string",
            "example" : "sk_test_xx9aUtMM381F7tezXcd8H6GG"
          },
          "publishable" : {
            "type" : "string",
            "example" : "pk_test_18nHyDf987H9WpDx0c9Dg7gB"
          }
        }
      },
      "AlipayConfig" : {
        "required" : [ "description", "name", "processor", "publishable", "secret" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyAlipay"
          },
          "description" : {
            "type" : "string",
            "example" : "Alipay Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "Alipay"
          },
          "details" : {
            "$ref" : "#/components/schemas/AlipayDetail"
          }
        }
      },
      "AlipayDetail" : {
        "type" : "object",
        "properties" : {
          "secret" : {
            "type" : "string",
            "example" : "sk_test_tw1aPtMp3l1S6tezXwu2IJ5f"
          },
          "publishable" : {
            "type" : "string",
            "example" : "pk_test_18NiHHf031H9WpCxoc6Fg6vI"
          }
        }
      },
      "PASandboxConfig" : {
        "required" : [ "description", "identifier", "name", "processor", "secret" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MyPaymentApproved"
          },
          "description" : {
            "type" : "string",
            "example" : "Payment Approved Sandbox Gateway"
          },
          "processor" : {
            "type" : "string",
            "example" : "PASandbox"
          },
          "details" : {
            "$ref" : "#/components/schemas/PASandboxDetail"
          }
        }
      },
      "PASandboxDetail" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "leroy.jenkins@gmail.com"
          },
          "secret" : {
            "type" : "string",
            "example" : "pa_test_td1aXtFj5X1D4tezXwu2IX5X"
          }
        }
      },
      "Card" : {
        "required" : [ "PAN", "cvv", "exp_date", "name_on_card", "zip" ],
        "properties" : {
          "PAN" : {
            "type" : "string",
            "example" : "4111111111111111"
          },
          "exp_date" : {
            "type" : "string",
            "example" : "0122"
          },
          "zip" : {
            "type" : "string",
            "example" : "78701"
          },
          "cvv" : {
            "type" : "integer",
            "example" : 123
          },
          "name_on_card" : {
            "type" : "string",
            "example" : "Rob Stark"
          }
        }
      },
      "InstrumentTransaction" : {
        "required" : [ "action", "gateway_name", "type", "user_id" ],
        "properties" : {
          "gateway_name" : {
            "type" : "string",
            "example" : "braintree_smoke"
          },
          "partner_customer_id" : {
            "type" : "string",
            "example" : "9cc0c9e9-a3ec-4826-a9b4-7cb8fe4fd76a"
          },
          "amount" : {
            "type" : "number",
            "example" : 10.99
          },
          "payment_instrument_token" : {
            "type" : "string",
            "example" : "1c038700-d6b7-4f7c-871e-71708474cb59"
          },
          "type" : {
            "type" : "integer",
            "example" : 3
          },
          "action" : {
            "type" : "integer",
            "example" : 0
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          }
        }
      },
      "PartnerCustomer" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "fd70e3b5-0558-41fc-b8ce-0048568907e9"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Rob"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Stark"
          },
          "email" : {
            "type" : "string",
            "example" : "rob.stark@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          }
        }
      },
      "PartnerCustomerNew" : {
        "required" : [ "first_name", "last_name" ],
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "Leroy"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Jenkins"
          },
          "email" : {
            "type" : "string",
            "example" : "leroy.jenkins@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          }
        }
      },
      "Login" : {
        "required" : [ "emailOrPhoneOrId", "password" ],
        "properties" : {
          "emailOrPhoneOrId" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "password" : {
            "type" : "string",
            "example" : "P@m3ntAppr0ved"
          }
        }
      },
      "LoginSuccess" : {
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "7f545fb8-a4c9-4b61-8b2d-507e3a056c23"
          }
        }
      },
      "CardToken" : {
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "7f545fb8-a4c9-4b61-8b2d-507e3a056c23"
          }
        }
      },
      "Transaction" : {
        "required" : [ "action", "amount", "created_at", "currency", "customer_email", "customer_first_name", "customer_last_name", "customer_phone", "deleted", "external_id", "fee_transaction", "gateway_name", "gateway_response", "id", "net_amount", "partner_customer_id", "partner_id", "payment_instrument_token", "status", "type", "updated_at" ],
        "properties" : {
          "gateway_name" : {
            "type" : "string",
            "example" : "test gateway name"
          },
          "partner_customer_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ec83e523-77e3-4aea-bd55-0ac51e335d97"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "3e4e77fd-4b33-4190-a856-0cac2906537a"
          },
          "type" : {
            "type" : "integer",
            "example" : 3
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "action" : {
            "type" : "integer",
            "example" : 1
          },
          "external_id" : {
            "type" : "string",
            "example" : "369bd46c-888b-4452-8376-42ec8c8103e6"
          },
          "partner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "b3f21115-c566-432a-8ac6-252b9405be8b"
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 5.5
          },
          "fee_transaction" : {
            "$ref" : "#/components/schemas/Transaction_fee_transaction"
          },
          "created_at" : {
            "type" : "integer",
            "example" : 1566336878
          },
          "payment_instrument_token" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "cf6e6b01-1405-4d98-9e5c-caf8d811dabe"
          },
          "customer_first_name" : {
            "type" : "string",
            "example" : "TestCustomerFirstName"
          },
          "customer_last_name" : {
            "type" : "string",
            "example" : "TestCustomerLastName"
          },
          "customer_email" : {
            "type" : "string",
            "example" : "customer@mailinator.com"
          },
          "customer_phone" : {
            "type" : "integer",
            "example" : 1231231234
          },
          "net_amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 50
          },
          "status" : {
            "type" : "integer",
            "example" : 0
          },
          "gateway_response" : {
            "$ref" : "#/components/schemas/Transaction_gateway_response"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "updated_at" : {
            "type" : "integer",
            "example" : 1566336885
          }
        }
      },
      "TransactionResponse" : {
        "required" : [ "amount", "currency", "customer", "fee_transaction", "net_amount", "transaction_action", "transaction_id" ],
        "properties" : {
          "transaction_id" : {
            "type" : "string",
            "example" : "7f545fb8-a4c9-4b61-8b2d-507e3a056c23"
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 10.99
          },
          "net_amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 10.99
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "transaction_action" : {
            "type" : "integer",
            "example" : 2
          },
          "fee_transaction" : {
            "$ref" : "#/components/schemas/TransactionResponse_fee_transaction"
          },
          "customer" : {
            "$ref" : "#/components/schemas/TransactionResponse_customer"
          }
        }
      },
      "ResetRequest" : {
        "required" : [ "emailOrPhone" ],
        "properties" : {
          "emailOrPhone" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          }
        }
      },
      "PasswordReset" : {
        "required" : [ "code", "emailOrPhone", "password" ],
        "properties" : {
          "emailOrPhone" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "code" : {
            "type" : "string",
            "example" : "456982"
          },
          "password" : {
            "type" : "string",
            "example" : "PassW0rd!"
          }
        }
      },
      "RegistrationUserDTO" : {
        "required" : [ "email", "first_name", "last_name", "password", "phone" ],
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "arya"
          },
          "last_name" : {
            "type" : "string",
            "example" : "stark"
          },
          "email" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "425-555-1212"
          },
          "password" : {
            "type" : "string",
            "example" : "P@m3ntAppr0ved"
          }
        }
      },
      "ValidationError" : {
        "properties" : {
          "value" : {
            "type" : "string",
            "example" : "field_name"
          },
          "property" : {
            "type" : "string",
            "example" : "field_name"
          },
          "children" : {
            "type" : "array",
            "example" : [ ]
          },
          "constraints" : {
            "type" : "object",
            "example" : {
              "constraint_name" : "constraint description"
            }
          }
        }
      },
      "body" : {
        "required" : [ "email" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "arya.stark@gmail.com"
          }
        }
      },
      "inline_response_200" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Successfully sent verification code."
          }
        }
      },
      "inline_response_401" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unauthorized"
          }
        }
      },
      "inline_response_404" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "User not found. "
          }
        }
      },
      "inline_response_200_1" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Successfully verified user"
          }
        }
      },
      "inline_response_404_1" : {
        "required" : [ "message", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Verification Error"
          },
          "message" : {
            "type" : "string",
            "example" : "Verification code expired"
          }
        }
      },
      "inline_response_200_2" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Successfully sent reset password code."
          }
        }
      },
      "inline_response_404_2" : {
        "required" : [ "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "No user with phone or email found"
          }
        }
      },
      "inline_response_404_3" : {
        "required" : [ "message", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Invalid or Expired code."
          },
          "message" : {
            "type" : "string",
            "example" : "Code is invalid."
          }
        }
      },
      "inline_response_401_1" : {
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unauthorized"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "boolean",
            "example" : true
          },
          "message" : {
            "type" : "string",
            "example" : "Partner successfully deleted"
          }
        }
      },
      "body_1" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BraintreeConfig"
        }, {
          "$ref" : "#/components/schemas/StripeConfig"
        }, {
          "$ref" : "#/components/schemas/PaySafeConfig"
        }, {
          "$ref" : "#/components/schemas/AuthorizeNetConfig"
        }, {
          "$ref" : "#/components/schemas/AlipayConfig"
        }, {
          "$ref" : "#/components/schemas/PASandboxConfig"
        } ]
      },
      "inline_response_200_4" : {
        "required" : [ "message", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Successfully saved gateway"
          },
          "gateway_name" : {
            "type" : "string",
            "example" : "braintree_gateway"
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "customers" : {
            "type" : "number",
            "example" : 10
          },
          "instruments" : {
            "type" : "number",
            "example" : 20
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_6_result"
          }
        }
      },
      "inline_response_409" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "DuplicateCustomerError"
          },
          "message" : {
            "type" : "string",
            "example" : "Cannot add another customer with same email or phone."
          }
        }
      },
      "inline_response_422" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Transact Error."
          },
          "message" : {
            "type" : "string",
            "example" : "Gateway not found"
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "boolean",
            "example" : true
          },
          "message" : {
            "type" : "string",
            "example" : "SMS successfully sent"
          }
        }
      },
      "Transaction_fee_transaction" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "54f24a89-bb40-45c4-863b-a1e1bfb67ae5"
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 14.12
          },
          "type" : {
            "type" : "integer",
            "example" : 4
          },
          "description" : {
            "type" : "string",
            "example" : "pre transaction fee for individual transaction"
          }
        }
      },
      "Transaction_gateway_response" : {
        "type" : "object",
        "properties" : {
          "transaction_id" : {
            "type" : "string",
            "example" : "412183684557641"
          },
          "status" : {
            "type" : "integer",
            "example" : 0
          },
          "description" : {
            "type" : "string",
            "example" : "Example transaction capture success"
          },
          "raw" : {
            "type" : "string",
            "example" : "raw gateway response"
          }
        }
      },
      "TransactionResponse_fee_transaction" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "2c265492-d0d2-4ba9-80f7-3fee37d2d430"
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 2.5
          },
          "description" : {
            "type" : "string",
            "example" : "default fees"
          },
          "type" : {
            "type" : "integer",
            "example" : 4
          }
        }
      },
      "TransactionResponse_customer" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "TestCustomerFirstName"
          },
          "last_name" : {
            "type" : "string",
            "example" : "TestCustomerLastName"
          },
          "email" : {
            "type" : "string",
            "example" : "customer@mailinator.com"
          },
          "phone" : {
            "type" : "integer",
            "example" : 1231231234
          }
        }
      },
      "inline_response_200_6_result" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "example" : 200
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Transaction"
            }
          }
        }
      }
    },
    "requestBodies" : {
      "User" : {
        "description" : "User object",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserPost"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}