openapi: 3.0.0
servers:
  - description: myistores
    url: https://my.istores.co.il/gateway
info:
  description: ''
  version: "1.0.5"
  title: MyIstores Api
  termsOfService: ''
  contact:
    email: support@istores.co.il
security:
  - Token: [] 
tags:
  - name: products
    description: List Products
    externalDocs:
      description: list products
      url: ''
  - name: categories
    description: List categories
    externalDocs:
      description: list categories
      url: ''
  - name: products options    
    description: products options
    externalDocs:
      description: products options
      url: ''
  - name: orders    
    description: orders
    externalDocs:
      description: orders
      url: ''      
  - name: misc    
    description: Misc
    externalDocs:
      description: Misc
      url: ''      

paths:
  /product_options/{option_id}:
    delete:
      tags:
      - products options
      description: Delete product option by ID
      summary: Delete product option by ID
      parameters:
       - name: option_id
         in: path
         required : true
         description : Option ID
         schema:
           type: integer
           format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success/error:
                    type: string
                    description: After successfull call with the delete method you can get or success msg or error msg IF this options already been used in your store
    
    get:
      tags:
      - products options
      description: Get product option by ID
      summary: Get product option by ID
      parameters:
       - name: option_id
         in: path
         required : true
         description : Option ID
         schema:
           type: integer
           format: int64
      responses:
        '200':
          description: success , get the content
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ProductOptionsAddEdit'                
    put:
      tags:
      - products options
      description: Edit product option by ID
      summary: Edit product option by ID
      parameters:
       - name: option_id
         in: path
         required: true
         description: Option ID
         schema:
           type: integer
           format: int64
      requestBody:
         required: true
         content:
           application/json:
             schema:
              $ref : '#/components/schemas/ProductOptionsAddEdit'  
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    description: appear succes if post done successfuly          
            
      
  /product_options:
    get:
      tags:
      - products options
      description: Get list with all product options
      summary: Get list with all product options
      responses:
       '200':
         description: success
         content:
           application/json:
             schema:
               type: array
               description: include all the options , each object represents single product option
               items:
                 $ref : '#/components/schemas/ProductOptionsAddEdit' 
                                    
                 
    post:
      tags:
      - products options
      description: Add new product option
      summary: Add new product option
      requestBody:
         required: true
         content:
           application/json:
             schema:
              $ref : '#/components/schemas/ProductOptionsAddEdit'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    description: appear succes if post done successfuly
        
      

  /orders/{limit}/{page}:
    get:
      tags:
      - orders
      description: Get full list with all orders
      summary: Get full list with all orders
      responses:
        '200':
          description : success
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/AllOrdersList'
                
      parameters:
        - name: limit
          in: path
          description: Limit orders per page (minimum 1)
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: path
          description: Page number for pagination of orders ( start page 0 )
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
    post:
      tags:
      - orders
      description: Get full list with all orders with date filter
      summary: Get full list with all orders with date filter
      responses:
        '200':
          description : success
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/AllOrdersList'
                
      parameters:
        - name: limit
          in: path
          description: Limit orders per page (minimum 1)
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: path
          description: Page number for pagination of orders ( start page 0 )
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
      requestBody: 
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                date_from:
                  type: string
                  description: 'Valid date (year-month-day) wich we start the filter from'
                  example: '2020-01-20'
                date_to:
                  type: string
                  description: 'Valid date (year-month-day) wich we end the filter'
                  example: '2020-01-25'

  /order/{order_id}:
    get:
      tags:
      - orders
      description: Get order details by order id
      summary: Get order details by order Id
      parameters:
       - name: order_id
         in: path
         required: true
         description: Order ID
         schema:
           type: integer
           format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/SingleOrderList'
                
        
  
  /categories:
    post:
      tags:
       - categories
      description: Create new Cateogry
      summary: Create New Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/CategoryCreateEdit'
      responses:
       '200':
         description: success
       '404': 
         description: an error
    get:
       tags:
        - categories
       description: Get all cateogries
       summary : Get all cateogries
       responses:
         '200':
           description: success
           content: 
             application/json:
               schema:
                type: array
                description: The array is the first block of the structure , contains object for each category
                items: 
                  $ref : '#/components/schemas/CategoryData'
                   
                  
               

  /categories/{category_id}:
    put:
      tags:
        - categories
      description: Edit existing category by category ID
      summary: Edit existing category
      requestBody:
         required: true
         content:
           application/json:
             schema:
              $ref : '#/components/schemas/CategoryCreateEdit'
      parameters:
      - name: category_id
        in: path
        description: Category Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: success
        '404':
          description: an error
    delete:
       tags:
        - categories
       description: Delete category by Id
       summary: Delete existing category
       parameters:
        - name: category_id
          required: true
          in: path
          description: Category Id
          schema:
            type: integer
            example: 12500
            format: int64  
       responses:
        '200':
          description: success
    get:
      tags:
       - categories
      description: Get Category data by ID
      summary: Get existing category data
      parameters:
       - name: category_id
         in: path
         required: true
         description: category ID
         schema:
           type: integer
           format: int64
      responses:
       '200':
         description: success
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryGetSingle'

  /language_list:
    get:
      tags:
        - misc
      summary: Get language detail list
      description: Get language detail list
      responses:
          '200':
            description: success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LanguageList'
  
  /stock_status_list:
    get:
      tags:
        - misc
      summary: Get stock status list
      description: Get stock status list
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/StockStatusList'
  
  /products/{limit}/{page}:
    get:
      tags:
        - products
      summary: Get products to store
      operationId: ListProducts
      responses:
        '403':
          description: Wrong Token
        '200':
          description: Ok
          content: 
           application/json:
              schema:
                $ref: '#/components/schemas/Products'
      parameters:
        - name: limit
          in: path
          description: Limit of recieve products
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 200
        - name: page
          in: path
          description: Page number
          required: true
          schema:
            type: integer
            format: int64
            
      security:
        - Token: [] 
  /products/{product_id}:
    get:
      tags:
        - products
      summary: Get product by id
      operationId: GetProductById
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product Not Found
        '405':
          description: Validation exception
        '403':
          description: Wrong Token
        '200':
          description: success
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/SingleProductGet'
          
      parameters: 
      - name: product_id
        in: path
        description: Product Id
        required: true
        schema:
          type: integer
          format: int64
      security:
        - Token: [] 
    put:
      tags:
        - products
      summary: Update an existing Product
      operationId: UpdateProductById
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
        '405':
          description: Validation exception
      parameters: 
      - name: product_id
        in: path
        description: Product Id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        $ref: '#/components/requestBodies/SingleProductAddEdit'
    delete:
     tags:
      - products
     summary: Delete Product
     operationId: DeleteProductById
     responses: 
       '200':
         description: Success
       '404':
         description: Product not found
     parameters:
      - name: product_id
        in: path
        description: Product Id
        required: true
        schema:
         type: integer
         format: int64


  /products:
    post:
      tags:
       - products
      summary: Create New Product
      operationId: CreateProduct
      responses:
        '200':
          description: Success
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      requestBody: 
        $ref: '#/components/requestBodies/SingleProductAddEdit'
        

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    ProductOptionsAddEdit:
      type: object
      properties:
        store_id:
          type: integer
          description: the store id
        option_description:
           type: object
           description: The description of the option for each language
           properties:
            lang_id:
              type: object
              description: Replace the "lang_id" with
              properties:
                  name:
                   type: string
                   description: The name of the option
                  language:
                   type: integer
                   description: Again the language id
              required:
              - name
              - language
        type:
          type: string
          description: How the option picked by the customers
          enum: [radio , checkbox]
        sort_order:
          type: integer
          description: the order of this option
        option_value:
          type: array
          items:
            type: object
            properties:
              option_value_id:
                type: integer
              option_value_Description:
                type: object
                description: the description of the option for each language
                properties:
                  lang_id:
                    type: object
                    description: replace this with the language id
                    properties:
                      name: 
                        type: string
                        description: The description itselfe
                      language_id:
                        type: integer
                        description: Again the langugae ID
                    required:
                    - name
                    - language_id
              image:   
                type: integer
                description: just put there '200'
              sort_order: 
                type: integer
                description: the order of the option  
              sku:
                type: string
                description: The sku of the option value
                example: 45FBT6

        

    AllOrdersList:
      type: array
      description: array with all orders
      items:
        type: object
        properties:
          order_id:
            type: integer
            description: ID of each order
          name:
            type: string
            description: full name of the customer
          status:
            type: string
            description: the current order status
            example: If succesffuly paid
          date_added:
            type: string
            format: date
            description: The date this order added
          products:
            type: integer
            description: the amount of products purchased this  order
          total:
            type: integer
            description: The total sum of current order
          currency_Code:
            type: string
            description: The code of the current currency that used at this order
          
    
    SingleOrderList:
      type: object
      properties:
        order_id:
          type: integer
          description: represents the order ID
        invoice_no:
          type: integer
          format: boolean
          description: Represents if this order have invoice_no
        store_id:
          type: integer
          description: Represents the store ID
        store_name:
          type: string
          description: Stores name
          example: "my store"
        store_url:
          type: string
          description: The url of the current store
        customer_id: 
          type: integer
          description: Represents the customer id (if the customer was registered user)
        firstname:
          type: string
          description: Customers first name
        lastname:
          type: string
          description: Customers last name
        email: 
          type: string
          description: Customers email
        telephone:
          type: integer
          description: Customers phone number
        payment_firstname:
          type: string
          description: Customers first name
        payment_lastname:
          type: string
          description: Customers last name
        payment_company:
          type: string
          description: Customer company (if exist)
        payment_address_1/2:
          type: string
          description: Customers address
        payment_postcode:
          type: string
          description: Customer post code
        payment_city:
          type: string
          description: Customers payment_city
        payment_zone_id:
          type: integer
          description: The zone ID
        payment_zone:
          type: string
          description: Represents the zone 
        payment_zone_code:
          type: integer
          description: Code associated with the zone
        payment_country_id:
          type: integer
        payment_country:
          type: string
          description: Represents the customers payment_country
        payment_method:
          type: string
          description: Represents the payment method of this order
        payment_code:
          type: string
          description: Associated with the payment method
        shipping_firstname:
          type: string
          description: First name in the custom shipping
        shipping_lastname:
          type: string
          description: Last name in the custom shipping
        shipping_address_1/2:
          type: string
          description: The address at the custom shipping
        shipping_postcode:
          type: string
          description: The post code at the custom shipping
        shipping_method: 
          type: string
          description: Represents the shipping method
        shipping_code:
          type: string
          description: Associated with the shipping method
        total: 
          type: integer
          description: The total sum that parent_id
        order_status_id:
          type: integer
          description: Associated with the order_status_id
        order_status:
          type: string
          description: Represents the status of the order
        language_id:
          type: integer
          description: The ID of the default store lagnuage
        language_code:
          type: string
          description: The lagnuage code
        currency_id:
          type: integer
          description: The id of the currency used at this order
        currency_Code:
          type: string
          description: The code of the currency used at this order
        ip:
          type: string
          description: The IP of the customer
        user_agent:
          type: string
        accept_language:
          type: string
        date_added:
          type: string
          format: date
        date_modified:
          type: string
          format: date
        payment_Data:
          $ref : '#/components/schemas/PaymentData'
        products:
          $ref: '#/components/schemas/OrderProductsData'
        histories:
          $ref: '#/components/schemas/OrderProductsHistories'
    
    OrderProductsHistories:
      type: array
      description: array that includes all the changes that done on this current order
      example: If order had delayed charge and then charged
      items:
        type: object
        properties:
          notify:
            type: string
          status:
            type: string
            description: the status of this order
          date_added:
           type: string
           format: date
          

    OrderProductsData:
      type: array
      items:
        type: object
        description: Array with all the products purchase this order
        properties:
          order_product_id:
            type: integer
          product_id:
            type: integer
            description: The product id
          name:
            type: string
            description: The product name
          model: 
            type: string
          sku:
            type: string
          quantity:
            type: integer
            description: The quantity of this product at the current order
          price:
            type: integer
            description: The price of this current product
          special:
            type: integer
            description: Represents special price if was enabled
          original_price:
            type: integer
            description: Assiciated with the special (show the original price)

          
          

        
    PaymentData:
      type: object
      properties:
        unique_id:
          type: string
        lang:
          type: string
        auth_number:
          type: integer
          description: the auth number of the order
        responce_mac:
          type: string
          description: responses code that get back from CG after transaction
        terminal_num:
          type: integer
          description: the terminal num (updated once a day)
        mutav_no:
          type: integer
          description: The dealer num
        card_token:
          type: integer
          description: the card token can be use for delayed order transacrions
        card_exp:
          type: integer
          description: First two numbers are month , 2nd two numbers are year
        card_mask:
          type: integer
          description: The card number with mask at the middle (not full number)
        tx_id:
          type: string
          description: Successfull transactions give back special transaction id that can be used for refunding and more
        number_of_payment:
          type: integer
        first_payment:
          type: integer
          description: Relevant only if there is payment_lastname
        periodical_payment:
          type: integer
          description: Relevant only if there is payment_lastname
        mpiValidation:
          type: string
          description: Describe the type of the transaction
          enum: [AutoComm , Verify]
        
        
    
    StockStatusList:
      type: array
      items:
        type: object
        properties:
          stock_status_id:
            type: integer
            description: Represents the stock status Id
          language_id:
            type: integer
            description: Represents the default admin language id
          name:
            type: string
            description: The name of the stock status
            example: "in stock"
  
    LanguageList:
      type: object
      properties:
        language_id:
          type: object
          description: Represents the lagnuage Id
          properties:
            name:
              type: string
              description: The langugae name
              example: "english"
            code: 
              type: string
              description: The lagnuage code
              example: "en-gb"

    ProductData:
       type: object
       description: Contains all the product data
       properties:
         id:
           type: integer
           example: 1
         sku:
           type: string
           description: Stock keepin unit
           example: 'HH66FGG3'
         model:
           type: string
           description: The product model
           example: "awsome toy orange "
         image:
           type: string
           description: Valid url of your image (suggest to use our cloudinary service)
           example: "http://www.myweb.com/sample-image.jpg"
         images:
           type: array
           description: Contain more images (beside the first one)
           items:
             type: object
             properties:
                image:
                  type: string
                  description: Valid url of image stored at cloudinary
                  example: "http://www.myweb.com/sample-image.jpg"
                sort_order: 
                  type: integer
                  format: boolean
                  description: The order of the image
                  example: 1
         
         price:
           type: number
           description: asdasd
                  

    CategoryData:
      type: object
      description: Includes all category data except description
      properties:
          category_id:
             type: string
             description: the category Id
             example: '22322'
          sort_order:
             type: integer
             description: the order of the category
             example: '3'
          language_id:
             type: integer
             description : The default store language ID (appears only on -Get all cateogries-)
             example: 4
          top:
             type: integer
             description: shows/hides the category at the top bar (shows at the example below)
             example: 1
          parent_id:
             type: integer
             description: The Id of the parent category
             example : 6
          status:
             type: integer
             format: boolean
             description: Defines if the category enabled/disable
             example : 1
          image: 
             type: string
             description : The image of the category Url
             example : "http://www.myweb.com/image_01.jpg"
          homefeatured:
             type: integer
             format: boolean
             description : Defines if the category appear at the main page
             example : 1
          url:
             type: string
             description: The URL of the category at the shop
             example: "http://myshop.myweb.com/category1"        
    CategoryGetSingle:
     type: object
     properties: 
      category:
         $ref : '#/components/schemas/CategoryData'
         
           
      description:
        type: object
        description: Show the description of the category for each language    
        properties:
          lang_id:
             type: object
             description: The {lang_id} defines the lagnuage for each description (see language scheme)
             properties:               
                name:
                  type: string
                  description: the name of the category
                  example: "Black Shorts"
                description:
                  type: string
                  description: the description of the category
                  example: "All kinds and sizes of black shorts"
                meta_title:
                  type: string
                  description : Meta title tag
                meta_description:
                  type: string
                  description: meta description tag
                meta_keyword:
                  type: string
                  description: meta keyword tag

    CategoryCreateEdit:
              type: object
              properties:
                category_description:
                 type: object
                 description : contains the language ids
                 properties:
                  lang_id:
                   type: object
                   description: replace the 'lang_id' with the language id (must be numeric)
                   properties:
                    name:
                      type: string
                      description: the name of the category
                      example: 'my category'
                    description:
                      type: string
                      description: the description of the category
                    meta_title:
                      type: string
                      description: meta title tag
                    meta_description:
                      type: string
                      description: meta description tag
                    meta_keyword:
                      type: string
                      description: meta keyword tag
                   required:
                    - name
                      
                parent_id:
                 type: string
                 description: choose parent for this category by the id of the parent category (have to be numeric)
                 example: '2'   
                category_store:
                 type: array
                 items:
                   type: string
                   description: pass the store id (must be numeric)
                   example: '53'
                keyword:
                 type: string
                 description: choose keyword for url query 
                 example: 'my category'
                image_uploade:
                 type: string
                 description: valid image url (we suggest use our cloudinary service)
                top:
                 type: integer
                 format: boolean
                 description: show/hide this category at the top bar
                sort_order:
                 type: integer
                 description: pick the order of this category compared to the othe categories
                homefeatured:
                 type: integer
                 format: boolean
                 description: show/hide this category at the main page
                status:
                 type: integer
                 format: boolean
                 description: enable/disable this category
      
    SingleProduct: 
      type: object
      properties:
        id:
          type: integer
          format: int64
        seo_h1: 
          type: string
        sku:
          type: string
        model:
          type: string
        minimum: 
          type: integer
          description: minimum items to add to cart
        upc:
          type: string
          default: ""
        ean:
          type: string
          default: ""
        jan: 
          type: string
          default: ""
        isbn:
          type: string
          default: ""
        mpn:
          type: string
          default: ""
        stock_status:
          type: integer
          description: status id from statuses list
        subtract: 
          type: integer
          format: boolean
          description: means if product buy can substract from quantity or not
        sort_order:
          type: integer
        status: 
          type: integer
          format: boolean
          description: enable / disable product
        keyword:
          type: string
          description: keyword to beautiful seo url
        shipping:
          type: integer
          default: 1
          description: must be always 1
        quantity:
          type: integer
          default: 0
        hidden: 
          type: integer
          format: boolean
          default: 0
        image:
          type: string
          description: First image Image Url 
        images: 
          type: array
          items:
            type: object
            properties:
              image:
                type: string
                description: Other images Url
              sort_order: 
                type: integer
                format: int64
        price:
          type: string
        price_formated:
          type: string
          description: not required
        product_related:
          type: array
          items: 
              type: integer
        product_description: 
          type: object
          properties:
            language_number: 
              $ref: '#/components/schemas/ProductLanguageObject' 
        product_attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributes'
        special:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecials'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptions'
      required:
        - sku
        - model
        - product_description
        
    SingleProductGet:
      allOf:
       - $ref: '#/components/schemas/SingleProduct'
       - type: object
         properties:
           product_url: 
             type: string
             description: The url of the product 
             example: "http://www.mystuningweb.com/category1/product1"
           sticker_status:
             type: integer
             format: boolean
             description: Defines if the the sticker enabled/disabled
           sticker_type:
             type: string
             description: Defines the type of the sticker
             enum: [percent,sum,custom]
           sticker_text:
             type: string
             description: Defines the text (if 'custom' chosen)
             example: 'SALE!!'
           sticker_text_settings:
             type: object
             description: The sticker text styling
             properties:
               color:
                 type: string
                 description: The color compared
                 example: "#ff0000"
               family:
                 type: string
                 description: The font family (only google global && with capital letter)
                 example: "Arial"
               size: 
                 type: integer
                 description: Font size (px)
                 minimum: 5
                 maximum: 40
                 example: 30
               bold: 
                 type: integer
                 format: boolean
                 description: Defines if the font weight is bold
               italic:
                 type: integer
                 format: boolean
                 description: Defines if the font style is italic
                 
                
               
      
    
    SingleProductAddEdit:
      type: object
      properties:
        seo_h1: 
          type: string
        sku:
          type: string
        model:
          type: string
        minimum: 
          type: integer
          description: minimum items to add to cart
        upc:
          type: string
          default: ""
        ean:
          type: string
          default: ""
        jan: 
          type: string
          default: ""
        isbn:
          type: string
          default: ""
        mpn:
          type: string
          default: ""
        stock_status:
          type: integer
          description: status id from statuses list
        subtract: 
          type: integer
          format: boolean
          description: means if product buy can substract from quantity or not
        sort_order:
          type: integer
        status: 
          type: integer
          format: boolean
          description: enable / disable product
        keyword:
          type: string
          description: keyword to beautiful seo url
        shipping:
          type: integer
          default: 1
          description: must be always 1
        quantity:
          type: integer
          default: 0
        hidden: 
          type: integer
          format: boolean
          default: 0
        image:
          type: string
          description: First image Image Url 
        images: 
          type: array
          items:
            type: object
            properties:
              image:
                type: string
                description: Other images Url
              sort_order: 
                type: integer
                format: int64
        price:
          type: string
        price_formated:
          type: string
          description: not required
        product_related:
          type: array
          items: 
              type: integer
        product_description: 
          type: object
          properties:
            language_number: 
              $ref: '#/components/schemas/ProductLanguageObject' 
        product_attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributes'
        special:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecials'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptions'  
        special_sticker_status:
          type: integer
          format: boolean
          description: Defines if the sticker enabled / enabled/disabled
        special_type:
          type: string
          description: Defines wich type of sticker
          enum: [percent,sum,custom] 
        special_custom_text:
          type: object
          description: The custom option text (for each language)
          properties:
            language_id:
              type: string
              description: The sticker text for each lagnuage id
              example: "My awesome sticker"
        sticker_text_settings:
          type: object
          description: All the sticker text styling options
          properties:
            color:
              type: string
              description: The color compared
              example: "#FFFFFF"
            family:
              type: string
              description: The font family (have to be from google global && starts with capital letter)
              example: "Arial"
            size:
              type: integer
              description: The font size (px)
              minimum: 5
              maximum: 40
              example: 30
            bold:
              type: integer
              format: boolean
              description: Defines if font weight bold
            italic:
              type: integer
              format: boolean
              description: Defines if font style italic


      required:
        - sku
        - model
        - product_description


    ProductLanguageObject:
      type: object
      properties:
        language_id: 
          type: integer
          format: int64
        name: 
          type: string
        description:
          type: string
        meta_description:
          type: string
        meta_title:
          type: string
        tag:
          type: string
      required:
        - language_id
        - name
        - description
        - meta_description
        - meta_title
        - tag
        
        
    ProductAttributes:
      type: object
      properties:
        attribute_id: 
          type: integer
        name:
          type: string
        attributes:
          type: object
          properties:
            language_number:
              type: object
              properties: 
                text: 
                  type: string
                language_id: 
                  type: integer
      
    ProductSpecials:
      type: object
      properties:
        price: 
          type: integer
          format: float
        date_start:
          type: string
          format: date
          example: 2018-12-02
        date_end:
          type: string
          format: date
          example: 2018-12-02
          
    ProductOptions:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        required: 
          type: integer
          format: boolean
        product_option_id:
          type: integer
        option_id:
          type: integer
        option_value:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionsValues'
        
          
    ProductOptionsValues:
      type: object
      properties:
        price:
          type: integer
          format: float
        price_formatted:
          type: string
        price_prefix:
          type: string
          description: can be used "-" or "+"
        product_option_value_id:
          type: integer
          description: option value id means the id of selected option from options list
        option_value:
          type: integer
          description: option id - means the option id from list
        name: 
          type: string
        quantity:
          type: integer
        substract:
          type: integer
          format: boolean
          description: means if value affect substract from the quantity of the product option
    Products:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/SingleProduct'
        success:
          type: boolean
  securitySchemes:
    Token:
      type: apiKey
      name: x-token
      in: header
  requestBodies:
    SingleProductAddEdit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SingleProduct'
      description: Product object that needs to be added to the store
      required: true
    SingleProductAdd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SingleProductAddEdit'
      description : Product object that needs to be added to the store
      required: true