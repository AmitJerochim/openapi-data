penapi: 3.0.2
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/rezlam/ej9-prepaid/1.0.0
info:
  version: "0.1.0"
  title: EJ9 Prepaid
  description: EJ9 Prepaid Proxy
  contact:
    email: you@your-company.com
tags:
  - name: Card
  - name: Password
paths:
  /cards/_list:
    post:
      tags:
        - Card
      description: Search for cards. If no parameters are specified, returns all cards.
      operationId: listCards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path: null
              query:
                - key: type
                  value: RECURRING
                - key: status
                  value: NORMAL
              method: GET
              body: null
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      $ref: "#/components/schemas/Card"
                    minItems: 0
                    uniqueItems: true
                additionalProperties: false
              example:
                cards:
                  - id: 4919192
                    printed_name: TESTE K
                    number: 9999990053033771
                    cvv: 077
                    expiration: 12/2025
                    issued_at: 2019-12-11T19:12:56.110Z
                    status: NORMAL
                    type: RECURRING
                  - id: 4919191
                    printed_name: TESTE K
                    number: 9999990052925373
                    cvv: 140
                    expiration: 12/2025
                    issued_at: 2019-12-11T19:12:52.254Z
                    status: NORMAL
                    type: RECURRING
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "500":
          $ref: "#/components/responses/500"
  /cards/_create:
    post:
      tags:
        - Card
      description: Adds a new card
      operationId: createCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
                          properties:
                            type:
                              $ref: "#/components/schemas/CardType"
                            password:
                              $ref: "#/components/schemas/CardPassword"
                          additionalProperties: false
                          required:
                            - type
                            - password
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path: null
              query: null
              method: POST
              body:
                type: RECURRING
                password: "1234"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                        type:
                          $ref: "#/components/schemas/CardType"
                        status:
                          $ref: "#/components/schemas/CardStatus"
                      additionalProperties: false
              example:
                - id: 4919192
                  printed_name: TESTE K
                  number: 9999990053033771
                  cvv: 077
                  expiration: 12/2025
                  issued_at: 2019-12-11T19:12:56.110Z
                  status: NORMAL
                  type: RECURRING
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "500":
          $ref: "#/components/responses/500"
  /cards/_detail:
    post:
      tags:
        - Card
      description: Gets the specified card.
      operationId: getCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path:
                - key: id
                  value: "4919192"
              query: null
              method: GET
              body: null
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
              example:
                id: 4919192
                printed_name: TESTE K
                number: 9999990053033771
                cvv: 077
                expiration: 12/2025
                issued_at: 2019-12-11T19:12:56.110Z
                status: NORMAL
                type: RECURRING
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /cards/_get_password:
    post:
      tags:
        - Card
      description: Retrieves the card password.
      operationId: getCardPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path:
                - key: id
                  value: 0
              query: null
              method: GET
              body: null
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                            password:
                              $ref: "#/components/schemas/CardPassword"
              example:
                id: 4919192
                password: "1234"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /cards/_set_password:
    post:
      tags:
        - Card
      description: Creates the card password.
      operationId: createCardPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
                          properties:
                            password:
                              $ref: "#/components/schemas/CardPassword"
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path:
                - key: id
                  value: "4919192"
              query: null
              method: POST
              body:
                password: "1234"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
  /passwords:
    post:
      tags:
        - Password
      description: Checks if the given password is valid.
      operationId: validatePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf: 
                    - $ref: "#/components/schemas/EntryProtocol"
                    - type: object
                      properties:
                        body:
                          type: object
                          properties:
                            password:
                              $ref: "#/components/schemas/CardPassword"
            example:
              header:
                - key: X-Account-ID
                  value: "123456"
                - key: X-Customer-ID
                  value: "987654"
              path: null
              query: null
              method: POST
              body:
                password: "1234"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
components:
  headers:
    ETag:
      description: Current version of the resource
      schema:
        type: string
        example: "ETag: YWVlYTgyNmE4ZTRmLjUyNDg3MDEyMzU2NjEzNTc5MDQ="
    Last-Modified:
      description: Last time the resource has been modified
      schema:
        type: string
        format: date-time
        example: "Last-Modified: Fri, 26 Dec 2019 16:15:22 GMT"
    Location:
      description: URL of the created resource
      schema:
        type: string
        format: uri
        example: "Location: http://api.acme.com/prepaid/v1/cards/99b380a7-8762-4f38-9d70-900225859839"
    X-Customer-ID:
      description: ID of a customer
      schema:
        type: integer
        format: int64
        example: "X-Customer-ID: 23898694"
    X-Account-ID:
      description: ID of a customer account
      schema:
        type: integer
        format: int64
        example: "X-Account-ID: 24128482"
  responses:
    "200":
      description: OK
    "201":
      description: Created
      headers:
        Location:
          $ref: "#/components/headers/Location"
    "204":
      description: No Content
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"
          example:
            status: 400
            type: VALIDATION_ERROR
            title: Validation
            code: XYZ
            message: The property X cannot be null          
    "401":
      description: Unauthorized
    "404":
      description: Not Found
    "403":
      description: Forbidden
    "422":
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"
          example:
            status: 422
            type: BUSINESS_ERROR
            title: Error
            code: ZWX
            message: Could not create card
    "500":
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"
          example:
            status: 500
            message: An unexpected error has ocurred
  schemas:
    CardType:
      title: Card type
      description: Card types defined by Pismo
      type: string
      enum:
        - RECURRING
        - PLASTIC
        - CARD_ON_FILE
        - TEMPORARY
    CardStatus:
      title: Card status
      description: Card status defined by Pismo
      type: string
      enum:
        - NORMAL
        - BLOCKED
        - PENDING
        - LOST
        - ROBBED
        - EXPIRED
        - DAMAGED
        - FRAUD
        - WARNING
        - CANCELED
        - CREATED
        - DELETED
    CardPassword:
      title: Card password
      description: A four digit password
      type: string
      pattern: ^\d{4}$
    Card:
      title: Card info [output]
      description: A representation of a card resource
      type: object
      properties:
        id:
          type: integer
          format: int64
        printed_name:
          type: string
        number:
          type: string
          pattern: ^\d{16}$
        cvv:
          type: string
          pattern: ^\d{3}$
        expiration:
          type: string
          pattern: ^\d{2}/\d{4}$
        issued_at:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/CardStatus"
        type:
          $ref: "#/components/schemas/CardType"
      additionalProperties: false
      required:
        - id
        - printed_name
        - number
        - cvv
        - expiration
        - issued_at
        - status
        - type
    ProblemDetail:
      title: Problem detail [output]
      description: Describes a problem that has occurred (RFC 7807)
      type: object
      properties:
        status:
          type: integer
          format: int32
          enum:
            - 400
            - 401
            - 403
            - 404
            - 409
            - 410
            - 422
            - 500
          readOnly: true
        type:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          readOnly: true
        code:
          type: string
        message:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: object
          minItems: 0
          uniqueItems: true
          additionalProperties: false
      additionalProperties: false
    KeyValueData:
      title: Key Value Data
      description: ""
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      additionalProperties: false
      required:
        - key
        - value
    EntryProtocol:
      title: Entry Protocol
      description: EJ9 defalt payload
      type: object
      properties:
        header:
          type: array
          items:
            $ref: "#/components/schemas/KeyValueData"
          minItems: 0
          uniqueItems: true
          additionalProperties: false
        path:
          type: array
          items:
            $ref: "#/components/schemas/KeyValueData"
          minItems: 0
          uniqueItems: true
          additionalProperties: false
        query:
          type: array
          items:
            $ref: "#/components/schemas/KeyValueData"
          minItems: 0
          uniqueItems: true
          additionalProperties: false
        method:
          type: string
          enum: 
            - GET
            - POST
    CardPasswordEntry:
      title: EJ9 Card Password
      description: A four digit password
      type: object
      allOf:
        - $ref: "#/components/schemas/EntryProtocol"
        - properties:
            body:
              type: object
              properties:
                password:
                  type: string
                  pattern: ^\d{4}$
        - additionalProperties: false
        - required:
          - body