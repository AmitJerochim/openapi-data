{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "The following API calls are made to process a payment for RevenueShield. The following steps outline the abstract process for a full successful payment:\n1. Third party site calls one of the three summary API's.\n2. A summary is returned to the third party site. \n3. The third party site takes a payment and posts transaction id and payment object back to the payment save API. \n4. RevenueShield system is updated to record that the payment has been taken for this case. The payment reference id is returned to the third party site to confirm that the payment has been saved.\n",
    "version" : "1.0.0",
    "title" : "RevenueShield",
    "contact" : {
      "email" : "product.support@iqmsoftware.co.uk"
    }
  },
  "servers" : [ {
    "description" : "RevenueShield API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/iqmadmin/RevenueShield/1.0.0"
  } ],
  "tags" : [ {
    "name" : "summary",
    "description" : "Gets summaries of cases"
  }, {
    "name" : "payment",
    "description" : "Operations for dealing with payments"
  } ],
  "paths" : {
    "/penaltyfarenotice/{number}" : {
      "get" : {
        "tags" : [ "summary" ],
        "summary" : "Gets the summary of a PFN",
        "description" : "This get request returns a summary of the PFN from the parameters provided. ",
        "operationId" : "penaltyFareNoticeGet",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "required" : true,
          "description" : "The penalty fare notice number.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "secret",
          "in" : "query",
          "required" : true,
          "description" : "The secret to authenticate the api. This should have been provided by IQM Software.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "firstname",
          "in" : "query",
          "required" : true,
          "description" : "The first name on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "surname",
          "in" : "query",
          "required" : true,
          "description" : "The surname on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "revdev",
          "in" : "query",
          "required" : true,
          "description" : "The device identifier. Made up as IMEI:Revision:DatabaseVersion:OSVersion. E.G. 358537049198640:134126:12:",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation - Summary returned as XML or JSON.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PenaltyFareNoticeSummary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PenaltyFareNoticeSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Secret - Error Result object returned with the message 'The secret that you have supplied is invalid' or 'The secret has been deactivated.'",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Error - This usually means something has gone wrong within RevenueShield. The exception message will be returned as a string."
          }
        }
      }
    },
    "/unpaidfarenotice/{number}" : {
      "get" : {
        "tags" : [ "summary" ],
        "summary" : "Gets the summary of a UFN.",
        "description" : "This get request returns a summary of the UFN from the paramaters provided.",
        "operationId" : "unpaidFareNoticeGet",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "required" : true,
          "description" : "The unpaid fare notice number.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "secret",
          "in" : "query",
          "required" : true,
          "description" : "The secret to authenticate the api. This should have been provided by IQM Software.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "firstname",
          "in" : "query",
          "required" : true,
          "description" : "The first name on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "surname",
          "in" : "query",
          "required" : true,
          "description" : "The surname on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "revdev",
          "in" : "query",
          "required" : true,
          "description" : "The device identifier. Made up as IMEI:Revision:DatabaseVersion:OSVersion. E.G. 358537049198640:134126:12:",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation - Summary returned as XML or JSON.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnpaidFareNoticeSummary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnpaidFareNoticeSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Secret - Error Result object returned with the message 'The secret that you have supplied is invalid' or 'The secret has been deactivated.'",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Error - This usually means something has gone wrong within RevenueShield. The exception message will be included in the message of the Error Result object."
          }
        }
      }
    },
    "/courtcase/{number}" : {
      "get" : {
        "tags" : [ "summary" ],
        "summary" : "Gets the summary of a TIR or a MG11.",
        "description" : "This get request returns a summary of the TIR or MG11 from the paramaters provided.",
        "operationId" : "courtCaseGet",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "required" : true,
          "description" : "The unpaid fare notice number.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "secret",
          "in" : "query",
          "required" : true,
          "description" : "The secret to authenticate the api. This should have been provided by IQM Software.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "firstname",
          "in" : "query",
          "required" : true,
          "description" : "The first name on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "surname",
          "in" : "query",
          "required" : true,
          "description" : "The surname on the PFN.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "revdev",
          "in" : "query",
          "required" : true,
          "description" : "The device identifier. Made up as IMEI:Revision:DatabaseVersion:OSVersion. E.G. 358537049198640:134126:12:",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation - Summary returned as XML or JSON.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCaseSummary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCaseSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Secret - Error Result object returned with the message 'The secret that you have supplied is invalid' or 'The secret has been deactivated.'",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Error - This usually means something has gone wrong within RevenueShield. The exception message will be included in the message of the Error Result object."
          }
        }
      }
    },
    "/payment/save" : {
      "put" : {
        "tags" : [ "payment" ],
        "summary" : "Saves payment object",
        "description" : "Saves the payment object in RevenueShield and updates the courtcase as paid. Returns Result object containing the transaction id and server sync date.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "revdev",
          "in" : "query",
          "required" : true,
          "description" : "The device identifier. Made up as IMEI:Revision:DatabaseVersion:OSVersion. E.G. 358537049198640:134126:12:",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "secret",
          "in" : "query",
          "required" : true,
          "description" : "The secret to authenticate the api. This should have been provided by IQM Software.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "trans",
          "in" : "query",
          "required" : true,
          "description" : "Transaction id is used to make sure the payment was saved. When the third party software sends the transaction id, revenueshield will reply with the same transaction id to mark it as done. This is to make sure that the payment was definetly saved and double payments are not taken.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation - Payment saved..",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Result"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Result"
                }
              }
            }
          },
          "412" : {
            "description" : "Invalid transaction id - Error Result object returned with the message 'Invalid transaction id passed in'.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Error - This usually means something has gone wrong within RevenueShield. The exception message will be returned as a string."
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Payment"
              }
            }
          },
          "description" : "Updated user object",
          "required" : true
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "schemas" : {
      "PenaltyFareNoticeSummary" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string",
            "format" : "guid"
          },
          "CourtCaseIdId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "PFNNumber" : {
            "type" : "string"
          },
          "BaseItemType" : {
            "type" : "string"
          },
          "BadgeNo" : {
            "type" : "string"
          },
          "Issued" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DestinationStopped" : {
            "type" : "string"
          },
          "DestinationFrom" : {
            "type" : "string"
          },
          "DestinationTo" : {
            "type" : "string"
          },
          "CurrentAmountDue" : {
            "type" : "integer",
            "format" : "decimal"
          },
          "Summoned" : {
            "type" : "boolean"
          },
          "AcceptPayment" : {
            "type" : "boolean"
          },
          "NonPaymentReason" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Surname" : {
            "type" : "string"
          },
          "PostCode" : {
            "type" : "string"
          },
          "Edited" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "PenaltyFareNoticeSummary"
        }
      },
      "UnpaidFareNoticeSummary" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string",
            "format" : "guid"
          },
          "CourtCaseIdId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "UFNNumber" : {
            "type" : "string"
          },
          "BaseItemType" : {
            "type" : "string"
          },
          "BadgeNo" : {
            "type" : "string"
          },
          "Issued" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DestinationStopped" : {
            "type" : "string"
          },
          "DestinationFrom" : {
            "type" : "string"
          },
          "DestinationTo" : {
            "type" : "string"
          },
          "CurrentAmountDue" : {
            "type" : "integer",
            "format" : "decimal"
          },
          "Summoned" : {
            "type" : "boolean"
          },
          "AcceptPayment" : {
            "type" : "boolean"
          },
          "NonPaymentReason" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Surname" : {
            "type" : "string"
          },
          "PostCode" : {
            "type" : "string"
          },
          "Edited" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "UnpaidFareNoticeSummary"
        }
      },
      "CourtCaseSummary" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string",
            "format" : "guid"
          },
          "CourtCaseIdId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "UFNNumber" : {
            "type" : "string"
          },
          "PFNNumber" : {
            "type" : "string"
          },
          "CaseReference" : {
            "type" : "string"
          },
          "BaseItemType" : {
            "type" : "string"
          },
          "BadgeNo" : {
            "type" : "string"
          },
          "Issued" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DestinationStopped" : {
            "type" : "string"
          },
          "DestinationFrom" : {
            "type" : "string"
          },
          "DestinationTo" : {
            "type" : "string"
          },
          "CurrentAmountDue" : {
            "type" : "integer",
            "format" : "decimal"
          },
          "Summoned" : {
            "type" : "boolean"
          },
          "AcceptPayment" : {
            "type" : "boolean"
          },
          "NonPaymentReason" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Surname" : {
            "type" : "string"
          },
          "PostCode" : {
            "type" : "string"
          },
          "Edited" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CourtCaseSummary"
        }
      },
      "Payment" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string",
            "format" : "guid"
          },
          "ClientPerformedByDutyId" : {
            "type" : "string",
            "format" : "guid"
          },
          "ClientBaseFareNoticeId" : {
            "type" : "string",
            "format" : "guid"
          },
          "BaseFareNoticeType" : {
            "type" : "string"
          },
          "ClientTransactionId" : {
            "type" : "string",
            "format" : "guid"
          },
          "ReceiptNumber" : {
            "type" : "string"
          },
          "Paid" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Amount" : {
            "type" : "integer",
            "format" : "decimal"
          },
          "PaymentTypeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Notes" : {
            "type" : "string"
          },
          "VirtualPayment" : {
            "type" : "boolean"
          },
          "AuthCode" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Cancelled" : {
            "type" : "boolean"
          },
          "CancelledReason" : {
            "type" : "string"
          },
          "Created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Edited" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EditedBy" : {
            "type" : "string"
          },
          "CreatedBy" : {
            "type" : "string"
          },
          "Source" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Payment"
        }
      },
      "ErrorResult" : {
        "type" : "object",
        "properties" : {
          "Message" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ErrorResult"
        }
      },
      "Result" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string",
            "format" : "guid"
          },
          "ServerSyncDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "Result"
        }
      }
    },
    "requestBodies" : {
      "Pet" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PenaltyFareNoticeSummary"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/PenaltyFareNoticeSummary"
            }
          }
        },
        "description" : "Pet object that needs to be added to the store",
        "required" : true
      },
      "UserArray" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PenaltyFareNoticeSummary"
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      }
    }
  }
}