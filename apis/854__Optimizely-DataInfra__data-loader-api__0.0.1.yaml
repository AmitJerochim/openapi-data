penapi: 3.0.1
info:
  title: Data Loader Service
  contact:
    email: frank.hu@optimizely.com
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://api.optimizely.com/export'
paths:
  '/query/eee/events/{entity_id}':
    get:
      summary: select events with entity_id
      parameters:
        - name: entity_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: start_timestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end_timestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: columns
          in: query
          description: event columns defined in
          required: false
          schema:
            type: array
            items:
              type: string
              pattern: '^[a-z_]+$'
            minItems: 1
          style: pipeDelimited
          explode: false
        - name: filters
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              pattern: '^[a-z_]+(>=|<=|!=|>|<|=)[a-z_]+$'
            minItems: 1
          style: pipeDelimited
          explode: false
          description: rows filter to apply
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/query/eee/decisions/{experiment_id}':
    get:
      summary: select decisions with experiment_id
      parameters:
        - name: experiment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: start_timestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end_timestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: columns
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              pattern: '^[a-z_]+$'
            minItems: 1
          style: pipeDelimited
          explode: false
          description: columns to include
        - name: filters
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              pattern: '^[a-z_]+(>=|<=|!=|>|<|=)[a-z_]+$'
            minItems: 1
          style: pipeDelimited
          explode: false
          description: rows filter to apply
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  # '/query/eee/attributes/{experiment_id}':
  #   get:
  #     summary: select attributes with experiment_id
  #     parameters:
  #       - name: experiment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #       - name: start_timestamp
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           format: date-time
  #       - name: end_timestamp
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           format: date-time
  #       - name: filters
  #         in: query
  #         required: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #             pattern: '^[a-z_]+(>=|<=|!=|>|<|=)[a-z_]+$'
  #           minItems: 1
  #         style: pipeDelimited
  #         explode: false
  #         description: rows filter to apply
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Request'
  #       '400':
  #         description: Bad Request
  #       '401':
  #         description: Unauthorized
          
  '/query/{request_id}':
    get:
      summary: query status of requst
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        
components:
  schemas:
    Event:
      type: object
      properties:
        uuid:
          type: string
          format: string
        timestamp:
          type: integer
          format: int64
        process_timestamp:
          type: integer
          format: int64
        visitor_id:
          type: string
        session_id:
          type: string
        account_id:
          type: string
        compaign_id:
          type: string
        experiment_id:
          type: string
        variation_id:
          type: string
        is_holdback:
          type: boolean
        entity_id:
          type: string
          format: int64
        attribute.id:
          type: string
        attribute.name:
          type: string
        attribute.type:
          type: string
        attribute.value:
          type: string
        user_ip:
          type: string
        user_agent:
          type: string
        referer:
          type: string
        event_type:
          type: string
        event_name:
          type: string
        revenue:
          type: integer
          format: int64
        value:
          type: number
          format: double
        quantity:
          type: integer
          format: int64
        tag.key:
          type: string
        tag.value:
          type: string
        revision:
          type: string
        client_engine:
          type: string
        client_name:
          type: string
        client_version:
          type: string
    Decision:
      type: object
      properties:
        uuid:
          type: string
          format: string
        timestamp:
          type: integer
          format: int64
        process_timestamp:
          type: integer
          format: int64
        visitor_id:
          type: string
        session_id:
          type: string
        account_id:
          type: string
        project_id:
          type: string
        compaign_id:
          type: string
        experiment_id:
          type: string
        variation_id:
          type: string
        is_holdback:
          type: boolean
        attribute.id:
          type: string
        attribute.name:
          type: string
        attribute.type:
          type: string
        attribute.value:
          type: string
        user_ip:
          type: string
        user_agent:
          type: string
        referer:
          type: string
        revision:
          type: string
        client_engine:
          type: string
        client_name:
          type: string
        client_version:
          type: string
        source:
          type: string
          enum:
            - DECISION
            - ENRICH
            - EVENT
    Attribute:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
        name:
          type: string
        timestamp:
          type: integer
          format: int64
        session_id:
          type: string
        account_id:
          type: string
        compaign_id:
          type: string
        experiment_id:
          type: string
        visitor_id:
          type: string
    Request:
      required:
        - request_id
        - s3_url
        - status
        - columns
        - row_filters
      type: object
      properties:
        request_id:
          type: string
        s3_url:
          type: string
        status:
          type: string
          description: status of the submitted query
          enum:
            - PENDING
            - SUCCESS
            - FAIL
        columns:
          type: array
          items:
            type: string
            pattern: '^[a-z_]+$'
          minItems: 0
        row_filters:
          type: array
          items:
            type: string
            pattern: '^[a-z_]+$'
          minItems: 0
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []