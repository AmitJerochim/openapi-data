penapi: 3.0.0
servers: []
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: JOB
    description: Operations available to regular developers
  - name: Employer
    description: Operations available to regular developers
  - name: Employee

paths:
  /REST/server/authenticationtokens:
    post:
      tags: 
        - JOB
      summary: Authorize
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginItem'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoginResponse'
  /REST/objects:
    get:
      summary: Search object by ID
      parameters:
        - in: header
          name: X-Authentication
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: o
          schema:
            type: integer
            example: 101
          description: The type of a searching object, 101 for emplyer or 124 for employee in this case.
        - in: query
          name: q
          schema:
            type: integer
          description: The ID of an object we want to search
      tags:
        - JOB
      responses:
        '200':
          description: search results
  
  /REST/objects/101/{objectID}/latest/properties:
    get:
      summary: Get all employer properties
      tags: 
        - Employer
      parameters: 
        - in: header
          name: X-Authentication
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: objectID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: search results
          
  
  /REST/objects/101/{objectID}/latest/relationships:
    get:
      summary: Get all employer relationships
      tags: 
        - Employer
      parameters: 
        - in: header
          name: X-Authentication
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: objectID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: search results
          
  
  /REST/objects/124/{objectID}/latest/properties:
    get:
      summary: Get all employee properties
      tags: 
        - Employee
      parameters: 
        - in: header
          name: X-Authentication
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: objectID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: search results
          
  
  /REST/objects/124/{objectID}/latest/relationships:
    get:
      summary: Get all employee relationships
      tags: 
        - Employee
      parameters: 
        - in: header
          name: X-Authentication
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: objectID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: search results
          
          
components:
  schemas:
    LoginItem:
      type: object
      required:
        - Username
        - Password
        - VaultGuid
      properties:
        Username:
          type: string
          format: uuid
          example: jajajaja
        Password:
          type: string
          format: password
          example: jajajajaja
        VaultGuid:
          type: string
          example: '{59630CB1-973E-4E1C-83F4-8BD946D2FD4E}'
    LoginResponse:
      type: object
      properties:
        Value:
          type: string
          example: 'h6tBDGKD93v1ksjM6M0dTLknUeNkdLpK6hoCBsjaES9DpX3HdMO3B8Vnwb_FpOuDQYzkBWG9H7T_kQyEuGagxEnk37etC1DWFz4hIdqrQgT1q3-bf3xI2wXC8w_vJv9eVT-Pz4rj88y5r4zOVz23DgYPJAvKw6cdUOVSDwFvBpjm2wdebIMG-AHNlPeQNkW31VRQy7itgemGSQ_YUX2GqY4Gv8JcrVsn2Z1ro80hCt1soW11xWLl8CEQE7nuGxZLu7_ozBxsFUFkM1FRFB8SEvhkETQuyjcMxB_eUo2iPf6PK8zULrZbfuYClQ7mG9su5ZlHLV7yxwvgTX6gJ3zL1Q'