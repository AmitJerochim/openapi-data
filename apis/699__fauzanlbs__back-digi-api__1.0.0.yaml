openapi: 3.0.0
info:
  description: |
    This is a Digi Test API Documentation, Build with Laravel
  version: "1.0.0"
  title: Digi Test API
  contact:
    email: fauzanlubis23@gmail.com
  
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fauzanlbs/back-digi-api/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://floating-reaches-03248.herokuapp.com/api/1.0.0
tags:
  - name: auth
    description: Authentication
  - name: user
    description: User
paths:
 
  /user:
    get:
      tags:
        - user
      summary: get login user
      operationId: user
      description: |
        Get User info after login
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /register:
    post:
      tags:
        - auth
      summary: Register user
      description: This can be done by not logged in user.
      operationId: Register
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
  
  /userlist:
    get:
      tags:
        - user
      summary: get all user
      operationId: userlist
      description: |
        Get all user list data
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          
  
  /login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  
  
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
  
  
  
components:
  schemas:
    
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        
      xml:
        name: User
    
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    
    User:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify 
            'read:pets': read
    api_key:
      type: apiKey
      name: api_key
      in: header
