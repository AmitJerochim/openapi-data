openapi: 3.0.0
info:
  title: Data Service
  description: OpenEdge Data Service.
  version: 1.0.0
servers:
# Added by API Auto Mocking Plugin
  - url: http://fi1-sv-ltj055:8810/Masterdata/web/pdo/MasterdataService
    description: Server for UAT testing
  - url: http://fi1-sv-ltj045:8810/Masterdata/web/pdo/MasterdataService
    description: Server for production Production
paths:
  /SIAlesyy:
    put:
      summary: Updates discount reason code records
      description: Updates one or more discount reason code records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dslisa'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dslisa'
    post:
      summary: Creates discount reason code  records
      description: Creates one or more new discount reason code  records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dslisa'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dslisa'
    get:
      summary: Gets all discount reason code records
      description: 'Gets all discount reason code records'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dslisa'
  /SIAlesyy/SubmitAlesyy:
    put:
      summary: Submits multiple all discount reason code updates
      description: >-
        Submits one or more updates (create, update, delete) in a single request. Request parameters needs to use BEFORE-TABLE and ROW-STATE attribute
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
  /SIMyymala:
    get:
      summary: Gets Myymala (Store) records
      description: 'Gets one or more strore `Myymala` records, based on a **filter** string.'
      parameters:
        - name: filter
          in: query
          description: filter string with ABL query (filter={"ablFilter":"myymala=980"}) or custom format filter=myymala>=981.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsMyymala'
    post:
      summary: Creates Myymala (store) records
      description: Creates one or more new store `Myymala` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsMyymala'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsMyymala'
    put:
      summary: Updates Myymala (store) records
      description: Updates one or more strore `Myymala` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsMyymala'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsMyymala'
  /SIMyymala/SubmitMyymala:
    put:
      summary: Submits multiple Myymala (store) updates
      description: >-
        Submits one or more updates (create, update, delete) in a single request. Request parameter need needs to use BEFORE-TABLE and ROW-STATE attribute
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsMyymala'
  /SIMyymala/count:
    put:
      summary: Invokes Operation
      description: ''
      parameters:
        - name: filter
          in: query
          description: filter string with ABL query or custom format.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
  /SIReksyy:
    put:
      summary: Updates SIReksyy records
      description: Updates one or more `SIReksyy` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsreksyy'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsreksyy'
    get:
      summary: Gets SIReksyy records
      description: 'Gets one or more `SIReksyy` records, based on a **filter** string.'
      parameters:
        - name: filter
          in: query
          description: filter string with ABL query or custom format.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsreksyy'
    post:
      summary: Creates SIReksyy records
      description: Creates one or more new `SIReksyy` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsreksyy'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsreksyy'
  /SIWebItems:
    post:
      summary: Creates SIWebItems records
      description: Creates one or more new `SIWebItems` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsItem'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsItem'
    put:
      summary: Updates SIWebItems records
      description: Updates one or more `SIWebItems` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsItem'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsItem'
    get:
      summary: Gets SIWebItems records
      description: 'Gets one or more `SIWebItems` records, based on a **filter** string.'
      parameters:
        - name: filter
          in: query
          description: 'filter string with JFP-formated query, ABL query or custom format.'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsItem'
  /SIWebItems/count:
    put:
      summary: Invokes Operation
      description: ''
      parameters:
        - name: filter
          in: query
          description: filter string with ABL query or custom format.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
  /SIWebItems/SubmitWebItems:
    put:
      summary: Submits multiple SIWebItems updates
      description: >-
        Submits one or more updates (create, update, delete) in a single
        request.
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
  /SIProductGroups:
    put:
      summary: Updates SIProductGroups records
      description: Updates one or more `SIProductGroups` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsProductGroup'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsProductGroup'
    post:
      summary: Creates SIProductGroups records
      description: Creates one or more new `SIProductGroups` records.
      parameters: []
      requestBody:
        description: Input parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dsProductGroup'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsProductGroup'
    get:
      summary: Gets SIProductGroups records
      description: >-
        Gets one or more `SIProductGroups` records, based on a **filter**
        string.
      parameters:
        - name: filter
          in: query
          description: filter string with ABL query or custom format.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsProductGroup'
  /SIProductGroups/SubmitProductGroups:
    put:
      summary: Submits multiple SIProductGroups updates
      description: >-
        Submits one or more updates (create, update, delete) in a single
        request.
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
  /SItuotetiedotSP:
    get:
      summary: Gets Product masterdarta records, e.g predefined request set's for Promeda
      description: >-
        Gets one or more `SItuotetiedotSP` records, based on a **filter**
        string.
      parameters:
        - name: filter
          in: query
          description: > 
            filter string with ABL query or custom format,
            For Promeda software use custom predefined filter values:
              Promeda = Service and contact lensitems for Promead use
              PromedaPiilari = contact lensitems for Promeda use
              PromedaPalvelu = Service items for Promeda use
          schema:
            type: string
      responses:
        '200':
          description: > 
            Successful response
            based on filter set of result content is different (Promeda filter filters not needed objects from result )
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsItem2'
                  
                  
                
components:
  schemas:
    dslisa:
      type: object
      properties:
        dslisa:
          properties:
            ttlisa:
              $ref: '#/components/schemas/ttlisaArray'
    ttlisa:
      type: object
      properties:
        ttlisa:
          $ref: '#/components/schemas/ttlisaArray'
    ttlisaArray:
      type: array
      items:
        $ref: '#/components/schemas/ttlisaItem'
    ttlisaItem:
      type: object
      properties:
        lisa:
          type: string
        toimpvt:
          type: integer
        hinta:
          type: number
        laji:
          type: string
        selitys:
          type: string
        RE-pakko:
          type: boolean
        Aktiivinen:
          type: boolean
        MaaKdi:
          type: string
    dsMyymala:
      type: object
      properties:
        dsMyymala:
          properties:
            ttmyymala:
              $ref: '#/components/schemas/ttmyymalaArray'
    ttmyymala:
      type: object
      properties:
        ttmyymala:
          $ref: '#/components/schemas/ttmyymalaArray'
    ttmyymalaArray:
      type: array
      items:
        $ref: '#/components/schemas/ttmyymalaItem'
    ttmyymalaItem:
      type: object
      properties:
        nimi:
          type: string
          description: Store name 
        nimijatke:
          type: string
          description: Additional store name 
        katuos:
          type: string
          description: Store street address
        puhelin:
          type: string
          description: Store phone number
        telefax:
          type: string
        ketju:
          type: string
          description: > 
            Store chain code 
            I=Instrumentarium
            N=Nissen
            B=Keops
            V=Estonian Instrumentarium
        postinro:
          type: integer
          description: Store's postal code 
        myymala:
          type: integer
          description: Store ID
        parit-va:
          type: array
          description: Store's statistic
          items:
            type: integer
        parit-edv:
          description: Store's statistic
          type: array
          items:
            type: integer
        parit-2edv:
          description: Store's statistic
          type: array
          items:
            type: integer
        parit-3edv:
          description: Store's statistic
          type: array
          items:
            type: integer
        myyntimk-va:
          description: Store's statistic
          type: array
          items:
            type: number
        myyntimk-edv:
          description: Store's statistic
          type: array
          items:
            type: number
        myyntimk-3edv:
          description: Store's statistic
          type: array
          items:
            type: number
        myyntimk-2edv:
          description: Store's statistic
          type: array
          items:
            type: number
        lisatieto:
          description: Store's additional information
          type: array
          items:
            type: string
        telex:
          type: string
        char1:
          type: array
          items:
            type: string
        vuosi:
          description: LTJ's data for calender handling etc.
          type: integer
        tilaus:
          description: Store's order reference table
          type: array
          items:
            type: integer
        alue:
          description: Store's sales area code
          type: string
        pikapaja:
          type: integer
        char2:
          type: array
          items:
            type: string
        char3:
          type: array
          items:
            type: string
        dec1:
          type: array
          items:
            type: number
        dec2:
          type: array
          items:
            type: number
        int1:
          type: array
          items:
            type: integer
        int2:
          type: array
          items:
            type: integer
        log1:
          type: array
          items:
            type: boolean
        log2:
          type: array
          items:
            type: boolean
        pvm1:
          type: array
          items:
            format: date
            type: string
        paallikko:
          type: string
        web-sivu:
          type: string
        email:
          type: string
        lopetettu:
          description: Store is closed
          type: boolean
        loppvm:
          description: Store's closing date
          type: string
        Paketti:
          type: string
        tuoalue:
          description: > 
            Store's area code for production messaging quidance
          type: string
        Valikoima:
          type: string
        franchise:
          description: > 
            Code for franshisee stores 
            F=Franshisee store
          type: string
        HOT:
          type: boolean
        aukiolo:
          description: Store's opening times (e.g for sms message)
          type: string
        aukiolo_r:
          description: Store's opening times message in swedish (e.g for sms message)
          type: string
        aukiolo_e:
          description: Store's opening times message in englis (e.g for sms message)
          type: string
        PriceGroup:
          description: Store's priceGroup code for pricing
          type: string
        Viesti_Lahetys:
          description: Is automatic order completed sms sending on
          type: boolean
        Validation:
          description: Is store's order validation on
          type: boolean
        ToimitusKesto:
          description: Delivery time for store 
          type: number
        SortNum:
          type: integer
        id:
          type: string
        seq:
          type: integer
    dsreksyy:
      type: object
      properties:
        dsreksyy:
          properties:
            ttreksyy:
              $ref: '#/components/schemas/ttreksyyArray'
    ttreksyy:
      type: object
      properties:
        ttreksyy:
          $ref: '#/components/schemas/ttreksyyArray'
    ttreksyyArray:
      type: array
      items:
        $ref: '#/components/schemas/ttreksyyItem'
    ttreksyyItem:
      type: object
      properties:
        syykoodi:
          type: string
        selitys:
          type: string
    dsItem2:
      type: object
      properties:
        dsItem:
          properties:
            tt_Item:
              $ref: '#/components/schemas/tt_ItemArray2'          
    dsItem:
      type: object
      properties:
        dsItem:
          properties:
            tt_Item:
              $ref: '#/components/schemas/tt_ItemArray'
    tt_Item:
      type: object
      properties:
        tt_Item:
          $ref: '#/components/schemas/tt_ItemArray'
    tt_ItemArray2:
      type: array
      items:
        $ref: '#/components/schemas/tt_ItemItem2'
    tt_ItemArray:
      type: array
      items:
        $ref: '#/components/schemas/tt_ItemItem'        
    tt_ItemItem:
      type: object
      properties:
        ItemID:
          type: string
          description: Unique Nav Item code 
        ItemType:
          type: string
        ItemCategoryCode:
          type: string
        ItemCategoryName:
          type: string
        ItemCategoryType:
          type: string
        ItemProductGroupCode:
          type: string
          description: >
            ProductGroup code, data can be found http://fi1-sv-ltj055:8810/Masterdata/web/pdo/MasterdataService/SIProductGroups
              e.g. 
              110 = Single vision lenses
              220 = coating items for lense
              810 = Item codes for Cases
              931 = Eye examination service prroducts
        ItemProductGroupName:
          description: ProductGroup name 
          type: string
        ItemPOBSGategoryGroupCode:
          type: string
        ItemPOBSGategoryGroupName:
          type: string
        AternativeItemID1:
          type: string
        AternativeItemID2:
          type: string
        ItemName:
          type: string
        ItemDescPrimary:
          type: string
        ItemDescSearch:
          type: string
        ItemShortName:
          type: string
        ItemPropertiesLTJMAT:
          type: string
          description: > 
              Old LTJ "marketing/sales" item code
        ItemPropertiesLTJTYPE:
          type: string
          description: >
            Old LTJ "marketing/sales" item type
        ItemBrandName:
          type: string
        ItemBrandType:
          type: string
        ItemCostingMethod:
          type: string
        ItemIndirectCostPercentage:
          type: number
        ItemCountryOfOrigin:
          type: string
        ItemStartDate:
          type: string
        ItemEndDate:
          type: string
        ItemExpirationDate:
          type: string
        ItemChangeDate:
          type: string
        ItemGenerationDate:
          type: string
        ItemLoyaltyProgramsGroup:
          type: string
        ItemDiscountGroup:
          type: string
        ItemWarrantyGroup:
          type: string
        ItemStockGroup:
          type: string
        ItemServiceGroup:
          type: string
        ItemCollectionGroup:
          type: string
        ItemVATPostingGroup:
          type: string
        ItemStatus:
          type: string
        ItemAvailable:
          type: boolean
        ItemNonShelfItemFlag:
          type: boolean
        ItemReturnAbleFlag:
          type: boolean
        ItemOpticalValuesFlag:
          type: boolean
        ItemInsurAbleFlag:
          type: boolean
        ItemDirectOrderFlag:
          type: boolean
        ItemCustomerOrder:
          type: boolean
        ItemDiscountableFlag:
          type: boolean
        ItemCustOrderDiscLevel:
          type: string
        ItemUnitCostPrice:
          type: number
        ItemStandardCost:
          type: number
        ItemRetailPriceStrategy:
          type: string
        ItemBaseUnitDescriptor:
          type: string
        ItemBaseUnitCount:
          type: number
        ItemBaseDepth:
          type: number
        ItemBaseHeight:
          type: number
        ItemBaseWidth:
          type: number
        itemNetWeight:
          type: number
        itemMarketingGender:
          type: string
        ItemMarketingSegment:
          type: string
        ItemMarketingspecs:
          type: string
        ItemOrderLeadTime:
          type: number
        ItemOrderLeadTimeUnitType:
          type: string
        ItemOrderQuantityMaximum:
          type: number
        ItemOrderQuantityMinimum:
          type: number
        ItemOrderQuantityMultiple:
          type: number
        ItemStockType:
          type: string
        ItemSafetyStockQuantity:
          type: number
        ItemSupplierPath:
          type: string
        ItemSupplierID:
          type: string
        ItemSupplierName:
          type: string
        ItemSupplierItemID:
          type: string
        ItemEANUCCNumber:
          type: string
        ItemCaseEANUCCNumber:
          type: string
        ItemSerialNumber:
          type: string
        ItemOrderTypeValue:
          type: string
        VariantID:
          type: string
        tt_ItemDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemDescriptions'
        tt_CLensItem:
          type: array
          items:
            $ref: '#/components/schemas/tt_CLensItem'
        tt_ItemRangeAllowedInclude:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemRangeAllowedInclude'
        tt_ItemPrice:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemPrice'
        tt_ItemStyles:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemStyles'
        tt_AdditionalItemID:
          type: array
          items:
            $ref: '#/components/schemas/tt_AdditionalItemID'
    tt_ItemItem2:
      type: object
      properties:
        ItemID:
          type: string
          description: Unique Nav Item code 
        ItemType:
          type: string
        ItemCategoryCode:
          type: string
        ItemCategoryName:
          type: string
        ItemProductGroupCode:
          type: string
          description: >
            ProductGroup code, data can be found http://fi1-sv-ltj055:8810/Masterdata/web/pdo/MasterdataService/SIProductGroups
              e.g. 
              110 = Single vision lenses
              220 = coating items for lense
              810 = Item codes for Cases
              931 = Eye examination service prroducts
        ItemProductGroupName:
          description: ProductGroup name 
          type: string
        ItemPOBSGategoryGroupCode:
          type: string
        ItemPOBSGategoryGroupName:
          type: string
        ItemName:
          type: string
        ItemDescPrimary:
          type: string
        ItemDescSearch:
          type: string
        ItemShortName:
          type: string
        ItemPropertiesLTJMAT:
          type: string
          description: > 
            Old LTJ "marketing/sales" item code
        ItemPropertiesLTJTYPE:
          type: string
          description: > 
            Old LTJ "marketing/sales" item type
        ItemBrandName:
          type: string
        ItemBrandType:
          type: string
        ItemCostingMethod:
          type: string
        ItemStartDate:
          type: string
        ItemEndDate:
          type: string
        ItemExpirationDate:
          type: string
        ItemChangeDate:
          type: string
        ItemGenerationDate:
          type: string
        ItemServiceGroup:
          type: string
        ItemStatus:
          type: string
        ItemAvailable:
          type: boolean
        ItemOpticalValuesFlag:
          type: boolean
        ItemDiscountableFlag:
          type: boolean
        ItemCustOrderDiscLevel:
          type: string
        itemMarketingGender:
          type: string
        ItemMarketingSegment:
          type: string
        ItemOrderLeadTime:
          type: number
        ItemOrderLeadTimeUnitType:
          type: string
        ItemSupplierPath:
          type: string
        ItemSupplierID:
          type: string
        ItemSupplierName:
          type: string
        ItemSupplierItemID:
          type: string
        ItemEANUCCNumber:
          type: string
        ItemCaseEANUCCNumber:
          type: string
        ItemSerialNumber:
          type: string
        VariantID:
          type: string
        tt_ItemDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemDescriptions'
        tt_ItemPrice:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemPrice'
        tt_ItemStyles:
          type: array
          items:
            $ref: '#/components/schemas/tt_ItemStyles'
        tt_AdditionalItemID:
          type: array
          items:
            $ref: '#/components/schemas/tt_AdditionalItemID'
    tt_ItemDescriptions:
      description: object for defining different descriptiod data like retaildescriptions
      type: object
      properties:
        ItemID:
          type: string
          description: Unique Nav Item code 
        DescLanguageCode:
          type: string                                  
        DescType:
          type: string    
          description: define what kind of description
        DescDescription:
          type: string
          description: actual data/value of description 
        DescDescSearch:
          type: string
        DescName:
          type: string
        DescShortName:              
          type: string         
        DescBrandName:
          type: string
    tt_CLensItem:
      type: object
      properties:
        ItemID:
          type: string                      
          description: Unique Nav Item code 
        CLensDisposable:
            type: boolean
        ClensPowerType:
            type: string
        ClensPowerTypeFin:              
          type: string
        ClensMatType:              
          type: string
        ClensMatTypeFin:              
          type: string        
        ClensTextureType:              
          type: string       
        cLensUsage:              
          type: string             
        cLensColourDesc:              
          type: string        
        cLensColourName:              
          type: string        
        cLensColourCode:              
          type: string        
        cLensCoatingCode:              
          type: string       
        ClensMatName:              
          type: string           
        ClensMatDesc:              
          type: string           
        ClensMatCode:              
          type: string           
        ClensMatRefractIndex: 
          type: number
        ClensMatDensity:
          type: number        
        ClensMatAbbeNumber:
          type: number
        ClensMinThickness:
          type: number
        ClensEdgeThickness:
          type: number
        ClensUVABlocking:
          type: number
        ClensUVBBlocking:
          type: number       
        cLensDesifectionDesc1:
          type: string
        cLensDesifectionDesc2:
          type: string
        cLensWearing:
          type: string
        cLensNumOfNights:
          type: integer
        cLensWearingPattern:
          type: string
        cLensStabilmethod:
          type: string
        cLensReplaceUnitType:
          type: string
        cLensReplaceUnitValue:
          type: number
        cLensACLMGroup:
          type: string
        cLensIonic:
          type: boolean
        cLensWaterContent:
          type: number
        cLensCenterThicknessFrom:
          type: number
        CLensCenterThicknessStep:
          type: number
        CLensCenterThicknessTo:
          type: number
        CLensDiameterFrom:
          type: number
        CLensDiameteStep:
          type: number
        CLensDiameterTo:
          type: number
        CLensDiameterValues:
          type: string
        cLensBaseCurveFrom:
          type: number
        cLensBaseCurveStep:
          type: number
        cLensBaseCurveTo:
          type: number
        CLensBaseCurveValues:
          type: string
        cLensIrisSizeFrom: 
          type: number
        cLensIrisSizeStep:
          type: number
        cLensIrisSizeTo:
          type: number
        CLensIrisSizeValues:
          type: string
        cLensPupilSizeFrom:
          type: number
        cLensPupilSizeStep:
          type: number
        cLensPupilSizeTo:
          type: number
        CLensPupilSizeValues:
          type: string
        CLensOrigin:
          type: string
                        
    tt_ItemRangeAllowedInclude:
      type: object
      properties: 
        ItemID:
          type: string
          description: Unique Nav Item code 
        LTJMAT: 
          type: string
        LTJTYPE: 
          type: string
        AllowedType:
          type: string
        AllowedTypeCode:
          type: string
        RangeCode:
          type: string
        RangeIndex:
          type: string
        AllowedOptionType:
          type: string
        AllowedOptionCode:
          type: string
        AllowedOptionName:
          type: string
        AllowedOptionItem:
          type: string
    tt_ItemPrice:
      type: object
      additionalProperties: false
      properties:
        ItemID: 
          type: string
          description: Unique Nav Item code 
        PriceGroup: 
          type: string
          description: > 
            used in pricing with myymala priceGoup value 
        PriceStartDate:
          type: string 
          format: date
        PriceEndDate:
          type: string 
          format: date
        RangeCode:
          description: > 
            Range code, if range based pricing is used (ranges are based on e.g different diameter)
          type: string
        RangeIndex:
          type: string
        RangevariantCode:
          type: string
        PhysicalDiameter:
          type: number
        OpticalDiameter:  
          type: number
        RangeCylinderGroup:
          type: number
        RangeSphereGroup:
          type: number
        RangePrismGroup:
          type: number
        Price:
          description: actual price value
          type: number
          minimum: 0
          maximum: 10000
        CurrencyCode:
          type: string
        QuantityCode:
          type: number
        PriceId:
          type: string
    tt_AdditionalItemID:
      description: > 
        Additional ItemCodes/Itemd ID's for product. Additional code type is defined in ItemIdType e.g. "EAN" = EAn code, "KANTA" = Kela's official codes etc.
      type: object
      properties: 
        ItemID:
          type: string
          description: Unique Nav Item code 
        ItemIdType:
          description: defines additional code types, EAN
          type: string
          enum: ["EAN","KANTA","DisplayCode"]
        AdditionalItemID:
          description: actual value of additional code
          type: string
        AdditionalItemIDName:          
          type: string              
    tt_ItemStyles: 
      type: object
      description: If only StyleCode=Starndard object no colors are available
      properties:  
        ItemID:
          type: string
          description: Unique Nav Item code 
        StyleTypeCode:
          type: string
        StyleCode:
          type: string
          description: >
            Define if CL has available colors
            Standard=Empty code (No color code)
            e.g. "StyleCode": "TUQ" - TUQ is Link to color item code (ItemPropertiesLTJMAT)
        StyleDesc:
          type: string
          description: plain description for color e.g  Aqua 
        ItemSupplierItemID:
          type: string
          description: Suplier Itemcode for color used in ordering
    dsProductGroup:
      type: object
      properties:
        dsProductGroup:
          properties:
            ttCategoryGroup:
              $ref: '#/components/schemas/ttCategoryGroupArray'
            ttProductGroup:
              $ref: '#/components/schemas/ttProductGroupArray'
    ttCategoryGroup:
      type: object
      properties:
        ttCategoryGroup:
          $ref: '#/components/schemas/ttCategoryGroupArray'
    ttCategoryGroupArray:
      type: array
      items:
        $ref: '#/components/schemas/ttCategoryGroupItem'
    ttCategoryGroupItem:
      type: object
      properties:
        ItemProductGategoryCode:
          type: string
        ItemProductGategoryName:
          type: string
        ItemProductGategoryNameEng:
          type: string
    ttProductGroup:
      type: object
      properties:
        ttProductGroup:
          $ref: '#/components/schemas/ttProductGroupArray'
    ttProductGroupArray:
      type: array
      items:
        $ref: '#/components/schemas/ttProductGroupItem'
    ttProductGroupItem:
      type: object
      properties:
        ItemProductGroupCode:
          type: string
        ItemProductGroupName:
          type: string
        ItemProductGroupNameEng:
          type: string
        ItemProductGategoryCode:
          type: string