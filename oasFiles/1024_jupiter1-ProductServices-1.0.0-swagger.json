{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "JobCode & Job Advertisement",
    "description" : "Creating jobcode, job advertisement, Candidate Management, video interview. To create jobcode or jobad booking is required. Depends on booking services.",
    "termsOfService" : "https://metru.de/terms-and-conditions",
    "contact" : {
      "name" : "Jupiter Barua",
      "email" : "j.barua@metru.io"
    },
    "license" : {
      "name" : "Metru GMBH"
    }
  },
  "servers" : [ {
    "url" : "http://api.metru.at",
    "description" : "Staging Server"
  }, {
    "url" : "https://metru.de",
    "description" : "Production Server"
  } ],
  "paths" : {
    "/v1/jobcode/create" : {
      "post" : {
        "summary" : "This path for creating a jobcode and publish that. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jobcode"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include created jobcode information with questions & company information."
          }
        }
      }
    },
    "/v1/jobcode/upload" : {
      "post" : {
        "summary" : "This path is for uploading video questions. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/VideoQuestion"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include question information."
          }
        }
      }
    },
    "/v1/jobcode/removevideo" : {
      "post" : {
        "summary" : "This path is for removing video questions. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VideoQuestion"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Removed."
          }
        }
      }
    },
    "/v1/jobcode/update" : {
      "post" : {
        "summary" : "This path for updating a jobcode and publish that. Published jobcode also can be updated. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jobcode"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include updated jobcode information with questions & company information."
          }
        }
      }
    },
    "/v1/jobcode/deletequestion" : {
      "post" : {
        "summary" : "This path for deleting question(both video & text by question number). Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/DeleteQuestion"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Removed."
          }
        }
      }
    },
    "/v1/jobcode/publish" : {
      "post" : {
        "summary" : "To publish a created jobcode, this endpoint should be called. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/publish"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Jobcode information will be returned."
          }
        }
      }
    },
    "/v1/jobcode/onboarding/uploadvideo" : {
      "post" : {
        "summary" : "This path is for uploading onboarding video. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadOnboarding"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include question information."
          }
        }
      }
    },
    "/v1/jobcode/onboarding/removevideo" : {
      "post" : {
        "summary" : "This path is for removing onboarding video as endpoint name seems. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Please exclude videofile when sending the request body from the schema.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadOnboarding"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Removed."
          }
        }
      }
    },
    "/v1/jobcode/getbybookingid" : {
      "get" : {
        "summary" : "To get a prticular jobcode information by booking id. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "query",
          "description" : "Booking id of the jobcode.",
          "example" : 1024,
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response will have a parent array and 5 nested array. Parent array will contain jobcode information. Nested arrays are questions, company, Booking, RecruiterInfo, scannedList respectively. Recruiter info might have child array as well. If response returns empty array then jobcode is not created yet.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/jobcode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobcode/listactiveproduct" : {
      "get" : {
        "summary" : "To list all booked but not active/published jobcode & jobad according to company recruiter. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "This response will have a parent array and 2 nested array. Parent array will contain booking information. Nested arrays are JobCode & JobAd respectively. if both nested arrays are empty then that particular booking is not edited yet and depending that icon will be shown in the frontend."
          }
        }
      }
    },
    "/v1/jobcode/listinactive" : {
      "get" : {
        "summary" : "To list all booked active/published jobcode & jobad according to company recruiter. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "This response will have a parent array and 2 nested array. Parent array will contain booking information. Nested arrays are JobCode & JobAd respectively. if both nested arrays are empty then that particular booking is not edited yet and depending that icon will be shown in the frontend."
          }
        }
      }
    },
    "/v1/jobcode/listexpiredproduct" : {
      "get" : {
        "summary" : "To list all booked active/published expired jobcode & jobad according to company recruiter. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "This response will have a parent array and 2 nested array. Parent array will contain booking information. Nested arrays are JobCode & JobAd respectively. if both nested arrays are empty then that particular booking is not edited yet and depending that icon will be shown in the frontend."
          }
        }
      }
    },
    "/v1/jobcode/bybookingid/appliedlist" : {
      "get" : {
        "summary" : "To get a prticular jobcode applied candidate list. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "bookingid",
          "in" : "query",
          "description" : "Booking id of the jobcode.",
          "example" : 1024,
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "companyid",
          "in" : "query",
          "description" : "Company id",
          "example" : "5a2a9623813fd478873fd478",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response will include video interview list with candidate information of json array."
          }
        }
      }
    },
    "/v1/jobcode/bybookingid/appliedcandidate/comments" : {
      "get" : {
        "summary" : "To get a prticular jobcode information by booking id. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "bookingid",
          "in" : "query",
          "description" : "Booking id of the jobcode.",
          "example" : 1024,
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "companyid",
          "in" : "query",
          "description" : "Company id",
          "example" : "5a2a9623813fd478873fd478",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "candidateemail",
          "in" : "query",
          "description" : "Candidate email",
          "example" : "j@gmail.com",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response will include candidate wise comments list including recruirter information of json array."
          }
        }
      }
    },
    "/v1/jobcode/appliedcandidate/comments" : {
      "post" : {
        "summary" : "To post comments & ratings. Only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "comments", "bookingId", "companyId", "candidateEmail", "recruiterEmail", "rating" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "not required in request body"
                  },
                  "jobCodeId" : {
                    "type" : "string",
                    "description" : "id of the jobcode.jobCodeId can be found in /v1/jobcode/bybookingid/appliedlist api response. if product type only jobcode."
                  },
                  "jobAdId" : {
                    "type" : "string",
                    "description" : "id of the jobad.jobadId can be found in /v1/jobcode/bybookingid/appliedlist api response.Mandatory if product type only jobad."
                  },
                  "companyId" : {
                    "type" : "string"
                  },
                  "bookingId" : {
                    "type" : "number"
                  },
                  "candidateEmail" : {
                    "type" : "string"
                  },
                  "recruiterEmail" : {
                    "type" : "string"
                  },
                  "comments" : {
                    "type" : "string"
                  },
                  "rating" : {
                    "type" : "string",
                    "description" : "defalut value is 0 and can be 1 to 5. if a recruiter rate a candidate more than once then latest will be counted for average and previous rating will become 0."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Response body will include comments information."
          }
        }
      }
    },
    "/v2/jobad/create/generalinformation" : {
      "post" : {
        "summary" : "To create jobad information. Only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Please go through schema $ref all properties what to send in the request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jobad"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Response body will include created jobcode information."
          }
        }
      }
    },
    "/v2/jobad/update/generalinformation" : {
      "post" : {
        "summary" : "To update jobad information. Only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Please go through schema $ref all properties what to send in the request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jobad"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Response body will include modified jobcode information."
          }
        }
      }
    },
    "/v2/jobad/add/recruiter" : {
      "post" : {
        "summary" : "To add a recruiter information for already created jobad information. Only accessible by recruiter. To add recruiter a valid jobad must exist.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Please go through schema $ref/properties all properties what to send in the request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478",
                    "description" : "mandatory."
                  },
                  "bookingId" : {
                    "type" : "string",
                    "example" : 1003,
                    "description" : "mandatory."
                  },
                  "recruiterEmail" : {
                    "type" : "string",
                    "example" : "j@gmail.com",
                    "description" : "mandatory. User should be able to select email id from drop down list. To get recruiter list /v1/registration/recruiter/list api call is required."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Response body will include modified jobcode information."
          }
        }
      }
    },
    "/v2/jobad/remove/recruiter" : {
      "post" : {
        "summary" : "To remove a recruiter information for already created jobad information. Only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "description" : "Please go through schema $ref/properties all properties what to send in the request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478",
                    "description" : "mandatory."
                  },
                  "bookingId" : {
                    "type" : "string",
                    "example" : 1003,
                    "description" : "mandatory."
                  },
                  "recruiterEmail" : {
                    "type" : "string",
                    "example" : "j@gmail.com",
                    "description" : "mandatory. User will be able to remove one recruiter at a time."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Response body will include modified jobcode information."
          }
        }
      }
    },
    "/v2/jobad/uploadvideo" : {
      "post" : {
        "summary" : "To upload video for jobad. Can only be accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  },
                  "videoFile" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/deletevideo" : {
      "post" : {
        "summary" : "To remove video from jobad. only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/add/tags" : {
      "post" : {
        "summary" : "To add tags. Svaed jobad must exist for booking id to add tags.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  },
                  "tags" : {
                    "type" : "string",
                    "example" : "anything"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/remove/tags" : {
      "post" : {
        "summary" : "To remove tags.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  },
                  "tags" : {
                    "type" : "string",
                    "example" : "anything"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/uploadthumbnail" : {
      "post" : {
        "summary" : "To upload thumbnail for jobad. Can only be accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  },
                  "imageFile" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/deletethumbnail" : {
      "post" : {
        "summary" : "To remove thumbnail from jobad. only accessible by recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "companyId" : {
                    "type" : "string",
                    "example" : "5a2a9623813fd478873fd478"
                  },
                  "bookingId" : {
                    "type" : "number",
                    "example" : 1005
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Responses will include that particular jobad information."
          }
        }
      }
    },
    "/v2/jobad/publish" : {
      "post" : {
        "summary" : "To publish a created jobad, this endpoint should be called. Only accessible to recruiter.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/publish"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok. Jobad information will be returned."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "jobcode" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "example" : "5ca52986133fcef1e1d2ff8e",
            "description" : "This id is retruned after successful api call. It is mongodb Object id will be jobcode id as well. Not required in request body while creating.And during update should be send as \"id\"."
          },
          "jobcode_title" : {
            "type" : "string",
            "example" : "New HR",
            "description" : "Title of the jobcode. if a product is connected (Same booking id has jobcode & job ad) then job ad & jobcode both will have same title. if title is updated for jobcode then it will also be updated for jobad aswell."
          },
          "qr_code" : {
            "type" : "string",
            "description" : "Genrated by api. Link for qrcode."
          },
          "activ" : {
            "type" : "boolean",
            "description" : "This flag identifies jobcode is published or not. If true then jobcode already published."
          },
          "created_at" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "Date & time of the jobcode creation. Generated by api."
          },
          "createdBy" : {
            "type" : "string",
            "description" : "Logged in user email should be sent in the request body and it is mandatory."
          },
          "updated_at" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "Date & time of jobcode modification."
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "Logged in user email should be sent."
          },
          "bookingId" : {
            "type" : "number",
            "description" : "Booking id iscreated when any copmany booked a product on metru. At present booking is created by admin. Booking id is unique and a jobcode will have a booking id. A booking id can have only single jobcode & jobad."
          },
          "companyId" : {
            "type" : "string",
            "description" : "Each company will have a unique id, which is mongodb object id. In request body only alphanumeric part should be sent as string."
          },
          "publishDate" : {
            "type" : "string",
            "description" : "Date & time of jobcode publish."
          },
          "runtime" : {
            "type" : "number",
            "description" : "Rumtime is provided during booking. Api will retrive this value from booking. No need to include in request body."
          },
          "qr_count" : {
            "type" : "number",
            "description" : "This value will be updated by api each time a jobcode qr code is accessed by any user."
          },
          "candidate_count" : {
            "type" : "number",
            "description" : "This value will be updated by api each time a candidate applies for the jobcode."
          },
          "expired" : {
            "type" : "boolean",
            "description" : "When a jobcode is created this flag value will be initially false. And this value will be updated by an internal process."
          },
          "proType" : {
            "type" : "string",
            "description" : "This vaule will be inserted by api. value is \"Jobcode\" and fixed."
          },
          "expiredDate" : {
            "type" : "string",
            "description" : "Expriration date & time. If jobcode is not expired this filed value will be same as craeted_at value. During process for expiry falg this value will be updated if the expired flag become true."
          },
          "archived" : {
            "type" : "boolean",
            "description" : "This value will be initially false. Archive feature not yet implemented."
          },
          "mergingOption" : {
            "type" : "string",
            "default" : "“no-merge”, “merge-text”, “merge-video”",
            "description" : "value will be either \"no-merge\" or \"merge-text\" or \"merge-video\""
          },
          "jobCodeDepartment" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of string. In the ui this values will be listed and user can select multiple values and send as array string in the request body."
            }
          },
          "onBoardingTitle" : {
            "type" : "string",
            "description" : "Onbording title has to be inputed by user."
          },
          "onBoardingDescription" : {
            "type" : "string",
            "description" : "On boarding description"
          },
          "onBoardingVideoLink" : {
            "type" : "string",
            "description" : "link of the video."
          },
          "webexRooms" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "roomId" : {
                  "type" : "string"
                },
                "roomTitle" : {
                  "type" : "string"
                }
              }
            },
            "description" : "User has to select room title from drop down list."
          },
          "allowAttempts" : {
            "type" : "number",
            "default" : 0,
            "description" : "0 - No restart Option, 1- 1 restart, 2 - 2 restarts, 3 - Endless restarts"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Question"
            }
          }
        },
        "required" : [ "companyId", "bookingId", "createdBy" ]
      },
      "Question" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "This id is retruned after successful api call. It is mongodb Object id but returned as string."
          },
          "question_no" : {
            "type" : "number",
            "description" : "Question number. Should be unique."
          },
          "question_text" : {
            "type" : "string",
            "description" : "Question text."
          },
          "question_text_path" : {
            "type" : "string",
            "description" : "Video url if question text video is created and will be created by api."
          },
          "video_path" : {
            "type" : "string",
            "description" : "Video question url if video question is uploaded."
          },
          "questionViewTime" : {
            "type" : "number",
            "description" : "Time in seconds for viewing the question"
          },
          "questionAnswerTime" : {
            "type" : "string",
            "description" : "Time in seconds for answering the question"
          },
          "numberOfRedo" : {
            "type" : "number",
            "default" : 1,
            "description" : "How many times a candidate can try for the question answer."
          }
        }
      },
      "VideoQuestion" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Each company will have a unique id, which is mongodb object id. In request body only alphanumeric part should be sent as string."
          },
          "bookingId" : {
            "type" : "number",
            "description" : "Booking id iscreated when any copmany booked a product on metru. At present booking is created by admin. Booking id is unique and a jobcode will have a booking id. A booking id can have only single jobcode & jobad."
          },
          "videoFile" : {
            "type" : "string",
            "format" : "binary",
            "description" : "Video file to be uploaded."
          },
          "quesNo" : {
            "type" : "number",
            "description" : "Question number. Should be unique."
          }
        }
      },
      "DeleteQuestion" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Each company will have a unique id, which is mongodb object id. In request body only alphanumeric part should be sent as string."
          },
          "bookingId" : {
            "type" : "number",
            "description" : "Booking id iscreated when any copmany booked a product on metru. At present booking is created by admin. Booking id is unique and a jobcode will have a booking id. A booking id can have only single jobcode & jobad."
          },
          "quesNo" : {
            "type" : "number",
            "description" : "Question number. Should be unique."
          }
        }
      },
      "publish" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "This id is mongodb Object id which is the id of that jobcode or jobad."
          },
          "companyId" : {
            "type" : "string",
            "description" : "Each company will have a unique id, which is mongodb object id. In request body only alphanumeric part should be sent as string."
          },
          "bookingId" : {
            "type" : "number",
            "description" : "Booking id iscreated when any copmany booked a product on metru. At present booking is created by admin. Booking id is unique and a jobcode will have a booking id. A booking id can have only single jobcode & jobad."
          },
          "createdBy" : {
            "type" : "string",
            "description" : "Logged in user email should be sent in the request body and it is mandatory for jobcode but not required for jobad."
          }
        }
      },
      "UploadOnboarding" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Each company will have a unique id, which is mongodb object id. In request body only alphanumeric part should be sent as string."
          },
          "bookingId" : {
            "type" : "number",
            "description" : "Booking id iscreated when any copmany booked a product on metru. At present booking is created by admin. Booking id is unique and a jobcode will have a booking id. A booking id can have only single jobcode & jobad."
          },
          "videoFile" : {
            "type" : "string",
            "format" : "binary",
            "description" : "Video file to be uploaded."
          }
        }
      },
      "jobad" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "This id is retruned after successful api call. It is mongodb Object id will be jobcode id as well."
          },
          "jobTitle" : {
            "type" : "string",
            "description" : "Title of the job advertisement. if a product is connected (Same booking id has jobcode & job ad) then job ad & jobcode both will have same title. if title is updated for jobad then it will also be updated for jobcode aswell."
          },
          "salary" : {
            "type" : "number"
          },
          "salaryType" : {
            "type" : "string"
          },
          "careerStage" : {
            "type" : "string"
          },
          "employmentType" : {
            "type" : "string"
          },
          "graduationType" : {
            "type" : "string"
          },
          "jobLocation" : {
            "type" : "string"
          },
          "businessType" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of string. In the ui this values will be listed and user can select multiple values and send as array string in the request body."
            }
          },
          "fieldOfActivity" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of string. In the ui this values will be listed and user can select multiple values and send as array string in the request body."
            }
          },
          "uploadedVideoLink" : {
            "type" : "string"
          },
          "otherVideoURL" : {
            "type" : "string"
          },
          "linkCompanyProfileVideo" : {
            "type" : "string"
          },
          "taskDescription" : {
            "type" : "string"
          },
          "requiredQualification" : {
            "type" : "string"
          },
          "employeeBenefits" : {
            "type" : "string"
          },
          "jobReelLink" : {
            "type" : "string"
          },
          "thumbNailLink" : {
            "type" : "string"
          },
          "businessInfoToCandidate" : {
            "type" : "string"
          },
          "recruitersList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RecruiterDetails"
            },
            "description" : "Not required to send with the request body. To add employee seperate api exist."
          },
          "website" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of string."
            }
          },
          "internalReference" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "description" : "id of the company."
          },
          "companyName" : {
            "type" : "string"
          },
          "bookingId" : {
            "type" : "number"
          },
          "activ" : {
            "type" : "boolean"
          },
          "expired" : {
            "type" : "boolean"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "Logged in user email should be sent in the request body and it is mandatory."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "Date & time of the jobad creation. Generated by api."
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "Logged in user email should be sent."
          },
          "updatedDate" : {
            "type" : "string",
            "description" : "Date & time of jobad modification."
          },
          "publishDate" : {
            "type" : "string",
            "description" : "Date & time of jobad modification."
          },
          "expiredDate" : {
            "type" : "string",
            "description" : "Expiry Date & time of jobad."
          },
          "archived" : {
            "type" : "boolean"
          },
          "jobAdViewCount" : {
            "type" : "number",
            "description" : "This is counter field. Each time a jobad accessed for view value will be increased by one."
          },
          "position" : {
            "type" : "string"
          },
          "candidate_count" : {
            "type" : "number",
            "description" : "This value will be updated by api each time a candidate applies for the jobad."
          },
          "markedCandidateEmail" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of candidate email id."
            }
          },
          "appliedCandidateEmail" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of applied candidate email id."
            }
          },
          "previewImages" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of image link."
            }
          },
          "jobAdDepartment" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "array of jobad department."
            }
          }
        },
        "required" : [ "companyId", "bookingId" ]
      },
      "RecruiterDetails" : {
        "type" : "object",
        "properties" : {
          "recFirstName" : {
            "type" : "string"
          },
          "recLastName" : {
            "type" : "string"
          },
          "recruiterRole" : {
            "type" : "string"
          },
          "recruiterEmail" : {
            "type" : "string"
          },
          "recruiterProfilePic" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "token"
      }
    }
  }
}