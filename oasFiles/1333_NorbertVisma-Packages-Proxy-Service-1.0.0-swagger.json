{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Service for user and package management.\n",
    "version" : "1.0.0",
    "title" : "Packages Proxy Service"
  },
  "servers" : [ {
    "url" : "packages.trollweb.no"
  } ],
  "tags" : [ {
    "name" : "users",
    "description" : "User operations"
  }, {
    "name" : "packages",
    "description" : "Packages operations"
  }, {
    "name" : "webhook",
    "description" : "Webhook operations"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get all users",
        "operationId" : "getAllUsers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Add a new user",
        "operationId" : "addUser",
        "responses" : {
          "201" : {
            "description" : "Created Succesfully"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserCreate"
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find user by id",
        "description" : "Returns single user with id specified",
        "operationId" : "findUserById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successfull operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                },
                "example" : {
                  "id" : "User1234",
                  "username" : "username",
                  "packages" : [ "Package-1234", "Package-2345" ]
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update an existing user",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User updated"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserUpdate"
        }
      },
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Delete an existing user",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted"
          }
        }
      }
    },
    "/packages" : {
      "get" : {
        "tags" : [ "packages" ],
        "summary" : "Get all packages",
        "operationId" : "getAllPackages",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Package"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "packages" ],
        "summary" : "Add a new package",
        "operationId" : "addPackage",
        "responses" : {
          "201" : {
            "description" : "Package created"
          },
          "400" : {
            "description" : "Bad request"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PackageCreate"
        }
      }
    },
    "/packages/{packageId}" : {
      "get" : {
        "tags" : [ "packages" ],
        "summary" : "Find package by id",
        "description" : "Returns single user with id specified",
        "operationId" : "findPackageById",
        "parameters" : [ {
          "name" : "packageId",
          "in" : "path",
          "description" : "ID of package to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Package"
                },
                "example" : {
                  "id" : "Package-1234",
                  "name" : "vendor/name",
                  "url" : "https://bitbucker.org/owner/repoName.git"
                }
              }
            }
          },
          "404" : {
            "description" : "Package not found"
          }
        }
      },
      "put" : {
        "tags" : [ "packages" ],
        "summary" : "Update an existing package",
        "operationId" : "updatePackage",
        "parameters" : [ {
          "name" : "packageId",
          "in" : "path",
          "description" : "ID of package to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Package updated"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Package not found"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PackageUpdate"
        }
      },
      "delete" : {
        "tags" : [ "packages" ],
        "summary" : "Delete an existing package",
        "operationId" : "deletePackage",
        "parameters" : [ {
          "name" : "packageId",
          "in" : "path",
          "description" : "ID of package to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      }
    },
    "/packages.json" : {
      "get" : {
        "tags" : [ "packages" ],
        "summary" : "Returns user specific packages.json file",
        "operationId" : "getPackagesJson",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/webhook/build" : {
      "post" : {
        "tags" : [ "webhook" ],
        "summary" : "Build a repository with webhook data",
        "operationId" : "buildWebhook",
        "responses" : {
          "200" : {
            "description" : "Build succesfully queued"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Webhook"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserCreate" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "required" : [ "username", "password" ]
      },
      "UserUpdate" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "packages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "packages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PackagesArray"
            }
          }
        }
      },
      "PackagesArray" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        }
      },
      "Package" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "PackageCreate" : {
        "type" : "object",
        "properties" : {
          "repoUrl" : {
            "type" : "string"
          }
        },
        "required" : [ "repoUrl" ]
      },
      "PackageUpdate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "Webhook" : {
        "type" : "object",
        "properties" : {
          "repository" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PackagesArray"
            }
          }
        }
      }
    },
    "requestBodies" : {
      "UserCreate" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserCreate"
            },
            "example" : {
              "username" : "Username",
              "password" : "password123"
            }
          }
        },
        "description" : "User object that needs to be added",
        "required" : true
      },
      "UserUpdate" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserUpdate"
            },
            "example" : {
              "username" : "Username",
              "password" : "password123",
              "packages" : [ "Package-1234", "Package-2345" ]
            }
          }
        },
        "description" : "User object that needs to be updated",
        "required" : true
      },
      "UserArray" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      },
      "User" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/User"
            },
            "example" : {
              "id" : "User-1234",
              "username" : "Username",
              "password" : "password123",
              "packages" : [ "Package-1234", "Package-2345" ]
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      },
      "PackageCreate" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PackageCreate"
            },
            "example" : {
              "repoUrl" : "Https://bitbucket.org/owner/repoName.git"
            }
          }
        },
        "description" : "Package object that needs to be added",
        "required" : true
      },
      "PackageUpdate" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PackageUpdate"
            },
            "example" : {
              "id" : "Package-1234",
              "name" : "vendor/name",
              "url" : "https://bitbucker.org/owner/repoName.git"
            }
          }
        },
        "description" : "User object that needs to be updated",
        "required" : true
      },
      "Webhook" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Webhook"
            },
            "example" : {
              "repository" : {
                "links" : {
                  "html" : {
                    "href" : "https://bitbucker.org/owner/repoName"
                  }
                }
              }
            }
          }
        },
        "description" : "User object that needs to be updated",
        "required" : true
      }
    },
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}