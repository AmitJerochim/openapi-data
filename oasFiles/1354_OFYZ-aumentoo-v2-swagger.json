{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "aumentoo API",
    "description" : "All requests except /ping & /login need an `Authorization: Bearer <session>` header<br><br>\nAny request can response with following status code's:<br><br>\n<b>200 OK:</b><br> - General success status code. The body can be empty or have an JSON body with `application/json` as Content-Type.<br> <b>400 Bad Request:</b><br> - General error for when fulfilling the request would cause an invalid state. Missing or invalid data, etc.<br> <b>401 Unauthorized:</b><br> - Error code response for missing or invalid authentication token.<br> <b>403 Forbidden:</b><br> - Error code for when the user is not authorized to perform the operation. (e.g. user is missing permission, etc.).<br> <b>404 Not Found:</b><br> - Used when the requested resource is not found.<br> <b>405 Method Not Allowed:</b><br> - Used to indicate that the requested URL exists, but the requested HTTP method is not applicable.<br> <b>500 Internal Server Error:</b><br> - Used to indicate that the error was server-side. Try again later.\n",
    "version" : "v2"
  },
  "servers" : [ {
    "url" : "https://dev.aumentoo.cloud/api/v2"
  } ],
  "paths" : {
    "/api/v2/ping" : {
      "get" : {
        "description" : "Pings the aumentoo-API server",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/login" : {
      "post" : {
        "description" : "Authenticates the user and returns a new session",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string"
                  },
                  "Password" : {
                    "type" : "string"
                  },
                  "CompanyID" : {
                    "type" : "number"
                  }
                },
                "required" : [ "Email", "Password" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "session" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Company Selection Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "LastSeen" : {
                            "type" : "string"
                          },
                          "Access" : {
                            "type" : "boolean",
                            "description" : "Tells if the password entered will match with the user account of this company. `false` will require to enter the correct password after selection."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/logout" : {
      "post" : {
        "description" : "Removes the current active session, makes any further requests invalid",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/forgot-password" : {
      "post" : {
        "description" : "Check given mail and send verification code if existing user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Email" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/verification-code" : {
      "post" : {
        "description" : "Check verification code",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "VerifyCode" : {
                    "type" : "string"
                  }
                },
                "required" : [ "VerifyCode" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "LastSeen" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/set-password" : {
      "post" : {
        "description" : "Check and set new password for user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewPassword" : {
                    "type" : "string"
                  },
                  "Validation" : {
                    "type" : "string"
                  },
                  "CompanyID" : {
                    "type" : "number"
                  }
                },
                "required" : [ "NewPassword", "Validation" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/activities" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "description" : "URL-Encoded JSON String.<br> For more information visit: <a href=\"https://aumentoo.atlassian.net/wiki/spaces/NE/pages/635666435/Filter+Sort+Pagination+-+Portfolio\">Filter, Sort & Pagination - Portfolio</a>\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=CreatedDate.desc,Name<br><br> Will sort first descending by CreatedDate and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "ID", "Name", "Responsible", "Status" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "description" : "Receives a list of all profile activities. The objects returned in the array will contain specific properties depending on the activity type. The properties listed here are those which are independent from the activity type.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer"
                        },
                        "Type" : {
                          "type" : "string"
                        },
                        "CreatedDate" : {
                          "type" : "string"
                        },
                        "LastModifiedDate" : {
                          "type" : "string"
                        },
                        "User" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            },
                            "Name" : {
                              "type" : "string"
                            },
                            "Avatar" : {
                              "type" : "string"
                            }
                          }
                        },
                        "Profile" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            },
                            "Name" : {
                              "type" : "string"
                            },
                            "Logo" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/branding" : {
      "get" : {
        "description" : "Retrieve branding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "PrimaryColor" : {
                          "type" : "string"
                        },
                        "ChartsColor" : {
                          "type" : "string"
                        },
                        "LogoDashboard" : {
                          "type" : "string"
                        },
                        "LogoSidebar" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings" : {
      "get" : {
        "description" : "Retrieves all company settings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Company" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            },
                            "Name" : {
                              "type" : "string"
                            },
                            "ShortName" : {
                              "type" : "string"
                            },
                            "ApplicationName" : {
                              "type" : "string"
                            },
                            "isFormsEnabled" : {
                              "type" : "boolean"
                            },
                            "isActivitiesEnabled" : {
                              "type" : "boolean"
                            },
                            "isRequestManagementEnabled" : {
                              "type" : "boolean"
                            },
                            "isRegistrationsEnabled" : {
                              "type" : "boolean"
                            },
                            "isProfileArchiveEnabled" : {
                              "type" : "boolean"
                            },
                            "ClassificationsLimit" : {
                              "type" : "integer",
                              "nullable" : true
                            }
                          }
                        },
                        "Departments" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Department"
                          }
                        },
                        "Inputs" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Input"
                          }
                        },
                        "LegalForms" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/LegalForm"
                          }
                        },
                        "ServiceDesk" : {
                          "$ref" : "#/components/schemas/ServiceDesk"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/countries" : {
      "get" : {
        "description" : "Retrieves all countries",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Code" : {
                            "type" : "string"
                          },
                          "EnglishName" : {
                            "type" : "string"
                          },
                          "GermanName" : {
                            "type" : "string"
                          },
                          "NativeName" : {
                            "type" : "string"
                          },
                          "Region" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/currencies" : {
      "get" : {
        "description" : "Retrieves all currencies",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Code" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Symbol" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/departments" : {
      "get" : {
        "description" : "Retrieves all company departments",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Department"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/inputs" : {
      "get" : {
        "description" : "Retrieves all company inputs",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Input"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/legal-forms" : {
      "get" : {
        "description" : "Retrieves all company legal forms",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/LegalForm"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/companies/settings/service-desk" : {
      "get" : {
        "description" : "Retrieves the company service desk",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/ServiceDesk"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/active-profiles" : {
      "get" : {
        "description" : "Retrieves the latest 5 active profiles",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer"
                        },
                        "ActivityType" : {
                          "type" : "string"
                        },
                        "CreatedDate" : {
                          "type" : "string"
                        },
                        "Profile" : {
                          "$ref" : "#/components/schemas/ProfileSimple"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/classification-cluster" : {
      "get" : {
        "description" : "Format for Highcharts!<br> Returns the count of Profiles per Classification.<br><br> There are always two types of objects which are needed together, one object with parent,name and value and the other object with id,name and color. <br> The different objects are normally on one level. <br> The response can set for highcharts series",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "anyOf" : [ {
                          "type" : "object",
                          "properties" : {
                            "parent" : {
                              "type" : "string"
                            },
                            "name" : {
                              "type" : "string"
                            },
                            "value" : {
                              "type" : "integer"
                            }
                          }
                        }, {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "string"
                            },
                            "name" : {
                              "type" : "string"
                            },
                            "color" : {
                              "type" : "string"
                            }
                          }
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/completed-tasks" : {
      "get" : {
        "description" : "Returns the count of completed and total Tasks for the current user",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "TotalTaks" : {
                          "type" : "integer"
                        },
                        "CompletedTasks" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/geo-profile-distribution" : {
      "get" : {
        "description" : "Format for Highcharts!<br> Returns the country codes with count of Profiles <br><br>code3 = Country Short Code, z = Count of Profiles <br> The response can set for highcharts series",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "properties" : {
                          "code3" : {
                            "type" : "string"
                          },
                          "z" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/my-likes" : {
      "get" : {
        "description" : "Returns all liked profiles of the current user",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "MyLikes" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ProfileSimple"
                          }
                        },
                        "MyLikesCount" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/my-profile-activities" : {
      "get" : {
        "description" : "Returns all profile-related activities (visits, changes, created vs. completed tasks, status changes and new profiles) of the current user",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Changes" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "NewActivities" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "NewProfiles" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "StatusChanges" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "CreatedTasks" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "CompletedTask" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        },
                        "Visits" : {
                          "type" : "object",
                          "properties" : {
                            "Count" : {
                              "type" : "integer"
                            },
                            "Number" : {
                              "type" : "string"
                            },
                            "Title" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/my-profiles" : {
      "get" : {
        "description" : "Returns all profiles for which the current user is responsible for",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "MyProfiles" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ProfileSimple"
                          }
                        },
                        "MyProfilesCount" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/my-requests" : {
      "get" : {
        "description" : "Returns max 5 requests for which the current user is responsible for",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "MyRequests" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Status" : {
                                "type" : "string"
                              }
                            }
                          }
                        },
                        "MyRequestsCount" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/selection-process" : {
      "get" : {
        "description" : "Returns the number of profiles per profile status",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "TotalProfileCount" : {
                          "type" : "integer"
                        },
                        "StatusProfileCounts" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "ProfileCount" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "ArchivedProfileCount" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/upcoming-meetings" : {
      "get" : {
        "description" : "Returns the next 5 upcoming meetings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Notes" : {
                            "type" : "string"
                          },
                          "WhenDate" : {
                            "type" : "string"
                          },
                          "Profile" : {
                            "$ref" : "#/components/schemas/ProfileSimple"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/user-statistics" : {
      "get" : {
        "description" : "Returns the current number of registered users and the total number of logins",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Name" : {
                            "type" : "string"
                          },
                          "Value" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/forms" : {
      "get" : {
        "description" : "Returns all forms",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Questions" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "ID" : {
                                      "type" : "integer"
                                    },
                                    "Question" : {
                                      "type" : "string"
                                    }
                                  }
                                }
                              },
                              "isInRegistration" : {
                                "type" : "boolean"
                              },
                              "isInTask" : {
                                "type" : "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "isActive" : {
                    "type" : "boolean"
                  },
                  "Questions" : {
                    "type" : "object",
                    "description" : "`Removed` needs always and only the ID of the respective object<br> `Changed` needs always ID of the respective object<br> `Added` needs always the full data of the respective object\n",
                    "properties" : {
                      "Removed" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            }
                          },
                          "required" : [ "ID" ]
                        }
                      },
                      "Changed" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            },
                            "Question" : {
                              "type" : "string"
                            }
                          }
                        }
                      },
                      "Added" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "Question" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "integer",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/forms/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Form ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Return form by id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Questions" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ID" : {
                                  "type" : "integer"
                                },
                                "Question" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Form ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a form.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "Questions" : {
                    "type" : "object",
                    "description" : "`Removed` needs always and only the ID of the respective object<br> `Changed` needs always ID of the respective object<br> `Added` needs always the full data of the respective object\n",
                    "properties" : {
                      "Removed" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            }
                          },
                          "required" : [ "ID" ]
                        }
                      },
                      "Changed" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "integer"
                            },
                            "Question" : {
                              "type" : "string"
                            }
                          }
                        }
                      },
                      "Added" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "Question" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Form ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a form.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "FirstName",
          "description" : "Filter by FirstName",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "LastName",
          "description" : "Filter by LastName",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Email",
          "description" : "Filter by Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name\n\nWill sort first descending by Date and than ascending by Name\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "ID", "CreatedDate", "FirstName", "LastName" ]
          }
        }, {
          "$ref" : "#/components/parameters/limitParam"
        } ],
        "description" : "Receives a list of all users",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "User ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Receives a user",
        "responses" : {
          "200" : {
            "description" : "User object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/registrations" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "Name", "Stage", "CreatedDate" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "description" : "Receives a list of external profile registrations",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Type" : {
                                "type" : "string"
                              },
                              "LastModifiedDate" : {
                                "type" : "string"
                              },
                              "LastModifiedDateReadable" : {
                                "type" : "string",
                                "description" : "The last modified date in readable format"
                              },
                              "Logo" : {
                                "type" : "string",
                                "description" : "URL to logo image"
                              },
                              "LogoDefault" : {
                                "type" : "string",
                                "description" : "Relative URL to default logo image"
                              },
                              "LegalForm" : {
                                "$ref" : "#/components/schemas/LegalForm"
                              },
                              "Stage" : {
                                "type" : "object",
                                "nullable" : true,
                                "properties" : {
                                  "ID" : {
                                    "type" : "number"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "Status" : {
                                "type" : "object",
                                "nullable" : true,
                                "properties" : {
                                  "ID" : {
                                    "type" : "number"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Pagination" : {
                          "type" : "object",
                          "properties" : {
                            "Page" : {
                              "type" : "integer"
                            },
                            "TotalPages" : {
                              "type" : "integer"
                            },
                            "StartRow" : {
                              "type" : "integer"
                            },
                            "EndRow" : {
                              "type" : "integer"
                            },
                            "TotalRows" : {
                              "type" : "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "Type",
          "description" : "Array of profile types",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "Name",
          "description" : "Query for a specific name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Inputs",
          "description" : "Array of company input ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Status",
          "description" : "Array of profile status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ScoutingStatus",
          "description" : "Array of profile scouting status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "BatchStatus",
          "description" : "Array of profile batch status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Keywords",
          "description" : "Array of keyword ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Classifications",
          "description" : "Array of classification ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Responsibles",
          "description" : "Array of responsible ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Country",
          "description" : "Array of country codes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "MyLikes",
          "description" : "Filter only profiles which user liked",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ActiveProfiles",
          "description" : "Switch to filter only active profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ArchivedProfiles",
          "description" : "Switch to filter only archived profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "DeletedProfiles",
          "description" : "Switch to filter only deleted profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "CellProfiles",
          "description" : "Array of profile ID's<br>When this is used, all other filters will be ignored.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ExcludeProfiles",
          "description" : "Array of profile ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "Name", "Status", "Stage", "Country", "Score", "LastModifiedDate" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "description" : "Receives a list of profiles",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "LastModifiedDateReadable" : {
                                "type" : "string",
                                "description" : "The last modified date in readable format"
                              },
                              "Type" : {
                                "$ref" : "#/components/schemas/ProfileType"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Logo" : {
                                "type" : "string",
                                "description" : "URL to logo image"
                              },
                              "LogoDefault" : {
                                "type" : "string",
                                "description" : "Relative URL to default logo image"
                              },
                              "LegalForm" : {
                                "$ref" : "#/components/schemas/LegalForm"
                              },
                              "Country" : {
                                "type" : "object",
                                "properties" : {
                                  "Code" : {
                                    "type" : "string"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "Status" : {
                                "type" : "object",
                                "nullable" : true,
                                "properties" : {
                                  "ID" : {
                                    "type" : "number"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "Stage" : {
                                "type" : "object",
                                "nullable" : true,
                                "description" : "Available only on type `COMPANY`",
                                "properties" : {
                                  "ID" : {
                                    "type" : "number"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "Score" : {
                                "type" : "number",
                                "description" : "Assessments Total-Score"
                              }
                            }
                          }
                        },
                        "Pagination" : {
                          "type" : "object",
                          "properties" : {
                            "Page" : {
                              "type" : "integer"
                            },
                            "TotalPages" : {
                              "type" : "integer"
                            },
                            "StartRow" : {
                              "type" : "integer"
                            },
                            "EndRow" : {
                              "type" : "integer"
                            },
                            "TotalRows" : {
                              "type" : "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new profile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer",
                          "description" : "LastInsertID"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/invitations" : {
      "post" : {
        "description" : "Send invitation for register new Profile to given email",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Email" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/grid" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "row",
          "description" : "Row of Grid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "CLASSIFICATION", "EBIT", "REVENUE", "TYPE", "STATUS", "BUSINESS_MODEL", "REVENUE_MODEL", "INDUSTRIES", "PRODUCTS", "SCOUTING_STATUS", "BATCH_STATUS" ]
          }
        }, {
          "in" : "query",
          "name" : "column",
          "description" : "Column of Grid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "CLASSIFICATION", "EBIT", "REVENUE", "TYPE", "STATUS", "BUSINESS_MODEL", "REVENUE_MODEL", "INDUSTRIES", "PRODUCTS", "SCOUTING_STATUS", "BATCH_STATUS" ]
          }
        }, {
          "in" : "query",
          "name" : "Type",
          "description" : "Array of profile types",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "Name",
          "description" : "Query for a specific name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Status",
          "description" : "Array of profile status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Keywords",
          "description" : "Array of keyword ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Classifications",
          "description" : "Array of classification ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Responsibles",
          "description" : "Array of responsible ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Industries",
          "description" : "Array of industries ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Products",
          "description" : "Array of products ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ScoutingStatus",
          "description" : "Array of scouting status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "BatchStatus",
          "description" : "Array of batch status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "MyLikes",
          "description" : "Filter only profiles which user liked",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ActiveProfiles",
          "description" : "Switch to filter only active profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ArchivedProfiles",
          "description" : "Switch to filter only to archived profiles",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "description" : "Returns all profile Grid Values <br><br> Don't set Parameter row and column the same enum! <br> Labels -> Rows is one of the object types - different per Parameter row <br> In response Rows is an array for each row and in this are arrays for every cell",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Labels" : {
                          "type" : "object",
                          "properties" : {
                            "Columns" : {
                              "type" : "array",
                              "items" : {
                                "anyOf" : [ {
                                  "type" : "object",
                                  "properties" : {
                                    "Type" : {
                                      "type" : "string"
                                    },
                                    "Name" : {
                                      "type" : "string"
                                    }
                                  }
                                }, {
                                  "type" : "object",
                                  "properties" : {
                                    "ID" : {
                                      "type" : "string"
                                    },
                                    "Name" : {
                                      "type" : "string"
                                    }
                                  }
                                }, {
                                  "type" : "object",
                                  "properties" : {
                                    "Name" : {
                                      "type" : "string"
                                    },
                                    "Min" : {
                                      "type" : "integer",
                                      "nullable" : true
                                    },
                                    "Max" : {
                                      "type" : "integer",
                                      "nullable" : true
                                    }
                                  }
                                } ]
                              }
                            },
                            "Rows" : {
                              "type" : "array",
                              "items" : {
                                "anyOf" : [ {
                                  "type" : "object",
                                  "properties" : {
                                    "Type" : {
                                      "type" : "string"
                                    },
                                    "Name" : {
                                      "type" : "string"
                                    }
                                  }
                                }, {
                                  "type" : "object",
                                  "properties" : {
                                    "Name" : {
                                      "type" : "string"
                                    }
                                  }
                                }, {
                                  "type" : "object",
                                  "properties" : {
                                    "ID" : {
                                      "type" : "integer"
                                    },
                                    "Name" : {
                                      "type" : "string"
                                    }
                                  }
                                } ]
                              }
                            }
                          }
                        },
                        "Rows" : {
                          "type" : "array",
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "array",
                              "items" : {
                                "type" : "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/export" : {
      "post" : {
        "description" : "Exports profiles of given Filter to Excel",
        "parameters" : [ {
          "in" : "query",
          "name" : "ExportSettings",
          "description" : "export all / current page",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "CURRENT_PAGE" ]
          }
        }, {
          "in" : "query",
          "name" : "Type",
          "description" : "Array of profile types",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "Name",
          "description" : "Query for a specific name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Inputs",
          "description" : "Array of company input ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Status",
          "description" : "Array of profile status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ScoutingStatus",
          "description" : "Array of profile scouting status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "BatchStatus",
          "description" : "Array of profile batch status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Industries",
          "description" : "Array of profile industry ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Products",
          "description" : "Array of profile product ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Keywords",
          "description" : "Array of keyword ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Classifications",
          "description" : "Array of classification ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Responsibles",
          "description" : "Array of responsible ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Country",
          "description" : "Array of country codes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "MyLikes",
          "description" : "Filter only profiles which user liked",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ActiveProfiles",
          "description" : "Switch to filter only active profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ArchivedProfiles",
          "description" : "Switch to filter only archived profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "DeletedProfiles",
          "description" : "Switch to filter only deleted profiles",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "CellProfiles",
          "description" : "Array of profile ID's<br>When this is used, all other filters will be ignored.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ExcludeProfiles",
          "description" : "Array of profile ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "Name", "Status", "Stage", "Country", "Score", "LastModifiedDate" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Link" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/crunchbase/search/{companyName}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "companyName",
          "description" : "Name of the company",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Returns a list of Crunchbase company organizations",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "ShortDescription" : {
                            "type" : "string"
                          },
                          "ProfileImageURL" : {
                            "type" : "string"
                          },
                          "ProfileID" : {
                            "type" : "integer"
                          },
                          "Imported" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/crunchbase/import/{id}" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the Crunchbase company organization. This is part of the organization information returned by the /crunchbase/search endpoint. The current version of the Crunchbase importer utilizes the permalink and uuid property as the company identifier. Both can be used interchangeably.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Imports the Crunchbase company organization into the Portfolio",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves a profile <br> <br> Duplicates are only returned by registration profiles <br><br> If Completeness is -1 --> no Property Weights in Settings defined",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Profile" : {
                          "$ref" : "#/components/schemas/Profile"
                        },
                        "AccessRules" : {
                          "$ref" : "#/components/schemas/ProfileProperties"
                        },
                        "MandatoryProperties" : {
                          "allOf" : [ {
                            "$ref" : "#/components/schemas/ProfileProperties"
                          }, {
                            "description" : "will be `NULL` when there are no mandatory properties."
                          } ]
                        },
                        "Completeness" : {
                          "type" : "integer"
                        },
                        "CompletenessMilestone" : {
                          "type" : "integer"
                        },
                        "HelpTextSectionProperties" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a profile.<br><br>When Keywords, Classifications or OtherOffices have changed, the response object will contain the full object. The Completeness of Profile will always get returned. <br><br> If Completeness is -1 --> no Property Weights in Settings defined",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Keywords" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Keyword"
                          }
                        },
                        "Classifications" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Classification"
                          }
                        },
                        "OtherOffices" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Office"
                          }
                        },
                        "Completeness" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a profile. The deleted profile can be recovered using the /recover method.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/recover" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Recovers a deleted profile",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/accept" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Marks an external created Profile to isDraft is false",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/archive" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Marks a profile as archived. Archived profiles cannot be edited",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Reason" : {
                    "type" : "string",
                    "description" : "Description of the archiving reason"
                  }
                },
                "required" : [ "Reason" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/reactivate" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Reactivates an archived profile as archived",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/like" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Toggles the like of a profile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Like" : {
                    "type" : "boolean",
                    "description" : "true = Add Like, false = Remove Like"
                  }
                },
                "required" : [ "Like" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/dislike" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Toggles the dislike of a profile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Dislike" : {
                    "type" : "boolean",
                    "description" : "true = Add Dislike, false = Remove Dislike"
                  }
                },
                "required" : [ "Dislike" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/activities/{activityID}" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a specified activity. Same as for the create activity method, further request parameters are defined by the given activity type (see schemas for CallActivity, EventActivity, MeetingActivity, NoteActivity and TaskActivity)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string",
                    "description" : "\\\"CALL\\\" | \\\"EVENT\\\" | \\\"MEETING\\\" | \\\"NOTE\\\" | \\\"TASK\\\""
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes an activity.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/activities/{activityID}/reject-task" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Rejects a specified task activity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Reason" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/activities/{activityID}/cancel-task" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Cancels a specified task activity",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/activities" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer activities",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older activities",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number"
          }
        } ],
        "description" : "Retrieves all profile activities. Each activity item in the response consists of type-specific properties",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Activity"
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new activity. Further request parameters are defined by the given activity type (see schemas for CallActivity, EventActivity, MeetingActivity, NoteActivity, TaskActivity and MilestoneActivity)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string",
                    "description" : "\\\"CALL\\\" | \\\"EVENT\\\" | \\\"MEETING\\\" | \\\"NOTE\\\" | \\\"TASK\\\" | \\\"MILESTONE\\\""
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/activities/analytics" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile activities. Each activity item in the response consists of type-specific properties",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Summary" : {
                          "type" : "object",
                          "properties" : {
                            "ALL" : {
                              "type" : "number"
                            },
                            "NOTE" : {
                              "type" : "number"
                            },
                            "CALL" : {
                              "type" : "number"
                            },
                            "MEETING" : {
                              "type" : "number"
                            },
                            "MILESTONE" : {
                              "type" : "number"
                            },
                            "TASK" : {
                              "type" : "number"
                            },
                            "SYSTEM" : {
                              "type" : "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/assessments" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile assessments or all availiable dimensions when no assessments are created or {id} is 0.<br>The return is always the same, the difference is only that the Value of the properties are 0 and no user is set. Also retrieves the assessment analytics for given profile.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Assessments" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Assessment"
                          }
                        },
                        "Analytics" : {
                          "type" : "object",
                          "properties" : {
                            "TotalScore" : {
                              "type" : "object",
                              "properties" : {
                                "My" : {
                                  "type" : "integer"
                                },
                                "Current" : {
                                  "type" : "integer"
                                }
                              }
                            },
                            "Summary" : {
                              "type" : "object",
                              "properties" : {
                                "FirstAssessment" : {
                                  "type" : "string"
                                },
                                "LastAssessment" : {
                                  "type" : "string"
                                },
                                "NumberOfAssessments" : {
                                  "type" : "integer"
                                },
                                "LowestScore" : {
                                  "type" : "integer"
                                },
                                "HighestScore" : {
                                  "type" : "integer"
                                }
                              }
                            },
                            "Chart" : {
                              "type" : "object",
                              "properties" : {
                                "Categories" : {
                                  "type" : "array",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "CurrentScores" : {
                                  "type" : "array",
                                  "items" : {
                                    "type" : "integer"
                                  }
                                },
                                "MyLastScores" : {
                                  "type" : "array",
                                  "items" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "HelpTextDimensionIDs" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/documents" : {
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a document file.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "path",
          "description" : "Document directory path",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieve all profile documents.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Directory"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "test",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "NewName" : {
                    "type" : "string"
                  },
                  "TypeID" : {
                    "type" : "integer"
                  },
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name", "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new document file in the directory specified by the path.",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "HTTPFile" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "RequestObject" : {
                    "type" : "object",
                    "properties" : {
                      "Path" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "required" : [ "HTTPFile" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/documents/directory" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new document directory.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/export" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Exports one profile to given Type (PDF).",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ProfileType" : {
                    "type" : "string",
                    "enum" : [ "COMPANY", "CONCEPT", "TECHNOLOGY", "SHAREHOLDER" ]
                  },
                  "ProfileExport" : {
                    "type" : "string",
                    "enum" : [ "OVERVIEW", "COMPLETE" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Link" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/forms" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile answered forms",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Questions" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ID" : {
                                  "type" : "integer"
                                },
                                "Question" : {
                                  "type" : "string"
                                },
                                "Answer" : {
                                  "type" : "string"
                                }
                              }
                            }
                          },
                          "AnsweredDate" : {
                            "type" : "string"
                          },
                          "AnsweredDateReadable" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/gallery" : {
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a gallery image file.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "path",
          "description" : "Gallery album path",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieve all profile gallery images.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Album"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a gallery image",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string",
                    "description" : "Relative path to file (E.g.: /sub-dir/image.png)\n"
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "The new name"
                  },
                  "isProductUseCase" : {
                    "type" : "boolean"
                  },
                  "Thumbnail" : {
                    "type" : "string",
                    "description" : "200x200px Image blob base64 encoded"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new gallery image file in the album specified by the path.",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "HTTPFile" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "RequestObject" : {
                    "type" : "object",
                    "properties" : {
                      "Path" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "required" : [ "HTTPFile" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/gallery/album" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new gallery album.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/projects" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile projects",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/projects2" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile projects v2",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "CreatedDate" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Status" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              }
                            }
                          },
                          "Responsibles" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/UserSimple"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/funding-rounds" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile funding rounds",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/FundingRound"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/shareholders" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile shareholders",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Shareholder"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/competitors" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile competitors",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ProfileSimple"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/requests-longlists" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all possible requests with connected info for given Profile ID",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "isConnected" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/share/user-access" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all users with their access to given Profile ID",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Avatar" : {
                            "type" : "string"
                          },
                          "hasAccess" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/{id}/share/{userID}" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "userID",
          "description" : "User ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Sends a notification to given user for given profile.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/people" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "value",
          "description" : "Search text",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "exclude",
          "description" : "Array of integers for exclude people by ID",
          "schema" : {
            "type" : "object"
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer people",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older people",
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Retrieves all people",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "FirstName" : {
                                "type" : "string"
                              },
                              "LastName" : {
                                "type" : "string"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Gender" : {
                                "type" : "string"
                              },
                              "Email" : {
                                "type" : "string"
                              },
                              "Telephone" : {
                                "type" : "string"
                              },
                              "LinkedIn" : {
                                "type" : "string"
                              },
                              "Notes" : {
                                "type" : "string"
                              },
                              "Avatar" : {
                                "type" : "string"
                              }
                            }
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/venture/search" : {
      "post" : {
        "description" : "Scan img base64 and search company in crunchbase.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "img_type" : {
                    "type" : "string",
                    "description" : "Image Type"
                  },
                  "base64" : {
                    "type" : "string",
                    "description" : "Image Base64"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "ShortDescription" : {
                            "type" : "string"
                          },
                          "ProfileImageURL" : {
                            "type" : "string"
                          },
                          "ProfileID" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/search/{query}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "query",
          "description" : "Search Term to search for profiles by name, about, keywords, strategicFit, source",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Returns a list of companies",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Logo" : {
                            "type" : "string"
                          },
                          "LogoDefault" : {
                            "type" : "string"
                          },
                          "isArchived" : {
                            "type" : "boolean"
                          },
                          "Description" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings" : {
      "get" : {
        "description" : "Retrieves all portfolio/profile settings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Aliases" : {
                          "$ref" : "#/components/schemas/ProfileAliases"
                        },
                        "Profile1ColumnLayout" : {
                          "type" : "object",
                          "properties" : {
                            "Properties" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        },
                        "Profile2ColumnLayout" : {
                          "type" : "object",
                          "properties" : {
                            "LeftProperties" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "RightProperties" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        },
                        "ProfileTypes" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ProfileType"
                          }
                        },
                        "AccessRules" : {
                          "type" : "object",
                          "properties" : {
                            "COMPANY" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            },
                            "CONCEPT" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            },
                            "TECHNOLOGY" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            },
                            "SHAREHOLDER" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            }
                          }
                        },
                        "PeopleSections" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/PersonSection"
                          }
                        },
                        "Status" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Status"
                          }
                        },
                        "Stages" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Stage"
                          }
                        },
                        "Classifications" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Classification"
                          }
                        },
                        "Keywords" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Keyword"
                          }
                        },
                        "BusinessModels" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/BusinessModel"
                          }
                        },
                        "RevenueModels" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/RevenueModel"
                          }
                        },
                        "DocumentTypes" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/DocumentType"
                          }
                        },
                        "Dimensions" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Dimension"
                          }
                        },
                        "Industries" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Industry"
                          }
                        },
                        "Products" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Product"
                          }
                        },
                        "ScoutingStatus" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ScoutingStatus"
                          }
                        },
                        "BatchStatus" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/BatchStatus"
                          }
                        },
                        "FundingStatus" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/FundingStatus"
                          }
                        },
                        "Limits" : {
                          "type" : "object",
                          "properties" : {
                            "Properties" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            },
                            "Activities" : {
                              "type" : "object",
                              "properties" : {
                                "Notes" : {
                                  "type" : "integer"
                                }
                              }
                            },
                            "SoftLimits" : {
                              "$ref" : "#/components/schemas/ProfileProperties"
                            },
                            "SoftLimitText" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/aliases" : {
      "get" : {
        "description" : "Retrieves all portfolio/profile aliases",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/ProfileAliases"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Only provide the type/section/property which you want to change.<br>An empty or NULL alias will remove the alias. <br> Target is not required, if not set \"internal\" is used",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileAliasesSet"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/layout-2-column" : {
      "get" : {
        "description" : "Receivies the profile 2 column layout.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "LoadDefaults" : {
                    "type" : "boolean",
                    "description" : "If set to true, the current layout will be deleted and the default layout will be returned."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/Profile2ColumnLayout"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Changes the profile 2 column layout. Single mutations are not accepted, the whole layout has to be sent.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Profile2ColumnLayout"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/layout-1-column" : {
      "get" : {
        "description" : "Receivies the profile 1 column layout.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "LoadDefaults" : {
                    "type" : "boolean",
                    "description" : "If set to true, the current layout will be deleted and the default layout will be returned."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/Profile1ColumnLayout"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Changes the profile 1 column layout. Single mutations are not accepted, the whole layout has to be sent.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Profile1ColumnLayout"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/types" : {
      "get" : {
        "description" : "Retrieves all profile type with aliases<br>An alias can be NULL, indicating that this type has no alias defined, the label of the type should than be the language depended default name.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ProfileTypes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Aliases" : {
                          "type" : "object",
                          "properties" : {
                            "Types" : {
                              "$ref" : "#/components/schemas/ProfileTypeAliases"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Changes a specific type alias.<br>An empty or NULL alias will remove the alias.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string"
                  },
                  "Alias" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Type", "Alias" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/access-rules" : {
      "get" : {
        "description" : "Retrieves access rules for each profile type.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "COMPANY" : {
                          "$ref" : "#/components/schemas/ProfileProperties"
                        },
                        "CONCEPT" : {
                          "$ref" : "#/components/schemas/ProfileProperties"
                        },
                        "TECHNOLOGY" : {
                          "$ref" : "#/components/schemas/ProfileProperties"
                        },
                        "SHAREHOLDER" : {
                          "$ref" : "#/components/schemas/ProfileProperties"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/people/sections" : {
      "get" : {
        "description" : "Retrieves all people section with aliases<br>An alias can be NULL, indicating that this section has no alias defined, the label of the section should than be the language depended default name.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "PeopleSections" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Aliases" : {
                          "type" : "object",
                          "properties" : {
                            "PeopleSections" : {
                              "$ref" : "#/components/schemas/PeopleSectionAliases"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Changes a specific section alias.<br>An empty or NULL alias will remove the alias.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Section" : {
                    "type" : "string"
                  },
                  "Alias" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Section", "Alias" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/status" : {
      "get" : {
        "description" : "Retrieves all statuses",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Status"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new status.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/status/{id}" : {
      "put" : {
        "description" : "Changes a specific status.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a status.<br>When the status is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available statuses to choose from.<br>Pass the `NewStatusID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewStatusID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Status ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/scouting-status" : {
      "get" : {
        "description" : "Retrieves all scouting statuses",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ScoutingStatus"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new scouting status.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/scouting-status/{id}" : {
      "put" : {
        "description" : "Changes a specific scouting status.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Scouting Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a scouting status.<br>When the scouting status is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Scouting Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/batch-status" : {
      "get" : {
        "description" : "Retrieves all batch statuses",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BatchStatus"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new batch status.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/batch-status/{id}" : {
      "put" : {
        "description" : "Changes a specific batch status.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Batch Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a batch status.<br>When the batch status is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Batch Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/funding-status" : {
      "get" : {
        "description" : "Retrieves all funding statuses",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/FundingStatus"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new funding status.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/funding-status/{id}" : {
      "put" : {
        "description" : "Changes a specific funding status.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Funding Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a funding status.<br>When the funding status is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Funding Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/help-texts" : {
      "get" : {
        "description" : "Retrieves all help texts for profile sections and assessment dimensions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Assessment" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Property" : {
                                "type" : "object",
                                "properties" : {
                                  "Name" : {
                                    "type" : "string"
                                  },
                                  "HelpText" : {
                                    "type" : "string"
                                  },
                                  "Properties" : {
                                    "type" : "array",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "Property" : {
                                          "type" : "object",
                                          "properties" : {
                                            "Name" : {
                                              "type" : "string"
                                            },
                                            "HelpText" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Profile" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Property" : {
                                "type" : "object",
                                "properties" : {
                                  "Name" : {
                                    "type" : "string"
                                  },
                                  "HelpText" : {
                                    "type" : "string"
                                  },
                                  "Properties" : {
                                    "type" : "array",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "Property" : {
                                          "type" : "object",
                                          "properties" : {
                                            "Name" : {
                                              "type" : "string"
                                            },
                                            "HelpText" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/stages" : {
      "get" : {
        "description" : "Retrieves all stages",
        "responses" : {
          "200" : {
            "description" : "Array of all stages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Stage"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new stage.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/stages/{id}" : {
      "put" : {
        "description" : "Changes a specific stage.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Stage ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a stage.<br>When the stage is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available stages to choose from.<br>Pass the `NewStageID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Stage ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewStageID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Stage ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/business-models" : {
      "get" : {
        "description" : "Retrieves all business models",
        "responses" : {
          "200" : {
            "description" : "Array of all business models",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BusinessModel"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new business model.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/business-models/{id}" : {
      "put" : {
        "description" : "Changes a specific business model.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Business Model ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a business model.<br>When the business model is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available business models to choose from.<br>Pass the `NewBusinessModelID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Business Model ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewBusinessModelID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Business Model ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/revenue-models" : {
      "get" : {
        "description" : "Retrieves all revenue models",
        "responses" : {
          "200" : {
            "description" : "Array of all revenue models",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/RevenueModel"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new revenue model.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/revenue-models/{id}" : {
      "put" : {
        "description" : "Changes a specific revenue model.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Revenue Model ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a revenue model.<br>When the revenue model is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available revenue models to choose from.<br>Pass the `NewRevenueModelID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Revenue Model ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewRevenueModelID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Revenue Model ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/document-types" : {
      "get" : {
        "description" : "Retrieves all document types",
        "responses" : {
          "200" : {
            "description" : "Array of all document types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DocumentType"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new document type.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/document-types/{id}" : {
      "put" : {
        "description" : "Changes a specific document type.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Document Type ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a document type.<br>When the document type is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available document types to choose from.<br>Pass the `NewDocumentTypeID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Document Type ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewDocumentTypeID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Document Type ID to which the documents will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/classifications" : {
      "get" : {
        "description" : "Retrieves all classifications",
        "responses" : {
          "200" : {
            "description" : "Array of all classifications",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Classification"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new classification.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/classifications/{id}" : {
      "put" : {
        "description" : "Changes a specific classification.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Classification ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a classification.<br>When the classification is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/industries" : {
      "get" : {
        "description" : "Retrieves all industries",
        "responses" : {
          "200" : {
            "description" : "Array of all industries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Industry"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new industry.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/industries/{id}" : {
      "put" : {
        "description" : "Changes a specific industry.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Industry ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an industry.<br>When the industry is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Industry ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/products" : {
      "get" : {
        "description" : "Retrieves all products",
        "responses" : {
          "200" : {
            "description" : "Array of all products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new product.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/products/{id}" : {
      "put" : {
        "description" : "Changes a specific product.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Product ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an product.<br>When the product is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Product ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/keywords" : {
      "get" : {
        "description" : "Retrieves all keywords",
        "responses" : {
          "200" : {
            "description" : "Array of all keywords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Keyword"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new keyword.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/keywords/{id}" : {
      "put" : {
        "description" : "Changes a specific keyword.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Keyword ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a keyword.<br>When the keyword is not used, the result should be a success.<br>Otherwise when `Confirmed` is not `true` a <b>900</b> error response will be returned.<br>Pass and set the `Confirmed` to `true` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Keyword ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Confirmed" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/dimensions" : {
      "get" : {
        "description" : "Retrieves all dimensions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Dimension"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new dimension.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "Properties" : {
                    "allOf" : [ {
                      "$ref" : "#/components/schemas/Mutations"
                    }, {
                      "description" : "See Property Schema to see the mutation properties"
                    } ]
                  }
                },
                "required" : [ "Name", "Properties" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/dimensions/{id}" : {
      "put" : {
        "description" : "Changes a specific dimension.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Dimension ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "Properties" : {
                    "allOf" : [ {
                      "$ref" : "#/components/schemas/Mutations"
                    }, {
                      "description" : "See Property Schema to see the mutation properties"
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a dimension.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Dimension ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/competitor-products" : {
      "get" : {
        "description" : "Retrieves all technology competitor products",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology competitor product.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/competitor-products/{id}" : {
      "put" : {
        "description" : "Changes a specific technology competitor product.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Competitor Product ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology competitor product.<br>When the competitor product is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available competitor products to choose from.<br>Pass the `NewCompetitorProductID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Competitor Product ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewCompetitorProductID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Competitor Product ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/customer-satisfaction" : {
      "get" : {
        "description" : "Retrieves all technology customer satisfaction",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology customer satisfaction.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/customer-satisfaction/{id}" : {
      "put" : {
        "description" : "Changes a specific technology customer satisfaction.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Customer Satisfaction ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology customer satisfaction.<br>When the customer satisfaction is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available customer satisfaction to choose from.<br>Pass the `NewCustomerSatisfactionID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Customer Satisfaction ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewCustomerSatisfactionID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Customer Satisfaction ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/market-segments" : {
      "get" : {
        "description" : "Retrieves all technology market segments",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology market segment.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/market-segments/{id}" : {
      "put" : {
        "description" : "Changes a specific technology market segment.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Market Segment ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology market segment.<br>When the market segment is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available market segments to choose from.<br>Pass the `NewMarketSegmentID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Market Segment ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewMarketSegmentID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Market Segment to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/development-number-of-patents" : {
      "get" : {
        "description" : "Retrieves all technology assessment development number of patents",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology assessment development number of patent.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/development-number-of-patents/{id}" : {
      "put" : {
        "description" : "Changes a specific technology assessment development number of patent.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Development Number Of Patents ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology assessment development number of patent.<br>When the development number of patent is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available development number of patents to choose from.<br>Pass the `NewDevelopmentNumberOfPatentsID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Development Number Of Patents ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewDevelopmentNumberOfPatentsID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Development Number Of Patent to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/hype-cycle-position" : {
      "get" : {
        "description" : "Retrieves all technology assessment hype cycle positions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology assessment hype cycle position.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/hype-cycle-position/{id}" : {
      "put" : {
        "description" : "Changes a specific technology assessment hype cycle position.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Hype Cycle Position ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology assessment hype cycle position.<br>When the hype cycle position is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available hype cycle positions to choose from.<br>Pass the `NewHypeCyclePositionID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Hype Cycle Position ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewHypeCyclePositionID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Hype Cycle Position to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/level-of-innovativeness" : {
      "get" : {
        "description" : "Retrieves all technology assessment level of innovativeness",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology assessment level of innovativeness.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/level-of-innovativeness/{id}" : {
      "put" : {
        "description" : "Changes a specific technology assessment level of innovativeness.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Level of Innovativeness ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology assessment level of innovativeness.<br>When the level of innovativeness is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available level of innovativeness to choose from.<br>Pass the `NewLevelOfInnovativenessID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Level of Innovativeness ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewLevelOfInnovativenessID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Level of Innovativeness to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/potential-development-possibilities" : {
      "get" : {
        "description" : "Retrieves all technology assessment potential development possibilities",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology assessment potential development possibilities.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/potential-development-possibilities/{id}" : {
      "put" : {
        "description" : "Changes a specific technology assessment potential development possibilities.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Potential Development Possibilities ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology assessment potential development possibilities.<br>When the potential development possibilities is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available potential development possibilities to choose from.<br>Pass the `NewPotentialDevelopmentPossibilitiesID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Potential Development Possibilities ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewPotentialDevelopmentPossibilitiesID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Potential Development Possibilities to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/realization-complexity" : {
      "get" : {
        "description" : "Retrieves all technology assessment realization complexity",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/TechnologySetting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new technology assessment realization complexity.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/profiles/settings/realization-complexity/{id}" : {
      "put" : {
        "description" : "Changes a specific technology assessment realization complexity.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Realization Complexity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a technology assessment realization complexity.<br>When the realization complexity is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available realization complexity to choose from.<br>Pass the `NewRealizationComplexityID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Realization Complexity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewRealizationComplexityID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Realization Complexity to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "ExcludeProjects",
          "description" : "Array of project ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "description" : "URL-Encoded JSON String.<br> For more information visit: <a href=\"https://aumentoo.atlassian.net/wiki/spaces/NE/pages/635666435/Filter+Sort+Pagination+-+Portfolio\">Filter, Sort & Pagination - Portfolio</a>\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "ID", "Name", "Status", "Responsibles" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "description" : "Receives a projects list",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "CreatedDate" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Responsibles" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ID" : {
                                  "type" : "integer"
                                },
                                "Name" : {
                                  "type" : "string"
                                },
                                "Avatar" : {
                                  "type" : "string"
                                }
                              }
                            }
                          },
                          "Status" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new project.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer",
                          "description" : "LastInsertID"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/export" : {
      "post" : {
        "description" : "Exports profiles of given Filter to Excel",
        "parameters" : [ {
          "in" : "query",
          "name" : "ExportSettings",
          "description" : "export all / current page",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "CURRENT_PAGE" ]
          }
        }, {
          "in" : "query",
          "name" : "Name",
          "description" : "Query for a specific name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Status",
          "description" : "Array of project status ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Departments",
          "description" : "Array of company department ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Responsibles",
          "description" : "Array of responsible user ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "DeletedProjects",
          "description" : "Switch to filter only deleted projects",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "ExcludeProjects",
          "description" : "Array of project ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "Name", "Status", "Stage", "Country", "Score", "LastModifiedDate" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Link" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Receives a project",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Project" : {
                          "$ref" : "#/components/schemas/Project2"
                        },
                        "AccessRules" : {
                          "$ref" : "#/components/schemas/ProjectProperties"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a project",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a project. The deleted project can be recovered using the /recover method.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/recover" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Recovers a deleted project",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/milestones" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrives milestones for a project",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Milestones" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "name" : {
                                "type" : "string",
                                "description" : "Highchart property"
                              },
                              "y" : {
                                "type" : "integer",
                                "description" : "Highchart property"
                              },
                              "color" : {
                                "type" : "string",
                                "description" : "Highchart property"
                              },
                              "DeadlineDate" : {
                                "type" : "string"
                              },
                              "isDeadlineReached" : {
                                "type" : "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/link-profile" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Link an profile to the project",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ProfileID" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/unlink-profile" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Unlink an profile from the project",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ProfileID" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/activities" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer activities",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older activities",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number"
          }
        } ],
        "description" : "Retrieves all project activities. Each activity item in the response consists of type-specific properties",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Activity"
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new activity. Further request parameters are defined by the given activity type (see schemas for CallActivity, EventActivity, MeetingActivity, NoteActivity, TaskActivity and MilestoneActivity)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string",
                    "description" : "\\\"CALL\\\" | \\\"EVENT\\\" | \\\"MEETING\\\" | \\\"NOTE\\\" | \\\"TASK\\\" | \\\"MILESTONE\\\""
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/activities/{activityID}" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a specified activity. Same as for the create activity method, further request parameters are defined by the given activity type (see schemas for NoteActivity, CallActivity, MeetingActivity and NoteActivity)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string",
                    "description" : "\\\"NOTE\\\" | \\\"CALL\\\" | \\\"MEETING\\\" | \\\"MILESTONE\\\""
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "path",
          "name" : "activityID",
          "description" : "Activity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes an activity.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/activities/analytics" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Profile ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieves all profile activities. Each activity item in the response consists of type-specific properties",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Summary" : {
                          "type" : "object",
                          "properties" : {
                            "ALL" : {
                              "type" : "number"
                            },
                            "NOTE" : {
                              "type" : "number"
                            },
                            "CALL" : {
                              "type" : "number"
                            },
                            "MEETING" : {
                              "type" : "number"
                            },
                            "MILESTONE" : {
                              "type" : "number"
                            },
                            "TASK" : {
                              "type" : "number"
                            },
                            "SYSTEM" : {
                              "type" : "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/documents" : {
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a document file.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "path",
          "description" : "Document directory path",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Retrieve all project documents.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Directory"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "test",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "NewName" : {
                    "type" : "string"
                  },
                  "TypeID" : {
                    "type" : "integer"
                  },
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name", "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new document file in the directory specified by the path.",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "HTTPFile" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "RequestObject" : {
                    "type" : "object",
                    "properties" : {
                      "Path" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "required" : [ "HTTPFile" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/{id}/documents/directory" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Creates a new document directory.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Path" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/settings" : {
      "get" : {
        "description" : "Retrieves all project settings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Status" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "UsedCount" : {
                                "type" : "integer"
                              },
                              "SortOrder" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "DocumentTypes" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/DocumentType"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/settings/status" : {
      "get" : {
        "description" : "Retrieves all statuses",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "UsedCount" : {
                            "type" : "integer"
                          },
                          "SortOrder" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new status.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/settings/status/{id}" : {
      "put" : {
        "description" : "Changes a specific status.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a status.<br>When the status is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available statuses to choose from.<br>Pass the `NewStatusID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Status ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewStatusID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Status ID to which the profiles will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/settings/document-types" : {
      "get" : {
        "description" : "Retrieves all document types",
        "responses" : {
          "200" : {
            "description" : "Array of all document types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DocumentType"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new document type.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/projects/settings/document-types/{id}" : {
      "put" : {
        "description" : "Changes a specific document type.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Document Type ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a document type.<br>When the document type is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available document types to choose from.<br>Pass the `NewDocumentTypeID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Document Type ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewDocumentTypeID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Document Type ID to which the documents will be changed to.<br>`null` would remove any assignments."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "ExcludeRequests",
          "description" : "Array of request ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "description" : "URL-Encoded JSON String.<br> For more information visit: <a href=\"https://aumentoo.atlassian.net/wiki/spaces/NE/pages/635666435/Filter+Sort+Pagination+-+Portfolio\">Filter, Sort & Pagination - Portfolio</a>\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "ID", "Name", "Responsible", "Status" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "description" : "Receives a list of all requests",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "CreatedDate" : {
                            "type" : "string"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Responsibles" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ID" : {
                                  "type" : "integer"
                                },
                                "Name" : {
                                  "type" : "string"
                                },
                                "Avatar" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new request.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer",
                          "description" : "LastInsertID"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/export" : {
      "post" : {
        "description" : "Exports requests of given Filter to Excel",
        "parameters" : [ {
          "in" : "query",
          "name" : "ExportSettings",
          "description" : "export all / current page",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "CURRENT_PAGE" ]
          }
        }, {
          "in" : "query",
          "name" : "Name",
          "description" : "Query for a specific name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "Status",
          "description" : "Array of request status ENUM's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "Departments",
          "description" : "Array of company department ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "Responsibles",
          "description" : "Array of responsible user ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "TimeHorizons",
          "description" : "Array of time horizon ID's",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "DeletedRequests",
          "description" : "Switch to filter only deleted requests",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "CellRequests",
          "description" : "Array of request ID's<br>When this is used, all other filters will be ignored.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "ExcludeRequests",
          "description" : "Array of request ID's that will be excluded from the response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sort by properties separated by comma:<br>\n  * `Name` or `+Name` or `Name.asc` - Ascending\n  * `-Name` or `Name.desc` - Descending\n\nExample: ?sort=Date.desc,Name<br><br> Will sort first descending by Date and than ascending by Name<br><br> <b>Notice: </b> Sorting is currently possible with only one property\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "Name", "Status", "Stage", "Country", "Score", "LastModifiedDate" ]
          }
        }, {
          "$ref" : "#/components/parameters/offsetPaginationPageParam"
        }, {
          "$ref" : "#/components/parameters/offsetPaginationRowsPerPageParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Link" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Receives a request",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "$ref" : "#/components/schemas/Request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Updates a request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestMutations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Deletes a request. The deleted request can be recovered using the /recover method.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/profiles" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "Keywords",
          "description" : "Array of Keyword IDs",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        } ],
        "description" : "Receives all profiles matching by Keywords for one request",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Nutshell" : {
                            "type" : "string"
                          },
                          "Logo" : {
                            "type" : "string"
                          },
                          "AssessmentsScore" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/longlist" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Receives all profiles matching by Keywords for one request",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Nutshell" : {
                            "type" : "string"
                          },
                          "Logo" : {
                            "type" : "string"
                          },
                          "LogoDefault" : {
                            "type" : "string"
                          },
                          "LegalForm" : {
                            "$ref" : "#/components/schemas/LegalForm"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Update (add/remove profile) longlist for one request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Profile" : {
                    "type" : "object",
                    "properties" : {
                      "Add" : {
                        "type" : "integer",
                        "description" : "Profile ID to add"
                      },
                      "Remove" : {
                        "type" : "integer",
                        "description" : "Profile ID to remove"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "Nutshell" : {
                            "type" : "string"
                          },
                          "Logo" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/longlist-access" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "isAccessGranted",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "description" : "Add/Remove Access to Request",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/longlist/export" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Exports Request Longlist to Excel",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Link" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/recover" : {
      "put" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Recovers a deleted request",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/{id}/share" : {
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Send Request to given email",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Email" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/settings" : {
      "get" : {
        "description" : "Receives request management settings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Maturity" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "UsedCount" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "Status" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "TimeHorizon" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "UsedCount" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "Recommendation" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "UsedCount" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "AccessRules" : {
                          "$ref" : "#/components/schemas/RequestProperties"
                        },
                        "Aliases" : {
                          "$ref" : "#/components/schemas/RequestProperties"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/settings/maturity" : {
      "get" : {
        "description" : "Receives request management maturity settings",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "integer"
                          },
                          "Name" : {
                            "type" : "string"
                          },
                          "UsedCount" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new maturity.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "number",
                      "description" : "LastInsertID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/settings/maturity/{id}" : {
      "put" : {
        "description" : "Changes a specific maturity.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Maturity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a maturity.<br>When the maturity is not used, the result should be a success.<br>Otherwise a <b>900</b> error response will be returned with all available maturities to choose from.<br>Pass the `NewMaturityID` to confirm the deletion.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Maturity ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewMaturityID" : {
                    "type" : "number",
                    "nullable" : true,
                    "description" : "Maturity ID to which the requests will be changed to."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "200 (900)" : {
            "description" : "Confirmation Required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean",
                      "default" : false
                    },
                    "code" : {
                      "type" : "number",
                      "enum" : [ 900 ]
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ID" : {
                            "type" : "number"
                          },
                          "Name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/request-management/matches" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "Keywords",
          "description" : "Array of Keywords",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "description" : "Receives company profiles matching a specified set of keywords. This endpoint is using the Suggestion Service",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "ID" : {
                          "type" : "integer"
                        },
                        "Imported" : {
                          "type" : "boolean"
                        },
                        "Name" : {
                          "type" : "string"
                        },
                        "CountryCode" : {
                          "type" : "string"
                        },
                        "Score" : {
                          "type" : "number"
                        },
                        "ShortDescription" : {
                          "type" : "string"
                        },
                        "ProfileImageURL" : {
                          "type" : "string"
                        },
                        "ProfileID" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tasks" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "isFinished",
          "description" : "false = open tasks, true = closed tasks",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer tasks",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older tasks",
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Retrieves all tasks  <br> isFinished = false --> return only tasks with Deadline >= today, not canceled, not rejected, not finished isFinished = true --> return tasks which are canceled or rejected or finished <br>default isFinished is false",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Key" : {
                                "type" : "string"
                              },
                              "Description" : {
                                "type" : "string"
                              },
                              "Properties" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "Date" : {
                                "type" : "string"
                              },
                              "DateReadable" : {
                                "type" : "string"
                              },
                              "isRejected" : {
                                "type" : "boolean"
                              },
                              "isCanceled" : {
                                "type" : "boolean"
                              },
                              "RejectReason" : {
                                "type" : "string"
                              },
                              "Profile" : {
                                "$ref" : "#/components/schemas/ProfileSimple"
                              }
                            }
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/notifications" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer notifications",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older notifications",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number"
          }
        } ],
        "description" : "Receives notifications. <br> Response different per notification \"Type\"",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Notification"
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates notification(s) as seen.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "UpdateIDs" : {
                    "type" : "array",
                    "description" : "One or more of notification UpdateID",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/messages" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives next users",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number"
          }
        }, {
          "in" : "query",
          "name" : "Filter",
          "description" : "Filters users",
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Receives all users with messages.<br>If Filter is provided users matching with the filter will be returned no matter if there is a conversation or not.<br>The `Conversation` property will be `NULL` if there is not conversation.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer"
                              },
                              "Name" : {
                                "type" : "string"
                              },
                              "Email" : {
                                "type" : "string"
                              },
                              "Avatar" : {
                                "type" : "string"
                              },
                              "Conversation" : {
                                "type" : "object",
                                "properties" : {
                                  "Message" : {
                                    "type" : "string",
                                    "description" : "The latest message made in the conversation."
                                  },
                                  "CreatedDateReadable" : {
                                    "type" : "string",
                                    "description" : "The date of the latest message made in the conversation."
                                  },
                                  "NewMessageCount" : {
                                    "type" : "integer",
                                    "description" : "The total count of unseen messages."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/messages/pull" : {
      "get" : {
        "description" : "Can be used to regularly pull information about messages, like the overall new message count.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "MessageCount" : {
                          "type" : "integer",
                          "description" : "Total New Message Count"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/messages/{id}" : {
      "get" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Receiver User ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives older messages",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives newer messages",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number"
          }
        } ],
        "description" : "Receives all messages of user.<br>The request will always check if send messages got seen, and will return them in the `Update` response object.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ID" : {
                                "type" : "integer",
                                "description" : "Message ID"
                              },
                              "User" : {
                                "$ref" : "#/components/schemas/UserSimple"
                              },
                              "Message" : {
                                "type" : "string"
                              },
                              "CreatedDate" : {
                                "type" : "string"
                              },
                              "CreatedDateReadable" : {
                                "type" : "string"
                              },
                              "SeenDate" : {
                                "type" : "string",
                                "nullable" : true,
                                "description" : "Only for receiving messages. `NULL` if receiver has not yet seen the message."
                              },
                              "SeenDateReadable" : {
                                "type" : "string",
                                "description" : "Only for receiving messages. And if `SeenDate` is not `NULL`."
                              }
                            }
                          }
                        },
                        "Update" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "MessageID" : {
                                "type" : "object",
                                "properties" : {
                                  "SeenDate" : {
                                    "type" : "string"
                                  },
                                  "SeenDateReadable" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Receiver User ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "description" : "Sends a message to the user.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/news" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "Type",
          "description" : "News types. Filters by a set of types.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NEWS", "PROFILE_UPDATES", "ACTIVITIES", "POSTS" ]
            }
          }
        }, {
          "in" : "query",
          "name" : "Activities",
          "description" : "Filters activities by set of activity-types.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityType"
            }
          }
        }, {
          "in" : "query",
          "name" : "before",
          "description" : "Before Cursor. Receives newer news",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "after",
          "description" : "After Cursor. Receives older news",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "ProfileID",
          "schema" : {
            "type" : "number"
          }
        } ],
        "description" : "Receives the newest news.<br><br>\nDepending on the Type the response item may contain different properties:<br> - News on <b>NEWS</b><br> - Profile & User on <b>PROFILE_CREATED</b> or <b>PROFILE_CHANGED</b><br> - Profile & Activity & User on <b>ACTIVITY_CREATED</b><br><br>\nOn Type <b>PROFILE_CHANGED</b> the Profile contains also an Property Changes <br><br>\nThe <b>ID</b> is not unique and is just the ID of the <i>Type-Object</i> <br><br>\nWith ProfileID can get stream for one profile. When ProfileID is set and Type not -> Type = [\"PROFILE_UPDATES\", \"ACTIVITIES\"]\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Items" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/NewsStreamItem"
                          }
                        },
                        "Cursor" : {
                          "$ref" : "#/components/schemas/Cursor"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/news/posts" : {
      "post" : {
        "description" : "Adds a Stream Post. <br> Message with Type \"MESSAGE\" and Report with Type \"REPORT\".",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Type" : {
                    "type" : "string",
                    "enum" : [ "MESSAGE", "REPORT" ]
                  },
                  "Message" : {
                    "type" : "string"
                  },
                  "ReportFile" : {
                    "type" : "string",
                    "description" : "Binary image file",
                    "format" : "binary"
                  },
                  "PreviewImage" : {
                    "type" : "string",
                    "description" : "Binary image file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/news/posts/{id}" : {
      "delete" : {
        "description" : "Deletes a Stream Post if User is Post Creator.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Post ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/profile-distribution" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "statusId",
          "description" : "Id of one status",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "type",
          "description" : "Profile Type",
          "schema" : {
            "type" : "string",
            "enum" : [ "COMPANY", "CONCEPT", "TECHNOLOGY", "SHAREHOLDER" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of Profiles by country.<br><br>\ncode3 --> Country short Code <br> z --> Count of Profiles\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "properties" : {
                          "code3" : {
                            "type" : "string"
                          },
                          "z" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/classification-cluster" : {
      "get" : {
        "description" : "Receives the count of Profiles per Classification (ClassificationCount).<br> Receives the Keywords per Classification (Series - usable for highcharts) <br><br>\nIn Series there are always two types of objects which are needed together, one object with parent,name,value and keywordId and the other object with id,name and color. The different objects are normally on one level. <br><br>\n{{stringClassificationId}} --> Placeholder for the Classification ID as string <br> In Series the parent is also the Classification ID\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "properties" : {
                          "Series" : {
                            "type" : "array",
                            "items" : {
                              "oneOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "parent" : {
                                    "type" : "string"
                                  },
                                  "name" : {
                                    "type" : "string"
                                  },
                                  "keywordId" : {
                                    "type" : "integer"
                                  },
                                  "value" : {
                                    "type" : "integer"
                                  }
                                }
                              }, {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string"
                                  },
                                  "name" : {
                                    "type" : "string"
                                  },
                                  "color" : {
                                    "type" : "string"
                                  }
                                }
                              } ]
                            }
                          },
                          "ClassificationCount" : {
                            "type" : "object",
                            "properties" : {
                              "{{stringClassificationId}}" : {
                                "type" : "object",
                                "properties" : {
                                  "Count" : {
                                    "type" : "integer"
                                  },
                                  "Name" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/new-profiles" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "description" : "Min Created Date from Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "Max Created Date from Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "granularity",
          "description" : "Granularity in Time Range",
          "schema" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of new Profiles in Time Range and by Granularity.<br><br>\nSeries --> Comma seperated Array of Integers for count of Profiles <br> Categories --> Comma seperated Array of Strings for dates\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Series" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Categories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/number-of-profiles" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "description" : "Min Created Date of Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "Max Created Date of Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "granularity",
          "description" : "Granularity in Time Range",
          "schema" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of all Profiles in Time Range and by Granularity.<br><br>\nSeries --> Comma seperated Array of Integers for count of Profiles <br> Categories --> Comma seperated Array of Strings for dates\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Series" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Categories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/number-of-user-accounts" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "description" : "Min Created Date of User",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "Max Created Date of User",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "granularity",
          "description" : "Granularity in Time Range",
          "schema" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of all User Accounts in Time Range and by Granularity.<br><br>\nSeries --> Comma seperated Array of Integers for count of User Accounts <br> Categories --> Comma seperated Array of Strings for dates\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Series" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Categories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/new-activities" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "description" : "Min Created Date of Activity",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "Max Created Date of Activity",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "granularity",
          "description" : "Granularity in Time Range",
          "schema" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of new Activities in Time Range and by Granularity.<br><br>\nSeries --> Comma seperated Array of Integers for count of Activities <br> Categories --> Comma seperated Array of Strings for dates\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Series" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Categories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/kpi/profile-status-changes" : {
      "get" : {
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "description" : "Min Created Date of Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "Max Created Date of Profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "granularity",
          "description" : "Granularity in Time Range",
          "schema" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }
        } ],
        "description" : "Format directly usable for Highcharts! <br> Receives the count of Profile Status Changes in Time Range and by Granularity.<br><br>\nSeries --> Comma seperated Array of Integers for count of Status Changes <br> Categories --> Comma seperated Array of Strings for dates\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "Series" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Categories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Maximum number of items to return.",
        "schema" : {
          "type" : "integer"
        }
      },
      "offsetPaginationPageParam" : {
        "name" : "page",
        "in" : "query",
        "description" : "The current page.",
        "schema" : {
          "type" : "integer"
        }
      },
      "offsetPaginationRowsPerPageParam" : {
        "name" : "rowsPerPage",
        "in" : "query",
        "description" : "Maximum number of rows to return.",
        "schema" : {
          "type" : "integer"
        }
      },
      "cursorBefore" : {
        "name" : "before",
        "in" : "query",
        "schema" : {
          "type" : "string"
        }
      },
      "cursorAfter" : {
        "name" : "after",
        "in" : "query",
        "schema" : {
          "type" : "string"
        }
      },
      "cursorLimit" : {
        "name" : "limit",
        "in" : "query",
        "schema" : {
          "type" : "integer"
        }
      }
    },
    "schemas" : {
      "Album" : {
        "type" : "object",
        "properties" : {
          "CreatedDate" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Size" : {
            "type" : "integer"
          },
          "Type" : {
            "type" : "string"
          },
          "isDir" : {
            "type" : "boolean"
          },
          "Path" : {
            "type" : "string"
          },
          "Files" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          }
        }
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "CreatedDate" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Size" : {
            "type" : "integer"
          },
          "Type" : {
            "type" : "string"
          },
          "isDir" : {
            "type" : "boolean"
          },
          "AbsolutePath" : {
            "type" : "string"
          },
          "Path" : {
            "type" : "string"
          },
          "CDNPath" : {
            "type" : "string"
          },
          "Thumbnail" : {
            "type" : "string",
            "description" : "Holds the CDN thumbnail path or if not set the CDNPath"
          },
          "Attributes" : {
            "type" : "object",
            "properties" : {
              "Width" : {
                "type" : "integer"
              },
              "Height" : {
                "type" : "integer"
              },
              "isProductUseCase" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "Cursor" : {
        "type" : "object",
        "description" : "Cursor Pagination response object",
        "properties" : {
          "Before" : {
            "type" : "string"
          },
          "hasBefore" : {
            "type" : "boolean"
          },
          "After" : {
            "type" : "string"
          },
          "hasAfter" : {
            "type" : "boolean"
          }
        }
      },
      "Mutations" : {
        "type" : "object",
        "description" : "`Removed` needs always and only the ID of the respective object<br> `Changed` needs always ID of the respective object<br> `Added` needs always the full data of the respective object\n",
        "properties" : {
          "Removed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                }
              },
              "required" : [ "ID" ]
            }
          },
          "Changed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                }
              },
              "required" : [ "ID" ]
            }
          },
          "Added" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                }
              }
            }
          }
        }
      },
      "ProfileType" : {
        "type" : "string",
        "enum" : [ "COMPANY", "CONCEPT", "TECHNOLOGY", "SHAREHOLDER" ]
      },
      "Profile2ColumnLayout" : {
        "type" : "object",
        "description" : "Holds valid Profile Properties",
        "properties" : {
          "LeftProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "RightProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Profile1ColumnLayout" : {
        "type" : "object",
        "description" : "Holds valid Profile Properties",
        "properties" : {
          "Properties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProfileTypeAliases" : {
        "type" : "object",
        "properties" : {
          "COMPANY" : {
            "type" : "string"
          },
          "CONCEPT" : {
            "type" : "string"
          },
          "TECHNOLOGY" : {
            "type" : "string"
          },
          "SHAREHOLDER" : {
            "type" : "string"
          }
        }
      },
      "PeopleSectionAliases" : {
        "type" : "object",
        "properties" : {
          "BOARD" : {
            "type" : "string"
          },
          "MANAGEMENT" : {
            "type" : "string"
          },
          "STAFF" : {
            "type" : "string"
          }
        }
      },
      "ProfileAliases" : {
        "type" : "object",
        "properties" : {
          "Types" : {
            "$ref" : "#/components/schemas/ProfileTypeAliases"
          },
          "PeopleSections" : {
            "$ref" : "#/components/schemas/PeopleSectionAliases"
          },
          "Properties" : {
            "$ref" : "#/components/schemas/ProfileProperties"
          }
        }
      },
      "ProfileAliasesSet" : {
        "type" : "object",
        "properties" : {
          "Language" : {
            "type" : "string",
            "enum" : [ "de", "en" ]
          },
          "Target" : {
            "type" : "string",
            "enum" : [ "internal", "registration" ]
          },
          "Types" : {
            "$ref" : "#/components/schemas/ProfileTypeAliases"
          },
          "PeopleSections" : {
            "$ref" : "#/components/schemas/PeopleSectionAliases"
          },
          "Properties" : {
            "$ref" : "#/components/schemas/ProfileProperties"
          }
        }
      },
      "DocumentType" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Rule" : {
        "type" : "integer",
        "description" : "Bit-Flag <br> 0 = NONE<br> 1 = READ<br> 2 = WRITE<br> 3 = READ & WRITE"
      },
      "Department" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Input" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          },
          "Responsibles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSimple"
            }
          }
        }
      },
      "Directory" : {
        "type" : "object",
        "properties" : {
          "CreatedDate" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Size" : {
            "type" : "integer"
          },
          "Type" : {
            "type" : "string"
          },
          "isDir" : {
            "type" : "boolean"
          },
          "Path" : {
            "type" : "string"
          },
          "Files" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        }
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "CreatedDate" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Size" : {
            "type" : "integer"
          },
          "Type" : {
            "type" : "string"
          },
          "isDir" : {
            "type" : "boolean"
          },
          "AbsolutePath" : {
            "type" : "string"
          },
          "Path" : {
            "type" : "string"
          },
          "CDNPath" : {
            "type" : "string"
          },
          "Attributes" : {
            "type" : "object",
            "properties" : {
              "TypeID" : {
                "type" : "integer"
              }
            }
          },
          "TypeName" : {
            "type" : "string"
          }
        }
      },
      "ServiceDesk" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean"
          },
          "Link" : {
            "type" : "string"
          }
        }
      },
      "UserSimple" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Avatar" : {
            "type" : "string",
            "description" : "URL to image"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CompanyID" : {
            "type" : "integer"
          },
          "DepartmentID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "isMetaUser" : {
            "type" : "boolean"
          },
          "Email" : {
            "type" : "string"
          },
          "Language" : {
            "type" : "string"
          },
          "Timezone" : {
            "type" : "string"
          },
          "LastPasswordChangeDate" : {
            "type" : "string"
          },
          "LastSeenDate" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "Telephone" : {
            "type" : "string"
          },
          "MobileTelephone" : {
            "type" : "string"
          },
          "Avatar" : {
            "type" : "string",
            "description" : "URL to image"
          },
          "Role" : {
            "$ref" : "#/components/schemas/UserRole"
          },
          "AccessExceptions" : {
            "$ref" : "#/components/schemas/AccessExceptions"
          },
          "isModerator" : {
            "type" : "boolean"
          },
          "isAdministrator" : {
            "type" : "boolean"
          },
          "canCreateProfiles" : {
            "type" : "boolean"
          }
        }
      },
      "UserRole" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Label" : {
            "type" : "string"
          },
          "OwnProfiles" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "OtherProfiles" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileOverview" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileActivities" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileAssessments" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileProjects" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileFinancials" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileDocuments" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "ProfileContext" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "Projects" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "RequestManagement" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "RegistrationManagement" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "Activities" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "KPIMonitor" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "UserManagement" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "AdminManagement" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "FormsManagement" : {
            "$ref" : "#/components/schemas/Rule"
          }
        }
      },
      "AccessException" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedUserID" : {
            "type" : "integer"
          },
          "ProfileID" : {
            "type" : "integer"
          },
          "Rule" : {
            "$ref" : "#/components/schemas/Rule"
          }
        }
      },
      "AccessExceptions" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccessException"
        }
      },
      "Status" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          },
          "SortOrder" : {
            "type" : "number"
          },
          "MandatoryProperties" : {
            "type" : "object",
            "nullable" : true
          }
        }
      },
      "Stage" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "BusinessModel" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "RevenueModel" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Keyword" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Classification" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Industry" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "ScoutingStatus" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "BatchStatus" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "FundingStatus" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          }
        }
      },
      "TechnologySetting" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UsedCount" : {
            "type" : "number"
          },
          "SortOrder" : {
            "type" : "number"
          }
        }
      },
      "LegalForm" : {
        "type" : "object",
        "description" : "Available only on type `COMPANY` or `SHAREHOLDER`",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "Finance" : {
        "type" : "object",
        "description" : "Available only on type `COMPANY` or `SHAREHOLDER`",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "ProfileID" : {
            "type" : "integer"
          },
          "Employees" : {
            "type" : "string"
          },
          "Revenue" : {
            "$ref" : "#/components/schemas/Money"
          },
          "EBIT" : {
            "$ref" : "#/components/schemas/Money"
          },
          "FundingRounds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FundingRound"
            }
          },
          "TotalFunding" : {
            "type" : "string"
          }
        }
      },
      "Money" : {
        "type" : "object",
        "description" : "A money object of the fowler pattern including the currency.<br> Read more at: <a href=\"http://moneyphp.org\">http://moneyphp.org</a>\n",
        "properties" : {
          "Amount" : {
            "type" : "string"
          },
          "Currency" : {
            "type" : "string"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "Street" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          },
          "City" : {
            "type" : "string"
          },
          "Country" : {
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "string"
              },
              "Name" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Office" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "Telephone" : {
            "type" : "string"
          },
          "Homepage" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          }
        }
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Section" : {
            "$ref" : "#/components/schemas/PersonSection"
          },
          "SectionName" : {
            "type" : "string"
          },
          "Position" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Gender" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "DIVERSE" ]
          },
          "Email" : {
            "type" : "string"
          },
          "Telephone" : {
            "type" : "string"
          },
          "LinkedIn" : {
            "type" : "string"
          },
          "Notes" : {
            "type" : "string"
          },
          "Avatar" : {
            "type" : "string",
            "description" : "URL to image"
          },
          "StartDate" : {
            "type" : "string"
          },
          "EndDate" : {
            "type" : "string"
          },
          "isCurrent" : {
            "type" : "boolean"
          },
          "isFounder" : {
            "type" : "boolean"
          }
        }
      },
      "PersonSection" : {
        "type" : "string",
        "enum" : [ "BOARD", "MANAGEMENT", "STAFF" ]
      },
      "Property" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "DimensionID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "Range" : {
            "type" : "object",
            "properties" : {
              "Start" : {
                "type" : "number"
              },
              "End" : {
                "type" : "number"
              },
              "Step" : {
                "type" : "number"
              }
            }
          },
          "Description" : {
            "type" : "string"
          }
        }
      },
      "AssessmentProperty" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "Range" : {
            "type" : "object",
            "properties" : {
              "Start" : {
                "type" : "number"
              },
              "End" : {
                "type" : "number"
              },
              "Step" : {
                "type" : "number"
              }
            }
          },
          "Description" : {
            "type" : "string"
          },
          "Value" : {
            "type" : "integer"
          }
        }
      },
      "Dimension" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "Dimension ID"
          },
          "Name" : {
            "type" : "string"
          },
          "User" : {
            "$ref" : "#/components/schemas/UserSimple"
          },
          "Properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Property"
            }
          }
        }
      },
      "Assessment" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "Dimension ID"
          },
          "Name" : {
            "type" : "string"
          },
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserSimple"
            }, {
              "description" : "Last changed user"
            } ]
          },
          "Properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentProperty"
            }
          }
        }
      },
      "Project" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string",
            "enum" : [ "PLANNING", "ONGOING", "DONE" ]
          },
          "StatusName" : {
            "type" : "string"
          },
          "Responsible" : {
            "$ref" : "#/components/schemas/UserSimple"
          },
          "Description" : {
            "type" : "string"
          }
        }
      },
      "Project2" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Name" : {
            "type" : "string"
          },
          "UserID" : {
            "type" : "integer"
          },
          "Responsibles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSimple"
            }
          },
          "Status" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "Visibility" : {
            "type" : "string",
            "enum" : [ "ONLY_RESPONSIBLES", "DEPARTMENTS", "EVERYONE", "CUSTOM" ]
          },
          "Departments" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/Department"
              }, {
                "type" : "string"
              } ]
            }
          },
          "Participants" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/UserSimple"
              }, {
                "type" : "object",
                "properties" : {
                  "ID" : {
                    "type" : "integer"
                  },
                  "Name" : {
                    "type" : "string"
                  }
                }
              } ]
            }
          },
          "Client" : {
            "type" : "string"
          },
          "Classifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Classification"
            }
          },
          "InitialSituation" : {
            "type" : "string"
          },
          "Objective" : {
            "type" : "string"
          },
          "UseCase" : {
            "type" : "string"
          },
          "ExpectedResult" : {
            "type" : "string"
          },
          "Notes" : {
            "type" : "string"
          },
          "AvailableBudget" : {
            "$ref" : "#/components/schemas/Money"
          },
          "AvailableFTE" : {
            "$ref" : "#/components/schemas/Money"
          },
          "LinkedProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileSimple"
            }
          },
          "LinkedRequests" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "ProjectProperties" : {
        "description" : "Is used for determining access to properties or aliases for properties.<br><br>Any of those properties can be ommited, which identifies as \"no access\" or \"not set/defined\".",
        "properties" : {
          "Responsibles" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Status" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Visibility" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Departments" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Participants" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Client" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Classifications" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "InitialSituation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Objective" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "UseCase" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ExpectedResult" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Notes" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "AvailableBudget" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "AvailableFTE" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "LinkedProfiles" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "LinkedRequests" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ProjectInformation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Milestones" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Stakeholder" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Budget" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          }
        }
      },
      "ProjectMutations" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Responsibles" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Status" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "Visibility" : {
            "type" : "string"
          },
          "VisibilityUsers" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Departments" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Participants" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Client" : {
            "type" : "string"
          },
          "Classifications" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "InitialSituation" : {
            "type" : "string"
          },
          "Objective" : {
            "type" : "string"
          },
          "UseCase" : {
            "type" : "string"
          },
          "ExpectedResult" : {
            "type" : "string"
          },
          "Notes" : {
            "type" : "string"
          },
          "AvailableBudget" : {
            "$ref" : "#/components/schemas/Money"
          },
          "AvailableFTE" : {
            "$ref" : "#/components/schemas/Money"
          },
          "LinkedProfiles" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "LinkedRequests" : {
            "$ref" : "#/components/schemas/Mutations"
          }
        }
      },
      "FundingRound" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "AnnouncedDate" : {
            "type" : "string",
            "nullable" : true
          },
          "Type" : {
            "type" : "string",
            "nullable" : true
          },
          "NumberOfInvestors" : {
            "type" : "integer",
            "nullable" : true
          },
          "Raised" : {
            "$ref" : "#/components/schemas/Money"
          },
          "LeadInvestors" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Shareholder" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "RoundDate" : {
            "type" : "string"
          },
          "Type" : {
            "type" : "string"
          },
          "Invested" : {
            "type" : "object",
            "properties" : {
              "Amount" : {
                "type" : "string"
              },
              "Currency" : {
                "type" : "string"
              }
            }
          },
          "Shares" : {
            "type" : "string"
          },
          "Shareholder" : {
            "$ref" : "#/components/schemas/ProfileSimple"
          }
        }
      },
      "Competitor" : {
        "type" : "object",
        "properties" : {
          "CompetitorProfile" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "Logo" : {
                "type" : "string",
                "description" : "URL to image"
              }
            }
          }
        }
      },
      "Profile" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "LastModifiedDate" : {
            "type" : "string"
          },
          "Type" : {
            "$ref" : "#/components/schemas/ProfileType"
          },
          "Name" : {
            "type" : "string"
          },
          "Keywords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Keyword"
            }
          },
          "Classifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Classification"
            }
          },
          "About" : {
            "type" : "string",
            "nullable" : true
          },
          "Nutshell" : {
            "type" : "string",
            "nullable" : true
          },
          "Videolink" : {
            "type" : "string",
            "nullable" : true
          },
          "StrategicFit" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyDifferentiators" : {
            "type" : "string",
            "nullable" : true
          },
          "ReferenceCustomers" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyPartners" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyActivities" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyResources" : {
            "type" : "string",
            "nullable" : true
          },
          "ValuePropositions" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomerRelationships" : {
            "type" : "string",
            "nullable" : true
          },
          "Channels" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomerSegments" : {
            "type" : "string",
            "nullable" : true
          },
          "CostStructure" : {
            "type" : "string",
            "nullable" : true
          },
          "RevenueStreams" : {
            "type" : "string",
            "nullable" : true
          },
          "Notes" : {
            "type" : "string",
            "nullable" : true
          },
          "Nominated" : {
            "type" : "string",
            "nullable" : true
          },
          "Industries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          },
          "Products" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          },
          "BusinessModelUSP" : {
            "type" : "string",
            "nullable" : true
          },
          "Source" : {
            "type" : "string",
            "nullable" : true
          },
          "Input" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "Established" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "MandatoryProperties" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProfileProperties"
                }, {
                  "description" : "will be `NULL` when there are no mandatory properties."
                } ]
              }
            }
          },
          "ScoutingStatus" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "BatchStatus" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "Stage" : {
            "type" : "object",
            "description" : "Available only on type `COMPANY`",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "BusinessModel" : {
            "type" : "object",
            "description" : "Available only on type `COMPANY`",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "RevenueModel" : {
            "type" : "object",
            "description" : "Available only on type `COMPANY`",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "Logo" : {
            "type" : "string",
            "description" : "URL to image"
          },
          "Cover" : {
            "type" : "string",
            "description" : "URL to image"
          },
          "Headquarter" : {
            "$ref" : "#/components/schemas/Office"
          },
          "OtherOffices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Office"
            }
          },
          "People" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Person"
            }
          },
          "LikeCount" : {
            "type" : "integer"
          },
          "DislikeCount" : {
            "type" : "integer"
          },
          "UserLike" : {
            "type" : "integer",
            "description" : "`0` = User disliked the profile.<br> `1` = User liked the profile.<br> `null` = User neither liked or disliked the profile.\n"
          },
          "LegalForm" : {
            "$ref" : "#/components/schemas/LegalForm"
          },
          "Finance" : {
            "$ref" : "#/components/schemas/Finance"
          },
          "QuickInfo" : {
            "$ref" : "#/components/schemas/QuickInfo"
          },
          "isArchived" : {
            "type" : "boolean"
          },
          "ArchivedReason" : {
            "type" : "string"
          },
          "Responsible" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "Avatar" : {
                "type" : "string"
              },
              "Email" : {
                "type" : "string"
              },
              "Telephone" : {
                "type" : "string"
              }
            }
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "isReadOnly" : {
            "type" : "boolean",
            "description" : "Says if the current user has write or read-only access"
          },
          "Duplicates" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                },
                "isArchived" : {
                  "type" : "boolean"
                },
                "Logo" : {
                  "type" : "string"
                }
              }
            }
          },
          "DescriptionUSP" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "FieldsOfApplication" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "PotentialDrawbacks" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "FurtherRemarks" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "CustomerSatisfaction" : {
            "type" : "array",
            "description" : "Available only on type `TECHNOLOGY`",
            "items" : {
              "$ref" : "#/components/schemas/TechnologySetting"
            }
          },
          "MarketSegments" : {
            "type" : "array",
            "description" : "Available only on type `TECHNOLOGY`",
            "items" : {
              "$ref" : "#/components/schemas/TechnologySetting"
            }
          },
          "CompetitorProductID" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "Video" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "Link" : {
            "type" : "string",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "SolutionsGoals" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY` (Value range 0-100)",
            "nullable" : true
          },
          "DevelopmentNumberOfPatentsID" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "HypeCyclePositionID" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "LevelOfInnovativenessID" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          },
          "PotentialDevelopmentPossibilities" : {
            "type" : "array",
            "description" : "Available only on type `TECHNOLOGY`",
            "items" : {
              "$ref" : "#/components/schemas/TechnologySetting"
            }
          },
          "RealizationComplexityID" : {
            "type" : "integer",
            "description" : "Available only on type `TECHNOLOGY`",
            "nullable" : true
          }
        }
      },
      "ProfileSimple" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Type" : {
            "$ref" : "#/components/schemas/ProfileType"
          },
          "Name" : {
            "type" : "string"
          },
          "Logo" : {
            "type" : "string",
            "description" : "URL to logo image"
          },
          "LogoDefault" : {
            "type" : "string",
            "description" : "Relative URL to default logo image"
          },
          "LegalForm" : {
            "$ref" : "#/components/schemas/LegalForm"
          },
          "Status" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "ID" : {
                "type" : "number"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "LastModifiedDate" : {
            "type" : "string"
          },
          "LastModifiedDateReadable" : {
            "type" : "string",
            "description" : "The last modified date in readable format"
          },
          "Stage" : {
            "type" : "object",
            "nullable" : true,
            "description" : "Available only on type `COMPANY`",
            "properties" : {
              "ID" : {
                "type" : "number"
              },
              "Name" : {
                "type" : "string"
              }
            }
          },
          "Score" : {
            "type" : "number",
            "description" : "Assessments Total-Score"
          }
        }
      },
      "ProfileMutations" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Type" : {
            "$ref" : "#/components/schemas/ProfileType"
          },
          "Keywords" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Classifications" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "About" : {
            "type" : "string"
          },
          "Nutshell" : {
            "type" : "string"
          },
          "Videolink" : {
            "type" : "string"
          },
          "StrategicFit" : {
            "type" : "string"
          },
          "KeyDifferentiators" : {
            "type" : "string",
            "nullable" : true
          },
          "ReferenceCustomers" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyPartners" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyActivities" : {
            "type" : "string",
            "nullable" : true
          },
          "KeyResources" : {
            "type" : "string",
            "nullable" : true
          },
          "ValuePropositions" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomerRelationships" : {
            "type" : "string",
            "nullable" : true
          },
          "Channels" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomerSegments" : {
            "type" : "string",
            "nullable" : true
          },
          "CostStructure" : {
            "type" : "string",
            "nullable" : true
          },
          "RevenueStreams" : {
            "type" : "string",
            "nullable" : true
          },
          "Notes" : {
            "type" : "string",
            "nullable" : true
          },
          "Nominated" : {
            "type" : "string",
            "nullable" : true
          },
          "BusinessModelUSP" : {
            "type" : "string"
          },
          "Source" : {
            "type" : "string"
          },
          "Established" : {
            "type" : "string"
          },
          "Industries" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "Products" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "Status" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "ScoutingStatus" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "BatchStatus" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "Stage" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "BusinessModel" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "RevenueModel" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "Logo" : {
            "type" : "string",
            "description" : "Base64 binary image",
            "format" : "byte"
          },
          "LogoFile" : {
            "type" : "string",
            "description" : "Binary image file",
            "format" : "binary"
          },
          "Cover" : {
            "type" : "string",
            "description" : "Base64 binary image",
            "format" : "byte"
          },
          "CoverMobile" : {
            "type" : "string",
            "description" : "Base64 binary image",
            "format" : "byte"
          },
          "CoverFile" : {
            "type" : "string",
            "description" : "Binary image file",
            "format" : "binary"
          },
          "Headquarter" : {
            "$ref" : "#/components/schemas/Office"
          },
          "OtherOffices" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "People" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "LegalForm" : {
            "$ref" : "#/components/schemas/LegalForm"
          },
          "Finance" : {
            "type" : "object",
            "description" : "Available only on type `COMPANY` or `SHAREHOLDER`",
            "properties" : {
              "Employees" : {
                "type" : "string",
                "enum" : [ "1-10", "11-50", "51-100", "101-250", "251-500", "501-1000", "1001-5000", "5001-10000", "10001+" ]
              },
              "Revenue" : {
                "$ref" : "#/components/schemas/Money"
              },
              "EBIT" : {
                "$ref" : "#/components/schemas/Money"
              },
              "Shareholders" : {
                "$ref" : "#/components/schemas/Mutations"
              },
              "FundingRounds" : {
                "$ref" : "#/components/schemas/Mutations"
              }
            }
          },
          "Assessments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Mutations"
            }, {
              "description" : "Assessments can not be removed or added"
            } ]
          },
          "Projects" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Competitors" : {
            "$ref" : "#/components/schemas/Mutations"
          }
        }
      },
      "QuickInfo" : {
        "type" : "object",
        "description" : "Quick informations of an Profile",
        "properties" : {
          "AssessmentsTotalScore" : {
            "type" : "number"
          }
        }
      },
      "RequestMutations" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string"
          },
          "Responsibles" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Keywords" : {
            "$ref" : "#/components/schemas/Mutations"
          },
          "Department" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "number"
              }
            }
          },
          "Maturity" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "number"
              }
            }
          },
          "InvolvedBusinessUnits" : {
            "type" : "string"
          },
          "TimeHorizon" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "number"
              }
            }
          },
          "InitialSituation" : {
            "type" : "string"
          },
          "Objective" : {
            "type" : "string"
          },
          "ExpectedResultStructure" : {
            "type" : "string"
          },
          "Recommendation" : {
            "type" : "string"
          },
          "Assessment" : {
            "type" : "string"
          },
          "Limitations" : {
            "type" : "string"
          },
          "PreviousLearnings" : {
            "type" : "string"
          },
          "PriorityScore" : {
            "type" : "object",
            "properties" : {
              "Urgency" : {
                "type" : "integer"
              },
              "Impact" : {
                "type" : "integer"
              },
              "Resources" : {
                "type" : "integer"
              },
              "Description" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "RequestProperties" : {
        "description" : "Is used for determining access to properties or aliases for properties.<br><br>Any of those properties can be ommited, which identifies as \"no access\" or \"not set/defined\".",
        "properties" : {
          "Description" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Responsibles" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Department" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Maturity" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "InvolvedBusinessUnits" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "TimeHorizon" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "InitialSituation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Recommendation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Assessment" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Limitations" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Objective" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ExpectedResultStructure" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "PreviousLearnings" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "PriorityScore" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Matches" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Keywords" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Longlist" : {
            "type" : "integer"
          }
        }
      },
      "Request" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "UserID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "LastModifiedDate" : {
            "type" : "string"
          },
          "Responsibles" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "FirstName" : {
                  "type" : "string"
                },
                "LastName" : {
                  "type" : "string"
                },
                "Name" : {
                  "type" : "string"
                },
                "Avatar" : {
                  "type" : "string"
                }
              }
            }
          },
          "Name" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Keywords" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "DepartmentID" : {
            "type" : "integer"
          },
          "MaturityID" : {
            "type" : "integer"
          },
          "InvolvedBusinessUnits" : {
            "type" : "string"
          },
          "TimeHorizonID" : {
            "type" : "integer"
          },
          "RecommendationID" : {
            "type" : "integer"
          },
          "InitialSituation" : {
            "type" : "string"
          },
          "Objective" : {
            "type" : "string"
          },
          "ExpectedResultStructure" : {
            "type" : "string"
          },
          "Assessment" : {
            "type" : "string"
          },
          "Limitations" : {
            "type" : "string"
          },
          "PreviousLearings" : {
            "type" : "string"
          },
          "PriorityScore" : {
            "type" : "object",
            "properties" : {
              "Urgency" : {
                "type" : "integer"
              },
              "Impact" : {
                "type" : "integer"
              },
              "Resources" : {
                "type" : "integer"
              },
              "Description" : {
                "type" : "string"
              }
            }
          },
          "Longlist" : {
            "$ref" : "#/components/schemas/ProfileSimple"
          },
          "isLonglistAccessGranted" : {
            "type" : "boolean"
          },
          "ValidStatuses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isDeleted" : {
            "type" : "boolean"
          },
          "isReadOnly" : {
            "type" : "boolean"
          },
          "AccessRules" : {
            "$ref" : "#/components/schemas/RequestProperties"
          }
        }
      },
      "Notification" : {
        "type" : "object",
        "properties" : {
          "CreatedDate" : {
            "type" : "string"
          },
          "CreatedDateReadable" : {
            "type" : "string"
          },
          "Type" : {
            "type" : "string",
            "enum" : [ "LOGOUT", "PROFILE_RESPONSIBLE", "REGISTRATION", "PROFILE_CHANGED", "PROFILE_DOCUMENT", "PROFILE_GALLERY", "PROFILE_ASSESSMENT", "PROFILE_TASK", "PROFILE_ARCHIVE", "PROFILE_MILESTONE_CHANGED", "PROFILE_MILESTONE_RESPONSIBLE", "ACTIVITY_PARTICIPANT" ]
          },
          "Params" : {
            "type" : "object"
          },
          "User" : {
            "$ref" : "#/components/schemas/UserSimple"
          },
          "SeenDate" : {
            "type" : "string"
          },
          "UpdateID" : {
            "type" : "string",
            "description" : "Identifier to update the notification as seen."
          },
          "Profile" : {
            "$ref" : "#/components/schemas/ProfileSimple"
          },
          "Label" : {
            "type" : "string"
          },
          "ActionLabel" : {
            "type" : "string"
          },
          "Changes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "NewsItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Title" : {
            "type" : "string"
          },
          "PublishedDate" : {
            "type" : "string"
          },
          "URL" : {
            "type" : "string"
          },
          "Source" : {
            "type" : "string"
          },
          "PreviewImageURL" : {
            "type" : "string"
          }
        }
      },
      "NewsStreamItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "Type" : {
            "type" : "string",
            "enum" : [ "NEWS", "PROFILE_CREATED", "PROFILE_CHANGED", "ACTIVITY_CREATED" ]
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "CreatedDateReadable" : {
            "type" : "string"
          },
          "CursorKey" : {
            "type" : "string"
          },
          "News" : {
            "$ref" : "#/components/schemas/NewsItem"
          },
          "Profile" : {
            "$ref" : "#/components/schemas/ProfileSimple"
          },
          "Activity" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "User" : {
            "$ref" : "#/components/schemas/UserSimple"
          }
        }
      },
      "ActivityType" : {
        "type" : "string",
        "enum" : [ "SYSTEM", "CALL", "EVENT", "MEETING", "NOTE", "TASK" ]
      },
      "Activity" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "LastModifiedDate" : {
            "type" : "string"
          },
          "Type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "User" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "Avatar" : {
                "type" : "string"
              }
            }
          },
          "Participants" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "Avatar" : {
                "type" : "string"
              }
            }
          },
          "Responsible" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "Avatar" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "CallActivity" : {
        "type" : "object",
        "properties" : {
          "WhenDate" : {
            "type" : "string"
          },
          "Participants" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          },
          "Notes" : {
            "type" : "string"
          }
        },
        "required" : [ "WhenDate", "Participants" ]
      },
      "EventActivity" : {
        "type" : "object",
        "properties" : {
          "WhenDate" : {
            "type" : "string"
          },
          "Participants" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          },
          "Where" : {
            "type" : "string"
          },
          "Notes" : {
            "type" : "string"
          }
        },
        "required" : [ "WhenDate", "Participants", "Where" ]
      },
      "MeetingActivity" : {
        "type" : "object",
        "properties" : {
          "WhenDate" : {
            "type" : "string"
          },
          "Participants" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "integer"
                },
                "Name" : {
                  "type" : "string"
                }
              }
            }
          },
          "Where" : {
            "type" : "string"
          },
          "Notes" : {
            "type" : "string"
          }
        },
        "required" : [ "WhenDate", "Participants", "Where" ]
      },
      "NoteActivity" : {
        "type" : "object",
        "properties" : {
          "Message" : {
            "type" : "string"
          }
        },
        "required" : [ "Message" ]
      },
      "TaskActivity" : {
        "type" : "object",
        "properties" : {
          "Responsible" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "DeadlineDate" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "TaskProperties" : {
            "$ref" : "#/components/schemas/ProfileProperties"
          }
        },
        "required" : [ "Responsible", "DeadlineDate", "TaskProperties" ]
      },
      "MilestoneActivity" : {
        "type" : "object",
        "properties" : {
          "Responsible" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          },
          "DeadlineDate" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Project" : {
            "type" : "object",
            "properties" : {
              "ID" : {
                "type" : "integer"
              }
            }
          }
        },
        "required" : [ "Responsible", "DeadlineDate", "Description" ]
      },
      "ProfileProperties" : {
        "type" : "object",
        "description" : "Is used for determining access to properties, validating mandatory properties or aliases for properties.<br><br>Any of those properties can be ommited, which identifies as \"no access\" or \"not set/defined\".",
        "properties" : {
          "Overview" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Nutshell" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Videolink" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "About" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "StrategicFit" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "KeyDifferentiators" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ReferenceCustomers" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "KeyPartners" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "KeyActivities" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "KeyResources" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ValuePropositions" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "CustomerRelationships" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Channels" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "CustomerSegments" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "CostStructure" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "RevenueStreams" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Notes" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Nominated" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Industries" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Products" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ScoutingStatus" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "BatchStatus" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "BusinessModelUSP" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Classifications" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Keywords" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Established" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Source" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Status" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Stage" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Input" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "BusinessModel" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "RevenueModel" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Headquarter" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "OtherOffices" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "People" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Responsible" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Assessments" : {
            "oneOf" : [ {
              "type" : "boolean",
              "description" : "When only boolean is provided, it means all dimensions are available, otherwise the DimensionID's are provided for each dimension which are available."
            }, {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "DimensionID" : {
                    "type" : "boolean"
                  }
                }
              }
            } ]
          },
          "Projects" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Gallery" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Documents" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Finance" : {
            "type" : "object",
            "properties" : {
              "KPIs" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "Shareholders" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "FundingRounds" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "Employees" : {
                "type" : "string",
                "description" : "Currently only for Alias"
              },
              "TotalFunding" : {
                "type" : "string",
                "description" : "Currently only for Alias"
              }
            }
          },
          "Context" : {
            "type" : "object",
            "properties" : {
              "Competitors" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              }
            }
          },
          "Name" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "LegalForm" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "Activities" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "RegistrationForms" : {
            "description" : "Currenty only for creating a Task",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "FormID" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "ProfileBackground" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ProfileInformation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "ContactInformation" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "string"
            } ]
          },
          "CompletenessIndicator" : {
            "oneOf" : [ {
              "type" : "boolean"
            }, {
              "type" : "strin"
            } ]
          }
        }
      }
    }
  }
}