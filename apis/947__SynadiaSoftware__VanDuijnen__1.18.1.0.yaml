penapi: 3.0.0
info:
  version: "1.18.1.0"
  title: 'API Dashbar'
  description: 'API for the Van Duijnen Dashbar platform'


servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SynadiaSoftware/VanDuijnen/1.0.2.0
  - description: Test server Version 1.0.2.0
    url: https://test.dashbar.nl/api/v1
  - description: Acc server Version 1.0.2.0
    url: https://acc.dashbar.nl/api/v1
  - description: Production server Version 1.0.2.0
    url: https://portal.dashbar.nl/api/v1


components:
  responses:
    200:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            error_description:
              type: string
              example: invalid locationId

    Location:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: Int32
                example: 1
              locationId:
                type: integer
                format: Int32
                example: 3000001
              name:
                type: string
                example: VD Kroeg
              createdAt:
                type: string
                example: '2018-03-08 03:03:15.343710'
                description: Times and dates being sent to and from the API are in UTC. The format that should be used is YYYY-MM-DD hh:mm:ss.ssssss, where the letters have the meaning as specified in ISO 8601.
              updatedAt:
                type: string
                example: null
                description: Times and dates being sent to and from the API are in UTC. The format that should be used is YYYY-MM-DD hh:mm:ss.ssssss, where the letters have the meaning as specified in ISO 8601.
     
    NewAlerts:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - Error
                  - Warning
                example: Warning
                description: The type of alert.
              message:
                type: string
                description: The error/warning message
    
    NewTransactions:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              transactionType:
                type: string
                nullable: true
                enum:
                  - Sales
                  - Maintenance
                  - Cleaning
                  - Calibration
                example: Sales
                description: The type of sales. When the value is null the default type will be Sales.
              cardRfid:
                type: integer
                format: Int64
                nullable: true
                example: 12345678
                description: The RFID of the card that is used.
              plu:
                type: integer
                format: Int32
                example: 5
              unitsServed:
                type: integer
                format: Int32
                nullable: true
                example: 220
                description: The value in milliliters that have been served. If the served units is null the default customer product value is taken.
              price:
                type: integer
                format: Int32
                nullable: true
                example: 250
                description: The value in cents (250 = 2,50 Euro). If the price is null the default customer product price is taken.
    
    Empty:
      type: object
      
    Transaction:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: Int64
                example: 1
              stationId:
                type: integer
                format: Int32
                example: 4
              plu:
                type: integer
                format: Int32
                example: 5
              cardRfid:
                type: integer
                format: Int32
                example: 12345678
              unitsServed:
                type: integer
                format: Int32
                example: 220
                description: The value in milliliters that have been served.
              transactionType:
                type: string
                enum:
                  - Sales
                  - Maintenance
                  - Cleaning
                  - Calibration
                example: Sales
              price:
                type: integer
                format: Int32
                example: 250
                description: The value in cents (250 = 2,50 Euro)
              createdAt:
                type: string
                example: '2018-03-08 03:03:15.343710'
                description: Times and dates being sent to and from the API are in UTC. The format that should be used is YYYY-MM-DD hh:mm:ss.ssssss, where the letters have the meaning as specified in ISO 8601.
                
        links: 
          type: object
          properties:
            first:
              type: string
              example: https://portal.dashbar.nl/api/v1/3000001/transactions?page=2
            last:
              type: string
              example: https://portal.dashbar.nl/api/v1/3000001/transactions?page=61
            prev:
              type: string
              example: https://portal.dashbar.nl/api/v1/3000001/transactions?page=1
            next:
              type: string
              example: https://portal.dashbar.nl/api/v1/3000001/transactions?page=3
              
        meta: 
          type: object
          properties:
            current_page:
              type: integer
              format: Int32
              example: 2
            from:
              type: integer
              format: Int32
              example: 1
            last_page:
              type: integer
              format: Int32
              example: 61
            path:
              type: string
              example: https://portal.dashbar.nl/api/v1/3000001/transactions
            per_page:
              type: integer
              format: Int32
              example: 10
            to:
              type: integer
              format: Int32
              example: 10
            total:
              type: integer
              format: Int32
              example: 604

    User:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: Int32
                example: 1
              firstName:
                type: string
                example: Van Duijnen
              lastName:
                type: string
                example: Bot
              email:
                type: string
                example: bot@vanduijnen.nl
              state:
                type: string
                enum:
                  - Active
                  - Disabled
                  - New
                example: Active
              createdAt:
                type: string
                example: '2018-03-08 03:03:15.343710'
                description: Times and dates being sent to and from the API are in UTC. The format that should be used is YYYY-MM-DD hh:mm:ss.ssssss, where the letters have the meaning as specified in ISO 8601.
              updatedAt:
                type: string
                example: null
                description: Times and dates being sent to and from the API are in UTC. The format that should be used is YYYY-MM-DD hh:mm:ss.ssssss, where the letters have the meaning as specified in ISO 8601.


security:
  - bearerAuth: []
      
      
paths:
  /locations:
    get:
      description: Gets the locations for the current user.
      tags:
        - Locations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
  
  /location/{locationId}/part-id/{partId}/alerts:
    post:
      description: Inserts an external alert for the specified location ID.
      tags:
        - Alerts
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the location.
        - in: path
          name: partId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the part.
      requestBody:
        description: The alert to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAlerts'

      responses:
        201:
          description: '{}'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          
        400:
          description: Most likely a parameter is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      description: Delete the errors for the specified location and part id.
      tags:
        - Alerts
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the location.
        - in: path
          name: partId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the part.
      responses:
        200:
          description: '{}'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        400:
          description: Most likely a parameter is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /location/{locationId}/transactions:
    get:
      description: Gets the transactions from the specified location ID.
      tags:
        - Transactions
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the location.
        - in: query
          name: page
          schema:
            type: integer
            format: Int32
          required: false
          description: Optional page number.

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
        400:
          description: Most likely a parameter is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
  /location/{locationId}/transactions/{lastTransactionId}:
    get:
      description: Gets all the new transaction from the specified location and last received transaction id.
      tags:
        - Transactions
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the location.
        - in: path
          name: lastTransactionId
          schema:
            type: integer
            format: Int64
          required: true
          description: The last received transaction id.
        - in: query
          name: page
          schema:
            type: integer
            format: Int64
          required: false
          description: Optional page number.

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
        400:
          description: Most likely a parameter is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                 
  /location/{locationId}/part-id/{partId}/transactions:
    post:
      description: Inserts an external transaction for the specified location ID.
      tags:
        - Transactions
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the location.
        - in: path
          name: partId
          schema:
            type: integer
            format: Int32
          required: true
          description: The ID of the part.
      requestBody:
        description: The transaction to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransactions'
      responses:
        201:
          description: '{}'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
                
        400:
          description: Most likely a parameter is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  /whoami:
    get:
      description: Gets the current user.
      tags:
        - General
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          headers:
            X-RateLimit-Limit:
              description: 60 requests per minute is allowed
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests per minute
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds.
              schema:
                type: integer