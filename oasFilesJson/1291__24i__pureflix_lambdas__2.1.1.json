{"openapi":"3.0.2","info":{"title":"Pure Flix Lambdas API","version":"2.1.1"},"servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/24i/pureflix_lambdas/2.1.0"},{"url":"https://wuxfdb4hkd.execute-api.us-west-2.amazonaws.com/throttled/"}],"security":[{"ApiAuthKey":[]}],"components":{"securitySchemes":{"ApiAuthKey":{"type":"apiKey","in":"header","name":"X-API-KEY"}},"parameters":{"token":{"name":"token","in":"query","description":"User token","required":true,"schema":{}}},"schemas":{"ContractSchema":{"type":"object","properties":{"id":{"type":"string","description":"The globally unique URI of this object."},"guid":{"type":"string","description":"An alternate identifier for this object that is unique within the owning account."},"updated":{"type":"number","description":"The date and time this object was last modified."},"title":{"type":"string","description":"The name of this object."},"description":{"type":"string","description":"The description of this object."},"added":{"type":"number","description":"The date and time that this object was created"},"ownerId":{"type":"string","description":"The id of the account that owns this object."},"addedByUserId":{"type":"string","description":"The id of the user that created this object."},"updatedByUserId":{"type":"string","description":"The id of the user that last modified this object."},"version":{"type":"number","description":"This object's modification version."},"locked":{"type":"boolean","description":"if the contract is locked"},"active":{"type":"boolean","description":"Whether the contract is active. If a contract fails to activate (due to authorization failure or other reason), that contract will have an active value of false and a deactivatedDate value of null."},"currency":{"type":"string","description":"The currency in which this contract is executed.","default":"USD"},"originalProductId":{"type":"string","description":"The ID of the Product object that contained the Subscription object referenced by originalSubscriptionId."},"originalSubscriptionId":{"type":"string","description":"The ID of the Subscription object from which this contract was created."},"subscriptionUnits":{"type":"string","description":"The unit of time used to schedule the subscription-related events described by billingFrequency and minimumSubscriptionPeriod.","enum":["month","yeah"]},"billingFrequency":{"type":"number","description":"The number of subscriptionUnits between bills, if the subscription is a recurring type."},"subscriptionLength":{"type":"number","description":"The duration for this contract, specified in subscriptionUnits."},"requiredContractDuration":{"type":"number","description":"The shortest subscription duration allowed for this contract, specified in subscriptionUnits."},"contractStartDate":{"type":"number","description":"The date the contract begins."},"autoRenew":{"type":"boolean","description":"Whether the contract will be renewed automatically when it ends."},"autoRollover":{"type":"boolean","description":"If true and rolloverSubscriptionId is defined, when the contract ends, a new contract will be created from rolloverSubscriptionId"},"extendable":{"type":"boolean","description":"Whether the contract can be extended by a CSR or admin"},"taxIncluded":{"type":"boolean","description":"Whether the amount includes tax."},"contractEndDate":{"type":"number","description":"The date the contract ends."},"billingSchedule":{"type":"array","description":"An array of BillingScheduleInfo dependent objects that describe the subscription's pricing over time.","items":{"type":"object","properties":{"startDate":{"type":"number","description":"The first date to use this amount"},"endDate":{"type":"number","description":"The last date to use this amount."},"amount":{"type":"number","description":"The amount in the currency field of the Contract object"},"subjectPolicyIds":{"type":"array","description":"The IDs of the SubjectPolicy objects that enforce the contract during this period","items":{"type":"string"}},"isFreeTrial":{"type":"boolean","description":"Whether this billing schedule entry is a free trial period."}}}},"refundOnCancel":{"type":"boolean","description":"How to compute the user's final bill."},"billingCommencement":{"type":"number","description":"The day of the billing cycle on which billing starts."},"rolloverSubscriptionId":{"type":"string","description":"The ID of the subscription from which to create a new contract when the current contract ends."},"changeableSubscriptionIds":{"type":"array","description":"A list of subscriptions within which the customer can change without incurring a penalty.","items":{"type":"string"}},"requiredSubscriptionIds":{"type":"array","description":"","deprecated":true,"items":{"type":"string"}},"activePaymentInstrumentId":{"type":"string","description":"The ID of the current payment instrument."},"householdId":{"type":"string","description":"Deprecated. The ID of the household, if any, that can access the contents of the subscription.","deprecated":true},"promotionUseCountIds":{"type":"string","description":"The IDs of the PromotionUseCount objects related to this contract."},"giftVoucherPromotionUseCountIds":{"type":"array","description":"","items":{"type":"string"}},"contractType":{"type":"string","description":"The type of subscription on which the contract was created."},"baseContractId":{"type":"string","description":"For add-on contracts, the ID of the contract on which this contract is based."},"deactivatedDate":{"type":"number","description":"When, if ever, the contract was deactivated. If a contract fails to activate (due to authorization failure or other reason), that contract will have an active value of false and a deactivatedDate value of null."},"activitySummary":{"type":"object","description":"A generated summary of the contract's activity.","properties":{"daysActive":{"type":"number","description":"The number of days the contract was or has been active"},"daysRemaining":{"type":"number","description":"The number of days remaining on the contract, not including the current day."},"daysUnused":{"type":"number","description":"The number of days that were not used after the contract was deactivated."},"inPromotion":{"type":"boolean","description":"Whether the contract has a promotion applied at the time"},"redeemedPromotion":{"type":"boolean","description":"Whether the end-user customer has applied a promotion to the contract."},"inGiftVoucher":{"type":"boolean","description":"Whether the contract has a gift voucher applied at the time."},"redeemedGiftVoucher":{"type":"boolean","description":"Whether the end-user customer has applied a gift voucher to the contract."}}},"suspended":{"type":"boolean","description":"Whether this contract is suspended."},"contractState":{"type":"string","description":"The current state of the contract, based on the values of the active, suspended, and deactivatedDate fields.","enum":["Active","Canceled","Created","Suspended","Unknown"]},"billingAnniversaryDate":{"type":"number","description":"The start date of billing for the contract, or the end date of the last contract suspension period, whichever is more recent."}}}}},"paths":{"/pureflix-RegisterIDM-dev":{"post":{"tags":["Auth"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"Registers a new user","description":"Registers a new user under the IDM Proxy Service Register and send the data to the Hubspot API, to register the user with the same data.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["user","g-recaptcha-response","hutk"],"properties":{"user":{"type":"object","properties":{"provided_first_name":{"type":"string","description":"User's first name"},"provided_last_name":{"type":"string","description":"User's last name"},"email":{"type":"string","description":"user email"},"email_confirmation":{"type":"string","description":"user email verification"},"password":{"type":"string","description":"user password"},"password_confirmation":{"type":"string","description":"user password confirmation"}},"required":["provided_first_name","provided_last_name","email","email_confirmation","password","password_confirmation"]},"g-recaptcha-reponse":{"type":"string","description":"recaptcha challenge response"},"hutk":{"type":"string","description":"hubspot token"}}}}}},"responses":{"200":{"description":"The user token and id in case of success, or the error on the request body","content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","description":"The URI to the created user"},"token":{"type":"string","description":"Created user token"}}}}}}}}},"/pureflix-UpdateUserProfile-dev":{"post":{"tags":["Auth"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"Updates the user email addresses and/or usernames.","description":"Updates the user email addresses and/or usernames, then sends the data to the Hubspot API, to register the user with the same data. If the user is updating the username, the email must be sent as well. If is updating the password, then only the password is required. Also can be used to update the user parental pin code (for R-Rated content playback)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"credentials":{"type":"object","properties":{"username":{"type":"string","description":"current user name (email)"},"password":{"type":"string","description":"current user password"}},"required":["username","password"]},"firstName":{"type":"string","description":"new user first name"},"lastName":{"type":"string","description":"new user last name"},"userName":{"type":"string","description":"new user username (same as email)"},"email":{"type":"string","description":"new user email (same as username)"},"password":{"type":"string","description":"new user password"},"parentalPin":{"type":"string","description":"The new parental pin to be changed. The new pin should be 4-numeric digits long."},"isParentalPinActive":{"type":"boolean","description":"the new status of the parental pin. Sets if the pin was already added and activated. Used mostly as a fallback for the users who haven't set their PINs"}},"required":["credentials"]}}}},"responses":{"200":{"description":"Empty object on response body","content":{"application/json":{"schema":{"type":"object","properties":{"updateSelfResponse":{"type":"object"}}}}}}}}},"/pureflix-ValidateParentalPin-dev":{"post":{"tags":["Auth"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"Validates the Parental PIN used to restrict R-Rated Content","description":"Validates the provided Parental PIN code. Also checks the amount of tries to validate and, if is the 3rd invalid try, locks the validation for 30 Minutes.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"pin":{"type":"string","description":"the parental pin to be validated"}},"required":["pin"]}}}},"responses":{"200":{"description":"The information about the validity of the pin, plus a locked timestamp in case the amount of tries was exceeded","content":{"application/json":{"schema":{"type":"object","properties":{"valid":{"type":"boolean","description":"if the provided pin is valid"},"hasPin":{"type":"boolean","description":"If the user has already activated the pin."},"invalidUntil":{"type":"number","description":"unix timestamp with the expiration time of the pin lock"},"currentTries":{"type":"number","description":"The amount of accumulated wrong validation attempts"}},"required":["valid","hasPin"]}}}}}}},"/pureflix-CheckUserNameAvailability-dev":{"get":{"tags":["Auth"],"parameters":[{"in":"query","name":"username","required":true,"schema":{"type":"string"},"description":"The user name to be checked"}],"summary":"Checks if the provided username is available for new user registration","description":"Checks if the provided username is available for new user registration","responses":{"200":{"description":"if the user name is available or not","content":{"application/json":{"schema":{"type":"object","properties":{"available":{"type":"boolean","description":""}}}}}}}}},"/pureflix-Contract-dev":{"post":{"tags":["Contract"],"parameters":[{"in":"query","name":"findBy","required":true,"schema":{"type":"string","enum":["email","username"]},"description":"Field to be used for the query"},{"in":"query","name":"inputValue","required":true,"schema":{"type":"string"},"description":"Value to be used in the query"},{"in":"query","name":"onlyCompContracts","required":true,"schema":{"type":"boolean"},"description":"If the contract list should be filtered with only COMP contracts"}],"summary":"Loads and checks the user contracts","description":"There are 3 new properties on the entries but they are present only if a relevant action exists for them: pendingCancel and failedBilling contain the whole action object, nextBillingDate is just a timestamp.","responses":{"200":{"description":"The list of contracts","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContractSchema"}}}}}}}},"/pureflix-ApplyPromotionToContract-dev":{"post":{"tags":["Contract"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"The applyPromotionToContract method applies promotional pricing to a contract that has already been created","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"contractId":{"type":"string","description":"The URI of the existing contract to which to apply the promotion"},"promotionCode":{"type":"string","description":"The promotion code associated with the promotion to apply"}}}}}},"responses":{"200":{"description":"The Applied Promotion data","content":{"application/json":{"schema":{"type":"object","properties":{"promotionTitle":{"type":"string","description":"The id of the promotion."},"promotionGuid":{"type":"string","description":"The guid of the promotion."},"promotionResults":{"type":"array","description":"The outcomes of the evaluations that were used for the promotion.","items":{"type":"object","properties":{"qualifiedForPromotion":{"type":"boolean","description":"Whether the order qualified for a promotion"},"metThreshold":{"type":"boolean","description":"The order met the specified threshold."},"discountedLineItem":{"type":"boolean","description":"Whether the order item was discounted by a promotion"},"discountAmount":{"type":"number","description":"The amount the price was discounted"},"numberOfSubscriptionPeriods":{"type":"number","description":"The duration of the promotion"},"contractId":{"type":"string","description":"The Id of the contract"}}}},"promotionId":{"type":"string","description":"The URI of the existing contract to which to apply the promotion"}}}}}}}}},"/pureflix-RolloverSubscription-dev":{"post":{"tags":["Contract"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"The rolloverSubscription method ends an existing contract and creates a new contract from another subscription in a single step.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"rolloverSubscription":{"type":"object","properties":{"contractId":{"type":"string","description":"The ID of an existing contract with the subscription to rollover."},"newSubscriptionId":{"type":"string","description":"The ID of the new subscription. This value is optional only when the new subscription is not provided by the Action or the Contract."},"refund":{"type":"string","description":"Whether a pro-rated refund should be issued for the portion of the previous contract that wasn't used."},"atNextAction":{"type":"boolean","description":"Whether the rollover should take place at the next Action."},"forceRollover":{"type":"boolean","description":"Whether the rollover should take place before the requiredContractDuration time has elapsed"},"ignoreOutstandingActions":{"type":"boolean","description":"Whether to ignore outstanding contract actions (e.g. Billing) when rolling the subscription over."}}}}}}}},"responses":{"200":{"description":"The id of the new contract created by the rollover action","content":{"application/json":{"schema":{"type":"object","properties":{"rolloverSubscriptionResponse":{"type":"string","description":"The id of the new contrat created by the rollover action"}}}}}}}}},"/pureflix-ReactivateSubscription-dev":{"post":{"tags":["Contract"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"The reactivateSubscription method reactivates a canceled subscription contract.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"rolloverSubscription":{"type":"object","properties":{"contractId":{"type":"string","description":"The ID of an existing contract with the subscription to rollover."},"billAmountType":{"type":"string","description":"How to bill the end user upon reactivation of the contract."}}}}}}}},"responses":{"200":{"description":"The ID of the contract that was reactivated","content":{"application/json":{"schema":{"type":"object","properties":{"reactivateSubscriptionResponse":{"type":"string","description":"The ID of the contract that was reactivated"}}}}}}}}},"/pureflix-UpdatePaymentInformation-dev":{"post":{"tags":["Contract"],"parameters":[{"$ref":"#/components/parameters/token"}],"summary":"The updatePaymentInstrument method lets users update the payment instrument of a previously created contract. Internally, it creates a new PaymentInstrument and then assigns to the specified contract","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"createPaymentInstrument":{"type":"object","properties":{"contractId":{"type":"string","description":"The ID of the contract which will be updated with the new payment instrument"},"paymentConfigurationId":{"type":"string","description":"The unique identifier of the payment gateway."},"guid":{"type":"string","description":"The guid to associate with the payment instrument created. Must be unique within the account."},"name":{"type":"string","description":"A name for the instrument. Must be unique among those created for this customer."},"expirationYear":{"type":"number","description":"The year that the payment instrument expires ."},"expirationMonth":{"type":"number","description":"The month that the payment instrument expires. This must be a value between 1 and 12, inclusive"},"last4":{"type":"string","description":"The last four digits of the card used to create this payment instrument. Only four characters are allowed."},"billingAddress":{"type":"string","description":"The billing address associated with this instrument. May be required by the payment processing system."},"properties":{"type":"object","description":"A map of properties that help describe this instrument. Required values are dependent on the payment processing system"}}}}}}}},"responses":{"200":{"description":"The method returns an empty updatePaymentInstrumentResponse object on success","content":{"application/json":{"schema":{"type":"object","properties":{"updatePaymentInstrumentResponse":{"type":"string"}}}}}}}}}}}