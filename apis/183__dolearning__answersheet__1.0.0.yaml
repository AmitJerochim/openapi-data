openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dolearning/answersheet/1.0.0
  - description: 测试主机
    url: http://dolearning.test/answersheet/api/v2
info:
  description: 答题卡API-2.0
  version: "1.0.0"
  title: 答题卡API
  contact:
    email: cong.liu@dolearning.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: managers
    description: 管理员
  - name: teachers
    description: 教师
  - name: students
    description: 学生
paths:
  /drafts/{subjectStageId}:
    parameters:
      - in: path
        name: subjectStageId
        description: 学科ID
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - managers
        - teachers
      summary: 获取该学科下的草稿
      operationId: getDraft
      responses:
        '200':
          description: 草稿
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
    patch:
      tags:
        - managers
        - teachers
      summary: 更新该草稿
      operationId: updateDraft
      requestBody:
        $ref: '#/components/requestBodies/CreateTemplateRequest'
      responses:
        '202':
          description: 草稿已更新
          content:
            application/json:
              schema:
                type: object
                properties:
                  template_id:
                    type: integer
                    format: int32
  /templates:
    get:
      tags:
        - managers
        - teachers
      summary: 答题卡模板列表
      operationId: searchTemplate
      description: 查看答题卡模板列表
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/TemplateFilter'
      responses:
        '200':
          description: 模板列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Template'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '400':
          description: bad input parameter
  /templates/{templateId}:
    get:
      tags:
        - managers
        - teachers
      summary: 获取模板内容
      operationId: findTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 模板内容
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
  /templates/{templateId}/publish:
    post:
      tags:
        - managers
        - teachers
      summary: 发布任务
      operationId: publishTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/PublishRequest'
      responses:
        '200':
          description: 发布成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        items:
                          type: integer
  /tasks/{status}:
    parameters:
      - in: path
        name: status
        required: true
        schema:
          type: string
          enum:
            - started
            - created
            - closed
            - archived
    get:
      tags:
        - managers
        - teachers
      summary: 获取任务列表
      operationId: searchTasks
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/TaskFilter'
        - in: query
          name: page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 任务列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  meta:
                    $ref: '#/components/schemas/Meta'
  /tasks:
    parameters:
      - in: path
        name: status
        required: true
        schema:
          type: string
          enum:
            - started
            - created
            - closed
            - archived
    get:
      tags:
        - managers
        - teachers
      summary: 获取所有任务列表
      operationId: searchAllTasks
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - started
              - created
              - closed
              - archived
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/TaskFilter'
        - in: query
          name: page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 任务列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  meta:
                    $ref: '#/components/schemas/Meta'
  /tasks/{taskId}:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - managers
        - teachers
      summary: 获取任务信息
      operationId: findTask
      parameters:
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - results
      responses:
        '200':
          description: 任务信息
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  meta:
                    $ref: '#/components/schemas/Meta'
    delete:
      tags:
        - managers
        - teachers
      summary: 删除任务
      operationId: destroyTask
      responses:
        '204':
          description: 任务已被删除
  /tasks/{taskId}/close:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - managers
        - teachers
      summary: 关闭任务
      operationId: closeTask
      responses:
        '200':
          description: 任务关闭
  /tasks/{taskId}/expose:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - managers
        - teachers
      summary: 公布答案
      operationId: exposeTask
      responses:
        '200':
          description: 公布答案
  /tasks/{taskId}/archive:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - managers
        - teachers
      summary: 归档任务
      operationId: archiveTask
      responses:
        '200':
          description: 任务已归档
  /tasks/{taskId}/results/{resultId}/review:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int32
      - in: path
        name: resultId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - managers
        - teachers
      summary: 批阅任务
      description: |
        批阅任务，可以对自动批改的结果进行修改。如果提交的批阅数量超过题目数量，则认为是附加分。
      operationId: reviewTask
      requestBody:
        $ref: '#/components/requestBodies/ReviewRequest'
      responses:
        '200':
          description: 任务批阅
  /results/{status}:
    get:
      tags:
        - students
      summary: 获取结果列表
      operationId: searchResults
      parameters:
        - in: path
          name: status
          required: true
          schema:
            type: string
            enum:
              - started
              - created
              - closed
              - archived
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/ResultFilter'
      responses:
        '200':
          description: 结果列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                  meta:
                    $ref: '#/components/schemas/Meta'
  /results:
    get:
      tags:
        - students
      summary: 获取所有结果列表
      operationId: searchAllResults
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - started
              - created
              - closed
              - archived
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/ResultFilter'
      responses:
        '200':
          description: 结果列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                  meta:
                    $ref: '#/components/schemas/Meta'
  /results/{resultId}:
    parameters:
      - in: path
        name: resultId
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - students
      summary: 获取结果的详细内容，只有关闭之后才可以
      operationId: findResult
      responses:
        '200':
          description: 结果内容
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'
  /results/{resultId}/begin:
    parameters:
      - in: path
        name: resultId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - students
      summary: 开始答题
      operationId: beginResult
      responses:
        '200':
          description: 结果内容
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'
  /results/{resultId}/answer:
    parameters:
      - in: path
        name: resultId
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - students
      summary: 提交
      operationId: answerResult
      requestBody:
        $ref: '#/components/requestBodies/AnswerRequest'
      responses:
        '200':
          description: 结果内容
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      server_time:
                        type: integer
                        format: int32
                        description: 服务端的时间戳
components:
  requestBodies:
    CreateTemplateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTemplateRequest'
    PublishRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublishRequest'
    ReviewRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReviewRequest'
    AnswerRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnswerRequest'
  schemas:
    BaseTask:
      type: object
      required:
        - id
        - name
        - subject_stage
        - teacher
        - papers_count
        - analysis_count
        - questions_count
        - results_count
        - created_at
      properties:
        id:
          type: integer
          format: int32
        school_id:
          type: integer
          format: int32
        subject_stage_relation_id:
          type: integer
          format: int32
        subject_stage:
          $ref: '#/components/schemas/SubjectStage'
        name:
          type: string
        teacher:
          $ref: '#/components/schemas/User'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        papers:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        papers_count:
          type: integer
          format: int32
        analysis_count:
          type: integer
          format: int32
        questions_count:
          type: integer
          format: int32
        results_count:
          type: integer
          format: int32
          description: 已发送的数量
        created_at:
          type: string
          format: date-time
    Template:
      type: object
      required:
        - id
        - name
        - subject_stage
        - teacher
        - papers_count
        - analysis_count
        - questions_count
        - results_count
        - created_at
      allOf:
        - $ref: '#/components/schemas/BaseTask'
    Task:
      type: object
      required:
        - id
        - name
        - subject_stage
        - teacher
        - papers_count
        - analysis_count
        - questions_count
        - results_count
        - created_at
        - start_time
        - end_time
        - close_time
        - closed_by
        - timeout
        - expose_on
        - exposed
        - expose_time
        - expose_user
        - exposed_at
      allOf:
        - $ref: '#/components/schemas/BaseTask'
        - $ref: '#/components/schemas/TaskOptions'
      properties:
        classroom:
          $ref: '#/components/schemas/Classroom'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        timeout:
          type: integer
          format: int32
        close_time:
          type: string
          format: date-time
        closed_by:
          $ref: '#/components/schemas/ClosedByEnum'
        finished_count:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
    ClosedByEnum:
      type: object
      properties:
        key:
          type: string
          enum:
            - NOBODY
            - FINISH
            - MANUAL
            - EXPIRED
            - TIMEOUT
        value:
          type: integer
        name:
          type: string
    User:
      properties:
        id:
          type: integer
          format: int32
        realname:
          type: string
      type: object
    Classroom:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Meta:
      type: object
      properties:
        current_page:
          type: integer
          format: int32
        last_page:
          type: integer
          format: int32
    CreateTemplateRequest:
      type: object
      properties:
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        papers:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: 试卷内容
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: 解析内容
        submit:
          type: boolean
          description: 保存成模板
    Resource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
          description: 类型，1-图片，2-文本，3-音频，4-视频，5-附件
        content:
          type: string
          description: 内容或url地址
        resource_id:
          type: integer
          format: int32
          description: 资源ID
    TemplateFilter:
      type: object
      properties:
        subject_stage_id:
          type: integer
          format: int32
        keyword:
          type: string
        teacher_id:
          type: integer
          format: int32
    SubjectStage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        alias:
          type: string
          description: 科目名称
    PublishRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/TaskOptions'
      required:
        - name
        - classrooms
        - students
        - start_time
        - end_time
        - timeout
        - expose_on
      properties:
        name:
          type: string
          description: 任务名称
        classrooms:
          type: array
          items:
            type: string
            description: 班级ID
        students:
          type: array
          items:
            type: integer
            format: int32
            description: 学生ID
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        timeout:
          type: integer
          format: int32
          description: 任务超时时间，单位s
    TaskOptions:
      type: object
      properties:
        expose_on:
          $ref: '#/components/schemas/ExposeEnum'
        exposed:
          type: boolean
          description: 已经公布了
        expose_user:
          $ref: '#/components/schemas/User'
        expose_time:
          type: string
          format: date-time
          description: 定时公开的时间
        exposed_at:
          type: string
          format: date-time
          description: 实际公开答案的时间
    ExposeEnum:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
          enum:
            - close # 全部完成时公开答案
            - finish # 自己完成时公开答案
            - manual # 手动公开
            - time # 定时公开
        name:
          type: string
    BaseTaskFilter:
      type: object
      properties:
        subject_stage_id:
          type: integer
          format: int32
        keyword:
          type: string
        teacher_id:
          type: integer
          format: int32
        finished:
          type: boolean
          description: 是否正常完成，true - 表示正常完成，false - 超时完成，null - 不限制
    TaskFilter:
      allOf:
        - $ref: '#/components/schemas/BaseTaskFilter'
      type: object
      properties:
        classroom_id:
          type: string
          description: 班级ID
    Result:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseTask'
        - $ref: '#/components/schemas/TaskOptions'
      required:
        - id
        - name
        - subject_stage
        - teacher
        - papers_count
        - analysis_count
        - questions_count
        - results_count
        - created_at
        - start_time
        - end_time
        - close_time
        - closed_by
        - timeout
        - expose_on
        - exposed
        - expose_time
        - expose_user
        - exposed_at
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        student:
          $ref: '#/components/schemas/User'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ReviewResponse'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        timeout: 
          type: integer
          format: int32
        close_time:
          type: string
          format: date-time
        closed_by:
          $ref: '#/components/schemas/ClosedByEnum'
        begin_time:
          type: string
          format: date-time
        finish_time:
          type: string
          format: date-time
        corrects:
          type: integer
          format: int32
          description: 正确数量
        points:
          type: number
          format: double
          description: 总分
    Answer:
      type: object
      properties:
        value:
          type: array
          items:
            type: string
            description: 学生提交的回答
    QuestionNo:
      type: object
      properties:
        type:
          type: integer
          description: 题号类型,1-阿拉伯数字，2-中文数字，3-罗马数字，4-圆圈数字
        index:
          type: integer
          description: 题号序号，从0开始
    BaseQuestion:
      type: object
      properties:
        definition:
          type: integer
          description: |
            题目的前端定义
            1-单选
            2-多选
            3-填空
            4-长单选
            5-长多选
        type:
          type: integer
          description: |
            基础类别：
            1-选择题
            2-填空题
            3-主观题
        question_no:
          type: array
          items:
            $ref: '#/components/schemas/QuestionNo'
        stem:
          type: string
          description: 题干，适用于填图题等
        value:
          type: array
          items:
            type: array
            items:
              type: string
          description: |
            每个元素都是题目的答案。例如，
            1. 多选题正确答案是AD，回答D也得分，则value的值是[['A', 'D'],['D']]
            2. 随机填空题答案是foo和bar，则value的值可能是[['foo', 'bar'], ['foo'], ['bar']]
        sub_point:
          type: array
          items:
            type: number
            format: double
          description: |
            对应value每个答案的分值，最大不超过point，至少有一个跟point相等。例如，
            1. 上面value里例1，满分2分，则sub_point是[2, 1]
            2. 上面value里例2，满分2分，则sub_point是[2, 1, 1]
            3. 对于主观题，sub_point是小题的分值
        point:
          type: number
          format: double
          description: 题目分值，默认为1，最小值0.5
        rules:
          type: object
          description: 前端定义的规则，对于学生不可见
    ChoiceQuestion:
      allOf:
        - $ref: '#/components/schemas/BaseQuestion'
      properties:
        choices:
          type: string
          description: |
            有效选项定义，由若干字母+数字表示。例如：
            1. A4: 表示有效选项：A,B,C,D
            2. A11: 表示有效选项：A,B,C,D,E,F,G,H,I,J,K
            3. YN: 表示有效选项：Y,N
            4. 是否: 表示有效选项：是,否
        multiple:
          type: boolean
          description: 是否为不定项选择
    FillingQuestion:
      allOf:
        - $ref: '#/components/schemas/BaseQuestion'
      type: object
      properties:
        blanks:
          type: integer
          format: int32
          default: 1
          description: 空格数量，默认是1，仅对填空有效
        sequential:
          type: boolean
          default: false
          description: 答案严格按照顺序，仅对填空有效
    SubjectQuestion:
      allOf:
        - $ref: '#/components/schemas/BaseQuestion'
      properties:
        template:
          type: object
          description: 要求学生提交的模板
    Question:
      oneOf:
        - $ref: '#/components/schemas/ChoiceQuestion'
        - $ref: '#/components/schemas/FillingQuestion'
        - $ref: '#/components/schemas/SubjectQuestion'
    ReviewJudgementEnum:
      type: object
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/ReviewJudgement'
        name:
          type: string
          description: 批阅结果
    ReviewJudgement:
      type: string
      enum:
        - correct # 正确
        - wrong   # 错误
        - partial # 部分正确
        - none    # 未批阅
      description: 批阅结果
    ReviewResponse:
      type: object
      properties:
        judgement:
          $ref: '#/components/schemas/ReviewJudgementEnum'
        point:
          type: number
          format: double
          description: 单题得分
        content:
          type: string
          description: 老师的批阅内容，可以是复杂的JSON
    BaseReview:
      type: object
      properties:
        judgement:
          $ref: '#/components/schemas/ReviewJudgement'
        point:
          type: number
          format: double
          description: 单题得分
        content:
          type: string
          description: 老师的批阅内容，可以是复杂的JSON
    Review:
      allOf:
        - $ref: '#/components/schemas/BaseReview'
      type: object
      properties:
        sub_reviews:
          type: array
          items:
            $ref: '#/components/schemas/BaseReview'
          description: 每个小题的得分或者每个空的得分
        machine_review:
          # 机器自动判断的结果
          $ref: '#/components/schemas/Review'
    ReviewRequest:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    ResultFilter:
      allOf:
        - $ref: '#/components/schemas/BaseTaskFilter'
    AnswerRequest:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        submit:
          type: boolean
          description: 是否提交