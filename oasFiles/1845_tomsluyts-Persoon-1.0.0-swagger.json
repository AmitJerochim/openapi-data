{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Persoon",
    "description" : "Information about residents in Antwerp - or people interacting in any way with the city - is crucial. Lots of software rely on this information like the system where you can order a driver licence.\n\nWith this service you can retrieve details about these persons like marital status, address where he/she lives, etc . Note that most data is sensitive and subject to privacy laws and rules defined by GDPR. However, this service itself does not enforce any privacy regulations. \n## Data sources\nThere are 3 master sources for this data:\n\n  1. The Belgian Rijksregister database\n  2. HERA: the cival register kept in Antwerp\n  3. manual input, through either an administrative User Interface or via this API\n  \n  We consider the first two as ```authentic``` content, meaning we accept its data and do not allow it to be changed via this or sibling API's.\n  The manual input can either be ```validated``` because the provided information is backed by (physical) evidence. Or, the manual input can be ```non-validated``` because the provider lacks sufficient evidence or is uncertain about the data itself.\n  \n## Data Model\nThe data returned about a natural person follows the [OSLO standard](https://data.vlaanderen.be/ns/persoon) for a Person. Additional information is extending the standard.\n",
    "contact" : {
      "name" : "Jos Mostmans",
      "email" : "Jos.Mostmans@digipolis.be"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/tomsluyts/Persoon/1.0.0"
  }, {
    "url" : "https://api-gw.antwerpen.be/digipolis/persoon/v6"
  } ],
  "tags" : [ {
    "name" : "Person",
    "description" : "Person related operations"
  }, {
    "name" : "System",
    "description" : "Technical operations for health checks, monitoring & caching"
  } ],
  "paths" : {
    "/persons" : {
      "get" : {
        "tags" : [ "Person" ],
        "summary" : "Returns a list of person related information.",
        "description" : "Use paging options to retrieve a list of persons and their details like name, gender, marital status, etc.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/acceptLanguage"
        }, {
          "$ref" : "#/components/parameters/nationalNumber"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/pagingStrategy"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/contentLanguage"
              }
            },
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/personen"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/persons/{id}" : {
      "get" : {
        "tags" : [ "Person" ],
        "summary" : "Retrieve one specific person by its id",
        "description" : "Returns data for one specific person with details like name, gender, marital status, etc.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/id"
        }, {
          "$ref" : "#/components/parameters/acceptJsonType"
        }, {
          "$ref" : "#/components/parameters/acceptLanguage"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/contentLanguage"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/lastModified"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/persoon"
                }
              },
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/persoonJsonld"
                }
              }
            }
          },
          "308" : {
            "$ref" : "#/components/responses/PersonMoved"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      },
      "head" : {
        "tags" : [ "Person" ],
        "summary" : "Check if a specific person exists",
        "description" : "Returns a HTTP 200 ok when the person for the given id exists, otherwise a HTTP 404",
        "parameters" : [ {
          "$ref" : "#/components/parameters/id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/lastModified"
              }
            },
            "content" : { }
          },
          "308" : {
            "$ref" : "#/components/responses/PersonMoved"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/persons/{id}/histories/{version}" : {
      "get" : {
        "summary" : "todo",
        "description" : "todo",
        "tags" : [ "Person" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/id"
        }, {
          "in" : "path",
          "name" : "version",
          "required" : true,
          "description" : "The version number of this person in the history records. This version number is formatted using the [semver](https://semver.org/) notation.",
          "schema" : {
            "type" : "string",
            "pattern" : "^((([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)$",
            "example" : "1.3.0"
          }
        }, {
          "$ref" : "#/components/parameters/acceptLanguage"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/pagingStrategy"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/contentLanguage"
              }
            },
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/personen"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/persons/refresh" : {
      "post" : {
        "summary" : "Refresh person data from their master sources",
        "description" : "With this call you can update one or more Persons data from authorative master sources like the Belgian Rijksregister. Specify the conditions in the request body to control this refresh operation.",
        "tags" : [ "Person" ],
        "requestBody" : {
          "description" : "**Tip:** Use either the ```id``` or the ```nationanumber``` as searchkeys to find Persons. \n",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "searches" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "key" : {
                          "type" : "string",
                          "description" : "Search a person based on its id (aka ```CRS Number```) or their national number using the specific format (e.g. '77.06.12-012.20').\n",
                          "pattern" : "^[0-9]{2}[.]{1}[0-9]{2}[.]{1}[0-9]{2}[-]{1}[0-9]{3}[.]{1}[0-9]{2}$",
                          "example" : "77.06.12-012.20"
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "specify if the values of the searchkeys are either  based on ```id``` (aka CRS Number) or ```nationalnumber```.",
                          "default" : "id",
                          "enum" : [ "id", "nationalnumber" ]
                        },
                        "maxAge" : {
                          "type" : "number",
                          "description" : "if the Person data in our system is older than this value in days, a refresh will be performed.",
                          "example" : 3
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No content returned, person information was not refreshed though."
          },
          "205" : {
            "description" : "No content returned, person information was refreshed."
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/persons/search" : {
      "post" : {
        "tags" : [ "Person" ],
        "summary" : "todo",
        "description" : "search persons",
        "parameters" : [ {
          "$ref" : "#/components/parameters/acceptLanguage"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/persoon"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Created",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/contentLanguage"
              }
            },
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/personen"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/status/health" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Returns the health status of this Service",
        "description" : "Returns high level information about the service according to the status &amp; [monitoring spec of Digipolis](https://github.com/digipolisantwerpdocumentation/status-monitoring)",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/healthStatus"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/status/health/components" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Returns the health status of this Service",
        "description" : "Returns information about the service and its underlying components according to the status &amp; [monitoring spec of Digipolis](https://github.com/digipolisantwerpdocumentation/status-monitoring)",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/healthStatusComponents"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    },
    "/status/health/metrics" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Returns metric information about this service",
        "description" : "Returns information about the service in a [Prometheus format](https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md)",
        "responses" : {
          "200" : {
            "description" : "Prometheus Metrics",
            "content" : {
              "text/plain; version=0.0.4" : {
                "schema" : {
                  "type" : "string",
                  "example" : "process_virtual_memory_bytes 897339392.0\nprocess_resident_memory_bytes 123064320.0\nprocess_start_time_seconds 1530601590.11\nprocess_cpu_seconds_total 2.8\nprocess_open_fds 46.0\nprocess_max_fds 1024.0\npython_info{implementation=\"CPython\",major=\"3\",minor=\"6\",patchlevel=\"5\",version=\"3.6.5\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.005\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.01\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.025\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.05\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.075\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.1\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.25\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.5\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.75\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"1.0\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"2.5\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"5.0\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"7.5\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"10.0\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"+Inf\",method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_count{method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 1.0\nflask_http_request_duration_seconds_sum{method=\"GET\",path=\"/favicon.ico\",status=\"404\"} 0.11943134200009808\nflask_http_request_duration_seconds_bucket{le=\"0.005\",method=\"POST\",path=\"/uploads\",status=\"202\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.01\",method=\"POST\",path=\"/uploads\",status=\"202\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.025\",method=\"POST\",path=\"/uploads\",status=\"202\"} 0.0\nflask_http_request_duration_seconds_bucket{le=\"0.05\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.075\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.1\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.25\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.5\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"0.75\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"1.0\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"2.5\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"5.0\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"7.5\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"10.0\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_bucket{le=\"+Inf\",method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_count{method=\"POST\",path=\"/uploads\",status=\"202\"} 1.0\nflask_http_request_duration_seconds_sum{method=\"POST\",path=\"/uploads\",status=\"202\"} 0.03629215999990265     \n"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServer"
          },
          "default" : {
            "$ref" : "#/components/responses/Unexpected"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "voogdij" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsrelatie"
        }, {
          "type" : "object",
          "description" : "Situatie waarbij een persoon die optreedt als voogd van een ander persoon en in die hoedanigheid instaat voor deze persoon en zijn goederen.\nDit is bv het geval voor minderjarigen die hun ouders zijn verloren of voor meerderjarigen die hun verstandelijke vermogens zijn verloren.\n"
        } ]
      },
      "agent" : {
        "type" : "object",
        "description" : "Iemand die of iets dat kan handelen of een effect kan teweeg brengen."
      },
      "nationaliteit" : {
        "required" : [ "nationaliteitscode" ],
        "type" : "object",
        "properties" : {
          "nationaliteitscode" : {
            "type" : "string",
            "description" : "Een landcode dat de nationaliteit weergeeft van het Persoon. Codes kan je terugvinden in deze [lijst](https://publications.europa.eu/en/web/eu-vocabularies/at-concept-scheme/-/resource/authority/country/).",
            "format" : "uri",
            "example" : "http://publications.europa.eu/resource/authority/country/BEL"
          }
        },
        "description" : "De relatie tussen een persoon en een staat, cultuur of loyaliteit.\nMerk op dat dit begrip ruimer is dan staatsburgerschap (dat zich beperkt tot de relatie met een staat). Wie de nationaliteit ve bepaald land heeft is er doorgaans ook automatisch staatsburger van. Nationaliteit wordt doorgaans automatisch verkregen door geboorte: men krijgt hetzij de nationaliteit van zijn ouders of men krijgt deze vh land waar men Inwoner van is. Men kan een bepaalde nationaliteit ook verkrijgen door naturalisatie. In principe verliest men dan zijn oorspronkelijke nationaliteit, maar dat is niet altijd zo (meervoudige nationaliteit).\n"
      },
      "contactInfo" : {
        "type" : "object",
        "properties" : {
          "aanschrijfvorm" : {
            "type" : "string",
            "description" : "Titel waarmee iemand wordt aangeschreven of aangesproken of waarmee naar iemand wordt verwezen.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'De heer/Mevrouw'@nl-BE"
          },
          "adres" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/adresvoorstelling"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Adres dat men kan aanschrijven."
            } ]
          },
          "contactnaam" : {
            "type" : "string",
            "description" : "Naam van de persoon die men kan contacteren.",
            "example" : "Eddy Wally"
          },
          "email" : {
            "type" : "string",
            "description" : "e-mail adres waarnaar men kan mailen.\n",
            "format" : "email",
            "example" : "eddy@wally.be"
          },
          "fax" : {
            "pattern" : "^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$\n",
            "type" : "string",
            "description" : "Faxnummer waarnaar men kan faxen.",
            "example" : "+32 473 22 33 11"
          },
          "telefoon" : {
            "pattern" : "^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$\n",
            "type" : "string",
            "description" : "Telefoonnummer waarop men kan bellen of smsen.",
            "example" : "+32 473 22 33 11"
          },
          "website" : {
            "type" : "string",
            "description" : "Website waarnaar men kan surfen.",
            "format" : "uri",
            "example" : "http://www.myname.com"
          }
        },
        "description" : "Informatie zoals email, telefoon, adres die toelaat om iemand of iets te contacteren.\n",
        "externalDocs" : {
          "url" : "https://data.vlaanderen.be/doc/applicatieprofiel/generiek-basis/#Contactinfo"
        }
      },
      "geboorte" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsgebeurtenis"
        }, {
          "type" : "object",
          "description" : "Het ter wereld komen van de persoon.\n"
        } ]
      },
      "geboorteJsonld" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "Het ter wereld komen van de persoon.\n",
          "properties" : {
            "@type" : {
              "type" : "string",
              "description" : "Het type van deze data entiteit",
              "example" : "Geboorte"
            }
          }
        }, {
          "$ref" : "#/components/schemas/persoonsgebeurtenisJsonld"
        } ]
      },
      "persoonsgebeurtenis" : {
        "required" : [ "datum", "land", "plaats" ],
        "type" : "object",
        "properties" : {
          "datum" : {
            "type" : "string",
            "description" : "Datum waarop de gebeurtenis plaatsvond.",
            "format" : "date-time"
          },
          "land" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/plaats"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Land waar de gebeurtenis plaatsvond."
            } ]
          },
          "plaats" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/plaats"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Plaats in het land waar de gebeurtenis plaatsvond."
            } ]
          }
        },
        "description" : "Belangrijke gebeurtenis in het leven van een persoon.\n"
      },
      "adresvoorstelling" : {
        "type" : "object",
        "properties" : {
          "administratieveEenheidNiveau1" : {
            "type" : "string",
            "description" : "Hoogste Administratieve eenheid van het adres, doorgaans een land.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'België'@nl-BE"
          },
          "administratieveEenheidNiveau2" : {
            "type" : "string",
            "description" : "De regio van het adres, doorgaans een provincie of deelstaat of gelijkaardig gebied dat typisch meerdere plaatsen omvat.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html).\n",
            "example" : "'Antwerpen'@nl-BE"
          },
          "adresgebied" : {
            "type" : "string",
            "description" : "Naam van een geografisch gebied of plaats die een aantal adresseerbare objecten groepeert om deze te adresseren zonder dat het gebied of de plaats een administratieve eenheid is.\nBvb de naam van de wijk of het gehucht waarin het adres ligt.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html).\n",
            "example" : "'Tentoonstellingswijk'@nl-BE"
          },
          "busnummer" : {
            "type" : "string",
            "description" : "Officieel toegekende alfanumerieke code die wordt toegevoegd aan het huisnummer om meerdere gebouweenheden, standplaatsen, ligplaatsen of percelen te onderscheiden die eenzelfde huisnummer hebben. bv huisnummer + busnummer 55b\n",
            "example" : "b"
          },
          "gemeentenaam" : {
            "type" : "string",
            "description" : "Gemeentenaam vh adres.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html).\n",
            "example" : "'Antwerpen'@nl-BE"
          },
          "huisnummer" : {
            "type" : "string",
            "description" : "Alfanumerieke code officieel toegekend aan gebouweenheden, ligplaatsen, standplaatsen of percelen. bv huisnummer + busnummer 55b\n",
            "example" : "55"
          },
          "land" : {
            "type" : "string",
            "description" : "Land waarin het adres gelegen is.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html).\n",
            "example" : "'België'@nl-BE"
          },
          "locatieaanduiding" : {
            "type" : "array",
            "description" : "Alfanumerieke code die de adreslocator uniek identificeert binnen de straat, administratieve eenheid etc.\n",
            "items" : {
              "type" : "string"
            }
          },
          "locatienaam" : {
            "type" : "array",
            "description" : "Naam of omschrijving van het geografisch object dat de adreslocator aanduidt.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html).\n",
            "items" : {
              "type" : "string"
            }
          },
          "postbus" : {
            "type" : "string",
            "description" : "Postbusnummer in een postkantoor.\n",
            "example" : "Postbus 25"
          },
          "postcode" : {
            "type" : "string",
            "description" : "Code waarmee het geografisch gebied dat adressen voor postale doeleinden groepeert wordt aangeduid.\n",
            "example" : "2020"
          },
          "postnaam" : {
            "type" : "string",
            "description" : "Naam waarmee het geografisch gebied dat adressen voor postale doeleinden groepeert wordt aangeduid.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n"
          },
          "straatnaam" : {
            "type" : "string",
            "description" : "Straatnaam vh adres.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'Camille Huysmanslaan'@nl-BE"
          },
          "verwijstNaar" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/adres"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Adres waarvan de adresvoorstelling is afgeleid.\n"
            } ]
          },
          "volledigAdres" : {
            "type" : "string",
            "description" : "Het volledig adres in één string, met of zonder formatering. \nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'Camille Huysmanslaan 55b, 2020 Antwerpen, België'@nl-BE"
          }
        },
        "description" : "Meer leesbare voorstelling met enkel de basisgegevens van het adres, bedoeld voor het gebruik van een adres als attribuut van een ander object.\nBv als attribuut ve persoon of gebouw... De adresvoorstelling heeft niet enkel betrekking op Belgische adressen, ze kan gebruikt worden om buitenlandse adressen weer te geven (waar mogelijk andere adresaanduidingen dan huisnummer of busnummer worden gebruikt of waar adrescomponenten zoals adresgebieden voorkomen).\n"
      },
      "healthStatusComponents" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/healthStatus"
        }, {
          "type" : "object",
          "properties" : {
            "components" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "errormessage" : {
                    "type" : "string",
                    "description" : "Contains the actual message in case of a problem",
                    "example" : "timeout"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "the code of the problem that occurred",
                    "example" : "TIMEOUT504"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "the name of the underlying component",
                    "example" : "eventhandler"
                  },
                  "details" : {
                    "type" : "string",
                    "description" : "more information about the problem at hand",
                    "example" : "Messages are not received due to the eventhandler who seems to be too busy."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "the type of problem that occurred",
                    "example" : "event"
                  }
                }
              }
            }
          },
          "description" : "A health status result including the details of underlying components"
        } ]
      },
      "error" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "A URI identifying this error. The URI can lead to humane readable information about this error"
          },
          "title" : {
            "type" : "string",
            "description" : "a short description about the error occurred"
          },
          "status" : {
            "type" : "string",
            "description" : "the corresponding HTTP result code"
          },
          "identifier" : {
            "type" : "string",
            "description" : "a unique identifier of the given error"
          },
          "code" : {
            "type" : "string",
            "description" : "the code of the given error"
          }
        },
        "description" : "a generic model used to describe errors as a result of incorrect or failed HTTP requests ."
      },
      "afstamming" : {
        "required" : [ "afstammingstype", "datumVanAfstamming" ],
        "type" : "object",
        "properties" : {
          "afstammingstype" : {
            "type" : "string",
            "description" : "Aard vd afstamming.",
            "example" : "geadopteerd, kind uit huwelijk, erkend door de vader etc.",
            "enum" : [ "geadopteerd", "kind uit huwelijk", "erkend door de vader", "etc", "..." ]
          },
          "datumVanAfstamming" : {
            "type" : "string",
            "description" : "De datum waarop de afstamming wordt vastgesteld.",
            "format" : "date-time"
          }
        },
        "description" : "Afstamming is de dalende lijn van bloedverwantschap tussen verschillende generaties.\nDe afstamming kan ook niet-biologisch zijn, bv adoptie. Afstamming kan ook in opgaande lijn worden bekeken. Het begrip is enger dan verwantschap dat oa ook huwelijk inhoudt.\n"
      },
      "burgerlijkeStaat" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Aard vd burgerlijke staat.",
            "example" : "gehuwd",
            "enum" : [ "ongehuwd", "gehuwd", "verweduwd", "gescheiden", "overige" ]
          }
        },
        "description" : "Burgerrechtelijke toestand van een persoon.\nKan slaan op een relatie met andere personen huwelijk, partnerregistratie, afstamming, voogdij, etc of niet, bv allenstaande. \n"
      },
      "geregistreerdPersoon" : {
        "required" : [ "registratie" ],
        "type" : "object",
        "properties" : {
          "registratie" : {
            "type" : "string",
            "description" : "Identificatiecode van de Persoon in het register."
          },
          "persoon" : {
            "$ref" : "#/components/schemas/persoon"
          }
        },
        "description" : "Persoon waarvan de gegevens zijn ingeschreven in een register.\n\nDoorgaans is dit register een bevolkingsregister maar het kan bv ook een kiesregister zijn. De ingeschreven gegevens hebben betrekking op de identeit (vb naam en voornaam) en de Verblijfplaats vd persoon en op belangrijke levensgebeurtenissen zoals geboorte, huwelijk, overlijden etc. Deze gegevens worden typisch geregistreerd door de overheid, ze bieden de ingeschreven persoon wettelijke bescherming en laten de overheid toe om basisstatistieken op te stellen over zijn bevolking.\n"
      },
      "pages" : {
        "required" : [ "number", "size" ],
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "description" : "returns the size of a page provided in the pagesize query parameter of the request",
            "example" : 10
          },
          "totalElements" : {
            "type" : "integer",
            "description" : "the total number of items in the resulting collection",
            "example" : 34
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "the total number of pages in the resulting array. This is calculated with the given size value",
            "example" : 4
          },
          "number" : {
            "type" : "integer",
            "description" : "return the page number provided in the page query parameter of the resuest",
            "example" : 0
          }
        },
        "description" : "a generic model used to describe paging information when requesting a list of resources"
      },
      "personen" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/links"
          },
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "persons" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/persoon"
                }
              }
            },
            "description" : "Returns a list of Persoon"
          },
          "_page" : {
            "$ref" : "#/components/schemas/pages"
          }
        }
      },
      "tijdelijkInwoner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/inwoner"
        }, {
          "type" : "object",
          "description" : "Persoon die tijdelijk in een plaats of land woont.\nIs een verblijfsrecht dat in principe enkel wordt toegekend omwille van een zeer specifieke reden bv werken of studeren. Exclusief personen met kort verblijf, bv als toerist.\n"
        } ]
      },
      "persoon" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/agent"
        }, {
          "required" : [ "achternaam", "geslacht", "volledigeNaam", "voornaam" ],
          "type" : "object",
          "properties" : {
            "achternaam" : {
              "type" : "string",
              "description" : "Gedeelte van de volledige naam van de persoon ontvangen van de vorige generatie. Ook wel familienaam genoemd omdat de achternaam een familiale verwantschap aanduidt.\n",
              "example" : "Van De Walle"
            },
            "alternatieveNaam" : {
              "type" : "array",
              "description" : "Alternatief voor de volledige naam vd persoon. Bv pseudoniem, titel etc.\n",
              "items" : {
                "type" : "string",
                "example" : [ "Eddy Wally", "The Voice of Europe" ]
              }
            },
            "contactInfo" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/contactInfo"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Informatie zoals e-mail en telefoon gegevens die toelaten deze Persoon te contacteren.\n"
              } ]
            },
            "geboortenaam" : {
              "type" : "string",
              "description" : "Volledige naam van de persoon bij geboorte. De namen van een persoon kunnen id loop vd tijd wijzigen, bv kan de achternaam wijzigen door huwelijk. De oorspronkelijke naam wordt echter dikwijls ook nog gebruikt.  \n",
              "example" : "Eduard René Van De Walle"
            },
            "gebruikteVoornaam" : {
              "type" : "string",
              "description" : "Belangrijkste voornaam van een persoon.  \n",
              "example" : "Eduard"
            },
            "geslacht" : {
              "type" : "string",
              "description" : "Het feit of de persoon een man of een vrouw is.",
              "example" : "man",
              "enum" : [ "man", "vrouw", "niet van toepassing", "onbekend" ]
            },
            "heeftBurgerlijkeStaat" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/burgerlijkeStaat"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Burgerlijke staat van de Persoon.\n"
              } ]
            },
            "heeftGeboorte" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/geboorte"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Verwijst naar de geboortegegevens van de Persoon.\n"
              } ]
            },
            "heeftInwonershap" : {
              "type" : "array",
              "description" : "Inwonerschap vd persoon.\nDe entiteit inwonerschap beschrijft het inwonerschap in meer detail (oa de jurisdictie waarbinnen het gedefinieerd is).\n",
              "items" : {
                "$ref" : "#/components/schemas/inwonerschap"
              }
            },
            "heeftNationaliteit" : {
              "type" : "array",
              "description" : "Nationaliteit van de Persoon.",
              "items" : {
                "$ref" : "#/components/schemas/nationaliteit"
              }
            },
            "heeftOverlijden" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/overlijden"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Het doodgaan van de Persoon.\n"
              } ]
            },
            "heeftStaatsburgerschap" : {
              "type" : "array",
              "description" : "Inwonerschap van de persoon.\nDe entiteit staatsburgerschap beschrijft het staatsburgerschap in meer detail (onder andere de jurisdictie waarbinnen het gedefinieerd is).\n",
              "items" : {
                "$ref" : "#/components/schemas/staatsburgerschap"
              }
            },
            "heeftPersoonsrelatie" : {
              "type" : "array",
              "description" : "Relatie van een persoon (met een ander persoon).\n",
              "items" : {
                "$ref" : "#/components/schemas/persoonsrelatie"
              }
            },
            "inwonerschap" : {
              "type" : "array",
              "description" : "Jurisdictie waarbinnen het Inwonerschap van de persoon is gedefinieerd.\n",
              "items" : {
                "$ref" : "#/components/schemas/jurisdictie"
              }
            },
            "isHoofdVan" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/gezin"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Persoon die standaard het gezin vertegenwoordigt.\n"
              } ]
            },
            "isLidVan" : {
              "type" : "array",
              "description" : "Persoon die tot een gezin behoort.\n",
              "items" : {
                "$ref" : "#/components/schemas/gezin"
              }
            },
            "patroniem" : {
              "type" : "string",
              "description" : "Achternaam gebaseerd op de voornaam van de vader van een Persoon.",
              "example" : "Magnusdottir (dochter van Magnus)."
            },
            "staatsburgerschap" : {
              "type" : "array",
              "description" : "Jurisdictie waarbinnen het staatsburgerschap van de persoon is gedefinieerd.\n",
              "items" : {
                "$ref" : "#/components/schemas/jurisdictie"
              }
            },
            "volledigeNaam" : {
              "type" : "string",
              "description" : "De volledige naam van de persoon, doorgaans de combinatie van voornamen en achternaam.\n",
              "example" : "Eduard René Van De Walle"
            },
            "voornaam" : {
              "type" : "array",
              "description" : "Naam die een kind bij geboorte wordt gegeven. Onderscheidt het kind van de andere kinderen in de familie.\n",
              "items" : {
                "type" : "string",
                "example" : [ "Eduard" ]
              }
            },
            "todo" : {
              "type" : "string",
              "description" : "```TODO: ``` noteer alle bijkomende eigenschappen niet vervat in de OSLO standaard\n"
            }
          },
          "description" : "Natuurlijk persoon.\nIn de rechtspraak betreft het een persoon (in de wettelijke betekenis, ttz met eigen rechtspersoonlijkheid) van de menselijke soort, ttz een fysiek persoon. Tegenhanger is de rechtspersoon, een juridische constructie die een private of publieke organisatie dezelfde rechtspersoonlijkheid geeft als een natuurlijk persoon (kan bv ook schulden hebben, contracten afsluiten, aangeklaagd worden etc).\n",
          "externalDocs" : {
            "url" : "https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis"
          }
        } ]
      },
      "persoonsrelatie" : {
        "required" : [ "isRelatieMet" ],
        "type" : "object",
        "properties" : {
          "isRelatieMet" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/persoon"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Persoon waarmee de persoon gerelateerd is.\n"
            } ]
          }
        },
        "description" : "Relatie tussen twee of meer personen.\nTypisch zijn dit burgerrechtelijke relaties (zie burgerlijke staat) maar niet noodzakelijk daartoe beperkt.\n"
      },
      "links" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "contains a link to this page of this collection",
            "example" : "/digipolis/persoon/v6/?pagesize=5&page=5"
          },
          "first" : {
            "type" : "string",
            "description" : "contains a link to the first page of this collection",
            "example" : "/digipolis/persoon/v6/?pagesize=5&page=0"
          },
          "last" : {
            "type" : "string",
            "description" : "contains a link to the last page of this collection",
            "example" : "/digipolis/persoon/v6/?pagesize=5&page=17"
          },
          "prev" : {
            "type" : "string",
            "description" : "contains a link to the previous page of this collection",
            "example" : "/digipolis/persoon/v6/?pagesize=5&page=0"
          },
          "next" : {
            "type" : "string",
            "description" : "contains a link to the next page of this collection",
            "example" : "/digipolis/persoon/v6/?pagesize=5&page=10"
          }
        },
        "description" : "provides navigational uri's to other pages of the collection"
      },
      "gezin" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/organisatie"
        }, {
          "type" : "object",
          "properties" : {
            "gezinsadres" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/adresvoorstelling"
              }, {
                "type" : "object",
                "properties" : { },
                "description" : "Verblijfplaats van het gezin.\nDikwijls een criterium om te bepalen of personen deel uitmaken van eenzelfde gezin.\n"
              } ]
            }
          },
          "description" : "Samenwerkingsvorm die een herkenbare sociale eenheid vormt (bv ten gevolge van een huwelijk), met al dan niet verwante personen die duurzame banden hebben en elkaar onderling steun en verzorging verlenen.\n\nRuimer begrip dan familie waar het gezin louter bestaat uit nabije bloedverwanten, bv een eenpersoonsgezin of living apart together. Gezinsleden hebben doorgaans dezelfde verblijfplaats.\n"
        } ]
      },
      "inwoner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/inwonerschap"
        }, {
          "type" : "object",
          "description" : "Persoon die in een bepaalde plaats of land woont.\nPlaats of land wordt hier vertegenwoordigd door de entiteit jurisdictie.\n"
        } ]
      },
      "inwonerschap" : {
        "required" : [ "binnenJurisdictie" ],
        "type" : "object",
        "properties" : {
          "binnenJurisdictie" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/jurisdictie"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Jurisdictie waarbinnen het inwonerschap (ve persoon) is gedefineerd.\n"
            } ]
          },
          "verblijfplaats" : {
            "type" : "array",
            "description" : "Plaats waar een persoon verblijft.  \n",
            "items" : {
              "$ref" : "#/components/schemas/verblijfplaats"
            }
          }
        },
        "description" : "Het feit dat een persoon verblijf houdt in een plaats of land.\n"
      },
      "adres" : {
        "type" : "object",
        "properties" : {
          "todo" : {
            "type" : "string",
            "description" : "```Todo:``` nog verder uit te werken? hoe aanpakken vermits dit het adres domein is...\n"
          }
        },
        "description" : "Informatie die toelaat om op een gestructureerde en unieke manier te verwijzen naar een gebouweenheid, een ligplaats, een standplaats of een perceel op basis van een gemeentenaam, een straatnaam, een huisnummer en eventueel een busnummer en een postcode.\n"
      },
      "huwelijk" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsrelatie"
        }, {
          "type" : "object",
          "description" : "Een door burgerlijk of religieus recht geregelde samenlevingsvorm van twee personen.\n"
        } ]
      },
      "jurisdictie" : {
        "required" : [ "plaats" ],
        "type" : "object",
        "properties" : {
          "plaats" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/plaats"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Ruimtelijk gebied of benoemde plaats waarmee de Jurisdictie samenvalt.\n"
            } ]
          }
        },
        "description" : "Het gebied waarover de rechtsmacht van een overheid zich uitstrekt.\nDoorgaans een land of deelstaat.\n"
      },
      "organisatie" : {
        "type" : "object",
        "description" : "Een aantal mensen georganiseerd in een gemeenschap of andere sociale, commerciële of politieke structuur. De groep heeft een gemeenschappelijk doel of bestaansreden die de individuele leden ervan overstijgt en kan handelen als Agent. Een organisatie heeft dikwijls een hiërarchische structuur.\n"
      },
      "samenwonen" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsrelatie"
        }, {
          "type" : "object",
          "description" : "Regeling waarbij twee personen die niet getrouwd zijn samenleven.\nKan, net als bv een huwelijk, de basis vormen van een gezin.\n"
        } ]
      },
      "staatsburgerschap" : {
        "required" : [ "binnenJurisdictie" ],
        "type" : "object",
        "properties" : {
          "binnenJurisdictie" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/jurisdictie"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Jurisdictie waarbinnen het inwonerschap (ve persoon) is gedefineerd."
            } ]
          }
        },
        "description" : "Juridische band ve persoon met een staat, waaraan bepaalde rechten en plichten verbonden zijn\nVloeit meestal voort uit de nationaliteit ve persoon. De rechten en plichten waarvan sprake zijn burgerrechten (vb godsdienstvrijheid) of van politieke (vb stemrecht) of sociale aard (bv recht op een uitkering).\n"
      },
      "plaats" : {
        "required" : [ "plaatsnaam" ],
        "type" : "object",
        "properties" : {
          "geometrie" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/geometrie"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Geometrische informatie van de plaats of het gebied genoteerd volgens [RFC7946](https://tools.ietf.org/html/rfc7946)"
            } ]
          },
          "plaatsnaam" : {
            "type" : "string",
            "description" : "Naam van de plaats of van het gebied.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'België'@nl-BE"
          }
        },
        "description" : "Een ruimtelijk gebied of benoemde plaats."
      },
      "verblijfplaats" : {
        "required" : [ "verblijfadres" ],
        "type" : "object",
        "properties" : {
          "verblijfadres" : {
            "$ref" : "#/components/schemas/adresvoorstelling"
          }
        },
        "description" : "Plaats waar een persoon al dan niet tijdelijk woont of logeert.          \n"
      },
      "vreemdeling" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/staatsburgerschap"
        }, {
          "type" : "object",
          "description" : "Persoon die niet de nationaliteit bezit vh land waar hij verblijft.\nDaardoor kan de persoon geen staatsburger worden genoemd. In praktijk geniet de Vreemdeling als Inwoner een subset vd burgerrechten die een Staatsbutger wel heeft. Bv wel godsdienstvrijheid maar geen stemrecht."
        } ]
      },
      "geenInwoner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/inwonerschap"
        }, {
          "type" : "object",
          "description" : "Persoon die niet in een bepaalde plaats of land woont.\nPlaats of land wordt hier vertegenwoordigd door de entiteit jurisdictie.\n"
        } ]
      },
      "domicilie" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/verblijfplaats"
        }, {
          "type" : "object",
          "description" : "Hoofdverblijfplaats van een Persoon.\nPlaats waar de persoon het grootste deel vd tijd verblijft binnen de jurisdictie waarvan hij Inwoner is. Dit wordt doorgaans officieel vastgesteld en geregistreerd ih bevolkingsregister. Kan in praktijk verschillend vd feitelijke verblijfplaats.\n"
        } ]
      },
      "gezinsrelatie" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsrelatie"
        }, {
          "required" : [ "gezinsrelatietype" ],
          "type" : "object",
          "properties" : {
            "gezinsrelatietype" : {
              "type" : "string",
              "description" : "Aard vd relatie.\nWordt typisch bepaald tov het gezinshoofd. Bv als de vader gezinshoofd is en een gezinslid is zoon, dan zou als de grootvader gezinshoofd was datzelfde gezinslid kleinzoon zijn.\n",
              "example" : "Bv echtgenoot, zoon, schoonmoeder.\n",
              "enum" : [ "echtgenoot", "zoon", "schoonmoeder", "etc", "..." ]
            }
          },
          "description" : "Relatie tussen leden van eenzelfde gezin.\n"
        } ]
      },
      "overlijden" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/persoonsgebeurtenis"
        }, {
          "type" : "object",
          "description" : "Het doodgaan van de Persoon.\n"
        } ]
      },
      "positie" : {
        "maxItems" : 3,
        "minItems" : 2,
        "type" : "array",
        "description" : "Position is het fundamentele element in een geometrische weergave. Coordinaten zijn opgemaakt uit een Positie of een lijst ervan.\nHet eerste getal geeft de longitude weer (ofwel oost-west positie) van een punt op de aarde Het tweede getal geeft de latitude weer (ofwel noord-zuid positie) van een punt op de aarde Het optionele derde getal geeft de hoogte weer van het punt vanuit een gegeven context.\n",
        "example" : [ 50.5039, 4.4699 ],
        "items" : {
          "type" : "number",
          "format" : "float"
        }
      },
      "staatsburger" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/staatsburgerschap"
        }, {
          "type" : "object",
          "description" : "Persoon die juridisch verbonden is met een staat.\n"
        } ]
      },
      "healthStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Contains a high level status of the health for this service",
            "example" : "outage",
            "enum" : [ "ok", "degraded", "outage" ]
          }
        },
        "description" : "A high level health status result"
      },
      "permanentInwoner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/inwoner"
        }, {
          "type" : "object",
          "description" : "Persoon die permanent in een bepaalde plaats of land woont.\nIs een verblijfsrecht dat in principe officieel moet worden toegekend als de Persoon geen staatsburger is.\n"
        } ]
      },
      "geometrie" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Geeft aan welke type geometrie (één van de zes) gebruikt wordt voor de notatie",
            "enum" : [ "point", "multiPoint", "lineString", "multiLineString", "polygon", "multiPolygon" ]
          },
          "coordinaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/positie"
            }
          }
        },
        "description" : "Geeft geometrische informatie weer van een plaats of een gebied genoteerd volgens [RFC7946](https://tools.ietf.org/html/rfc7946) formaat"
      },
      "persoonsgebeurtenisJsonld" : {
        "required" : [ "datum", "land", "plaats" ],
        "type" : "object",
        "properties" : {
          "datum" : {
            "type" : "string",
            "description" : "Datum waarop de gebeurtenis plaatsvond.",
            "format" : "date-time"
          },
          "land" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "Land waar de gebeurtenis plaatsvond.",
              "properties" : {
                "@type" : {
                  "type" : "string",
                  "description" : "Het type van deze data entiteit",
                  "example" : "Plaats"
                }
              }
            }, {
              "$ref" : "#/components/schemas/plaatsJsonld"
            } ]
          },
          "plaats" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "Plaats in het land waar de gebeurtenis plaatsvond.",
              "properties" : {
                "@type" : {
                  "type" : "string",
                  "description" : "Het type van deze data entiteit",
                  "example" : "Plaats"
                }
              }
            }, {
              "$ref" : "#/components/schemas/plaatsJsonld"
            } ]
          }
        },
        "description" : "Belangrijke gebeurtenis in het leven van een persoon.\n"
      },
      "plaatsJsonld" : {
        "required" : [ "plaatsnaam" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Het type van deze data entiteit",
            "example" : "Plaats"
          },
          "geometrie" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/geometrieJsonld"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Geometrische informatie van de plaats of het gebied genoteerd volgens [RFC7946](https://tools.ietf.org/html/rfc7946)"
            } ]
          },
          "plaatsnaam" : {
            "type" : "string",
            "description" : "Naam van de plaats of van het gebied.\nDeze waarde wordt weergegeven in een ```TaalString```, dit is een string getagged met een taalcode volgens de [ISO 639](https://www.iso.org/iso-639-language-codes.html). \n",
            "example" : "'België'@nl-BE"
          }
        },
        "description" : "Een ruimtelijk gebied of benoemde plaats."
      },
      "geometrieJsonld" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "@type" : {
              "type" : "string",
              "description" : "Het type van deze data entiteit",
              "example" : "http://www.w3.org/ns/locn#Geometry"
            }
          }
        }, {
          "$ref" : "#/components/schemas/geometrie"
        } ]
      },
      "inwonerschapJsonld" : {
        "required" : [ "binnenJurisdictie" ],
        "type" : "object",
        "properties" : {
          "binnenJurisdictie" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/jurisdictieJsonld"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Jurisdictie waarbinnen het inwonerschap (ve persoon) is gedefineerd.\n"
            } ]
          },
          "verblijfplaats" : {
            "type" : "array",
            "description" : "Plaats waar een persoon verblijft.  \n",
            "items" : {
              "$ref" : "#/components/schemas/verblijfplaats"
            }
          }
        },
        "description" : "Het feit dat een persoon verblijf houdt in een plaats of land.\n"
      },
      "jurisdictieJsonld" : {
        "required" : [ "plaats" ],
        "type" : "object",
        "properties" : {
          "plaats" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/plaatsJsonld"
            }, {
              "type" : "object",
              "properties" : { },
              "description" : "Ruimtelijk gebied of benoemde plaats waarmee de Jurisdictie samenvalt.\n"
            } ]
          }
        },
        "description" : "Het gebied waarover de rechtsmacht van een overheid zich uitstrekt.\nDoorgaans een land of deelstaat.\n"
      },
      "verblijfplaatsJsonld" : {
        "required" : [ "verblijfadres" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "example" : "verblijfadres"
          },
          "verblijfadres" : {
            "$ref" : "#/components/schemas/adresvoorstelling"
          }
        },
        "description" : "Plaats waar een persoon al dan niet tijdelijk woont of logeert.          \n"
      },
      "persoonJsonld" : {
        "type" : "object",
        "properties" : {
          "@context" : {
            "type" : "object",
            "description" : "JSON LD context voor een OSLO Persoon",
            "example" : {
              "Afstamming" : "https://data.vlaanderen.be/ns/persoon#Afstamming",
              "Agent" : "http://purl.org/dc/terms/Agent",
              "BurgerlijkeStaat" : "https://data.vlaanderen.be/ns/persoon#BurgerlijkeStaat",
              "Domicilie" : "https://data.vlaanderen.be/ns/persoon#Domicilie",
              "Geboorte" : "https://data.vlaanderen.be/ns/persoon#Geboorte",
              "GeenInwoner" : "https://data.vlaanderen.be/ns/persoon#GeenInwoner",
              "GeregistreerdPersoon" : "https://data.vlaanderen.be/ns/persoon#GeregistreerdPersoon",
              "Gezin" : "https://data.vlaanderen.be/ns/persoon#Gezin",
              "Gezinsrelatie" : "https://data.vlaanderen.be/ns/persoon#Gezinsrelatie",
              "Huwelijk" : "https://data.vlaanderen.be/ns/persoon#Huwelijk",
              "Inwoner" : "https://data.vlaanderen.be/ns/persoon#Inwoner",
              "Inwonerschap" : "https://data.vlaanderen.be/ns/persoon#Inwonerschap",
              "Jurisdictie" : "http://purl.org/dc/terms/Jurisdiction",
              "Nationaliteit" : "https://data.vlaanderen.be/ns/persoon#Nationaliteit",
              "Organisatie" : "http://www.w3.org/ns/org#Organization",
              "Overlijden" : "https://data.vlaanderen.be/ns/persoon#Overlijden",
              "PermanentInwoner" : "https://data.vlaanderen.be/ns/persoon#PermanentInwoner",
              "Persoon" : "http://www.w3.org/ns/person#Person",
              "Persoonsgebeurtenis" : "https://data.vlaanderen.be/ns/persoon#Persoonsgebeurtenis",
              "Persoonsrelatie" : "https://data.vlaanderen.be/ns/persoon#Persoonsrelatie",
              "Plaats" : "http://purl.org/dc/terms/Location",
              "Samenwonen" : "https://data.vlaanderen.be/ns/persoon#Samenwonen",
              "Staatsburger" : "https://data.vlaanderen.be/ns/persoon#Staatsburger",
              "Staatsburgerschap" : "https://data.vlaanderen.be/ns/persoon#Staatsburgerschap",
              "TijdelijkInwoner" : "https://data.vlaanderen.be/ns/persoon#TijdelijkInwoner",
              "Verblijfplaats" : "https://data.vlaanderen.be/ns/persoon#Verblijfplaats",
              "Voogdij" : "https://data.vlaanderen.be/ns/persoon#Voogdij",
              "Vreemdeling" : "https://data.vlaanderen.be/ns/persoon#Vreemdeling",
              "Inwonerschap.inwonerschap" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#Inwonerschap.binnenJurisdictie",
                "@type" : "http://purl.org/dc/terms/Jurisdiction"
              },
              "Jurisdictie.plaats" : {
                "@id" : "https://data.vlaanderen.be/ns/generiek#plaats",
                "@type" : "http://purl.org/dc/terms/Location"
              },
              "Persoon.inwonerschap" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftInwonerschap",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Inwonerschap",
                "@container" : "@set"
              },
              "Persoonsrelatie.heeftRelatieMet" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#isRelatieMet",
                "@type" : "http://www.w3.org/ns/person#Person"
              },
              "Staatsburgerschap.staatsburgerschap" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#Staatsburgerschap.binnenJurisdictie",
                "@type" : "http://purl.org/dc/terms/Jurisdiction"
              },
              "achternaam" : {
                "@id" : "http://xmlns.com/foaf/0.1/familyName",
                "@type" : "http://www.w3.org/2001/XMLSchema#string"
              },
              "afstammingsType" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#afstammingsType",
                "@type" : "http://www.w3.org/2004/02/skos/core#Concept"
              },
              "alternatieveNaam" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#alternatieveNaam",
                "@type" : "http://www.w3.org/2001/XMLSchema#string",
                "@container" : "@set"
              },
              "contactinfo" : {
                "@id" : "http://schema.org/contactPoint",
                "@type" : "https://schema.org/ContactPoint"
              },
              "datum" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#datum",
                "@type" : "http://www.w3.org/2001/XMLSchema#dateTime"
              },
              "datumVanAfstamming" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#datumVanAfstamming",
                "@type" : "http://www.w3.org/2001/XMLSchema#dateTime"
              },
              "geboortenaam" : {
                "@id" : "http://www.w3.org/ns/person#birthName",
                "@type" : "http://www.w3.org/2001/XMLSchema#string"
              },
              "gebruikteVoornaam" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#gebruikteVoornaam",
                "@type" : "http://www.w3.org/2001/XMLSchema#string"
              },
              "geometrie" : {
                "@id" : "http://www.w3.org/ns/locn#geometry",
                "@type" : "http://www.w3.org/ns/locn#Geometry"
              },
              "geslacht" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#geslacht",
                "@type" : "http://www.w3.org/2004/02/skos/core#Concept"
              },
              "gezinsadres" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#gezinsadres",
                "@type" : "http://www.w3.org/ns/locn#Address"
              },
              "gezinsrelatietype" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#gezinsrelatietype",
                "@type" : "http://www.w3.org/2004/02/skos/core#Concept"
              },
              "heeftBurgerlijkeStaat" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftBurgerlijkeStaat",
                "@type" : "https://data.vlaanderen.be/ns/persoon#BurgerlijkeStaat"
              },
              "heeftGeboorte" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftGeboorte",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Geboorte"
              },
              "heeftNationaliteit" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftNationaliteit",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Nationaliteit",
                "@container" : "@set"
              },
              "heeftOverlijden" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftOverlijden",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Overlijden"
              },
              "heeftRelatieMet" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftPersoonsrelatie",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Persoonsrelatie",
                "@container" : "@set"
              },
              "heeftVerblijfplaats" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftVerblijfplaats",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Verblijfplaats",
                "@container" : "@set"
              },
              "inwonerschap" : {
                "@id" : "http://www.w3.org/ns/person#residency",
                "@type" : "http://purl.org/dc/terms/Jurisdiction",
                "@container" : "@set"
              },
              "isHoofdVan" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#isHoofdVan",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Gezin"
              },
              "isLidVan" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#isLidVan",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Gezin",
                "@container" : "@set"
              },
              "land" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#land",
                "@type" : "http://purl.org/dc/terms/Location"
              },
              "nationaliteit" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#nationaliteit",
                "@type" : "http://www.w3.org/2004/02/skos/core#Concept"
              },
              "patroniem" : {
                "@id" : "http://www.w3.org/ns/person#patronymicName",
                "@type" : "http://www.w3.org/2001/XMLSchema#string"
              },
              "plaats" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#plaats",
                "@type" : "http://purl.org/dc/terms/Location"
              },
              "plaatsnaam" : {
                "@id" : "http://www.w3.org/2000/01/rdf-schema#label",
                "@type" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"
              },
              "registratie" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#registratie",
                "@type" : "http://www.w3.org/ns/adms#Identifier"
              },
              "staatburgerschap" : {
                "@id" : "http://www.w3.org/ns/person#citizenship",
                "@type" : "http://purl.org/dc/terms/Jurisdiction",
                "@container" : "@set"
              },
              "staatsburgerschap" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#heeftStaatsburgerschap",
                "@type" : "https://data.vlaanderen.be/ns/persoon#Staatsburgerschap",
                "@container" : "@set"
              },
              "type" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#type",
                "@type" : "http://www.w3.org/2004/02/skos/core#Concept"
              },
              "verblijfsadres" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#verblijfsadres",
                "@type" : "http://www.w3.org/ns/locn#Address"
              },
              "volledigeNaam" : {
                "@id" : "https://data.vlaanderen.be/ns/persoon#volledigeNaam",
                "@type" : "http://www.w3.org/2001/XMLSchema#string"
              },
              "voornaam" : {
                "@id" : "http://xmlns.com/foaf/0.1/givenName",
                "@type" : "http://www.w3.org/2001/XMLSchema#string",
                "@container" : "@set"
              }
            }
          },
          "@graph" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/agent"
            }, {
              "type" : "object",
              "required" : [ "achternaam", "geslacht", "volledigeNaam", "voornaam" ],
              "properties" : {
                "@id" : {
                  "type" : "string",
                  "description" : "De unieke identificatie van deze Persoon",
                  "format" : "uri",
                  "example" : "https://api-gw.antwerpen.be/digipolis/persoon/v6/persons/00000014183"
                },
                "@type" : {
                  "type" : "string",
                  "description" : "Het type van deze data entiteit",
                  "example" : "Persoon"
                },
                "achternaam" : {
                  "type" : "string",
                  "description" : "Gedeelte van de volledige naam van de persoon ontvangen van de vorige generatie. Ook wel familienaam genoemd omdat de achternaam een familiale verwantschap aanduidt.\n",
                  "example" : "Van De Walle"
                },
                "alternatieveNaam" : {
                  "type" : "array",
                  "description" : "Alternatief voor de volledige naam vd persoon. Bv pseudoniem, titel etc.\n",
                  "items" : {
                    "type" : "string",
                    "example" : [ "Eddy Wally", "The Voice of Europe" ]
                  }
                },
                "volledigeNaam" : {
                  "type" : "string",
                  "description" : "De volledige naam van de persoon, doorgaans de combinatie van voornamen en achternaam.\n",
                  "example" : "Eduard René Van De Walle"
                },
                "voornaam" : {
                  "type" : "array",
                  "description" : "Naam die een kind bij geboorte wordt gegeven. Onderscheidt het kind van de andere kinderen in de familie.\n",
                  "items" : {
                    "type" : "string",
                    "example" : [ "Eduard" ]
                  }
                },
                "gebruikteVoornaam" : {
                  "type" : "string",
                  "description" : "Belangrijkste voornaam van een persoon.  \n",
                  "example" : "Eduard"
                },
                "geslacht" : {
                  "type" : "object",
                  "description" : "Het feit of de persoon een man of een vrouw is.",
                  "properties" : {
                    "@type" : {
                      "type" : "string",
                      "description" : "Het type van deze data entiteit",
                      "example" : "http://www.w3.org/2004/02/skos/core#Concept"
                    },
                    "@id" : {
                      "type" : "string",
                      "format" : "uri",
                      "example" : "http://publications.europa.eu/resource/authority/human-sex/MALE"
                    }
                  }
                },
                "heeftGeboorte" : {
                  "type" : "object",
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/geboorteJsonld"
                  }, {
                    "type" : "object",
                    "properties" : { },
                    "description" : "Verwijst naar de geboortegegevens van de Persoon.\n"
                  } ]
                },
                "heeftBurgerlijkeStaat" : {
                  "type" : "object",
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/burgerlijkeStaat"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "@type" : {
                        "type" : "string",
                        "description" : "Het type van deze data entiteit",
                        "example" : "BurgerlijkeStaat"
                      }
                    },
                    "description" : "Burgerlijke staat van de Persoon.\n"
                  } ]
                },
                "heeftInwonershap" : {
                  "type" : "array",
                  "description" : "Inwonerschap vd persoon.\nDe entiteit inwonerschap beschrijft het inwonerschap in meer detail (oa de jurisdictie waarbinnen het gedefinieerd is).\n",
                  "items" : {
                    "$ref" : "#/components/schemas/inwonerschapJsonld"
                  }
                }
              }
            } ]
          }
        }
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Bad request",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "PersonMoved" : {
        "description" : "Sometimes we have multiple records of one and the same natural person , each with its own id, in our database. Perhaps, a data stuart added a Person manually into the database and a bit later, another record was added when we synced information from the Belgian Rijksregister autorative source. When multiple records exist, we link them together and we suggest to use the most accurate record. \n\nA HTTP 308 indicates such a case, where you asked for a Person for a given id. The service recognises this and sends a URI in the response location header of the Person record that is more accurate than the one requested. \n\nWhen you receive a HTTP 308, you should update your own system to use (and store) this new Person id from now on. \n",
        "headers" : {
          "Location" : {
            "description" : "Contains the location (URI) of the new main Person record.",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "content" : { }
      },
      "Unexpected" : {
        "description" : "Unexpected error",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "InternalServer" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not found",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters" : {
      "acceptJsonType" : {
        "name" : "Accept",
        "in" : "header",
        "description" : "Specify if the content should be returned in JSON or JSON-LD format",
        "schema" : {
          "type" : "string",
          "default" : "application/json",
          "enum" : [ "application/json", "application/ld+json" ]
        }
      },
      "acceptLanguage" : {
        "name" : "Accept-Language",
        "in" : "header",
        "description" : "Select the language used in the content of the response.  Note that the API will return content in the language requested. If the data is not available in the language, it will fall back to a language it does contain.\n",
        "schema" : {
          "type" : "string",
          "default" : "nl-BE",
          "enum" : [ "en-UK", "nl-BE" ]
        }
      },
      "nationalNumber" : {
        "name" : "nationalNumber",
        "in" : "query",
        "description" : "Filter the result for this national number in a specific format (e.g. '77.06.12-012.20'). The national number is an identification number for every person living in Belgium  [National Number](https://nl.wikipedia.org/wiki/Rijksregisternummer)",
        "schema" : {
          "pattern" : "^[0-9]{2}[.]{1}[0-9]{2}[.]{1}[0-9]{2}[-]{1}[0-9]{3}[.]{1}[0-9]{2}$",
          "type" : "string"
        },
        "example" : "77.06.12-012.20"
      },
      "pagesize" : {
        "name" : "pagesize",
        "in" : "query",
        "description" : "Max number of items for each page",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "pagingStrategy" : {
        "name" : "paging-strategy",
        "in" : "query",
        "description" : "Specify the paging strategy, i.e. if totalPages and totalElements should be included in the response output",
        "schema" : {
          "type" : "string",
          "default" : "noCount",
          "enum" : [ "noCount", "withCount" ]
        }
      },
      "page" : {
        "name" : "page",
        "in" : "query",
        "description" : "Starting offset for the list, this can be either a number or the literal 'last'",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "id" : {
        "name" : "id",
        "in" : "path",
        "description" : "The id of this person in our system of record (also known as ```CRS Number```).",
        "required" : true,
        "schema" : {
          "minimum" : 1,
          "type" : "string"
        }
      }
    },
    "headers" : {
      "contentLanguage" : {
        "description" : "Describes the language ([ISO 639](https://www.iso.org/iso-639-language-codes.html)) of the data in the returned payload.\n",
        "schema" : {
          "type" : "string",
          "default" : "nl-BE",
          "example" : "nl-BE",
          "enum" : [ "nl-BE", "en-UK" ]
        }
      },
      "lastModified" : {
        "description" : "The date and time ([RFC7232](https://tools.ietf.org/html/rfc7232#section-2.2)) when the person was last changed (e.g. refreshed from its autorative master source or from an manual update by a data stuard)\n",
        "schema" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        }
      }
    }
  }
}