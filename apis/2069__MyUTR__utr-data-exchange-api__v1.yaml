openapi: 3.0.0
info:
  title: UTR Data exchange API
  description: APIs for posting results and fetching ratings
  version: 'v1'

servers:
  - url: http://api.myutr.com/v1
    description: Production API URL. Requires authToken header which is a token to authenticate external consumers. Issued by UTR to Consumer App.

paths:
  /match:
    post:
      summary: Allows the posting of an array of match results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchArray'
      responses:
        '200':
          description: Response object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Results accepted"
                  data:
                    type: object
                    example: {}
        '400':
          description: Bad Request, the request could not be completed because something was wrong with the request format, ie xml instead of json.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Content type: xml supplied, expected: json."
        '422':
          description: Request body failed validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Validation Failed"
                  message:
                    type: string
                    example: "Prooperty ID Required"
  /player/all/ratings:
    get:
      summary: Returns a list of player ratings, will only return player's with a identifier from the consumer app's system.
      parameters:
        - in: query
          name: start
          description:
            Index to start list from, default is 0
          required: false
          schema:
            type: integer
        - in: query
          name: count
          description:
            Number of results to return, default is 100 and max 1000
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerRatingsData'

components:
  schemas:
    Match:
      description:
        A match result for singles or doubles.
      properties:
        id:
          type: integer
      # Both properties are required
      required:  
        - id
    MatchArray:
      description:
        A list of match results
      type: array
      items:
        $ref: '#/components/schemas/Match'
    PlayerRating:
      properties:
        utrId:
          type: integer
          example: 12345
        thirdPartyId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          example: M
          description: Possible values - M, F
        verifiedSinglesUtr:
          type: string
          example: 12.02
          description: Possible values - 0-16.00
        verifiedDoublesUtr:
          type: string
          example: 12.02
          description: Possible values - 0-16.00
        singlesUtr:
          type: string
          example: 12.02
          description: Possible values - 0-16.00
        doublesUtr:
          type: string
          example: 12.02
          description: Possible values - 0-16.00
        ratingStatusVerifiedSingles:
          type: string
          example: Rated
          description: Possible values - Rated, Unrated, Projected, Inactive (not used currently)
        ratingProgressVerifiedSingles:
          type: string
          example: 75
          description: Possible values - 0-100
        nationality:
          type: string
          example: AUS
          description: Possible values - null, Any IOC country code
        city:
          type: string
          example: Orlando
          description: Possible values - null, name of city
        state:
          type: string
          example: Orlando
          description: Possible values - null, state abbreviation
        importSource:
          type: string
          example: TennisAustralia
          description: Possible values - null, varies by api consumer
        playerProfileUrl:
          type: string
          example: 'https://myutr.com/profiles/1234'
      # Both properties are required
      required:  
        - id
    PlayerRatingsArray:
      type: array
      items:
        $ref: '#/components/schemas/PlayerRating'
    PlayerRatingsData:
      properties:
        data:
          $ref: '#/components/schemas/PlayerRatingsArray'
