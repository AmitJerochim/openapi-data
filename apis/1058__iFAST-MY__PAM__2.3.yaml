--
openapi: 3.0.1
info:
  version: '2.3'
  title: iFAST API
  description: iFAST API
  termsOfService: Terms of service
  contact:
    name: iFAST Capital Sdn.Bhd
    url: https://www.ifastcapital.com.my/ifast/home/index.svdo
    email: fintech.my@ifastfinancial.com
  license:
    name: iFAST
    url: https://www.ifastcapital.com.my/ifast/home/index.svdo
servers:
- url: http://localhost:8080/
  description: Generated server url
paths:
  "/customer/create":
    post:
      tags:
      - Account Opening
      operationId: createCustomer
      requestBody:
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/CreateCustomerRequest"
      responses:
        '200':
          description: default response
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseModelCreateCustomerResponse"
  "/account/create":
    post:
      tags:
      - Account Opening
      operationId: createAccount
      requestBody:
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/CreateAccountRequest"
      responses:
        '200':
          description: default response
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseModelCreateAccountResponse"
  "/order-buy-ewallet/create":
    post:
      tags:
      - Transaction
      operationId: createEWalletBuy
      requestBody:
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/CreateBuyOrderRequest"
      responses:
        '200':
          description: default response
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseModelCreateBuyOrderResponse"
  "/order-buy-fpx/create":
    post:
      tags:
      - Transaction
      operationId: createFpxBuy
      requestBody:
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/CreateBuyOrderFpxRequest"
      responses:
        '200':
          description: default response
          content:
            "*/*":
              schema:
                type: string
components:
  schemas:
    FieldErrorModel:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    Address:
      required:
      - addressOne
      - addressThree
      - addressTwo
      - city
      - country
      - state
      - zipCode
      type: object
      properties:
        addressOne:
          type: string
          example: LEVEL 29, MENARA STANDARD CHARTERED
        addressTwo:
          type: string
          example: 30, JALAN SULTAN ISMAIL
        addressThree:
          type: string
          example: BATU 8 1/2
        addressFour:
          type: string
        addressFive:
          type: string
        country:
          type: string
          example: MY
        state:
          type: string
          example: KUL
        city:
          type: string
          example: Bukit Bintang
        zipCode:
          type: string
          example: '50250'
    ContactInfo:
      required:
      - phoneCountry
      - phoneIdd
      - phoneNo
      type: object
      properties:
        phoneNo:
          type: string
          example: '135358302'
        phoneIdd:
          type: string
          example: "+60"
        phoneCountry:
          type: string
          example: MY
    CreateCustomerRequest:
      required:
      - birthCountry
      - commMode
      - corrAddress
      - dateOfBirth
      - email
      - firstName
      - gender
      - id
      - idType
      - language
      - lastName
      - mobilePhone
      - nationality
      - occupation
      - permAddress
      - race
      - salutation
      type: object
      properties:
        salutation:
          type: string
          example: MR
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        id:
          type: string
          example: '821105089625'
        idType:
          type: string
          example: NRIC
          enum:
          - NRIC
          - OLD_NRIC
          - POLICE_ID
          - OKU
        gender:
          type: string
          example: M
          enum:
          - M
          - F
        commMode:
          type: string
          example: EMAIL
        language:
          type: string
          example: EN
        nationality:
          type: string
          example: MALAYSIAN
        birthCountry:
          type: string
          example: MY
        dateOfBirth:
          type: string
          format: date-time
          example: '1982-11-05T08:56:36Z'
        race:
          type: string
          example: CHINESE
        email:
          type: string
          example: johndoe@gmail.com
        mobilePhone:
          "$ref": "#/components/schemas/ContactInfo"
        homePhone:
          "$ref": "#/components/schemas/ContactInfo"
        occupation:
          "$ref": "#/components/schemas/OccupationInfo"
        permAddress:
          "$ref": "#/components/schemas/Address"
        corrAddress:
          "$ref": "#/components/schemas/Address"
    OccupationInfo:
      required:
      - annualIncome
      - employer
      - occupation
      - phoneCountry
      - phoneExt
      - phoneIdd
      - phoneNo
      type: object
      properties:
        phoneNo:
          type: string
          example: '135358302'
        phoneExt:
          type: string
          example: '205'
        phoneIdd:
          type: string
          example: "+60"
        phoneCountry:
          type: string
          example: MY
        occupation:
          type: string
          example: '01'
        employer:
          type: string
          example: ABC Sdn. Bhd.
        annualIncome:
          type: string
          example: '03'
    CreateCustomerResponse:
      type: object
      properties:
        customerId:
          type: string
    ResponseModelCreateCustomerResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/CreateCustomerResponse"
        traceId:
          type: string
        errorBag:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorModel"
    CreateAccountRequest:
      required:
      - customerId
      - orderNo
      type: object
      properties:
        customerId:
          type: string
          example: PAM00001
        orderNo:
          type: string
          example: P200101000001
    CreateAccountResponse:
      type: object
      properties:
        customerId:
          type: string
        accountNo:
          type: string
    ResponseModelCreateAccountResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/CreateAccountResponse"
        traceId:
          type: string
        errorBag:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorModel"
    CreateBuyOrderRequest:
      required:
      - fundCode
      - investmentAmount
      - paymentMode
      type: object
      properties:
        customerId:
          type: string
          example: PAM00001
        accountNo:
          type: string
          example: '208930'
        referenceNo:
          type: string
        fundCode:
          type: string
          example: P001
        investmentCurrency:
          type: string
          example: MYR
        investmentAmount:
          type: number
          example: 100
        paymentMode:
          type: string
          example: FPX
        salesCharge:
          type: integer
          format: int32
    CreateBuyOrderResponse:
      type: object
      properties:
        orderNo:
          type: string
    ResponseModelCreateBuyOrderResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/CreateBuyOrderResponse"
        traceId:
          type: string
        errorBag:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorModel"
    CreateBuyOrderFpxRequest:
      required:
      - fundCode
      - investmentAmount
      - paymentMode
      type: object
      properties:
        customerId:
          type: string
          example: PAM00001
        accountNo:
          type: string
          example: '208930'
        referenceNo:
          type: string
        fundCode:
          type: string
          example: P001
        investmentCurrency:
          type: string
          example: MYR
        investmentAmount:
          type: number
          example: 100
        paymentMode:
          type: string
          example: FPX
        salesCharge:
          type: integer
          format: int32
        responseUrl:
          type: string
        backendUrl:
          type: string
  securitySchemes:
    authorizationScheme:
      type: apiKey
      name: Authorization
      in: header
      bearerFormat: Bearer