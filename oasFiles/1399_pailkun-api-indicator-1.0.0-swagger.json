{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Indicators API",
    "description" : "Governance indicators api",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "description" : "AWS Servers",
    "url" : "https://r8l5g5su56.execute-api.eu-west-1.amazonaws.com/default/"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/pailkun/api-indicator/1.0.0"
  } ],
  "tags" : [ {
    "name" : "indicator",
    "description" : "Governance indicator values"
  }, {
    "name" : "profile",
    "description" : "Country profile indicator (WIP)"
  }, {
    "name" : "country",
    "description" : "Country info"
  }, {
    "name" : "attribute",
    "description" : "Attribute/indicator info"
  }, {
    "name" : "type",
    "description" : "Attribute type info"
  }, {
    "name" : "type-option",
    "description" : "Attribute type option info"
  }, {
    "name" : "period",
    "description" : "Date and time period info"
  }, {
    "name" : "source",
    "description" : "Indictator source info"
  }, {
    "name" : "theme",
    "description" : "Governance theme info"
  }, {
    "name" : "objective",
    "description" : "Governance objective info"
  }, {
    "name" : "region",
    "description" : "Geographical region info"
  } ],
  "paths" : {
    "/indicator" : {
      "get" : {
        "tags" : [ "indicator" ],
        "summary" : "all indicators",
        "description" : "Get all indicators, you can filter by other properties\n",
        "operationId" : "allIndicators",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "filter by country code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "periodCode",
          "in" : "query",
          "description" : "filter by period code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "themeId",
          "in" : "query",
          "description" : "filter by theme id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "objectiveId",
          "in" : "query",
          "description" : "filter by objective id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sourceId",
          "in" : "query",
          "description" : "filter by source id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "attributeCode",
          "in" : "query",
          "description" : "filter by attribute code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "isVerified",
          "in" : "query",
          "description" : "filter by whether indicator is verified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IndicatorPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/indicator/{id}" : {
      "get" : {
        "tags" : [ "indicator" ],
        "summary" : "indicator by id",
        "description" : "Get indicator by id\n",
        "operationId" : "getIndicatorById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "indicator id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Indicator"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/country" : {
      "get" : {
        "tags" : [ "country" ],
        "summary" : "all countries",
        "description" : "Get all countries, you can filter by other properties\n",
        "operationId" : "allCountries",
        "parameters" : [ {
          "name" : "regionCode",
          "in" : "query",
          "description" : "filter by region code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/AsAtDate"
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/country/{code}" : {
      "get" : {
        "tags" : [ "country" ],
        "summary" : "country by code",
        "description" : "Get country by code\n",
        "operationId" : "getCountryByCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "country code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/AsAtDate"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/attribute" : {
      "get" : {
        "tags" : [ "attribute" ],
        "summary" : "all attributes",
        "description" : "Get all attributes, you can filter by other properties\n",
        "operationId" : "allAttributes",
        "parameters" : [ {
          "name" : "typeCode",
          "in" : "query",
          "description" : "filter by type code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectiveId",
          "in" : "query",
          "description" : "filter by objective id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttributePageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/attribute/{code}" : {
      "get" : {
        "tags" : [ "attribute" ],
        "summary" : "attribute by code",
        "description" : "Get attribute by code\n",
        "operationId" : "getAttributeByCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "attribute code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attribute"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/type" : {
      "get" : {
        "tags" : [ "type" ],
        "summary" : "all types",
        "description" : "Get all types, you can filter by other properties\n",
        "operationId" : "allTypes",
        "parameters" : [ {
          "name" : "hasOptions",
          "in" : "query",
          "description" : "filter by whether type has options",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TypePageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/type/{code}" : {
      "get" : {
        "tags" : [ "type" ],
        "summary" : "type by code",
        "description" : "Get type by code\n",
        "operationId" : "getTypeByCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "type code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Type"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/type-option" : {
      "get" : {
        "tags" : [ "type-option" ],
        "summary" : "all type opions",
        "description" : "Get all type options, you can filter by other properties\n",
        "operationId" : "allTypeOptions",
        "parameters" : [ {
          "name" : "typeCode",
          "in" : "query",
          "description" : "filter by type code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "filter by option code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "Int32"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TypeOptionPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/type-option/{typeCode}/option/{code}" : {
      "get" : {
        "tags" : [ "type-option" ],
        "summary" : "type option by type and code",
        "description" : "Get type option by type code and option code\n",
        "operationId" : "getTypeOptionByTypeAndCode",
        "parameters" : [ {
          "name" : "typeCode",
          "in" : "path",
          "description" : "type code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "option code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "Int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TypeOption"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/period" : {
      "get" : {
        "tags" : [ "period" ],
        "summary" : "all periods",
        "description" : "Get all date periods\n",
        "operationId" : "allPeriods",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeriodPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/period/{code}" : {
      "get" : {
        "tags" : [ "period" ],
        "summary" : "period by code",
        "description" : "Get period by code\n",
        "operationId" : "getPeriodByCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "period code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Period"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/period/from/{start}/to/{end}" : {
      "get" : {
        "tags" : [ "period" ],
        "summary" : "all periods in range",
        "description" : "Get all date periods between start and end date\n",
        "operationId" : "allPeriodsInDateRange",
        "parameters" : [ {
          "name" : "start",
          "in" : "path",
          "description" : "start date (Format YYYY-MM-DD)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "end",
          "in" : "path",
          "description" : "end date (Format YYYY-MM-DD)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeriodPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/source" : {
      "get" : {
        "tags" : [ "source" ],
        "summary" : "all sources",
        "description" : "Get all sources\n",
        "operationId" : "allSources",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourcePageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/source/{id}" : {
      "get" : {
        "tags" : [ "source" ],
        "summary" : "source by id",
        "description" : "Get source by id\n",
        "operationId" : "getSourceById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "source id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Source"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/theme" : {
      "get" : {
        "tags" : [ "theme" ],
        "summary" : "all themes",
        "description" : "Get all themes\n",
        "operationId" : "allThemes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThemePageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/theme/{id}" : {
      "get" : {
        "tags" : [ "theme" ],
        "summary" : "theme by id",
        "description" : "Get theme by id\n",
        "operationId" : "getThemeById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "theme id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Theme"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/objective" : {
      "get" : {
        "tags" : [ "objective" ],
        "summary" : "all objectives",
        "description" : "Get all objectives, you can filter by other properties\n",
        "operationId" : "allObjectives",
        "parameters" : [ {
          "name" : "themeId",
          "in" : "query",
          "description" : "filter by theme",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "Int32"
          }
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectivePageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/objective/{id}" : {
      "get" : {
        "tags" : [ "objective" ],
        "summary" : "objective by id",
        "description" : "Get objective by id\n",
        "operationId" : "getObjectiveById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "objective id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Objective"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    },
    "/region" : {
      "get" : {
        "tags" : [ "region" ],
        "summary" : "all regions",
        "description" : "Get all regions\n",
        "operationId" : "allRegions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AsAtDate"
        }, {
          "$ref" : "#/components/parameters/PaginationSkip"
        }, {
          "$ref" : "#/components/parameters/PaginationLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionPageResults"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400Error"
          }
        }
      }
    },
    "/region/{code}" : {
      "get" : {
        "tags" : [ "region" ],
        "summary" : "region by code",
        "description" : "Get region by code\n",
        "operationId" : "getRegionByCode",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "region code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/AsAtDate"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Region"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/404Error"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Indicator" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "countryCode" : {
            "type" : "string",
            "example" : "BI"
          },
          "countryShortName" : {
            "type" : "string",
            "example" : "Burundi"
          },
          "themeId" : {
            "type" : "integer",
            "example" : 2
          },
          "themeName" : {
            "type" : "string",
            "example" : "Corporate Governance"
          },
          "objectiveId" : {
            "type" : "integer",
            "example" : 3
          },
          "objectiveName" : {
            "type" : "string",
            "example" : "Promoting an Enabling Environment"
          },
          "sourceId" : {
            "type" : "integer",
            "example" : 3
          },
          "sourceName" : {
            "type" : "string",
            "example" : "Wikipedia"
          },
          "sourceAddress" : {
            "type" : "string",
            "example" : "https://en.wikipedia.org/wiki/Burundi"
          },
          "attributeCode" : {
            "type" : "integer",
            "example" : 49
          },
          "attributeName" : {
            "type" : "string",
            "example" : "Existence of regulatory framework comprising of a Tax Authority"
          },
          "periodCode" : {
            "type" : "string",
            "example" : 2013
          },
          "value" : {
            "type" : "string",
            "example" : 3
          },
          "valueTypeCode" : {
            "type" : "string",
            "example" : "YNN"
          },
          "valueIsOption" : {
            "type" : "boolean",
            "example" : true
          },
          "valueDescription" : {
            "type" : "string",
            "example" : "No Information"
          },
          "comment" : {
            "type" : "string",
            "example" : "No data found"
          },
          "isVerified" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "IndicatorPageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Indicator"
            }
          }
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "BI"
          },
          "regionCode" : {
            "type" : "string",
            "example" : "CA"
          },
          "shortName" : {
            "type" : "string",
            "example" : "Burundi"
          },
          "longName" : {
            "type" : "string",
            "example" : "Republic of Burundi"
          }
        }
      },
      "CountryPageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        }
      },
      "Attribute" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 49
          },
          "typeCode" : {
            "type" : "string",
            "example" : "YesNo"
          },
          "objectiveId" : {
            "type" : "integer",
            "example" : 2
          },
          "name" : {
            "type" : "string",
            "example" : "Existence of regulatory framework comprising of a Tax Authority"
          }
        }
      },
      "AttributePageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attribute"
            }
          }
        }
      },
      "Type" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "YNN"
          },
          "name" : {
            "type" : "string",
            "example" : "YesNo"
          },
          "comment" : {
            "type" : "string",
            "example" : "Yes and No with option for No Information"
          },
          "hasOptions" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "TypePageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Type"
            }
          }
        }
      },
      "TypeOption" : {
        "type" : "object",
        "properties" : {
          "typeCode" : {
            "type" : "string",
            "example" : "YNN"
          },
          "code" : {
            "type" : "integer",
            "example" : 3
          },
          "description" : {
            "type" : "string",
            "example" : "No Information"
          }
        }
      },
      "TypeOptionPageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TypeOption"
            }
          }
        }
      },
      "Period" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : 2020
          },
          "from" : {
            "type" : "string",
            "example" : "2020-01-01",
            "format" : "date"
          },
          "to" : {
            "type" : "string",
            "example" : "2020-12-31",
            "format" : "date"
          },
          "comment" : {
            "type" : "string",
            "example" : "2020 whole year"
          }
        }
      },
      "PeriodPageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Period"
            }
          }
        }
      },
      "Source" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "host" : {
            "type" : "string",
            "example" : "https://wikipedia.org"
          },
          "name" : {
            "type" : "string",
            "example" : "Wikipedia"
          },
          "comment" : {
            "type" : "string",
            "example" : "Country profile on wikipedia"
          }
        }
      },
      "SourcePageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Source"
            }
          }
        }
      },
      "Theme" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Corporate Governance"
          },
          "description" : {
            "type" : "string",
            "example" : "Corporate Governance of country"
          }
        }
      },
      "ThemePageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Theme"
            }
          }
        }
      },
      "Objective" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Promoting an Enabling Environment"
          },
          "description" : {
            "type" : "string",
            "example" : "1. Promoting an Enabling Environment"
          },
          "themeId" : {
            "type" : "integer",
            "example" : 2
          }
        }
      },
      "ObjectivePageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Objective"
            }
          }
        }
      },
      "Region" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "CA"
          },
          "name" : {
            "type" : "string",
            "example" : "Central Africa"
          }
        }
      },
      "RegionPageResults" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 100
          },
          "skip" : {
            "type" : "integer",
            "example" : 0
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        }
      },
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "NotFound"
          },
          "message" : {
            "type" : "string",
            "example" : "resource was not found"
          }
        }
      }
    },
    "responses" : {
      "404Error" : {
        "description" : "Not Found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "400Error" : {
        "description" : "Bad Request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "5xxError" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters" : {
      "PaginationLimit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "maximum number of records to return",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "default" : 100,
          "type" : "integer",
          "format" : "int32"
        }
      },
      "PaginationSkip" : {
        "name" : "skip",
        "in" : "query",
        "description" : "number of records to skip for pagination",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "default" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      },
      "AsAtDate" : {
        "name" : "asAtDate",
        "in" : "query",
        "description" : "As at date (Format YYYY-MM-DD) (Default to Now)",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "string",
          "format" : "date"
        }
      }
    }
  }
}