openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ElevationSoftware/CUSS2.0/1.0.0
info:
  version: "1.0.0"
  title: CUSS 2.0 Spec
  description: >-
    This is CUSS 2.0 schema, implementing Oauth2 application authentication.
security:
  - application:
      - BPPrinter
      - GPPrinter
      - Scanner
      - CardReader
paths:
  /acquire:
    post:
      tags:
        - Component Directive
      description: Make the virtual component available for an application. The application could at the same time subscribe to a component specific listener associate to the component acquired.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Acquire Response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
  /backward:
    post:
      tags:
        - DCI
      description: Allowing moving a bag back to the previous position or back to the user.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Backward Response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
  /cancel:
    post:
      tags:
        - Event Directive
      description: Cancel all pending (previously called in asynchronous mode) directives related to the component at the time of this directive usage.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Cancel Response
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /components:
    get:
      tags:
        - MIF
      description: >-
        Return a list of all the implemented components, their characteristics and their CORBA object references. This will allow the application to check whether all the components that it requires are implemented or not.
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /disable:
    post:
      tags:
        - Component Directive
      description: >-
        Make the virtual component unavailable for the user (e.g. disable a reader device from a document insertion).
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /enable:
    post:
      tags:
        - Component Directive
      description: >-
        Make the virtual component available for the user (e.g. enable  a reader device for a document insertion)
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /forward:
    post:
      tags:
        - DCI
      description: >-
       The function allows moving a bag to the next position on the conveyor or to the airports take- away belt.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /load:
    post:
      tags:
        - SMI
      description: >-
        Ask CUSS application Manager to load an application (realize Load state transition).
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /notify:
    post:
      tags:
        - AMI
      description: >-
        This directive is used by the application to request a state change from CUSS Application Manager, which will change the application state if request is approved.
      parameters:
        - name: state
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /offer:
    post:
      tags:
        - Document Directive
      description: >-
        Offer the document from the virtual component to the user or to an other component.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /pause:
    post:
      tags:
        - DCI
      description: >-
        Temporarily suspends any play back currently in progress
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /play:
    post:
      tags:
        - DCI
      description: >-
        Request that an SSML formatted request be spoken immediately
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/xml:
            schema:
              type: string
            examples:
              xml:
                value: <?xml version="1.0" encoding=”UTF-8”?> <deviceHelp lang-supported="en-US,ja-JP,fr-FR"> <deviceDescription time=”7”> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US"> </speak> The magnetic card reader device is used to read the data from your credit card or frequent flier card <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="ja-JP"> 磁気カードリーダ装置は、クレジットカードやマイレージカードからデータを読 み取るために使用される </speak> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="fr-FR"> Le dispositif de lecteur de carte magnétique est utilisé pour lire les données de </speak> </deviceDescription> votre carte de crédit ou carte de grand voyageur <deviceLocation time=”5”>> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US"> The card reader is located to the lower right of the main screen </speak> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="ja-JP"> カードリーダは、メイン画面の右下に配置されている </speak> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="fr-FR"> </speak> Le lecteur de cartes est situé en bas à droite de l'écran principal </deviceLocation> <deviceProfile time=”13”>> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US"> The reader is mounted horizontally and protrudes about one half inch from the face of the kiosk. It is 2 inches tall and 5 inches wide with a card slot located in </speak> the center <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="ja-JP"> 読者は、水平に搭載され、キオスクの表面から約0.5インチに突出している。こ れは、中心部に位置するカードスロットを持つ広い背の高い2インチと5インチ である </speak> <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="fr-FR"> Le lecteur est monté horizontalement et dépasse d'environ un demi pouce de la surface de la borne. Il est 2 pouces et 5 pouces de large avec une fente pour </deviceProfile>
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /process:
    post:
      tags:
        - DCI
      description: >-
        Request that the SBD examine and process the bag currently on a belt component in order to get data about the bag (dimensions, scan, RFID, and similar.)
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /query:
    get:
      tags:
        - Component Directive
      description: Return the state/status of the virtual component.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /release:
    post:
      tags:
        - Component Directive
      description: >-
        Make the virtual component unavailable for an application and unsubscribe the event listener relative to the component. All pending asynchronous directives will be automatically cancelled if not cancelled by the application itself.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /resume:
    post:
      tags:
        - SMI
      description: >-
        Send pectab to a printer in order to create a print request in the CUSS
        platform
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /resumeAll:
    post:
      tags:
        - SMI
      description: >-
        Send pectab to a printer in order to create a print request in the CUSS
        platform
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /retain:
    post:
      tags:
        - Document Directive
      description: >-
        Capture the document in the virtual component that is associated to secure bin.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /send:
    post:
      tags:
        - Data Directive
      description: Send data from the application to the virtual component.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: data
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /setup:
    post:
      tags:
        - Data Directive
      description: >-
        Set the virtual component and set up its profile for the application.
      parameters:
        - name: deviceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: data
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /stop:
    post:
      tags:
        - SMI
      description: >-
        Send pectab to a printer in order to create a print request in the CUSS
        platform
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /stopAll:
    post:
      tags:
        - SMI
      description: >-
        Send pectab to a printer in order to create a print request in the CUSS
        platform
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /suspend:
    post:
      tags:
        - SMI
      description: >-
        Suspend an application.
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /suspendAll:
    post:
      tags:
        - SMI
      description: >-
        Suspend all applications.
      responses:
        '200':
          description: Return Code
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Events'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  schemas:
    Device:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        reference:
          type: string
        linkedComponent:
          type: array
          items:
            type: integer
            format: int32
    KioskID:
      type: object
      properties:
        companyCode:
              type: string
        applicationName:
          type: string
        vendorCode:
          type: string
        kioskName:
          type: string
    KioskLocation:
      type: object
      properties:
        airportCode:
          type: string
        terminal:
          type: string
        area:
          type: string
        address:
          type: string
    Coords:
      type: object
      properties:
        direction:
          type: string
        degrees:
          type: integer
        minutes:
          type: integer
        seconds:
          type: integer
        hundreths:
          type: integer
    GpsLocation:
      type: object
      properties:
        longitude:
          $ref: '#/components/schemas/Coords'
        latitude:
          $ref: '#/components/schemas/Coords'
    Events:
      type: object
      properties:
        typeStamp:
          type: integer
          format: int32
        kioskID:
          $ref: '#/components/schemas/KioskID'
        kioskLocation:
          $ref: '#/components/schemas/KioskLocation'
        gpsLocation:
          $ref: '#/components/schemas/GpsLocation'
        componentRef:
          type: string
        functionName:
          type: string
        eventCode:
          type: integer
        eventType: 
          type: integer
        eventCategory:
          type: integer
        statusCode:
          type: integer
        elud:
          type: boolean
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'http://cuss2.herokuapp.com/oauth/token'
          scopes:
            BPPrinter: allows access to Boarding Pass Printer
            GPPrinter: allows access to General Purpose Printer
            Scanner: allows access to Scanner
            CardReader: allows access to Credit Card Reader
            Display: allows access to the kiosk Display
  responses:
    UnauthorizedError:
      description: API token is missing or invalid
