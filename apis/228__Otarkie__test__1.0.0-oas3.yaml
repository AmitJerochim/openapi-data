openapi: 3.0.0
info:
  description: Merchant Portal endpoints
  version: "1.0.0-oas3"
  title: Merchant Portal
  contact:
    email: info@otarkie.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: storebuilder
    description: store configuration and building endpoints
  - name: admin
    description: adminstrative endpoints for the portal
  - name: dashboard
    description: dashboard metrics endpoints
  - name: payments
    description: payments and transactions endpoints
  - name: orders
    description: orders related endpoints
  - name: customers
    description: customer related endpoints
  - name: products
    description: products and inventory related endpoints
  - name: promotions
    description: promotions and loyalty related endpoints
  - name: invoices
    description: invoice related endpoints
 
    
paths:
  /add/store/product:
    post:
      tags:
        - storebuilder
      summary: adds a product to a store
      operationId: addStoreProduct
      description: Adds an product to a Store
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
                
  /add/store/product/image:
    post:
      tags:
        - storebuilder
      summary: adds an image to a product
      description: Adds an product to a Store
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:  # Part 3 (an image)
                  type: string
                  format: binary
                merchantId:    # <!--- form field name
                  type: string
                productId:    # <!--- form field name
                  type: string
              required:
                - file
                - merchantId
                - productId
                
  /add/store/product/file:
    post:
      tags:
        - storebuilder
      summary: adds multiple products through a csv of excel file
      operationId: addStoreProductFile
      description: Adds an item to the system
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:  # Part 3 (an image)
                  type: string
                  format: binary
                merchantId:    # <!--- form field name
                  type: string
              required:
                - file
                - merchantId
        
  /add/store/category/image:
    post:
      tags:
        - storebuilder
      summary: adds an image to a category for the store
      operationId: addStoreCategoryImage
      description: Adds an item to the system
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:  # Part 3 (an image)
                  type: string
                  format: binary
                merchantId:    # <!--- form field name
                  type: string
                categoryId:
                  type: string
              required:
                - file
                - merchantId
                - categoryId
                
  /add/store/header:
    post:
      tags:
        - storebuilder
      summary: creates/adds a header section to a store
      operationId: addStoreHeader
      description: Adds an item to the system
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:  # Part 3 (an image)
                  type: string
                  format: binary
                merchantId:    # <!--- form field name
                  type: string
                title:    # <!--- form field name
                  type: string
                subtitle:    # <!--- form field name
                  type: string
                callToAction:    # <!--- form field name
                  type: string
              required:
                - file
                - merchantId
                - title
                - subtitle
                - callToAction
                
  /create/otarkie/merchant:
    post:
      tags:
        - admin
      summary: adds a merchant
      operationId: addMerchant
      description: Adds an item to the system
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Merchant'
  /update/merchant:
    post:
      tags:
        - admin
      summary: updates a merchant's information
      operationId: updateMerchant
      description: >-
        insert the information you wish to add or update inside the body, if the
        field already exists it will be updated or else it will be created
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchant'
        description: merchant to add
  /create/pin:
    post:
      tags:
        - admin
      summary: invites users to a merchant account
      operationId: createPin
      description: returns a pin that can be used by a user to join a merchantb accounts
      responses:
        '200':
          description: transactions returned
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
        description: Inventory item to add
  /create/user:
    post:
      tags:
        - admin
      summary: creates or updates user information
      operationId: createUser
      description: creates or updates standard user information
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: transactions to be requested
  /retrieve/merchant/gross:
    post:
      tags:
        - dashboard
      summary: retrieves a merchants gross revenue in a specified time
      operationId: retrieveRevenue
      description: >-
        returns a merchants revenue, if only merchantId is specified it will
        return the entire lifetime revenue. The other fields are used to filter.
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/RevenueRequest'
  /retrieve/merchant/net:
    post:
      tags:
        - dashboard
      summary: retrieves a merchants net revenue in a specified time
      operationId: retrieveNet
      description: >-
        returns a merchants revenue, if only merchantId is specified it will
        return the entire lifetime revenue. The other fields are used to filter.
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/RevenueRequest'
  /retrieve/merchant/stats:
    post:
      tags:
        - dashboard
      summary: >-
        retrieves number of successful, failed and total payments in a specific
        time
      operationId: retrieveStats
      description: >-
        retrieves number of successful, failed and total payments in a specific
        time
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/RevenueRequest'
  /retrieve/merchant/transactions/plot/line:
    post:
      tags:
        - dashboard
      summary: >-
        retrieves a list of values of the daily totals for the number of days
        specified
      operationId: retrieveLinePlot
      description: >-
        retrieves a list of values of the daily total for the number of days
        specified. Set type to net or gross
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/PlotRequest'
  /retrieve/merchant/transactions/plot/cumulative:
    post:
      tags:
        - dashboard
      summary: >-
        retrieves a list of values of the cumulative totals for the number of
        days specified
      operationId: retrieveCumulativePlot
      description: >-
        retrieves a list of values of the cumulative totals for the number of
        days specified. Set type as net or gross
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/PlotRequest'
  /retrieve/user:
    get:
      tags:
        - admin
      summary: retrieves user information
      operationId: retrieveUser
      description: |
        By passing the transaction id to the end of the query
      parameters:
        - in: query
          name: uid
          description: pass user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: bad input parameter
  /retrieve/merchant:
    get:
      tags:
        - admin
        - dashboard
      summary: retrieves merchant information
      operationId: searchInventory
      description: |
        By passing the merchant id to the end of the query
      parameters:
        - in: query
          name: merchantId
          description: pass merchant ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Merchant'
        '400':
          description: bad input parameter
  /retrieve/current/payout:
    get:
      tags:
        - dashboard
      summary: retrieves a merchant's expected amount for the upcoming payout
      operationId: retrievePayout
      description: >-
        which is the money expected to be incoming to their bank account By
        passing the merchant id to the end of the query
      parameters:
        - in: query
          name: merchantId
          description: pass merchant ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Merchant'
        '400':
          description: bad input parameter
  /retrieve/alltime/payout:
    get:
      tags:
        - dashboard
      summary: retrieves a merchant's all time paymen
      operationId: retrieveAlltimePayout
      description: >-
        all the money sent to a merchant By passing the merchant id to the end
        of the query
      parameters:
        - in: query
          name: merchantId
          description: pass merchant ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Merchant'
        '400':
          description: bad input parameter
  /add/payment:
    post:
      tags:
        - payments
      summary: adds payment information to a merchant
      operationId: addPayment
      description: adds payment information to a merchant
      responses:
        '200':
          description: transactions returned
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPayment'
        description: Inventory item to add
  /retrieve/merchant/transactions:
    post:
      tags:
        - payments
      summary: retrieves a merchants transactions in a specified period
      operationId: retrieveTransactions
      description: >-
        returns a merchants transactions, if only merchantId is specified it
        will return all transactions default is succeeded true. The other fields
        are used to filter.
      responses:
        '200':
          description: pin created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        description: transactions to be requested
  /add/customer:
    post:
      tags:
        - customers
      summary: adds a customer to a merchant
      operationId: addCustomer
      description: >-
        adds a customer to a merchant. Merchants can only specify the approx
        amount of visits through frequency
      responses:
        '200':
          description: transactions returned
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomer'
  /retrieve/customers:
    post:
      tags:
        - customers
      summary: retrieves a  customer or customers
      operationId: retrieveCustomer
      description: >-
        retrieves all customers if only the merchantId is specified. The other
        fields are used to filter.
      responses:
        '200':
          description: transactions returned
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveCustomer'
  /create/product:
    post:
      tags:
        - products
      summary: adds a product to a merchant
      operationId: addProduct
      description: Adds an item to the system
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /create/product/variation:
    post:
      tags:
        - products
      summary: adds a product variation to a product
      operationId: addVariation
      description: E.g with diffrent attributtes
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSku'
        description: product to add
  /retrieve/products:
    post:
      tags:
        - products
      summary: retrieves a product or products
      operationId: retrieveProducts
      description: >-
        retrieves all products if only the merchantId is specified. The other
        fields are used to filter.
      responses:
        '200':
          description: transactions returned
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
  /retrieve/categories:
    get:
      tags:
        - products
      summary: retrieves the categories of the products a merchant has
      operationId: retrieveCatgeory
      description: |
        By passing the merchant id to the end of the query
      parameters:
        - in: query
          name: merchantId
          description: pass merchant ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
        '400':
          description: bad input parameter
  /create/promotion/discount/specific:
    post:
      tags:
        - promotions
      summary: creates a discount promotion on specific products
      operationId: createPromoDiscount
      description: creates a discount promotion on specific products
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /create/promotion/discount/all:
    post:
      tags:
        - promotions
      summary: creates a discount promotion on all products
      operationId: createPromoDiscountAll
      description: creates a discount promotion on specific products
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /create/promotion/buy/get:
    post:
      tags:
        - promotions
      summary: 'creates a buy [x] get [x] promotion'
      operationId: createBuyGetPromo
      description: 'creates a buy [x] get [x] promotion'
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /create/promotion/total:
    post:
      tags:
        - promotions
      summary: creates a promotion based on a cart total
      operationId: createTotalPromo
      description: 'creates a buy [x] get [x] promotion'
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /retrieve/promotions:
    post:
      tags:
        - promotions
      summary: retrieves promotions
      operationId: retrievePromo
      description: 'retrieves promotions, can be filtered'
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /retrieve/customers/loyalty:
    post:
      tags:
        - promotions
      summary: retrieves customers with by loyalty statuses
      operationId: retrieveLoyalty
      description: 'retrieves promotions, can be filtered'
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
  /create/invoice:
    post:
      tags:
        - invoices
      summary: creates a payable invoice for a merchant
      operationId: createMerchant
      description: Creates a payable merchant
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: product to add
  /retrieve/invoices:
    post:
      tags:
        - invoices
      summary: retrieves invoices or a specific invoice
      operationId: retrieveInvoice
      description: retrieves invoices or a specific invoice
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/PlotRequest'
  /disable/invoice:
    get:
      tags:
        - invoices
      summary: retrieves the categories of the products a merchant has
      operationId: disableInvoice
      description: |
        By passing the merchant id to the end of the query
      parameters:
        - in: query
          name: invoiceId
          description: pass invoice ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
        '400':
          description: bad input parameter
  /retrieve/orders:
    post:
      tags:
        - orders
      summary: retrieves orders
      operationId: retrieveOrder
      description: retrieves invoices or a specific invoice
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              required:
              - merchantId
              properties:
                merchantId:
                  type: string
                  example: VEbz0CJrrxvO0Gx6kKtT
                  
  /retrieve/order:
    post:
      tags:
        - orders
      summary: retrieves a specific order
      description: retrieves invoices or a specific invoice
      responses:
        '200':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              required:
              - transactionId
              - merchantId
              properties:
                transactionId:
                  type: string
                  example: 65.685846398218
                merchantId:
                  type: string
                  example: VEbz0CJrrxvO0Gx6kKtT
servers:
  - url: 'https://virtserver.swaggerhub.com/Otarkie/test/1.0.0'
components:
  requestBodies:
    Merchant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Merchant'
      description: merchant to add
    Product:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
      description: product to add
    RevenueRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevenueRequest'
      description: transactions to be requested
    PlotRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlotRequest'
      description: transactions to be requested
  schemas:
    OrdersRequest:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
    OrderRequest:
      required:
        - transactionId
      properties:
        transactionId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
    Product:
      type: object
      required:
        - amount
        - merchantId
        - productName
        - category
        - currency
        - inventory
      properties:
        amount:
          type: integer
          example: 1000
        merchantName:
          type: string
          example: Test Corporation
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        productName:
          type: string
          example: T Shirt
        type:
          type: string
          example: good
        description:
          type: string
          example: Lati tada
        category:
          type: string
          example: shoes
        subCategory:
          type: string
          example: fitness
        currency:
          type: string
          example: usd
        skuId:
          type: string
          example: '863847'
        inventory:
          type: object
          example:
            type: infinite
            stock: 200
    Invoice:
      required:
        - merchantId
        - products
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        products:
          type: array
          example:
            - productId: q8ZBMENb4vvTH50PK0q
              sku: 0
              quantity: 1
            - productId: AwHOJ78usCFADibKjJl
              sku: 0
              quantity: 2
          items: {}
    Merchant:
      required:
        - name
        - industry
        - email
        - phone
        - region
        - processorId
        - uid
        - verified
      properties:
        name:
          type: string
          example: ACME Corporation
        industry:
          type: string
          example: Food
        phone:
          type: string
          example: 408-867-5309
        email:
          type: string
          example: info@acme.com
        region:
          type: string
          example: Zimbabwe
        processorId:
          type: string
          example: uK7zicJODvni2J0Rfck5
        uid:
          type: string
          example: PyMpOpkAsNdE2QU9ZasMap0Eubj1
        verified:
          type: boolean
          example: false
    UpdateMerchant:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: uK7zicJODvni2J0Rfck5
    3PP:
      required:
        - name
        - industry
        - email
        - phone
        - region
        - couponConfirmUrl
        - couponRedeemUrl
      properties:
        name:
          type: string
          example: ACME Corporation
        industry:
          type: string
          example: Food
        phone:
          type: string
          example: 408-867-5309
        email:
          type: string
          example: info@acme.com
        region:
          type: string
          example: Harare
        couponRedeemUrl:
          type: string
          example: 'https://example.com/redeem'
        couponConfirmUrl:
          type: string
          example: 'https://example.com/confirm'
    PinRequest:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
    
      
    TransactionRequest:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: XFXFDYtYF
        succeeded:
          type: boolean
          example: true
        dateFrom:
          type: integer
          example: 1326853478
          description: Seconds after 1970
        dateTo:
          type: integer
          example: 1326853478
          description: Seconds after 1970
    RevenueRequest:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        dateFrom:
          type: integer
          example: 1326853478
          description: Seconds after 1970
        dateTo:
          type: integer
          example: 1326853478
          description: Seconds after 1970
        type:
          type: string
          example: net
    PlotRequest:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        daysFromToday:
          type: integer
          example: 2
          description: Seconds after 1970
        type:
          type: string
          example: net
    User:
      required:
        - email
        - firstName
        - lastName
        - uid
      properties:
        email:
          type: string
          example: user@emali.com
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Dow
          description: Seconds after 1970
        uid:
          type: string
          example: afbiufbicxxxsiuh
        phoneNumber:
          type: string
          example: 1326853478
    JoinMerchantRequest:
      required:
        - pin
        - publicMerchantId
        - uid
      properties:
        pin:
          type: string
          example: 5363
        publicMerchantId:
          type: string
          example: 47838
        uid:
          type: string
          example: xxbfhusfhsf
    AddPayment:
      required:
        - fullName
        - email
        - payingFor
        - payedWith
        - amount
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        fullName:
          type: string
          example: Jane Denson
        email:
          type: string
          example: jane@example.com
        payingFor:
          type: string
          example: checkout
        payedWith:
          type: string
          example: card
        amount:
          type: integer
          example: 250
    AddCustomer:
      required:
        - merchantId
        - userName
        - email
        - amount
        - created
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        userName:
          type: string
          example: Jane Denson
        email:
          type: string
          example: jane@example.com
        phone:
          type: string
          example: '+2748385838'
        amount:
          type: integer
          example: 1250
    RetrieveCustomer:
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        loyalty:
          type: string
          example: low
        email:
          type: string
          example: jane@example.com
        phone:
          type: string
          example: '+278748383'
    AddSku:
      required:
        - productId
      properties:
        productId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        description:
          type: string
          example: Lati tada
        skuId:
          type: string
          example: '863847'
        attributes:
          type: object
          example:
            size: 2
            color: blue
        inventory:
          type: object
          example:
            type: limited
            stock: 200
    ProductRequest:
      type: object
      required:
        - merchantId
      properties:
        merchantId:
          type: string
          example: jAfplWIBxIY1c8kCabWp
        amount:
          type: integer
          example: 1000
        productName:
          type: string
          example: T Shirt
        isCoupon:
          type: boolean
          example: false
        type:
          type: string
          example: good
        category:
          type: string
          example: clothes
        currency:
          type: string
          example: usd
        skuId:
          type: string
          example: '863847'