{
  "openapi" : "3.0.2",
  "info" : {
    "version" : "1.0.0",
    "title" : "E-Paraksts on-boarding service"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/FF-IT/e-paraksts_on_boarding_service/1.0.0"
  }, {
    "url" : "/v1",
    "description" : "Development server"
  } ],
  "security" : [ {
    "Oauth" : [ "read:onboarding", "write:onboarding" ]
  } ],
  "paths" : {
    "/user/state" : {
      "get" : {
        "summary" : "Returns user and current on-boarding state.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserState"
                }
              }
            }
          }
        }
      }
    },
    "/user/preferred-language" : {
      "post" : {
        "summary" : "Allows us to persist preferredLanguage of current user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "language" : {
                    "description" : "locale identifier (Language Tag rfc7231 section-3.1.3.1)",
                    "type" : "string"
                  }
                },
                "required" : [ "language" ]
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      }
    },
    "/consent/{terms}" : {
      "get" : {
        "summary" : "Returns current version of auth or sign terms",
        "parameters" : [ {
          "name" : "termType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "auth", "sign" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "This content is localized",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsentTerms"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "User confirms terms",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConsetConfirmation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsentState"
                }
              }
            }
          }
        }
      }
    },
    "/otp/phone" : {
      "post" : {
        "summary" : "Issues OTP attempt for phone number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "countryPrefix", "phoneNumber" ],
                "properties" : {
                  "countryPrefix" : {
                    "type" : "string"
                  },
                  "phoneNumber" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OTP"
                }
              }
            }
          }
        }
      }
    },
    "/otp/phone/{otp_id}" : {
      "post" : {
        "summary" : "Validation of OTP token for phone",
        "parameters" : [ {
          "name" : "otp_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "code" ],
                "properties" : {
                  "code" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Phone"
                }
              }
            }
          }
        }
      }
    },
    "/otp/email" : {
      "post" : {
        "summary" : "Issues OTP attempt for email",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "email" ],
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "format" : "email"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OTP"
                }
              }
            }
          }
        }
      }
    },
    "/otp/email/{otp_id}" : {
      "post" : {
        "summary" : "Validation of TOTP token for email",
        "parameters" : [ {
          "name" : "otp_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "code" ],
                "properties" : {
                  "code" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/otp/auth-identity" : {
      "post" : {
        "summary" : "Issues OTP attempt for identity binding (custom_mobileid_issueurc)",
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "totp" : {
                      "$ref" : "#/components/schemas/OTP"
                    },
                    "payload" : {
                      "type" : "object",
                      "properties" : {
                        "txuserid" : {
                          "type" : "string"
                        },
                        "urc" : {
                          "type" : "string"
                        },
                        "qrcode" : {
                          "description" : "image/png",
                          "type" : "string",
                          "format" : "bytes"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/identification-document" : {
      "post" : {
        "summary" : "Stores identity document",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdentificationDocument"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      }
    },
    "/agreement/choices" : {
      "get" : {
        "summary" : "Returns choices for agreement process",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "This content is localized",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcessChoice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agreement/delivery-address-lookup" : {
      "get" : {
        "summary" : "Autocompletion for courier delivery address",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "minLength" : 3
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Top 10 closest matches",
                  "type" : "array",
                  "minLength" : 0,
                  "maxLength" : 10,
                  "items" : {
                    "type" : "object",
                    "required" : [ "value", "label" ],
                    "properties" : {
                      "value" : {
                        "type" : "string"
                      },
                      "label" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agreement/confirm-choice" : {
      "post" : {
        "summary" : "Confirms agreement prcoess choice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgreementProcess"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfirmedAgreementProcess"
                }
              }
            }
          }
        }
      }
    },
    "/agreement/download" : {
      "get" : {
        "summary" : "Downloads agreement documents in case of courier process",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "filename", "file", "mimeType" ],
                  "properties" : {
                    "filename" : {
                      "type" : "string"
                    },
                    "file" : {
                      "type" : "string",
                      "format" : "binary"
                    },
                    "mimeType" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mobile-links" : {
      "get" : {
        "summary" : "Returns current links for mobile application in store",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "appStore", "googlePlay" ],
                  "type" : "object",
                  "properties" : {
                    "appStore" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "googlePlay" : {
                      "type" : "string",
                      "format" : "uri"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-sign-identity-url" : {
      "get" : {
        "summary" : "Returns URL user gets redirected to create sign identity",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "url" ],
                  "properties" : {
                    "url" : {
                      "type" : "string",
                      "format" : "uri"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/acitvation" : {
      "get" : {
        "summary" : "Returns activation state",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activation"
                }
              }
            }
          }
        }
      }
    },
    "/acitvation/{cerType}/revoke" : {
      "post" : {
        "summary" : "Revokes certificate, nulls signCertExpiresAt and authCertExpiresAt",
        "parameters" : [ {
          "name" : "cerType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "auth", "sign" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activation"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "OAuth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "/oauth/dialog",
            "scopes" : {
              "read:onboarding" : "write onboarding state",
              "write:onboarding" : "read onboarding state"
            }
          }
        }
      }
    },
    "schemas" : {
      "OTP" : {
        "type" : "object",
        "required" : [ "id", "createdAt", "length", "expiration", "verifiedAt", "expired" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "datetime"
          },
          "length" : {
            "description" : "Length of token, for illustration and naive userland validation",
            "type" : "integer"
          },
          "expiration" : {
            "description" : "Expiration in seconds",
            "type" : "integer"
          },
          "verifiedAt" : {
            "nullable" : true,
            "type" : "string",
            "format" : "datetime"
          },
          "expired" : {
            "type" : "boolean"
          }
        }
      },
      "ConsentTerms" : {
        "type" : "object",
        "required" : [ "version", "body" ],
        "properties" : {
          "version" : {
            "description" : "Some kind of enumeration version identifier, should probably be orderable in case we have to compare versions in future",
            "type" : "string"
          },
          "body" : {
            "description" : "Safe subset of html injectable into DOM as is",
            "type" : "string"
          }
        }
      },
      "ConsetConfirmation" : {
        "type" : "object",
        "required" : [ "version" ],
        "properties" : {
          "version" : {
            "description" : "see ConsentTerms",
            "type" : "string"
          }
        }
      },
      "User" : {
        "type" : "object",
        "required" : [ "serialNumber", "firstName", "lastName", "preferredLanguage", "eidCertExpiresAt" ],
        "properties" : {
          "serialNumber" : {
            "description" : "We assume this is natural primary key",
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "preferredLanguage" : {
            "type" : "string",
            "nullable" : true,
            "description" : "locale identifier (Language Tag rfc7231 section-3.1.3.1)"
          },
          "eidCertExpiresAt" : {
            "description" : "User has valid eID",
            "nullable" : true,
            "type" : "string",
            "format" : "dateitme"
          }
        }
      },
      "ConsentState" : {
        "type" : "object",
        "required" : [ "version", "confirmedAt" ],
        "properties" : {
          "version" : {
            "description" : "see ConsentTerms",
            "type" : "string"
          },
          "confirmedAt" : {
            "type" : "string",
            "format" : "datetime"
          }
        }
      },
      "Phone" : {
        "type" : "object",
        "required" : [ "countryPrefix", "phoneNumber", "confirmedAt" ],
        "properties" : {
          "countryPrefix" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "confirmedAt" : {
            "type" : "string",
            "format" : "datetime"
          }
        }
      },
      "Email" : {
        "type" : "object",
        "required" : [ "email", "confirmedAt" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "confirmedAt" : {
            "type" : "string",
            "format" : "datetime"
          }
        }
      },
      "IdentificationDocument" : {
        "type" : "object",
        "required" : [ "kind", "number", "expirationDate" ],
        "properties" : {
          "kind" : {
            "type" : "string",
            "enum" : [ "passport", "eid" ]
          },
          "number" : {
            "type" : "string"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "AgreementProcessKind" : {
        "type" : "string",
        "enum" : [ "facetoface", "courier", "eid" ]
      },
      "ProcessChoice" : {
        "type" : "object",
        "required" : [ "kind", "title", "price" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "title" : {
            "type" : "string"
          },
          "price" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "format" : "uri",
            "description" : "Uri to asset (svg icon) with public access"
          },
          "addresses" : {
            "description" : "Location addreses for FaceToFace meetings",
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "id", "title", "address", "workHours", "coordinates" ],
              "properties" : {
                "id" : {
                  "type" : "number"
                },
                "title" : {
                  "type" : "string"
                },
                "address" : {
                  "type" : "string"
                },
                "workHours" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "coordinates" : {
                  "type" : "object",
                  "required" : [ "lat", "lon" ],
                  "properties" : {
                    "lat" : {
                      "type" : "string"
                    },
                    "lon" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FaceToFaceProcess" : {
        "type" : "object",
        "required" : [ "kind", "address" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "addreses" : {
            "description" : "Address id from choice",
            "type" : "number"
          }
        }
      },
      "CourierProcess" : {
        "type" : "object",
        "required" : [ "kind", "deliveryAddress", "deliveryPhone" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "deliveryAddress" : {
            "type" : "string"
          },
          "deliveryPhone" : {
            "type" : "string"
          }
        }
      },
      "EIDProcess" : {
        "type" : "object",
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          }
        }
      },
      "AgreementProcess" : {
        "oneOf" : [ {
          "$ref" : "#/components/schema/FaceToFaceProcess"
        }, {
          "$ref" : "#/components/schema/CourierProcess"
        }, {
          "$ref" : "#/components/schema/EIDProcess"
        } ],
        "discriminator" : {
          "propertyName" : "kind",
          "mapping" : {
            "facetoface" : "#/components/schemas/FaceToFaceProcess",
            "courier" : "#/components/schemas/CourierProcess",
            "eid" : "#/components/schemas/EIDProcess"
          }
        }
      },
      "ConfirmedAgreeementProcess" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AgreementProcess"
        }, {
          "type" : "object",
          "required" : [ "confirmedAt" ],
          "properties" : {
            "confirmedAt" : {
              "type" : "string",
              "format" : "datetime"
            }
          }
        } ]
      },
      "ActivationState" : {
        "type" : "object",
        "required" : [ "authCertExpiresAt", "signConsent", "signCertExpiresAt" ],
        "properties" : {
          "authCertExpiresAt" : {
            "description" : "Set after /otp/auth-identity OTP has been verified and identity issued",
            "nullable" : true,
            "type" : "string",
            "format" : "datetime"
          },
          "signConsent" : {
            "description" : "When and to what version of sign terms user has consented",
            "nullable" : true,
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConsentState"
            } ]
          },
          "signCertExpiresAt" : {
            "description" : "Set when user has created a password in TX WEB",
            "nullable" : true,
            "type" : "string",
            "format" : "datetime"
          }
        }
      },
      "UserState" : {
        "type" : "object",
        "required" : [ "user", "authConset", "contacts", "agreement", "activation" ],
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "authConsent" : {
            "description" : "When and to what version of auth terms user has consented",
            "nullable" : true,
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConsentState"
            } ]
          },
          "contacts" : {
            "type" : "object",
            "required" : [ "phone", "email" ],
            "properties" : {
              "phone" : {
                "description" : "Set when user verifies phone OTP",
                "nullable" : true,
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Phone"
                } ]
              },
              "email" : {
                "description" : "Set when user verifies email OTP",
                "nullable" : true,
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Email"
                } ]
              },
              "identificationDocument" : {
                "description" : "Set when user enters document",
                "nullable" : true,
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IdentificationDocument"
                } ]
              }
            }
          },
          "agreement" : {
            "nullable" : true,
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConfirmedAgreeementProcess"
            } ]
          },
          "activation" : {
            "$ref" : "#/components/schemas/ActivationState"
          }
        }
      }
    }
  }
}