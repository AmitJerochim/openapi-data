openapi: 3.0.0
servers:
  - url: 'https://api.wechop.biz/'
info:
  description: >-
    This is the API for WeChop Order Management. All calls to this api must have
    filled the header `x-api-key` and `x-auth-token`.
  version: "2.0.0-oas3"
  title: WeChop Order Management
  termsOfService: 'http://wechopgh.com/terms/'
  contact:
    email: francois@wechopgh.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: auth
    description: Registration and Authentication methods
  - name: legend
    description: Static data about the domain
  - name: menu
    description: Information about Menus
  - name: cart
    description: Operations on the Cart
  - name: order
    description: Access to Order Information
  - name: user
    description: Operations on User profiles
  - name: tracking
    description: Monitoring and Auditing operations
paths:
  /text:
    get:
      tags:
        - legend
      summary: Retrieves a list of string resources
      description: Returns a list of code/text pairs for the language of the user whose token is passed (or if no such user, the locale passed in the query)
      operationId: getText
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: false
          schema:
            type: string
        - in: query
          name: locale
          description: Locale for which we want the strings. English is assumed by default
          required: false
          schema:
            type: string
            default: en-UK
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleResources'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: there are no strings for the Locale provided
      security:
        - api_key: []
  /rating-list:
    get:
      tags:
        - legend
      summary: Retrieves Rating Headers
      description: Returns the list of all issues along which an Order can be rated
      operationId: getRatingHeaders
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingLegend'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Order identifier does not exist or is not associated with this user.
      security:
        - api_key: []
  /menu:
    get:
      tags:
        - menu
      summary: Retrieves a menu
      description: Retrieves the menu offered at the user's location on a specified day
      operationId: getMenu
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - in: query
          name: date
          description: Date for which we want to retrieve a menu in the YYYY-MM-DD format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '409':
          description: No delivery at User location
      security:
        - api_key: []
  /menu/dates:
    get:
      tags:
        - menu
      summary: Lists the dates when a menu is available
      description: >-
        Lists the dates (in YYYY-MM-DD format) when a menu is offered at the
        user's location
      operationId: listMenuDates
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - '2018-05-31'
                  - '2018-06-04'
                  - '2018-06-05'
                  - '2018-06-06'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '409':
          description: No delivery at User location
      security:
        - api_key: []
  /menu/rating:
    put:
      tags:
        - menu
      summary: Set a rating for a menu
      description: Gives a rating and a Comment to the menu offered at the user's location on a specified day
      operationId: rateMenu
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - in: query
          name: date
          description: Date for which we want to rate a menu in the YYYY-MM-DD format
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/MenuRating'
      responses:
        '200':
          description: successful operation
        '400':
          description: >-
            the rating provided is invalid [must be a boolean value; like or unlike]
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: No such Menu exists
      security:
        - api_key: []
  /cart:
    get:
      tags:
        - cart
      summary: Retrieves the current content of the Cart
      description: Retrieves the items in the current cart with their price and quantity
      operationId: listCart
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItemFull'
                example:
                  - menuitemid: '14'
                    name: Eggs Benedict
                    price: '31'
                    cartdate: '2018-12-21'
                    quantity: '2'
                    taxapplicable: 'false'
                    vendorid: 5
                    vendorname: 'Royal Mumbai Chow'
                  - menuitemid: '32'
                    name: Waakye
                    price: '27'
                    cartdate: '2018-12-21'
                    quantity: '1'
                    taxapplicable: 'false'
                    vendorid: 5
                    vendorname: 'Royal Mumbai Chow'
        '400':
          description: >-
            The Cart is stale; some of the items belong to menus that were scheduled for a date in the past.
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: There is no cart currently
      security:
        - api_key: []
    put:
      tags:
        - cart
      summary: Records the current content of the Cart
      description: Provides to the Server the list of items in the current cart
      operationId: storeCart
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CartItemList'
      responses:
        '200':
          description: successful operation
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
      security:
        - api_key: []
    delete:
      tags:
        - cart
      summary: Empties the server-held Cart for a User
      description: Empties the server-held Cart for a User
      operationId: clearCart
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
      security:
        - api_key: []
  /cart/parameters:
    get:
      tags:
        - cart
      summary: Get the data associated with a Cart's contents
      description: 'Retrieves fees, discount associated with a Cart'
      operationId: getCartParameters
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - in: query
          name: promo_code
          description: Promo code that will be applied to this Order
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartParameters'
        '202':
          description: successful operation, but Promotion parameters failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: There is no cart currently
        '424':
          description: Something went wrong with the Database
      security:
        - api_key: []
  /cart/checkout:
    post:
      tags:
        - cart
      summary: Checkout the current items
      description: Submits the current Cart's contents for order and payment
      operationId: checkoutCart
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Order Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartCheckout'
        '400':
          description: >-
            The Cart is stale; some of the items belong to menus that were scheduled for a date in the past.
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '402':
          description: Payment failed.
        '404':
          description: There is no cart currently
        '409':
          description: Time is passed the cutoff time
      security:
        - api_key: []
      requestBody:
        $ref: '#/components/requestBodies/CartItemList'
  /order:
    get:
      tags:
        - order
      summary: Get Order Information
      description: >-
        Provides a list of orders placed by the user meeting a criterion 
        (future orders: recorded but not yet sent to the Vendor 
        , current orders: sent to the vendor and not canceled but not delivered yet
        , active orders: future or current
        , or historical orders: delivered orders. 
        The information returned here is just
        sufficient to get a sense of the order. 
        To get the full details, the single order retrieval endpoint must be called
      operationId: listOrders
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: what types of orders we want to show
          required: false
          schema:
            type: string
            enum:
              - history
              - future
              - current
              - active
            default: current
        - name: page
          in: query
          description: Page number we want to show
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of items per Page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderFlat'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: There is no Order stored for this user.
      security:
        - api_key: []
  '/order/{ordernum}':
    get:
      tags:
        - order
      summary: Retrieves an Order
      description: Returns the full details of a submitted order.
      operationId: getOrder
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - name: ordernum
          in: path
          description: the identifier of the order we want to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Order identifier does not exist or is not associated with this user.
      security:
        - api_key: []
    delete:
      tags:
        - order
      summary: Cancels an Order
      description: Mark an open and not yet sent as canceled
      operationId: cancelOrder
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - name: ordernum
          in: path
          description: the identifier of the order we want to retrieve
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Order identifier does not exist or is not associated with this user.
      security:
        - api_key: []
  '/order/{ordernum}/rating':
    put:
      tags:
        - order
      summary: Sets the rating for an Order
      description: Sets the rating for a completed Order
      operationId: rateOrder
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
        - name: ordernum
          in: path
          description: the identifier of the order we want to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Order identifier does not exist or is not associated with this user.
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
        description: the rating the user is giving this order
        required: true
  /user-profile:
    get:
      tags:
        - user
      summary: Retrieve the User Profile
      description: Retrieve all informations pertaining to the User
      operationId: getProfile
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
      security:
        - api_key: []
  /user-profile/phone:
    put:
      tags:
        - user
      summary: Sets a new User Phone number
      description: >-
        Sends a phone number for the User (this will trigger a confirmation
        process and return the verifier token for the confirmation)
      operationId: setPhoneNumber
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationBlock'
        '400':
          description: Wrong Phone number format
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '409':
          description: Phone number already in use
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextObject'
        description: New phone number for the User
        required: true
  /user-profile/phone/confirmation:
    put:
      tags:
        - user
      summary: Confirms the Phone number
      description: Provides the confirmation token for the change of a User Phone number
      operationId: confirmPhoneNumber
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Invalid or Unrecognized confirmation token
        '409':
          description: Phone number is being used by someone else
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeContinuation'
        description: Confirmation data for the change of User phone number
        required: true
  /user-profile/address:
    put:
      tags:
        - user
      summary: Sets a new User address
      description: Sends a delivery address for the User
      operationId: setAddress
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '202':
          description: No delivery at User location
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Invalid Address (not found on Google Maps)
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkplaceObject'
        description: New delivery address for the User
        required: true
  /user-profile/payment:
    put:
      tags:
        - user
      summary: Changes the User payment instrument
      description: Sets the User's payment instrument
      operationId: setPaymentInstrument
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: x-auth-token
          description: Token associated with the requesting User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Phone number format for Mobile Money
        '401':
          description: >-
            Authentication Failure: either the API Key or the Auth Token are
            invalid.
        '404':
          description: Invalid Payment type or Network id specified
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstrument'
        description: New payment method for the User
        required: true
  /auth/token-confirm:
    post:
      tags:
        - auth
      summary: Verifies the confirmation code provided by a user (and confirms them); optionally signs the User in
      description: >-
        Checks that a confirmation code corresponds to a verifier and marks the
        associated user as confirmed. If the right flag has been passed, it will sign the user in.
        The sessionBlock returned is only valid if 'sign-in' was passed 
      operationId: confirmUserIfCodeIsCorrect
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: authtype
          description: >-
            identifier of the Authentication Provider (0: phone/password, 1:
            Facebook, 2: Google, 3: LinkedIn). Only needed if 'sign-in' is 1.
          required: false
          schema:
            type: integer
            enum:
              - '0'
              - '1'
              - '2'
              - '3'
        - in: header
          name: authid
          description: Identifier of the user with the Authentication Provider. Only needed if 'sign-in' is 1.
          required: false
          schema:
            type: string
        - in: header
          name: authtoken
          description: >-
            Token currently associated with the user by the Authentication
            Provider. Only needed if 'sign-in' is 1.
          required: false
          schema:
            type: string
        - in: header
          name: deviceid
          description: >-
            Device Token provided to the Client by the Communication platform used (Firebase). Only needed if 'sign-in' is 1. This value can be passed in the body (it then takes priority)
          required: false
          schema:
            type: string
            default: ''
        - in: query
          name: sign-in
          description: Private Key associated with the calling Application
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionBlock'
        '202':
          description: We do not deliver at the User's location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionBlock'
        '404':
          description: Verifier token does not exist or Confirmation code is wrong
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationBlock'
        description: structure with the Confirmation code and Verifier token
        required: true
  /auth/token-sending:
    post:
      tags:
        - auth
      summary: Sends a confirmation code for a valid verifier token
      description: 'Validates a set of credentials, return a Session Token for them'
      operationId: resendConfirmationCode
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: query
          name: verifierToken
          description: Token for which the confirmation code must be resent
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
        '404':
          description: Verifier token does not exist
        '420':
          description: Too many such requests have been made
  /auth/token/{sessionToken}:
    delete:
      tags:
        - auth
      summary: Signs a user out of our system
      description: 'Signs out the user associated with the passed Session token'
      operationId: signOutUsingClientData
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: path
          name: sessionToken
          description: the Token associated with the user in our system (and stored locally to the client)
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionBlock'
        '404':
          description: Specified user is unknown to us
  /auth/token:
    get:
      tags:
        - auth
      summary: >-
        Signs a user into the system using identification from an Authentication
        Provider
      description: 'Validates a set of credentials, return a Session Token for them'
      operationId: loginUsingAuthenticationProvider
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: header
          name: authtype
          description: >-
            identifier of the Authentication Provider (0: phone/password, 1:
            Facebook, 2: Google, 3: LinkedIn)
          required: true
          schema:
            type: integer
            enum:
              - '0'
              - '1'
              - '2'
              - '3'
        - in: header
          name: authid
          description: Identifier of the user with the Authentication Provider
          required: true
          schema:
            type: string
        - in: header
          name: authtoken
          description: >-
            Token currently associated with the user by the Authentication
            Provider
          required: true
          schema:
            type: string
        - in: header
          name: deviceid
          description: >-
            Device Token or Registration Id provided to the Client by the Communication platform used (APNS, GCM, Firebase, ADM  ...)
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
        '401':
          description: Re-Sign in with the Authentication Provider
        '404':
          description: Specified user is unknown to us
    put:
      tags:
        - auth
      summary: Logs a user into our system using a client-stored Session token
      description: 'Validates the passed Session token, return a new Session Token'
      operationId: loginUsingClientData
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
        '401':
          description: Re-Sign in with the Authentication Provider
        '404':
          description: Specified user is unknown to us
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionBlock'
        description: >-
          Token currently associated with the user in our system (and stored
          locally to the client)
        required: true
    post:
      tags:
        - auth
      summary: Registers a new user into the system
      description: >-
        Verifies a set of credentials and associates them with a Phone number,
        allowing for subsequent sign ins
      operationId: register
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: query
          name: referrer
          description: Token associated with the user that referred the user performing this action. This value can be provided in the body (it then takes priority)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Already Registered
        '201':
          description: >-
            Registered, the credentials are genuine, a text message was sent to
            the phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationBlock'
        '400':
          description: Phone number format is invalid
        '401':
          description: Authentication type is unrecognized / Id does not match token
        '409':
          description: >-
            User is already registered with a different phone / Phone number is
            already registered with a different user
        '420':
          description: Too many such requests have been made
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationBlock'
        description: registration payload
        required: true
  /auth/reset:
    post:
      tags:
        - auth
      summary: Initiate the change of password for a User
      description: >-
        Verifies that a provided phone number and identity match; if they do, a reset code is sent to the user. 
      operationId: initiatePasswordChange
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
      responses:
        '201':
          description: >-
            Password change initiated, the parameters are genuine, a text message was sent to
            the phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationBlock'
        '400':
          description: User specified is not a WeChop-authenticated user
        '420':
          description: Too many such requests have been done already
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetBlock'
        description: registration payload
        required: true
  /auth/reset-confirm:
    post:
      tags:
        - auth
      summary: Completes the change of password for a User if the parameters provided are correct
      description: >-
        Verifies that the provided Verifier and Token (e.g. Reset code) exist together and are valid. If true, 
        the user password provided is set as the new user password
      operationId: confirmPasswordChange
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Password change completed
        '404':
          description: The parameters passed do not exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetContinuation'
        description: Confirmation information
        required: true
  /notification/ack/{uniqueId}:
    put:
      tags:
        - tracking
      summary: Acknowledges that a specific notification was received on the device
      description: 'Marks the notification associated with the path parameter as received on the Device'
      operationId: acknowledgeNotification
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: path
          name: uniqueId
          description: the unique identifier associated with the notification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInformation'
        description: Device information
        required: true
      responses:
        '200':
          description: successful operation
        '404':
          description: Specified notification is unknown to us
  /notification/dismiss/{uniqueId}:
    put:
      tags:
        - tracking
      summary: Declares a notification as having been dismissed by the User
      description: 'Marks the notification associated with the path parameter as dismissed by the User on the Device'
      operationId: dismissNotification
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: path
          name: uniqueId
          description: the unique identifier associated with the notification
          required: true
          schema:
            type: string
        - in: query
          name: isclear
          description: whether the notification was cleared as opposed to individually dismissed
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: successful operation
        '404':
          description: Specified notification is unknown to us
  /notification/open/{uniqueId}:
    put:
      tags:
        - tracking
      summary: Declares a notification as having been opened by the User
      description: 'Marks the notification associated with the path parameter as opened by the User on the Device'
      operationId: openNotification
      parameters:
        - in: header
          name: x-api-key
          description: Private Key associated with the calling Application
          required: true
          schema:
            type: string
        - in: path
          name: uniqueId
          description: the unique identifier associated with the notification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: Specified notification is unknown to us
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        code:
          type: integer
          enum:
            - '1001'
            - '1002'
            - '1003'
            - '1004'
        cause:
          type: string
    Menu:
      type: object
      properties:
        date:
          type: string
          format: date
        cutoff:
          type: string
          format: time
        upcomingorders:
          type: integer
        restaurant:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              genre:
                type: string
              picture:
                type: string
              currency:
                type: string
              rating:
                type: number
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    picture:
                      type: string
                    isSoldOut:
                      type: boolean
      example:
        date: '2018-06-01'
        cutoff: '11:30:00'
        upcomingorders: 2
        restaurant:
          - name: Coco Lounge
            genre: African fusion
            picture: s3.amazonaws.com/12af23bbbc322
            rating: '4.7'
            currency: GHS
            items:
              anyOf:
                - id: '1432'
                  name: Eggs Benedict
                  description: Overeasy eggs with a side of bacon and Hollandaise sauce
                  price: '31.5'
                  picture: s3.amazonaws.com/21af23bbbc322
                  isSoldOut: true
                - id: '4321'
                  name: Sole Meuniere
                  description: Lemon garnished sole with mashed potatoes
                  price: '25'
                  picture: s3.amazonaws.com/f12223bbbc322
                  isSoldOut: false
                - id: '3421'
                  name: Pork Chops
                  description: Pork chops with french fries
                  price: '18.5'
                  picture: s3.amazonaws.com/23345a2bbbc322
                  isSoldOut: false
          - name: Royal Mumbai Chow
            genre: Indo-Chinese
            picture: s3.amazonaws.com/12af23bbbc322
            rating: '4.9'
            currency: GHS
            items:
              anyOf:
                - id: '1432'
                  name: Eggs Benedict
                  description: Overeasy eggs with a side of bacon and Hollandaise sauce
                  price: '31.5'
                  picture: s3.amazonaws.com/21af23bbbc322
                  isSoldOut: false
                - id: '4321'
                  name: Sole Meuniere
                  description: Lemon garnished sole with mashed potatoes
                  price: '25'
                  picture: s3.amazonaws.com/f12223bbbc322
                  isSoldOut: false
                - id: '3421'
                  name: Pork Chops
                  description: Pork chops with french fries
                  price: '18.5'
                  picture: s3.amazonaws.com/23345a2bbbc322
                  isSoldOut: false
    MenuRating:
      type: object
      properties:
        comment:
          type: string
        like:
          type: boolean
      example:
        comment: 'I would like healthy food every day'
        like: false
    CartItem:
      type: object
      properties:
        id:
          type: integer
        quantity:
          type: integer
      example:
        id: '3452'
        quantity: '2'
    CartItemFull:
      type: object
      properties:
        MenuItemId:
          type: integer
        VendorId:
          type: integer
        name:
          type: string
        price:
          type: number
        cartdate:
          type: string
          format: date-time
        quantity:
          type: integer
        taxapplicable:
          type: boolean
        vendorname:
          type: string
      example:
        menuitemid: '14'
        vendorId: '1'
        name: Eggs Benedict
        price: '31'
        cartdate: '2018-12-21'
        quantity: '2'
        taxapplicable: true
        vendorid: 5
        vendorname: 'Royal Mumbai Chow'
    CartItemList:
      type: array
      items:
        $ref: '#/components/schemas/CartItem'
      example:
        - id: 16
          quantity: 1
        - id: 30
          quantity: 2
    CartParameters:
      type: object
      properties:
        destination:
          type: object
          properties:
            address:
              type: string
            coordinates:
              type: string
        additionals:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        total:
          type: number
      example:
        destination:
          address: 'theSoftTribe, 8 Quartey Papafio Avenue, Accra'
          coordinates: '5.603944, -0.183034'
        additionals:
          - label: delivery_fee
            value: GHS 6
          - label: discount
            value: '4'
          - label: VAT (17.5%)
            value: '3.6'
        total: 75.5
    CartCheckout:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        destination:
          type: object
          properties:
            address:
              type: string
            coordinates:
              type: string
        OrderNumbers:
          type: array
          items:
            type: string
        additionals:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        total:
          type: number
      example:
        OrderNumbers:
          - A126PNW
          - PU359AC
        timestamp: '2018-06-25 10:14:43'
        destination:
          address: 'theSoftTribe, 8 Quartey Papafio Avenue, Accra'
          coordinates: '5.603944, -0.183034'
        additionals:
          - label: delivery_fee
            value: GHS 6
          - label: discount
            value: '4'
          - label: VAT (17.5%)
            value: '3.6'
        total: 75.5
    OrderFlat:
      type: object
      properties:
        ordernum:
          type: string
        timestamp:
          type: string
          format: date-time
        destination_address:
          type: string
        restaurant:
          type: object
          properties:
            name:
              type: string
            picture:
              type: string
        stages_done:
          type: array
          items:
            type: string
        stages_next:
          type: array
          items:
            type: string
        is_complete:
          type: boolean
        is_cancellable:
          type: boolean
        is_rated:
          type: boolean
        rating:
          type: integer
        total:
          type: number
      example:
        ordernum: A126PNW
        timestamp: '2018-06-25 10:14:43'
        destination_address: '8 Quartey Papafio Avenue, Accra'
        restaurant:
          name: Coco Lounge
          picture: s3.amazonaws.com/12af23bbbc322
        status_line: 'Your food is on the way'
        is_complete: 'false'
        is_cancellable: 'false'
        is_rated: 'false'
        rating: '0'
        total: 75.5
    Order:
      type: object
      properties:
        ordernum:
          type: string
        timestamp:
          type: string
          format: date-time
        destination_address:
          type: string
        restaurant:
          type: object
          properties:
            name:
              type: string
            genre:
              type: string
            picture:
              type: string
            currency:
              type: string
            rating:
              type: number
        is_complete:
          type: boolean
        is_cancellable:
          type: boolean
        is_rated:
          type: boolean
        rating:
          type: integer
        additionals:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        total:
          type: number
        stages_done:
          type: array
          items:
            type: string
        stages_next:
          type: array
          items:
            type: string
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
      example:
        ordernum: A126PNW
        timestamp: '2018-06-25 10:14:43'
        destination_address: '8 Quartey Papafio Avenue, Accra'
        restaurant:
          name: Coco Lounge
          genre: African fusion
          picture: s3.amazonaws.com/12af23bbbc322
          rating: '4.7'
          currency: GHS
        is_complete: 'false'
        is_cancellable: 'false'
        is_rated: 'false'
        rating: '0'
        additionals:
          - label: delivery_fee
            value: GHS 6
          - label: discount
            value: '4'
          - label: VAT (17.5%)
            value: '3.6'
        total: 75.5
        stages_done:
          - Order Confirmed
          - Food is being prepared
        stages_next:
          - Courier is on the way
          - Order has been delivered
          - Payment has been made
        lines:
          - name: Eggs Benedict
            quantity: '2'
            price: '31.5'
          - name: Sole Meuniere
            quantity: '1'
            price: '25.5'
    DeviceInformation:
      type: object
      properties:
        DeviceName:
          type: string
        DeviceOs:
          type: string
        DeviceIp:
          type: string
        AppVersion:
          type: string
      example:
        DeviceName: 'HTC6525LVW'
        DeviceOs: '1.6'
        DeviceIp: '123.21.54.187'
        AppVersion: '1.0.12.8764'
    OrderLine:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
        price:
          type: number
    LocaleResources:
      type: object
      properties:
        locale:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
      example:
        locale: 'fr-CA'
        resources:
          - code: hello_label
            template: This is a template for the hello message
          - code: product_cost
            template: Price %1$s %2$f
    Resource:
      type: object
      properties:
        code:
          type: string
        template:
          type: string
    RatingLegend:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/Legend'
        labels:
          type: array
          items:
            type: string
      example:
        headers:
          - id: '1'
            name: Food packaging
          - id: '2'
            name: Delivery time
          - id: '3'
            name: Taste of the food
        labels:
          - Terrible
          - Bad
          - Some problems
          - Pretty Good
    Rating:
      type: object
      properties:
        score:
          type: integer
        comment:
          type: string
        issues:
          type: array
          items:
            type: integer
      example:
        score: '4'
        comment: The delivery timeframe could be tighter
        issues:
          - '2'
          - '3'
    Legend:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    PaymentInstrument:
      type: object
      properties:
        type:
          type: integer
        mobile_money:
          type: object
          properties:
            network:
              type: integer
            phone:
              type: string
        instructions:
          type: array
          items:
            type: string
      example:
        type: 1
        mobile_money:
          network: 3
          phone: '+2332445432117'
        instructions:
          - dial *110#
          - Press 1
          - Type 135
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        destinationAddress:
          type: string
        phone:
          type: string
        paymentMethod:
          $ref: '#/components/schemas/PaymentInstrument'
        inviteUrl:
          type: string
        localeCode:
          type: string
        totalreferralcredits:
          type: number
        expiringreferralcredits:
          type: number
      example:
        firstName: Afua
        lastName: Logoligi
        destinationAddress: '8 Quartey Papafio Avenue, Accra'
        phone: '+233244123456'
        paymentMethod:
          type: '1'
          mobileMoney:
            network: '2'
            phone: '+233244123456'
          instructions:
            - dial *170#
            - choose 1
            - Type 1234
        inviteUrl: 'http://goo.gl/uf321l'
        localeCode: 'fr-CA'
        totalreferralcredits: 120
        expiringreferralcredits: 10
    TextObject:
      type: object
      properties:
        text:
          type: string
      example:
        text: +123456789
    WorkplaceObject:
      type: object
      properties:
        company:
          type: string
        address:
          type: string
      example:
        company: WeChop Ghana
        address: One Airport Square
    VerificationBlock:
      type: object
      properties:
        verifier:
          type: string
        sendernumber:
          type: string
      example:
        verifier: ab123cdf162abffde
        sendernumber: 23350505000
    ResetContinuation:
      type: object
      properties:
        verifier:
          type: string
        token:
          type: string
        password:
          type: string
      example:
        verifier: ab123cdf162abffde
        token: 9527
        password: A21z$_bv,dfb
    ConfirmationBlock:
      type: object
      properties:
        verifier:
          type: string
        token:
          type: string
        deviceid:
          type: string
      example:
        verifier: ab123cdf162abffde
        token: 9527
        deviceId: c36mmDjMaLQ:APA91bEOV3W4dFme_-Ma0lQ7QKy3raEiRoTy9K1fLgKlu7Tj9O8aNtlgWfiqb7YQT6Sj_5Fna3G6KKYU66oXWDqB2cxk6LEwAt9wxPp7iYNMPRuayeOqr8zyWgcGpqlXy_KwGG0DvnOrtPjXol4RmzsDq8ZYBqDZzw
    ChangeContinuation:
      type: object
      properties:
        verifier:
          type: string
        token:
          type: string
      example:
        verifier: ab123cdf162abffde
        token: 9527
    SessionBlock:
      type: object
      properties:
        sessionToken:
          type: string
        deviceId:
          type: string
      example:
        sessionToken: ab123cdf162abffde
        deviceId: dsdfsWEsdkyk32432kWDW
    SessionData:
      type: object
      properties:
        sessionToken:
          type: string
      example:
        sessionToken: ab123cdf162abffde
    RegistrationBlock:
      type: object
      required:
        - authId
        - authToken
        - authType
        - phone
        - address
      properties:
        authId:
          type: string
        authToken:
          type: string
        authType:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        company:
          type: string
        address:
          type: string
        email:
          type: string
        localeCode:
          type: string
        referrerToken:
          type: string
        promoToken:
          type: string
      example:
        authId: ab123cdf162abffde
        authToken: ba8123cdf162ab
        authType: 3
        firstName: Johnny
        lastName: Bravo
        phone: +233-244-351-2345
        company: theSoftTribe
        address: 8 Quartey Papafio Avenue
        email: johnny.bravo@emailprovider.net
        localeCode: fr-CA
        referrerToken: XDRDEJ
        promoToken: DELTA
    ResetBlock:
      type: object
      required:
        - phone
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
      example:
        firstName: Johnny
        lastName: Bravo
        phone: +233-244-351-2345
    Tag:
      type: object
      properties:
        label:
          type: string
        text:
          type: string
  requestBodies:
    CartItemList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CartItemList'
      description: List of Items in the Cart
    MenuRating:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MenuRating'
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header