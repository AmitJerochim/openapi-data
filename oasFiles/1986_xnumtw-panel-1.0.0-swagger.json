{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/xnumtw/panel/1.0.0"
  } ],
  "info" : {
    "description" : "This is a simple API",
    "version" : "1.0.0",
    "title" : "Simple Inventory API",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/account" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "list all accounts. account is an account in a host. an user have multiple accounts.",
        "parameters" : [ {
          "in" : "query",
          "name" : "host_id",
          "description" : "filter by host_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "user_id",
          "description" : "filter by user_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AccountItem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "admins", "operators" ],
        "summary" : "create an account",
        "description" : "First it finds user or create one by user_email.\nSecond it calls rpc to add account on account service.\nThen it records which user this account belongs to.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "host_id", "user_email", "user_name", "order_id", "order_account", "order_password", "broker_code", "broker", "ip_addr" ],
                "properties" : {
                  "host_id" : {
                    "type" : "integer",
                    "description" : "lookup from /host"
                  },
                  "user_email" : {
                    "type" : "string",
                    "format" : "email"
                  },
                  "user_name" : {
                    "type" : "string"
                  },
                  "order_id" : {
                    "type" : "string"
                  },
                  "order_account" : {
                    "type" : "string"
                  },
                  "order_password" : {
                    "type" : "string"
                  },
                  "equity_id" : {
                    "type" : "string"
                  },
                  "equity_account" : {
                    "type" : "string"
                  },
                  "equity_password" : {
                    "type" : "string"
                  },
                  "broker_code" : {
                    "type" : "string"
                  },
                  "broker" : {
                    "type" : "string"
                  },
                  "ip_addr" : {
                    "type" : "string",
                    "format" : "ipv4"
                  },
                  "subaccount" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "description" : "will return null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/host" : {
      "get" : {
        "tags" : [ "users", "operators", "admins" ],
        "summary" : "get hosts, only returns leading host.",
        "description" : "The leading host is the record which service field is \"colo\",\nwe use its id to indicate one colo host.\nThe other records are hidden and only for system internal service address lookup.\n",
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "$ref" : "#/components/schemas/HostItem"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "create hosts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance", "service", "host_name" ],
                "properties" : {
                  "instance" : {
                    "type" : "string"
                  },
                  "service" : {
                    "type" : "string",
                    "enum" : [ "colo", "colo-fund-grpc", "colo-fund-http", "colo-account", "colo-order", "colo-quote", "db-slave" ]
                  },
                  "host_name" : {
                    "type" : "string"
                  },
                  "port" : {
                    "type" : "integer"
                  },
                  "user" : {
                    "type" : "string"
                  },
                  "pass" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "description" : "will return null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "list all users.",
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "$ref" : "#/components/schemas/UserItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/register" : {
      "post" : {
        "tags" : [ "anyone" ],
        "summary" : "register",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "email", "pass", "name" ],
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "pass" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "example" : "ok"
                }
              }
            }
          },
          "default" : {
            "description" : "failed",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "example" : "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "anyone" ],
        "summary" : "login, put your access token to Header Authorization Bearer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "account", "password" ],
                "properties" : {
                  "account" : {
                    "type" : "string",
                    "format" : "email",
                    "description" : "an email"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "accessToken" : {
                      "type" : "string",
                      "description" : "jwt token"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "login failed",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "example" : "record not found"
                }
              }
            }
          }
        }
      }
    },
    "/user/info" : {
      "get" : {
        "tags" : [ "users" ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string"
                    },
                    "email" : {
                      "type" : "string",
                      "format" : "email"
                    },
                    "name" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription" : {
      "get" : {
        "tags" : [ "operators", "admins" ],
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "properties" : {
                        "sub_id" : {
                          "type" : "integer"
                        },
                        "host_id" : {
                          "type" : "integer"
                        },
                        "account_id" : {
                          "type" : "integer"
                        },
                        "subaccount" : {
                          "type" : "integer"
                        },
                        "strategy_id" : {
                          "type" : "integer"
                        },
                        "exchange" : {
                          "type" : "string"
                        },
                        "symbol" : {
                          "type" : "string"
                        },
                        "margin" : {
                          "type" : "integer"
                        },
                        "allocated_funds" : {
                          "type" : "integer"
                        },
                        "base_rate" : {
                          "type" : "integer"
                        },
                        "enabled" : {
                          "type" : "integer"
                        },
                        "current_position" : {
                          "type" : "integer",
                          "description" : "read from trading system's memory."
                        },
                        "expected_position" : {
                          "type" : "integer",
                          "description" : "derived from opening position and order report."
                        },
                        "avg_cost" : {
                          "type" : "number"
                        },
                        "username" : {
                          "type" : "string"
                        },
                        "realized_profit" : {
                          "type" : "number"
                        },
                        "tax" : {
                          "type" : "number"
                        },
                        "commission" : {
                          "type" : "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "operators", "admins" ],
        "requestBody" : {
          "description" : "You must have corresponding [host_id, account_id, subaccount] record\nin accounts table first. Also needs host record to lookup fund-grpc address.\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "host_id", "account_id", "strategy_id", "exchange", "symbol", "margin", "allocated_funds" ],
                "properties" : {
                  "host_id" : {
                    "type" : "integer"
                  },
                  "account_id" : {
                    "type" : "integer"
                  },
                  "subaccount" : {
                    "type" : "string"
                  },
                  "strategy_id" : {
                    "type" : "integer"
                  },
                  "exchange" : {
                    "type" : "string"
                  },
                  "symbol" : {
                    "type" : "string",
                    "example" : "TXF"
                  },
                  "order_mode" : {
                    "type" : "string",
                    "enum" : [ "normal", "wait-zero-passed" ]
                  },
                  "margin" : {
                    "type" : "integer"
                  },
                  "allocated_funds" : {
                    "type" : "integer"
                  },
                  "funds_adding_mode" : {
                    "type" : "string",
                    "description" : "not working",
                    "enum" : [ "manual", "add-on-zero-passed" ]
                  },
                  "base_rate" : {
                    "type" : "number",
                    "description" : "-1 <= n <= 1"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "description" : "will return null"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "operators", "admins" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "order_mode" : {
                    "type" : "string",
                    "enum" : [ "normal", "wait-zero-passed" ]
                  },
                  "margin" : {
                    "type" : "integer"
                  },
                  "allocated_funds" : {
                    "type" : "integer"
                  },
                  "funds_adding_mode" : {
                    "type" : "string",
                    "description" : "not working",
                    "enum" : [ "manual", "add-on-zero-passed" ]
                  },
                  "base_rate" : {
                    "type" : "number",
                    "description" : "-1 <= n <= 1"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "description" : "will return null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/detail" : {
      "get" : {
        "tags" : [ "admin" ],
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "properties" : {
                        "host_id" : {
                          "type" : "integer"
                        },
                        "sub_id" : {
                          "type" : "integer"
                        },
                        "profit" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ProfitOrLossItem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/daily" : {
      "get" : {
        "tags" : [ "admin" ],
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "properties" : {
                        "host_id" : {
                          "type" : "integer"
                        },
                        "sub_id" : {
                          "type" : "integer"
                        },
                        "records" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "example" : "2006-01-02"
                              },
                              "profit" : {
                                "type" : "number",
                                "description" : "without tax, commission"
                              },
                              "pure_profits" : {
                                "type" : "number"
                              },
                              "details" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/components/schemas/ProfitOrLossItem"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/monthly" : {
      "get" : {
        "tags" : [ "admin" ],
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "object",
                      "properties" : {
                        "host_id" : {
                          "type" : "integer"
                        },
                        "sub_id" : {
                          "type" : "integer"
                        },
                        "records" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "example" : "2006-01"
                              },
                              "profit" : {
                                "type" : "number",
                                "description" : "without tax, commission"
                              },
                              "pure_profits" : {
                                "type" : "number"
                              },
                              "details" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/components/schemas/ProfitOrLossItem"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/strategy" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "get strategy id, name and rate",
        "responses" : {
          "default" : {
            "description" : "general response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/ErrorItem"
                    },
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "strategy_id" : {
                            "type" : "integer"
                          },
                          "position_rate" : {
                            "type" : "integer"
                          },
                          "strategy_name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorItem" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "msg" : {
            "type" : "string"
          },
          "reqid" : {
            "type" : "string"
          }
        }
      },
      "AccountItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "host_id" : {
            "type" : "integer"
          },
          "user_id" : {
            "type" : "integer"
          },
          "founder_user_id" : {
            "type" : "integer"
          },
          "account_id" : {
            "type" : "integer"
          },
          "subaccount" : {
            "type" : "integer"
          }
        }
      },
      "HostItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "instance" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string"
          }
        }
      },
      "UserItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ProfitOrLossItem" : {
        "type" : "object",
        "properties" : {
          "exchange" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          },
          "sell_price" : {
            "type" : "number"
          },
          "buy_price" : {
            "type" : "number"
          },
          "qty" : {
            "type" : "integer"
          },
          "profit" : {
            "type" : "number"
          },
          "tax" : {
            "type" : "number"
          },
          "commission" : {
            "type" : "number"
          },
          "sell_order_id" : {
            "type" : "string",
            "description" : "order_id from broker"
          },
          "buy_order_id" : {
            "type" : "string",
            "description" : "order_id from broker"
          },
          "deal_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "buy_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sell_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "buy_report_id" : {
            "type" : "integer"
          },
          "sell_report_id" : {
            "type" : "integer"
          }
        }
      }
    }
  }
}