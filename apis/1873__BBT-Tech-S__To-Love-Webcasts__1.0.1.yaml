openapi: 3.0.0
info:
  description: |
    This is an API server for event "To Love Webcasts".
  version: 1.0.1
  title: To Love Webcasts
  contact:
    email: joshuasrkf@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://server.sforest.in/bbtt/api
    description: Test Server  
tags:
- name: common
  description: APIs that you can call
- name: debug
  description: APIs that available on test servers only
  
paths:
  /info:
    post:
      tags:
      - common
      summary: Upload user's basic information
      description: This API **must** be called before others.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                gender:
                  type: string
                  enum: ['male', 'female', 'unknown']
                language:
                  type: string
                  enum: ['Chinese', 'English']
            example:
              name: Joshua
              gender: male
              language: Chinese
      responses:
        200:
          description: ok
        405:
          description: Invalid input
          
  /audio:
    post:
      tags:
      - common
      summary: Upload user's recorded audio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
            example:
              id: THE-ID-THAT-WECHAT-API-RETURNS
      responses:
        200:
          description: ok
        401:
          description: You have to call /info first
        405:
          description: Invalid input
    get:
      tags:
      - common
      summary: Get a random comment for user's audio
      responses:
        200:
          description: The url of comment audio
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              example:
                url: "http://server.sforest.in/bbtt/static/comment.wav"
        401:
          description: You have to call /info first
          
  /text:
    get:
      tags:
      - common
      description: Get a random piece of text based on user's information
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
              example:
                text: "铁骑将军：热血骁勇，戎马一生\n宁为百夫长，胜作一书生。\n——杨炯《从军行》"
        401:
          description: You have to call /info first

  /report:
    get:
      tags:
      - common
      description: Get a random report based on user's information
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  property:
                    type: string
                  confidence:
                    type: integer
                    minimum: 0
                    maximum: 100
                  character:
                    type: string
                  score:
                    type: integer
                    minimum: 1
                    maximum: 5
                  type:
                    type: string
                  description:
                    type: string
              example:
                property: "悠然仙姬音"
                confidence: 88
                character: "龚琳娜"
                score: 4
                type: "攻"
                description: "你的声音自带故事感\n如午后红茶，拥有让人沉静的力量"
        401:
          description: You have to call /info first
