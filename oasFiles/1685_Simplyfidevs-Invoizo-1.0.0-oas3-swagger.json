{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Invoizo",
    "description" : "Sample API's for invoice discounting for INVOIZO\n\npowered by - [SimplyFi Softech India Pvt. Ltd.](https://simplyfi.tech)\n",
    "contact" : {
      "email" : "pratibha.maurya@simplyfi.tech"
    },
    "version" : "1.0.0-oas3"
  },
  "servers" : [ {
    "url" : "http://134.209.155.207:5000/"
  } ],
  "paths" : {
    "/auth/login" : {
      "post" : {
        "tags" : [ "login" ],
        "summary" : "generate certificate for simplyfi organisation",
        "description" : "generate certificate for simplyfi organisation",
        "operationId" : "needtochange",
        "responses" : {
          "201" : {
            "description" : "generated certificate"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/simplyfi/po" : {
      "post" : {
        "tags" : [ "simplyfi" ],
        "summary" : "set purchese order",
        "description" : "set purchase order by buyer",
        "operationId" : "setPo",
        "requestBody" : {
          "description" : "Created preference object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/purchaseOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/purchaseOrder"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/simplyfi/po/{buyerId}/{poId}" : {
      "get" : {
        "tags" : [ "simplyfi" ],
        "summary" : "get purchase order by using buyerid and poid",
        "description" : "get purchase order by using buyerid and poid",
        "operationId" : "getPo",
        "parameters" : [ {
          "name" : "buyerId",
          "in" : "path",
          "description" : "buyerid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "poId",
          "in" : "path",
          "description" : "poid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/simplyfi/invoice" : {
      "post" : {
        "tags" : [ "simplyfi" ],
        "summary" : "set invoice",
        "description" : "set invoice",
        "operationId" : "setInvoice",
        "requestBody" : {
          "description" : "Created preference object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/setInvoice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/setInvoice"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/simplyfi/invoice/{sellerId}/{invoiceId}" : {
      "get" : {
        "tags" : [ "simplyfi" ],
        "summary" : "get invoice by using sellerid and invoiceid",
        "description" : "get invoice by using sellerid and invoceid",
        "operationId" : "getInvoice",
        "parameters" : [ {
          "name" : "sellerId",
          "in" : "path",
          "description" : "sellerId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoiceId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/simplyfi/payment" : {
      "post" : {
        "tags" : [ "simplyfi" ],
        "summary" : "make payment",
        "description" : "make payment",
        "operationId" : "makePayment",
        "requestBody" : {
          "description" : "make payment between buyer and seller",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/makePayment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/makePayment"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/simplyfi/payment/{invoiceId}" : {
      "get" : {
        "tags" : [ "simplyfi" ],
        "summary" : "get payment  by using invoice id",
        "description" : "get payment  by using invoice",
        "operationId" : "getPayment",
        "parameters" : [ {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoiceId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/bank/lodgement" : {
      "post" : {
        "tags" : [ "bank" ],
        "summary" : "seller will send invoice discounting to banker",
        "description" : "seller will send invoice discounting to banker",
        "operationId" : "invoiceDiscounting",
        "requestBody" : {
          "description" : "send invoice discounting",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/invoiceDiscounting"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/invoiceDiscounting"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/bank/discounting" : {
      "post" : {
        "tags" : [ "bank" ],
        "summary" : "bank will set the discount",
        "description" : "bank will set the discount",
        "operationId" : "setDiscount",
        "requestBody" : {
          "description" : "set discount",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/setDiscount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/setDiscount"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/bank/repayment" : {
      "post" : {
        "tags" : [ "bank" ],
        "summary" : "repayment between banker and seller",
        "description" : "repayment between banker and seller",
        "operationId" : "setRepyment",
        "requestBody" : {
          "description" : "set repayment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/setRepayment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/setRepayment"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/bank/bills/{billReferenceNumber}" : {
      "get" : {
        "tags" : [ "bank" ],
        "summary" : "get all the invoice discounting details",
        "description" : "get all the invoice discounting bill ref no",
        "operationId" : "getBills",
        "parameters" : [ {
          "name" : "billReferenceNumber",
          "in" : "path",
          "description" : "billReferenceNumber",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/explorer/chaininfo" : {
      "get" : {
        "tags" : [ "explorer" ],
        "summary" : "get latest block number in the network",
        "description" : "get latest block number in the network",
        "operationId" : "getChainInfo",
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/explorer/chaincodes" : {
      "get" : {
        "tags" : [ "explorer" ],
        "summary" : "get all instatiated chaincodes in the network",
        "description" : "get all instatiated chaincode in the network",
        "operationId" : "getInstalledChaincodes",
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/explorer/threehash" : {
      "get" : {
        "tags" : [ "explorer" ],
        "summary" : "get three latest block hash in the network",
        "description" : "get three latest block hash in the network",
        "operationId" : "getBlockHash",
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "purchaseOrder" : {
        "required" : [ "poDate", "proformaId", "poId", "poAmount", "buyerId", "sellerId" ],
        "type" : "object",
        "properties" : {
          "poDate" : {
            "type" : "string",
            "description" : "You need to provide purchase order date",
            "example" : "date"
          },
          "proformaId" : {
            "type" : "string",
            "description" : "You need to provide proforma id",
            "example" : "proformid01"
          },
          "poId" : {
            "type" : "string",
            "description" : "You need to provide purchase order id",
            "example" : "PO01"
          },
          "poAmount" : {
            "type" : "string",
            "description" : "You need to provide purchase oreder amount",
            "example" : "po amount"
          },
          "buyerId" : {
            "type" : "string",
            "description" : "You need to provide buyer id",
            "example" : "CUS01"
          },
          "sellerId" : {
            "type" : "string",
            "description" : "You need to provide seller id",
            "example" : "seller01"
          }
        }
      },
      "setInvoice" : {
        "required" : [ "invoiceId", "sellerId", "buyerId", "poId", "invoiceToAddress", "shippingToAddress", "gst", "totalAmount", "modeOfTransport" ],
        "type" : "object",
        "properties" : {
          "invoiceId" : {
            "type" : "string",
            "description" : "You need to provide invoice id",
            "example" : "in01"
          },
          "sellerId" : {
            "type" : "string",
            "description" : "You need to provide seller id",
            "example" : "seller01"
          },
          "buyerId" : {
            "type" : "string",
            "description" : "You need to provide buyer id",
            "example" : "CUS01"
          },
          "poId" : {
            "type" : "string",
            "description" : "You need to provide purchase order id",
            "example" : "PO01"
          },
          "invoiceToAddress" : {
            "type" : "string",
            "description" : "You need to provide invoice to address",
            "example" : "Banglore"
          },
          "shippingToAddress" : {
            "type" : "string",
            "description" : "You need to provide shipping to address",
            "example" : "Banglore"
          },
          "gst" : {
            "type" : "string",
            "description" : "You need to provide gst",
            "example" : "gst"
          },
          "totalAmount" : {
            "type" : "string",
            "description" : "You need to provide total amount",
            "example" : "toatal amount"
          },
          "modeOfTransport" : {
            "type" : "string",
            "description" : "You need to provide mode of transport",
            "example" : "e.g. road"
          }
        }
      },
      "makePayment" : {
        "required" : [ "sellerId", "invoiceId", "amountPaid", "referenceNo" ],
        "type" : "object",
        "properties" : {
          "sellerId" : {
            "type" : "string",
            "description" : "You need to provide the seller id",
            "example" : "sellerid01"
          },
          "invoiceId" : {
            "type" : "string",
            "description" : "You need to provide the invoice id",
            "example" : "inv01"
          },
          "amountPaid" : {
            "type" : "string",
            "description" : "You need to provide the amount paid",
            "example" : "amount"
          },
          "referenceNo" : {
            "type" : "string",
            "description" : "You need to provide the reference no.",
            "example" : "refno"
          }
        }
      },
      "invoiceDiscounting" : {
        "required" : [ "billReferenceNumber", "amount", "invoiceId", "sellerId" ],
        "type" : "object",
        "properties" : {
          "billReferenceNumber" : {
            "type" : "string",
            "description" : "You need to provide the bill ref no.",
            "example" : "bill01"
          },
          "amount" : {
            "type" : "string",
            "description" : "You need to provide the amount",
            "example" : "amount"
          },
          "invoiceId" : {
            "type" : "string",
            "description" : "You need to provide the invoice id",
            "example" : "inv01"
          },
          "sellerId" : {
            "type" : "string",
            "description" : "You need to provide the seller id",
            "example" : "sellerid01"
          }
        }
      },
      "setDiscount" : {
        "required" : [ "billReferenceNumber", "amountFinanced", "interestRate", "fees" ],
        "type" : "object",
        "properties" : {
          "billReferenceNumber" : {
            "type" : "string",
            "description" : "You need to provide the bill ref no.",
            "example" : "bill01"
          },
          "amountFinanced" : {
            "type" : "string",
            "description" : "You need to provide the amount",
            "example" : "amount"
          },
          "interestRate" : {
            "type" : "string",
            "description" : "You need to provide the invoice id",
            "example" : "5%"
          },
          "fees" : {
            "type" : "string",
            "description" : "You need to provide the seller id",
            "example" : "fees"
          }
        }
      },
      "setRepayment" : {
        "required" : [ "billReferenceNumber", "liquidationAmount", "invoiceAmount", "amountFinanced", "netAmount", "interestAmount", "preusance" ],
        "type" : "object",
        "properties" : {
          "billReferenceNumber" : {
            "type" : "string",
            "description" : "You need to provide the bill ref no.",
            "example" : "bill01"
          },
          "liquidationAmount" : {
            "type" : "string",
            "description" : "You need to provide the liquidation amount",
            "example" : "liquidation amount"
          },
          "invoiceAmount" : {
            "type" : "string",
            "description" : "You need to provide the invoice amount",
            "example" : "invoice amount"
          },
          "amountFinanced" : {
            "type" : "string",
            "description" : "You need to provide the amount finaniced",
            "example" : "amount financed"
          },
          "netAmount" : {
            "type" : "string",
            "description" : "You need to provide the net amount",
            "example" : "net amount"
          },
          "interestAmount" : {
            "type" : "string",
            "description" : "You need to provide the interest amount",
            "example" : "interest amount"
          },
          "preusance" : {
            "type" : "string",
            "description" : "You need to provide the preusance",
            "example" : "preusance"
          }
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}