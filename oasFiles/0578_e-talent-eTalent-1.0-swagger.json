{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0",
    "title" : "eTalent",
    "description" : "eTalent API"
  },
  "paths" : {
    "/employer/{portal}" : {
      "get" : {
        "description" : "Returns a specific employer and a list of jobs.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An employer and a list of jobs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/employer"
                }
              }
            }
          }
        }
      }
    },
    "/employer/{portal}/login" : {
      "post" : {
        "description" : "Returns a bearer authentication token for use in protected paths.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "login", "secret" ],
                "properties" : {
                  "login" : {
                    "type" : "string"
                  },
                  "secret" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "An authentication token for use in protected paths.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string",
                      "description" : "The authentication token."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          }
        }
      }
    },
    "/employer/{portal}/job/{reference}" : {
      "get" : {
        "description" : "Returns all questions for a specific job.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference",
          "in" : "path",
          "description" : "The reference of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of questions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/questions"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Send question data for a specific job and return application results.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference",
          "in" : "path",
          "description" : "The reference of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id", "firstname", "surname" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "firstname" : {
                    "type" : "string"
                  },
                  "surname" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  },
                  "screen" : {
                    "type" : "string"
                  },
                  "factor" : {
                    "type" : "string"
                  },
                  "disc" : {
                    "type" : "string"
                  },
                  "additional" : {
                    "type" : "string"
                  }
                }
              },
              "examples" : {
                "id" : {
                  "summary" : "Unique ID to identify the candidate"
                },
                "firstname" : {
                  "summary" : "First name of the candidate"
                },
                "surname" : {
                  "summary" : "Surname of the candidate"
                },
                "email" : {
                  "summary" : "Optional e-mail address of the candidate"
                },
                "screen" : {
                  "summary" : "Screening question answers"
                },
                "factor" : {
                  "summary" : "Factor question answers"
                },
                "disc" : {
                  "summary" : "DISC question answers"
                },
                "additional" : {
                  "summary" : "Additional question answers"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Application results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/result"
                }
              }
            }
          },
          "403" : {
            "description" : "Bad request."
          }
        }
      }
    },
    "/employer/{portal}/job/{reference}/questions" : {
      "get" : {
        "description" : "Returns screening questions for a specific job for an employer.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference",
          "in" : "path",
          "description" : "The job reference.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of screening questions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "A list of screening questions.",
                  "items" : {
                    "$ref" : "#/components/schemas/question"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/{portal}/job/{reference}/candidate/{candidate}" : {
      "get" : {
        "description" : "Returns results for a specific candidate.",
        "parameters" : [ {
          "name" : "portal",
          "in" : "path",
          "description" : "The employer portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference",
          "in" : "path",
          "description" : "The job reference.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "candidate",
          "in" : "path",
          "description" : "The candidate identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Application results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/result"
                }
              }
            }
          },
          "403" : {
            "description" : "Bad request."
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "employer" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "The href of the employer."
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The employer ID."
          },
          "logo" : {
            "type" : "string",
            "description" : "The filename of the the employer logo."
          },
          "colour" : {
            "type" : "string",
            "description" : "The hex colour code for the employer."
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the employer."
          },
          "language" : {
            "type" : "string",
            "description" : "The language of the employer."
          },
          "locale" : {
            "type" : "string",
            "description" : "The locale of the employer."
          },
          "jobs" : {
            "type" : "array",
            "description" : "A list of available jobs.",
            "items" : {
              "$ref" : "#/components/schemas/job"
            }
          }
        }
      },
      "job" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "The href of the job."
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The job ID."
          },
          "reference" : {
            "type" : "string",
            "description" : "The unique reference of the job."
          },
          "link" : {
            "type" : "string",
            "description" : "The public URL of the job."
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the job."
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date the job was created."
          },
          "start" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date applications start for the job."
          },
          "end" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date applications end for the job."
          },
          "salary" : {
            "type" : "object",
            "properties" : {
              "minimum" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The minimum salary for the position."
              },
              "maximum" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The maximum salary for the position."
              },
              "currency" : {
                "type" : "string",
                "description" : "The ISO 4217 currency code of the salary."
              },
              "frequency" : {
                "type" : "string",
                "description" : "The frequency of the salary (e.g. per month)."
              },
              "text" : {
                "type" : "string",
                "description" : "Additional suffix (e.g. plus benefits)."
              }
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of position (e.g. permanent)."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the position (e.g. full time)."
          },
          "location" : {
            "type" : "object",
            "properties" : {
              "address1" : {
                "type" : "string",
                "description" : "The address line 1 of the job."
              },
              "address2" : {
                "type" : "string",
                "description" : "The address line 2 of the job."
              },
              "address3" : {
                "type" : "string",
                "description" : "The town of the job."
              },
              "address4" : {
                "type" : "string",
                "description" : "The county of the job."
              },
              "postcode" : {
                "type" : "string",
                "description" : "The postcode of the job."
              },
              "region" : {
                "type" : "string",
                "description" : "The region of the job."
              }
            }
          },
          "skill" : {
            "type" : "string",
            "description" : "The key skill of the job."
          },
          "sector" : {
            "type" : "string",
            "description" : "The industry sector of the job."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the job (includes HTML)."
          }
        }
      },
      "questions" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "The href of the job questions."
          },
          "screen" : {
            "type" : "array",
            "description" : "A list of screening questions.",
            "items" : {
              "$ref" : "#/components/schemas/question"
            }
          },
          "factor" : {
            "type" : "array",
            "description" : "A list of factor questions.",
            "items" : {
              "$ref" : "#/components/schemas/question"
            }
          },
          "disc" : {
            "type" : "array",
            "description" : "A list of questions for DISC.",
            "items" : {
              "$ref" : "#/components/schemas/disc"
            }
          },
          "additional" : {
            "type" : "array",
            "description" : "A list of additional questions.",
            "items" : {
              "$ref" : "#/components/schemas/question"
            }
          }
        }
      },
      "question" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Unique question ID"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of question (select, multiselect or text)"
          },
          "required" : {
            "type" : "string",
            "description" : "Whether the question must be answered (true or false)"
          },
          "question" : {
            "type" : "string",
            "description" : "The label of the question"
          },
          "options" : {
            "type" : "array",
            "description" : "The list of available options for select or multiselect questions",
            "items" : {
              "$ref" : "#/components/schemas/options"
            }
          }
        }
      },
      "options" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Unique answer ID"
          },
          "label" : {
            "type" : "string",
            "description" : "The label of the answer"
          }
        }
      },
      "disc" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/question"
        }
      },
      "result" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "The href of the application result."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID identifying the candidate passed in the body."
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date the application was completed."
          },
          "firstname" : {
            "type" : "string",
            "description" : "The first name of the candidate passed in the body."
          },
          "surname" : {
            "type" : "string",
            "description" : "The surname of the candidate passed in the body."
          },
          "signature" : {
            "type" : "string",
            "description" : "A hash signature for the response to ensure data has not been tampered with, create the hash by:<br> 1. Combining `id`, `date`, `firstname` & `surname` using a colon (:) as a separator<br> 2. Encrypting the string using the SHA256 algorithm<br> 3. Combining the encrypted string with `portal` & `reference` using a colon (:) as a separator<br> 4. Encrypting the string using the SHA256 algorithm\n"
          },
          "screen" : {
            "type" : "boolean",
            "description" : "Whether the candidate passed or failed the screening questions."
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Score:\n * `1` - Green: Likely to be good fit for the job.\n * `2` - Amber: Results need to be reviewed.\n * `3` - Red: Likely to be poor fit for the job\n"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Score out of 100."
          },
          "personality" : {
            "type" : "string",
            "description" : "Array of personality results to allow building of personality matrix."
          },
          "behaviour" : {
            "type" : "string",
            "description" : "Array of textual behaviour results."
          },
          "graph" : {
            "type" : "string",
            "description" : "Array of behaviour results to allow building of personality matrix."
          },
          "pdf" : {
            "type" : "string",
            "description" : "Base64 encoded PDF containing the results."
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://api.etalent.net/1.0"
  } ]
}