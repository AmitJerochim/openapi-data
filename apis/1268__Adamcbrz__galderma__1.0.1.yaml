openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Adamcbrz/galderma/1.0.0
info:
  version: "1.0.1"
  title: Sample Application Flow OAuth2 Project
  description: >-
    This is an example of using OAuth2 Application Flow in a specification to
    describe security to your API.
security:
  - application:
      - read
      - write
paths:
  /api/authenticate:
    post:
      summary: Authenticate with server
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenicationRequest'
            
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenicationResponse'
        '400':
          description: bad input paramaters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenicationError'
  /api/password-reset:
    post:
      summary: Allow a User to reset the password
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordResetRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotAuthenticated'
        '401':
          description: invalid password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPasswordResetErrorInvalidPassword'
  /api/user:
    post:
      summary: Get The Authenticated User
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotAuthenticated'
        '401':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseError'
  /api/password-forgot:
    post:
      summary: Allows a user to reset his password if they forget their password
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordForgotRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Error
  /api/track-event:
    post:
      summary: Allows us to report to the cms a trackable event
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackEventRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Server Error
components:
  schemas:
    AuthenicationRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    AuthenicationResponse:
      type: object
      required:
        - token
        - expiration
      properties:
        token:
          type: string
          example: "000000000000"
        expiration:
          type: string
          example: "2019-01-02_14:29:28"
    AuthenicationError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Error: No accout found matching the email and password you provided?"
    UserPasswordResetRequest:
      type: object
      required:
        - token
        - password
      properties:
        token:
          type: string
          example: "000000000000"
        password:
          type: string
          example: "vjs213021m-101ls-="
    ErrorNotAuthenticated:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: integer
          format: int32
          example: 0
        message:
          type: string
          example: "Error: Not Authenticated"
    UserPasswordResetErrorInvalidPassword:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: integer
          format: int32
          example: 0
        message:
          type: string
          example: "Error: Invalid Password"
    UserRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: "000000000000"
    UserResponse:
      type: object
      required:
        - name
        - email
        - fullAccess
      properties:
        name:
          type: string
          example: "George Washington"
        email:
          type: string
          example: "george.washington@pres.gov"
        fullAccess:
          type: boolean
          example: true
    UserResponseError:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: integer
          format: int32
          example: 0
        message:
          type: string
          example: "Error: Invalid Password"
    TrackEventRequest:
      type: object
      required:
        - token
        - category
        - description
      properties:
        token:
          type: string
          example: "000000000000"
        category:
          type: string
          example: "attestation"
        description:
          type: string
          example: "Something Amazing I Guess!"
    PasswordForgotRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: "george.washington@pres.gov"
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources
