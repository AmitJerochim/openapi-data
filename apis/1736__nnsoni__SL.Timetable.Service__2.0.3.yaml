openapi: 3.0.0
info:
  version: "2.0.3"
  title: Timetable Service
  description: StenaLine Timetable Service
servers:
  - url: 'https://sl-trademanagement-dixi-dev-web.apps.openshift.stena.io/api/timetable'
    description: Development Service Endpoint
  - url: 'https://sl-trademanagement-dixi-tst-web.apps.openshift.stena.io/api/timetable'
    description: Automation Test Service Endpoint
  - url: 'https://sl-trademanagement-dixi-ver-web.apps.openshift.stena.io/api/timetable'
    description: Verification Test Service Endpoint
  - url: 'https://sl-trademanagement-dixi-dmo-web.apps.openshift.stena.io/api/timetable'
    description: Demo Service Endpoint
  - url: 'https://uat-tm.stena.io/api/timetable'
    description: User Acceptance Test Service Endpoint
  - url: 'https://tm.stena.io/api/timetable'
    description: Production Service Endpoint
tags:
  - name: Route
    description: Route Information
  - name: Terminal
    description: Terminal Information
  - name: Leg
    description: Leg Information
  - name: Ship
    description: Ship Information
  - name: Draft
    description: Draft Information
  - name: Departure
    description: Departure Information
paths:
  /routes:
    get:
      summary: Returns list of all routes
      description: Returns list of all routes optionally filtered based on region
      tags:
        - Route
      parameters:
        - name: regionCode
          in: query
          description: Region Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
          
  '/routes/{routeCode}':
    get:
      summary: Returns a specific route
      description: Returns a specific route
      tags:
        - Route
      parameters:
        - name: routeCode
          in: path
          description: Route Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
          
  /terminals:
    get:
      summary: Returns list of all terminals
      description: Returns list of all terminals filtered based on city
      tags:
        - Terminal
      parameters:
        - name: cityCode
          in: query
          description: City Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Terminal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
          
  '/terminals/{terminalCode}':
    get:
      summary: Returns a specific terminal
      description: Returns a specific terminal
      tags:
        - Terminal
      parameters:
        - name: terminalCode
          in: path
          description: Terminal Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /legs:
    get:
      summary: Returns list of all legs for a route
      description: Returns list of all legs for a route
      tags:
        - Leg
      parameters:
        - name: routeCode
          in: query
          description: Route Code Filter
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leg'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/legs/{legCode}':
    get:
      summary: Returns a specific leg
      description: Returns a specific leg
      tags:
        - Leg
      parameters:
        - name: legCode
          in: path
          description: Leg Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leg'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /ships:
    get:
      summary: Returns list of all ships
      description: Returns list of all ships
      tags:
        - Ship
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/ships/{shipCode}':
    get:
      summary: Returns a specific ship
      description: Returns a specific ship
      tags:
        - Ship
      parameters:
        - name: shipCode
          in: path
          description: Ship Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /draftStatus:
    get:
      summary: Returns list of all draft status
      description: Returns list of all draft status
      tags:
        - Draft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DraftStatus'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/draftStatus/{draftStatusCode}':
    get:
      summary: Returns a specific draft status
      description: Returns a specific draft status
      tags:
        - Draft
      parameters:
        - name: draftStatusCode
          in: path
          description: Draft Status Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /drafts:
    get:
      summary: Returns list of all drafts
      description: Returns list of all drafts optionally filteres based on draft status
      tags:
        - Draft
      parameters:
        - name: draftStatusCode
          in: query
          description: Draft Status Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Draft'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
    post:
      summary: Creates a new draft
      description: Creates a new draft
      tags:
        - Draft
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        $ref: '#/components/requestBodies/DraftRequest'
  
  '/drafts/{draftId}':
    get:
      summary: Returns a specific draft
      description: Returns a specific draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Updates an existing draft
      description: Updates an existing draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        $ref: '#/components/requestBodies/DraftRequest'
    delete:
      summary: Delete an existing draft
      description: Delete an existing draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

  '/drafts/{draftId}/clone':
    post:
      summary: Creates a clone of an existing draft
      description: Creates a clone of an existing draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        $ref: '#/components/requestBodies/DraftRequest'

  '/drafts/{draftId}/departures':
    get:
      summary: Returns list of all changed departures for a specific draft
      description: Returns list of all changed departures for a specific draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
        - name: routeCode
          in: query
          description: Route Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: legCode
          in: query
          description: Leg Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: shipCode
          in: query
          description: Ship Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: departureStatusCode
          in: query
          description: Departure Status Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: departureTypeCode
          in: query
          description: Departure Type Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fromDateLocal
          in: query
          description: From Date (Local) Filter
          required: true
          schema:
            type: string
            format: date
        - name: toDateLocal
          in: query
          description: To Date (Local) Filter
          required: true
          schema:
            type: string
            format: date
        - name: fromTimeLocal
          in: query
          description: From Time (Local) Filter
          required: false
          schema:
            type: string
            format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
        - name: toTimeLocal
          in: query
          description: To Time (Local) Filter
          required: false
          schema:
            type: string
            format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
        - name: numberOfRecords
          in: query
          description: Total Number of Records to be retreived
          required: false
          schema: 
            type: integer
        - name: sortBy
          in: query
          description: Field to Sort Records By
          required: false
          schema: 
            type: string
            default: PlannedDeparture
        - name: paginationIdentifier
          in: query
          description: >-
            Departure Id used in pagination for retreiving the next set of 
            records
          required: false
          schema: 
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DepartureDraftWithPaging'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
    post:
      summary: Creates a new departure draft
      description: Creates a new departure draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureDraftResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        $ref: '#/components/requestBodies/DepartureDraftRequest'
  
  '/drafts/{draftId}/bulkDepartures':
    post:
      summary: Creates multiple departureDrafts
      description: Creates multiple departureDrafts
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureDraftBulkResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartureDraftBulkRequest'
        description: Departure Draft Bulk Object
        required: true

  '/drafts/{draftId}/departureDraftCalculations':
    get:
      summary: Returns list of Departure Draft Calculations
      description: Returns list of Departure Draft Calculations
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
        - name: departureDraftIds
          in: query
          description: Departure Draft Identifiers
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureDraftCalculation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

  '/drafts/{draftId}/departureCalculations':
    get:
      summary: Returns list of Departure Calculations in context of the Draft
      description: Returns list of Departure Calculations in context of the Draft
      tags:
        - Draft
      parameters:
        - name: draftId
          in: path
          description: Draft Id Filter
          required: true
          schema:
            type: integer
        - name: departureIds
          in: query
          description: Departure Identifiers
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureCalculation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

  '/departureDrafts/{departureDraftId}':
    get:
      summary: Returns a specific departure draft
      description: Returns a specific departure draft
      tags:
        - Draft
      parameters:
        - name: departureDraftId
          in: path
          description: Departure Draft Id Filter
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureDraft'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Updates an existing departure draft
      description: Updates an existing departure draft
      tags:
        - Draft
      parameters:
        - name: departureDraftId
          in: path
          description: Departure Draft Id Filter
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
      requestBody:
        $ref: '#/components/requestBodies/DepartureDraftRequest'
    delete:
      summary: Delete an existing departure draft
      description: Delete an existing departure draft
      tags:
        - Draft
      parameters:
        - name: departureDraftId
          in: path
          description: Departure Draft Id Filter
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /departureTypes:
    get:
      summary: Returns list of all departure types
      description: Returns list of all departure types
      tags:
        - Departure
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureType'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/departureTypes/{departureTypeCode}':
    get:
      summary: Returns a specific departure type
      description: Returns a specific departure type
      tags:
        - Departure
      parameters:
        - name: departureTypeCode
          in: path
          description: Departure Type Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /departureStatus:
    get:
      summary: Returns list of all departure status
      description: Returns list of all departure status
      tags:
        - Departure
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureStatus'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/departureStatus/{departureStatusCode}':
    get:
      summary: Returns a specific departure status
      description: Returns a specific departure status
      tags:
        - Departure
      parameters:
        - name: departureStatusCode
          in: path
          description: Departure Status Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/departureStatus/{departureStatusCode}/reasons':
    get:
      summary: Returns list of all departure status reasons
      description: Returns list of all departure status reasons
      tags:
        - Departure
      parameters:
        - name: departureStatusCode
          in: path
          description: Departure Status Code Filter
          required: true
          style: simple
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureStatusReason'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/departureStatus/{departureStatusCode}/reasons/{departureStatusReasonCode}':
    get:
      summary: Returns a specific departure status reason
      description: Returns a specific departure status reason
      tags:
        - Departure
      parameters:
        - name: departureStatusCode
          in: path
          description: Departure Status Code Filter
          required: true
          schema:
            type: string
        - name: departureStatusReasonCode
          in: path
          description: Departure Status Reason Code Filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartureStatusReason'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  /departures:
    get:
      summary: Returns list of all published departures
      description: Returns list of all published departures
      tags:
        - Departure
      parameters:
        - name: routeCode
          in: query
          description: Route Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: legCode
          in: query
          description: Leg Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: shipCode
          in: query
          description: Ship Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: departureStatusCode
          in: query
          description: Departure Status Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: departureTypeCode
          in: query
          description: Departure Type Code Filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fromDateLocal
          in: query
          description: From Date (Local) Filter
          required: true
          schema:
            type: string
            format: date
        - name: toDateLocal
          in: query
          description: To Date (Local) Filter
          required: true
          schema:
            type: string
            format: date
        - name: fromTimeLocal
          in: query
          description: From Time (Local) Filter
          required: false
          schema:
            type: string
            format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
        - name: toTimeLocal
          in: query
          description: To Time (Local) Filter
          required: false
          schema:
            type: string
            format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
        - name: numberOfRecords
          in: query
          description: Total Number of Records to be retreived
          required: false
          schema: 
            type: integer
        - name: sortBy
          in: query
          description: Field to Sort Records By
          required: false
          schema: 
            type: string
            default: PlannedDeparture
        - name: paginationIdentifier
          in: query
          description: >-
            Departure Id used in pagination for retreiving the next set of 
            records
          required: false
          schema: 
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureWithPaging'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  
  '/departures/{departureId}':
    get:
      summary: Returns a specific departure
      description: Returns a specific departure
      tags:
        - Departure
      parameters:
        - name: departureId
          in: path
          description: Departure Id Filter
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Departure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'


  '/departureCalculations':
    get:
      summary: Returns list of Departure Calculations
      description: Returns list of Departure Calculations
      tags:
        - Departure
      parameters:
        - name: departureIds
          in: query
          description: Departure Identifiers
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureCalculation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

components:
  responses:
    BadRequest:
      description: Cannot process the request because it is malformed or incorrect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorised:
      description: >-
        Required authentication information is either missing or not valid for
        the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: >-
        Access is denied to the requested resource. The user might not have
        enough permission
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The requested resource doesn’t exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unexpected:
      description: An unexpected error has occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    DraftRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DraftRequest'
      description: Draft Object
      required: true
    DepartureDraftRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartureDraftRequest'
      description: Departure Draft Object
      required: true
  schemas:
    Route:
      type: object
      properties:
        regionCode:
          type: string
          description: Region Code
          example: GER
        code:
          type: string
          description: Route Code
          example: SGK
        name:
          type: string
          description: Route Name
          example: Gothenburg - Kiel
    Terminal:
      type: object
      properties:
        cityCode:
          type: string
          description: City Code
          example: GOT
        code:
          type: string
          description: Terminal Code
          example: MAST
        name:
          type: string
          description: Terminal Name
          example: Masthugget
        timeZone:
          type: string
          description: TimeZone
          example: Central European Time
    Leg:
      type: object
      properties:
        routeCode:
          type: string
          description: Route Code
          example: SGK
        code:
          type: string
          description: Leg Code
          example: GOKI
        defaultDepartureTerminalCode:
          type: string
          description: Default Departure Terminal Code
          example: MAST
        defaultArrivalTerminalCode:
          type: string
          description: Default Arrival Terminal Code
          example: KIEL
    Ship:
      type: object
      properties:
        code:
          type: string
          description: Ship Code
          example: GERM
        name:
          type: string
          description: Ship Name
          example: STENA GERMANICA
        imo:
          type: string
          description: Ship IMO Number
          example: '9145176'
    DraftStatus:
      type: object
      properties:
        code:
          type: string
          description: Draft Status Code
          example: InReview
    Draft:
      type: object
      properties:
        draftId:
          type: integer
          description: Draft Id
          example: 5
        draftStatusCode:
          type: string
          description: Draft Status Code
          example: InReview
        name:
          type: string
          description: Draft Name
          example: My First Draft
        comment:
          type: string
          description: Draft Comment
          example: Reviewed by Trade Manager
    DraftRequest:
      type: object
      properties:
        draftStatusCode:
          type: string
          description: Draft Status Code
          example: InReview
        name:
          type: string
          description: Draft Name
          example: My First Draft
        comment:
          type: string
          description: Draft Comment
          example: Reviewed by Trade Manager
    DraftResponse:
      type: object
      properties:
        id:
          type: integer
          description: Draft Id
          example: 5
    DepartureType:
      type: object
      properties:
        code:
          type: string
          description: Departure Type Code
          example: FreightAndTravel
    DepartureStatus:
      type: object
      properties:
        code:
          type: string
          description: Departure Status Code
          example: Blocked
    DepartureStatusReason:
      type: object
      properties:
        departureStatusCode:
          type: string
          description: Departure Status Code
          example: Blocked
        code:
          type: string
          description: Departure Status Reason Code
          example: WT
        name:
          type: string
          description: Departure Status Reason Name
          example: Weather
    DepartureDraft:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Departure Draft Id
          example: ccb949db-ccbb-45af-83fc-df1bfd894387
        draftId:
          type: integer
          description: Draft Id
          example: 5
        departureId:
          type: string
          format: uuid
          description: Departure Id - when modifying existing departure
          example: 1b760c6d-77c7-48ec-b44c-664ec5a9148c
        legCode:
          type: string
          description: Leg Code
          example: GOKI
        shipCode:
          type: string
          description: Ship Code
          example: GERM
        departureTerminalCode:
          type: string
          description: Terminal Code
          example: MAST
        arrivalTerminalCode:
          type: string
          description: Terminal Code
          example: KIEL
        departureTypeCode:
          type: string
          description: Departure Type Code
          example: FreightAndTravel
        departureStatusCode:
          type: string
          description: Departure Status Code
          example: Blocked
        plannedDepartureLocal:
          type: string
          format: date-time
          description: Planned Departure Date Time (Local)
          example: '2019-10-25T13:45:00.000'
        departureTimeZone:
          type: string
          description: Departure TimeZone
          example: Central European Time
        plannedArrivalLocal:
          type: string
          format: date-time
          description: Planned Arrival Date Time (Local)
          example: '2019-10-26T10:30:00.000'
        arrivalTimeZone:
          type: string
          description: Arrival TimeZone
          example: Central European Time
        comment:
          type: string
          description: Departure Draft Comment
          example: This departure draft is for high season
    DepartureDraftWithPaging:
      type: object
      properties:
        departureDrafts:
          type: array
          description: Departure Drafts
          items:
            $ref: '#/components/schemas/DepartureDraft'
        totalNumberOfRecords:
          type: integer
          description: Total Number of Records for the specified criteria
          example: 1050
    DepartureDraftRequest:
      type: object
      properties:
        departureId:
          type: string
          format: uuid
          description: Departure Id - when modifying existing departure
          example: 1b760c6d-77c7-48ec-b44c-664ec5a9148c
        legCode:
          type: string
          description: Leg Code
          example: GOKI
        shipCode:
          type: string
          description: Ship Code
          example: GERM
        departureTerminalCode:
          type: string
          description: Departure Terminal Code
          example: MAST
        arrivalTerminalCode:
          type: string
          description: Arrival Terminal Code
          example: KIEL
        departureTypeCode:
          type: string
          description: Departure Type Code
          example: FreightAndTravel
        departureStatusCode:
          type: string
          description: Departure Status Code
          example: Blocked
        plannedDepartureLocal:
          type: string
          format: date-time
          description: Planned Departure Date Time (Local)
          example: '2019-10-25T13:45:00.000'
        plannedArrivalLocal:
          type: string
          format: date-time
          description: Planned Arrival Date Time (Local)
          example: '2019-10-26T10:30:00.000'
        comment:
          type: string
          description: Departure Draft Comment
          example: This departure draft is for high season
    DepartureDraftResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Departure Draft Id
          example: ccb949db-ccbb-45af-83fc-df1bfd894387
        affectedDepartureDrafts:
          type: array
          description: Departure Draft Ids (For Warnings or TurnAroundTime)
          items:
            type: string
            format: uuid
            example: 12b2bc0f-e72e-486c-8265-4086d6ed7b88
        affectedPublishedDepartures:
          type: array
          description: Departure Ids (For Warnings or TurnAroundTime)
          items:
            type: string
            format: uuid
            example: 932eddba-d0d1-4c41-a3e6-1ad397414e10
    DepartureDraftBulkRequest:
      type: object
      properties:
        legCode:
          type: string
          description: Leg Code
          example: GOKI
        shipCode:
          type: string
          description: Ship Code
          example: GERM
        departureTerminalCode:
          type: string
          description: Departure Terminal Code
          example: MAST
        arrivalTerminalCode:
          type: string
          description: Arrival Terminal Code
          example: KIEL
        departureTypeCode:
          type: string
          description: Departure Type Code
          example: FreightAndTravel
        departureStatusCode:
          type: string
          description: Departure Status Code
          example: Blocked
        comment:
          type: string
          description: Departure Draft Comment
          example: This departure draft is for high season
        plannedDepartureTimeLocal:
          type: string
          format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: Planned Departure Time (Local)
          example: '13:45'
        plannedArrivalTimeLocal:
          type: string
          format: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
          description: Planned Arrival Time (Local)
          example: '10:30'
        applicableDate:
          type: array
          description: List of dates for which departure has to be created
          items:
            type: string
            format: date
    DepartureDraftBulkResponse:
      type: object
      properties:
        id:
          description: Departure Draft Ids
          type: array
          items:
            type: string
            format: uuid
            example: ccb949db-ccbb-45af-83fc-df1bfd894387
        affectedDepartureDrafts:
          type: array
          description: Departure Draft Ids (For Warnings or TurnAroundTime)
          items:
            type: string
            format: uuid
            example: 12b2bc0f-e72e-486c-8265-4086d6ed7b88
        affectedPublishedDepartures:
          type: array
          description: Departure Ids (For Warnings or TurnAroundTime)
          items:
            type: string
            format: uuid
            example: 932eddba-d0d1-4c41-a3e6-1ad397414e10
    DepartureDraftCalculation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Departure Draft Id
          example: ccb949db-ccbb-45af-83fc-df1bfd894387
        warnings:
          type: array
          description: Warnings
          items:
            $ref: '#/components/schemas/Warning'
        turnaroundTime:
          type: integer
          description: Turnaround Time (Minutes)
          example: 780
    Departure:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Departure Id
          example: 5b2d6d13-5abe-4d15-8c4f-8e37094a220d
        legCode:
          type: string
          description: Leg Code
          example: GOKI
        shipCode:
          type: string
          description: Ship Code
          example: GERM
        departureTerminalCode:
          type: string
          description: Departure Terminal Code
          example: MAST
        arrivalTerminalCode:
          type: string
          description: Arrival Terminal Code
          example: KIEL
        departureTypeCode:
          type: string
          description: Departure Type Code
          example: FreightAndTravel
        departureStatusCode:
          type: string
          description: Departure Status Code
          example: Blocked
        plannedDepartureLocal:
          type: string
          format: date-time
          description: Planned Departure Date Time (Local)
          example: '2019-10-25T13:45:00.000'
        departureTimeZone:
          type: string
          description: Departure TimeZone
          example: Central European Time
        plannedArrivalLocal:
          type: string
          format: date-time
          description: Planned Arrival Date Time (Local)
          example: '2019-10-26T10:30:00.000'
        arrivalTimeZone:
          type: string
          description: Arrival TimeZone
          example: Central European Time
        comment:
          type: string
          description: Departure Comment
          example: This departure is for high season
    DepartureWithPaging:
      type: object
      properties:
        departures:
          type: array
          description: Departures
          items:
            $ref: '#/components/schemas/Departure'
        totalNumberOfRecords:
          type: integer
          description: Total Number of Records for the specified criteria
          example: 1050
    DepartureCalculation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Departure Id
          example: 5b2d6d13-5abe-4d15-8c4f-8e37094a220d
        warnings:
          type: array
          description: Warnings
          items:
            $ref: '#/components/schemas/Warning'
        turnaroundTime:
          type: integer
          description: Turnaround Time (Minutes)
          example: 780
    Warning:
      type: object
      properties:
        code:
          type: string
          description: Warning Code
          example: Incomplete
        message:
          type: string
          description: Warning Message
          example: The outbound departure has not been defined
      required:
        - code
        - message
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error Code
          example: Unexpected
        message:
          type: string
          description: Error Message
          example: An unexpected error has occured
      required:
        - code
        - message