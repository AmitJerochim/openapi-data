openapi: 3.0.1
servers:
  - url: /v3
  
info:
  title: Rapport REST API
  description: Rapport Data Import API
  version: v1
paths:
  /api/Application/GetApplication:
    get:
      tags:
        - Application
      summary: Retrieve a Rapport Application
      parameters:
        - name: ApplicationKey
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Application/SendApplication:
    post:
      tags:
        - Application
      summary: Import an application to Rapport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendApplicationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendApplicationRequest'
      responses:
        '200':
          description: Success
  /api/Application/UpdateApplication:
    post:
      tags:
        - Application
      summary: Update an Application to Rapport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
      responses:
        '200':
          description: Success
  /api/Application/ApplicationSearch:
    post:
      tags:
        - Application
      summary: Return application search data
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchRequest'
            example:
              ApplicationSearchData:
                CO:
                  '@GroupType': CO
                  CUST.NAME: string
                  ENT_REFERENCE_NUM: string
                  FED.ID: string
                  CUST.ADDRESS1: string
                  CUST.CITY: string
                  CUST.STATE: string
                  CUST.ZIP: string
                  AppSearchKey: 0
                  SetupSearchKey: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationSearchRequest'
            example: "<ApplicationSearchRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <ApplicationSearchData>\r\n    <CO GroupType=\"CO\">\r\n      <CUST.NAME>string</CUST.NAME>\r\n      <ENT_REFERENCE_NUM>string</ENT_REFERENCE_NUM>\r\n      <FED.ID>string</FED.ID>\r\n      <CUST.ADDRESS1>string</CUST.ADDRESS1>\r\n      <CUST.CITY>string</CUST.CITY>\r\n      <CUST.STATE>string</CUST.STATE>\r\n      <CUST.ZIP>string</CUST.ZIP>\r\n      <AppSearchKey>0</AppSearchKey>\r\n      <SetupSearchKey>0</SetupSearchKey>\r\n    </CO>\r\n  </ApplicationSearchData>\r\n</ApplicationSearchRequest>"
      responses:
        '200':
          description: Success
  /api/Application/BookAllSetups:
    post:
      tags:
        - Application
      summary: Book All Setups for an Application
      parameters:
        - name: ApplicationKey
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Attachment/UploadAttachment/api/Attachment/UploadAttachment:
    post:
      tags:
        - Attachment
      summary: Upload an Attachment to Rapport
      requestBody:
        description: Xml or Json attachment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadAttachmentRequest'
            example:
              UploadAttachmentData:
                Level: string
                Key: string
                FileName: string
                Description: string
                FileSize: 0
                FileData: string
                Private: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/UploadAttachmentRequest'
            example: "<UploadAttachmentRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <UploadAttachmentData>\r\n    <Level>string</Level>\r\n    <Key>string</Key>\r\n    <FileName>string</FileName>\r\n    <Desription>string</Desription>\r\n    <FileSize>0</FileSize>\r\n    <FileData>string</FileData>\r\n    <Private>0</Private>\r\n  </UploadAttachmentData>\r\n</UploadAttachmentRequest>"
      responses:
        '200':
          description: Success
  /api/Comments/CreateComment:
    post:
      tags:
        - Comments
      summary: Create Comments in Rapport
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
            example:
              CreateCommentData:
                ApplicationKey: 0
                ContractSetupKey: 0
                Comment: string
                Private: false
                EmailCurrentUser: false
                EmailAddresses:
                  EmailAddress: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
            example: "<CreateCommentRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <CreateCommentData>\r\n    <ApplicationKey>0</ApplicationKey>\r\n    <ContractSetupKey>0</ContractSetupKey>\r\n    <Comment>string</Comment>\r\n    <Private>false</Private>\r\n    <EmailCurrentUser>false</EmailCurrentUser>\r\n    <EmailAddresses>\r\n      <EmailAddress>string</EmailAddress>\r\n    </EmailAddresses>\r\n  </CreateCommentData>\r\n</CreateCommentRequest>"
      responses:
        '200':
          description: Success
  /api/ContractSetup/SendContractSetup:
    post:
      tags:
        - ContractSetup
      summary: Import a Contract Setup to Rapport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendContractSetupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendContractSetupRequest'
      responses:
        '200':
          description: Success
  /api/ContractSetup/UpdateContractSetup:
    post:
      tags:
        - ContractSetup
      summary: Update a Contract Setup to Rapport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContractSetupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateContractSetupRequest'
      responses:
        '200':
          description: Success
  /api/Customer/GetCustomer:
    get:
      tags:
        - Customer
      summary: Retrieve a Rapport Customer
      parameters:
        - name: CustomerKey
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
        - name: DealerKey
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Customer/CustomerSearch:
    post:
      tags:
        - Customer
      summary: Return Customer search data
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSearchRequest'
            example:
              CustomerSearchData:
                CUST_DATA:
                  '@GroupType': CUST_DATA
                  CUST_NAME: string
                  ENT_REFERENCE_NUM: string
                  ADDR_1: string
                  ADDR_2: string
                  ADDR_3: string
                  CITY: string
                  STATE: string
                  ZIP: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerSearchRequest'
            example: "<CustomerSearchRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <CustomerSearchData>\r\n    <CUST_DATA GroupType=\"CUST_DATA\">\r\n      <CUST_NAME>string</CUST_NAME>\r\n      <ENT_REFERENCE_NUM>string</ENT_REFERENCE_NUM>\r\n      <ADDR_1>string</ADDR_1>\r\n      <ADDR_2>string</ADDR_2>\r\n      <ADDR_3>string</ADDR_3>\r\n      <CITY>string</CITY>\r\n      <STATE>string</STATE>\r\n      <ZIP>string</ZIP>\r\n    </CUST_DATA>\r\n  </CustomerSearchData>\r\n</CustomerSearchRequest>"
      responses:
        '200':
          description: Success
  /api/Customer/UpsertCustomer:
    post:
      tags:
        - Customer
      summary: Upsert Customer data
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCustomerRequest'
            example:
              UpsertCustomerData:
                EntReferenceNum: string
                CustomerFormKey: 0
                Customer:
                  CUST_DATA:
                    CUST_NAME: string
                    FED_ID: string
                    ADDR_1: string
                    ADDR_2: string
                    ADDR_3: string
                    CITY: string
                    STATE: string
                    ZIP: string
                    CONTACT_NAME: string
                    CONTACT_PHONE: string
                    CONTACT_EMAIL: string
                    CONTACT_FAX: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpsertCustomerRequest'
            example: "<UpsertCustomerRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <UpsertCustomerData>\r\n    <EntReferenceNum>string</EntReferenceNum>\r\n    <CustomerFormKey>0</CustomerFormKey>\r\n    <Customer>\r\n      <CUST_DATA>\r\n        <CUST_NAME>string</CUST_NAME>\r\n        <FED_ID>string</FED_ID>\r\n        <ADDR_1>string</ADDR_1>\r\n        <ADDR_2>string</ADDR_2>\r\n        <ADDR_3>string</ADDR_3>\r\n        <CITY>string</CITY>\r\n        <STATE>string</STATE>\r\n        <ZIP>string</ZIP>\r\n        <CONTACT_NAME>string</CONTACT_NAME>\r\n        <CONTACT_PHONE>string</CONTACT_PHONE>\r\n        <CONTACT_EMAIL>string</CONTACT_EMAIL>\r\n        <CONTACT_FAX>string</CONTACT_FAX>\r\n      </CUST_DATA>\r\n    </Customer>\r\n  </UpsertCustomerData>\r\n</UpsertCustomerRequest>"
      responses:
        '200':
          description: Success
  /api/Dealer/UpsertDealer:
    post:
      tags:
        - Dealer
      summary: Upsert Dealer data
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertDealerRequest'
            example:
              UpsertDealerData:
                DlrReferenceNum: string
                DealerFormKey: 0
                DLR:
                  DLR_NAME: string
                  DLR_ADD1: string
                  DLR_ADD2: string
                  DLR_ADD3: string
                  DLR_CITY: string
                  DLR_STATE: string
                  DLR_ZIP: string
                  DLR_COUNTY: string
                  DLR_COUNTRY: string
                  DLR_MAIL_ADD1: string
                  DLR_MAIL_ADD2: string
                  DLR_MAIL_ADD3: string
                  DLR_MAIL_CITY: string
                  DLR_MAIL_STATE: string
                  DLR_MAIL_ZIP: string
                  DLR_MAIL_CNTY: string
                  DLR_MAIL_CNTRY: string
                  DLR_CONTACT: string
                  DLR_CONTACT_PHONE: string
                  DLR_EMAIL: string
                  DLR_EQUIP_EMAIL: string
                  DLR_FINANCE_EMAIL: string
                  DLR_MARKETING_EMAIL: string
                  DLR_SALES_EMAIL: string
                  DLR_FAX_PHONE: string
                  DLR_SALESPERSON: string
                  DLR_CREDIT_NAME: string
                  DLR_CREDIT_PHONE: string
                  DlrMiscPymtPlan: string
                  DlrPassThruDate: string
                  TbVdmTableTypeRecords:
                    TbVdmTableType: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpsertDealerRequest'
            example: "<UpsertDealerRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <UpsertDealerData>\r\n    <DlrReferenceNum>string</DlrReferenceNum>\r\n    <DealerFormKey>0</DealerFormKey>\r\n    <DLR>\r\n      <DLR_NAME>string</DLR_NAME>\r\n      <DLR_ADD1>string</DLR_ADD1>\r\n      <DLR_ADD2>string</DLR_ADD2>\r\n      <DLR_ADD3>string</DLR_ADD3>\r\n      <DLR_CITY>string</DLR_CITY>\r\n      <DLR_STATE>string</DLR_STATE>\r\n      <DLR_ZIP>string</DLR_ZIP>\r\n      <DLR_COUNTY>string</DLR_COUNTY>\r\n      <DLR_COUNTRY>string</DLR_COUNTRY>\r\n      <DLR_MAIL_ADD1>string</DLR_MAIL_ADD1>\r\n      <DLR_MAIL_ADD2>string</DLR_MAIL_ADD2>\r\n      <DLR_MAIL_ADD3>string</DLR_MAIL_ADD3>\r\n      <DLR_MAIL_CITY>string</DLR_MAIL_CITY>\r\n      <DLR_MAIL_STATE>string</DLR_MAIL_STATE>\r\n      <DLR_MAIL_ZIP>string</DLR_MAIL_ZIP>\r\n      <DLR_MAIL_CNTY>string</DLR_MAIL_CNTY>\r\n      <DLR_MAIL_CNTRY>string</DLR_MAIL_CNTRY>\r\n      <DLR_CONTACT>string</DLR_CONTACT>\r\n      <DLR_CONTACT_PHONE>string</DLR_CONTACT_PHONE>\r\n      <DLR_EMAIL>string</DLR_EMAIL>\r\n      <DLR_EQUIP_EMAIL>string</DLR_EQUIP_EMAIL>\r\n      <DLR_FINANCE_EMAIL>string</DLR_FINANCE_EMAIL>\r\n      <DLR_MARKETING_EMAIL>string</DLR_MARKETING_EMAIL>\r\n      <DLR_SALES_EMAIL>string</DLR_SALES_EMAIL>\r\n      <DLR_FAX_PHONE>string</DLR_FAX_PHONE>\r\n      <DLR_SALESPERSON>string</DLR_SALESPERSON>\r\n      <DLR_CREDIT_NAME>string</DLR_CREDIT_NAME>\r\n      <DLR_CREDIT_PHONE>string</DLR_CREDIT_PHONE>\r\n      <DlrMiscPymtPlan>string</DlrMiscPymtPlan>\r\n      <DlrPassThruDate>string</DlrPassThruDate>\r\n      <TbVdmTableTypeRecords>\r\n        <TbVdmTableType>string</TbVdmTableType>\r\n      </TbVdmTableTypeRecords>\r\n    </DLR>\r\n  </UpsertDealerData>\r\n</UpsertDealerRequest>"
      responses:
        '200':
          description: Success
  /api/Document/RequestDocumentPDF:
    get:
      tags:
        - Document
      summary: Retrieve a Rapport PDF Document
      parameters:
        - name: DocumentId
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
            nullable: true
        - name: MergedDocumentId
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Document/RequestDocumentInfo:
    get:
      tags:
        - Document
      summary: Retrieve Document Information
      parameters:
        - name: TransactionType
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: TransactionKey
          in: query
          description: ''
          schema:
            type: integer
            description: ''
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Document/CreateDocuments:
    post:
      tags:
        - Document
      summary: Create Documents in Rapport
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentsRequest'
            example:
              CreateDocumentsData:
                TransactionType: string
                TransactionKey: 0
                CreateAllDoc: false
                MergeAllDoc: false
                MergeDesc: string
                SelectedDocuments:
                  DocTemplate: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateDocumentsRequest'
            example: "<CreateDocumentsRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <CreateDocumentsData>\r\n    <TransactionType>string</TransactionType>\r\n    <TransactionKey>0</TransactionKey>\r\n    <CreateAllDoc>false</CreateAllDoc>\r\n    <MergeAllDoc>false</MergeAllDoc>\r\n    <MergeDesc>string</MergeDesc>\r\n    <SelectedDocuments>\r\n      <DocTemplate>0</DocTemplate>\r\n    </SelectedDocuments>\r\n  </CreateDocumentsData>\r\n</CreateDocumentsRequest>"
      responses:
        '200':
          description: Success
  /api/Document/UpdateDocumentStatus:
    post:
      tags:
        - Document
      summary: Update Document Status
      parameters:
        - name: EnvelopeID
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: EnvelopeStatus
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/PricingEngine/GetPricingParameters:
    get:
      tags:
        - PricingEngine
      summary: Retrieve Pricing Parameters from Rapport
      parameters:
        - name: Locale
          in: query
          description: 'Locale (Example:  1033)'
          schema:
            type: string
            description: 'Locale (Example:  1033)'
            nullable: true
        - name: RapportVersion
          in: query
          description: 'Rapport Version (Example:  7.6.0.0)'
          schema:
            type: string
            description: 'Rapport Version (Example:  7.6.0.0)'
            nullable: true
        - name: DestinationOption
          in: query
          description: Destination Option (Valid values are 0 or 1)
          schema:
            type: string
            description: Destination Option (Valid values are 0 or 1)
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/PricingEngine/CalculateQuote:
    post:
      tags:
        - PricingEngine
      summary: Calcualte Quote in Rapport
      requestBody:
        description: Xml or Json search data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateQuoteDataRequest'
            example:
              CalculateQuoteData:
                get_rent_params:
                  quote_params:
                    do_matrix_pricing: 0
                    locale_key: string
                    rapport_version: string
                    country: string
                    currency: string
                    do_aggregate_calc: 0
                    equip_or_product_based: string
                    target_solve_index: 0
                    product_code: 0
                    start_month: 0
                    start_day: 0
                    start_year: 0
                    rent_frequency: 0
                    target_yield: 0
                    rent_start_month: 0
                    rent_start_day: 0
                    rent_start_year: 0
                    rent_payment_method: 0
                    number_ending_payments_in_advance: 0
                    end_month: 0
                    end_day: 0
                    end_year: 0
                    security_deposit_amount: 0
                    first_payment_amount: 0
                    matrix_term: 0
                    ebo_term: 0
                    ebo_yield: 0
                    force_finance_mode: string
                    cost_of_funds: 0
                    borrowing_percentage: 0
                    rent_schedule:
                      rent_level:
                        number_of_payments: 0
                        amount: 0
                    asset_list:
                      asset_data:
                        equipment_code: 0
                        asset_cost: 0
                        residual_basis: 0
                        residual: 0
                        residual_month: 0
                        residual_day: 0
                        residual_year: 0
                        target_yield: 0
                        residual_mode: 0
                        alt_residual: 0
                        in_service_month: 0
                        in_service_day: 0
                        in_service_year: 0
                        guaranteed_residual: 0
                        insured_residual: 0
                        asset_user_def:
                          UD_AS_FIELD_ID: string
                        manual_vendor_payments:
                          date: string
                          amount: 0
                        list_price: 0
                        discount: 0
                        depreciation_method: string
                        depreciation_convention: string
                        depreciation_life: string
                        calc_as_csc: string
                        subsidy:
                          subsidy_lessor_rate: 0
                          subsidy_amount: 0
                        pricing_engine_pass_thru: {}
                    subsidy:
                      subsidy_lessor_rate: 0
                      subsidy_amount: 0
                    component_list:
                      component_data:
                        component_cost: 0
                        component_residual: 0
                        rent_schedule:
                          rent_level:
                            number_of_payments: 0
                            amount: 0
                            pricing_engine_pass_thru: {}
                        pricing_engine_pass_thru: {}
                    use_def:
                      UD_FIELD_ID: string
                    discount_lease: string
                    other_expenses:
                      other_expense:
                        oexp_start_date: string
                        oexp_frequency: 0
                        oexp_affects_cash: 1
                        oexp_affects_taxes: 1
                        oexp_affects_book: 1
                        oexp_affects_rent_schedule: 0
                        oexp_affects_apr: 0
                        oexp_fractions_based_on: string
                        oexp_schedule:
                          row:
                            num: 0
                            amount: 0
                            pricing_engine_pass_thru: {}
                        pricing_engine_pass_thru: {}
                    idcs:
                      idc:
                        amount: 0
                    rate_validation_date: string
                    pricing_engine_pass_thru: {}
                    targ_solve_cur_low_boundary: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CalculateQuoteDataRequest'
            example: "<CalculateQuoteDataRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <CalculateQuoteData>\r\n    <get_rent_params>\r\n      <quote_params>\r\n        <do_matrix_pricing>0</do_matrix_pricing>\r\n        <locale_key>string</locale_key>\r\n        <rapport_version>string</rapport_version>\r\n        <country>string</country>\r\n        <currency>string</currency>\r\n        <do_aggregate_calc>0</do_aggregate_calc>\r\n        <equip_or_product_based>string</equip_or_product_based>\r\n        <target_solve_index>0</target_solve_index>\r\n        <product_code>0</product_code>\r\n        <start_month>0</start_month>\r\n        <start_day>0</start_day>\r\n        <start_year>0</start_year>\r\n        <rent_frequency>0</rent_frequency>\r\n        <target_yield>0</target_yield>\r\n        <rent_start_month>0</rent_start_month>\r\n        <rent_start_day>0</rent_start_day>\r\n        <rent_start_year>0</rent_start_year>\r\n        <rent_payment_method>0</rent_payment_method>\r\n        <number_ending_payments_in_advance>0</number_ending_payments_in_advance>\r\n        <end_month>0</end_month>\r\n        <end_day>0</end_day>\r\n        <end_year>0</end_year>\r\n        <security_deposit_amount>0</security_deposit_amount>\r\n        <first_payment_amount>0</first_payment_amount>\r\n        <matrix_term>0</matrix_term>\r\n        <ebo_term>0</ebo_term>\r\n        <ebo_yield>0</ebo_yield>\r\n        <force_finance_mode>string</force_finance_mode>\r\n        <cost_of_funds>0</cost_of_funds>\r\n        <borrowing_percentage>0</borrowing_percentage>\r\n        <rent_schedule>\r\n          <rent_level>\r\n            <number_of_payments>0</number_of_payments>\r\n            <amount>0</amount>\r\n          </rent_level>\r\n        </rent_schedule>\r\n        <asset_list>\r\n          <asset_data>\r\n            <equipment_code>0</equipment_code>\r\n            <asset_cost>0</asset_cost>\r\n            <residual_basis>0</residual_basis>\r\n            <residual>0</residual>\r\n            <residual_month>0</residual_month>\r\n            <residual_day>0</residual_day>\r\n            <residual_year>0</residual_year>\r\n            <target_yield>0</target_yield>\r\n            <residual_mode>0</residual_mode>\r\n            <alt_residual>0</alt_residual>\r\n            <in_service_month>0</in_service_month>\r\n            <in_service_day>0</in_service_day>\r\n            <in_service_year>0</in_service_year>\r\n            <guaranteed_residual>0</guaranteed_residual>\r\n            <insured_residual>0</insured_residual>\r\n            <asset_user_def>\r\n              <UD_AS_FIELD_ID>string</UD_AS_FIELD_ID>\r\n            </asset_user_def>\r\n            <manual_vendor_payments>\r\n              <date>string</date>\r\n              <amount>0</amount>\r\n            </manual_vendor_payments>\r\n            <list_price>0</list_price>\r\n            <discount>0</discount>\r\n            <depreciation_method>string</depreciation_method>\r\n            <depreciation_convention>string</depreciation_convention>\r\n            <depreciation_life>string</depreciation_life>\r\n            <calc_as_csc>string</calc_as_csc>\r\n            <subsidy>\r\n              <subsidy_lessor_rate>0</subsidy_lessor_rate>\r\n              <subsidy_amount>0</subsidy_amount>\r\n            </subsidy>\r\n            <pricing_engine_pass_thru />\r\n          </asset_data>\r\n        </asset_list>\r\n        <subsidy>\r\n          <subsidy_lessor_rate>0</subsidy_lessor_rate>\r\n          <subsidy_amount>0</subsidy_amount>\r\n        </subsidy>\r\n        <component_list>\r\n          <component_data>\r\n            <component_cost>0</component_cost>\r\n            <component_residual>0</component_residual>\r\n            <rent_schedule>\r\n              <rent_level>\r\n                <number_of_payments>0</number_of_payments>\r\n                <amount>0</amount>\r\n                <pricing_engine_pass_thru />\r\n              </rent_level>\r\n            </rent_schedule>\r\n            <pricing_engine_pass_thru />\r\n          </component_data>\r\n        </component_list>\r\n        <user_def>\r\n          <UD_FIELD_ID>string</UD_FIELD_ID>\r\n        </user_def>\r\n        <discount_lesae>string</discount_lesae>\r\n        <other_expenses>\r\n          <other_expense>\r\n            <oexp_start_date>string</oexp_start_date>\r\n            <oexp_frequency>0</oexp_frequency>\r\n            <oexp_affects_cash>1</oexp_affects_cash>\r\n            <oexp_affects_taxes>1</oexp_affects_taxes>\r\n            <oexp_affects_book>1</oexp_affects_book>\r\n            <oexp_affects_rent_schedule>0</oexp_affects_rent_schedule>\r\n            <oexp_affects_apr>0</oexp_affects_apr>\r\n            <oexp_fractions_based_on>string</oexp_fractions_based_on>\r\n            <oexp_schedule>\r\n              <row>\r\n                <num>0</num>\r\n                <amount>0</amount>\r\n                <pricing_engine_pass_thru />\r\n              </row>\r\n            </oexp_schedule>\r\n            <pricing_engine_pass_thru />\r\n          </other_expense>\r\n        </other_expenses>\r\n        <idcs>\r\n          <idc>\r\n            <amount>0</amount>\r\n          </idc>\r\n        </idcs>\r\n        <rate_validation_date>string</rate_validation_date>\r\n        <pricing_engine_pass_thru />\r\n        <targ_solve_cur_low_boundary>string</targ_solve_cur_low_boundary>\r\n      </quote_params>\r\n    </get_rent_params>\r\n  </CalculateQuoteData>\r\n</CalculateQuoteDataRequest>"
      responses:
        '200':
          description: Success
  /api/TableCodeDesc/GetTableCodesDescriptions:
    get:
      tags:
        - TableCodeDesc
      summary: >-
        Retrieve a Table Codes and Descriptions (DateTime must be in ISO Format
        (YYYY-MM-DD))
      parameters:
        - name: FieldId
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: GroupId
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: Locale
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: DateTime
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
  /api/Token/request:
    post:
      tags:
        - Token
      summary: >-
        Retrieves a JWT which must then be sent with every request to the API in
        the Authorization header.
      requestBody:
        description: 'Json request passing username, password, and alias'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    APIResponse:
      type: object
      properties:
        response:
          type: object
          additionalProperties: false
          description: Response message from Rapport
          nullable: true
      additionalProperties: false
      description: Class for API Responses
    SendApplicationRequest:
      required:
        - action
        - appData
      type: object
      properties:
        action:
          type: string
          description: >-
            Determines whether application is saved (SaveApplication) or
            submitted into the workflow (SubmitForApproval)
        appData:
          type: object
          additionalProperties: false
          description: "Application Data in xml or json format.  This format should mirror the schema generated for data import*.  \r\n*Do not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Model defining SendApplication request
    UpdateApplicationRequest:
      required:
        - appData
      type: object
      properties:
        action:
          type: string
          description: "Determines whether Application is just updated (no action or empty action) or\r\nupdated and submitted into the workflow (SubmitExistApp)"
          nullable: true
        appData:
          type: object
          additionalProperties: false
          description: "Application data in xml or json format. This format should mirror the schema\r\ngenerated for data import.  \r\nDo not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Model defining UpdateApplication request
    ApplicationSearchRequest:
      required:
        - applicationSearchData
      type: object
      properties:
        applicationSearchData:
          type: object
          additionalProperties: false
          description: "Application Data in xml or json format.  This format should mirror the schema generated for the application search form*.  \r\n*Do not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Class defining Application Search endpoint request object
    UploadAttachmentRequest:
      required:
        - uploadAttachmentData
      type: object
      properties:
        uploadAttachmentData:
          type: object
          additionalProperties: false
          description: "Upload Attachments in JSON or XML format.  This format should mirror the schema generated for the Upsert Dealer form.\r\nDo not send Alias and User nodes as those are part of the token."
      additionalProperties: false
    CreateCommentRequest:
      required:
        - createCommentData
      type: object
      properties:
        createCommentData:
          type: object
          additionalProperties: false
          description: "Create Comments Data in xml or json format.  This format should mirror the schema generated for the Create Comment form*.  \r\n*Do not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Class for CreateCommentsRequest
    SendContractSetupRequest:
      required:
        - contractSetupData
      type: object
      properties:
        contractSetupData:
          type: object
          additionalProperties: false
          description: "Contract Setup Data in xml or json format.\r\nThis format should mirror the schema generated for data import.  \r\nDo not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Model defining SendContractSetup request
    UpdateContractSetupRequest:
      required:
        - contractSetupData
      type: object
      properties:
        contractSetupData:
          type: object
          additionalProperties: false
          description: "Contract Setup data in xml or json format. This format should mirror the schema\r\ngenerated for data import.  \r\nDo not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Model defining UpdateContractSetup request
    CustomerSearchRequest:
      required:
        - customerSearchData
      type: object
      properties:
        customerSearchData:
          type: object
          additionalProperties: false
          description: "Customer Data in xml or json format. This format should mirror the schema generated for the Customer search form.  \r\nDo not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Class defining Customer Search endpoint request object
    UpsertCustomerRequest:
      required:
        - upsertCustomerData
      type: object
      properties:
        upsertCustomerData:
          type: object
          additionalProperties: false
          description: "Upsert (Update/Insert) Customer Data in JSON or XML format.  This format should mirror the schema generated for the Upsert Customer form.\r\nDo not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Example class for UpsertCustomerRequest
    UpsertDealerRequest:
      required:
        - upsertDealerData
      type: object
      properties:
        upsertDealerData:
          type: object
          additionalProperties: false
          description: "Upsert (Update/Insert) Dealer Data in JSON or XML format.  This format should mirror the schema generated for the Upsert Dealer form.\r\nDo not send Alias and User nodes as those are part of the token."
      additionalProperties: false
      description: Class for UpsertDealerRequest
    CreateDocumentsRequest:
      required:
        - createDocumentsData
      type: object
      properties:
        createDocumentsData:
          type: object
          additionalProperties: false
          description: "Create Documents Data in xml or json format.  This format should mirror the schema generated for the application search form*.  \r\n*Do not send Alias or User nodes as those are now part of the token."
      additionalProperties: false
      description: Class defining Create Documents endpoint request object
    CalculateQuoteDataRequest:
      required:
        - calculateQuoteData
      type: object
      properties:
        calculateQuoteData:
          type: object
          additionalProperties: false
          description: Calculate Quote Data in xml or json format.
      additionalProperties: false
      description: Class defining Calculate Quote endpoint request object
    TokenRequest:
      required:
        - alias
        - password
        - username
      type: object
      properties:
        username:
          type: string
          description: Rapport username
        password:
          type: string
          description: Rapport password
        alias:
          type: string
          description: Rapport DB Alias
      additionalProperties: false
      description: Token request format
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties:
        type: object
        additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer [space] and and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\""
      name: Authorization
      in: header
security:
  - Bearer: []
