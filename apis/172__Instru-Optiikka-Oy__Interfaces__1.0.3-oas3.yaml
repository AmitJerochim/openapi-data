openapi: 3.0.0
info:
  description: >
    * This is a interface service for 3rd party systems, e.g. Promeda Customers/Prescriptions, searching contact lenses <br />
    'Change history:'  <br />
    *24.03.2020 lisätty Magenton presciption  <br />
    *02.04.2020 Lisätty /contactLenses/search <br />
  version: "1.0.3-oas3"
  title: Instru Interface
  termsOfService: ''
  contact:
    email: kari.soiniemi@instru.fi
 
servers:
  - url: 'http://fi1-sv-ltj055:8810/Interfaces/web'
    description: server for testing
  - url: 'http://fi1-sv-ltj045:8810/Interfaces/web'
    description: Main (production) server

externalDocs:    
  description: Find more info here
  url: 'http://fi1-sv-ltj055:8810/Interfaces/static/apiIndex.html'
    
    
paths:
  /SIProAsiakas:
    get:
      tags: 
        - Customer
      summary: Finds Customer based on query    
      description: Customers can be searched with fields Sotu, Sukunimi and AsiakasNro      
      parameters:
        - in: query
          description: filter for ablFilter, top and sort, ablFilter is mandatory, AsiakasNro, Sotu and Sukunimi are indexed fields to search, top = The numbers of items to return
          name: filter
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  ablFilter:
                    type: string
                    description: AsiakasNro, Sotu and Sukunimi are indexed fields to search
                  top:
                    type: integer
                    description: The numbers of items to return
                  sort:
                    type: string
                required: 
                  - ablFilter
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsAsiakas'
      security:
        - basicAuth: []
    
    post:
      tags: 
        - Customer    
      summary: Add a new customer to database
      requestBody:
          description: Create Customer to Database
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsAsiakas'
      responses:
        '201':
          description: Customer created 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsAsiakas'      
        '405':
          description: Invalid input, e.g. Ei sallittu tapahtuma
        '401':
          description: Internal error in backend          
      security:
        - basicAuth: []
    put:
      tags: 
        - Customer    
      summary: update customer to databae
      requestBody:
          description: Create Customer to Database
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsAsiakas'
      responses:
        '201':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsAsiakas'      
        '405':
          description: Invalid input, e.g. Ei sallittu päivitys
        '401':
          description: Internal error in backend          
      security:
        - basicAuth: []
        
  /SIProTapaht:
    get:
      tags: 
        - Prescriptions    
      summary: Finds Customer'S old order and prescriptions based on filter query
      description: can be searched with fields Sotu, AsiakasNro and Tilaus+Myymala    
      parameters:
        - in: query
          name: filter
          required: true
          content:
            application/json:
              schema:          
                type: object
                properties:
                  ablFilter:
                    type: string
                    description: AsiakasNro, Sotu and Tilaus+Myymala are indexed fields to search
                  top:
                    type: integer
                    description: The numbers of items to return
                  sort:
                    type: string
                required: 
                  - ablFilter
      responses:
        '200':
          description: successful operation
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/dsTapaht'
        '401':
          description: Internal error in backend                    
      security:
        - basicAuth: []          
    post:
      tags: 
        - Prescriptions    
      summary: Add a new customer prescription to database
      requestBody:
          description: Create Customer prescription  to Database
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsTapaht'
      responses:
        '201':
          description: Presciption created 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsTapaht'      
        '405':
          description: Invalid input, e.g. Ei sallittu tapahtumalaji
        '401':
          description: Internal error in backend          
      security:
        - basicAuth: []
        

  /LensPrescription:
    post:
      tags: 
        - Magento Prescriptions    
      summary: Sends old prescription and needed lens information
      description: Sends old prescription and needed lens information
      requestBody:
        description: LensOrder prescription object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lensorderPrescription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lensorderPrescription'        
      security:
        - basicAuth: []                
        
  /contactLenses/search:
    post:
      tags:
        - contact-Lens    
      summary: Search contact lenses
      description: Search contact lenses
      operationId: ContactLenses_search_UsingPOST
      parameters:
        - in: query
          name: top
          description: The numbers of items to return, Format - int32.
          schema:
            type: integer                      
        - in: query
          name: sort          
          schema:
            type: string                                  
      requestBody:
        description: contact lens search do to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactLensSearch'
      responses:
        '200':
          description: OK        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfContactLens'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post401ApplicationJsonResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ApplicationJsonResponse'
              
        
components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
  schemas:
    ttAddress:
      type: array
      items:
        type: object
        properties:
          CompanyID:
            type: string
          InternalVendorNumber:
            type: string
          AddressType:
            type: string
          StreetName:
            type: string
          CityName:
            type: string
          PostalCode:
            type: string
          AddressLine1:
            type: string
        required:
          - CompanyID
          - InternalVendorNumber
          - AddressType
          - PostalCode
      xml:
        name: Order

    ttAsiakas:
      type: array
      items:
        type: object
        properties:
          Sukunimi:
              type: string
          Etunimi:
            type: string
          Nimi:
            type: string
          Sotu:
            type: string
            pattern: '^(0[1-9]|[12]\d|3[01])(0[1-9]|1[0-2])(\d\d-|[01]\dA|2[0]A)\d{3}[\dABCDEFHJKLMNPRSTUVWXY]$'
            description: > 
              Description This is for the Finnish social security numbers (henkilötunnus / hetu). It consists of eleven characters of the form DDMMYYCZZZQ, where DDMMYY is the date of birth, C the century sign (- or A), ZZZ the individual number (even for men and odd for female), and Q the control character or the checksum. It is calculated DDMMYYZZZ mod 31, where the remainder 0,1,2,..,31 is converted from the list 0,1,...A,B,C..Y . The G,I, O and Q are not in the list, they are too similar to numbers 1, 8 and 0 (zero). Note This regex does not calculate the checksum (mod 31).
                Matches to 010593-123A | 010503A123A | 210566-022Y
            example: '010593-123A | 010503A123A | 210566-022Y'    
          Syntymapvm:
            type: string
            format: date
          AsiakasNro:
            type: string
          AsiakasNro_Ext:
            type: string
            description: >
              external system's customer ID (e.g Promeda Customer number)
          Sukupuoli:
            type: string
          Ketju:
            type: string
          Katuos:
            type: string
          Postinro:
            type: integer
            minimum: 00001
            maximum: 99999            
          Postitp:
            type: string
          Email:
            type: string
            format: email
            example: user@example.com
          PuhelinNro:
            type: string
          Myymala:
            type: integer
            minimum: 400
            maximum: 999
          Avauspvm:
            type: string
            format: date
            example: '2019-02-28'
          Viimluovpvm:
            type: string
            example: '2019-02-28'
          Muutospvm:
            type: string
            example: '2019-02-28'
          memo:
            type: string
          TietoSuostumus:
            type: boolean
            description: >
              Consent to use customerdata (informed)
          TietoSuostumusPvm:
            type: string
            format: date
            example: '2019-02-28'
            description: >
              date when customer is informed  (get consent)           
          TietoSuostumusUser:
            type: string
            description: >
              User ID' that has informed customer (get consent) 
          TietoSuostumusRajoitus:
            type: string
            description: >
              Restriction to consent, e.g strore number to consent
          KieliKoodi:
            type: string
            enum:
              - FIN
              - SWE
              - ENG
              - EST
          I_AsiakasNro:
            type: string
          N_AsiakasNro:
            type: string
          K_AsiakasNro:
            type: string
          SortNum:
            type: integer
        required:
          - Sukunimi
          - Etunimi
          - Syntymapvm
          - Sotu
          - Email
          - TietoSuostumus
          - TietoSuostumusPvm
          - TietoSuostumusUser
      xml:
        name: ttAsiakas
    dsAsiakas:
      type: object
      properties:
        dsAsiakas:
          type: object
          properties:      
            ttAsiakas:
              $ref: '#/components/schemas/ttAsiakas'
            ttAddress:
              $ref: '#/components/schemas/ttAddress'
      xml:
        name: dsAsiakas

    ttTapRivi:
      type: array
      items:
        type: object
        properties:
          Tilaus: 
            type: integer
            format: int64
            description: > 
               order number (Tapahtuman tilausnumero)
          TarkastusNro:
            type: string
            description: > 
              unique event ID, LTJ sends store number + Order number
              Yksilöivä tapahtumatunniste, LTJ lähettää myymälänumero + tilausnumero        
          Puoli:
            type: string
            enum: ["Oikea","Vasen", ""]
            description: > 
              *Oikea - Right side
              *Vasen - Left side
          TuoteKdi:
            type: string
            description: Item Code
            minLength: 7
          TuoteNimi:
            type: string
            description: Plain text description for item
          TuoteRyhKdi:
            type: string
            enum:
              - "110"
              - "120"
              - "130"
              - "140"
              - "150"
              - "310"
              - "320"
              - "931"
              - "941"
              - "942"              
              - "932"
            description: > 
              * 110  yksiteholinssit    
              * 120  kaksiteholinssit  
              * 130  moniteholinssit    
              * 140  syväterävät    
              * 150  Individuaali monitehot
              * 310  kertakäyttöpiilolinssit    
              * 320  ei-kertakäyttöpiilolinssit
              * 931  näöntarkastus
              * 941  Silmänpohjakuvaus
              * 942  Ocusweep tutkimukset 
              * 932 silmälääkärinpalkkio
          TuoteRyhNimi:
            type: string
            description: Plain text description item group            
          Kpl:
            type: integer
          Sf:
            type: number
            multipleOf: 0.25
          Cyl:
            type: number
            multipleOf: 0.25            
          Ax:
            type: integer
          Adde:
            type: number
            multipleOf: 0.25                        
          Prisma:
            type: number
            multipleOf: 0.1
          Bas:
            type: number
            multipleOf: 0.1            
            description: Prisma base value 
          Mat:
            type: string
            description: > 
              Old LTJ "marketing" item code
            minLength: 3
            maxLength: 3
          Tyyppi:
            type: string
            description: > 
              Old LTJ 'marketing' item type
            maxLength: 3            
          Varitys1:
            type: string
            description: Color code lens
          Lisa1:
            type: string
            description: > 
              Coating/extra code 2 lens            
          Lisa2:
            type: string
            description: > 
              Coating/extra code 2 lens            
          Halkaisija:
            type: number
            multipleOf: 0.1            
            description: Diameter           
          Losa:
            type: integer
            description: bifocal segment width          
          Lukukorkeus: 
            type: number
            multipleOf: 0.1            
            description: Fitting hight              
          BC:  
            type: number  
            multipleOf: 0.1            
            description: Base curve            
          LPD:  
            type: number
            multipleOf: 0.1            
            description: Near PD pupillary distance
          KPD:
            type: number
            multipleOf: 0.1            
            description: Far PD              
          VapaaVisus:
            type: number
            multipleOf: 0.1            
            description: free (visual acuity) Visus                                  
          Visus:
            type: number
            multipleOf: 0.1            
            description: Visus (visual acuity) with correction    
          LVapaaVisus:
            type: number
            multipleOf: 0.1            
            description: Near free Visus
          LVisus:
            type: number
            multipleOf: 0.1            
            description: near Visus with correction
          LinssiSuositus:
            type: string
            description: Lens recommandition 
          LinssiSuositusCode:
            type: string
            description: Lens recommandition predefined codes             
          Hoitotapa:
            type: string
            description: CL liquid solution
          Alehinta:  
            type: number
            multipleOf: 0.01
            description: Total order price
          Hinta:  
            type: number
            multipleOf: 0.01
            description: Total order price without discounts
          Foria:
            type: string
          Mikroskopointi:
            type: string
          Keratometri:
            type: string            
          Anamneesi:
            type: string                        
        required:
          - TarkastusNro
          - Tilaus
          - TuoteKdi
          - Puoli
          - LinssiSuositus
      xml:
        name: ttTapRivi

    ttTapaht:
      type: array
      items:
        type: object
        properties:
          Tilaus: 
            type: integer
            format: int64
            description: > 
              order number (Tapahtuman tilausnumero)
          Myymala:
            type: integer
            minimum: 400
            maximum: 999
            description: > 
              store number (Tapahtuman Myymälänumero)
          TarkastusNro:
            type: string
            description: > 
              unique event ID, LTJ sends store number + Order number
              Yksilöivä tapahtumatunniste, LTJ lähettää myymälänumero + tilausnumero        
          Myymalachr:
            type: string
            description: > 
              Store name, Myymälän numero ja nimi samassa kentässä
          Sotu: 
            type: string
            description: You have to specifiy either `Sotu` or `AsiakasNro`.
          AsiakasNro:
            type: string
            description: You have to specifiy either `Sotu` or `AsiakasNro`.
          Tilauspvm:
            type: string
            format: date
            example: '2019-02-28'
          Luovpvm:
            type: string
            format: date
            example: '2019-02-28'
            nullable: true
          Reseptipvm:
            type: string
            format: date
            example: '2019-02-28'
            nullable: true
          Arvluovpvm:
            type: string
            format: date
            example: '2019-02-28'
            nullable: true
          TapLaji: 
            type: string
          TapLajiKdi:
            type: string
            enum: ["1","2","3","4","5","6","21","22","23","24","25","26"]
            description: >
              *1=Spectacle prescription
              *2=CL prescription
              *3=CL control
              *4=Other eye examination
              *5=Combination examination - e.g. fundus camera
              *21=Spactacle order
              *22=CL order
              *23=Satisfaction quarantee order
              *24=Reklamation order
              *25=Work order
              *26=insurance compensation order
          Optikko:
            type: string          
            description: Instru empolyee code for optician
          Laakari:
            type: string          
            description: Instru empolyee code for doctor
          SuorittaNimi:
            type: string
            description: Employee code and role, who made examination or order
          Myyja:
            type: string
            description: Instru empolyee code for salesperson
          Lisatieto:
            type: string  
            description: Additional information for order
          StatusKdi:
            type: string
            enum: ["1","4"]
            description: >
              * '1' - open prescription or order
              * '4' - Sold and handed over to customer 
          StatusTeksti:
            type: string
          KassaNro:  
            type: string
            description: POS document number            
          Yhthinta:
            type: number
            multipleOf: 0.01
            description: Total order price with discounts
          Bruttohinta:
            type: number
            multipleOf: 0.01
            description: Total order price without discounts            
          Yhtale:  
            type: number
            multipleOf: 0.01
            description: Discounts together                         
          Kestotilaus:
            type: boolean
            nullable: true
          Kestotilalkupvm:
            type: string
            format: date
            example: '2019-02-28'
            nullable: true
          Kestotilloppupvm:
            type: string
            example: '2019-02-28'
            format: date
            nullable: true
          Toimitussykli:
            type: integer
            nullable: true
          uKutusPvm:
            type: string
            format: date
            nullable: true
          SortNum:
            type: integer
        required:
          - TarkastusNro
          - Myymala
          - Tilaus
          - Tilauspvm
          - TapLajiKdi
          - AsiakasNro
      xml:
        name: ttTapaht
        
    dsTapaht:
      type: object
      properties:
        dsTapaht:
          type: object
          properties:      
            ttAsiakas:
              $ref: '#/components/schemas/ttTapaht'
            ttAddress:
              $ref: '#/components/schemas/ttTapRivi'
      xml:
        name: dsTapaht
    lensorderPrescription:
      title: lensOrderPrescription
      type: object
      properties:
        posOrderId:
          type: string
        LensIdentifiers:
          title: LensIdentifiers
          required:
          - id         
          type: object
          properties:          
            id:
              type: string                
            geometryType:
              enum:
              - SINGLE VISION
              - BIFOCAL
              - TRIFOCAL
              - PROGRESSIVE            
              - OFFICE
              type: string                
            photochromic:
              type: boolean
            polarising:
              type: boolean
            blueLightFilter:
              type: boolean          
            refractiveIndex:
              type: number
              format: double
            supplierCode:
              type: string
            tinted:
              type: boolean
        Prescription:
          title: Prescription
          type: object
          properties:
            leftEye:
              description: Instru lensID  
              $ref: '#/components/schemas/EyePrescriptionDto'
            rightEye:
              $ref: '#/components/schemas/EyePrescriptionDto'  
    EyePrescriptionDto:          
      title: EyePrescriptionDto
      required:
        - pupilDistance
        - pupilHeight
        - sphere
      type: object
      properties:
        addition:
          type: number
          description: Addition is measured in diopter (multifocals)
          format: double
        backVertexDistance:
          type: integer
          description: Distance from pupil to lens (Individual lens parameter)
          format: int32
        balanceLens:
          type: boolean
          description: Indicate if the lens is used for a non-sighted eye 
        cylinder:
          $ref: '#/components/schemas/CylinderDto'
        frameAngle:
          maximum: 25
          exclusiveMaximum: false
          minimum: -10
          exclusiveMinimum: false
          type: integer
          description: Pantascopic angle (angle of frame front vs. temple - Individual lens parameter)
          format: int32
        prism:
          $ref: '#/components/schemas/PrismDto'
        pupilDistance:
          $ref: '#/components/schemas/PupilDistanceDto'
        pupilHeight:
          $ref: '#/components/schemas/PupilHeightDto'
        sphere:
          type: number
          description: Optical strength measured in diopter
          format: double
        visus:
          type: integer
          description: Visual aquity 
          format: int32
        wrapAngle:
          maximum: 20
          exclusiveMaximum: false
          minimum: -5
          exclusiveMinimum: false
          type: integer
          description: Horizontal angle of lens in front of eye (Individual lens parameter))
          format: int32
    CylinderDto:
      title: CylinderDto
      required:
        - axis
        - diopter
      type: object
      properties:
        axis:
          maximum: 180
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: integer
          format: int32
        diopter:
          type: number
          format: double
      description: Lens cylinder strength measured in diopter          
    PrismDto:
      title: PrismDto
      required:
        - base
        - diopter
      type: object
      properties:
        base:
          oneOf:
          - $ref: '#/components/schemas/PrismBasePolarDto'
          - $ref: '#/components/schemas/PrismBaseRectangularDto'
        diopter:
          type: number
          format: double      
    PrismBaseDto:
      title: PrismBaseDto
      type: object
      discriminator:
        propertyName: type
    PrismBasePolarDto:
      title: PrismBasePolarDto
      allOf:
        - $ref: '#/components/schemas/PrismBaseDto'
        - title: PrismBasePolar
          type: object
          properties:
            axis:
              type: number
              format: double
    PrismBaseRectangularDto:
      title: PrismBaseRectangular
      allOf:
        - $ref: '#/components/schemas/PrismBaseDto'
        - title: PrismBaseRectangular
          type: object
          properties:
            base:
              enum:
                - UP
                - DOWN
                - IN
                - OUT
              type: string          
    PupilDistanceDto:
      title: PupilDistanceDto
      type: object
      properties:
        far:
          type: number
          description: Measured in mm
          format: double
        near:
          type: number
          description: Measured in mm
          format: double
        type:
          enum:
            - Binocular
            - Monocular
          type: string
          description: Identification if the measurement is to be considered middle of face to pupil (monocular) or distance between left and right pupil (binocular)
    PupilHeightDto:
      title: PupilHeight
      required:
        - value
      type: object
      properties:
        method:
          enum:
            - Box
            - Rim
          type: string
          description: 'in Finland value is RIM, Measured from either lowest part of frame box, or from immediate rim below pupil'
        value:
          type: number
          description: Measured in mm
          format: double
      description: Pupil height measurement                      
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
          
    ContactLensSearch:
      title: ContactLhensSearch
      type: object
      description: >
        Current search criterias are surfaceIndicatorType replacementFrequency, materialName, materialType, extendedWear
      properties:
        coating:
          type: string
        surfaceIndicatorType:
          type: string          
          enum:
            - Spheric
            - Aspheric
            - Toric
            - BifocalSpheric
            - BifocalToric
            - MultifocalSpheric
            - MultifocalToric
            - Digital
          description: >
            Digital = Lähi-/digityöskentelyyn
        textureType:
          type: string          
          enum:
            - Soft
            - Rigid Gas Permeable
            - Hard
            - Hybrid
            - Soft Extended Wear
          description: >
        wearingType:
          type: string
          enum:
          - DayOnly
          - NightAndDay            
        extendedWear:
          type: string
        externalBusinessIdentifier:
          $ref: '#/components/schemas/ExternalBusinessIdentifierDto'
        gtin:
          type: string
        materialName:
          type: string
        materialType:
          type: string
          enum:
          - Silicon Hydrogel
          - Hydrogel
        name:
          type: string
        originCountry:
          type: string
        oxygenPermeability:
          type: integer
          format: int32
        packQuantity:
          type: integer
          format: int32
        prescription:
          $ref: '#/components/schemas/ContactLensEyePrescriptionDto'
        replacementFrequency:
          enum:
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - HALFYEARLY
            - YEARLY
          type: string
          description: > 
              * Weekly is around week e.g. 6 days <br />
              * Monthly is around monthly, e.g. 1 Month , 29 days, 2 months  <br />
              * Yearly is > 6 months <br />
        siHyGeneration:
          enum:
            - I
            - II
            - III
            - IV
          type: string
          description: > 
           SILICONE HYDROGEL generation, based on NAV combination of NAV cLensItem MatName and MatDesc, if materialType is Silicon Hydrogel <br />
           * Samfilcon A, Comfilcon A, Enfilcon A is III generation <br />
           * Galyfilcon A and Senofilcon A  is II generation <br />
           * Balafilcon A and Lotrafilcon A is I generation <br />
        supplierCode:
          type: string
        waterContent:
          type: number
          format: double
    ContactLensEyePrescriptionDto:
      title: ContactLensEyePrescriptionDto
      required:
        - sphere
      type: object
      properties:
        addition:
          type: number
          description: Addition is measured in diopter
          format: double
        baseCurve:
          type: number
          description: Base curve
          format: double
        cylinder:
          $ref: '#/components/schemas/CylinderDto'
        diameter:
          type: number
          description: Diameter
          format: double
        sphere:
          type: number
          description: Optical strength measured in diopter
          format: double    
    ResultOfContactLens:
      title: ResultOfContactLens
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactLensDto'       
        numberOfItems:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        totalOfItems:
          type: integer
          format: int64
    ContactLensDto:
      title: ContactLensDto
      required:
        - gtin
      type: object
      properties:
        centerThickness:
          type: number
          format: double
        coating:
          type: string
        colorSpec:
          $ref: '#/components/schemas/ColorSpecDto'
        combinations:
          type: array
          items:
            $ref: '#/components/schemas/ContactLensCombinationDto'
        endDate:
          type: string
          format: date-time
        externalBusinessIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/ExternalBusinessIdentifierDto'
        gtin:
          type: string
        id:
          type: integer
          format: int64
        imageUrl:
          type: string
        textureType:
          type: string          
          enum:
            - Soft
            - Rigid Gas Permeable
            - Hard
            - Hybrid
            - Soft Extended Wear
          description: >
        wearingType:
          type: string
          enum:
          - DayOnly
          - NightAndDay            
        extendedWear:
          type: string          
        materialName:
          type: string
        materialType:
          type: string
          description: see ContactLensSearch
        surfaceIndicatorType:
          type: string          
          enum:
            - Spheric
            - Aspheric
            - Toric
            - BifocalSpheric
            - BifocalToric
            - MultifocalSpheric
            - MultifocalToric
            - Digital
          description: >
            Digital = Lähi-/digityöskentelyyn
        modules:
          type: number
          format: double
        name:
          type: string
        originCountry:
          type: string
        oxygenPermeability:
          $ref: '#/components/schemas/OxygenPermeabilitySpecDto'
        packQuantity:
          type: integer
          format: int32
        packageSpec:
          $ref: '#/components/schemas/PackageSpecDto'
        productRanges:
          type: array
          items:
            $ref: '#/components/schemas/ProductRangeDto'
        replacementFrequency:
          enum:
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - HALFYEARLY
            - YEARLY
          type: string
          description: see ContactLensSearch
        siHyGeneration:
          enum:
            - I
            - II
            - III
            - IV
          type: string
          description: see ContactLensSearch
        startDate:
          type: string
          format: date-time
        stockSpec:
          $ref: '#/components/schemas/StockSpecDto'
        supplierCode:
          type: string
        uvSpec:
          $ref: '#/components/schemas/UvSpecDto'
        waterContent:
          type: number
          format: double          
    ColorSpecDto:
      title: ColorSpecDto
      type: object
      properties:
        color:
          type: string
        color2:
          type: string
        tint:
          type: string          
    ExternalBusinessIdentifierDto:
      title: ExternalBusinessIdentifierDto
      type: object
      properties:
        name:
          type: string
        value:
          type: string   
    ContactLensCombinationDto:
      title: ContactLensCombinationDto
      required:
        - supplierSku
      type: object
      properties:
        baseCurve:
          type: number
          format: double
        color:
          type: string
        color2:
          type: string
        contactLensCombinationOpticalPower:
          $ref: '#/components/schemas/ContactLensCombinationOpticalPowerDto'
        diameter:
          type: number
          format: double
        externalBusinessIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/ExternalBusinessIdentifierDto'
        id:
          type: integer
          format: int64
        name:
          type: string
        supplierDescription:
          type: string
        supplierSku:
          type: string
    ContactLensCombinationOpticalPowerDto:
      title: ContactLensCombinationOpticalPowerDto
      type: object
      properties:
        addition:
          enum:
            - LOW
            - MEDIUM
            - HIGH
          type: string
        axis:
          type: number
          format: double
        cylinder:
          type: number
          format: double
        sphere:
          type: number
          format: double          
    OxygenPermeabilitySpecDto:
      title: OxygenPermeabilitySpecDto
      type: object
      properties:
        dktNegative:
          type: integer
          format: int32
        dktPositive:
          type: integer
          format: int32          
    PackageSpecDto: 
      title: PackageSpecDto
      type: object
      properties:
        boxWeight:
          type: number
          format: double
        height:
          type: number
          format: double
        length:
          type: number
          format: double
        width:
          type: number
          format: double          
    ProductRangeDto:
      title: ProductRangeDto
      required:
        - baseCurve
        - diameter
      type: object
      properties:
        baseCurve:
          type: number
          format: double
        diameter:
          type: number
          format: double
        id:
          type: integer
          format: int64
        opticalPowers:
          type: array
          items:
            $ref: '#/components/schemas/ContactLensOpticalPowerDto'          
    ContactLensOpticalPowerDto:
      title: ContactLensOpticalPowerDto
      required:
        - ean
        - sphere
      type: object
      properties:
        addition:
          enum:
            - LOW
            - MEDIUM
            - HIGH
          type: string
        axisRanges:
          type: array
          items:
            type: integer
            format: int64
        cylinder:
          $ref: '#/components/schemas/RangeDtoOfdouble'
        detailUrl:
          type: string
        ean:
          type: string
        endDate:
          type: string
          format: date-time
        externalBusinessIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/ExternalBusinessIdentifierDto'
        id:
          type: integer
          format: int64
        imageUrl:
          type: string
        name:
          type: string
        sphere:
          $ref: '#/components/schemas/RangeDtoOfdouble'
        startDate:
          type: string
          format: date-time
        supplierCode:
          type: string            
    StockSpecDto:
      title: StockSpecDto
      type: object
      properties:
        deliveryTime:
          $ref: '#/components/schemas/RangeDtoOfint'
        location:
          type: string
        stockAvailability:
          enum:
            - IN_STOCK
            - MADE_TO_ORDER
          type: string          
    UvSpecDto:
      title: UvSpecDto
      type: object
      properties:
        uvCutoff:
          type: number
          format: double
        uvLayer:
          type: boolean
        uvaTransmission:
          type: number
          format: double
        uvbTransmission:
          type: number
          format: double          
    RangeDtoOfdouble:
      title: RangeDtoOfdouble
      required:
        - step      
      type: object
      properties:
        lowerBound:
          type: number
          format: double
        upperBound:
          type: number
          format: double   
        step:
          type: number
          format: double     
    RangeDtoOfint:
      type: object
      properties:
        lowerBound:
          type: integer
          format: int32
        upperBound:
          type: integer
          format: int32          
      title: RangeDtoOfint          
    Get401ApplicationJsonResponse:
      type: string
    Get403ApplicationJsonResponse: 
      type: string
    Post401ApplicationJsonResponse:
      type: string          
    403ApplicationJsonResponse:
      type: string                
      
tags:          
  - name: contact-Lens
    description: the contact-Lens API
  - name: Customer
    description: Promeda Customer API
  - name:  Prescriptions
    description: Promeda Prescription API