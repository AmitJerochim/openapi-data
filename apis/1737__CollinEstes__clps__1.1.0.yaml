openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/CollinEstes/clps/1.1.0'
info:
  description: This is the CLPS CDMS API documentation
  version: 1.1.0
  title: CLPS CDMS API
  contact:
    email: collin.j.estes@nasa.gov
paths:
  /common/Group:
    put:
      summary: updates a group
      tags:
        - admin
      responses:
        '200':
          description: the updated group model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupModel'
    post:
      summary: creates a group
      tags:
        - admin
      responses:
        '200':
          description: the created group model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupModel'
  /common/Tag:
    put:
      summary: updates a tag
      tags:
        - admin
      responses:
        '200':
          description: the updated tag model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
    post:
      summary: creates a new tag
      tags:
        - admin
      responses:
        '200':
          description: the created tag model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
    delete:
      summary: deletes a tag
      tags:
        - admin
      responses:
        '200':
         description: success of delete status
  /common/User:
    get:
      summary: returns the current launchpad user
      tags:
        - admin
      description: No options requried you just get the current user from the server.
      responses:
        '200':
          description: the current user model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
  /common/Stats:
    get:
      summary: returns some document stat counts
      description: No options required.
      tags:
        - admin
      responses:
        '200':
          description: the stats object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsModel'
  /common/Lookups:
    get:
      summary: returns values for primary drop down list controls
      description: No options required.
      tags:
        - admin
      responses:
        '200':
          description: this lookups object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupsModel'
  /common/Admin:
    get:
      summary: return site lifetime metrics
      tags:
        - admin
      responses:
        '200':
          description: the metric model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteMetricModel'
  /common/ErrorLog:
    get:
      summary: return site error log
      tags:
        - admin
      responses:
        '200':
          description: the error log model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLogModel'
    post:
      summary: post an error
      tags:
        - admin
      responses:
        '200':
          description: the error log model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLogModel'
  /common/ApplicationLog:
    post:
      summary: Log user application touch
      tags:
        - admin
      requestBody:
        description: the application log model
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationLogModel'
      responses:
        '200':
          description: the application log model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLogModel'
  '/common/AdminUser/{auid}':
    post:
      summary: the create new user endpoint
      tags:
        - admin
      parameters:
        - in: path
          name: auid
          schema:
            type: string
          required: true
          description: 'the new users auid, must be unique'
      requestBody:
        description: the new user request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: the returned user model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
    get:
      summary: Gets a single user
      tags:
        - admin
      parameters:
        - in: path
          name: auid
          schema:
            type: string
          required: true
          description: the users auid
      responses:
        '200':
          description: the returned user model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
  '/apps/docs/Docs/{userId}':
    get:
      summary: returns the document header info as avialable to a given userId
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: the user ID of the requesting user (current user)
      tags:
        - docs
      responses:
        '200':
          description: array of document table info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentModel'
    post:
      summary: The update endpoint for updatingan existing documents metadata
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: the user ID of the requesting user (current user)
      tags:
        - docs
      requestBody:
        description: the single document information model to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentModel'
      responses:
        '200':
          description: the updated document model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModel'
  '/apps/docs/Docs/getDocumentModel/{documentId}':
    get:
      summary: returns the DocumentModel for the document requested
      parameters:
        - in: path
          name: documentId
          schema:
            type: string
          required: true
          description: A single document Id
      tags:
        - docs
      responses:
        '200':
          description: a single DocumentModel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModel'
  '/apps/docs/Docs/getFileDownloadedMetrics/{documentId}':
    get:
      summary: >-
        returns string of HTML that represents the total times the loggedInUser
        has downloaded this document and the total times the document has been
        downloaded overall
      parameters:
        - in: path
          name: documentId
          schema:
            type: string
          required: true
          description: A single document Id
        - in: query
          name: userId
          schema:
            type: string
          required: true
          description: The Users userId
      tags:
        - docs
      responses:
        '200':
          description: string of HTML
          content:
            application/json:
              schema:
                type: string
                example: 'You have downloaded this 1 time. <br/> Total downloads: 2'
  '/apps/docs/Docs/getDocFileRevisions/{documentId}':
    get:
      summary: returns an array of file revisions
      parameters:
        - in: path
          name: documentId
          schema:
            type: string
          required: true
          description: A single document Id
      tags:
        - docs
      responses:
        '200':
          description: array of file revisions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileRevisionInformationModel'
  '/apps/docs/Docs/getDocChangeLog/{documentId}':
    get:
      summary: returns the change log data for a given document
      parameters:
        - in: path
          name: documentId
          schema:
            type: string
          required: true
          description: A single document Id
      tags:
        - docs
      responses:
        '200':
          description: array of file revisions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentChangeLogModel'
  /apps/dashboard/UserLogDetails/:
    get:
      summary: returns the user log details
      tags:
        - admin
      responses:
        '200':
          description: the login aggregate metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogMetricModel'
  /genericHandlers/CheckFileExistance.ashx:
    get:
      summary: simple check of file existance prior to downloading
      parameters:
        - in: query
          name: revisionId
          schema:
            type: string
            description: the revision id to check
        - in: query
          name: userId
          schema:
            type: string
          description: the current user id
      tags:
        - generic-handlers
      responses:
        '200':
          description: file exists
        '500':
          description: file does not exist
  /genericHandlers/DownloadFile.ashx:
    get:
      summary: The actual file download
      parameters:
        - in: query
          name: revisionId
          schema:
            type: string
            description: the revision id to check
        - in: query
          name: userId
          schema:
            type: string
          description: the current user id
      tags:
        - generic-handlers
      responses:
        '200':
          description: 'the file download, content type depends on the document conent type'
  /genericHandlers/UploadDocsFile.ashx:
    post:
      summary: The actual file upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                iClass:
                  type: string
                  description: should be defaulted to empty string
                accesses:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string
                expirationDate:
                  type: string
                  format: Date
                  example: '2019-06-18'
                userId:
                  type: string
                  description: the creating user auid
                  example: cjestes
                isNew:
                  type: boolean
                  description: seems to be defaulted to true
                  example: true
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: the database model for the new document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModel'
components:
  schemas:
    UserModel:
      type: object
      required:
        - UserId
        - FirstName
        - LastName
        - LevelId
        - Email
        - Company
        - Phone
        - Inactive
        - Groups
      properties:
        UserId:
          type: string
          example: cjestes
        FirstName:
          type: string
          example: Collin
        LastName:
          type: string
          example: Estes
        Email:
          type: string
          example: collin.j.estes@nasa.gov
        Company:
          type: string
          example: MRI Technologies
        Phone:
          type: string
          example: 281-555-1234
        Inactive:
          type: boolean
        LevelId:
          type: number
          example: 100
        Groups:
          type: array
          items:
            type: integer
            description: fk id to the group model
            example: 12
    GroupModel:
      required:
        - GroupId
        - GroupName
      properties:
        GroupId:
          type: integer
          description: the database primary key
          example: 12
        GroupName:
          type: string
          example: Everyone
        GroupMembers:
          type: array
          items:
            type: string
            description: Abbr user names eg "C.Estes"
        GroupMembersFullName:
          type: array
          items:
            type: string
            description: Full first/last name eg "Collin Estes"
        GroupMembersIds:
          type: array
          items:
            type: string
            description: user.id eg "cjestes"
      type: object
    StatsModel:
      properties:
        docCount:
          type: integer
          description: the total documents in the system
        tagCount:
          type: integer
          description: the total tags created in the system
        downloadCount:
          type: integer
          description: the total documents downloaded
      type: object
    AccessModel:
      description: White-list access to a document
      properties:
        id:
          type: string
          description: Group or User id
        isGroup:
          type: boolean
          description: flag denoting whether or not this is a group
        name:
          type: string
          description: Either Group name or User name in a displayable format
      example:
        id: '12'
        isGroup: true
        name: Everyone
    PersonModel:
      description: What is returned within the lookups call
      properties:
        company:
          type: string
          description: company this person works for
          example: SAIC
        email:
          type: string
          description: email of person
          example: person1@abcComp
        id:
          type: string
          description: this is the UserId of the person (auid)
          example: mfielden
        isActive:
          type: boolean
          description: activeness of the person?
          example: true
        name:
          type: string
          description: the persons first/last name in displayable format
          example: Person McPersonFace
        phone:
          type: string
          description: phone number of person
          example: 867-5309
    DocumentModel:
      properties:
        accesses:
          type: array
          items:
            $ref: '#/components/schemas/AccessModel'
        id:
          type: integer
          description: the document database ID
          example: 159
        description:
          type: string
          example: description here
        expirationDate:
          type: string
          example: 2019/06/07
          format: Date
          description: >-
            The date the file will expire and be utilimately cleared from the
            database
        name:
          type: string
          example: Test Document
        tags:
          type: array
          items:
            type: string
            example: Software Development
        isExpired:
          type: boolean
          description: Indicates if the document is expired
          example: false
        lastAccessOnDate:
          type: string
          format: Date
          example: null
        lastAccessedOnTicks:
          type: integer
          description: The ticks from UTC from the last access
          example: null
        headRevisionContentLength:
          type: integer
          example: 287126
        headRevisionId:
          type: integer
          example: 14333
        headRevisionContentType:
          type: string
          example: application/pdf
    FileRevisionInformationModel:
      properties:
        contentLength:
          type: number
          example: 287126
        contentType:
          type: string
          example: application/pdf
        fileExtension:
          type: string
          example: pdf
        fileRevisionInformationId:
          type: integer
          description: The Revision document Id
          example: 124
        isHeadRevision:
          type: boolean
          example: false
        uploadDate:
          type: string
          format: DateTime
          example: 'June 11, 2019 03:14 PM'
    DocumentChangeLogModel:
      properties:
        changeAction:
          type: string
          description: a brief statement describing the change
          example: 'Added new tag: PDA for (LCVG)'
        changeDate:
          type: string
          format: DateTime
          example: 'June 11, 2019 03:12 PM'
        changeUserDisplay:
          type: string
          description: A user display version of the change user
          example: Collin Estes
    TagModel:
      properties:
        value:
          type: string
          description: the tag id
          example: '1'
        name:
          type: string
          description: the tag
          example: Software Development
    LookupsModel:
      properties:
        people:
          type: array
          items:
            $ref: '#/components/schemas/PersonModel'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupModel'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagModel'
    ApplicationLogModel:
      properties:
        ApplicationName:
          type: string
          description: must match the application name in the dashboard application table
          example: clps
        BrowserType:
          type: string
        BrowserVersion:
          type: number
          example: 67.2
        UserId:
          type: string
          description: the current user auid
          example: cjestes
    UserLogMetricModel:
      properties:
        loginTotal:
          type: integer
        loginToday:
          type: integer
        loginWeek:
          type: integer
        loginMonth:
          type: integer
        countIe:
          type: integer
        countFF:
          type: integer
        countChrome:
          type: integer
        countSafari:
          type: integer
        countIeDay:
          type: integer
        countFFDay:
          type: integer
        countChromeDay:
          type: integer
        countSafariDay:
          type: integer
        countIeWeek:
          type: integer
        countFFWeek:
          type: integer
        countChromeWeek:
          type: integer
        countSafariWeek:
          type: integer
        countIeMonth:
          type: integer
        countFFMonth:
          type: integer
        countChromeMonth:
          type: integer
        countSafariMonth:
          type: integer
        countOther:
          type: integer
    SiteMetricModel:
      properties:
        chartModel:
          type: object
          properties:
            Logins:
              type: array
              items:
                type: integer
                description: The total logins by in a time a series array (by day)
            Docs:
              type: array
              items:
                type: integer
                description: The total docs created in a time a series array (by day)
            Errors:
              type: array
              items:
                type: integer
                description: The total errors created in a time a series array (by day)
    ErrorLogModel:
      properties:
        dateAndTime:
          type: string
          format: DateTime
          example: '2019-06-04T13:59:34.637'
        Id:
          type: string
          description: A user auid
          example: cjestes
        Title:
          type: string
          example: something bad happened
        Date:
          type: string
          format: Date
          example: 6/4/2019
        Time:
          type: string
          example: '1:59 PM'
