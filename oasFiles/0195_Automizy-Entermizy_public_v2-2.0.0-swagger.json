{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Entermizy",
    "version" : "2.0.0",
    "description" : "\n\n<h2>Introduction</h2>\n<h3>What is Entermizy REST API?</h3> <div>Entermizy REST API is a RESTful application programming interface made for Entermizy, so it meets the constraints and requirements of REST.</div>\n<h3>Communicate through the API</h3> <div>Anything you can do by using the software's user interface can be done also by calling the right methods of the API, since the also the UI uses this API for communication.</div>\n<h3>Easy to integrate</h3> <div>By using Entermizy REST API there are no limits of integrating Entermizy into other systems.</div>\n<h3>How can I get the Authentication Token?</h3>\n<style> #authentication-token-introductions { transition: opacity 0.5s ease; opacity: 0; display: none; } input[type='checkbox']:checked + #authentication-token-introductions { opacity: 1; display: block; } </style>\n<div class='ex3'> <label for='checkbox-toggle-1' style='cursor:pointer'>Click here to show the introductions</label> <input type='checkbox' id='checkbox-toggle-1' style='position:absolute; top:-999em' />\n<div id='authentication-token-introductions'> <h3>Getting access token</h3> In Automizy you can create multiple access tokens use can use to interact with our system.<br> Each token grants access to the company account it was created in.<br> <h4>Example of creating a new access token:</h4> <ul> <li> You log in to Automizy using 'your.email@email.com'. </li> <li> If you have access to multiple company accounts, you select the account you want to create the token for, for example 'Your Company Inc.' </li> <li> You click on Settings menu in the bottom-left corner. </li> <li> You click on 'API Token' menu. </li> <li> You can see the tokens you already generated.<br> Click on 'New Token' to generate a new one. </li> <li> A dialog with the new token shows up.<br> <b>Copy and save the generated token, because you won't be able to check it again after closing the dialog.</b> </li> </ul> <p>From you on, you can use this token to send requests to Automizy to manage account 'Your Company Inc.' on behalf of user 'your.email@email.com' using the <code>Authorization: Bearer &lt;ACCESS TOKEN&gt;</code> header as shown in the examples.</p> <img style='max-width: 100%' src='https://developers.automizy.com/automizyrestapi/images/automizy-new-token.png'> </div>\n</div>\n\n"
  },
  "servers" : [ {
    "url" : "https://api.entermizy.com",
    "description" : ""
  } ],
  "paths" : {
    "/v2/contacts/{idOrEmail}" : {
      "parameters" : [ {
        "name" : "idOrEmail",
        "in" : "path",
        "description" : "An unique identifier of the requested contact. Could be two things: id or email ",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Contact" ],
        "summary" : "Getting a given contact.",
        "description" : "Getting a given contact.",
        "responses" : {
          "200" : {
            "description" : "A JSON array of user names",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "id" : 84,
                  "email" : "testuser@automizy.com",
                  "status" : "ACTIVE",
                  "requestDate" : "1997-07-16T19:20:30+01:00",
                  "requestIp" : null,
                  "unsubscribeDate" : null,
                  "leadScore" : 0,
                  "smartLists" : [ {
                    "id" : 12,
                    "name" : "my list"
                  }, {
                    "id" : 18,
                    "name" : "my other list"
                  } ],
                  "tags" : [ "test 1", "test 2" ],
                  "customFields" : {
                    "2" : "Max",
                    "5" : null,
                    "6" : "1989-07-26T00:00:00+01:00"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact" ],
        "summary" : "Removing a given contact.",
        "description" : "Removing a given contact.",
        "responses" : {
          "204" : {
            "description" : "Deleted successfully. "
          }
        }
      },
      "patch" : {
        "tags" : [ "Contact" ],
        "summary" : "Updating a given contact.",
        "description" : "Updating a given contact.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "smartLists" : {
                    "type" : "array",
                    "items" : {
                      "type" : "integer"
                    },
                    "description" : "The ids of the lists you want to set to the contact."
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "The status of the contact. You can only send email to contacts with ACTIVE status. Allowed values: `ACTIVE`, `INACTIVE`, `BOUNCED`, `UNSUBSCRIBED`, `BANNED`"
                  },
                  "customFields" : {
                    "description" : "Object containing custom fields.",
                    "type" : "object",
                    "items" : {
                      "$ref" : "#/components/schemas/CustomFields"
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to set to the contact. Note: Instead you might prefer to use the 'addTags' or 'removeTags' parameters."
                  },
                  "addTags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to add to the contact."
                  },
                  "removeTags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to remove from the contact."
                  }
                }
              },
              "example" : {
                "email" : "testuser@automizy.com",
                "status" : "ACTIVE",
                "customFields" : {
                  "2" : "Max",
                  "5" : null,
                  "6" : "1989-07-26T00:00:00+01:00"
                },
                "addTags" : [ "lookingForBoats", "lookingForLuxoryItems" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The id of the new contact."
                    },
                    "email" : {
                      "type" : "string",
                      "description" : "The email address of the new contact."
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the new contact."
                    },
                    "requestDate" : {
                      "type" : "string",
                      "description" : "The date when the contact got the subscription request. Format `YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)`"
                    },
                    "requestIp" : {
                      "type" : "string",
                      "description" : "The IP address of the client."
                    },
                    "unsubscribeDate" : {
                      "type" : "object",
                      "description" : "The date when the contact got the subscription request. Format `YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)`"
                    },
                    "leadScore" : {
                      "type" : "integer",
                      "description" : "The lead score of the new contact."
                    },
                    "customFields" : {
                      "$ref" : "#/components/schemas/Contact%20Response"
                    },
                    "tags" : {
                      "type" : "string",
                      "description" : "The tags of the new contact."
                    }
                  }
                },
                "example" : {
                  "id" : 84,
                  "email" : "testuser@automizy.com",
                  "status" : "ACTIVE",
                  "requestDate" : "1997-07-16T19:20:30+01:00",
                  "requestIp\"" : null,
                  "unsubscribeDate" : null,
                  "leadScore" : 0,
                  "smartLists" : [ 2, 5 ],
                  "tags" : [ "test 1", "test 2" ],
                  "customFields" : {
                    "2" : "Max",
                    "5" : null,
                    "6" : "1989-07-26T00:00:00+01:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{campaignId}" : {
      "parameters" : [ {
        "name" : "campaignId",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get a campaigns",
        "description" : "For a logined user",
        "responses" : {
          "200" : {
            "description" : "You got the requested campaign.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "The provided id not found, or you mistype the url."
          }
        }
      },
      "delete" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Remove a campaign",
        "responses" : {
          "204" : {
            "description" : "Deleted successfully. "
          }
        }
      },
      "patch" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Update a campaign",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Campaign-Request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{campaignId}/htmlCode" : {
      "parameters" : [ {
        "name" : "campaignId",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "withEditorCode",
        "in" : "query",
        "description" : "Do you need the editor code? If yes, please append this parameter (with value '1'). If no, please do not add this parameter or add with value 0.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get a campaign's code",
        "description" : "For a logined user",
        "responses" : {
          "200" : {
            "description" : "You got the requested campaign.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HtmlCode-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "The provided id not found, or you mistype the url."
          }
        }
      }
    },
    "/v2/campaigns" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get list of campaigns",
        "description" : "Campaigns = Email",
        "parameters" : [ {
          "name" : "searchFor[text]",
          "in" : "query",
          "description" : "Searchs in campaign names or subject line.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchFor[status]",
          "in" : "query",
          "description" : "If you do NOT intent to filter, you should NOT SEND searchFor[status] key",
          "schema" : {
            "enum" : [ "SCHEDULED", "RUNNING", "SENT", "PAUSED", "CANCELED", "ERROR", "UNPAUSED", "SCHEDULED_PAUSED", "CONTACT_LIMIT_REACHED", "EMAIL_LIMIT_REACHED" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of campaigns successfully provided.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "campaigns" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Campaign-Response"
                      }
                    },
                    "page" : {
                      "type" : "integer"
                    },
                    "pageCount" : {
                      "type" : "integer"
                    },
                    "pageSize" : {
                      "type" : "integer"
                    },
                    "totalItems" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/bulk" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Create a campaign",
        "description" : "Campaigns = Email",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Campaign-Request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Campaign-Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{campaigId}/select-split-test-winner" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Manually choose split test winner",
        "description" : "Only use this API: if the given campaign is a `manually choose the winner` campaign.",
        "parameters" : [ {
          "name" : "campaigId",
          "in" : "path",
          "description" : "Original campaign id (so not the split test campaign's id).",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "winner" : {
                    "type" : "integer",
                    "description" : "Id of the choosen 'split test campaign' "
                  }
                }
              },
              "example" : {
                "winner" : 1
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Winner campaign was successfully selected.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                },
                "examples" : {
                  "Example" : {
                    "value" : {
                      "winner" : 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/smart-lists/{id}/contacts" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "post" : {
        "tags" : [ "List", "Contact" ],
        "summary" : "Creating a new contact on a list",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "description" : "The email address of the contact."
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "The status of the contact. You can only send email to contacts with ACTIVE status. Allowed values `ACTIVE`, `INACTIVE`, `BOUNCED`, `UNSUBSCRIBED`, `BANNED`"
                  },
                  "customFields" : {
                    "type" : "object",
                    "items" : {
                      "$ref" : "#/components/schemas/CustomFields"
                    },
                    "description" : "Object containing custom fields."
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to set to the contact. Note: Instead you might prefer to use the 'addTags' or 'removeTags' parameters."
                  },
                  "addTags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to add to the contact."
                  },
                  "removeTags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "List the tags you want to remove from the contact."
                  }
                }
              },
              "example" : {
                "email" : "testuser@automizy.com",
                "status" : "ACTIVE",
                "customFields" : {
                  "2" : "Max",
                  "5" : null,
                  "6" : "1989-07-26T00:00:00+01:00"
                },
                "addTgs" : [ "lookingForBoats", "lookingForLuxoryItems" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The id of the new contact."
                    },
                    "email" : {
                      "type" : "string",
                      "description" : "The email address of the new contact."
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the new contact."
                    },
                    "requestDate" : {
                      "type" : "string",
                      "description" : "The date when the contact got the subscription request. Format `YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)`"
                    },
                    "requestIp" : {
                      "type" : "string",
                      "description" : "The IP address of the client."
                    },
                    "unsubscribeDate" : {
                      "type" : "object",
                      "description" : "The date when the contact got the subscription request. Format `YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)`"
                    },
                    "leadScore" : {
                      "type" : "integer",
                      "description" : "The lead score of the new contact."
                    },
                    "customFields" : {
                      "$ref" : "#/components/schemas/CustomFields"
                    },
                    "tags" : {
                      "type" : "string",
                      "description" : "The tags of the new contact."
                    }
                  },
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "List", "Contact" ],
        "summary" : "Getting all contacts from a list.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result. Default value `1`",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc) Default value `id:desc`.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "items" : {
                    "$ref" : "#/components/schemas/Contact%20Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/smart-lists/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "List" ],
        "summary" : "Getting a given list",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartLists%20Response"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "List" ],
        "summary" : "Removing a given list.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "List" ],
        "summary" : "Updating a given list.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the new list."
                  }
                }
              },
              "example" : {
                "name" : "My new list's name"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartLists%20Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/smart-lists" : {
      "post" : {
        "tags" : [ "List" ],
        "summary" : "Creating a new list",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the new list."
                  }
                }
              },
              "example" : {
                "name" : "My new list's name"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartLists%20Response"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "List" ],
        "summary" : "Getting all lists",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result (default value `1`)",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc) Default value `id:desc`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GettingAllLists%20Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/reset-statistics/{campaignId}" : {
      "parameters" : [ {
        "name" : "campaignId",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Reset statistical data",
        "description" : "This API call will reset the selected e-mail's statistics. (The stats will count from at that point of time.)",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "examples" : {
                  "Ok" : {
                    "summary" : "success: true",
                    "value" : {
                      "success" : true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/analyze-import" : {
      "post" : {
        "tags" : [ "Contact" ],
        "summary" : "IMPORT - STEP 1 - Analyze import file",
        "description" : "If you want to import contacts, you'd preferably use a CSV file. The system reads the file and analyzes the headers, gives the import and ID which can be used for a certain time. You have to make a POST request to the given url, using 'multipart/form-data' content type, and upload the CSV file to our server.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "headers" : {
                      "description" : "The email address of the contact.",
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "importId" : {
                      "description" : "The generated id of the new import.",
                      "type" : "string"
                    },
                    "aliveUntil" : {
                      "description" : "Object containing custom fields.",
                      "type" : "object",
                      "items" : {
                        "$ref" : "#/components/schemas/ImportAnalyze"
                      }
                    }
                  }
                },
                "example" : {
                  "headers" : "testuser@automizy.com",
                  "importId" : "ACTIVE",
                  "aliveUntil" : {
                    "date" : "2015-03-31 17:15:34",
                    "timezone" : "Europe/Budapest",
                    "timezone_type" : 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/run-import" : {
      "post" : {
        "tags" : [ "Contact" ],
        "summary" : "IMPORT - STEP 2 - Begin import",
        "description" : "After the analyzation is ready, and you've set the headers, you can start importing your contacts.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "importId" : {
                    "type" : "string",
                    "description" : "The import id given by /contacts/rpc/analyze-import"
                  },
                  "smartLists" : {
                    "description" : "The import id given by /contacts/rpc/analyze-import",
                    "type" : "array",
                    "items" : {
                      "type" : "integer"
                    }
                  },
                  "fields" : {
                    "description" : "The array containing the fields from the import file assigned to fields in the software.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ImportFields"
                    }
                  },
                  "override" : {
                    "type" : "boolean",
                    "description" : "If a contact you want to import is already in the software, the older one will be overwritten if you set this parameter true."
                  },
                  "create" : {
                    "type" : "boolean",
                    "description" : "Always has to be `true`"
                  },
                  "addContactTags" : {
                    "description" : "The array containing the tags to add to the imported contacts.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "removeContactTags" : {
                    "description" : "The array containing the tags to remove from the imported contacts.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "example" : {
                "importId" : "3.929.37d98c2b463597da26ddce5ba50a6429",
                "smartLists" : [ 1681 ],
                "override" : false,
                "create" : true,
                "fields" : [ {
                  "id" : 8,
                  "type" : "customField",
                  "operator" : "override"
                }, {
                  "id" : null,
                  "type" : "ignore",
                  "operator" : "override"
                } ],
                "addContactTags" : [ "tag3" ],
                "removeContactTags" : [ "Best leads" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "importId" : {
                      "type" : "string",
                      "description" : "The generated id of the import."
                    },
                    "analyzeId" : {
                      "type" : "integer",
                      "description" : "The generated id of the analyzation."
                    },
                    "jobId" : {
                      "type" : "integer",
                      "description" : "The generated id of the job."
                    }
                  }
                },
                "example" : {
                  "importId" : 235,
                  "analyzeId" : "3.m35dhfte769fdz",
                  "jobId" : 1445
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{id}/send" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Send a campaign",
        "description" : "You can send a previously created campaign. In order to be able to send the campaign, the followings must have be already set: sender name, sender email, reply email, subject, html code.",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          },
          "422" : {
            "description" : "You can't send this campaign from its current state. Reason could be: Campaign already scheduled or sent, or contact limit reached..."
          }
        }
      }
    },
    "/v2/campaigns/{id}/export/data" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export a campaign data",
        "description" : "You can export a campaign's data into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "Will send the id,name,sendFromName,sendFromEmail,subject,sendTime,recipients,sent,status,opens,clicks,unsubscribes,softBounce,hardBounce,uniqueOpens,uniqueClicks  of the given campaign. Separator could be ',' or ';' or else given your user settings.\n<br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-data-export--1170.csv'>Example file - Campaign data from a campaign</a>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "example" : "id,name,sendFromName,sendFromEmail,subject,sendTime,recipients,sent,status,opens,clicks,unsubscribes,softBounce,hardBounce,uniqueOpens,uniqueClicks 4340,'My campaign','Automizy Auto Test',automizy-test@protopmail.hu,'Unsub test 2','2019-06-04 16:55:12',1,1,FINISHED,1,0,0,0,0,1,0"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/export/data" : {
      "parameters" : [ {
        "in" : "query",
        "name" : "from_date",
        "description" : "You specify which campaigns you are interested in. Filtering is based on the DateTime of sending. format: \"Y-m-d\\TH:i:s.uP\"  example:  2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-02-23T15:52:01.00Z"
      }, {
        "in" : "query",
        "name" : "to_date",
        "description" : "You specify which campaigns you are interested in. Filtering is based on the DateTime of sending.  \"Y-m-d\\TH:i:s.uP\"  example:  2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-12-30T15:52:01.00Z"
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export a campaign data",
        "description" : "You can export a campaigns' data into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "Will send the id,name,sendFromName,sendFromEmail,subject,sendTime,recipients,sent,status,opens,clicks,unsubscribes,softBounce,hardBounce,uniqueOpens,uniqueClicks  of the given campaign. Separator could be ',' or ';' or else given your user settings. <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-data-export--from_2019-05-31T22_00_00.000Zto_2019-06-30T22_00_00.000Z.csv'>Example file - Campaign data in a time interval</a>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "example" : "id,name,sendFromName,sendFromEmail,subject,sendTime,recipients,sent,status,opens,clicks,unsubscribes,softBounce,hardBounce,uniqueOpens,uniqueClicks 4340,'My campaign','Automizy Auto Test',automizy-test@protopmail.hu,'Unsub test 2','2019-06-04 16:55:12',1,1,FINISHED,1,0,0,0,0,1,0"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/export/contacts/{typeOfContacts}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "typeOfContacts",
        "in" : "path",
        "description" : "Type of export that you want",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "sent", "clicked", "opened", "unsubscribed", "bounced" ]
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export a campaign's thematic contact list",
        "description" : "Export contacts who have performed a specific type of operation into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example files</div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-contacts-export--bounced--.csv'>Bounced contacts from a campaign</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-contacts-export--clicked--.csv'>Clicked contacts from a campaign</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-contacts-export--opened--.csv'>Opened contacts from a campaign</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-contacts-export--sent--.csv'>Sent contacts from a campaign</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-contacts-export--unsubscribed--.csv'>Unsubscribed contacts from a campaign</a> <br/>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- sent\n'Contact email','Campaign name','Campaign id','Date of receipt'\n- opened\n'Contact email','Open date','Campaign name','Campaign id','Campaign send date'\n- clicked\n'Contact email','Click date','Campaign name','Campaign id','Link','Campaign send date'\n- unsubscribed\n'Contact email','Unsubscribe date','Campaign name','Campaign id',Campaign send date'\n- bounced\n'Contact email','Bounce date','Bounce type','Bounce code','Campaign name','Campaign id','Campaign send date'\n"
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/export/contacts/{typeOfContacts}" : {
      "parameters" : [ {
        "name" : "typeOfContacts",
        "in" : "path",
        "description" : "Type of export that you want",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "sent", "clicked", "opened", "unsubscribed", "bounced" ]
        }
      }, {
        "in" : "query",
        "name" : "from_date",
        "description" : "You specify which campaigns contacts you are interested in. Filtering is based on the DateTime of sending. Format: \"Y-m-d\\TH:i:s.uP\"  example: 2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-02-23T15:52:01.00Z"
      }, {
        "in" : "query",
        "name" : "to_date",
        "description" : "You specify which campaigns contacts you are interested in. Filtering is based on the DateTime of sending.Format: \"Y-m-d\\TH:i:s.uP\"  example: 2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-12-30T15:52:01.00Z"
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export campaigns' thematic contact list",
        "description" : "Export campaigns' contacts who have performed a specific type of operation into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example files</div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--bounced--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Bounced contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--clicked--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Clicked contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--opened--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Opened contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--sent--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Sent contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--unsubscribed--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Unsubscribed contacts in a time interval</a> <br/>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- sent\n'Contact email','Campaign name','Campaign id','Date of receipt'\n- opened\n'Contact email','Open date','Campaign name','Campaign id','Campaign send date'\n- clicked\n'Contact email','Click date','Campaign name','Campaign id','Link','Campaign send date'\n- unsubscribed\n'Contact email','Unsubscribe date','Campaign name','Campaign id',Campaign send date'\n- bounced\n'Contact email','Bounce date','Bounce type','Bounce code','Campaign name','Campaign id','Campaign send date' "
              }
            }
          }
        }
      }
    },
    "/v2/contacts/event-export/{typeOfContacts}" : {
      "parameters" : [ {
        "name" : "typeOfContacts",
        "in" : "path",
        "description" : "Type of export that you want",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "sent", "clicked", "opened", "unsubscribed", "bounced" ]
        }
      }, {
        "in" : "query",
        "name" : "fromDate",
        "description" : "You specify which event you are interested in. Filtering is based on the DateTime of event. Format: ISO8601  example: 2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-02-23T15:52:01.00Z"
      }, {
        "in" : "query",
        "name" : "toDate",
        "description" : "You specify which event contacts you are interested in. Filtering is based on the DateTime of event.Format: ISO8601  example: 2005-08-15T15:52:01.00Z",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "example" : "2019-12-30T15:52:01.00Z"
      } ],
      "get" : {
        "tags" : [ "Contact" ],
        "summary" : "Export contacts who executed a specific kind of event.",
        "description" : "Export contacts (who have performed a specific type of event) into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example files</div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--bounced--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Bounced contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--clicked--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Clicked contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--opened--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Opened contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--sent--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Sent contacts in a time interval</a> <br/> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-campaigns-in-a-time-interval/campaigns-contacts-export--unsubscribed--from_2019-06-01T15_58_00.000Zto_2019-06-28T15_58_00.000Z.csv'>Unsubscribed contacts in a time interval</a> <br/>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- sent\n'Contact email','Campaign name','Campaign id','Date of receipt'\n- opened\n'Contact email','Open date','Campaign name','Campaign id','Campaign send date'\n- clicked\n'Contact email','Click date','Campaign name','Campaign id','Link','Campaign send date'\n- unsubscribed\n'Contact email','Unsubscribe date','Campaign name','Campaign id',Campaign send date'\n- bounced\n'Contact email','Bounce date','Bounce type','Bounce code','Campaign name','Campaign id','Campaign send date' "
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{id}/export/device" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export campaigns' deveice statistics",
        "description" : "Export campaigns' opens and clicks based on different tpye of devices. The result is going ot export into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example file: </div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-device-export-1234.csv'> Devices</a>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- device\n- clicks\n- uniqueClicks\n- opens\n- uniqueOpens "
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{id}/export/browser" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export campaigns' browser statistics",
        "description" : "Export campaigns' opens and clicks based on different type of browser. The result is going ot export into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example file: </div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-browser-export-1234.csv'> Browsers</a>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- browser\n- clicks\n- uniqueClicks\n- opens\n- uniqueOpens "
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{id}/export/os" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a campaign",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Export campaigns' operating system (OS) statistics",
        "description" : "Export campaigns' opens and clicks based on different type of os. The result is going ot export into a CSV file.",
        "responses" : {
          "200" : {
            "description" : "<div>Example file: </div> <a href='https://img.automizy.com/public/docs/entermizy-api-docs/examples/export-a-specific-campaign/campaigns-os-export-1234.csv'> Operating systems</a>",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Headers that in the csv file are the followings. In case of:\n- os\n- clicks\n- uniqueClicks\n- opens\n- uniqueOpens "
              }
            }
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/opens/table" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Opens statistics - table format.",
        "description" : "Request a campaign's opens statistics in a table (list) format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-table-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/opens/grouped" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Opens statistics - grouped format.",
        "description" : "Request a campaign's opens statistics in a grouped format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-grouped-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/opens/timeline" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Opens statistics - timeline format.",
        "description" : "Request a campaign's opens statistics in a timeline format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-timeline-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/clicks/table" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Click statistics - table format.",
        "description" : "Request a campaign's click statistics in a table (list) format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-table-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/clicks/grouped" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Click statistics - grouped format.",
        "description" : "Request a campaign's click statistics in a grouped format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-grouped-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/clicks/timeline" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Click statistics - timeline format.",
        "description" : "Request a campaign's click statistics in a timeline format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-timeline-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/unsubscribes/table" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Unsubscribe statistics",
        "description" : "Request a campaign's unsubscribe statistics in a table (list) format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-table-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/bounces/table" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Bounce statistics",
        "description" : "Request a campaign's bounce statistics in a table (list) format.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-Statistics-table-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/campaigns/{id}/statistics/geo-locations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of the campaign",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Campaign-Statistics" ],
        "summary" : "Geo-location statistics",
        "description" : "Request a campaign's geo-location statistics.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Campaign-geo-location-Statistics-Response"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Campaign with the provided id, or matching route not found."
          }
        }
      }
    },
    "/v2/custom-fields" : {
      "post" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Creating a new custom field.",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "description" : "The name of the new custom field. You can insert this in to the email, between {{ and }} signs. For example `Hey {{nick name}}!`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "description" : "Allowed values `STRING`, `INTEGER`, `DATETIME`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "label",
          "in" : "query",
          "required" : true,
          "description" : "The label of the new custom field. You see this in the custom field lists and tables.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "default",
          "in" : "query",
          "description" : "<p> You can give a default value to each custom field. If you send an email to a contact who has no value in the custom field, the default value is inserted. </p> <p> For example: <br> 1. You set the 'nick name' custom field default value to 'Bro'.</p> 2. After that you send an email to a contact (who has no nick name) with this text: 'Hey {{nick name}}!''. <p> 3. The contact received this: 'Hey Bro!'. </p>",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField%20Response"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Getting all custom fields.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result Default value: `1`",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc)<br>Default value: `id:desc`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "contacts" : {
                      "type" : "object",
                      "description" : "Array containing the contacts.",
                      "items" : {
                        "$ref" : "#/components/schemas/CustomField%20Response"
                      }
                    },
                    "pageCount" : {
                      "type" : "integer",
                      "description" : "The number of pages needed to show the results."
                    },
                    "pageSize" : {
                      "type" : "integer",
                      "description" : "The number of items shown on one page."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "The actual page."
                    },
                    "totalItems" : {
                      "type" : "integer",
                      "description" : "The number of results."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/custom-fields/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Id of a custom fields",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Getting a given custom field.",
        "responses" : {
          "200" : {
            "description" : "Custom fields successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField%20Response"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Removing a given custom field",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Updating a given custom field.",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "The new name of the custom field.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "label",
          "in" : "query",
          "description" : "The new label of the custom field.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "default",
          "in" : "query",
          "description" : "The new default value of the custom field.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "The new priority of the custom field.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Custom fields successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField%20Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/contacts/tag-manager" : {
      "post" : {
        "tags" : [ "Tags" ],
        "summary" : "Getting a given custom field.",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the new tag.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Custom fields successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tags%20Response"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Getting all tags",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result <br> Default value: `1`",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc)<br>Default value: `id:desc`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List successfully saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "contactTags" : {
                      "type" : "object",
                      "description" : "Array containing the contacts.",
                      "items" : {
                        "$ref" : "#/components/schemas/CustomField%20Response"
                      }
                    },
                    "pageCount" : {
                      "type" : "integer",
                      "description" : "The number of pages needed to show the results."
                    },
                    "pageSize" : {
                      "type" : "integer",
                      "description" : "The number of items shown on one page."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "The actual page."
                    },
                    "totalItems" : {
                      "type" : "integer",
                      "description" : "The number of results."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/contacts/tag-manager/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Getting a given tag",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tags%20Response"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tags" ],
        "summary" : "Removing a given tag.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "Tags" ],
        "summary" : "Updating a given tag.",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "The new name of the tag.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Custom fields successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tags%20Response"
                }
              }
            }
          }
        }
      }
    },
    "/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Getting all jobs",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page<br>Size range: `0`..",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result<br>Default value: 1<br>Size range: `1`..",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "links",
          "in" : "query",
          "description" : "Number of results per page<br>Size range: 0..",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc)<br>Default value: `id:asc`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "description" : "Array containing the contacts.",
                      "items" : {
                        "$ref" : "#/components/schemas/_links"
                      }
                    },
                    "_embedded" : {
                      "type" : "object",
                      "description" : "Contains the results and additional data",
                      "items" : {
                        "$ref" : "#/components/schemas/Job%20Response"
                      }
                    },
                    "page_count" : {
                      "type" : "integer",
                      "description" : "The number of pages needed to show the results."
                    },
                    "page_size" : {
                      "type" : "integer",
                      "description" : "The number of items shown on one page."
                    },
                    "total_items" : {
                      "type" : "integer",
                      "description" : "The number of results."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "The actual page."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "The id of the job.",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Getting a given job",
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job%20Response"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/webhooks" : {
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Creating a webhook",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The type of the webhook Allowed values: `UNSUBSCRIBE`, `BOUNCE`, `CLICK`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "The url of the webhook.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The id of the new webhook."
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The type of the webhook <br>Allowed values: `UNSUBSCRIBE`, `BOUNCE`, `CLICK`"
                    },
                    "url" : {
                      "type" : "string",
                      "description" : "The url of the webhook."
                    },
                    "_links" : {
                      "type" : "object",
                      "description" : "Links to the related REST APIs",
                      "items" : {
                        "$ref" : "#/components/schemas/_links"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Getting all webhooks",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page<br>Size range: `0`..",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The offset of the result <br> Default value: `1` <br> Size range: `1`..",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required fields separated with `,` character",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "links",
          "in" : "query",
          "description" : "The required links separated with `,` character",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order the collection via the given attribute(field:asc or field:desc)<br>Default value: `id:ascr`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "description" : "Links to the related REST APIs.",
                      "items" : {
                        "$ref" : "#/components/schemas/_links"
                      }
                    },
                    "_embedded" : {
                      "type" : "object",
                      "description" : "Contains the results and additional data.",
                      "items" : {
                        "$ref" : "#/components/schemas/Webhook"
                      }
                    },
                    "page_count" : {
                      "type" : "integer",
                      "description" : "The number of pages needed to show the results."
                    },
                    "page_size" : {
                      "type" : "integer",
                      "description" : "The number of items shown on one page."
                    },
                    "total_items" : {
                      "type" : "integer",
                      "description" : "The number of results."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "The actual page."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "The id of the webhook.",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Getting a given webhook.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Removing a given webhook.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Updating a given webhook.",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The type of the webhook<br>Allowed values: `UNSUBSCRIBE`, `BOUNCE`, `CLICK`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Webhook successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/url/provided/by/you/click" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Outgoing Webhooks (\"CLICK\")",
        "description" : "The data sent to the url you provided in case an event triggered.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookClick"
                }
              }
            }
          }
        }
      }
    },
    "/url/provided/by/you/unsubscribe" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Outgoing Webhooks (\"UNSUBSCRIBE\")",
        "description" : "The data sent to the url you provided in case an event triggered.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookUnsubscribe"
                }
              }
            }
          }
        }
      }
    },
    "/url/provided/by/you/bounce" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Outgoing Webhooks (\"BOUNCE\")",
        "description" : "The data sent to the url you provided in case an event triggered.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookBounce"
                }
              }
            }
          }
        }
      }
    },
    "/contact-imports" : {
      "get" : {
        "tags" : [ "Other Functions" ],
        "summary" : "Getting the finished imports",
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "description" : "Links to the related REST APIs.",
                      "items" : {
                        "$ref" : "#/components/schemas/_links"
                      }
                    },
                    "_embedded" : {
                      "type" : "object",
                      "description" : "Contains the results and additional data.",
                      "items" : {
                        "$ref" : "#/components/schemas/_embedded"
                      }
                    },
                    "page_count" : {
                      "type" : "integer",
                      "description" : "The number of pages needed to show the results."
                    },
                    "page_size" : {
                      "type" : "integer",
                      "description" : "The number of items shown on one page."
                    },
                    "total_items" : {
                      "type" : "integer",
                      "description" : "The number of results."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "The actual page."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Campaign-Statistics-timeline-Response" : {
        "title" : "Campaign timeline statistics",
        "description" : "Timeline format only available for opens and clicks statistics.",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "from" : {
              "format" : "date-time",
              "type" : "string"
            },
            "to" : {
              "format" : "date-time",
              "type" : "string"
            },
            "count" : {
              "type" : "integer"
            }
          }
        },
        "example" : [ {
          "from" : "2019-05-08T13:56:28+00:00",
          "to" : "2019-05-09T00:22:01+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-09T00:22:02+00:00",
          "to" : "2019-05-09T10:47:35+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-09T10:47:36+00:00",
          "to" : "2019-05-09T21:13:09+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-09T21:13:10+00:00",
          "to" : "2019-05-10T07:38:43+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-10T07:38:44+00:00",
          "to" : "2019-05-10T18:04:17+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-10T18:04:18+00:00",
          "to" : "2019-05-11T04:29:51+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-11T04:29:52+00:00",
          "to" : "2019-05-11T14:55:25+00:00",
          "count" : 0
        }, {
          "from" : "2019-05-11T14:55:26+00:00",
          "to" : "2019-05-12T01:20:59+00:00",
          "count" : 0
        } ]
      },
      "Campaign-Statistics-table-Response" : {
        "title" : "Campaign statistics - table",
        "description" : "Campaign statistics in table format.",
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer"
          },
          "pageCount" : {
            "type" : "integer"
          },
          "pageSize" : {
            "type" : "integer"
          },
          "totalItems" : {
            "type" : "integer"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "occuredAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "example" : "2019-05-08T13:01:00+00:00"
                },
                "contact" : {
                  "$ref" : "#/components/schemas/Contact%20Response"
                },
                "device" : {
                  "type" : "object",
                  "properties" : {
                    "type" : {
                      "type" : "string"
                    },
                    "os" : {
                      "type" : "string"
                    },
                    "client" : {
                      "type" : "string"
                    }
                  }
                },
                "location" : {
                  "type" : "object",
                  "properties" : {
                    "country" : {
                      "type" : "string"
                    },
                    "region" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "example" : {
          "pageCount" : 1,
          "pageSize" : 500,
          "totalItems" : 5,
          "page" : 1,
          "items" : [ {
            "occuredAt" : "2019-05-08T13:01:02+00:00",
            "contact" : {
              "ip" : "10.55.55.98",
              "id" : 663,
              "email" : "automizy-test+115562877672970.6@protopmail.hu",
              "status" : "ACTIVE",
              "requestDate" : "2019-04-30T11:57:47+00:00",
              "unsubscribeDate" : null,
              "requestIp" : null,
              "leadScore" : 4,
              "statistics" : {
                "emailSentCount" : 38,
                "uniqueEmailOpenCount" : 3,
                "uniqueEmailClickCount" : 4
              },
              "tags" : null,
              "smartLists" : [ {
                "id" : 454,
                "name" : "1062test"
              }, {
                "id" : 459,
                "name" : "1062test 10 contacts"
              } ],
              "customFields" : {
                "1" : "TestFname6",
                "2" : null,
                "3" : null,
                "4" : null,
                "5" : null,
                "6" : null,
                "8" : null,
                "10" : null,
                "11" : null,
                "12" : null,
                "13" : null,
                "14" : null,
                "16" : null,
                "17" : null,
                "18" : null,
                "19" : null,
                "20" : null,
                "21" : null,
                "23" : null,
                "24" : null,
                "25" : null,
                "26" : null,
                "27" : null,
                "29" : null,
                "30" : null,
                "31" : null,
                "32" : null,
                "33" : null,
                "35" : null,
                "36" : null,
                "37" : null,
                "38" : null,
                "39" : null
              }
            },
            "device" : {
              "type" : "Other",
              "os" : "Other",
              "client" : "Other"
            },
            "location" : {
              "country" : "-",
              "region" : "THIS PARAMETER IS UNAVAILABLE IN SELECTED .BIN DATA FILE. PLEASE UPGRADE."
            }
          }, {
            "occuredAt" : "2019-05-08T13:01:02+00:00",
            "contact" : {
              "ip" : "10.55.55.98",
              "id" : 664,
              "email" : "automizy-test+115562877672970.7@protopmail.hu",
              "status" : "ACTIVE",
              "requestDate" : "2019-04-30T11:57:47+00:00",
              "unsubscribeDate" : null,
              "requestIp" : null,
              "leadScore" : 4,
              "statistics" : {
                "emailSentCount" : 38,
                "uniqueEmailOpenCount" : 3,
                "uniqueEmailClickCount" : 4
              },
              "tags" : null,
              "smartLists" : [ {
                "id" : 454,
                "name" : "1062test"
              }, {
                "id" : 459,
                "name" : "1062test 10 contacts"
              } ],
              "customFields" : {
                "1" : "TestFname7",
                "2" : null,
                "3" : null,
                "4" : null,
                "5" : null,
                "6" : null,
                "8" : null,
                "10" : null,
                "11" : null,
                "12" : null,
                "13" : null,
                "14" : null,
                "16" : null,
                "17" : null,
                "18" : null,
                "19" : null,
                "20" : null,
                "21" : null,
                "23" : null,
                "24" : null,
                "25" : null,
                "26" : null,
                "27" : null,
                "29" : null,
                "30" : null,
                "31" : null,
                "32" : null,
                "33" : null,
                "35" : null,
                "36" : null,
                "37" : null,
                "38" : null,
                "39" : null
              }
            },
            "device" : {
              "type" : "Other",
              "os" : "Other",
              "client" : "Other"
            },
            "location" : {
              "country" : "-",
              "region" : "THIS PARAMETER IS UNAVAILABLE IN SELECTED .BIN DATA FILE. PLEASE UPGRADE."
            }
          } ]
        }
      },
      "Campaign-Statistics-grouped-Response" : {
        "title" : "Campaign statistics - grouped",
        "description" : "Campaign statistics in grouped format.",
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer"
          },
          "pageCount" : {
            "type" : "integer"
          },
          "pageSize" : {
            "type" : "integer"
          },
          "totalItems" : {
            "type" : "integer"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "key" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "integer"
                }
              }
            }
          }
        },
        "example" : {
          "pageCount" : 1,
          "pageSize" : 500,
          "totalItems" : 1,
          "page" : 1,
          "items" : [ {
            "key" : "gmail.com",
            "value" : 2
          }, {
            "key" : "yahoo.com",
            "value" : 1
          } ]
        }
      },
      "Campaign-geo-location-Statistics-Response" : {
        "title" : "Geo-location statistics",
        "description" : "Request campaign geo-location statistics.",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "country" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "count" : {
              "type" : "integer"
            }
          }
        },
        "example" : [ {
          "country" : "FRANCE",
          "region" : "ILE-DE-FRANCE",
          "count" : 1
        }, {
          "country" : "GERMANY",
          "region" : "NORDRHEIN-WESTFALEN",
          "count" : 1
        }, {
          "country" : "IRELAND",
          "region" : "DUBLIN",
          "count" : 1
        }, {
          "country" : "NORWAY",
          "region" : "BUSKERUD",
          "count" : 1
        }, {
          "country" : "NORWAY",
          "region" : "OSTFOLD",
          "count" : 1
        }, {
          "country" : "NORWAY",
          "region" : "ROGALAND",
          "count" : 1
        }, {
          "country" : "UNITED KINGDOM",
          "region" : "ENGLAND",
          "count" : 1
        }, {
          "country" : "UNITED STATES",
          "region" : "CALIFORNIA",
          "count" : 7
        }, {
          "country" : "UNITED STATES",
          "region" : "NEW JERSEY",
          "count" : 1
        } ]
      },
      "Campaign-Response" : {
        "title" : "Campaign object",
        "description" : "Data for Campaign (Email)",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "enum" : [ "BULK|AUTOMATION|RESEND|SPLIT_TEST|AUTOMATION_SPLIT_TEST" ],
            "type" : "string"
          },
          "subject" : {
            "description" : "Email's subject line",
            "type" : "string"
          },
          "resends" : {
            "description" : "If the campaign have 'connected' resend campaign(s) then here the resend-campaign objects are listed.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Campaign-Resend-Response"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the campaign. This name only visible for you, in order to help you identify the campaign."
          },
          "archived" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "description" : "The date and time when the campaign created.",
            "format" : "date-time",
            "type" : "string"
          },
          "finishedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "recipientCount" : { },
          "reply" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "string"
              }
            }
          },
          "sender" : {
            "type" : "object",
            "description" : "Contacts will see who send them the email.",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              }
            }
          },
          "smartLists" : {
            "type" : "array",
            "description" : "The target audiance (list and filter) who will receive this campaign (email).",
            "items" : {
              "type" : "object",
              "properties" : {
                "list" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer"
                    },
                    "name" : {
                      "type" : "string"
                    }
                  },
                  "description" : "The target audiance's list's id."
                },
                "filters" : {
                  "type" : "array",
                  "description" : "If you don't want to send the email to all of the contacts that on the list, you can use filter. You should create the filter upfront, and specify the filter's id(s) here.",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "startAt" : {
            "format" : "date-time",
            "type" : "string",
            "description" : "Describes the date and time of the campaign's start of send. Could be null."
          },
          "splitTestMetaData" : {
            "type" : "object",
            "description" : "This parameter required if you create a campaign with splist-test campaigns. ",
            "properties" : {
              "decider" : {
                "type" : "string",
                "description" : "You would like to manually decide which version going to send out to the rest of the contacts?",
                "enum" : [ "OPEN_RATE", "MANUAL" ]
              },
              "rationPerCampaign" : {
                "type" : "integer",
                "description" : "How many percentage of the contacts will send out to each split-test version."
              },
              "waitUntil" : {
                "type" : "string",
                "description" : "Relevant only if you choose 'decider: OPEN_RATE'. In this case: How much time should wait before decide which version should send out. Format: ISO 8601"
              }
            }
          },
          "statistics" : {
            "$ref" : "#/components/schemas/Campaign-Statistics"
          },
          "status" : {
            "enum" : [ null, "SCHEDULED", "RUNNINIG", "PAUSED", "FINISHED", "CANCELED", "ERROR", "SCHEDULED_PAUSED", "CONTACT_LIMIT_REACHED", "EMAIL_LIMIT_REACHED" ],
            "type" : "string"
          },
          "updateAt" : {
            "description" : "The date and time when the campaign last time updated.",
            "format" : "date-time",
            "type" : "string"
          },
          "linkData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        },
        "example" : {
          "startAt" : "2019-05-08T13:06:53+00:00",
          "isDraft" : false,
          "finishedAt" : "2019-05-08T13:07:00+00:00",
          "recipientCount" : {
            "max" : 10,
            "delivered" : 10
          },
          "smartLists" : [ {
            "list" : {
              "id" : 459,
              "name" : "My List"
            },
            "filters" : [ ]
          } ],
          "splitTests" : [ ],
          "id" : 493,
          "type" : "BULK",
          "status" : "FINISHED",
          "createdAt" : "2019-05-08T13:06:05+00:00",
          "updatedAt" : "2019-05-08T13:06:05+00:00",
          "name" : "My campaign",
          "sender" : {
            "name" : "Automizy Auto Test",
            "email" : "automizy-test@protopmail.hu"
          },
          "reply" : {
            "email" : "automizy-test@protopmail.hu"
          },
          "subject" : "My subject line",
          "resends" : [ {
            "originalCampaign" : 493,
            "waitAfterSend" : "P1D",
            "startAt" : "2019-05-08T13:07:00+00:00",
            "finishedAt" : "2019-05-08T13:09:28+00:00",
            "recipientCount" : {
              "max" : 8,
              "delivered" : 8
            },
            "id" : 494,
            "type" : "RESEND",
            "status" : "FINISHED",
            "createdAt" : "2019-05-08T13:06:50+00:00",
            "updatedAt" : "2019-05-08T13:06:50+00:00",
            "name" : "My resend campaign",
            "sender" : {
              "name" : "Automizy Auto Test",
              "email" : "automizy-test@protopmail.hu"
            },
            "reply" : {
              "email" : "automizy-test@protopmail.hu"
            },
            "subject" : "My better resend subject line",
            "resends" : [ ],
            "statistics" : {
              "recipients" : {
                "total" : 8
              },
              "opens" : {
                "total" : 2,
                "unique" : 2
              },
              "bounces" : {
                "soft" : 0,
                "hard" : 0
              },
              "clicks" : {
                "total" : 1,
                "unique" : 1
              },
              "unsubscribes" : {
                "total" : 0,
                "unique" : 0
              },
              "resendUnique" : {
                "opens" : "2",
                "clicks" : "1",
                "unsubscribe" : "0",
                "softBounce" : "0",
                "hardBounce" : "0"
              }
            },
            "linkData" : [ {
              "url" : "[{webversion}]",
              "tags" : [ ],
              "occurrence" : 0
            }, {
              "url" : "https://automizy.com/blog",
              "tags" : [ ],
              "occurrence" : 1
            } ]
          }, {
            "originalCampaign" : 493,
            "waitAfterSend" : "P1D",
            "startAt" : "2019-05-09T13:07:00+00:00",
            "finishedAt" : "2019-05-08T13:10:29+00:00",
            "recipientCount" : {
              "max" : 6,
              "delivered" : 6
            },
            "id" : 495,
            "type" : "RESEND",
            "status" : "RUNNING",
            "createdAt" : "2019-05-08T13:06:50+00:00",
            "updatedAt" : "2019-05-08T13:06:50+00:00",
            "name" : "My resend Campaign Name",
            "sender" : {
              "name" : "Automizy Auto Test",
              "email" : "automizy-test@protopmail.hu"
            },
            "reply" : {
              "email" : "automizy-test@protopmail.hu"
            },
            "subject" : "My best resend subject line",
            "resends" : [ ],
            "statistics" : {
              "recipients" : {
                "total" : 6
              },
              "opens" : {
                "total" : 2,
                "unique" : 2
              },
              "bounces" : {
                "soft" : 0,
                "hard" : 0
              },
              "clicks" : {
                "total" : 1,
                "unique" : 1
              },
              "unsubscribes" : {
                "total" : 1,
                "unique" : 1
              },
              "resendUnique" : {
                "opens" : "2",
                "clicks" : "1",
                "unsubscribe" : "1",
                "softBounce" : "0",
                "hardBounce" : "0"
              }
            },
            "linkData" : [ {
              "url" : "[{webversion}]",
              "tags" : [ ],
              "occurrence" : 0
            }, {
              "url" : "https://automizy.com/blog",
              "tags" : [ ],
              "occurrence" : 1
            } ]
          } ],
          "statistics" : {
            "recipients" : {
              "total" : 10
            },
            "opens" : {
              "total" : 2,
              "unique" : 2
            },
            "bounces" : {
              "soft" : 0,
              "hard" : 0
            },
            "clicks" : {
              "total" : 1,
              "unique" : 1
            },
            "unsubscribes" : {
              "total" : 0,
              "unique" : 0
            },
            "resendUnique" : {
              "opens" : "2",
              "clicks" : "1",
              "unsubscribe" : "0",
              "softBounce" : "0",
              "hardBounce" : "0"
            }
          },
          "linkData" : [ {
            "url" : "[{webversion}]",
            "tags" : [ ],
            "occurrence" : 0
          }, {
            "url" : "https://automizy.com/blog",
            "tags" : [ ],
            "occurrence" : 1
          } ],
          "splitTestMetaData" : [ ]
        }
      },
      "Campaign-Request" : {
        "title" : "Campaign object",
        "description" : "Data for Campaign (Email)",
        "required" : [ "subject", "name", "code", "reply", "smartLists", "startAt", "sender", "maxWidth" ],
        "type" : "object",
        "properties" : {
          "subject" : {
            "description" : "Email's subject line",
            "type" : "string"
          },
          "resends" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Campaign-Response"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the campaign. This name only visible for you, in order to help you identify the campaign."
          },
          "code" : {
            "$ref" : "#/components/schemas/Code-Request"
          },
          "reply" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "description" : "The reply email address in the email you send out with this campaign. ",
                "type" : "string"
              }
            }
          },
          "sender" : {
            "type" : "object",
            "description" : "Contacts will see who send them the email.",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              }
            }
          },
          "smartLists" : {
            "type" : "array",
            "description" : "The target audiance (list and filter) who will receive this campaign (email).",
            "items" : {
              "type" : "object",
              "properties" : {
                "list" : {
                  "type" : "integer",
                  "description" : "The target audiance's list's id."
                },
                "filters" : {
                  "type" : "array",
                  "description" : "If you don't want to send the email to all of the contacts that on the list, you can use filter. You should create the filter upfront, and specify the filter's id(s) here.",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "splitTestMetaData" : {
            "type" : "object",
            "description" : "This parameter required if you create a campaign with splist-test campaigns. ",
            "properties" : {
              "decider" : {
                "type" : "string",
                "description" : "You would like to manually decide which version going to send out to the rest of the contacts?",
                "enum" : [ "OPEN_RATE", "MANUAL" ]
              },
              "rationPerCampaign" : {
                "type" : "integer",
                "description" : "How many percentage of the contacts will send out to each split-test version."
              },
              "waitUntil" : {
                "type" : "string",
                "description" : "Relevant only if you choose 'decider: OPEN_RATE'. In this case: How much time should wait before decide which version should send out. Format: ISO 8601"
              }
            }
          },
          "startAt" : {
            "format" : "date-time",
            "description" : "If you want to send out the campaign right now, then you shoud send 'NOW'. If later, you send a DateTime format string. Example: '2003-07-10T15:59:60-08:00' ",
            "type" : "string"
          },
          "maxWidth" : {
            "type" : "integer",
            "description" : "Email's max width."
          },
          "originalCampaign" : {
            "type" : "integer",
            "description" : "You should provide this property if you want to create a resend or split-test campaign. In this case, you can refer to the original campaign."
          },
          "splitTests" : {
            "type" : "array",
            "description" : "This parameter required if you create a campaign with split-test campaigns. If not, you can send an empty array. If yes, you can send complete campaign object(s).",
            "items" : {
              "$ref" : "#/components/schemas/Campaign-Resend-Request"
            }
          }
        },
        "example" : {
          "name" : "My campaign name",
          "sender" : {
            "name" : "Jane Doe",
            "email" : "automizy@gmail.com"
          },
          "reply" : {
            "email" : "automizy@gmail.com"
          },
          "code" : {
            "html" : "<!DOCTYPE><html>   <head>       <title> ...</title><body>... </body></html>",
            "editor" : "{}"
          },
          "subject" : "My awesome subject line",
          "resends" : [ ],
          "splitTests" : [ ],
          "splitTestMetaData" : {
            "decider" : "OPEN_RATE",
            "rationPerCampaign" : 10,
            "waitUntil" : "PT4H"
          },
          "smartLists" : [ {
            "list" : 464,
            "filters" : [ ]
          } ],
          "segments" : [ ],
          "startAt" : "NOW"
        }
      },
      "Code-Request" : {
        "title" : "Email's code",
        "properties" : {
          "editor" : {
            "type" : "string",
            "description" : "Used in Automizy/Entermizy software."
          },
          "html" : {
            "type" : "string",
            "description" : "Html code of the email."
          }
        }
      },
      "HtmlCode-Response" : {
        "title" : "Email's code",
        "properties" : {
          "editorCode" : {
            "type" : "string",
            "description" : "Used in Automizy/Entermizy software."
          },
          "generatedCode" : {
            "type" : "string",
            "description" : "Html code of the email."
          }
        }
      },
      "Campaign-Resend-Request" : {
        "required" : [ "originalCampaign", "waitAfterSend" ],
        "properties" : {
          "originalCampaign" : {
            "description" : "The original campaign's id.",
            "type" : "integer"
          },
          "waitAfterSend" : {
            "description" : "\"A date in string that is compliant with the ISO 8601 format (for example: 'P1D').\"\"",
            "type" : "string"
          },
          "subject" : {
            "description" : "An alternative subjectline for your resend campaign. If you wish not to create one, the resend campaign will use the original campaign's subjectline. ",
            "type" : "string"
          }
        }
      },
      "Campaign-Resend-Response" : {
        "title" : "Root Type for Campaign",
        "description" : "A resend campaign. (This campaign similar to a normal campaign except that does not contains other resend campaigns)",
        "required" : [ "type", "status", "archived", "name", "created_at", "update_at", "createdAt", "embedImages", "finishedAt", "id", "isDraft", "updateAt", "startAt", "code", "statistics", "waitAfterSend" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "description" : "BULK| AUTOMATION | RESEND | SPLIT_TEST | AUTOMATION_SPLIT_TEST",
            "type" : "string"
          },
          "subject" : {
            "description" : "Email's subject line",
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "archived" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "embedImages" : {
            "type" : "boolean"
          },
          "finishedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "notificationEmail" : {
            "type" : "string"
          },
          "recipientCount" : { },
          "reply" : { },
          "sender" : { },
          "smartLists" : { },
          "startAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "statistics" : {
            "$ref" : "#/components/schemas/Campaign-Statistics"
          },
          "status" : {
            "description" : "SCHEDULED | RUNNINIG | PAUSED | FINISHED | CANCELED | ERROR | SCHEDULED_PAUSED | CONTACT_LIMIT_REACHED | EMAIL_LIMIT_REACHED",
            "type" : "string"
          },
          "updateAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "waitAfterSend" : {
            "format" : "date-time",
            "description" : "How much time should wait this campaign after the original sendout. Format: ISO 8601",
            "type" : "string"
          },
          "originalCampaign" : { }
        }
      },
      "resendUnique" : {
        "title" : "Resend campaign's statistics.",
        "description" : "Resend campaign's unique statistics. Example: if a contact receives an email and a resend email, and (later) open both letter, resendUnique-opens stat increase by one.",
        "type" : "object",
        "properties" : {
          "opens" : {
            "type" : "string"
          },
          "clicks" : {
            "type" : "string"
          },
          "unsubscribe" : {
            "type" : "string"
          },
          "softBounce" : {
            "type" : "string"
          },
          "hardBounce" : {
            "type" : "string"
          }
        },
        "example" : {
          "opens" : "100",
          "clicks" : "30",
          "unsubscribe" : "1",
          "softBounce" : "0",
          "hardBounce" : "0"
        }
      },
      "Campaign-Statistics" : {
        "title" : "Campaign-Statistics object",
        "description" : "Describes the statistics for the email",
        "required" : [ "resendUnique" ],
        "type" : "object",
        "properties" : {
          "recipients" : {
            "type" : "object",
            "properties" : {
              "total" : {
                "format" : "int32",
                "type" : "integer"
              }
            }
          },
          "opens" : {
            "type" : "integer",
            "properties" : {
              "total" : {
                "format" : "int32",
                "type" : "integer"
              },
              "unique" : {
                "format" : "int32",
                "type" : "integer"
              }
            }
          },
          "bounces" : {
            "type" : "integer",
            "properties" : {
              "soft" : {
                "format" : "int32",
                "type" : "integer"
              },
              "hard" : {
                "format" : "int32",
                "type" : "integer"
              }
            }
          },
          "clicks" : {
            "type" : "integer",
            "properties" : {
              "total" : {
                "format" : "int32",
                "type" : "integer"
              },
              "unique" : {
                "format" : "int32",
                "type" : "integer"
              }
            }
          },
          "unsubscribes" : {
            "type" : "object",
            "properties" : {
              "total" : {
                "format" : "int32",
                "type" : "integer"
              },
              "unique" : {
                "format" : "int32",
                "type" : "integer"
              }
            }
          },
          "resendUnique" : {
            "$ref" : "#/components/schemas/resendUnique"
          }
        },
        "example" : {
          "recipients" : {
            "total" : 100
          },
          "opens" : {
            "total" : 30,
            "unique" : 25
          },
          "bounces" : {
            "soft" : 1,
            "hard" : 0
          },
          "clicks" : {
            "total" : 20,
            "unique" : 15
          },
          "unsubscribes" : {
            "total" : 1,
            "unique" : 1
          },
          "resendUnique" : {
            "opens" : 100,
            "clicks" : 30,
            "unsubscribe" : 1,
            "softBounce" : 0,
            "hardBounce" : 0
          }
        }
      },
      "searchFor-Campaign" : {
        "title" : "Type for searchFor for campaigns",
        "description" : "",
        "type" : "object",
        "properties" : {
          "searchFor" : {
            "description" : "With this property you can filter and search at the same time. ",
            "type" : "object",
            "properties" : {
              "text" : {
                "description" : "Searchs in campaign names or subject lin",
                "type" : "string"
              },
              "status" : {
                "description" : "Warning, It must be an array!",
                "type" : "array",
                "items" : {
                  "description" : "The status of campaign what you look for.",
                  "type" : "string"
                }
              }
            }
          }
        },
        "example" : {
          "searchFor" : {
            "text" : "apple",
            "status" : [ "SENT", "RUNNING" ]
          }
        }
      },
      "searchFor" : {
        "title" : "searchFor",
        "description" : "With this property you can filter and search at the same time. \nWarning! You can NOT use searchFor with where[] at the same time.",
        "type" : "object",
        "properties" : {
          "searchFor" : {
            "type" : "object",
            "properties" : {
              "text" : {
                "type" : "string"
              },
              "status" : {
                "description" : "Filter for a given status.",
                "type" : "string"
              }
            }
          }
        },
        "example" : {
          "searchFor" : {
            "text" : "apple",
            "status" : "inactive"
          }
        }
      },
      "Link" : {
        "title" : "Link object",
        "description" : "Describes the links in the email. Each link can 'put' a tag to the contact who clicked to the given link.  ",
        "required" : [ "tags", "occurrence" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "occurrence" : {
            "description" : "Inside email where this link in the line. ex: This link is the 5th one in this email, so the occurrence will be 5.",
            "type" : "integer"
          }
        },
        "example" : "{\n    \"url\": \"https://alma.com/korte\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"occurrence\": \"0\"\n}\n\n      "
      },
      "SmartLists Response" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The id of the given lists."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the given lists."
          },
          "createdAt" : {
            "type" : "integer",
            "description" : "The date of the given list created."
          },
          "filters" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "description" : "The filter of the given list.",
              "properties" : {
                "id" : {
                  "type" : "integer"
                },
                "name" : {
                  "type" : "string"
                },
                "contactCount" : {
                  "type" : "integer"
                }
              }
            }
          },
          "contactsCount" : {
            "type" : "integer",
            "description" : "The number of the contacts is on the given list."
          }
        },
        "example" : {
          "id" : 84,
          "createdAt" : "2018-02-18T13:54:55+01:00",
          "filters" : [ {
            "id" : 26,
            "name" : "FilterName",
            "contactCount" : null
          } ],
          "name" : "The best list ever",
          "contactsCount" : 0
        }
      },
      "CustomField Response" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The id of the new custom field."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the new custom field."
          },
          "default" : {
            "type" : "string",
            "description" : "The default value of the new custom field."
          },
          "label" : {
            "type" : "string",
            "description" : "The default value of the new custom field."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the new custom field."
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the new custom field. [not in use]"
          }
        }
      },
      "Tags Response" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the new tag."
          },
          "name" : {
            "type" : "integer",
            "description" : "The name of the new tag."
          }
        }
      },
      "WebhookClick" : {
        "type" : "object",
        "properties" : {
          "au_contact_id" : {
            "type" : "integer",
            "description" : "Id of the contact."
          },
          "au_contact_email" : {
            "type" : "string",
            "description" : "Email address of the contact."
          },
          "au_campaign_id" : {
            "type" : "integer",
            "description" : "The id of the clicked campaign."
          },
          "au_type" : {
            "type" : "integer",
            "description" : "The type of the event. `1` in case of click."
          }
        }
      },
      "WebhookUnsubscribe" : {
        "type" : "object",
        "properties" : {
          "au_contact_id" : {
            "type" : "integer",
            "description" : "Id of the contact."
          },
          "au_contact_email" : {
            "type" : "string",
            "description" : "Email address of the contact."
          },
          "au_type" : {
            "type" : "integer",
            "description" : "The type of the event. `2` in case of click."
          }
        }
      },
      "WebhookBounce" : {
        "type" : "object",
        "properties" : {
          "au_contact_id" : {
            "type" : "integer",
            "description" : "Id of the contact."
          },
          "au_contact_email" : {
            "type" : "string",
            "description" : "Email address of the contact."
          },
          "au_contact_status" : {
            "type" : "string",
            "description" : "Status of the contact."
          },
          "au_bounce_type" : {
            "type" : "string",
            "description" : "The type of bounce."
          },
          "au_bounce_code" : {
            "type" : "integer",
            "description" : "Standardized bounce code."
          },
          "au_type" : {
            "type" : "integer",
            "description" : "The type of the event.<br>`3` in case of bounce."
          }
        }
      },
      "Job Response" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The id of the job."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the job."
          },
          "progressCurrent" : {
            "type" : "integer",
            "description" : "The current progress of the job, for example number of already imported rows when importing."
          },
          "progressMax" : {
            "type" : "integer",
            "description" : "The maximum progress of the job, for example the total number of rows when importing."
          },
          "started" : {
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/components/schemas/StartedJobs"
              }
            },
            "description" : "Date object containing data about when the job started."
          },
          "finished" : {
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/components/schemas/FinishedJobs"
              }
            },
            "description" : "Date object containing data about when the job finished.<br>Only campaign send jobs get this value."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the job. Values: `SCHEDULED`, `RUNNING`, `PAUSED`, `FINISHED`, `CANCELED`, `ERROR`, `SCHEDULED_PAUSED`, `CONTACT_LIMIT_REACHED,`EMAIL_LIMIT_REACHED`"
          },
          "visibleUntil" : {
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/components/schemas/VisibleUntil"
              }
            },
            "description" : "The time object indicating when the job will disappear."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the job. Values: `EMAIL_SEND`, `SEGMENT_CALCULATE`, `SEGMENT_SAVE`, `IMPORT_CONTACTS`, `EXPORT_TABLE`, `CAMPAIGN_SEND`, `LEAD_SCORE_GENERATE`, `SPLIT_TEST`, `SPLIT_TEST_CAMPAIGN`, `IMPORT_CONTACTS_FROM_ARRAY`, `BULK_CHANGE`"
          },
          "referenceId" : {
            "type" : "integer",
            "description" : "The campaign, segment, import, etc. id the job refers to."
          },
          "parent" : {
            "type" : "integer",
            "description" : "The id of the parent job if there is one."
          },
          "isStoppable" : {
            "type" : "boolean",
            "description" : "Shows if the job is stoppable."
          },
          "isPausable" : {
            "type" : "boolean",
            "description" : "Shows if the job is pauseable."
          },
          "children" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Array containing the id of children jobs."
          },
          "_links" : {
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/components/schemas/_links"
              }
            },
            "description" : "Links to the related REST APIs"
          }
        }
      },
      "StartedJobs" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The exact time when the job started."
          },
          "timezone" : {
            "type" : "string",
            "description" : "The timezone of the user."
          },
          "timezone_type" : {
            "type" : "number"
          }
        }
      },
      "FinishedJobs" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The exact time when the job started."
          },
          "timezone" : {
            "type" : "string",
            "description" : "The timezone of the user."
          },
          "timezone_type" : {
            "type" : "number"
          }
        }
      },
      "VisibleUntil" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The exact time when the job started."
          },
          "timezone" : {
            "type" : "string",
            "description" : "The timezone of the user."
          },
          "timezone_type" : {
            "type" : "number"
          }
        }
      },
      "_links" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "_embedded" : {
        "type" : "object",
        "properties" : {
          "ContactImports" : {
            "type" : "object",
            "items" : {
              "$ref" : "#/components/schemas/ContactImports"
            },
            "description" : "Links to the related REST APIs"
          }
        }
      },
      "ContactImports" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The `id` import."
          },
          "name" : {
            "type" : "string",
            "description" : "The object containing data about when the import was done."
          },
          "date" : {
            "type" : "object",
            "items" : {
              "$ref" : "#/components/schemas/ImportDate"
            },
            "description" : "The object containing data about when the import was done."
          },
          "importedSubscriberCount" : {
            "type" : "integer",
            "description" : "The number of contacts who were imported during this import process."
          },
          "alreadyInDatabaseErrorCount" : {
            "type" : "integer",
            "description" : "The number of contacts who were already in the database."
          },
          "unSubscribedErrorCount" : {
            "type" : "integer",
            "description" : "The number of contacts who already unsubscribed."
          },
          "invalidEmailAddressErrorCount" : {
            "type" : "integer",
            "description" : "The number of invalid email addresses in the import file."
          },
          "creationForbiddenErrorCount" : {
            "type" : "object",
            "description" : "If importing new contacts is disabled, only updating already existing ones is permitted, then this shows how many new contacts were in the import file."
          },
          "bannedContactErrorCount" : {
            "type" : "integer",
            "description" : "Number of contacts who were in the import file, but are banned."
          },
          "_links" : {
            "type" : "object",
            "items" : {
              "$ref" : "#/components/schemas/_links"
            },
            "description" : "Links to the related REST APIs"
          }
        }
      },
      "ImportDate" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "integer",
            "description" : "The exact time of the registration."
          },
          "timezone" : {
            "type" : "string",
            "description" : "The timezone, where from the user registered."
          },
          "timezone_type" : {
            "type" : "string"
          }
        }
      },
      "CustomFields" : {
        "type" : "object",
        "properties" : {
          "customFields[x]" : {
            "type" : "string",
            "description" : "Custom text."
          },
          "customFields[y]" : {
            "type" : "integer",
            "description" : "Custom integer."
          },
          "customFields[z]" : {
            "type" : "string",
            "description" : "String in the following formats `YYYY-MM-DD (eg 1997-07-16)`, `YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00 or 1997-07-16T19:20:30Z)`"
          }
        }
      },
      "Webhook" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The id of the webhook."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the webhook<br>Allowed values: `UNSUBSCRIBE`, `BOUNCE`, `CLICK`"
          },
          "url" : {
            "type" : "string",
            "description" : "The url of the webhook."
          },
          "_links" : {
            "type" : "object",
            "items" : {
              "$ref" : "#/components/schemas/_links"
            },
            "description" : "Links to the related REST APIs"
          }
        }
      },
      "ImportAnalyze" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "2015-03-31 17:15:34"
          },
          "timezone" : {
            "type" : "string",
            "description" : "The timezone of the user."
          },
          "timezone_type" : {
            "type" : "integer"
          }
        },
        "example" : {
          "date" : "2015-03-31 17:15:34",
          "timezone" : "Europe/Budapest",
          "timezone_type" : 3
        }
      },
      "ImportFields" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of the imported field.<br>Allowed values: `email`, `status`, `isConfirmed`, `customField`"
          },
          "operator" : {
            "type" : "string",
            "description" : "Allowed values: `override`"
          },
          "id" : {
            "type" : "integer",
            "description" : "If the field is a custom field, then it's the custom field ID, else it has to be `null`."
          }
        },
        "example" : {
          "date" : "2015-03-31 17:15:34",
          "timezone" : "Europe/Budapest",
          "timezone_type" : 3
        }
      },
      "GettingAllLists Response" : {
        "type" : "object",
        "properties" : {
          "smartLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SmartLists%20Response"
            },
            "description" : "Array containing the lists."
          },
          "pageCount" : {
            "type" : "integer",
            "description" : "The number of pages needed to show the results."
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of items shown on one page."
          },
          "page" : {
            "type" : "integer",
            "description" : "The actual page."
          },
          "totalItems" : {
            "type" : "integer",
            "description" : "The number of results."
          }
        }
      },
      "Contact Response" : {
        "title" : "A contact's data",
        "type" : "object",
        "proprties" : {
          "customFields" : {
            "type" : "object",
            "description" : "The keys represents the custom field's id, the value represents the fileds value. There are built in custom field, that corresponds to the contact, like contact name."
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer"
          },
          "leadScore" : {
            "type" : "integer",
            "description\"" : "Not used yet"
          },
          "requestDate\"" : {
            "type" : "datetime as string"
          },
          "requestIp" : "null,",
          "smartLists" : {
            "type" : "array",
            "items" : {
              "smartList" : {
                "type" : "object,",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "name" : {
                      "type" : "string",
                      "description" : "Name of the (Smart)List"
                    }
                  }
                }
              }
            },
            "statistics" : {
              "type" : "object",
              "items" : {
                "emailSentCount" : {
                  "type" : "integer",
                  "description" : "How many e-mail has been sent to this contatct"
                },
                "uniqueEmailOpenCount" : {
                  "type" : "integer",
                  "description" : "The given contact how many unique e-mail has opened. Unique means, if he/she opened an email twice uniqueEmailOpenCount will increase only by one."
                },
                "uniqueEmailClickCount" : {
                  "type" : "integer",
                  "description" : "The given contact how many unique link has clicked."
                }
              }
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE" ]
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unsubscribeDate" : {
            "type" : "string",
            "description" : "If the contact had not unsubscribed, this value will be null."
          }
        },
        "example" : null,
        "id" : 3972,
        "email" : "automizy-test@protopmail.hu",
        "status" : "ACTIVE",
        "requestDate" : "2019-03-12T14:59:11+00:00",
        "unsubscribeDate" : null,
        "requestIp" : null,
        "leadScore" : 0,
        "statistics" : {
          "emailSentCount" : 0,
          "uniqueEmailOpenCount" : 0,
          "uniqueEmailClickCount" : 0
        },
        "tags" : null,
        "smartLists" : [ {
          "id" : 4040,
          "name" : "Example List Name"
        } ],
        "customFields" : {
          "1" : "His Name",
          "2" : null,
          "3" : null,
          "4" : null,
          "5" : null,
          "6" : null,
          "7" : null,
          "16" : null,
          "17" : null
        }
      }
    },
    "securitySchemes" : {
      "AuthenticationToken" : {
        "type" : "http",
        "scheme" : "bearer",
        "description" : "You can get your token in Entermizy after login. Click settings, API Token, New Token"
      }
    }
  },
  "security" : [ {
    "AuthenticationToken" : [ ]
  } ]
}