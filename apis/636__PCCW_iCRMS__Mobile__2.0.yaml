openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PCCW_iCRMS/PatrolSimple/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PCCW_iCRMS/Patrol/1.0.0
info:
  description: iCRMS Mobile API
  version: "2.0"
  title: Mobile API
  contact:
    email: joseph.kk.chiu@pccw.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:



  /institution/{ins_code}/staffs:
     get:
        tags:
          - staffs
        summary: Query staffs
        description: All if no query argument is given
        operationId: queryStaffs
        parameters:
          - name: ins_code
            in: path
            schema:
              type: string
            required: true
            description: institution id
          - name: id
            in: query
            schema:
              type: integer
            description: staff id
          - name: rfid
            in: query
            schema:
              type: integer
            description: staff rfid
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolCheckPoint'
          '400':
            description: invalid argument

  /staffs/{staff_id}/party:
      parameters:
        - name: staff_id
          in: path
          required: true
          description: staff_id
          schema:
            type: string
      get:
        tags:
          - staffs
        summary: Query assigned party
        operationId: queryStaffAssignedParty
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/Party'
          '400':
            description: invalid argument
          '404':
            description: not found


  /staffs/{staff_id}/movement_loc:
      parameters:
        - name: staff_id
          in: path
          required: true
          description: staff_id
          schema:
            type: string
      get:
        tags:
          - staffs
        summary: Query movement location
        operationId: queryStaffMovementLoc
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/MovementLocation'
          '400':
            description: invalid argument
          '404':
            description: not found


  /staffs/{staff_id}/inmates_under_charge:
    parameters:
      - name: staff_id
        in: path
        required: true
        description: staff_id
        schema:
          type: string
    get:
      tags:
        - staffs
      summary: Query inmates under charge
      description: All if no query argument is given
      operationId: queryInmatesUnderCharge
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inmate'
        '400':
          description: invalid argument


  /inmates/{inmate_id}/party:
      parameters:
        - name: inmate_id
          in: path
          required: true
          description: inmate_id
          schema:
            type: string
      get:
        tags:
          - inmates
        summary: Query for the inmate's party
        operationId: queryInmateParty
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/Party'
          '400':
            description: invalid argument


  /inmates/{inmate_id}/photo:
    parameters:
      - name: inmate_id
        in: path
        required: true
        description: inmate_id
        schema:
          type: string
      - name: thumbnail
        in: query
        required: true
        description: inmate_id
        schema:
          type: boolean
    get:
      tags:
        - inmates
      summary: Query for the inmate's image. Base64. Defaults to thumbnail.
      operationId: queryInmatePhoto
      responses:
        '200':
          description: succeeded
          content:
            image:
              schema:
                type: string
                format: binary
        '400':
          description: invalid argument


  /party/{party_id}/inmates:
      parameters:
        - name: party_id
          in: path
          required: true
          description: party_id
          schema:
            type: string
      get:
        tags:
          - party
        summary: Query for the inmates belonging to the party
        operationId: queryPartyInmates
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Inmate'
          '400':
            description: invalid argument


  /party/{party_id}/party_ic:
      parameters:
        - name: party_id
          in: path
          required: true
          description: party_id
          schema:
            type: string
      get:
        tags:
          - party
        summary: Query for the party IC
        operationId: queryPartyIC
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/Staff'
          '400':
            description: invalid argument


  /inmates/{inmate_id}/staff_ic:
      parameters:
        - name: inmate_id
          in: path
          required: true
          description: inmate_id
          schema:
            type: string
      get:
        tags:
          - inmates
        summary: Query for the principle staff in charge of inmate
        description: All if no query argument is given
        operationId: queryInmateStaffIC
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/Staff'
          '400':
            description: invalid argument


  /inmates/{inmate_id}/movement_loc:
      parameters:
        - name: inmate_id
          in: path
          required: true
          description: inmate_id
          schema:
            type: string
      get:
        tags:
          - inmates
        summary: Query inmate movement location
        description: All if no query argument is given
        operationId: queryInmateLocation
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/MovementLocation'
          '400':
            description: invalid argument


  /inmates/{inmate_id}/night_loc:
      parameters:
        - name: inmate_id
          in: path
          required: true
          description: inmate_id
          schema:
            type: string
      get:
        tags:
          - inmates
        summary: Query inmate night location
        description: All if no query argument is given
        operationId: queryInmateNightLocation
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/NightLocation'
          '400':
            description: invalid argument


  /inmates/{inmate_id}/mo_list_record:
    parameters:
      - name: inmate_id
        in: path
        required: true
        description: inmate_id
        schema:
          type: string
    get:
      tags:
        - inmates
      summary: Query MO list record
      operationId: queryMOListRecord
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MOListRecord'
        '400':
          description: invalid argument


  /inmates/{inmate_id}/mo_check_records:
    parameters:
      - name: inmate_id
        in: path
        required: true
        description: inmate_id
        schema:
          type: string
    get:
      tags:
        - inmates
      summary: Query MO check record
      description: Default to today's records only
      operationId: queryMOCheckRecord
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MOCheckRecord'
        '400':
          description: invalid argument


  /inmates/{inmate_id}/e_list_record:
    parameters:
      - name: inmate_id
        in: path
        required: true
        description: inmate_id
        schema:
          type: string
    get:
      tags:
        - inmates
      summary: Query E list record
      operationId: queryEListRecord
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/EListRecord'
        '400':
          description: invalid argument


  /inmates/{inmate_id}/e_list_check_records:
    parameters:
      - name: inmate_id
        in: path
        required: true
        description: inmate_id
        schema:
          type: string
    get:
      tags:
        - inmates
      summary: Query E list check record
      description: Default to today's records only
      operationId: queryEListCheckRecord
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EListCheckRecord'
        '400':
          description: invalid argument


  /institution/{ins_code}/inmates/handover:
    parameters:
        - name: ins_code
          in: path
          schema:
            type: string
          required: true
          description: institution id
    post:
      tags:
        - inmates
      summary: Update staff in charge
      operationId: updateInmatesStaffInChargeID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_new_ic:
                  type: integer
                loc_code:
                  type: string
                destination_loc_code:
                  type: string
                inmate_ids:
                  type: array
                  items:
                    type: integer
                movement_auth:
                    type: object
                    items:
                      $ref: '#/components/schemas/MovementAuthorizationReq'

        description: Movement authorization is optional. MO/E list checks are enforced by mobile logic.
        required: true
      responses:
        '200':
          description: succeeded
        '400':
          description: invalid argument
        '403':
          description: forbidden. Possible authorization and/or conflict issue

  /institution/{ins_code}/inmates/update_movement_loc:
      parameters:
          - name: ins_code
            in: path
            schema:
              type: string
            required: true
            description: institution id
      post:
        tags:
          - inmates
        summary: Update movement location
        operationId: updateInmatesMovementLocation
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  staff_id:
                    type: string
                  new_loc_code:
                    type: string
                  inmate_ids:
                    type: array
                    items:
                      type: integer

                    
          description: ids of new movement location and inmates
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument
            
  /inmates/{inmate_id}/verify_night_loc:
      parameters:
        - name: inmate_id
          in: path
          required: true
          description: inmate_id
          schema:
            type: string
      post:
        tags:
          - inmates
        summary: Verify night location
        operationId: verifyInmateNightLoc
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_lockup_loc:
                    type: integer

          description: lockup location id
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument


  /institution/{ins_code}/movement_locs:
      parameters:
        - name: ins_code
          in: path
          required: true
          description: Institution code
          schema:
            type: string
        - name: rfid_code
          in: query
          description: Location RFID code
          schema:
            type: string
      get:
        tags:
          - movementLocations
        summary: Query movement locations
        description: All if no query argument is given
        operationId: queryMovementLocations
        parameters:
          - name: id
            in: query
            schema:
              type: integer
            description: checkpoint id
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/MovementLocation'
          '400':
            description: invalid argument



  /movement_auth_reqs/{auth_id}/handover_staff:
    parameters:
      - name: auth_id
        in: path
        required: true
        description: Authorization id
        schema:
          type: integer
    get:
      tags:
        - movementAuthorizationReqs
      summary: Query handover staff
      operationId: queryMovementAuthHandoverStaff
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Staff'
        '400':
          description: invalid argument


  /movement_auth_reqs/{auth_id}/takeover_staff:
    parameters:
      - name: auth_id
        in: path
        required: true
        description: Authorization id
        schema:
          type: integer
    get:
      tags:
        - movementAuthorizationReqs
      summary: Query takeover staff
      operationId: queryMovementAuthTakeoverStaff
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Staff'
        '400':
          description: invalid argument

  /movement_auth_reqs/{auth_id}/inmates:
    parameters:
      - name: auth_id
        in: path
        required: true
        description: Authorization id
        schema:
          type: integer
    get:
      tags:
        - movementAuthorizationReqs
      summary: Query inmates to authorize
      description: All if no query argument is given
      operationId: queryInmatesToAuthorize
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inmate'
        '400':
          description: invalid argument

  /institution/{ins_code}/movement_auth_reqs:
      parameters:
        - name: ins_code
          in: path
          required: true
          description: Institution code
          schema:
            type: string
      put:
        tags:
          - movementAuthorizationReqs
        summary: Submit movement authorization
        operationId: submitMovementAuthReq
        requestBody:
          content:
            application/json:
              schema:
                type: object
                items:
                    $ref: '#/components/schemas/MovementAuthorizationReq'

          description: Movement authorization req object
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument


  /movement_auth_reqs/{auth_id}/approve_deny:
    parameters:
      - name: auth_id
        in: path
        required: true
        description: Movement authorization id
        schema:
          type: integer
    post:
      tags:
        - movementAuthorizationReqs
      summary: Approve movement authorization
      operationId: approveMovementAuthReq
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                staff_id:
                  type: string
                approve:
                  type: boolean

        description: Approval details
        required: true
        
      responses:
        '200':
          description: succeeded
        '400':
          description: invalid argument



  /movement_locations/{loc_id}/moving_muster:
    parameters:
      - name: loc_id
        in: path
        required: true
        description: location id
        schema:
          type: string
    get:
      tags:
        - movementLocations
      summary: Query moving muster at location
      description: All if no query argument is given
      operationId: queryLocationMovingMuster
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: integer
                description: moving muster
        '400':
          description: invalid argument
  

  /institutions/{ins_code}/musterCounts:
    parameters:
      - name: ins_code
        in: path
        schema:
          type: string
        required: true
        description: institution code
      - name: activated
        in: query
        schema:
          type: boolean
        required: false
        description: activated musters only
    get:
      tags:
        - musterCounts
      summary: Query muster counts
      description: All if no query argument is given
      operationId: queryCurrentMuster
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MusterCount'


  /musterCounts/{muster_id}/locationMusters:
    parameters:
      - name: muster_id
        in: path
        schema:
          type: integer
        required: true
        description: muster count id
        
      - name: location_id
        in: query
        schema:
          type: integer
        required: false
        description: location id
    get:
      tags:
        - musterCounts
      summary: Query location musters
      description: All if no query argument is given
      operationId: queryLocationMusters
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationMuster'
                  
                  
  /institutions/{ins_code}/musterCounts/activate_muster:
      parameters:
        - name: ins_code
          in: path
          schema:
            type: string
          required: true
          description: institution code
      post:
        tags:
          - musterCounts
        summary: Activate muster countingg
        operationId: activateMusterCount
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  
          description: Muster count type. Either "lockup" or "regular"
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument


  /locationMusters/{loc_muster_id}:
      parameters:
        - name: loc_muster_id
          in: path
          schema:
            type: string
          required: true
          description: location muster id
      put:
        tags:
          - locationMusters
        summary: Update location muster
        operationId: updateLocationMuster
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationMuster'
          description: Location muster object
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument
          '404':
            description: not found


  /locationMusters/{loc_muster_id}/loc:
    parameters:
      - name: loc_muster_id
        in: path
        schema:
          type: integer
        required: true
        description: location muster id

    get:
      tags:
        - locationMusters
      summary: Query location for location muster
      description: All if no query argument is given
      operationId: queryLocationMusterLocation
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MovementLocation'


  /institutions/{ins_code}/night_locs:
      parameters:
        - name: ins_code
          in: path
          required: true
          description: Institution code
          schema:
            type: string
            
        - name: lockup_locs_only
          in: query
          required: false
          description: filters out non-lockup locations
          schema:
            type: boolean
      get:
        tags:
          - nightLocations
        summary: Query night locations
        description: All if no query argument is given
        operationId: queryNightLocations
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/NightLocation'


  /night_locations/{loc_id}/parent_loc:
      parameters:
        - name: loc_id
          in: path
          required: true
          description: night location id
          schema:
            type: integer
      get:
        tags:
          - nightLocations
        summary: Query night locations
        description: All if no query argument is given
        operationId: queryNightLocationParent
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/NightLocation'


  /night_locations/{loc_id}/child_locs:
      parameters:
        - name: loc_id
          in: path
          required: true
          description: night location id
          schema:
            type: integer
      get:
        tags:
          - nightLocations
        summary: Query night location children
        description: All if no query argument is given
        operationId: queryNightLocationChildren
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/NightLocation'


  /night_locations/{loc_id}/inmate_assigned:
      parameters:
        - name: loc_id
          in: path
          required: true
          description: night location id
          schema:
            type: integer
      get:
        tags:
          - nightLocations
        summary: Query inmate assigned to this night location (bed)
        description: Applies only to beds
        operationId: queryNightLocationAssignedInmate
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/Inmate'



  /institutions/{ins_code}/patrol_checkpoints:
      parameters:
        - name: ins_code
          in: path
          required: true
          description: Institution code
          schema:
            type: string
      get:
        tags:
          - patrolCheckpoints
        summary: Query checkpoints
        description: All if no query argument is given
        operationId: queryCheckpoints
        parameters:
          - name: id
            in: query
            schema:
              type: integer
            description: checkpoint id
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolCheckPoint'
          '400':
            description: invalid argument

            
  /checkpoints/{ckpt_id}:
      parameters:
        - name: ckpt_id
          in: path
          required: true
          description: Checkpoint ID
          schema:
            type: integer

  
  /institutions/{ins_code}/patrol_tours:
  
    parameters:
      - name: ins_code
        in: path
        description: Institution code
        required: true
        schema:
          type: string
  
    get:          
      tags:
        - patrolTours
      summary: Query tours
      operationId: queryTours
      description: All if no argument is given
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          description: tour id
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatrolTour'
        '400':
          description: invalid argument
          
          

  /tours/{tour_id}:
      parameters:
        - name: tour_id
          in: path
          description: Tour id
          required: true
          schema:
            type: integer


  /tours/{tour_id}/patrol_checkpoints:
      parameters:
        - name: tour_id
          in: path
          description: Tour id
          required: true
          schema:
            type: integer
      get:          
        tags:
          - patrolTours
        summary: Query checkpoints assigned to tour
        operationId: queryTourCheckpoints
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolCheckPoint'
          '400':
            description: invalid argument
            
      
          
  /institution/{ins_code}/patrol_instances:
      parameters:
        - name: ins_code
          in: path
          description: Institution code
          required: true
          schema:
            type: string
      get:
        tags:
          - patrolInstances
        summary: Query patrol instances
        operationId: queryPatrolInstances
        description: All if no argument is given
        parameters:
          - name: id
            in: query
            schema:
              type: integer
            description: patrol instance id
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolInstance'
          '400':
            description: invalid argument
            
  /patrolI_instances/{patrol_inst_id}:
      parameters:
        - name: patrol_inst_id
          in: path
          description: Patrol instance id
          required: true
          schema:
            type: integer
  
            
  /patrol_instances/{patrol_inst_id}/inst_checkpoints:
      parameters:
        - name: patrol_inst_id
          in: path
          description: Patrol instance id
          required: true
          schema:
            type: integer
   
      get:
        tags:
          - patrolInstances
        summary: Query patrol instance checkpoints
        operationId: queryPatrolInstanceCheckpoints

        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolInstCheckpoint'
          '400':
            description: invalid argument
            
      post:
        tags:
          - patrolInstances
        summary: Create instance checkpoint
        operationId: createPatrolInstCheckpoint
        requestBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatrolInstCheckpoint'
          description: Array of patrol instance checkpoint objects
          required: true
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: integer
                  description: instance checkpoint id
          '400':
            description: invalid argument
          '409':
            description: already existed
  
  /patrol_instances/{patrol_inst_id}/patrol_log_intervals:
      parameters:
        - name: patrol_inst_id
          in: path
          description: Patrol instance ID
          required: true
          schema:
            type: integer
  
      get:
        tags:
          - patrolInstances
        summary: Query patrol log intervals
        operationId: queryPatrolLogIntervals

        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolLogInterval'
          '400':
            description: invalid arguments
            
      post:
        tags:
          - patrolInstances
        summary: Create patrol log interval
        operationId: createPatrolLogInterval
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolLogInterval'
          description: Patrol log interval object
          required: true
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: integer
                  description: patrol log interval id
          '400':
            description: invalid argument
          '409':
            description: already existed
  
  /patrol_instances/{patrol_inst_id}/handover_records:
      parameters:
        - name: patrol_inst_id
          in: path
          description: Patrol instance ID
          required: true
          schema:
            type: integer
            
      post:
        tags:
          - patrolInstances
        summary: Create patrol handover record
        operationId: createPatrolHandover record
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolHandoverRecord'
          description: Patrol handover record object
          required: true
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: integer
                  description: handover record id
          '400':
            description: invalid argument
          '409':
            description: already existed
  
  /patrol_instances/{patrol_inst_id}/patrol_comments:
      parameters:
        - name: patrol_inst_id
          in: path
          description: Patrol instance ID
          required: true
          schema:
            type: integer
  
      get:
        tags:
          - patrolInstances
        summary: Query patrol comments
        operationId: queryPatrolComments
        responses:
            '200':
              description: succeeded
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatrolComment'
            '400':
              description: invalid arguments
              
      post:
        tags:
          - patrolInstances
        summary: Create patrol Comment
        operationId: createPatrolComment
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolComment'
          description: Patrol comment object
          required: true
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: integer
                  description: patrol comment id
          '400':
            description: invalid argument
          '409':
            description: already existed
  
  
  /patrol_log_intervals/{log_interval_id}/patrol_log_entries:
      parameters:
        - name: log_interval_id
          in: path
          description: Patrol log interval ID
          required: true
          schema:
            type: integer
  
      get:
        tags:
          - patrolLogIntervals
        summary: Query patrol log entries
        operationId: queryPatrolLogEntries
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolLogEntry'
          '400':
            description: invalid arguments
  
  /patrol_log_intervals/{log_interval_id}/patrol_notes:
      parameters:
        - name: log_interval_id
          in: path
          description: Patrol log interval ID
          required: true
          schema:
            type: integer
      get:
        tags:
          - patrolLogIntervals
        summary: Query patrol notes
        operationId: queryPatrolNotes
        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PatrolNote'
          '400':
            description: invalid arguments
  
  /patrol_log_intervals/{log_interval_id}/patrol_miss_reason:
      parameters:
        - name: log_interval_id
          in: path
          description: Patrol log interval ID
          required: true
          schema:
            type: integer
      get:
        tags:
          - patrolLogIntervals
        summary: Get patrol miss reason
        operationId: getPatrolMissReason

        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/PatrolMissReason'
          '400':
            description: invalid arguments
  
  
  /patrol_log_intervals/{log_interval_id}/patrol_miss_acceptance_reason:
      parameters:
        - name: log_interval_id
          in: path
          description: Patrol log interval ID
          required: true
          schema:
            type: integer
      get:
        tags:
          - patrolLogIntervals
        summary: Get patrol miss acceptance reason
        operationId: getPatrolMissAcceptanceReason

        responses:
          '200':
            description: succeeded
            content:
              application/json:
                schema:
                  type: object
                  items:
                    $ref: '#/components/schemas/PatrolMissAcceptanceReason'
          '400':
            description: invalid arguments
  
  
  /patrol_log_entries/{log_entry_id}:
      parameters:
        - name: log_entry_id
          in: path
          description: Patrol log entry id
          required: true
          schema:
            type: integer
  
      put:
        tags:
          - patrolLogEntries
        summary: Update patrol log entry
        operationId: updatePatrolLogEntry
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolLogEntry'
          description: Patrol log entry object
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument
          '404':
            description: not found
  
  /patrol_notes/{patrol_note_id}:
      parameters:
        - name: patrol_note_id
          in: path
          description: Patrol note id
          required: true
          schema:
            type: integer
  
      put:
        tags:
          - patrolNotes
        summary: Update patrol note
        operationId: updatePatrolNote
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolNote'
          description: Patrol note object
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument
          '404':
            description: not found
  
      delete:
        tags:
          - patrolNotes
        summary: Delete patrol log entry
        operationId: deletePatrolLogEntry
        responses:
          '400':
            description: invalid argument
          '404':
            description: not found
 
  /patrol_comments/{patrol_comment_id}:
      parameters:
        - name: patrol_comment_id
          in: path
          description: Patrol comment id
          required: true
          schema:
            type: integer
  
      put:
        tags:
          - patrolComments
        summary: Update patrol comment
        operationId: updatePatrolComment
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolComment'
          description: Patrol note object
          required: true
        responses:
          '200':
            description: succeeded
          '400':
            description: invalid argument
          '404':
            description: not found
  
      delete:
        tags:
          - patrolComments
        summary: Delete patrol comment
        operationId: deletePatrolComment
        responses:
          '400':
            description: invalid argument
          '404':
            description: not found



components:
  schemas:
    PatrolTour:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        tour_code:
          type: string
        desc:
          type: string
        starttime:
          type: number
        endtime:
          type: number
        interval:
          type: number
        start_allowance:
          type: number
        end_allowance:
          type: number
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolCheckPoint:
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
        desc:
          type: string
        display_order:
          type: integer
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolInstance:
      required:
        - id
      properties:
        id:
          type: integer
        institution_code:
          type: string
        area_code:
          type: string
        post_code:
          type: string
        desc:
          type: string
        start_time:
          type: number
        end_time:
          type: number
        interval:
          type: number
        start_allowance:
          type: number
        end_allowance:
          type: number
        cur_assigned_to:
          type: number
        signed_by:
          type: string
        time_signed:
          type: number
        checked_by:
          type: string
        time_checked:
          type: number
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolLogInterval:
      required:
        - id
      properties:
        id:
          type: integer
        start_time:
          type: number
        end_time:
          type: number
        missed_reason:
          type: string
        supervisor_comment:
          type: string
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolInstCheckpoint:
      required:
        - id
      properties:
        id:
          type: integer
        rfid_code:
          type: string
        name:
          type: string
        desc:
          type: string
        display_order:
          type: string
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolLogEntry:
      required:
        - id
      properties:
        id:
          type: integer
        supervisor_id:
          type: string
        mobileId:
          type: string
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolNote:
      required:
        - id
      properties:
        id:
          type: integer
        text:
          type: string
        audio:
          type: object
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    DailyPatrolInspRecord:
      required:
        - id
      properties:
        id:
          type: integer
        start_date:
          type: number
        end_date:
          type: number
        insp_officer:
          type: string
        time_insp_officer_signed:
          type: number
        sys_controller:
          type: string
        time_syscon_signed:
          type: number
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolMissReason:
      required:
        - code
      properties:
        code:
          type: string
        cht_desc:
          type: string
        en_desc:
          type: string
        display_order:
          type: integer
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolMissAcceptanceReason:
      required:
        - code
      properties:
        code:
          type: string
        cht_desc:
          type: string
        en_desc:
          type: string
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number        
    PatrolAuxAssignment:
      required:
        - id
      properties:
        id:
          type: integer
        staff_id:
          type: string
        desc:
          type: string
        start_time:
          type: number
        end_time:
          type: number
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number    
    PatrolHandoverRecord:
      required:
        - id
      properties:
        id:
          type: integer
        reassigned_by:
          type: string
        from_staff:
          type: string
        to_staff:
          type: string
        qr_code:
          type: string
        time_confirmed:
          type: number
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
    PatrolComment:
      required:
        - id
      properties:
        id:
          type: integer
        text_content:
          type: string
        created_by:
          type: string
        time_created:
          type: number
        updated_by:
          type: string
        time_updated:
          type: number
          
    Staff:
      required:
        - id
      properties:
        id:
          type: integer
        rfid:
          type: string
          
    Inmate:
      required:
        - id
      properties:
        id:
          type: integer
        cin:
          type: integer
        en_firstname:
          type: string
        en_lastname:
          type: string
        zht_firstname:
          type: string
        zht_lastname:
          type: string
        on_mo_list:
          type: boolean
        on_e_list:
          type: boolean
          
    Party:
      required:
        - id
      properties:
        id:
          type: integer
        en_name:
          type: string
        zht_name:
          type: string
          
    MovementLocation:
      required:
        - id
      properties:
        id:
          type: integer
        en_name:
          type: string
        zht_name:
          type: string
          
    MovementAuthorizationReq:
      required:
        - id
      properties:
        id:
          type: integer
        time:
          type: integer
          
    MusterCount:
      required:
        - id
      properties:
        id:
          type: integer
        type:
          type: string
        chit_no:
          type: integer
        activated:
          type: integer
        overall_count:
          type: integer
        main_gate_count:
          type: integer
        ro_count:
          type: integer
        
    LocationMuster:
      required:
        - id
      properties:
        id:
          type: integer
        type:
          type: string
        chit_no:
          type: integer
        overall_count:
          type: integer
        mo_count:
          type: integer
        e_list_count:
          type: integer
          
    NightLocation:
      required:
        - id
      properties:
        id:
          type: integer
        en_name:
          type: string
        zht_name:
          type: string
        is_lockup_loc:
          type: boolean
        verified:
          type: boolean
          
    MOListRecord:
      required:
        - id
      properties:
        id:
          type: integer
        mo_notes:
          type: string
    
    MOCheckRecord:
      required:
        - id
      properties:
        id:
          type: integer
        time_checked:
          type: integer
        condition_code:
          type: string
        notes:
          type: string
    
    EListRecord:
      required:
        - id
      properties:
        id:
          type: integer
        e_list_notes:
          type: string
    
    EListCheckRecord:
      required:
        - id
      properties:
        id:
          type: integer
        time_checked:
          type: integer
        condition_code:
          type: string
        notes:
          type: string