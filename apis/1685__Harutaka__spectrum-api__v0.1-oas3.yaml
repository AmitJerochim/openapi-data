openapi: 3.0.0
info:
  title: Spectrum API
  description: API for the Spectrum NST based Stylization App
  termsOfService: 'https://www.google.com/policies/terms/'
  contact:
    email: contact@snippets.local
  license:
    name: BSD License
  version: "v0.1-oas3"
security:
  - DRF_Token: []
paths:
  /creation/:
    post:
      operationId: creation_list
      description: Get all creations belonging to a given user
      responses:
        '200':
          description: A list of creations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Creation'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - creation
    parameters: []
  /creation/new/:
    post:
      operationId: creation_create
      description: 'Create a new model `creations.Creation`'
      requestBody:
        description: Contains information for creating a new creation
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  format: uuid
                creationName:
                  type: string
      responses:
        '200':
          description: 'New creation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project doesn\'t exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - creation
    parameters: []
  /login/:
    post:
      operationId: login
      description: 'Login to Spectrum'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: 'Login success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: 
                    type: string
      tags:
        - login
    parameters: []
  /object/:
    post:
      operationId: object_list
      description: Returns a list of objects given a project ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: 'List of objects belonging to the project'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
      tags:
        - object
    parameters: []
  /object/delete/:
    post:
      operationId: object_delete
      description: Deletes an object given its ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                  format: uuid
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean
      tags:
        - object
    parameters: []
  /object/new/:
    post:
      operationId: object_new_create
      description: 'Create a new object'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: 
                  type: string
                  format: binary
                projectName:
                  type: string
      responses:
        '200':
          description: 'ID and url of the object'
          content:
            application/json:
              schema:
                type: object
                properties:
                  url: 
                    type: string
                    format: url
                  id:
                    type: string
                    format: uuid
      tags:
        - object
    parameters: []
  /project/:
    post:
      operationId: project_list
      description: ''
      responses:
        '200':
          description: 'List of all projects'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    user:
                      type: string
                    name:
                      type: string
                    coverUrl:
                      type: string
                      format: url
      tags:
        - project
    parameters: []
  /project/delete/:
    post:
      operationId: project_delete
      description: 'Deletes a project given its ID'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted: 
                    type: boolean
      tags:
        - project
    parameters: []
  /project/new/:
    post:
      operationId: project_new_create
      description: 'Creates a new project'
      requestBody:
        description: Form Data for creating a new project
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                projectName:
                  type: string
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  user:
                    type: string
                  name:
                    type: string
                  coverUrl:
                    type: string
                    format: url
      tags:
        - project
    parameters: []
  /register/:
    post:
      operationId: register_create
      description: |-
        This class extends the CreateAPIView generic class.
        This class allows creation of Users without restriction.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
    parameters: []
  /render/:
    post:
      operationId: render_create
      description: >-
        Takes either a `project.Project` ID or `creation.Creation` ID, then
        returns a tree of all the project **ass**ets
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    creation:
                      type: string
                      format: uuid
                - type: object
                  properties:
                    project:
                      type: string
                      format: uuid
      responses:
        '200':
          description: 'Project Tree'
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      project_id:
                        type: string
                        format: uuid
                      user:
                        type: integer
                      project_name:
                        type: string
                      cover_image:
                        type: string
                        format: url
                      object_set:
                        type: array
                        items:
                          type: object
                          properties:
                            object_id:
                              type: string
                              format: uuid
                            project:
                              type: string
                              format: uuid
                            object_name:
                              type: string
                            object_url:
                              type: string
                              format: url
                            texture_set:
                              type: array
                              items:
                                type: object
                                properties:
                                  texture_id: 
                                    type: string
                                    format: uuid
                                  texture_type:
                                    type: string
                                  texture_index:
                                    type: integer
                                  texture_name:
                                    type: string
                                  texture_original:
                                    type: string
                                    format: url
                                  obj:
                                    type: string
                                    format: uuid
                  creation:
                    type: object
                    properties:
                      creation_id:
                        type: string
                        format: uuid
                      creation_name:
                        type: string
                      project:
                        type: string
                        format: uuid
                      user:
                        type: integer
                      style_set:
                        type: array
                        items:
                          type: object
                          properties:
                            style_id:
                              type: string
                              format: uuid
                            style_name:
                              type: string
                            original_image:
                              type: string
                              format: url
                            stylized_image:
                              type: string
                              format: url
                            texture:
                              type: object
                              properties:
                                texture_id: 
                                  type: string
                                  format: uuid
                                texture_type:
                                  type: string
                                texture_index:
                                  type: integer
                                texture_name:
                                  type: string
                                texture_original:
                                  type: string
                                  format: url
                                obj:
                                  type: string
                                  format: uuid
                            creation:
                              type: string
                              format: uuid
      tags:
        - render
    parameters: []
  /style/new/:
    post:
      operationId: style_create
      description: 'Create a new style'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                style_name:
                  type: string
                original_image:
                  type: string
                  format: binary
                texture:
                  type: string
                  format: uuid
                creation:
                  type: string
                  format: uuid
      responses:
        '200':
          description: 'The new style'
          content:
            application/json:
              schema:
                type: object
                properties:
                  style_id:
                    type: string
                    format: uuid
                  style_name:
                    type: string
                  original_image:
                    type: string
                  stylized_image:
                    type: string
                  texture:
                    type: string
                    format: uuid
                  creation:
                    type: string
                    format: uuid
      tags:
        - style
    parameters: []
  /texture/:
    post:
      operationId: texture_list
      description: 'Get all the textures for an object'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ['user', 'projectName', 'objectName']
              properties:
                user:
                  type: string
                projectName:
                  type: string
                objectName:
                  type: string
                meshIndex:
                  type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    index:
                      type: integer
                    type:
                      type: string
                    url:
                      type: string
      tags:
        - texture
    parameters: []
  /texture/new/:
    post:
      operationId: texture_create
      description: 'Create a new texture'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                objectId:
                  type: string
                  format: uuid
                textureType:
                  type: string
                file:
                  type: string
                  format: binary
                textureIndex:
                  type: integer
      responses:
        '200':
          description: 'The texture ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  id:
                    type: string
                    format: uuid
      tags:
        - texture
    parameters: []
servers:
  - url: 'http://localhost:5000/api'
components:
  securitySchemes:
    DRF_Token:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Error:
      properties:
        success:
          type: boolean
        error:
          type: string
    Creation:
      properties:
        creation_id:
          type: string
          format: uuid
        creation_name:
          type: string
        project:
          type: string
          format: uuid
        user:
          type: integer
    Object:
      properties:
        object_id:
          type: string
          format: uuid
        project:
          type: string
          format: uuid
        object_name:
          type: string
        object_url:
          type: string
          format: url
    User:
      required:
        - username
        - password
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        username:
          title: Username
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          type: string
          pattern: '^[\w.@+-]+$'
          maxLength: 150
          minLength: 1
        password:
          title: Password
          type: string
          minLength: 1
