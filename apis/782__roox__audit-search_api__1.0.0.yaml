penapi: 3.0.0
info:
  description:  Получение информации об попытках авторизации или совершения других действий.
  version: 1.0.0
  title: Audit Search API
servers:
  - url: /
paths:
  /operationAudit/authSuccessSummary:
    post:
      description: >
        Получение отчетности по посещаемости.<br>

        Производит поиск по ID клиента и выдает список данных, содержащий информацию о времени первой и последней
        авторизации данных пользователй в системе.
        <br>
        Так-же сождержит отдельные записи для разных типов логина, как-то oauth2, oauth2m2m.
        <br>
        Возвращет так-же realm в который производил логин клиент, по разным реалмам выдает статистику отдельно.
      operationId: AuditAuthSuccessSummary.getOperationAuditsSummaryByPrincipal
      summary: Получение сводки о датах успшной авторизации конкретных аккаунтов.
      tags:
        - summary
      parameters:
#        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/ContentType-json"
#        - $ref: "#/components/parameters/scope"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuditSummaryRequest"
      responses:
        "200":
          description: Успешный ответ. В response body информация о событиях успешной авторизации.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthEntryTimes"
        "400":
          description: Некорректный запрос. В теле запроса отсутствует обязательная информация. Описание ошибки в response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
              example: {
                "error": {
                  "code": -900,
                  "message": "Validation failed for argument [0] ..... ; default message [size must be between 1 and 1000]] ",
                  "data": [
                    {
                      "defaultMessage": "size must be between 1 and 1000",
                      "objectName": "auditSummaryRequest",
                      "field": "principalIds",
                      "bindingFailure": false,
                      "code": "Size"
                    }
                  ]
                }
              }
        "401":
          description: "При передаче невалидного токена или токена с истекшим сроком действия, а также при блокировке учетной записи абонента и при блокировке абоненту доступа к конкретному ресурсу по client_id будет возвращен ответ Unauthorized"
          content:
            application/json: {}
#              schema:
#                $ref: "#/components/schemas/ErrorResponse"
#              example:
#                "error": "expired_token"
#                "error_description": "The request contains a token no longer valid."
        "403":
          description: "Клиент заблокирован или недостаточный уровень авторизации. Если HTTP запрос сделан с токеном не имеющим
            достаточный уровень доступа."
          content:
            application/json: {}
#              schema:
#                anyOf:
#                  - $ref: "#/components/schemas/ResourceForbiddenReponse"
#                  - $ref: "#/components/schemas/ErrorResponse"
#                example:
#                  "error": "client_blocked"
#                  "error_description": "Client is blocked."
        "500":
          description: "Произошла неопознання ошибка на стороне сервиса. Обратитесь в тех-поддержку."



security:
  - bearerAuth: []
components:
  parameters:
    ContentType-form:
      description: content-type для  запроса.
      in: header
      name: Content-Type
      schema:
        type: string
        enum:
          - application/x-www-form-urlencoded
        default: application/x-www-form-urlencoded
      required: true
    ContentType-json:
      description: content-type для  запроса.
      in: header
      name: Content-Type
      schema:
        type: string
        enum:
          - application/json
        default: application/json
      required: true
    Authorization:
      description: >
        Авторизационный токен в системе. Только атворизированые пользователи могут полчить дсоутп к данному АПИ.
        <br>
        Необходимо иметь права `ROLE_WebSSO_ContactCenter_Operator`
      in: header
      name: Authorization
      schema:
        type: string
        default: Bearer XXXXX
      required: true

    scope:
      description: "идентификатор ресурса защищаемого сервиса, опционально, регистрозависимо. По умолчанию любой ответ авторизации содержит scope cn, предоставляющий информацию о номере телефона. Для получения дополнительных атрибутов необходимо передать соответствующий список scope через пробел при аутентификации, например scope=networkAuthenticationType displayName. В этом случае при валидации токена будет возвращен расширенный список атрибутов. Возможные для запрашивания атрибуты конфигурируются администатором WebSSO отдельно для каждого сервиса"
      in: query
      name: scope
      required: false
      schema:
        type: string
      example: "cn telephoneNumber orgRoles"
  schemas:

    AuditSummaryRequest:
      type: object
      description: Разрешено передать JSON-объект только с одиним полем -- `principalIds`, все остальыне поля указывать
        не обязательно.
      properties:
        principalIds:
          description: "Перечисление идентификаторов пользователей для которых необходимо найти информацию"
          type: array
          maxLength: 1000
          minLength: 1
          items:
            type: string

        realm:
          description: "группа пользователей WebSSO, например customer"
          type: string
          example: customer
        clientId:
          type: string
          description: OAuth клиент по котрому производился логин
          example: oauth2m2m
        includeDsc:
          type: boolean
          description: Надо ли заполнять значение description
      required:
        - principalIds
    ValidationErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: int
              value: -900
            message:
              type: string
              description: Описание оишбки и какие параметры заданы некорректно
            data:
              type: array
              description: Cписок полей не прошедгших валидацию и описание деталей для каждого поля, в виде объекта
              items:
                type: object
                properties:
                  field:
                    type: string
                  defaultMessage:
                    type: string


    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: "код ошибки согласно спецификации OAuth 2.0 https://tools.ietf.org/html/rfc6749#section-5.2[RFC 6749 пункт 5.2]"
        error_description:
          type: string
          description: "Описание ошибки, например 'The request contains a token no longer valid.'"
    ResourceForbiddenReponse:
      allOf:
        - $ref: '#/components/schemas/TokenInfoResponse'
      type: object
      properties:
        advices:
          type: object
          description: содержит описание ошибки. Например, требуемый уровень авторизации для данного scope
          additionalProperties: true
          example:
            required_auth_level: 9

    AuthEntryTimes:
      description: "Информация обо времени успешной авторизации. Первой и последней успешной попытки."
      properties:
        id:
          type: string
          description: Уникальный идентификатор записи статистики, не стоит на него завязываться.
          example: sso_____11111111-eeee-aaaa-2222-333333333333
        firstAuth:
          type: string
          description: Время (в ISO-UTC) первой успешной авторизации
          format: date-time
        lastAuth:
          type: string
          description: Время (в ISO-UTC) последней успешной авторизации
          format: date-time
        firstAuthAuditId:
          type: string
          description: Идентификатор <u>первой</u> записи адуита для даного пользователя.<br>
            Можно по этому id найти в БД детали пособытию аудита.
          example: sso_____11111111-eeee-aaaa-2222-444444444444
        lastAuthAuditId:
          type: string
          description: Идентификатор <u>последней</u> записи адуита для даного пользователя.<br>
            Можно по этому id найти в БД детали пособытию аудита.<br>
            <b><font color="red">Примечание:</font></b> Если пользователь входил только один раз, то будет равно значению
            в поле `firstAuthAuditId`
          example: sso_____11111111-eeee-aaaa-2222-555555555555
        realm:
          description: "группа пользователей WebSSO, например customer"
          type: string
          default: "customer"
        clientId:
          description: OAuth клиент по котрому производился логин
          example: oauth2m2m
        principalId:
          description: идентификатор учетной записи в системе
          type: string
          example: bis_____11111111-eeee-aaaa-4444-eeeeeeeeeeee
        dsc:
          type: string
          description: описание записи, комментарий, заполняется вручную, в случае если сис-админы произодили ручные
            манипуляции с данными. В случае автоматического создаения запии может иметь технические данные по HTTP-запросу
            не стоит каким-либо образом завязываться на данную информацию, она нужна скорее для отладки.

      additionalProperties: false