openapi: 3.0.0
info:
  description: API de comunicação Atenas Controle de Entregas
  version: "1.0.0-oas3"
  title: Atenas API
  termsOfService: 'http://www.atenascontroledeentregas.com.br/contato'
  contact:
    email: atenas@atenascontroledeentregas.com.br
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Documentos
    description: 'Inserir, Editar ou Excluir'
    externalDocs:
      description: Acesse nosso site
      url: 'http://www.dbfrete.com.br'
security:
  - atenas_auth: []
paths:
  /login:
    get:
      tags:
        - Login
      summary: Gerar novo token de acesso
      operationId: createToken
      parameters:
        - name: client_id
          in: header
          description: ID do DashBoard do usuário
          required: true
          schema:
            type: string
            format: string
        - name: client_secret
          in: header
          description: Secret ID do Usuário
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Token supplied
        '404':
          description: Autorização não encontrada
  /notasfiscais:
    post:
      tags:
        - Notas Fiscais
      security:
        - atenas_auth: []
      summary: Adicionar notas fiscais
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notasfiscais'
        description: Objeto precisa ser informado
        required: true
    put:
      tags:
        - Notas Fiscais
      security:
        - atenas_auth: []
      summary: Alterar Nota fiscal
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notafiscal'
        description: Objeto precisa ser informado
        required: true
  '/notasfiscais/{idkey}':
    get:
      tags:
        - Notas Fiscais
      summary: Buscar Nota Fiscal por Chave
      operationId: getNFeByIdKey
      parameters:
        - name: idkey
          in: path
          description: Chave da Nota Fiscal
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notafiscal'
        '400':
          description: Invalid Token supplied
        '404':
          description: Nota não encontrada
    delete:
      tags:
        - Notas Fiscais
      summary: Excluir Nota Fiscal por Chave
      description: Chave da Nota Fiscal
      operationId: deleteNFeByIdKey
      parameters:
        - name: idkey
          in: path
          description: Chave da Nota Fiscal
          required: true
          schema:
            type: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '404':
          description: Nota Fiscal não encontrada
  /documentos:
    post:
      tags:
        - Documentos
      security:
        - atenas_auth: []
      summary: Adicionar documentos
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentos'
        description: Objeto precisa ser informado
        required: true
    put:
      tags:
        - Documentos
      security:
        - atenas_auth: []
      summary: Alterar documento
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: token inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documento'
        description: Objeto precisa ser informado
        required: true
  '/documentos/{idkey}':
    get:
      tags:
        - Documentos
      summary: Buscar Documento expecifico
      operationId: getDocByIdKey
      parameters:
        - name: idkey
          in: path
          description: IdKey do documento
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documento'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    delete:
      tags:
        - Documentos
      summary: Excluir Documento expecifico
      description: informar idkey do documento
      operationId: deleteDocByIdKey
      parameters:
        - name: idkey
          in: path
          description: IdKey do documento
          required: true
          schema:
            type: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '404':
          description: Documento não encontrado
  '/documentos/{idkey}/notasfiscais':
    get:
      tags:
        - Documentos
      summary: Buscar Notas Fiscais por Documento
      operationId: getDocnfeByIdKey
      parameters:
        - name: idkey
          in: path
          description: IdKey do documento
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notasfiscais'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /viagem:
    post:
      tags:
        - Viagem
      security:
        - atenas_auth: []
      summary: Adicionar viagem
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: token inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/viagem'
    put:
      tags:
        - Viagem
      security:
        - atenas_auth: []
      summary: Alterar Viagem
      description: ''
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: token inválido
        '401':
          description: token invalido
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/viagem'
  '/viagem/{idkey}':
    get:
      tags:
        - Viagem
      summary: Buscar Viagem por Chave
      operationId: getViagemByIdKey
      parameters:
        - name: idkey
          in: path
          description: Chave da Viagem
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/viagem'
        '400':
          description: Invalid Token supplied
        '404':
          description: Viagem não encontrada
    delete:
      tags:
        - Viagem
      summary: Excluir viagem por Chave
      description: Chave da Viagem
      operationId: deleteViagemByIdKey
      parameters:
        - name: idkey
          in: path
          description: Chave da Viagem
          required: true
          schema:
            type: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: OK or ERROR|DETAIL
        '400':
          description: idkey inválido
        '404':
          description: Viagem não encontrada
  '/viagem/{idkey}/documentos':
    get:
      tags:
        - Viagem
      summary: Buscar Documentos da Viagem
      operationId: getViagemdocByIdKey
      parameters:
        - name: idkey
          in: path
          description: Chave da Viagem
          required: true
          schema:
            type: string
            format: string
      security:
        - atenas_auth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentos'
        '400':
          description: Invalid Token supplied
        '404':
          description: Viagem não encontrada
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://us-central1-atenascontroleentregas.cloudfunctions.net/api/v1'
components:
  requestBodies:
    viagem:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/viagem'
      description: Objeto precisa ser informado
      required: true
  securitySchemes:
    atenas_auth:
      type: apiKey
      name: x-access-token
      in: header
  schemas:
    notafiscal:
      required:
        - idkey
        - numero
        - emissao
      type: object
      properties:
        emissao:
          type: string
          format: date-time
        numero:
          type: integer
        idkey:
          type: string
        peso:
          type: number
        qtde:
          type: number
        m3:
          type: number
        peso_cubado:
          type: number
        valor:
          type: number
        documento:
          type: string
    notasfiscais:
      additionalProperties: false
      properties:
        notasfiscais:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/notafiscal'
      required:
        - notasfiscais
      type: object
    documento:
      required:
        - emissao
        - contatodestino
        - contatoorigem
        - destino
        - endereco
        - idkey
        - keydestino
        - keyorigem
        - nome
        - numero
        - origem
        - tiposervico
      type: object
      properties:
        viagem:
          type: string
        emissao:
          type: string
          format: date-time
          description: Data de emissao
        nome:
          type: string
        numero:
          type: integer
        idkey:
          type: string
        tiposervico:
          type: string
          enum:
            - coleta
            - entrega
        origem:
          type: string
        keyorigem:
          type: string
        contatoorigem:
          type: string
        emailorigem:
          type: string
        destino:
          type: string
        keydestino:
          type: string
        contatodestino:
          type: string
        emaildestino:
          type: string
        obs:
          type: string
        dataprevisao:
          type: string
          format: date-time
          description: Data de previsão
        chavedoc:
          type: string
        horario_disponivel:
          type: object
          properties:
            horainicio:
              type: string
            horafim:
              type: string
            obs:
              type: string
        serie:
          type: string
        peso:
          type: number
        qtde:
          type: number
        m3:
          type: number
        peso_cubado:
          type: number
        vlr_merc:
          type: number
        vlr_total:
          type: number
        notasfiscaisref:
          type: array
          items:
            type: string
        notasfiscais:
          type: array
          items:
            $ref: '#/components/schemas/notafiscal'
        endereco:
          minItems: 1
          type: array
          items:
            required:
              - bairro
              - cep
              - cidade
              - logradouro
              - uf
            type: object
            properties:
              logradouro:
                type: string
              numero:
                type: string
              bairro:
                type: string
              cep:
                pattern: '^[0-9]{5}-[0-9]{3}$'
                type: string
              cidade:
                type: string
              uf:
                type: string
                enum:
                  - AC
                  - AL
                  - AP
                  - AM
                  - BA
                  - CE
                  - DF
                  - ES
                  - GO
                  - MA
                  - MT
                  - MS
                  - MG
                  - PA
                  - PB
                  - PR
                  - PE
                  - PI
                  - RJ
                  - RN
                  - RS
                  - RO
                  - RR
                  - SC
                  - SP
                  - SE
                  - TO
    documentos:
      additionalProperties: false
      properties:
        documentos:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/documento'
      required:
        - documentos
      type: object
    viagem:
      type: object
      required:
        - descricao
        - dataviagem
        - exigircomprovante
        - idkey
        - motorista
        - numero
        - placa
      properties:
        descricao:
          type: string
        dataviagem:
          type: string
          format: date-time
        numero:
          type: integer
        idkey:
          type: string
        motorista:
          pattern: '^[0-9]{11}$'
          type: string
        placa:
          type: string
        exigircomprovante:
          type: boolean
        obs:
          type: string
        documentosref:
          type: array
          items:
            type: string
        documentos:
          type: array
          items:
            $ref: '#/components/schemas/documento'
