openapi: "3.0.1"
info:
  title: "Keyrock RFQ API"
  version: "0.1.0"
servers:
- url: "https://staging-api.keyrock.io"
- url: "https://api.keyrock.io"
paths:
  /balances:
    get:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBalances"
      security:
      - api_key: []
  /rfq/{quote_id}:
    delete:
      operationId: "rejectRFQ"
      parameters:
      - name: "quote_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "400 response"
          content: {}
        409:
          description: "409 response"
          content: {}
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuoteRejection"
      security:
      - api_key: []
  /rfq:
    get:
      operationId: "getRFQ"
      responses:
        400:
          description: "400 response"
          content: {}
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllQuotes"
      security:
      - api_key: []
    post:
      operationId: "initiateRFQ"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuoteRequest"
        required: true
      responses:
        400:
          description: "400 response"
          content: {}
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuoteResponse"
      security:
      - api_key: []
  /rfq/{quote_id}/execute:
    post:
      operationId: "acceptRFQ"
      parameters:
      - name: "quote_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "400 response"
          content: {}
        409:
          description: "409 response"
          content: {}
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradeExecution"
      security:
      - api_key: []
components:
  schemas:
    QuoteRequest:
      required:
      - "amount"
      - "instrument"
      - "side"
      type: "object"
      properties:
        instrument:
          type: "string"
        side:
          type: "string"
        amount:
          type: "number"
    Empty:
      title: "Empty Schema"
      type: "object"
    GetBalances:
      type: "array"
      items:
        required:
        - "free"
        - "symbol"
        - "total"
        type: "object"
        properties:
          symbol:
            type: "string"
          total:
            type: "number"
          free:
            type: "number"
    QuoteRejection:
      required:
      - "cost"
      - "executed_at"
      - "instrument"
      - "price"
      - "quote_id"
      - "side"
      - "trade_id"
      type: "object"
      properties:
        quote_id:
          type: "string"
          format: "uuid"
        instrument:
          type: "string"
        side:
          type: "string"
        amount:
          type: "number"
        price:
          type: "number"
        cost:
          type: "number"
        created_at:
          type: "string"
          format: "date-time"
        rejected_at:
          type: "string"
          format: "date-time"
        status:
          type: "string"
    AllQuotes:
      type: "array"
      items:
        required:
        - "cost"
        - "executed_at"
        - "instrument"
        - "price"
        - "quote_id"
        - "side"
        - "trade_id"
        type: "object"
        properties:
          quote_id:
            type: "string"
            format: "uuid"
          instrument:
            type: "string"
          side:
            type: "string"
          amount:
            type: "number"
          price:
            type: "number"
          cost:
            type: "number"
          created_at:
            type: "string"
            format: "date-time"
          rejected_at:
            type: "string"
            format: "date-time"
          status:
            type: "string"
    QuoteResponse:
      required:
      - "cost"
      - "created_at"
      - "expires_at"
      - "instrument"
      - "price"
      - "quote_id"
      - "side"
      type: "object"
      properties:
        quote_id:
          type: "string"
          format: "uuid"
        instrument:
          type: "string"
        side:
          type: "string"
        amount:
          type: "number"
        price:
          type: "number"
        cost:
          type: "number"
        created_at:
          type: "string"
          format: "date-time"
        expires_at:
          type: "string"
          format: "date-time"
        status:
          type: "string"
    TradeExecution:
      required:
      - "cost"
      - "executed_at"
      - "instrument"
      - "price"
      - "quote_id"
      - "side"
      - "trade_id"
      type: "object"
      properties:
        quote_id:
          type: "string"
          format: "uuid"
        instrument:
          type: "string"
        side:
          type: "string"
        amount:
          type: "number"
        price:
          type: "number"
        cost:
          type: "number"
        created_at:
          type: "string"
          format: "date-time"
        executed_at:
          type: "string"
          format: "date-time"
        status:
          type: "string"
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
