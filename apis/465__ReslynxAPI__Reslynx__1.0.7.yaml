openapi: 3.0.1
info:
  version: '1'
  title: 'API Customer'
  description: 'Customer Services'
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: /rest/v1.0/customerapi
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Hitss-Ecuador/TiaAPIS/1
  
tags: 
- name: Customer
  description: Servicios del cliente
paths:
  /customer/register:
    post:
      tags:
      - Customer
      summary: Registrar Usuario
      requestBody:
        description: json necesario para registrar un usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegister'
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Response'
  /customer:
    get:
      tags:
      - Customer
      summary: Lista de clientes
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomer'
  /customer/findById/{id}:
    get:
      tags:
      - Customer
      summary: Lista de clientes por Identificador
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomer'
  /customer/findByUsername/{userName}:
    get:
      tags:
      - Customer
      summary: Obtiene información de cliente por usuario
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomer'
  /customer/findByStatus/{status}:
    get:
      tags:
      - Customer
      summary: Obtiene información de cliente por estado
      parameters:
      - name: status
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomer'
  /customer/findBycompanyId/{companyId}:
    get:
      tags:
      - Customer
      summary: Obtiene información de cliente por compañia
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomer'
  /customer/update:
    post:
      tags:
      - Customer
      summary: Actualizar datos del Cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdate'
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas:
    RequestRegister:
      type: object
      properties:
        fullName:
          type: string
        typeIdentification:
          type: string
          description: Tipos de Identificación
          enum: 
          - CEDULA
          - RUC
          - PASAPORTE
        identification:
          type: string
        phone:
          type: string
        userName:
          type: string
        password:
          type: string
        so:
          type: string
        companyId:
          type: string
        channel:
          type: string
    Response: 
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    ResponseCustomer:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        customer:
          type: array
          items: 
            $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        typeIdentification:
          type: string
          description: Tipos de Identificación
          enum: 
          - CEDULA
          - RUC
          - PASAPORTE
        identification:
          type: string
        phone:
          type: number
        userName:
          type: string
        password:
          type: string
        so:
          type: string
        companyId:
          type: string
        channel:
          type: string
        registerDate:
          type: string
          format: date-time
        status:
          type: string
        modificationdate:
           type: string
           format: date-time
    RequestUpdate:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        typeIdentification:
          type: string
          description: Tipos de Identificación
          enum: 
          - CEDULA
          - RUC
          - PASAPORTE
        identification:
          type: string
        phone:
          type: string
        userName:
          type: string
        password:
          type: string
        so:
          type: string
        companyId:
          type: string
        channel:
          type: string
