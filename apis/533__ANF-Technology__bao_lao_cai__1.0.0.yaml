penapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: Server test
    url: https://api.baolaocai.anf-technology.com/
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ANF-Technology/bao_lao_cai/1.0.0
  
info:
  description: This is a API for Bao Lao Cai Project
  version: "1.0.0"
  title: Bao Lao Cai API
  contact:
    email: namvu1210@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: states
    description: Store state of post
paths:
  /states:
    get:
      summary: get all states
      operationId: getStates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  result:
                    type: object
                    properties:
                      states:
                        type: array
                        items:
                          $ref: '#/components/schemas/State'
      tags:
        - states
    post:
      tags:
        - states
      summary: Create State
      operationId: createState
      responses:
        '200':
          description: item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  resutl:
                    type: object
                    properties:
                      id: 
                        type: string
        '404':
          description: state not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  extra:
                    type: object
                    properties:
                      any:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
  /states/{id}:
    get:
      summary: get a states
      operationId: getStateById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  result:
                    type: object
                    properties:
                      states:
                        $ref: '#/components/schemas/State'
      tags:
        - states
    patch:
      tags:
        - states
      summary: Update State
      operationId: updateState
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  resutl:
                    type: object
                    properties:
                      id: 
                        type: string
        '404':
          description: state not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  extra:
                    type: object
                    properties:
                      any:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
components:
  schemas:
    State:
      type: object
      required:
        - name
        - isActive
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Tin chờ duyệt
        description:
          type: string
          example: Bài viết đã hoàn thành, chờ kiểm duyệt
        isActive:
          type: boolean
          example: True