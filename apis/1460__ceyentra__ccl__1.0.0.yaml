openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ceyentra/ccl/1.0.0
info:
  description: CCL Dealer application API
  version: "1.0.0"
  title: CCL Dealer API
  contact:
    email: info@ceyentra.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Auth
    description: OAuth2.0 based authorization related operations
  - name: Implement from CCL
    description: These end points should be implemented from CCL ERP
  - name: Implement by Ceyentra
    description: These end points will be implemented by ceyentra
security: 
  - oAuth: []
  
paths:
  /oauth/token:
    post:
      tags:
        - Auth
      summary: User login - give username, password and obtain user security tokens
      security: []
      requestBody:
        $ref: '#/components/requestBodies/credentials'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/TokenErrorResponse'
  /oauth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh token - give refresh token and obtain access token
      security: []
      requestBody:
        $ref: '#/components/requestBodies/RefreshTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/TokenErrorResponse'
          
  /dealers/registered:
    get:
      tags:  
        - Implement from CCL
      summary: Dealer registration - Get all registered dealers
      security: 
        - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
            $ref: '#/components/responses/DealerRegistrationResponse'
        
  /branches/locations:
    get:
      tags:
        - Implement from CCL
      summary: Get branch locations
      security: 
        - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
          $ref: '#/components/responses/LocationsResponse'
          
  /mos:
    get:
      tags:
        - Implement from CCL
      summary: Get marketing officers list
      security: 
        - oAuth: []
      parameters: 
       - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200': 
          $ref: '#/components/responses/MarketingOfficersResponse'
          
  /products:
    get:
      tags:
        - Implement from CCL
      summary: Get products list
      description: These products are the loan/insurance types facilitated by CCL. ex - Motorbikes,Car 
      security: 
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
          $ref: '#/components/responses/ProductsResponse'
          
  /assets:
    get:
      tags: 
       - Implement from CCL
      summary: Get assets list (Vehicle types)
      security: 
      - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
          $ref: '#/components/responses/AssetsResponse'
          
  /makes:
    get:
      tags: 
        - Implement from CCL
      summary: Get makes list
      security: 
      - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
          $ref: '#/components/responses/MakesResponse'
  
  /models:
    get:
      tags:
        - Implement from CCL
      summary: Get models list
      security: 
      - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LastDataFetchedTimestamp'
      responses:
        '200':
          $ref: '#/components/responses/ModelsResponse'
          
  /loan/calculator:
    post:
      tags: 
        - Implement from CCL
      summary: Get calculated results of CCL calculator
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/loanCalculate'
      responses:
        '200':
          $ref: '#/components/responses/LoanCalculateResponse'
          
  /evaluateCustomer:
    post:
      tags:
        - Implement from CCL
      summary: Create customer evaluation request
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/customerEvaluation'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
          
  /getEvaluationStatus:
    post:
      tags:
        - Implement from CCL
      summary: Get customer evaluation status
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/getEvaluationStatus'
      responses:
        '200':
          $ref: '#/components/responses/CustomerEvaluationResponse'
          
  /createLoan:
    post:
      tags:
        - Implement from CCL
      summary: Create loan request. Once all the customer evaluations are passed, this will be called.
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/createLoan'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
          
  /getLoanStatus:
    get:
      tags:
        - Implement from CCL
      summary: Get loan status
      security: 
      - oAuth: []
      parameters: 
        - $ref: '#/components/parameters/LeadId'
      responses:
        '200':
          $ref: '#/components/responses/LoanStatusResponse'
          
  /leads/issueEdo:
    post:
      tags: 
        - Implement by Ceyentra
      summary: Once Marketing officer approve/reject the loan request. CCL employee application will call this end point.
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/issueEdo'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
          
  /leads/evaluationResults:
    post:
      tags:
        - Implement by Ceyentra
      summary: Once customer evaluation results are available, this endpoint should be awaken from CCL ERP.
      security: 
      - oAuth: []
      requestBody:
        $ref: '#/components/requestBodies/notifyCustomerEvaluation'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
          
  /leads/coverNote:
    post:
      tags:
        - Implement by Ceyentra
      summary: Once CRO upload the cover note from Employee application, it will be uploaded in dealer application using this end point
      security: 
      - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                leadId: 
                  type: string
                  description: ID of the lead
                coverNoteImage: 
                  type: string
                  description: BASE64 string
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
          
  /leads/getDocuments:
    get:
      tags: 
        - Implement by Ceyentra
      parameters: 
        - $ref: '#/components/parameters/LeadId'
        - $ref: '#/components/parameters/DocumentType'
      responses:
        '200':
          $ref: '#/components/responses/LeadDocumentResponse'
  
components:
  securitySchemes:
      oAuth:  
        type: oauth2
        description: This API uses OAuth 2 with the pasword grant flow. No need of client id and client secret
        flows:
          password:   
            tokenUrl: /ccl/v1/oauth/token
            refreshUrl: /ccl/v1/oauth/refresh
            scopes: {}
  
  requestBodies:
    notifyCustomerEvaluation:
      content:
        application/json:
          schema:
            type: object
            properties: 
              leadId:
                type: string
                description: ID of the lead
              nic:
                type: string
                description: NIC number of the customer
              status: 
                type: string
                description: Status of the customer CRIB result (reject/approve)
              remark:
               type: string
               description: Evaluation remark
  
    issueEdo:
      content:
        application/json:
          schema:
            type: object
            properties:
              leadId: 
                type: string
                description: ID of the lead
              status:
                type: string
                description: Status (reject/approve)
              reason:
                type: string
                description: Reason
              remark: 
                type: string
                description: Loan remark
              edoNumber:
                type: string
                description: Number of the e-delivery order
              proposalNumber:
                type: string
                description: Number of the proposal
              loanStatus: 
                type: string
                description: Status of the loan
  
    createLoan:
      content:
        application/json:
          schema:
            type: object
            properties:
              leadId: 
                type: string
                description: ID of the loan lead
              stakeholders:
                type: array
                items: 
                  $ref: '#/components/schemas/StakeHolder'

              vehicleDetails:
                $ref: '#/components/schemas/Vehicle'
              invoiceImount: 
                type: number
                description: Amount of the invoice
              dealerAdvance:
                type: number
                description: Advance of the dealer
              downPayment:
                type: number
                description: Down payment
              loanAttachments:
                type: array
                items:
                  $ref: '#/components/schemas/LoanAttachment'
  
    getEvaluationStatus:
      content:
          application/json:
            schema:
              type: object
              properties:
                leadId: 
                  type: string
                  description: ID of the lead
                nic:
                  type: string
                  description: NIC number of the customer
  
    customerEvaluation:
      description: Customer evaluation details
      content:
        application/json:
          schema:
            type: object
            properties:
              dealerCode: 
                type: string
                description: ID of the dealer
              referenceId:
                type: string
                description: Reference number for the evaluation
              leadId:
                type: string
                description: Lead ID for the evaluation
              cclLocation:
                type: string
                description: CCL Location id for the evaluation
              cclMo:
                type: string
                description: CCL Money transfer officer
              loanAmount:
                type: string
                description: Amount of the loan of description
              creditFacilityType:
                type: string
                description: Credit Facility type
              stakeHolders:
                type: array
                items: 
                  $ref: '#/components/schemas/StakeHolder'
  
    loanCalculate:
      description: Loan calculation details
      content:
        application/json:
          schema:
            type: object
            required: 
              - grant_type
              - username
              - password
            properties:
              productCode:
                type: string
                description: Product code
              loanAmount:
                type: number
                description: Amount of the loan
              period:
                type: number
                description: Loan period in months
              noOfAdvanceRental: 
                type: number
                description: Number of Advance Rental
              capitalizedInsurance:
                type: number
                description: Capitalized insurance of the loan
              chargesCapitalized:
                type: number
                description: Charges capitalized to the loan
      required: true
  
    credentials:
      description: Credentials of the authenticating user
      content:
        application/json:
          schema:
            type: object
            required: 
              - grant_type
              - username
              - password
            properties:
              grant_type:
                type: string
                description: grant type for authorization
                default: "password"
              username:
                type: string
                description: employee id of the authenticating user
              password:
                type: string
                description: Password of the authenticating user
      required: true
  
    RefreshTokenRequest:
      description: Credentials of the refreshing tokens
      content:
        application/json:
          schema:
            type: object
            required: 
              - grant_type
              - refresh_token
            properties:
              grant_type:
                type: string
                description: grant type for authorization
                default: "refresh_token"
              refresh_token:
                type: string
                description: refresh token of the user
      required: true
      
  responses:
    LeadDocumentResponse:
      description: Document details
      content:
        application/json:
          schema:
            type: object
            properties:
              leadId:
                type: string
                description: ID of the lead
              documentType: 
                type: string
                description: Type of the document 
              file:
                type: string
                description: BASE64 string
    
    LoanStatusResponse:
      description: Details of the state of the loan
      content:
        application/json:
          schema:
            type: object
            properties:
              leadId: 
                type: string
                description: Lead ID of the loan
              status:
                type: string
                description: Status of the loan (draft/pending approval/process in progress/reject/approved/active/settle/write off/period over)
              remark:
                type: string
                description: Remark of the loan
              proposalId:
                type: string
                description: Proposal ID of the loan
              
    CustomerEvaluationResponse:
      description: Customer evaluation result details
      content:
        application/json:
          schema:
            type: object
            properties:
              leadId:
                type: string
                description: ID of the lead
              nic: 
                type: string
                description: NIC number of the customer
              result:
                type: array
                items:
                  $ref: '#/components/schemas/CribResult'
  
    LoanCalculateResponse:
      description: Loan calculate result
      content:
        application/json:
          schema:
            properties:
              netRental:
                type: number
                description: Net rental of the loan
              grossRental:
                type: number
                description: Gross rental of the loan
              tax: 
                type: number
                description: Tax amount of the loan
              totalInterest:
                type: number
                description: Total interest of the loan
              aggreedValue:
                type: number
                description: Aggreed value of the loan
              message:
                type: string
                description: Message about loan
    
    ModelsResponse:
      description: Models list
      content:
        application/json:
          schema:
            properties:
              models:
                type: array
                items:
                  $ref: '#/components/schemas/Model'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
  
    MakesResponse:
      description: Makes list
      content:
        application/json:
          schema:
            properties:
              makes:
                type: array
                items:
                  $ref: '#/components/schemas/Make'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
  
    AssetsResponse:
      description: Assets list
      content:
        application/json:
          schema:
            properties:
              assets:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
  
    ProductsResponse:
      description: Products list
      content:
        application/json:
          schema:
            properties:
              products:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
  
    MarketingOfficersResponse:
      description: Marketing officers list
      content:
        application/json:
          schema:
            properties:
              marketingOfficers:
                type: array
                items:
                  $ref: '#/components/schemas/MarketingOfficer'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
  
    LocationsResponse:
      description: Branch location details
      content:
        application/json:
          schema:
            properties:
              locations:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
              currentTimeStamp: 
                type: string
                description: Current Timestamp of the CCL server
    
    DealerRegistrationResponse:
      description: Dealer registration operation successful response
      content:
        application/json:
          schema:
            properties:
              dealers:
                type: array
                items:
                  $ref: '#/components/schemas/DealerRegistration'
  
    TokenResponse:
      description: Operation Successful token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenSuccess'
              
    TokenErrorResponse:
      description: Operation Unsuccessful token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenError'
              
    DefaultSuccessResponse:
      description: Operation successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResponse'
            
  parameters:
    LastDataFetchedTimestamp:
      in: query
      name: timestamp
      schema:
        type: string
      description: Last data fetched timestamp. If the value is null, response body should send all the data. Otherwise send data added/modified data after the given timestamp.
        ex - “2019-12-12T12:32:23.890Z”
  
    LeadId:
      in: query
      name: leadId
      schema:
        type: string
      description: Id of the lead
        
    DocumentType:
      in: query
      name: documentType
      schema:
        type: string
      description: Type of the document (CoverNote/EDO/Agreement/MTA3)
  
  schemas:
    LoanAttachment:
      type: object
      properties:
        name:
          type: string
          description: Name of the attachment (invoice, agreement, coverNote, requestLetter)
        file:
          type: string
          description: BASE64 string
        longitude: 
          type: number
          description: GPS lattitude
        lattitude: 
          type: number
          description: GPS lattitude
        
    Vehicle:
      type: object
      properties:
        serialNo: 
          type: string
          description: Serial number of the vehicle
        make:
          type: string
          description: Make code of the vehicle
        model:
          type: string
          description: Model ID of the vehicle
        chassisNo:
          type: string
          description: Chassis number of the vehicle
        engineNumber: 
          type: string
          description: Engine number of the vehicle
        yom:
          type: string
          description: Year of manufacture
        vehicleBackImage: 
          type: string
          description: BASE64 string
        vehicleFrontImage: 
          type: string
          description: BASE64 string
        chassisImage: 
          type: string
          description: BASE64 string
    CribResult:
      type: object
      properties:
        customerType: 
          type: string
          description: Type of the customer (B/JB/G)
        date:
          type: string
          description: CRIB Result date
        status: 
          type: string
          description: Status of the CRIB Result (Reject/CanProcess/Pending)
        remark:
          type: string
          description: CRIB result remark
        reason: 
          type: string
          description: Reason to CRIB result
    StakeHolder:
      type: object
      properties:
        id: 
          type: string
          description: ID of the stakeholder
        referenceNo:
          type: string
          description: Reference number
        type:
          type: string
          description: Customer Type (B/JB/G)
        requestType: 
          type: string
          description: Request type (New/Re-request)
        re-requestReason:
          type: string
          description: Reason to re-request
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        fullName: 
          type: string
          description: Full name of the stakeholder
        citizen:
          type: string
          description: Citizenship of the stakeholder
        nic: 
          type: string
          description: NIC number
        dob:
          type: string
          description: Stakeholder date of birth
        gender:
          type: string
          description: Gender of the stakeholder
        applicationDate:
          type: string
          description: Application date
        reason: 
          type: string
          description: Reason to apply
  
    Attachment:
      type: object
      properties:
        name:
          type: string
          description: Name of the attachment (cribClearance, nicFrontImage, nicBackImage, e-signatureImage)
        file:
          type: string
          description: BASE64 string
        longitude: 
          type: number
          description: GPS lattitude
        lattitude: 
          type: number
          description: GPS lattitude
  
    Model:
      type: object
      properties:
        modelCode:
          type: string
          description: Unique ID to identify a Model
        makeCode:
          type: string
          description: Make code of the model
        assetTypeCode:
          type: string
          description: Asset type code of the model
        name:
          type: string
          description: Name of the model
        status:
          type: string
          description: Status of the model
        cclLoanAllowed:
          type: string
          description: Whether CCL Loans allowed or not to this model
        createdAt:
          type: string
          description: Created timestamp of the model
  
    Asset:
      type: object
      properties:
        assetTypeCode:
          type: string
          description: Unique ID to identify an asset
        name:
          type: string
          description: Name of the asset
        status:
          type: string
          description: Status of the asset
        createdAt:
          type: string
          description: Created timestamp of the asset
  
    Product:
      type: object
      properties:
        productCode:
          type: string
          description: Unique ID to identify the product
        name: 
          type: string
          description: Name of the product
        status: 
          type: string
          description: Status of the product
        allowedPeriods:
          type: array
          description: Allowed periods
          items:
            type: number
        createdAt:
          type: string
          description: Created timestamp of the Product
  
    MarketingOfficer:
      type: object
      properties:
        locationCode:
          type: string
          description: ID of branch location
        name: 
          type: string
          description: Name of the marketing officer
        epf:
          type: string
          description: EPF number of the marketing officer
        status:
          type: string
          description: Status of the marketing officer
        createdAt:
          type: string
          description: Created timestamp of the Marketing Officer
  
    Location:
      type: object
      properties:
        locationCode:
          type: string
          description: Unique ID to identify the branch location
        name:
          type: string
          description: Name of the branch location
        address:
          type: string
          description: Address of the branch location
        contactNo:
          type: string
          description: Contact number of the branch location
        status: 
          type: string
          description: Status of the branch location
        createdAt:
          type: string
          description: Created timestamp of the branch location
      
    
    DealerRegistration:
      type: object
      required: 
        - dealerCode
      properties:
        dealerCode: 
          type: string
          description: Unique ID to identify the dealer
        name:
          type: string
          description: Name of the dealer
        address: 
          type: string
          description: Address of the dealer
        contactNo: 
          type: string
          description: Contact number of the dealer
        currentTimeStamp: 
          type: string
          description: Current Timestamp of the CCL server
        makes:
          type: object
          properties:
            makeCode: 
              type: string
              description: Unique ID to identify the Make
            name: 
              type: string
              description: Name of the make
            status: 
              type: string
              description: Status of the make
        
            
    Make:
      type: object
      properties:
        makeCode: 
          type: string
          description: Unique ID to identify the Make
        name: 
          type: string
          description: Name of the make
        status: 
          type: string
          description: Status of the make
        createdAt:
          type: string
          description: Created timestamp of the make
    
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Status of the request
          default: true
        message:
          type: string
          description: Description message
          default: Operation successfull!
          
    TokenSuccess:
      type: object
      required:
        - access_token
        - refresh_token
        - expires_in
        - token_type
      properties:
        access_token:
          type: string
          description: The access token string as issued by the authorization server
        refresh_token:
          type: string
          description: The refresh token string as issued by the authorization server
        expires_in:
          type: number
          description: the duration of time the access token is granted for in seconds
        token_type:
          type: "string"
          description: The type of token
          default: "bearer"
      example:
        access_token: "Asjxn213lknkalsdn1.sadksdnasodn12knssd.askdmaoskda"
        refresh_token: "Bdfn213lknkalBsadsFsdn1.dnasodn12knssd.sdaskdmaoskda"
        expires_in: 3600
        token_type: "bearer"
        
    TokenError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: One of the standard Oauth2.0 access token errors
        error_description:
          type: string
          description: The refresh token string as issued by the authorization server
      example:
        error: "invalid_grant"
        error_description: "The user’s password is invalid."