openapi: 3.0.0
info:
  version: "1.0.0-oas3"
  title: Prolaera Management API
  contact:
    name: Prolaera
    url: 'https://support.prolaera.com'
    email: Support@Prolaera.com
  description: |-
    Welcome to the documentation for Prolaera External API. Please contact support for custome domain & authorization.

    This document describes the Prolaera Management API, which is meant to be used by back-end servers or trusted parties performing administrative tasks. Generally speaking, anything that can be done through the Prolaera User dashboard (and more) can also be done through this API.

    When using the code samples, requests should be sent with a Content-Type of application/json.
  license:
    name: Apache 2.0
  termsOfService: https://www.prolaera.com/terms-of-service/
paths:
  /events:
    get:
      responses:
        200:
          description: 200 response
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        403:
          $ref: "#/components/responses/Forbidden"   
        default: 
          $ref: "#/components/responses/default"           
      security:
        - api_key: []
      tags:
        - Events
      operationId: eventsGet
      summary: Get
  '/events/{event_id}':
    parameters:
      - name: event_id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get
      operationId: eventGet
      tags:
        - Events
      responses:
        200:
          description: ''
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/Event'
        403:
          $ref: "#/components/responses/Forbidden"
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
  /users:
    get:
      summary: Get
      operationId: usersGet
      responses:
        200:
          description: 'Users successfully retrieved.'
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    $ref: '#/components/schemas/Users'
                  count:
                    type: number
        403:
          $ref: "#/components/responses/Forbidden"         
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
      description: Pull a list of all users in your Prolaera Firm.
      tags:
        - Users
    put:
      summary: Put
      operationId: usersPut
      description: Bulk create/update a given list of users in your Prolaera Firm.
      responses:
        201:
          description: 'Users successfully created.'
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    $ref: '#/components/schemas/Users'
                  count:
                    type: number
        403:
          $ref: "#/components/responses/Forbidden"
        409:
          $ref: "#/components/responses/Unauthorized"   
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      tags:
        - Users
  '/users/{objectguid}':
    parameters:
      - name: objectguid
        in: path
        required: true
        description: Unique identifier generated by system external to prolaera.
        schema:
          type: string
    get:
      summary: Get
      description: Retrieve user details for a given user.
      operationId: userGet
      tags:
        - Users
      responses:
        200:
          description: 'User successfully retrieved.'
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/User'
        403:
          $ref: "#/components/responses/Forbidden"
        409:
          $ref: "#/components/responses/Unauthorized"   
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
    patch:
      summary: Patch
      operationId: userPatch
      tags:
        - Users
      responses:
        200:
          description: 'User successfully updated.'
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
                format: date-time
            Status:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/User'
        403:
          $ref: "#/components/responses/Forbidden"  
        409:
          $ref: "#/components/responses/Unauthorized"  
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: '#/components/schemas/User'
      description: Update a given user in your Prolaera Firm.
    delete:
      summary: Delete
      operationId: userDelete
      tags:
        - Users
      responses:
        204:
          description: ''
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Date:
              schema:
                type: string
            Status:
              schema:
                type: string
        403:
          $ref: "#/components/responses/Forbidden"
        409:
          $ref: "#/components/responses/Unauthorized"   
        default: 
          $ref: "#/components/responses/default"       
      security:
        - api_key: []
      description: Archive a given user in your Prolaera Firm.
security:
  - api_key: []
tags:
  - name: Events
servers:
  - url: https://api-external.prolaera.com/{company}
    variables:
      company:
        default: prolaera
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    Department:
      type: string
      title: "Department"
      description: A single department.
      example: Administrative
    Departments:
      type: array
      title: "Departments"
      description: Array of Departments.
      example: ["Administrative", "Fraud", "Technology"]
      items:
        $ref: "#/components/schemas/Department"
      uniqueItems: true
    Event:
      type: object
      properties:
        company_id:
          type: integer
        delivery_location:
          type: string
        updates:
          type: array
          items:
            type: object
            properties:
              stage:
                type: boolean
              profile_uid:
                type: boolean
              time:
                type: integer
        sponsor:
          type: string
        created_by:
          type: string
        delivery_method:
          type: integer
        hours_basic:
          type: object
        hours:
          type: array
          items:
            type: object
            properties:
              category_id:
                type: string
              subject_area:
                type: string
              credits:
                type: integer
        vendor:
          type: string
        locations:
          type: array
          items:
            type: object
        firmOnly:
          type: boolean
        form_id:
          type: string
        prerequisites:
          type: string
        temp_registrations:
          type: array
          items:
            type: object
        inviteOnly:
          type: boolean
        delivery_end_date:
          type: string
        objectives:
          type: string
        max_participants:
          type: integer
        summary:
          type: string
        created_at:
          type: integer
        created_stage:
          type: boolean
        access:
          type: array
          items:
            type: integer
        attendance_url:
          type: string
        archive:
          type: boolean
        prep:
          type: string
        misc_url:
          type: array
          items:
            type: object
        includeCourseMaterials:
          type: boolean
        evaluations_url:
          type: array
          items:
            type: object
        delivery_date:
          type: string
        course_name:
          type: string
        level:
          type: string
        course_id:
          type: string
        courseAudience:
          type: string
        event_id:
          type: string
        pdf_uploaded:
          type: boolean
        price:
          type: integer
        report_submitted:
          type: boolean
        instructors:
          type: array
          items:
            type: object
            properties:
              time:
                type: integer
              last:
                type: string
              email:
                type: string
              first:
                type: string  
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Level:
      type: string
      title: "Level"
      example: Associate
      description: Firm level of this user.
    Location:
      type: string
      title: "Location"
      description: A single office location.
      example: Boston, MA
    Locations:
      type: array
      title: "Locations"
      description: Array of Locations.
      example: ["Boston, MA", "Houston, TX", "Seattle, WA"]
      items:
        $ref: "#/components/schemas/Location"
      uniqueItems: true
    PracticeArea:
      type: string
      title: "Practice Area"
      description: A single Practice Area.
      example: Healthcare
    PracticeAreas:
      type: array
      title: "Practice Areas"
      description: Array of practice areas.
      example: ["Healthcare", "Real Estate", "Technology"]
      items:
        $ref: "#/components/schemas/PracticeArea"
      uniqueItems: true
    User:
      type: object
      properties:
        admin:
          type: boolean
          description: Admin level user permissioning.
          example: true
        author:
          type: boolean
          example: true
          description: Author level user permissioning.
        address:
          type: string
          example: 111 South Jackson St.
          description: Street address line one.
        addressTwo:
          type: string
          example: Suite 100
          description: Street address line two.
        state:
          type: string
          example: WA
          description: State / Province / Region.
        zip:
          type: string
          example: 98104
          description: Zip / Postal Code.
        city:
          type: string
          example: Seattle
          description: City.
        country:
          type: string
          example: United States
          description: Country / Region.
        department:
          $ref: "#/components/schemas/Departments"
        email:
          type: string
          format: email
          example: john.doe@gmail.com
          description: Email address of this user.
        event_coordinator:
          type: boolean
          example: true
          description: Event Coordinator level user permissioning.
        first:
          type: string
          example: John
          description: Given name/first name/forename of this user.
        hire_date:
          type: string
          format: iso-date-time
          example: "2020-01-01T00:00:00.000Z"
          description: Hire date of this user.
        last:
          type: string
          example: Doe
          description: Family name/last name/surname of this user.
        level:
          $ref: "#/components/schemas/Level"
        locations:
          $ref: "#/components/schemas/Locations"
        practices:
          $ref: "#/components/schemas/PracticeAreas"
        objectguid:
          type: string
          description: Unique identifier generated by system external to prolaera.
        profile_uid:
          type: string
          description: Unique identifier generated by Prolaera.
      required:
        - email
        - objectguid
      description: User properties
    Users:
      type: array
      title: "Users"
      description: Array of users.
      items:
        $ref: "#/components/schemas/User"
      uniqueItems: true
  responses:
    Forbidden:
      description: API key is missing or invalid
      headers:
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Origin:
          schema:
            type: string
        Content-Length:
          schema:
            type: string
        Content-Type:
          schema:
            type: string
        Date:
          schema:
            type: string
        Status:
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Forbidden"
              statusCode:
                type: number
                enum: [403]
    Unauthorized:
      description: User already exists no access.
      headers:
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Origin:
          schema:
            type: string
        Content-Length:
          schema:
            type: string
        Content-Type:
          schema:
            type: string
        Date:
          schema:
            type: string
        Status:
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
              statusCode:
                type: number
                enum: [409]
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
