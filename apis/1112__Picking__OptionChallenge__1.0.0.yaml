openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Picking/OptionChallenge/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Option Challenge API
  contact:
    email: iturra.sebastian@hotmail.com.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /challenge:
    post:
      tags:
        - developers
      summary: Validate Form
      operationId: validateForm
      description: |
        Allows you to validate the data of a form
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: rut
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: query
          name: phone
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Form request validated and formatted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeResponseDTO'
        '400':
          description: bad input parameter
components:
  schemas:
    ChallengeRequestDTO:
      type: object
      required:
        - name
        - rut
        - email
        - phone
      properties:
        name:
          type: string
          example: Sebastián Iturra Valdés
        rut:
          type: string
          example: 187655250
        email:
          type: string
          example: iturra.sebastian@example.com
        phone:
          type: string
          example: +56 9 1234 5678
    ChallengeResponseDTO:
      type: object
      required:
        - name
        - rut
        - email
        - phone
      properties:
        name:
            $ref: '#/components/schemas/ValidateDTO'
        rut:
            $ref: '#/components/schemas/ValidateDTO'
        email:
            $ref: '#/components/schemas/ValidateDTO'
        phone:
            $ref: '#/components/schemas/ValidateDTO'
    ValidateDTO:
      type: object
      required:
        - value
        - validated
      properties:
        value:
          type: object
          description: Get Value formatted
        validated:
          type: boolean
          description: Let you know if it was validated or not 
          example: true
