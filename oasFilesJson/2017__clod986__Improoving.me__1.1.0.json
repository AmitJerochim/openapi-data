{"openapi":"3.0.0","servers":[{"url":"https://test.improoving.me/api","description":"Development Server"}],"info":{"description":"This is the official documentation to access Improoving.me API.\n\n# Introduction\nThis API is documented in **OpenAPI format** and allows you to connect to the services offered by Improoving.me and its Schools. Please remember that all calls have the `/api` prefix.\n\n# Creating a Client for your app\nThe first step to create your app is to register a client with Improoving.me. To do this, simply go to your account page after logging in and navigate to the API section; once there follow the required steps to register your client.\n\n# SDK for developers\nWe provide a PHP SDK for speeding up the development of your services; please go to https://bitbucket.org/improoving_me/improoving-php for more info\n","version":"1.1.0","title":"Improoving.me API","termsOfService":"https://improoving.me/legal/terms-and-conditions","contact":{"email":"support@improoving.me"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"x-logo":{"url":"https://improoving.me/img/logo.png","altText":"Improoving.me logo"}},"tags":[{"name":"Authentication","description":"Methods to require authorization from your users"},{"name":"User","description":"Calls specific to the User, which require identification via the header `BearerToken`"},{"name":"School","description":"Calls specific to a School. Responses can vary basing on the `BearerToken` passed, in accordance with the privileges of the user you are making the Request for."},{"name":"Database","description":"Database accessible without identification"}],"x-tagGroups":[{"name":"Authentication","tags":["Authentication"]},{"name":"User Methods","tags":["User","School"]},{"name":"General","tags":["Database"]}],"paths":{"/oauth/authorize":{"parameters":[{"name":"client_id","in":"query","required":true,"schema":{"$ref":"#/components/schemas/client_id"}},{"name":"redirect_uri","in":"query","required":true,"schema":{"$ref":"#/components/schemas/redirect_uri"}},{"name":"response_type","in":"query","required":true,"schema":{"type":"string","enum":["code"]}},{"name":"scope","in":"query","required":true,"schema":{"$ref":"#/components/schemas/scope"}}],"get":{"tags":["Authentication"],"summary":"Request an Authorization Token","description":"Send the User to the page where he will approve your client. If the user approves your request you will receive a `code` which you will be able to use to request an Access Token for your application.","responses":{"200":{"description":"Generic Response"}},"x-code-samples":[{"lang":"PHP","source":"\\Improoving\\OAuth($your_client_id)\n  ->sendToAuthorizationTokenPage($your_redirect_uri);\n"}]}},"/oauth/token":{"post":{"tags":["Authentication"],"summary":"Request any Token to login","description":"Request a Token to be used by your app.\nWhen asking for an Access Token, you will receive both the code and the refresh_token if the user approved your request\n","requestBody":{"$ref":"#/components/requestBodies/token"},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"token_type":{"type":"string","enum":["Bearer","Refresh","Password"]},"expires_in":{"type":"integer"},"access_token":{"type":"string"},"refresh_token":{"type":"string"}}}}}},"400":{"description":"Bad Request"}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the OAuth element\n$instance = new \\Improoving\\OAuth($your_client_id, $your_client_secret);\n\n# Request the Access Token\n$instance->getAccessToken($code, $your_redirect_url);\n\n# Request new Refresh Token\n$instance->refreshToken($refresh_token);\n\n# Request the Password Grant Token\n$instance->getPasswordGrantToken($user_email, $user_password);\n"}]}},"/my/schools":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"association_types","in":"query","required":false,"schema":{"type":"string","enum":["admin","staff","teacher","reseller","customer"]}}],"get":{"tags":["User"],"summary":"Retrieve Schools of a User","description":"A User can be registered to a School in many ways, each one granting different permissions over their data. This method allows your app to retrieve informations about the Schools.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/school"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the User element\n$user = new \\Improoving\\User($user_token);\n\n# Request the Schools\n$schools = $user->getSchools();\n"}]}},"/school-database/{school_id}/{people_group}":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"school_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/school_id"}},{"name":"people_group","in":"path","required":true,"schema":{"$ref":"#/components/schemas/people_group"}},{"name":"limit-to","in":"query","description":"You can pass the IDs of the People you are trying to request, separated by a comma.","schema":{"type":"string"}},{"name":"since","in":"query","description":"Passing this parameter will select all the People updated starting from that date. This parameter will be considered when `limit-to` is not set","schema":{"type":"string","format":"date"}},{"name":"only-ids","in":"query","description":"You can specify to receive only the IDs instead of the whole People object","schema":{"type":"boolean"}}],"get":{"tags":["School"],"summary":"Retrieve the database of a specific people_group","description":"This method allows your app to retrieve the whole database of people registered to a School in the way specified.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/association"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the School element\n$school = new \\Improoving\\School(array('id' => 2));\n\n# Authorize the user that is making the request\n\\Improoving\\Improoving::setBearerToken($user_token);\n\n# Request the Staff\n$staff = $school->getStaff();\n# Request the Teachers\n$teachers = $school->getTeachers();\n# Request the Resellers\n$resellers = $school->getResellers();\n# Request the Customers\n$customers = $school->getCustomers();\n"}]}},"/school-database/{school_id}/packets":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"school_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/school_id"}},{"name":"limit-to","in":"query","description":"You can pass the IDs of the Packets you are trying to request, separated by a comma.","schema":{"type":"string"}},{"name":"since","in":"query","description":"Passing this parameter will select all the Packets updated starting from that date. This parameter will be considered when `limit-to` is not set","schema":{"type":"string","format":"date"}}],"get":{"tags":["School"],"summary":"Retrieve the database of Packets","description":"This method allows your app to retrieve the whole database of packets registered to a School.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/packet"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the School element\n$school = new \\Improoving\\School(array('id' => 2));\n\n# Authorize the user that is making the request\n\\Improoving\\Improoving::setBearerToken($user_token);\n\n# Request the full database\n$packets = $school->getPackets();\n# Request the specified ids\n$packets = $school->getPackets(['limit-to' => [1,2]]);\n# Request the database updated since the 1st of January\n$packets = $school->getPackets(['since' => '2019-01-01']);\n"}]}},"/school-database/{school_id}/events":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"school_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/school_id"}},{"name":"limit-to","in":"query","description":"You can pass the IDs of the Events you are trying to request, separated by a comma.","schema":{"type":"string"}},{"name":"since","in":"query","description":"Passing this parameter will select all the Events updated starting from that date. This parameter will be considered when `limit-to` is not set","schema":{"type":"string","format":"date"}}],"get":{"tags":["School"],"summary":"Retrieve the database of Events","description":"This method allows your app to retrieve the whole database of events registered to a School.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/packet"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the School element\n$school = new \\Improoving\\School(array('id' => 2));\n\n# Authorize the user that is making the request\n\\Improoving\\Improoving::setBearerToken($user_token);\n\n# Request the full database\n$events = $school->getEvents();\n# Request the specified ids\n$events = $school->getEvents(['limit-to' => [1,2]]);\n# Request the database updated since the 1st of January\n$events = $school->getEvents(['since' => '2019-01-01']);\n"}]}},"/school-database/{school_id}/moments":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"school_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/school_id"}},{"name":"limit-to","in":"query","description":"You can pass the IDs of the Moments you are trying to request, separated by a comma.","schema":{"type":"string"}},{"name":"since","in":"query","description":"Passing this parameter will select all the Events updated starting from that date. This parameter will be considered when `limit-to` is not set","schema":{"type":"string","format":"date"}}],"get":{"tags":["School"],"summary":"Retrieve the database of Moments","description":"This method allows your app to retrieve the whole database of moments registered to a School.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/packet"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the School element\n$school = new \\Improoving\\School(array('id' => 2));\n\n# Authorize the user that is making the request\n\\Improoving\\Improoving::setBearerToken($user_token);\n\n# Request the full database\n$moments = $school->getMoments();\n# Request the specified ids\n$moments = $school->getMoments(['limit-to' => [1,2]]);\n# Request the database updated since the 1st of January\n$moments = $school->getMoments(['since' => '2019-01-01']);\n"}]}},"/school-database/{school_id}/giftcards":{"parameters":[{"name":"BearerToken","in":"header","required":true,"schema":{"$ref":"#/components/schemas/bearer_token"}},{"name":"school_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/school_id"}},{"name":"limit-to","in":"query","description":"You can pass the IDs of the Gift Cards you are trying to request, separated by a comma.","schema":{"type":"string"}},{"name":"since","in":"query","description":"Passing this parameter will select all the Gift Cards updated starting from that date. This parameter will be considered when `limit-to` is not set","schema":{"type":"string","format":"date"}}],"get":{"tags":["School"],"summary":"Retrieve the database of Gift Cards","description":"This method allows your app to retrieve the whole database of gift cards registered to a School.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/giftcard"}}}}},"401":{"description":"Authorization information is missing or invalid."}},"x-code-samples":[{"lang":"PHP","source":"# Initialize the School element\n$school = new \\Improoving\\School(array('id' => 2));\n\n# Authorize the user that is making the request\n\\Improoving\\Improoving::setBearerToken($user_token);\n\n# Request the full database\n$cards = $school->getGiftCards();\n# Request the specified ids\n$cards = $school->getGiftCards(['limit-to' => [1,2]]);\n# Request the database updated since the 1st of January\n$cards = $school->getGiftCards(['since' => '2019-01-01']);\n"}]}},"/categories":{"get":{"tags":["Database"],"summary":"Categories","description":"Categories are the disciplines that Schools can use to create their own activities. When purchasing a new product, the user is required to select a Category before proceeding. This database is constantly being implemented. \n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/category"}}}}}},"x-code-samples":[{"lang":"PHP","source":"# Retrieve all Categories\n$languages = \\Improoving\\Category::all();\n"}]}},"/consents":{"get":{"tags":["Database"],"summary":"Consents","description":"Consents are used to keep track of the permission a School has in regarding a user. This database is seldom updated.\n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/consent"}}}}}},"x-code-samples":[{"lang":"PHP","source":"# Retrieve all Consents\n$languages = \\Improoving\\Consent::all();\n"}]}},"/languages":{"get":{"tags":["Database"],"summary":"Languages","description":"Languages are used to identify the products basing on the language it will be served into. This database is constantly being implemented. \n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/language"}}}}}},"x-code-samples":[{"lang":"PHP","source":"# Retrieve all Languages\n$languages = \\Improoving\\Language::all();\n"}]}},"/locations":{"get":{"tags":["Database"],"summary":"Locations","description":"Locations are all the available places where we can provide some products. Although we use a lat-lng system to identify the location of our Schools, Locations are curated manually and allow us to provide an easier experience to a user looking for a purchase. This database is constantly being implemented. \n","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/location"}}}}}},"x-code-samples":[{"lang":"PHP","source":"# Retrieve all Locations\n$locations = \\Improoving\\Location::all();\n"}]}}},"components":{"requestBodies":{"token":{"description":"Here you can ask for a specific token for a user. You will need to save this token and use it later to allow your app to access Improoving.me in spite of the user.","content":{"application/json":{"schema":{"type":"object","properties":{"client_id":{"$ref":"#/components/schemas/client_id"},"client_secret":{"$ref":"#/components/schemas/client_secret"},"grant_type":{"description":"The grant type you are trying to get","type":"string","enum":["authorization_code","refresh_token","password"]},"scope":{"$ref":"#/components/schemas/scope"},"code":{"description":"The Authorization Token of the user. Required if your grant_type is 'authorization_code'.","type":"string"},"refresh_token":{"description":"The Refresh Token of the user. Required if your grant_type is `refresh_token`.","type":"string"},"username":{"description":"The email of the user. Required if your grant_type is `password`.","type":"string"},"password":{"description":"The password of the user. Required if your grant_type is `password`.","type":"string"}},"required":["client_id","client_secret","grant_type"]}}}}},"schemas":{"client_id":{"description":"The id of your app","type":"string"},"client_secret":{"description":"The secret of your app","type":"string"},"school_id":{"description":"The id of the school you are making the request for.","type":"integer"},"redirect_uri":{"description":"The redirect url of your app, as declared in your API settings","type":"string","format":"uri"},"scope":{"description":"The scope of the token. Keep this value empty.","type":"string"},"bearer_token":{"description":"The Bearer Token, as returned from `/oauth/token`.","type":"string"},"people_group":{"description":"One of the possible groups of users the school can have.","type":"string","enum":["staff","teachers","resellers","customers"]},"account":{"description":"The informations regarding a person registered on Improoving.me","type":"object","properties":{"id":{"type":"integer"},"email":{"type":"string","format":"email"},"first_name":{"type":"string"},"last_name":{"type":"string"},"phone":{"type":"string"},"address":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"district":{"type":"string"},"zip_code":{"type":"string"},"tax_code":{"type":"string"},"birthday":{"type":"string"},"birthday_city":{"type":"string"},"IBAN":{"type":"string"},"code_fattura_elettronica":{"type":"string","description":"The code needed for Fattura Elettronica"},"denomination_fattura_elettronica":{"type":"string","description":"The denomination needed for Fattura Elettronica"},"pec":{"type":"string","format":"email","description":"Posta Elettronica Certificata"},"last_login":{"type":"string","format":"date"},"person_id":{"type":"integer","description":"the ID of the Person registered"},"activation_code":{"type":"string"}}},"association":{"description":"The connection of a Person with a School","type":"object","properties":{"id":{"type":"integer"},"person_id":{"type":"integer"},"school_id":{"type":"integer"},"circle_id":{"type":"integer"},"accepted":{"type":"boolean","description":"explains if the connection is accepted by the Person"},"sellable_online":{"type":"boolean","description":"teachers can have this parameter set to `true` to enable their online sale."},"person":{"$ref":"#/components/schemas/person"},"school":{"$ref":"#/components/schemas/school"},"favourite_category":{"$ref":"#/components/schemas/category"},"specializations":{"type":"array","description":"Info regarding what a teacher is allowed to teach for a specific School","items":{"$ref":"#/components/schemas/specialization"}}}},"category":{"description":"A Category element used by our application.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string","description":"A first classification to determine the operating area of the School."},"specialization":{"type":"string","description":"A sub-classification to determine the discipline."},"limited_to_school":{"type":"boolean","description":"If set to `true`, the category is for internal use of the School only, and should not be displayed to the public."},"icon":{"type":"string","format":"uri","description":"A relative path of the icon used by Improoving.me when showing the Category. Icons are usually shared across categories with same `name`."}}},"consent":{"description":"A Consent element used by our application.","type":"object","properties":{"consent_type":{"type":"string","description":"The name of the consent."},"is_default":{"type":"boolean","description":"If set to `true`, this consent has to be provided before requesting other consents."},"is_negative":{"type":"boolean","description":"If set to `true`, this consent suggests denial of consent."},"applicability":{"type":"array","items":{"type":"string","enum":["platform","customers","teachers","resellers","staff"]},"description":"The applicability of a consent basing on the type of registration the user has with a specific School. If a Consent can be applied to Improoving.me, this will contain `platform` among this array."}}},"language":{"description":"A Language element used by our application.","type":"object","properties":{"id":{"type":"integer"},"code":{"type":"string","pattern":"^[a-zA-Z]{2}$"},"name":{"type":"string"}}},"location":{"description":"A Location where Improoving.me has lessons available.","type":"object","properties":{"name":{"type":"string"},"lat":{"type":"number","format":"float"},"lng":{"type":"number","format":"float"},"background_img":{"type":"string","format":"uri","description":"A relative path of the image used by Improoving.me when showing the Location."}}},"person":{"description":"A Person registered on Improoving.me","type":"object","properties":{"id":{"type":"integer"},"account":{"$ref":"#/components/schemas/account"},"associations":{"type":"array","items":{"$ref":"#/components/schemas/association"}},"consents":{"type":"array","items":{"$ref":"#/components/schemas/consent"}},"languages":{"type":"array","items":{"$ref":"#/components/schemas/language"}},"valid_consents":{"type":"array","items":{"$ref":"#/components/schemas/consent"}}}},"school":{"description":"A School object.","type":"object","properties":{"name":{"type":"string"},"tagline":{"type":"string"},"description":{"type":"string"},"email":{"type":"string","format":"email"},"phone":{"type":"string"},"fax":{"type":"string"},"address":{"type":"string"},"city":{"type":"string"},"country":{"type":"string"},"zip_code":{"type":"string"},"latitude":{"type":"number","format":"float"},"longitude":{"type":"number","format":"float"},"rules":{"type":"string","description":"The Terms & Conditions of the School."},"url":{"type":"string","format":"uri"},"privileges":{"description":"The privileges the user has with a specific school","type":"array","items":{"type":"string","enum":["admin","staff","teacher","reseller","customer"]}}}},"specialization":{"description":"Determines the ability of a Teacher to teach a specific category.","type":"object","properties":{"association_id":{"type":"integer"},"category_id":{"type":"integer"},"order":{"type":"number","format":"float","description":"The Allocation Order among its peers"},"category":{"$ref":"#/components/schemas/category"},"association":{"$ref":"#/components/schemas/association"},"person":{"$ref":"#/components/schemas/person"}}},"packet":{"description":"A standalone item that can be sold on the platform. Can have different properties and rules basing on its TYPE","type":"object","properties":{"name":{"type":"string"},"school_id":{"type":"integer"},"type":{"type":"string","enum":["packet","event","moment"]},"start_date":{"type":"string","pattern":"^[2][01][0-9]{2}-(0?[1-9]|[1][012])-([012]?[1-9]|[123][01])$"},"end_date":{"type":"string","pattern":"^[2][01][0-9]{2}-(0?[1-9]|[1][012])-([012]?[1-9]|[123][01])$"},"original_id":{"type":"integer","description":"In case this is a variation of another product of the same type, here the ID of the packet to use as reference will be specified. This is useful for repetitive products with same price structures."},"district_id":{"type":"integer"},"levelgroup_id":{"type":"integer"},"district":{"$ref":"#/components/schemas/district"},"packet_prices":{"type":"array","items":{"type":"object"}},"payers":{"type":"array","description":"All the paying customers of the product.","items":{"$ref":"#/components/schemas/person"}},"pupils":{"type":"array","description":"All the pupils of the product.","items":{"$ref":"#/components/schemas/person"}},"variations":{"type":"array","description":"If this packet is considered to be a reference for others, those will be considered variations of this one","items":{"$ref":"#/components/schemas/packet"}}}},"giftcard":{"description":"A voucher purchaseable by the customer. It is defined by a value and a price, which may differ when the purpose of the card is to offer a discount to the customer.","type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"school_id":{"type":"integer"},"price":{"type":"number","format":"decimal"},"value":{"type":"number","format":"decimal"},"start_date":{"type":"string","pattern":"^[2][01][0-9]{2}-(0?[1-9]|[1][012])-([012]?[1-9]|[123][01])$","description":"This date represent the minimum date before which the product cannot be sold.","nullable":true},"end_date":{"type":"string","pattern":"^[2][01][0-9]{2}-(0?[1-9]|[1][012])-([012]?[1-9]|[123][01])$","description":"This date represent the maximum date after which the product cannot be sold.","nullable":true},"expiration_date":{"type":"string","pattern":"^[2][01][0-9]{2}-(0?[1-9]|[1][012])-([012]?[1-9]|[123][01])$","description":"This date represent the maximum date after which any purchased card cannot be accepted.","nullable":true},"validity_days":{"type":"number","format":"integer","description":"It is possible to set a specific number of days of validity after purchase by the customer. This will be used when calculating an expiration date.","nullable":true},"quantity":{"type":"number","format":"integer","description":"The maximum number of copies that can be purchased."},"purchased_gift_card":{"type":"array","items":{"type":"object"}}}},"district":{"description":"A narrow geographical area. It is different from a Location in the way that a Location can have many Districts.","type":"object","properties":{"name":{"type":"string"},"lat":{"type":"number","format":"float"},"lng":{"type":"number","format":"float"},"custom_query":{"type":"string","description":"The text used to query on Google Maps"},"approved":{"type":"boolean","description":"A district can be requested by a School, but has to be approved by Improoving.me before becoming fully functional."}}}}}}