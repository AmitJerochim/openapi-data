openapi: 3.0.0
info:
  title: Colorado MATF Data Trust Data Resources
  description: This swagger doc describes the Colorado data resources.
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: engineering@brighthive.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/amandajcrawford/colorado-matf/1.0.0
  - description: Production server.
    url: 'https://data-resources.reference-data-trust.brighthive.net/'
  - description: Local server.
    url: 'http://localhost:8000'
components:
  parameters:
    offsetParam:
      name: offset
      in: query
      description: the offset
      required: false
      style: form
      explode: true
      schema:
        type: integer
    limitParam:
      name: limit
      in: query
      description: the limit
      required: false
      style: form
      explode: true
      schema:
        type: integer
  schemas:
    Links:
      type: object
      properties:
        rel:
          type: string
          description: ...
          example: first
          enum:
            - self
            - first
            - prev
            - next
            - last
        href:
          type: string
          description: ...
          example: /credentials?offset=0&limit=20
      description: ...
    Created:
      type: object
      properties:
        message:
          type: string
          description: ...
          example: Successfully added new resource.
        id:
          type: integer
          description: ...
          format: int64
          example: 1
    Potential_outcome:
      required:
        - potential_outcome_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Program Potential Outcome ID - A program potential outcome unique identifier
        potential_outcome_name:
          type: string
          description: Potential Outcome Name - The name of the progam potential outcome name
      description: ...
    AllPotential_outcomes:
      type: object
      properties:
        potential_outcomes:
          type: array
          items:
            $ref: '#/components/schemas/Potential_outcome'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Workforce_provider_location_region:
      required:
        - id
        - provider_id
        - workforce_location_id
        - workforce_region_id
        - address_id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Program Format Name - The workforce provider location id
        provider_id:
          type: integer
          format: int64
          description: Provider ID - The provider id
        workforce_location_id:
          type: integer
          format: int64
          description: Workforce Location ID - The workforce location id
        workforce_region_id:
          type: integer
          format: int64
          description: Workforce Region ID - The workforce region id
        address_id:
          type: integer
          format: int64
          description: Address ID - The address id
      description: ...
    AllWorkforce_provider_location_regions:
      type: object
      properties:
        workforce_provider_location_regions:
          type: array
          items:
            $ref: '#/components/schemas/Workforce_provider_location_region'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Entity_type:
      required:
        - entity_type_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Entity Type ID - Entity Types's unique identifier
        entity_type_name:
          type: string
          description: Entity Type Name - The name of a provider's entity type
      description: ...
    AllEntity_types:
      type: object
      properties:
        entity_types:
          type: array
          items:
            $ref: '#/components/schemas/Entity_type'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Program_prerequisite:
      required:
        - program_prerequisite_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Program Prereq ID - Program prereq unique identifier
        program_prerequisite_name:
          type: string
          description: Program Prereq Name - Program Prereq's Name
      description: ...
    AllProgram_prerequisites:
      type: object
      properties:
        program_prerequisites:
          type: array
          items:
            $ref: '#/components/schemas/Program_prerequisite'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Address:
      required:
        - id
        - line_1
        - city
        - state
        - zipcode
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Workforce Location ID - The workforce location unique identifier
        line_1:
          type: string
          description: Address Line 1 - The street address line 1
        line_2:
          type: string
          description: Address Line 2 - The street address line 2
        city:
          type: string
          description: Address City - The address city
        state:
          type: string
          description: Address State - The address state
        zipcode:
          type: string
          description: Address Zipcode - The address zipcode
      description: ...
    AllAddresses:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Provider:
      required:
        - provider_name
        - entity_type_id
        - provider_contact_email
        - provider_county
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Provider ID - Provider's unique identifier
        provider_name:
          type: string
          description: Provider Name - Provider's Name
        provider_alternate_name:
          type: string
          description: Provider Alternate Name - Provider's Alternate Name
        entity_type_id:
          type: integer
          format: int64
          description: Entity Id - Entity's Name
        provider_description:
          type: string
          description: Provider Description - Provider's Description
        provider_contact_email:
          type: string
          description: Provider Contact Email - Provider's Contact Email
        provider_contact_phone:
          type: string
          description: Provider Contact Phone - Provider's Contact Phone
        provider_url:
          type: string
          description: Provider URL - Providers Url
        provider_county:
          type: string
          description: Provider County - Providers Description
        intellect_provider_system_id:
          type: integer
          format: int64
          description: Intellect Provider System Id - Intellect Provider System Id
      description: ...
    AllProviders:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Workforce_region:
      required:
        - id
        - workforce_region_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Workforce Region ID - The workforce region unique identifier
        workforce_region_name:
          type: string
          description: Workforce Region Name - The workforce region name
      description: ...
    AllWorkforce_regions:
      type: object
      properties:
        workforce_regions:
          type: array
          items:
            $ref: '#/components/schemas/Workforce_region'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Course:
      required:
        - course_code
        - course_name
        - district_number
        - district_name
        - school_number
        - school_name
        - local_course_code
        - local_course_title
        - course_level_code
        - course_level_text
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Course Identifier - Unique identifier for the course
        course_code:
          type: integer
          format: int64
          description: Course Code - Course code
        course_name:
          type: string
          description: Course Name - Name of the course
        district_number:
          type: string
          description: District Number - District number for the course
        district_name:
          type: string
          description: District Name - Name of the district of the school that offered the course
        school_number:
          type: integer
          format: int64
          description: School Number - Number of school where course is offered
        school_name:
          type: string
          description: School Name - Name of school that is offering the course
        local_course_code:
          type: string
          description: Local Course Code - Local code of the course
        local_course_title:
          type: string
          description: Local Course Title - Local course title
        course_level_code:
          type: string
          description: Course Level Code - Course's level code
        course_level_text:
          type: string
          description: Course Level Text - Course's level text
      description: ...
    AllCourses:
      type: object
      properties:
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Workforce_location:
      required:
        - id
        - workforce_location_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Workforce Location ID - The workforce location unique identifier
        workforce_location_name:
          type: string
          description: Workforce Location Name - The workforce location name
        intellect_location_system_id:
          type: integer
          format: int64
          description: Intellect Location System ID - The workforce location intellect system id
      description: ...
    AllWorkforce_locations:
      type: object
      properties:
        workforce_locations:
          type: array
          items:
            $ref: '#/components/schemas/Workforce_location'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Job_posting:
      required:
        - identifier
        - title
        - description
        - hiring_organization
      type: object
      properties:
        identifier:
          type: string
          description: Job Posting Identifier - Unique identifier for the job posting.
        title:
          type: string
          description: Job Title - Job Title
        qualifications:
          type: string
          description: Job Qualifications - Job Qualifications
        description:
          type: string
          description: Job Description - Job Description
        base_salary:
          type: string
          description: Base Salary - Base Salary
        number_of_positions:
          type: string
          description: Number of Positions - Number of available job positions
        work_hours:
          type: string
          description: Work Hours - Work hours associated with the position
        job_term:
          type: string
          description: Job Term - Job Term
        hiring_organization:
          type: string
          description: Hiring Organization - Name of hiring organization
        hours_per_week:
          type: string
          description: Hours Per Week - Hours worked per week
        job_url:
          type: string
          description: Job URL - Job Description URL
        street_address:
          type: string
          description: Street Address - Street address for the organization
        locality:
          type: string
          description: Address Locality - Address locality
        region:
          type: string
          description: Address Region - Address Region
        country:
          type: string
          description: Address Country - Address Country
        postal_code:
          type: string
          description: Postal Code - Postal Code
        contact_email:
          type: string
          description: Contact Email - Contact Email Address
        contact_fax_number:
          type: string
          description: Contact Fax Number - Contact Fax Number
        contact_telephone:
          type: string
          description: Contact Telephone Number - Contact Telephone Number
        contact_url:
          type: string
          description: Contact URL - Contact URL
        organization_legal_name:
          type: string
          description: Organization Legal Name - Organization's legal name.
        occupation_category_annotated_term:
          type: string
          description: Occupation Category Annotated Term - Occupation Category Annotated Term Descriptor
        occupation_category_in_defined_term_set:
          type: string
          description: Occupation Category In Defined Term Set - Occupation Category Defined Term Set
        occupation_category_term_code:
          type: string
          description: Occupation Category Term Code - Occupation Category Term Code
      description: ...
    AllJob_postings:
      type: object
      properties:
        job_postings:
          type: array
          items:
            $ref: '#/components/schemas/Job_posting'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Credential:
      required:
        - credential_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Credential ID - Credential's unique identifier
        credential_name:
          type: string
          description: Credential Name - Credential's Name
      description: ...
    AllCredentials:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/Credential'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Program_format:
      required:
        - program_format_name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Program Format ID - A program format unique identifier
        program_format_name:
          type: string
          description: Program Format Name - The name of the progam format
      description: ...
    AllProgram_formats:
      type: object
      properties:
        program_formats:
          type: array
          items:
            $ref: '#/components/schemas/Program_format'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
    Program:
      required:
        - program_name
        - program_soc_1
        - program_soc_2
        - program_soc_3
        - program_code
        - program_description
        - program_tuition_fees
        - program_book_fees
        - program_url
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Program ID - Program's unique identifier
        program_name:
          type: string
          description: Program Name - Program's name.
        program_soc_1:
          type: string
          description: Program Onet Code - Program's CIP Code
        program_soc_2:
          type: string
          description: Program Onet Code - Program's CIP Code
        program_soc_3:
          type: string
          description: Program Onet Code - Program's CIP Code
        program_code:
          type: string
          description: Program Code - Program's CIP Code
        program_description:
          type: string
          description: Program Description - Program's Description
        program_tuition_fees:
          type: number
          format: int64
          description: Program Tuition Fees - Program's tuition fees
        program_book_fees:
          type: number
          format: int64
          description: Program's book fees - Program's book fees
        program_format_id:
          type: integer
          format: int64
          description: 'Program format - Program offering format: Online, In-Person, Hybrid'
        program_url:
          type: string
          description: Program URL - Program's webpage url
        program_contact_phone:
          type: string
          description: Program Contact Phone - Program's contact telephone
        program_contact_email:
          type: string
          description: Program Contact Email - Program's contact email address
        program_length_hours:
          type: integer
          format: int64
          description: Program Length (Hours) - Length of the program (in hours)
        program_length_weeks:
          type: integer
          format: int64
          description: Program Length (Weeks) - Length of the program (in weeks)
        provider_id:
          type: integer
          format: int64
          description: Provider ID - Foreign key for provider
        credential_earned_id:
          type: integer
          format: int64
          description: Provider ID - Foreign key for provider
        potential_outcome_id:
          type: integer
          format: int64
          description: Potential Outcome ID - Foreign key for provider
        prerequisite_id:
          type: integer
          format: int64
          description: Prerequisite ID - Foreign key for provider
        intellect_program_system_id:
          type: integer
          format: int64
          description: Intellect System ID - Intellect program system id
      description: ...
    AllPrograms:
      type: object
      properties:
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      description: ...
  responses:
    Created:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Created'
    AllPotential_outcomes:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllPotential_outcomes'
    AllWorkforce_provider_location_regions:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllWorkforce_provider_location_regions'
    AllEntity_types:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllEntity_types'
    AllProgram_prerequisites:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllProgram_prerequisites'
    AllAddresses:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllAddresses'
    AllProviders:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllProviders'
    AllWorkforce_regions:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllWorkforce_regions'
    AllCourses:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllCourses'
    AllWorkforce_locations:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllWorkforce_locations'
    AllJob_postings:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllJob_postings'
    AllCredentials:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllCredentials'
    AllProgram_formats:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllProgram_formats'
    AllPrograms:
      description: ...
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllPrograms'
  requestBodies:
    Potential_outcome:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Potential_outcome'
      required: true
    Workforce_provider_location_region:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Workforce_provider_location_region'
      required: true
    Entity_type:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Entity_type'
      required: true
    Program_prerequisite:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Program_prerequisite'
      required: true
    Address:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
      required: true
    Provider:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Provider'
      required: true
    Workforce_region:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Workforce_region'
      required: true
    Course:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
      required: true
    Workforce_location:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Workforce_location'
      required: true
    Job_posting:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Job_posting'
      required: true
    Credential:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
      required: true
    Program_format:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Program_format'
      required: true
    Program:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Program'
      required: true
tags:
  - name: potential_outcomes
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: workforce_provider_location_regions
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: entity_types
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: program_prerequisites
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: addresses
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: providers
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: workforce_regions
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: courses
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: workforce_locations
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: job_postings
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: credentials
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: program_formats
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: programs
    description: ...
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /potential_outcomes:
    get:
      tags:
        - potential_outcomes
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllPotential_outcomes'
    post:
      tags:
        - potential_outcomes
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Potential_outcome'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/potential_outcomes/{id}':
    get:
      tags:
        - potential_outcomes
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - potential_outcomes
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Potential_outcome'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - potential_outcomes
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - potential_outcomes
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Potential_outcome'
      responses:
        '200':
          description: ok
  /workforce_provider_location_regions:
    get:
      tags:
        - workforce_provider_location_regions
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllWorkforce_provider_location_regions'
    post:
      tags:
        - workforce_provider_location_regions
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Workforce_provider_location_region'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/workforce_provider_location_regions/{id}':
    get:
      tags:
        - workforce_provider_location_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - workforce_provider_location_regions
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_provider_location_region'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - workforce_provider_location_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - workforce_provider_location_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_provider_location_region'
      responses:
        '200':
          description: ok
  /entity_types:
    get:
      tags:
        - entity_types
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllEntity_types'
    post:
      tags:
        - entity_types
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Entity_type'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/entity_types/{id}':
    get:
      tags:
        - entity_types
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - entity_types
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Entity_type'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - entity_types
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - entity_types
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Entity_type'
      responses:
        '200':
          description: ok
  /program_prerequisites:
    get:
      tags:
        - program_prerequisites
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllProgram_prerequisites'
    post:
      tags:
        - program_prerequisites
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Program_prerequisite'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/program_prerequisites/{id}':
    get:
      tags:
        - program_prerequisites
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - program_prerequisites
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program_prerequisite'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - program_prerequisites
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - program_prerequisites
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program_prerequisite'
      responses:
        '200':
          description: ok
  /addresses:
    get:
      tags:
        - addresses
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllAddresses'
    post:
      tags:
        - addresses
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Address'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/addresses/{id}':
    get:
      tags:
        - addresses
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    # put:
    #   tags:
    #     - addresses
    #   summary: Put one item
    #   parameters:
    #     - name: id
    #       in: path
    #       description: User ID
    #       required: true
    #       style: simple
    #       explode: false
    #       schema:
    #         type: integer
    #         format: int64
    #   requestBody:
    #     $ref: '#/components/requestBodies/Address'
    #   responses:
    #     '200':
    #       description: ok
    # delete:
    #   tags:
    #     - addresses
    #   summary: Get one item
    #   parameters:
    #     - name: id
    #       in: path
    #       description: User ID
    #       required: true
    #       style: simple
    #       explode: false
    #       schema:
    #         type: integer
    #         format: int64
    #   responses:
    #     '200':
    #       description: ok
    # patch:
    #   tags:
    #     - addresses
    #   summary: Get one item
    #   parameters:
    #     - name: id
    #       in: path
    #       description: User ID
    #       required: true
    #       style: simple
    #       explode: false
    #       schema:
    #         type: integer
    #         format: int64
    #   requestBody:
    #     $ref: '#/components/requestBodies/Addresses'
    #   responses:
    #     '200':
    #       description: ok
  /providers:
    get:
      tags:
        - providers
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllProviders'
    post:
      tags:
        - providers
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Provider'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/providers/{id}':
    get:
      tags:
        - providers
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - providers
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Provider'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - providers
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - providers
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Provider'
      responses:
        '200':
          description: ok
  /workforce_regions:
    get:
      tags:
        - workforce_regions
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllWorkforce_regions'
    post:
      tags:
        - workforce_regions
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Workforce_region'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/workforce_regions/{id}':
    get:
      tags:
        - workforce_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - workforce_regions
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_region'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - workforce_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - workforce_regions
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_region'
      responses:
        '200':
          description: ok
  /courses:
    get:
      tags:
        - courses
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllCourses'
    post:
      tags:
        - courses
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Course'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/courses/{id}':
    get:
      tags:
        - courses
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - courses
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Course'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - courses
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - courses
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Course'
      responses:
        '200':
          description: ok
  /workforce_locations:
    get:
      tags:
        - workforce_locations
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllWorkforce_locations'
    post:
      tags:
        - workforce_locations
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Workforce_location'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/workforce_locations/{id}':
    get:
      tags:
        - workforce_locations
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - workforce_locations
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_location'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - workforce_locations
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - workforce_locations
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Workforce_location'
      responses:
        '200':
          description: ok
  /job_postings:
    get:
      tags:
        - job_postings
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllJob_postings'
    post:
      tags:
        - job_postings
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Job_posting'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/job_postings/{id}':
    get:
      tags:
        - job_postings
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - job_postings
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Job_posting'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - job_postings
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - job_postings
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Job_posting'
      responses:
        '200':
          description: ok
  /credentials:
    get:
      tags:
        - credentials
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllCredentials'
    post:
      tags:
        - credentials
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Credential'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/credentials/{id}':
    get:
      tags:
        - credentials
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - credentials
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Credential'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - credentials
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - credentials
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Credential'
      responses:
        '200':
          description: ok
  /program_formats:
    get:
      tags:
        - program_formats
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllProgram_formats'
    post:
      tags:
        - program_formats
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Program_format'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/program_formats/{id}':
    get:
      tags:
        - program_formats
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - program_formats
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program_format'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - program_formats
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - program_formats
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program_format'
      responses:
        '200':
          description: ok
  /programs:
    get:
      tags:
        - programs
      summary: Get all items
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/AllPrograms'
    post:
      tags:
        - programs
      summary: Create an item
      requestBody:
        $ref: '#/components/requestBodies/Program'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  '/programs/{id}':
    get:
      tags:
        - programs
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    put:
      tags:
        - programs
      summary: Put one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - programs
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
    patch:
      tags:
        - programs
      summary: Get one item
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program'
      responses:
        '200':
          description: ok
  '/programs/{id}/workforce_provider_location_regions':
    get:
      tags:
        - workforce_provider_location_regions
      summary: Get one item
      parameters:
        - name: id
          in: "path"
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok