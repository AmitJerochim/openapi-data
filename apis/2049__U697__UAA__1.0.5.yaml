openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/U697/UAA/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/heng.jia/UAA/1.0.0
info:
  version: "1.0.5"
  title: UAA接口文档
  description: >-
    UAA接口文档.
security:
  - accessCode:
      - read
      - write
tags:
  - name: outter
    description: 外部接口
    externalDocs:
      url: http://docs.my-api.com/pet-operations.htm
  - name: internel
    description: 内部接口
    externalDocs:
      url: http://docs.my-api.com/pet-operations.htm
paths:
  /uaa/auth/oauth/authorize:
    get:
      summary: 获取授权码code
      tags:
        - outter
      description: 获取授权码code
      parameters:
        - in: query
          name: client_id
          schema:
            type: string
          required: true
          description: uaa颁发的client_id
        - in: query
          name: response_type
          schema:
            type: string
          required: true
          description: 授权类型[code,password,client credentials,implicit]，sso时填code
        - in: query
          name: redirect_uri
          schema:
            type: string
          required: true
          description: 重定向uri
        - in: query
          name: scope
          schema:
            type: string
          required: true
          description: 授权范围，pilot版本无用到，默认传all
        - in: query
          name: state
          schema:
            type: string
          required: false
          description: 保留跳转UAA之前的路由，防止csrf攻击等用途  
      responses:
        '302':
          description: UAA携带code，跳转到客户端的redirect_uri，如http://dce.daocloud.io/oauth/callback?code=xx8dk&state=router
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed' 
        '500':
          $ref: '#/components/responses/internal_server_error'
  /uaa/auth/oauth/token:
    post:
      summary: 5种授权方式获取登录凭证access_token
      tags:
        - outter
      description: >-
        获取登录凭证access_token
      parameters:
        - name: Authorization
          in: header
          description: >-
            格式：Basic {{client_id}}:{{client_secret}}，如：Basic Y2xpZW50YXBwOjExMjIzMw==
          required: true  
          schema:
            type: string
        - name: grant_type
          in: query
          description: 授权类型[authorization_code,password,client credentials,implicit,refresh_token]，sso获取令牌时填authorization_code, 刷新token时填refresh_token
          required: true
          schema:
            type: string  
        - name: code
          in: query
          description: 授权码，sso获取令牌时必填
          schema:
            type: string 
        - name: redirect_uri
          in: query
          description: 回调地址，sso获取令牌时必填
          schema:
            type: string
        - name: refresh_token
          in: query
          description: 刷新令牌，刷新令牌时必填
          schema:
            type: string    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/oauth_result'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'             
  /uaa/auth/login:
    post:
      summary: 用户登录
      tags:
        - outter
      description: 用户登录
      requestBody:
        description: 用户名密码登录
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/login_result'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed' 
        '500':
          $ref: '#/components/responses/internal_server_error'
  /uaa/auth/signout:
    delete:
      summary: 登出接口
      tags:
        - outter
      description: 用户登出
      parameters:
        - name: Authorization
          in: header
          description: >-
            格式:{{access_token}}，如：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
          schema:
            type: string  
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'
  /uaa/resources/user:
    get:
      summary: 根据access_token获取用户信息
      tags:
        - outter
      description: 根据access_token 获取用户信息
      parameters:
        - name: Authorization
          in: header
          description: 获取到的access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/user_detail'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed' 
        '500':
          $ref: '#/components/responses/internal_server_error'  
  /uaa/resources/groups/{group_name}:
      head:
        tags:
        - internel
        summary: 根据 ldap group name 验证 ldap group 是否存在
        description: 根据 ldap group name 验证 ldap group 是否存在
        parameters:
        - name: group_name
          in: path
          description: ldap group name
          required: true
          schema:
            type: string
        responses:
          '200':
            description: ldap group 存在 
          '401':
            $ref: '#/components/responses/unauthorized'
          '403':
            $ref: '#/components/responses/forbidden'
          '404':
            $ref: '#/components/responses/not_found'
          '405':
            $ref: '#/components/responses/method_not_allowed' 
          '500':
            $ref: '#/components/responses/internal_server_error'
        security:
        - petstore_auth:
          - write:pets
          - read:pets
  /uaa/resources/groups/{group_name}/users:
    get:
      tags:
      - internel
      summary: 根据 ldap group name 获取 ldap group 成员
      description: 根据 ldap group name 获取 ldap group 成员
      parameters:
      - name: group_name
        in: path
        description: ldap group name
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: page 从 1 开始, 默认值： 1
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: size 从 1 开始，默认值：20，查询所有 -1，不限制最大值
        required: false
        schema:
          type: string    
      responses:
        '200':
          description: ldap group 成员列表，OK。Array对象不能为null，空为Empty对象，Object对象为null，在Swagger文档中标志required = false 对象为null 对应的值也要存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_page_info'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed' 
        '500':
          $ref: '#/components/responses/internal_server_error'
  /uaa/resources/users/username:
    get:
      tags:
      - internel
      summary: 根据用户名模糊查询接口
      description: 根据用户名模糊查询接口
      parameters:
      - name: page
        in: query
        description: page 从 1 开始, 默认值： 1
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: size 从 1 开始，默认值：20，查询所有 -1，不限制最大值
        required: false
        schema:
          type: string
      - name: keyword
        in: query
        description: 用户名
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 用户详情列表，OK。Array对象不能为null，空为Empty对象，Object对象为null，在Swagger文档中标志required = false 对象为null 对应的值也要存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_page_info'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '405':
          $ref: '#/components/responses/method_not_allowed' 
        '500':
          $ref: '#/components/responses/internal_server_error'
        
components:
  responses:
    bad_request:
      description: 前端请求参数参数错误
    unauthorized:
      description: 未认证
    forbidden:
      description: 无权限 
    not_found:
      description: 未发现
    method_not_allowed:
      description: 前端请求方式错误
    internal_server_error:
      description: 服务端错误
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
  schemas:
    exception:
      type: object
      required:
        - request_id
        - code
        - message
        - resource
        - detail
        - time
      properties:
        request_id:
          type: string
        code:
          type: string
        message:
          type: string
        resource:
          type: string
        detail:
          type: string
        time:
          description: 时间戳-ms
          type: integer
    oauth_result:
      type: object
      required:
        - access_token
        - expires_in
        - token_type
        - refresh_token
        - scope
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          description: 剩余多少时间过期，单位s
        token_type:
          type: string
          description: access_token类型，oauth默认为bearer
        refresh_token:
          type: string
          description: access_token快过期时，通过refresh_token换取新的access_token
        scope:
          type: string
          description: 授权范围，pilot版本无用到，默认传all
    login:
      type: object
      required:
        - username
        - password
      properties:
        username:
            type: string
        password:
            type: string
    login_result:
      type: object
      required:
        - access_token
        - expires_in
        - username
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          description: 时间戳-ms
        username:
          type: string      
    user_detail:
      type: object
      properties:
        user_id:
          type: string
        username:
          type: string
        emails:
          type: array
          items:
            type: string
        primary_mail:
          type: string
        phone:
          type: string
        nickname:
          type: string
          description: 默认username，具体看界面如何设置
        status:
          type: string
          description: 未激活：inactivated、已激活：activated、已禁用：disabled
        is_admin:
          type: boolean
    user_page_info:
      type: object
      required:
        - total
        - data
      properties:
        total:
          type: integer
        page:
          type: integer
        size:
          type: integer
        from:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_detail'
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://example.com/oauth/auth'
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources
