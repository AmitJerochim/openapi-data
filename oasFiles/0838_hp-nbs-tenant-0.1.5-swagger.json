{
  "openapi" : "3.0.1",
  "info" : {
    "version" : "0.1.5",
    "title" : "Tenant"
  },
  "servers" : [ {
    "url" : "https://restapi.myhatch.co.uk"
  }, {
    "url" : "https://app.myhatch.co.uk"
  }, {
    "url" : "https://app.myhatch.co.uk:3603"
  } ],
  "paths" : {
    "/properties/v1/retrieve-properties" : {
      "post" : {
        "summary" : "Standard search",
        "requestBody" : {
          "description" : "Retrieve properties with classic filters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "order" : {
                    "description" : "Sorting logic can be selected among the listed values. `newest` sorts by `first_seen_datetime`, most recent first. `price-asc` sorts by monthly price, cheapest first. `price-desc` sorts by monthly price, most expensive first.",
                    "type" : "string",
                    "enum" : [ "newest", "price-asc", "price-desc" ]
                  },
                  "areas" : {
                    "description" : "Filter by cultural areas. A list of cultural areas can be specified and only properties belonging to those areas will be retrieved. If not specified no filter is applied.",
                    "enum" : [ "Sutton Central", "Sutton West", "Norbiton", "Perivale", "Bellingham", "Upper Edmonton", "Pinner", "West Ruislip", "South Richmond", "Marlborough", "Squirrel's Heath", "Northwick Park", "Custom House", "Graveney", "Townfield", "Kentish Town", "Hale End and Highams Park", "Beckton", "West Hamstead", "Brent Cross", "Darwin", "Hampton North", "Twickenham Riverside", "Southall Green", "Harrow Weald", "Mayesbrook", "Southgate", "Berrylands", "Eastbury", "Greenhill", "North Richmond", "Yeading", "Charville", "Crystal Palace", "Longthornton", "Paddington", "Eastcote and East Ruislip", "River", "Roxbourne", "Wembley", "Whitton", "Wallington South", "Woolwich", "Mottingham and Chislehurst North", "Manor", "Botwell", "Hatch End", "Valence", "Soho", "Cranford", "Cray Valley West", "Wandle Valley", "West Wickham", "West Kensington", "West Hampstead", "Thamesmead Moorings", "St. John's Wood", "Harold Wood", "Edgware", "Romford Town", "St. Margarets and North Twickenham", "Ravensbury", "The Wrythe", "Lower Edmonton", "Tottenham", "Stratford", "Wealdstone", "Holborn", "South Hornchurch", "Chislehurst", "St. Helier", "Eltham North", "Coombe Hill", "Farnborough and Crofton", "Stanmore Park", "Cricklewood", "Dundonald", "Battersea", "Syon", "Kidbrooke", "Longbridge", "New Cross", "Wandsworth", "Belmont", "Bickley", "White City", "Herne Hill", "Whitefoot", "Plaistow and Sundridge", "Peckham", "Whalebone", "Swiss Cottage", "Bloomsbury", "Northolt West End", "Roxeth", "St. Andrew's", "Hanworth", "Uxbridge North", "West Harrow", "Lea Bridge", "Feltham West", "Bedfont", "South Ruislip", "Thames", "Cricket Green", "Finchley", "Beddington North", "Teddington", "Edmonton Green", "Pinner South", "Pollards Hill", "Raynes Park", "Hobbayne", "Gascoigne", "Harrow on the Hill", "Putney", "Victoria", "Brentford", "Canons", "Eltham South", "Highgate", "Vauxhall", "Winchmore Hill", "Ham Petersham and Richmond Riverside", "High Barnet", "Grove", "Village", "Hylands", "Balham", "Upminster", "Hillside", "Cockfosters", "Hounslow South", "Chelsfield and Pratts Bottom", "Blackheath", "Old Malden", "Burnt Oak", "Underhill", "Copers Cope", "Carshalton Central", "Leyton", "Figge's Marsh", "Tudor", "Kelsey and Eden Park", "Grove Park", "Heath", "Enfield Lock", "Kenton", "Newington Green", "Goresbrook", "Upper Holloway", "Willesden", "Beverley", "Worcester Park", "Headstone South", "Wood Street", "Camden", "Catford", "Mill Hill", "West Dulwich", "Sydenham", "Royal Docks", "Tolworth and Hook Rise", "St. James", "Holloway", "Bowes", "Chessington North and Hook", "Shortlands", "Northolt Mandeville", "Gooshays", "Heaton", "Northwood", "Westminster", "East Barnet", "Hammersmith", "Carshalton South and Clockhouse", "Barnes", "Moorgate", "West Norwood", "Wandsworth Common", "Southbury", "Totteridge", "Harefield", "Parsons Green", "Colliers Wood", "Chiswick", "Heston West", "Brunel", "Queensbury", "Hampstead", "Fulwell and Hampton Hill", "Streatham", "South Lambeth", "Hounslow West", "Tooting", "Kingsbury", "Highlands", "Orpington", "Pinkwell", "Penge and Cator", "Hacton", "Marylebone", "Ealing", "Cavendish", "Chase", "Greenwich", "Earlsfield", "Heathfield", "Emerson Park", "Harringay", "Forest Gate", "Bromley Common and Keston", "Regent's Park", "Sutton South", "Forest", "Hampton Wick", "Coombe Vale", "Greenford Broadway", "Lower Morden", "Manor Park", "Abbey Wood", "Brockley", "Crouch End", "East Sheen", "Parsloes", "Beddington South", "Trinity", "Surbiton Hill", "Enfield Highway", "Abbey", "Jubilee", "Becontree", "Brixton", "Roehampton", "Downham", "Cheam", "Hyde Park", "Alibon", "Walthamstow", "Kew", "King's Cros", "Hampton", "Lambeth", "Clapham", "Islington", "Notting Hill", "Hale", "Heathrow Villages", "East Ham", "Lewisham", "Sutton North", "North Finchley", "Turkey Street", "Southgate Green", "Haselbury", "Clerkenwell", "Fulham", "Heston Central", "Pettits", "Shooters Hill", "Oakleigh", "Norwood Green", "Canbury", "Lavender Fields", "Wallington North", "West Twickenham", "Palmers Green", "Kenton West", "Petts Wood and Knoll", "Plumstead", "Chessington South", "Canning Town", "Ponders End", "Bush Hill Park", "St. Mark's", "Endlebury", "Little Ilford", "Chingford Green", "West Drayton", "Shepherd's Bush", "Brooklands", "Charlton", "Greenford Green", "Headstone North", "Hounslow Heath", "West Barnes", "Town", "Clock House", "Stockwell", "West Ham", "Biggin Hill", "Kilburn", "Elm Park", "Southall Broadway", "Ickenham", "South Twickenham", "Mawneys", "Harlesden", "Acton", "Chadwell Heath", "Uxbridge South", "Havering Park", "Lady Margaret", "Elthorne", "Heston East", "Cranham", "Rainham and Wennington", "Eastbrook", "Osterley and Spring Grove", "Grange", "Hounslow Central", "Merton Park", "Feltham North", "Isleworth", "Stonecot", "Coldharbour and New Eltham", "Dormers Wells", "Kenton East", "Hanworth Park", "Northwood Hills", "Cray Valley East", "Larkswood", "Hendon", "East Finchley", "Hatch Lane", "Hillingdon East", "Valley", "Barnhill", "Alexandra", "Finsbury Park", "Bromley Town", "Yiewsley", "Wood Green", "Hayes and Coney Hall", "Plaistow", "Waterloo", "Nonsuch", "Rayners Lane", "Cannon Hill" ],
                    "items" : {
                      "type" : "string"
                    },
                    "maxItems" : 5,
                    "minItems" : 1,
                    "type" : "array"
                  },
                  "locations" : {
                    "description" : "Filter by locations. Locations are defined by latlon coordinates and a radius in _meters_. Only properties inside the circle area created by the location and the radius will be retrieved. If more than one location is specified, the properties that would fall in at least a circle area will be retrieved (area union). If not specified no filter is applied.",
                    "items" : {
                      "$ref" : "#/components/schemas/LocationFilter"
                    },
                    "maxItems" : 5,
                    "minItems" : 1,
                    "type" : "array"
                  },
                  "bedrooms" : {
                    "description" : "Number of required bedrooms. Only properties with a number of bedrooms specified in this filter will be retrieved. To include only properties with at least 3 bedrooms the filter can be instantiated as `[3,4,5]`. If not specified no filter is applied.",
                    "enum" : [ 1, 2, 3, 4, 5 ],
                    "items" : {
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "minimum_budget" : {
                    "description" : "Minimum budget. Only properties with a monthly rent greater or equal to the specified minimum will be retrieved. If not specified, the default minimum budget is applied.",
                    "type" : "integer",
                    "minimum" : 100,
                    "maximum" : 25000
                  },
                  "maximum_budget" : {
                    "description" : "Maximum budget. Only properties with a monthly rent less or equal to the specified maximum will be retrieved. If not specified, the default maximum budget is applied.",
                    "type" : "integer",
                    "minimum" : 100,
                    "maximum" : 25000
                  },
                  "furnishing" : {
                    "description" : "Furnishing options. Only properties with the selected types of fournishing are retrieved. If not specified no filter is applied.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "enum" : [ "furnished", "part-furnished", "unfurnished" ]
                  },
                  "property_type" : {
                    "description" : "Property types. Only properties of the selected types are retrieved. If not specified no filter is applied.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "enum" : [ "studio", "flat", "house" ]
                  },
                  "moving_date" : {
                    "description" : "Moving date (YYYY-MM-DD). Only properties available at that date or before are retrieved. If not specified no filter is applied.",
                    "type" : "string",
                    "format" : "date"
                  }
                }
              },
              "examples" : {
                "Basic filters" : {
                  "value" : {
                    "order" : "price-asc",
                    "areas" : [ "Clerkenwell" ],
                    "bedrooms" : [ 2 ],
                    "minimum_budget" : 100,
                    "maximum_budget" : 1000,
                    "moving_date" : "2019-12-02"
                  }
                },
                "All filters" : {
                  "value" : {
                    "order" : "price-desc",
                    "areas" : [ "Clerkenwell", "Holborn" ],
                    "locations" : [ {
                      "location" : {
                        "latitude" : 51.5242605,
                        "longitude" : -0.1068551
                      },
                      "radius" : 5000
                    }, {
                      "location" : {
                        "latitude" : 51.4166048,
                        "longitude" : -0.1927595
                      },
                      "radius" : 1000
                    } ],
                    "bedrooms" : [ 1, 2 ],
                    "minimum_budget" : 100,
                    "maximum_budget" : 1000,
                    "furnishing" : [ "part-furnished", "unfurnished" ],
                    "property_type" : [ "flat", "house" ],
                    "moving_date" : "2019-12-02"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A paged array of properties",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "properties" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Property"
                      }
                    },
                    "bookmark" : {
                      "description" : "Index to the first element of the following page",
                      "type" : "integer",
                      "example" : 100
                    },
                    "count" : {
                      "description" : "Total number of properties",
                      "type" : "integer",
                      "example" : 1234
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          }
        }
      }
    },
    "/commuteSearch" : {
      "post" : {
        "summary" : "Commute search",
        "requestBody" : {
          "description" : "Retrieve properties ranked by commute search.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "order" : {
                    "description" : "Sorting logic can be selected among the listed values. `commute` sorts by commute time. `newest` sorts by `first_seen_datetime`, most recent first. `price-asc` sorts by monthly price, cheapest first. `price-desc` sorts by monthly price, most expensive first.",
                    "type" : "string",
                    "enum" : [ "commute", "newest", "price-asc", "price-desc" ]
                  },
                  "commute_points" : {
                    "description" : "Commute points positions and transportation types.",
                    "type" : "array",
                    "maxItems" : 5,
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/CommutePoint"
                    }
                  },
                  "bedrooms" : {
                    "description" : "Number of required bedrooms. Only properties with a number of bedrooms specified in this filter will be retrieved. To include only properties with at least 3 bedrooms the filter can be instantiated as `[3,4,5]`. If not specified no filter is applied.",
                    "enum" : [ 1, 2, 3, 4, 5 ],
                    "items" : {
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "minimum_budget" : {
                    "description" : "Minimum budget. Only properties with a monthly rent greater or equal to the specified minimum will be retrieved. If not specified, the default minimum budget is applied.",
                    "type" : "integer",
                    "minimum" : 100,
                    "maximum" : 25000
                  },
                  "maximum_budget" : {
                    "description" : "Maximum budget. Only properties with a monthly rent less or equal to the specified maximum will be retrieved. If not specified, the default maximum budget is applied.",
                    "type" : "integer",
                    "minimum" : 100,
                    "maximum" : 25000
                  },
                  "furnishing" : {
                    "description" : "Furnishing options. Only properties with the selected types of fournishing are retrieved. If not specified no filter is applied.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "enum" : [ "furnished", "part-furnished", "unfurnished" ]
                  },
                  "property_type" : {
                    "description" : "Property types. Only properties of the selected types are retrieved. If not specified no filter is applied.",
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "enum" : [ "studio", "flat", "house" ]
                  },
                  "moving_date" : {
                    "description" : "Moving date (YYYY-MM-DD). Only properties available at that date or before are retrieved. If not specified no filter is applied.",
                    "type" : "string",
                    "format" : "date"
                  }
                }
              },
              "examples" : {
                "Single commute point" : {
                  "value" : {
                    "commute_points" : [ {
                      "location" : {
                        "latitude" : 51.524294,
                        "longitude" : -0.1078061
                      },
                      "transportation_types" : [ "public", "walking" ],
                      "min_time" : 900,
                      "max_time" : 1800,
                      "category" : "work"
                    } ]
                  }
                },
                "Multiple commute points" : {
                  "value" : {
                    "commute_points" : [ {
                      "location" : {
                        "latitude" : 51.524294,
                        "longitude" : -0.1078061
                      },
                      "transportation_types" : [ "public", "walking" ]
                    }, {
                      "location" : {
                        "latitude" : 51.4166048,
                        "longitude" : -0.1927595
                      },
                      "transportation_types" : [ "public" ]
                    } ]
                  }
                },
                "Commute points and filters" : {
                  "value" : {
                    "commute_points" : [ {
                      "location" : {
                        "latitude" : 51.524294,
                        "longitude" : -0.1078061
                      },
                      "transportation_types" : [ "public", "walking" ]
                    }, {
                      "location" : {
                        "latitude" : 51.4166048,
                        "longitude" : -0.1927595
                      },
                      "transportation_types" : [ "public" ]
                    } ],
                    "bedrooms" : [ 1, 2 ],
                    "minimum_budget" : 100,
                    "maximum_budget" : 1000,
                    "furnishing" : [ "part-furnished", "unfurnished" ],
                    "property_type" : [ "flat", "house" ],
                    "moving_date" : "2019-12-02"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "An array of properties reference and relative commute information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "properties" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/CommuteSearchProperty"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          }
        }
      }
    },
    "/transportationOptions" : {
      "post" : {
        "summary" : "Transportation options",
        "requestBody" : {
          "description" : "Retrieve transportation options information, given the property and the desired commute points. 1 to 5 commute points must be specified.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "commute_points" : {
                    "description" : "Commute points' coordinates.",
                    "type" : "array",
                    "maxItems" : 5,
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/Location"
                    }
                  },
                  "property_id" : {
                    "description" : "Property identifier.",
                    "type" : "string",
                    "example" : "2D0FFF27-6446-4E15-B110-ECE4FCA75719"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "An array of properties reference and relative commute information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "from_property" : {
                      "$ref" : "#/components/schemas/Location"
                    },
                    "transportations" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "to_commute_point" : {
                            "$ref" : "#/components/schemas/Location"
                          },
                          "transportation_options" : {
                            "type" : "array",
                            "items" : {
                              "description" : "Type and duration of the commute from the property to the commute point.",
                              "type" : "object",
                              "properties" : {
                                "time" : {
                                  "description" : "Commute duration, in seconds.",
                                  "type" : "integer",
                                  "example" : 2135
                                },
                                "type" : {
                                  "description" : "Transportation type.",
                                  "type" : "string",
                                  "enum" : [ "walking", "tube", "train", "cycling" ],
                                  "example" : "tube"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Property not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CommuteSearchProperty" : {
        "type" : "object",
        "properties" : {
          "commute_points" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "journey" : {
                  "$ref" : "#/components/schemas/Journey"
                },
                "category" : {
                  "$ref" : "#/components/schemas/CommutePointCategory"
                },
                "time" : {
                  "type" : "number",
                  "format" : "integer",
                  "description" : "The cumulative time of the whole journey, in seconds"
                }
              }
            }
          },
          "property" : {
            "$ref" : "#/components/schemas/Property"
          },
          "rank" : {
            "format" : "float",
            "type" : "number"
          }
        }
      },
      "Journey" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "from" : {
              "type" : "string",
              "description" : "Node identifier in the commute graph of the starting point of the leg, can represent a station or a property"
            },
            "line" : {
              "type" : "string",
              "description" : "Name of the line, if the leg is by public transportation. Null otherwise."
            },
            "time" : {
              "type" : "number",
              "format" : "integer",
              "description" : "duration of the leg in seconds."
            },
            "to" : {
              "type" : "string",
              "description" : "Node identifier in the commute graph of the ending point of the leg, can represent a station or a commute point"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "walking", "tube", "train", "cycling" ],
              "description" : "Type of transportation"
            }
          }
        }
      },
      "Property" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "price" : {
            "type" : "integer"
          },
          "bedrooms" : {
            "type" : "integer"
          },
          "long_description" : {
            "type" : "string"
          },
          "short_description" : {
            "type" : "string"
          },
          "cultural_area" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "first_seen" : {
            "type" : "string",
            "format" : "date-time"
          },
          "furnishing" : {
            "type" : "string"
          },
          "property_type" : {
            "type" : "string"
          },
          "available_from" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "address" : {
            "type" : "string"
          },
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uri"
            }
          }
        },
        "example" : {
          "furnishing" : "NULL",
          "latitude" : 51.416569314538,
          "longitude" : -0.19045994235147,
          "simple_type" : "House",
          "num_bedrooms" : 3,
          "short_description" : "Short description...",
          "long_description" : "Long description...",
          "cultural_area" : "Abbey",
          "first_seen" : "2018-11-20T22:38:31",
          "available_from" : null,
          "price" : 2300,
          "images" : [ "https://s3.eu-west-2.amazonaws.com/misc.myhatch.co.uk/pic1.jpg" ]
        }
      },
      "CommutePoint" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "transportation_types" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "cycling", "public", "walking" ]
            }
          },
          "category" : {
            "$ref" : "#/components/schemas/CommutePointCategory"
          },
          "min_time" : {
            "type" : "number",
            "format" : "integer",
            "description" : "minimum time required by the commute, in seconds"
          },
          "max_time" : {
            "type" : "number",
            "format" : "integer",
            "description" : "maximum time required by the commute, in seconds"
          }
        },
        "required" : [ "location", "transportation_types" ]
      },
      "CommutePointCategory" : {
        "type" : "string",
        "enum" : [ "work", "gym", "education", "family and friends", "other" ]
      },
      "Location" : {
        "properties" : {
          "latitude" : {
            "format" : "float",
            "type" : "number",
            "example" : 51.524294
          },
          "longitude" : {
            "format" : "float",
            "type" : "number",
            "example" : -0.1078061
          }
        },
        "required" : [ "latitude", "longitude" ],
        "type" : "object"
      },
      "LocationFilter" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "radius" : {
            "format" : "float",
            "maximum" : 10000,
            "minimum" : 0,
            "type" : "number"
          }
        },
        "required" : [ "location", "radius" ],
        "type" : "object"
      }
    }
  }
}