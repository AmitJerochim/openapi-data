{"openapi":"3.0.2","info":{"title":"Subway Fresh Order APIs","description":"A set of APIs to handle order validation, submission, cancel and order history","version":"1.0.0","license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/Subway/FreshAPI-Order/1.0"},{"url":"https://uat-api.test.subway.com/fresh-order/v1","description":"UAT"},{"url":"https://api.subway.com/fresh-order/v1","description":"Production"}],"paths":{"/order":{"post":{"summary":"Create a new order","description":"This is an Asynchrnours API. Accepts a new order request with a id provided in orderId property.  If the order accepted/declined by the POS, client will be notified with the webhook with the correspondign status. As part of the /order, Order will be validated against /order/validate. The Totals in the order are expected to match the Total amount calculated as part of the validate. The recommended flow for the integration parterns and DSP is to first call /order/validate and then call /order to place an order. For Partners and DSP, Customer objct is not required and will be not processed. See API guide for further details.","operationId":"placeOrder","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderRequest"},"examples":{"thrid_party_order":{"value":{"locationId":"1234-0","orderSourceType":"third_party_marketplace","orderType":"individual","channelInboundProviderId":"inboundProviderID","channelOutboundDeliveryProviderId":"outboundProviderID","expectedReadyTime":"2019-08-28T12:15:00Z or 2019-08-28T12:15:00-05:00","deliveryDetails":{"deliveryMethod":"delivery","deliveryInstructions":"Delivery Instructions to the driver"},"items":[{"description":"Ham & Cheese Footlong Sub","itemId":"1","quantity":2,"price":5,"modifiers":[{"description":"Lettuce","itemId":"D1","price":0}]}],"orderId":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd","externalRefId":"5535991-100","totals":{"subTotal":10,"taxes":[{"name":"Sales Tax","amount":0.89}],"totalTax":0.89,"total":10.89},"payments":[{"paymentType":"prepaid"}]}}}}},"description":"Order object that needs to be added to the location","required":true},"responses":{"200":{"description":"This is asynchronous API. Order is created within the system sucessfully, order status accepted will be reuturned on HTTP 200 response. Order then is submitted asynchronously to restaurant POS. Once the restaurant accepts the order, order status (submitted, created, completed, rejected) will be provided through webhooks registered by the integration partner. If the Order is accepted but cannot have the order ready by expectedReadyTime that the Partner/DSP has requested, then the expectedReadyTime would reflect the time by when the order would be raedy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderResponse"},"examples":{"thrid_party_order":{"value":{"orderId":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd","externalRefId":"5535991-100","expectedReadyTime":"2019-08-28T12:15:00Z or 2019-08-28T12:15:00-05:00","totals":{"subTotal":10,"taxes":[{"name":"Sales Tax","amount":0.89}],"totalTax":0.89,"total":10.89}}}}}}},"400":{"description":"All functional validation errors and or System errors are resported under HTTP 400 code. It can contain one or more validation errors.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Errors"},"example":[{"code":"ORDR-3008","message":"Order contains invalid items","detail":{"message":"Order contains invalid items: D23, D45, D567","INVALID_ITEM_ID":["D23","D45","D567"]},"retry":false},{"code":"ORDR-3010","message":"Order Tax Calculation Mismatch","detail":{"message":"Order Tax Calculation Mismatch: Expected Tax Value: $2.36; Submitted Value: $2.20"},"retry":false}]}}},"401":{"description":"Unauthorized access. Invalid Credentials.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"SECU-8000","message":"Unauthorized access. Invalid Credentials.","detail":{"message":"Unauthorized access. Invalid Credentials."},"retry":false}}}},"500":{"description":"The server has encountered a situation it doesn't know how to handle. This could result in a known system resources errors (code=9998) or unknow, unhandled error (code=9999). In case of 9998, internal error code and message will be propagated for troubleshooting purposes.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"examples":{"known_internal_error_scenario":{"value":{"code":"SYST-9998","message":"Internal System Error; Please retry","detail":{"message":"<Internal Error Code> - <Internal Error Message>."},"retry":true}},"unknown_internal_error_scenario":{"value":{"code":"SYST-9999","message":"Unknown, Internal System Error; Please try","detail":{"message":"Unknown, Internal System Error; Please try"},"retry":true}}}}}}},"security":[{"order_auth":["write:order","read:order"]}],"externalDocs":{"description":"Refer to list of Master Error Codes for the potential error codes and messages","url":"https://api-docs.subway.com/freshAPIErrorCodes.html"}}},"/order/validate":{"post":{"summary":"Validate an new order","description":"This API validates the order; Validates if the orderId is unique for a given Partner/DSP.","operationId":"validateOrder","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderValidationRequest"},"example":{"locationId":"1234-0","orderSourceType":"third_party_marketplace","channelInboundProviderId":"inboundProviderID","channelOutboundDeliveryProviderId":"outboundProviderID","orderType":"individual","expectedReadyTime":"2019-08-28T12:15:00Z or 2019-08-28T12:15:00-05:00","externalRefId":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd","deliveryDetails":{"deliveryMethod":"delivery"},"items":[{"description":"Ham & Cheese Footlong Sub","itemId":"1","quantity":1,"price":5,"modifiers":[{"description":"Lettuce","itemId":"D1","price":0}]}]}}},"description":"Order details to be validated","required":true},"responses":{"200":{"description":"Order sucessfully Placed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderValidationResponse"},"examples":{"Valid Order":{"value":{"orderId":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd","externalRefId":"9577524-5647","totals":{"subTotal":5,"taxes":[{"name":"Sales Tax","amount":0.3}],"totalTax":0.3,"discounts":0,"tips":0,"deliveryFee":0,"otherFees":0,"total":5.3}}}}}}},"400":{"description":"All functional validation errors and or System errors are resported under HTTP 400 code. It can contain one or more validation errors.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Errors"},"example":[{"code":"ORDR-3008","message":"Order contains invalid items","detail":{"message":"Order contains invalid items: D23, D45, D567","INVALID_ITEM_ID":["D23","D45","D567"]},"retry":false},{"code":"LOCA-3000","message":"Invalid Location; Location not found","detail":{"message":"Inavlid Location: 37870-0","INVALID_LOCATION_ID":["37870-0"]},"retry":false}]}}},"401":{"description":"Unauthorized access. Invalid Credentials.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"SECU-8000","message":"Unauthorized access. Invalid Credentials.","detail":{"message":"Unauthorized access. Invalid Credentials."},"retry":false}}}},"500":{"description":"The server has encountered a situation it doesn't know how to handle. This could result in a known system resources errors (code=9998) or unknow, unhandled error (code=9999). In case of 9998, internal error code and message will be propagated for troubleshooting purposes.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"examples":{"known_internal_error_scenario":{"value":{"code":"SYST-9998","message":"Internal System Error; Please retry","detail":{"message":"<Internal Error Code> - <Internal Error Message>."},"retry":true}},"unknown_internal_error_scenario":{"value":{"code":"SYST-9999","message":"Unknown, Internal System Error; Please try","detail":{"message":"Unknown, Internal System Error; Please try"},"retry":true}}}}}}},"security":[{"order_auth":["write:order","read:order"]}],"externalDocs":{"description":"Refer to list of Master Error Codes for the potential error codes and messages","url":"https://api-docs.subway.com/freshAPIErrorCodes.html"}}},"/order/{orderId}":{"get":{"summary":"Find order by ID","description":"Returns an order for a given order id","operationId":"getOrderById","parameters":[{"name":"orderId","in":"path","description":"ID of order to return","required":true,"schema":{"type":"string"},"example":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd"}],"responses":{"200":{"description":"Order returned sucessfully based on the order id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"401":{"description":"Unauthorized access. Invalid Credentials.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"SECU-8000","message":"Unauthorized access. Invalid Credentials.","detail":{"message":"Unauthorized access. Invalid Credentials."},"retry":false}}}},"404":{"description":"Invalid Order ID; Requested order not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"ORDR-3009","message":"Order ID not found; Invalid Order ID","detail":{"message":"Invalid Order ID: 977524e7-92ab-4b44-b0a0-06d6bd1a2abd"},"retry":false}}}},"500":{"description":"The server has encountered a situation it doesn't know how to handle. This could result in a known system resources errors (code=9998) or unknow, unhandled error (code=9999). In case of 9998, internal error code and message will be propagated for troubleshooting purposes.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"examples":{"known_internal_error_scenario":{"value":{"code":"SYST-9998","message":"Internal System Error; Please retry","detail":{"message":"<Internal Error Code> - <Internal Error Message>."},"retry":true}},"unknown_internal_error_scenario":{"value":{"code":"SYST-9999","message":"Unknown, Internal System Error; Please try","detail":{"message":"Unknown, Internal System Error; Please try"},"retry":true}}}}}}},"security":[{"order_auth":["read:order"]}],"externalDocs":{"description":"Refer to list of Master Error Codes for the potential error codes and messages","url":"https://api-docs.subway.com/freshAPIErrorCodes.html"}}},"/order/{orderId}/cancel":{"post":{"summary":"Cancel an order","description":"Cancel a given order","operationId":"cancelOrder","parameters":[{"name":"orderId","in":"path","description":"ID of order that needs to be cancelled","required":true,"schema":{"type":"string"},"example":"977524e7-92ab-4b44-b0a0-06d6bd1a2abd"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"cancelReason":{"type":"string","description":"Provide reason for cancellation. It is an optional value."}}}}}},"responses":{"200":{"description":"Order cancellation submitted succesfully"},"401":{"description":"Unauthorized access. Invalid Credentials.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"SECU-8000","message":"Unauthorized access. Invalid Credentials.","detail":{"message":"Unauthorized access. Invalid Credentials."},"retry":false}}}},"404":{"description":"Invalid Order ID or Order ID missing in the request; Order could not be cancelled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"code":"ORDR-3009","message":"Invalid Order ID or Order ID missing in the request","detail":{"message":"Invalid Order ID: 977524e7-92ab-4b44-b0a0-06d6bd1a2abd"},"retry":false}}}},"500":{"description":"The server has encountered a situation it doesn't know how to handle. This could result in a known system resources errors (code=9998) or unknow, unhandled error (code=9999). In case of 9998, internal error code and message will be propagated for troubleshooting purposes.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"examples":{"known_internal_error_scenario":{"value":{"code":"SYST-9998","message":"Internal System Error; Please retry","detail":{"message":"<Internal Error Code> - <Internal Error Message>."},"retry":true}},"unknown_internal_error_scenario":{"value":{"code":"SYST-9999","message":"Unknown, Internal System Error; Please try","detail":{"message":"Unknown, Internal System Error; Please try"},"retry":true}}}}}}},"security":[{"order_auth":["write:order","read:order"]}],"externalDocs":{"description":"Refer to list of Master Error Codes for the potential error codes and messages","url":"https://api-docs.subway.com/freshAPIErrorCodes.html"}}}},"components":{"schemas":{"OrderRequest":{"allOf":[{"$ref":"#/components/schemas/OrderDetails"},{"$ref":"#/components/schemas/OrderID"},{"$ref":"#/components/schemas/ExternalReferenceID"},{"type":"object","required":["orderId","totals","payments"],"properties":{"customer":{"$ref":"#/components/schemas/Customer"},"deliveryDetails":{"$ref":"#/components/schemas/DeliveryDetails"},"totals":{"$ref":"#/components/schemas/Totals"},"payments":{"$ref":"#/components/schemas/Payments"}}}]},"Order":{"allOf":[{"$ref":"#/components/schemas/OrderDetails"},{"$ref":"#/components/schemas/OrderID"},{"$ref":"#/components/schemas/ExternalReferenceID"},{"$ref":"#/components/schemas/OrderStatus"},{"type":"object","required":["orderId","totals","payments"],"properties":{"customer":{"$ref":"#/components/schemas/Customer"},"deliveryDetails":{"$ref":"#/components/schemas/DeliveryDetails"},"totals":{"$ref":"#/components/schemas/Totals"},"payments":{"$ref":"#/components/schemas/Payments"}}}]},"OrderResponse":{"allOf":[{"$ref":"#/components/schemas/OrderID"},{"$ref":"#/components/schemas/ExternalReferenceID"},{"$ref":"#/components/schemas/OrderStatus"},{"type":"object","required":["orderId","orderStatus","totals"],"properties":{"expectedReadyTime":{"type":"string","format":"date-time","description":"this would return expected time when the order would be ready in the store. Store local times will be reprsented in ISO 8601 format. For example, '2019-10-25T16:00:00Z'. Clients are expected to convert back into the local store time based on the time zone, the store is located in."},"totals":{"$ref":"#/components/schemas/Totals"}}}]},"OrderValidationResponse":{"allOf":[{"$ref":"#/components/schemas/OrderID"},{"$ref":"#/components/schemas/ExternalReferenceID"}],"type":"object","required":["orderId","totals"],"properties":{"totals":{"$ref":"#/components/schemas/Totals"}}},"Customer":{"type":"object","required":["customerId"],"properties":{"customerId":{"type":"string","description":"id of the customer (diner) provided by Subway systems. It is not required and is not considered for the third party orders. For internal orders, if the customer id is provided, orders are assoicated to the customer account. If the customer id is not provided, but first name, last name and email id is provided, a new customer account will be created and customer id is returned in the response. Not supported in the Fresh APIs initial release."},"firstName":{"type":"string","description":"first name of the customer (diner); It is not required and is mot considered for the third party orders. For internal orders, first name is required when creating an account. If the customer id is provided, i.e. customer account already exists, first name is not required, will be ignored if provided. Not supported in the Fresh APIs initial release."},"lastName":{"type":"string","description":"last name of the customer (diner); It is not required and is mot considered for the third party orders. For internal orders, first name is required when creating an account. If the customer id is provided, i.e. customer account already exists, last name is not required, will be ignored if provided. Not supported in the Fresh APIs initial release."},"contactNumber":{"type":"string","description":"Contact number of the customer (diner); It is not required and is mot considered for the third party. For internal orders, contact number is optional when creating an account. If the customer id is provided, i.e. customer account already exists, contact number is not required, will be updated if provided. Not supported in the Fresh APIs initial release."},"email":{"type":"string","description":"Email of the customer (diner); It is not required and is mot considered for the third party orders. It is mandatory when creating an account. During creation of the account, this id can be used to create an account. Note -  These customer creation rules are to be alinged with Customer Hub. This information is not required for third party integrations. Not supported in the Fresh APIs initial release."}}},"DeliveryAddress":{"type":"object","properties":{"address1":{"type":"string","description":"delivery address of the customer. If the orderSourceype is third_party_marketplace, this information is nor required. Not supported in the Fresh APIs initial release."},"address2":{"type":"string","description":"delivery address of the customer. If the orderSourceype is third_party_marketplace, this information is nor required. Not supported in the Fresh APIs initial release."},"city":{"type":"string","description":"delivery address city of the customer. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."},"state":{"type":"string","description":"delivery address state of the customer. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."},"zipcode":{"type":"string","description":"delivery address zipcode of the customer. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."},"country":{"type":"string","description":"delivery address country of the customer. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."},"latitude":{"type":"number","format":"float","description":"delivery address latitude. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."},"longitude":{"type":"number","format":"float","description":"delivery address longitude. If the orderSourceype is third_party_marketplace, this information is not required. Not supported in the Fresh APIs initial release."}}},"OrderID":{"type":"object","required":["orderid"],"properties":{"orderId":{"type":"string","description":"When an order is validated sucessfully, orderId is generated. An order can be validated more than once, orderId validated in the previous validation can be passsed and used as refernece, alternatively if orderId is not passed in the validaiton endpoint, new orderID is generated on sucessful validation. orderId is mandatory on the /order endpoint."}}},"ExternalReferenceID":{"type":"object","properties":{"externalRefId":{"type":"string","description":"This field can be used to by the 3rd party to pass an reference id/order id that from their systems that needs to printed on the ticket/receipt by the POS for the pick up/delivery drivers reference. If externalRefId is passed as part of the order creation, it needs to eb sent back as part of the get order by orderId and orer status webhooks."}}},"OrderStatus":{"type":"object","required":["orderStatus"],"properties":{"orderStatus":{"description":"accepted- Orders accepted within integration layer and order id is generated; but not submitted (pushed to Queue) to POS; Order not pushed to the restaurant queue yet. | created - Order has been submitted to Store POS; | cancelled-  Order has been cancelled | rejected - order validation failed with 400 HTTP response codes and error codes with an retryFlag set to either true or false. | failed- If the system is unable to submit the order to POS, after n number of retries, if does send a webhook with a status of “failed”. “failed” status can also result if Restaurant POS rejects an order. In case of “failed” status, order submission cannot be retried. Only action that can be taken on the order when it is in the failed status is to cancel an order.|  completed - order is completed by the POS","enum":["accepted","created","completed","rejected","failed","cancelled_pending","cancelled"]}}},"OrderValidationRequest":{"allOf":[{"$ref":"#/components/schemas/OrderDetails"},{"$ref":"#/components/schemas/ExternalReferenceID"}]},"OrderDetails":{"type":"object","required":["locationId","items","orderType","orderSourceType"],"properties":{"locationId":{"type":"string","description":"location of the restaurant  where order needs to be placed"},"orderSourceType":{"type":"string","description":"source from where the order is originated.","enum":["kiosk_fixed","kiosk_handheld","subway_pos","non_subway_pos","subway_mobile_app_ios","subway_mobile_app_android","subway_web_mobile","subway_web_desktop","drive_thru","drive_thru_kiosk","third_party_marketplace","third_party_kiosk","subway_catering_call_center","social_sales_channels","white_label_subway_mobile_app_ios","white_label_subway_mobile_app_android","white_label_subway_web_mobile","white_label_subway_web_desktop","conversational_commerce"]},"orderType":{"type":"string","description":"if the order is individual or caterning tyoe. Only indiviudal orders are supported in the inital release","enum":["individual","catering"]},"channelInboundProviderId":{"type":"string","description":"Provider through which order was placed.  ID will be provided as part of onboarding process to the partners. This id is mandatory for thrid party integrations."},"channelOutboundDeliveryProviderId":{"type":"string","description":"DSP who is responsible for delivery. ID will be provided as part of onboarding process to the partners. This id is mandatory for thrid party integrations."},"expectedReadyTime":{"type":"string","format":"date-time","description":"This is optional field. Time format will be in UTC ISO 8601 format. If the time is sent in this as part of /order or /order/validate API, it will be compared to timestamp when the order was submitted to Subway Integration layer. If the difference between these two times is less than 15 min or agreed upon time between Subway and Partner/DSP, order will be accepted but will be appropriate status code to indicate that the order wlll be not ready within the time requested. All times represented are in the store local times. Time format will be in UTC ISO 8601 format. For example, input can be either in 2019-10-25T16:00:00Z or 2019-10-25T09:00:00-05:00 format. expectedReadyTime in the response would be represnted in  2019-10-25T16:00:00Z format."},"deliveryDetails":{"$ref":"#/components/schemas/DeliveryDetails"},"items":{"$ref":"#/components/schemas/OrderItems"}}},"DeliveryDetails":{"type":"object","description":"All details related to the delivery.","required":["deliveryMethod"],"properties":{"deliveryMethod":{"type":"string","description":"type of delivery. pickup - if the customer is going to pick up the order; delivery - if the order needs to be delivered. In certain countries, delievry method drives the tax implications, so deliveryMethod is required for the order validation and order creation.","enum":["pickup","delivery"]},"deliveryInstructions":{"type":"string","description":"any instructions that needs to be passed to the POS for the delivery driver."},"deliveryAddress":{"$ref":"#/components/schemas/DeliveryAddress"}}},"Tax":{"type":"object","required":["name","amount"],"properties":{"name":{"type":"string","description":"type of the tax description. For example, \"Sales Tax\""},"amount":{"type":"number","format":"float","description":"tax amount for the given type"}}},"Taxes":{"type":"array","items":{"$ref":"#/components/schemas/Tax"}},"Totals":{"type":"object","required":["subTotal","totalTax","total"],"properties":{"subTotal":{"type":"number","format":"float","description":"subtotal of the order without tax. The subtotal is calculated based on the order items as part of teh validation call and provided in respone. This subtotal will be passed back in the /order endpoint. subtotal is validated as part of the order as well."},"taxes":{"$ref":"#/components/schemas/Taxes"},"totalTax":{"type":"number","format":"float","description":"total taxes of the order calculated based on the order items in the /order/validate endpoint. Total taxes needs are sent pasrt of /order/validate order needs to be passed as part of the /order request."},"discounts":{"type":"number","format":"float","description":"Not applicable for the third party integration"},"tips":{"type":"number","format":"float","description":"Not applicable for the third party integration"},"deliveryFee":{"type":"number","format":"float","description":"Delivery fees if applicable"},"otherFees":{"type":"number","format":"float","description":"Any other fees that is being added to the order. Not applicable for the third party integration"},"total":{"type":"number","format":"float","description":"total amount including taxes. Total calculated is sent as part of the /order/validate endpoint"}}},"Payments":{"type":"array","items":{"type":"object","required":["paymentType","amount"],"properties":{"paymentType":{"type":"string","description":"Partners who collect payments on their end, should send prepaid; When the order source is either white label or subway, other payment types will be applicable","enum":["prepaid","cash","credit","giftcard","loyalty"]},"paymentDetail":{"type":"string","description":"if paymentType is \"Prepaid\", this value can be empty"},"amount":{"type":"number","format":"float","description":"Amount paid"},"issuer":{"type":"string","description":"Provider name, Giftcard provider, etc. If PaymentType is Prepaid, issuer can be empty"}}}},"OrderItems":{"description":"There needs to be minimum of 1 item. Currently a max of 25 items is configured in a given basket. This limit might change based on Productivity index discussions with the Franchise.","type":"array","items":{"type":"object","required":["itemId","quantity","price"],"properties":{"description":{"type":"string","description":"item description"},"itemId":{"type":"string","description":"item id that is being ordered"},"quantity":{"type":"integer","description":"total quantity of the item"},"price":{"type":"number","format":"float","description":"price of the item"},"modifiers":{"$ref":"#/components/schemas/Modifiers"}}}},"Modifiers":{"type":"array","items":{"type":"object","required":["itemId","price"],"properties":{"description":{"type":"string","description":"modifier item description"},"itemId":{"type":"string","description":"modifier item id that is being ordered"},"price":{"type":"number","format":"float","description":"price of the modifier item"},"modifiers":{"$ref":"#/components/schemas/Modifiers"}}}},"Errors":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/Error"}]}},"Error":{"required":["code","message","detaliedMessage","retry"],"properties":{"code":{"type":"string","description":"error code identifying the error;"},"message":{"type":"string","description":"pre-defined/standard error message describing the error code/error scenario"},"detail":{"type":"object","properties":{"message":{"type":"string","description":"runtime error message that caused the error"}},"additionalProperties":{"type":"array","description":"In this section object keys on which error occured.","items":{"type":"string"}}},"retry":{"type":"boolean","description":"true, if this transaction can be retried by the partner otherwise false"}}}},"securitySchemes":{"order_auth":{"type":"openIdConnect","openIdConnectUrl":"https://example.url/{tenantId}/v2.0/.well-known/openid-configuration"}}}}