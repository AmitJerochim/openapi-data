{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a draft of the api for the server.  \n\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "1.0.0",
    "title" : "Server Mediator"
  },
  "tags" : [ {
    "name" : "Player",
    "description" : "Information about a player"
  }, {
    "name" : "Picture",
    "description" : "All data and operations about a picture"
  } ],
  "paths" : {
    "/picture" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "gets picture object",
        "operationId" : "getPic",
        "parameters" : [ {
          "in" : "query",
          "name" : "pictureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "requested picture",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Picture"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "picture not found or no permissions"
          }
        }
      },
      "post" : {
        "tags" : [ "Picture" ],
        "summary" : "add a picture",
        "operationId" : "addPic",
        "description" : "Adds a picture to be classified",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing picture already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Picture"
              }
            }
          },
          "description" : "Picture to be classified"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Picture" : {
        "type" : "object",
        "required" : [ "id", "uploaded_by" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "8c6512fb-6c26-413d-88f3-a6fb172b61be"
          },
          "uploaded_by" : {
            "$ref" : "#/components/schemas/User"
          },
          "filename" : {
            "type" : "array",
            "description" : "this is a list of filenames which will be uploaded and send",
            "items" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "class" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Class"
            }
          }
        }
      },
      "Class" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ae4a573b-fffc-41fb-8be5-7f4c9ed77cee"
          },
          "cassified_by" : {
            "type" : "string",
            "example" : "Google Vision AI"
          },
          "class" : {
            "type" : "string",
            "example" : "bird"
          },
          "species" : {
            "type" : "string",
            "example" : "seagull"
          },
          "accuracy" : {
            "type" : "integer",
            "example" : 0.86
          }
        }
      },
      "Game" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "Example game with undefined properties"
          }
        }
      },
      "User" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "c15b4792-c660-407b-a27a-643050fbadc1"
          },
          "name" : {
            "type" : "string",
            "example" : "Sammy Delanghe"
          },
          "games" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Game"
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/DP2020-04/Server_mediator/1.0.0"
  } ]
}