openapi: 3.0.0
info:
  description: |
    This is a common registeration eligibility api.
  version: "1.0.0"
  title: Eligibility API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Pru_Customer_Office/partyEligibility/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Pru_Customer_Office/CR-Eligibility/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PruISG/CommonReg-Eligiblity/1.0.0
tags:
  - name: eligiblity
    description: Determines Eligiblity for Common Registeration
    externalDocs:
      description: Find out more
      url: 'https://pramerica-confluence.prudential.com/pages/viewpage.action?spaceKey=~X222949&title=Common-Registeration+-+Eligiblity+API'
paths:
  /party/eligible:
    post:
      tags:
        - eligiblity
      summary: Determine if user is eligible for common registeration.
      operationId: checkEligiblity
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/Pru_Customer_Office/Message/1.0.0#/components/headers/PruRequestIdParam'
        - $ref: 'https://api.swaggerhub.com/domains/Pru_Customer_Office/Message/1.0.0#/components/headers/PruSourceIdentiyParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyEligibilityRequest'
            examples:
              request:
                value: 
                  last4SSN: "1234"
                  zipCode: "12345"
                  dateOfBirth: "01/01/1978"
                  partyAccounts:
                  - accountId: "C12345"
                    bu: "ILI"              
      responses:
        '500':
          description: Bad request. If any of the required parameter is missing or invalid
          content:
            'application/json':
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Pru_Customer_Office/Message/1.0.0#/components/schemas/ErrorDetail' 
        '400':
          description: Bad request. If any of the required parameter is missing or invalid
          content:
            'application/json':
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Pru_Customer_Office/Message/1.0.0#/components/schemas/ErrorDetail'        
        '200':
         description: common registration eligiblity check complete
         content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityDetails'
              examples:
                UserIsEligible:
                  summary: UserIsEligible
                  value:
                    - isEligible: true
                      eligiblityCode: "EL001"
                      eligiblityMessage: "success"
                      bu: ILI
                      accountId: 1234
                      coUserId: 2345678901
                UserIsEligibleAndOwnDifferentBUProduct:
                  summary: UserIsEligibleAndOwnDifferentBUProduct
                  value:
                    - isEligible: true
                      eligiblityCode: "EL002"
                      eligiblityMessage: "customer own different bu products as well"
                      buName: ILI
                      accountId: 1234
                      coUserId: 2345678901
                UserIsIndvRegisteredAlready:
                  summary: UserIsIndvRegisteredAlready
                  value:
                    - isEligible: false
                      eligiblityCode: "EL003"
                      eligiblityMessage: "indv registered customer"
                      bu: ILI
                      accountId: 4567
                      coUserId: null
                UserIsLegacyRegisteredAlready:
                  summary: UserIsLegacyRegisteredAlready
                  value:
                    - isEligible: false
                      eligiblityCode: "EL004"
                      eligiblityMessage: "legacy registered customer" 
                      bu: ILI
                      accountId: 4567
                      coUserId: null
                UserEligibleForLegacyRegisterationOnly:
                  summary: UserEligibleForLegacyRegisterationOnly
                  value:
                    - isEligible: false
                      eligiblityCode: "EL005"
                      eligiblityMessage: "eligible for registeration with legacy system only"  
                      bu: ILI
                      accountId: 4567 
                      coUserId: null
                UserNotEligibleForLegacyAndMyPruRegisteration:
                  summary: UserNotEligibleForLegacyAndMyPruRegisteration
                  value:
                    - isEligible: false
                      eligiblityCode: "EL006"
                      eligiblityMessage: "not eligible to register with legacy and my pru both"
                      bu: ILI
                      accountId: 4567
                      coUserId: null
                UserAlreadyInitiatedRegisteration:
                  summary: UserAlreadyInitiatedRegisteration
                  value:
                    - isEligible: false
                      eligiblityCode: "EL007"
                      eligiblityMessage: "user already initiated registeration process"
                      bu: ILI
                      accountId: 4567
                      coUserId: null
                UserNotFound:
                  summary: UserNotFound
                  value:
                    - isEligible: false
                      eligiblityCode: "EL008"
                      eligiblityMessage: "user not found"  
                      bu: ILI
                      accountId: 4567
                      coUserId: null
components:
  parameters:
    ContractId:
     in: query
     name: contractId
     description: Customer's contract number / policy number
     schema:
      type: string        
    BU:
     in: query
     name: bu
     description: BU name to establish eligiblity with
     schema:
       type: string
       enum: [ILI]
  schemas:
    PartyEligibilityRequest:
      type: object
      properties:
        last4SSN:
          type: string
        zipCode:
          type: number
        dateOfBirth:
          type: string
        partyAccounts:
          type: array
          items:
            type: object
            properties:
              accountid:
                type: string
              bu:
                type: string
    EligibilityDetails:
      description: this will be returned for calls made to determine if the customer is eligible for common registeration or not.
      type: array
      items:
        type: object
        properties:
          isEligible:
            type: boolean
          eligiblityCode:
            type: string
            enum: ["EL001","EL002","EL003","EL004","EL005","EL006","EL007", "EL008"]
          eligibilityMessage:
            type: string
            enum: 
              - "success"
              - "customer own different bu products as well"
              - "indv registered customer"
              - "legacy registered customer"
              - "eligible for registeration with legacy system only"
              - "not eligible to register with legacy and my pru both"
              - "user already initiated registeration process"
              - "user not found"
          bu:
            type: string
          accountId:
            type: string
          coUserId:
            type: string
