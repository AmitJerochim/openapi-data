openapi: 3.0.0
servers:
  - description: SwaggerHub API Astea to BGIS RealSuite Mock URL
    url: https://virtserver.swaggerhub.com/AsteaBGIS/RealSuite/1.11.0
info:
  description: This API defines the interfaces for communications from RealSuite to Astea Alliance
  version: "1.11.0"
  title: RealSuite to Astea API
  contact:
    email: sjeffery@astea.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: developers
    description: Methods defined for API development
paths:
  /serviceOrder:
    post:
      tags:
        - developers
      summary: adds a service order
      operationId: addServiceOrder
      description: creates a service order in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrder'
        description: Service order to add
      responses:
        '201':
          description: Service order created
        '400':
          description: Invalid service order data
    put:
      tags:
        - developers
      summary: updates a service order
      operationId: updateServiceOrder
      description: updates a service order in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrder'
        description: Service order to update
      responses:
        '200':
          description: Service order updated
        '400':
          description: Invalid service order data
    get:
      tags:
        - developers
      summary: retrieves order id for specified work order number
      operationId: getServiceOrderId
      description: retrieves Astea Alliance service order id based on specified work order number
      parameters:
        - in: query
          name: workOrderNumber
          description: work order number number for service order
          required: true
          schema:
            type: string
      responses:
        '200':
          description: service order id based on work order number number or empty if no match for reference number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderResponse'
        '400':
          description: Failed to retrieve service order identifier
    delete:
      tags:
        - developers
      summary: suspends the order for the specified work order number
      operationId: deleteServiceOrderId
      description: retrieves Astea Alliance service order id based on specified work order number and suspends the order
      parameters:
        - in: query
          name: workOrderNumber
          description: work order number number for service order
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service order suspended
        '400':
          description: Invalid work order number
  /serviceOrder/equipment:
    put:
      tags:
        - developers
      summary: adds an installed item to a service order
      operationId: addServiceOrderItem
      description: adds the specified installed item to a service order in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderEquipment'
        description: Service order to update and installed item to be added
      responses:
        '200':
          description: Installed item added to service order
        '400':
          description: Invalid installed item or service order data
    get:
      tags:
        - developers
      summary: validates whether installed item has been added to a service order
      operationId: getServiceOrderItemExists
      description: returns indication of whether installed item has been added to a service order based on specified work order, site and tag number
      parameters:
        - in: query
          name: workOrderNumber
          description: work order number number for service order
          required: true
          schema:
            type: string
        - in: query
          name: siteId
          description: site location
          required: true
          schema:
            type: string
        - in: query
          name: tagNumber
          description: tag number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: indication of whether installed item has been added to service order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderEquipmentResponse'
        '400':
          description: Failed to validate whether installed has been added to service order
  /serviceOrder/jobPlan:
    put:
      tags:
        - developers
      summary: adds a job plan file to a service order
      operationId: addServiceOrderJobPlan
      description: adds the base 64 encoded job plan file to a service order in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderJobPlan'
        description: Service order to update and job plan file to be added
      responses:
        '200':
          description: Job plan added to service order
        '400':
          description: Invalid job plan or service order data
  /customerSite:
    post:
      tags:
        - developers
      summary: adds a customer and/or site
      operationId: addCustomerSite
      description: creates a customer and/or site in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSite'
        description: Customer and/or site to add
      responses:
        '201':
          description: Customer and/or site created
        '400':
          description: Invalid customer and/or site data
    put:
      tags:
        - developers
      summary: updates a customer and/or site
      operationId: updateCustomerSite
      description: updates a customer and/or site in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSite'
        description: Customer and/or site to update
      responses:
        '200':
          description: Customer and/or site updated
        '400':
          description: Invalid customer and/or site data
    get:
      tags:
        - developers
      summary: validates whether customer/site exists
      operationId: getCompanyExists
      description: returns indication of whether company exists based on specified company identifier
      parameters:
        - in: query
          name: companyId
          description: company identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: indication of whether company exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSiteResponse'
        '400':
          description: Failed to validate whether company exists
  /installedItem:
    post:
      tags:
        - developers
      summary: adds an installed item
      operationId: addInstalledItem
      description: creates an installed item in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstalledItem'
        description: Installed item to add
      responses:
        '201':
          description: Installed item created
        '400':
          description: Invalid installed item data
    put:
      tags:
        - developers
      summary: updates an installed item
      operationId: updateInstalledItem
      description: updates an installed item in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstalledItem'
        description: Installed item to update
      responses:
        '200':
          description: Installed item updated
        '400':
          description: Invalid installed item data
    get:
      tags:
        - developers
      summary: validates whether installed item exists
      operationId: getInstalledItemExists
      description: returns indication of whether installed item exists based on specified product and tag number
      parameters:
        - in: query
          name: productId
          description: product identifier
          required: true
          schema:
            type: string
        - in: query
          name: tagNumber
          description: tag number
          required: true
          schema:
            type: string
        - in: query
          name: siteId
          description: site location
          required: true
          schema:
            type: string
      responses:
        '200':
          description: indication of whether installed item exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledItemResponse'
        '400':
          description: Failed to validate whether installed item exists
  /product:
    post:
      tags:
        - developers
      summary: adds a product
      operationId: addProduct
      description: creates a product in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Product to add
      responses:
        '201':
          description: Product created
        '400':
          description: Invalid product data
    put:
      tags:
        - developers
      summary: updates a product
      operationId: updateProduct
      description: updates a product in Astea Alliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Product to update
      responses:
        '200':
          description: Product updated
        '400':
          description: Invalid product data
    get:
      tags:
        - developers
      summary: validates whether product exists
      operationId: getProductExists
      description: returns indication of whether product exists based on specified product identifier
      parameters:
        - in: query
          name: productId
          description: product identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: indication of whether product exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Failed to validate whether product exists
components:
  schemas:
    ServiceOrder:
      type: object
      required: 
        - workOrderNumber
      properties:
        workOrderNumber:
          type: string
          example: XXX13582415
        orderType:
          type: string
          example: CM
        siteId:
          type: string
          example: XXX02351
        shortDescription:
          type: string
          example: Hydraulic door broken
        problemDescription:
          type: string
          example: '**REDIRECTED on 01/04/2015 01:38: The hydraulic door closer is broken. Please repair it. Thanks.'
        inProgressDatetime:
          type: string
          format: datetime
          example: '2019-10-14T15:00:00'
        serviceProviderId:
          type: string
          example: '94238-XXXX'
        customerId:
          type: string
          example: '02351'
        openDate:
          type: string
          format: date
          example: '2019-10-14'
        openTime:
          type: string
          format: time
          example: '12:25:00'
        callerName:
          type: string
          example: John Smith
        callerPhone:
          type: string
          example: 566-778-8890
        buildingCondition:
          type: string
          example: CLEAN
        buildingManager:
          type: string
          example: MATAAASON HAZZZL
        service:
          type: string
          example: Door
        bomaCode:
          type: string
          example: H55
        requestCategory:
          type: string
          example: SAFETY
        requestType:
          type: string
          example: FIRE EQUIPMENT
        priority:
            type: integer
            format: int32
            minimum: 1
            maximum: 99
            example: 25
        compliance:
          type: string
          enum: 
            - N
            - Y
          example: N
        createdBy:
          type: string
          example: XXXX
        assetGroup:
          type: string
          example: CM0B018-60-310-000002
        assetGroupDescription:
          type: string
          example: ABC SJJHSKJKJ
        customerReference:
          type: string
          example: XXXX
        downtime:
          type: string
          example: '0'
        chargeToAccount:
          type: string
          example: RWS3478521
        progressNotes:
          type: string
          example: Work order action history
        resolveText:
          type: string
          example: Door repaired
        criticality:
          type: string
          example: Urgent
        hoursRequired:
          type: string
          example: '9am-5pm ET Mon-Fri'
        referenceNumber:
          type: string
          example: RX4535777
        resolveDate:
          type: string
          format: date
          example: '2019-10-15'
        resolveTime:
          type: string
          format: time
          example: '08:40:00'
        floorName:
          type: string
          example: 'FLOOR 001'
        jobPlanNumber:
          type: string
          example: '483-FD-W'
        status:
          type: string
          example: COMP
        pmScheduleNumber:
          type: string
          example: '121233'
        employeeId:
          type: string
          example: '103430'
        acknowledgedOnDatetime:
          type: string
          format: datetime
          example: '2019-10-14T15:00:00'
        workspaceName:
          type: string
          example: SSKK
        businessUnit:
          type: string
          example: XXXX
        localZone:
          type: string
          enum: 
            - N
            - Y
          example: Y
        acknowledgedByDatetime:
          type: string
          format: datetime
          example: '2019-10-14T15:00:00'
        arrivedByDatetime:
          type: string
          format: datetime
          example: '2019-10-14T14:35:00'
        requiredByDate:
          type: string
          format: date
          example: '2019-10-14'
        requiredByTime:
          type: string
          format: time
          example: '15:00:00'
        problemCode:
          type: string
          example: GEN-R
    ServiceOrderResponse:
      type: object
      required: 
        - orderId
        - progressNotes
      properties:
        orderId:
          type: string
          example: 'SV1910140001@@1'
        progressNotes:
          type: string
          example: '12/18/2019 11:25:34 Ticket created to address problem'
    ServiceOrderEquipment:
      type: object
      required:
        - workOrderNumber
        - siteId
        - tagNumber
      properties:
        workOrderNumber:
          type: string
          example: XXX13582415
        siteId:
          type: string
          example: XXX02351
        tagNumber:
          type: string
          example: 'XXX003-20-257-000001'
    ServiceOrderEquipmentResponse:
      type: object
      required: 
        - serviceOrderEquipmentExists
      properties:
        serviceOrderEquipmentExists:
          type: boolean
          example: true
    ServiceOrderJobPlan:
      type: object
      required:
        - workOrderNumber
        - jobPlan
      properties:
        workOrderNumber:
          type: string
          example: XXX13582415
        jobPlan:
          type: string
          format: byte
          example: 'VGhpcyBpcyBhIHRlc3Qgam9iIHBsYW4='
    CustomerSite:
      type: object
      required:
        - companyId
      properties:
        companyId:
          type: string
          example: R61985A
        customerId:
          type: string
          example: '59'
        companyName:
          type: string
          example: TD
        defaultNode:
          type: string
          example: ON
        customer:
          type: string
          enum: 
            - N
            - Y
          example: N
        site:
          type: string
          enum: 
            - N
            - Y
          example: Y
        active:
          type: string
          enum: 
            - N
            - Y
          example: Y
        creditHold:
          type: string
          enum: 
            - N
            - Y
          example: N
        currency:
          type: string
          example: CAD
        streetAddress:
          type: string
          example: '240 Gibralter Rd, Suite 300'
        city:
          type: string
          example: Horsham
        stateProvince:
          type: string
          example: PA
        postalCode:
          type: string
          example: '19090'
        country:
          type: string
          example: US
        latitude:
          type: number
          format: float
          example: 74.0456
        longitude:
          type: number
          format: float
          example: -105.057
        addressType:
          type: string
          example: BWork
        primaryAddress:
          type: string
          enum: 
            - N
            - Y
          example: Y
        contactName:
          type: string
          example: JOE BIDE
        contactPhone:
          type: string
          example: 555-756-0987
        contactEmail:
          type: string
          example: 'Joe.bide@xxx.xxx'
        bellLegalEntity:
          type: string
          example: B7426
        userDefined:
          type: string
          example: ROG1000:CRE
        workspaces:
          type: string
          example: OTHER
        region:
          type: string
          example: BC-ET
        fmz:
          type: string
          example: financial
    CustomerSiteResponse:
      type: object
      required: 
        - companyExists
      properties:
        companyExists:
          type: boolean
          example: true
    InstalledItem:
      type: object
      required:
        - productId
        - tagNumber
      properties:
        productId:
          type: string
          example: ACMeter
        tagNumber:
          type: string
          example: 'XXX003-20-257-000001'
        serialNumber:
          type: string
          example: '9876543421'
        siteId:
          type: string
          example: ROG1001
        quantity:
          type: number
          format: float
          example: 1
        criticality:
          type: string
          example: '01 - Business Critical'
        description:
          type: string
          example: Heat Exchanger
        frenchDescription:
          type: string
          example: 'Échangeur de chaleur'
        location:
          type: string
          example: Basement
        specificLocation:
          type: string
          example: 'Furnace Room'
        equipmentStatus:
          type: string
          example: ACTIVE
        itemNumber:
          type: string
          example: 'ECH-1'
        installedDate:
          type: string
          format: date
          example: '2017-08-31'
        laborWarrantyDate:
          type: string
          format: date
          example: '2018-08-31'
        maintenanceResponsibility:
          format: string
          example: 'TECH SERVICES'
        manufacturer:
          type: string
          example: Train
        modelNumber:
          type: string
          example: '123'
        ownership:
          type: string
          example: OTHER
        partWarrantyDate:
          type: string
          format: date
          example: '2018-08-31'
        userDefined:
          type: string
          example: ROG1000:CRE
    InstalledItemResponse:
      type: object
      required: 
        - installedItemExists
      properties:
        installedItemExists:
          type: boolean
          example: true
    Product:
      type: object
      required:
        - productId
      properties:
        productId:
          type: string
          example: ACMeter
        description:
          type: string
          example: Heat Exchanger
        unitCost:
          type: number
          format: currency
          example: 10.00
        unitPrice:
          type: number
          format: currency
          example: 20.00
        unitOfMeasureType:
          format: string
          example: unit
        purchaseUnitOfMeasure:
          format: string
          example: each
        stockUnitOfMeasure:
          format: string
          example: each
        serialization:
          type: string
          enum: 
            - N
            - Y
          example: N
    ProductResponse:
      type: object
      required: 
        - productExists
      properties:
        productExists:
          type: boolean
          example: true
