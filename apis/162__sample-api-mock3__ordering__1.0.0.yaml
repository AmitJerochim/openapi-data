openapi: 3.0.0
info:
  description: オーダリングシステムから呼び出すAPI
  version: 1.0.0
  title: オーダリングシステムAPIリスト

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/sample-api-mock3/ordering/1.0.0
  - url: "{protocol}://{server}"
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      server:
        default: virtserver.swaggerhub.com/sample-api-mock3/ordering/1.0.0
        enum:
          - api-ordering-ehr.lookrec.com
          - api-ordering-ehr.lookrec-staging.work
          - virtserver.swaggerhub.com/sample-api-mock3/ordering/1.0.0

paths:
  /api/v1/clinicalLaboratories:
    get:
      tags:
        - clinicalLaboratories
      summary: 臨床検査センターリストを返却する（Done）
      description: 臨床検査センターリストを取得して返却する
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/req_res_clinicalLaboratories"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      tags:
        - clinicalLaboratories
      summary: 臨床検査センターリストを登録する（Done）
      description: 臨床検査センターリストを登録する
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/req_res_clinicalLaboratories"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: データ更新時に失敗した
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api/j/v1/clinicalLaboratories:
    get:
      tags:
        - clinicalLaboratories(external)
      summary: 臨床検査センターリストを返却する
      description: 臨床検査センターリストを取得して返却する
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/req_res_clinicalLaboratories"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api/v1/clinicalLaboratories/{clinicalLaboratoryId}:
    get:
      tags:
        - clinicalLaboratories
      summary: 臨床検査センターを返却する（Done）
      description: 臨床検査センターを取得して返却する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/res_clinicalLaboratory"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      tags:
        - clinicalLaboratories
      summary: 臨床検査センターを削除する（Done）
      description: 臨床検査センターを削除する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  # /api/v1/inspectionResultTypes:
  #   get:
  #     tags:
  #       - inspectionResultTypes
  #     summary: 検査結果タイプリストを返却する
  #     description: 検査結果タイプリストを取得して返却する
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/req_res_inspectionResultTypes"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #   post:
  #     tags:
  #       - inspectionResultTypes
  #     summary: 検査結果タイプリストを登録する
  #     description: 検査結果タイプリストを登録する
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/req_res_inspectionResultTypes"
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/success"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: データ更新時に失敗した
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  
  # /api/j/v1/inspectionResultTypes:
  #   get:
  #     tags:
  #       - inspectionResultTypes(external)
  #     summary: 検査結果タイプリストを返却する
  #     description: 検査結果タイプリストを取得して返却する
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/req_res_inspectionResultTypes"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #   post:
  #     tags:
  #       - inspectionResultTypes
  #     summary: 検査結果タイプリストを登録する
  #     description: 検査結果タイプリストを登録する
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/req_res_inspectionResultTypes"
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/success"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: データ更新時に失敗した
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"

  # /api/v1/inspectionResultTypes/{inspectionResultTypeId}:
  #   get:
  #     tags:
  #       - inspectionResultTypes
  #     summary: 検査結果タイプを返却する
  #     description: 検査結果タイプを取得して返却する
  #     parameters:
  #       - $ref: "#/components/parameters/inspectionResultTypeId"
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/res_inspectionResultType"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #   delete:
  #     tags:
  #       - inspectionResultTypes
  #     summary: 検査結果タイプを削除する
  #     description: 検査結果タイプを削除する
  #     parameters:
  #       - $ref: "#/components/parameters/inspectionResultTypeId"
  #     responses:
  #       200:
  #         description: 成功時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/success"
  #       400:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"
  #       500:
  #         description: 失敗時のレスポンス
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/error"

  /api/v1/clinicalLaboratories/{clinicalLaboratoryId}/inspectionItems:
    get:
      tags:
        - inspectionItems
      summary: 検査項目マスタリストを返却する（Done）
      description: 検査項目マスタリストを取得して返却する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/req_res_inspectionItems"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      tags:
        - inspectionItems
      summary: 検査項目マスタリストを登録する（Done）
      description: 検査項目マスタリストを登録する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/req_res_inspectionItems"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      tags:
        - inspectionItems
      summary: 検査項目マスタリストを削除する（Done）
      description: 検査項目マスタリストを削除する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
  /api/j/v1/clinicalLaboratories/{clinicalLaboratoryId}/inspectionItems:
    get:
      tags:
        - inspectionItems(external)
      summary: 検査項目マスタリストを返却する
      description: 検査項目マスタリストを取得して返却する
      parameters:
        - $ref: "#/components/parameters/clinicalLaboratoryId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/req_res_inspectionItems"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections:
    get:
      tags:
        - inspections
      summary: 検査結果リストを返却する
      description: 検査結果リストを取得して返却する
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/identifier"
        - $ref: "#/components/parameters/studyDateStart"
        - $ref: "#/components/parameters/studyDateEnd"
        - $ref: "#/components/parameters/orderDateStart"
        - $ref: "#/components/parameters/orderDateEnd"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/res_inspections"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections/order:
    post:
      tags:
        - inspections(external)
      summary: 検査オーダーを登録する
      description: |
        *1: 1回のオーダーに指定できる検査項目上限は50件まで（検査センター側の仕様を踏襲）  
        *2: orderDateに日付を指定しない場合、API呼び出し時点の日付が自動セットされる  
        *3: immediateFlag に ture を指定すると、すぐにオーダー発行が実行される（default: false）  
        *4: 必須項目  
            - clinical_laboratory_id  
            - identifier  
            - studyDate  
            - patientName  
            - patientPhonetic  
            - patientSex（1: 男, 2: 女, 9: 不明）  
            - patientBirthDate  
            - requestDoctorName  
            - inspectionOrders（配列に1件以上の検査項目がセットされていること）  
        
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/req_inspectionOrder"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ordered"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections/{inspectionId}/order:
    put:
      tags:
        - inspections(external)
      summary: 検査オーダーを更新する
      description: |
        *1: 既にオーダー発行済み(検査センターへ依頼済み)の場合は、エラーが返却される
        *2: orderDateに日付を指定しない場合、API呼び出し時点の日付に更新される  
        *3: immediateFlag に ture を指定すると、すぐにオーダー発行が実行される（default: false）  
        *4: inspectionOrdersの内容はArrayをクリアしてリクエストパラメータを再セットするため、再度オーダーしたいすべての検査項目をリクエストすること
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/inspectionId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/req_inspectionOrder"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ordered"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        423:
          description: 既にオーダー発行済みの時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  
  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections/{inspectionId}/order/issue:
    post:
      tags:
        - inspections(external)
      summary: すでに登録済みの検査オーダーをオーダー発行(検査センターへ依頼)する
      description: |
        *1: 既にオーダー発行済み(検査センターへ依頼済み)の場合は、正常終了(200)が返却される  
        *2: orderDateはAPI呼び出し時点の日付に更新される  
        
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/inspectionId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ordered"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  
  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections/{inspectionId}/order/status:
    get:
      tags:
        - inspections(external)
      summary: オーダー発行(検査センターへ依頼)したオーダーの進捗を返却する
      description: |
        返却されうるステータス  
        - registered: 登録済み  
        - issued: オーダー発行済み  
        - returned: 結果返却済み
        - error: なんらかのエラーにより失敗
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/inspectionId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  
  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections:
    get:
      tags:
        - inspections(external)
      summary: 検査結果リストを返却する
      description: 検査結果リストを取得して返却する
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/identifier"
        - $ref: "#/components/parameters/studyDateStart"
        - $ref: "#/components/parameters/studyDateEnd"
        - $ref: "#/components/parameters/orderDateStart"
        - $ref: "#/components/parameters/orderDateEnd"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/res_inspections"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  
  /api/j/v1/institutionCode/{institutionCode}/patientId/{patientId}/inspections/{inspectionId}:
    get:
      tags:
        - inspections(external)
      summary: 検査結果(1件)を返却する
      description: 検査結果(1件)を取得して返却する
      parameters:
        - $ref: "#/components/parameters/institutionCode"
        - $ref: "#/components/parameters/patientId"
        - $ref: "#/components/parameters/inspectionId"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/res_inspections"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: 成功メッセージ
    error:
      type: object
      properties:
        message:
          type: string
          example: エラーメッセージ
    req_res_clinicalLaboratories:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
          name:
            type: string
      example:
        - id: 1
          name: 福山臨床検査センター
        - id: 2
          name: 広島市医師会臨床検査センター
        - id: 3
          name: エスアールエル
    res_clinicalLaboratory:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: 福山臨床検査センター
    # req_res_inspectionResultTypes:
    #   type: array
    #   items:
    #     type: object
    #     properties:
    #       id:
    #         type: number
    #       name:
    #         type: string
    #   example:
    #     - id: 1
    #       name: 定量値(数値)
    #     - id: 2
    #       name: 半定量値
    #     - id: 3
    #       name: 定性値
    #     - id: 4
    #       name: 自由入力
    # res_inspectionResultType:
    #   type: object
    #   properties:
    #     id:
    #       type: number
    #       example: 1
    #     name:
    #       type: string
    #       example: 定量値(数値)
    req_res_inspectionItems:
      type: array
      items:
        type: object
        properties:
          # clinicalLaboratoryId:
          #   type: number
          # id:
          #   type: number
          code:
            type: string
          name:
            type: string
          inspectionResultType:
            type: string
          unit:
            type: string
          standardValueUpperMale:
            type: string
          standardValueUpperFemale:
            type: string
          standardValueUpperJudgmentMale:
            type: string
          standardValueUpperJudgmentFemale:
            type: string
          standardValueLowerMale:
            type: string
          standardValueLowerFemale:
            type: string
          standardValueLowerJudgmentMale:
            type: string
          standardValueLowerJudgmentFemale:
            type: string
      example:
        - code: 100500
          name: アルブミン
          inspectionResultType: quantitative
          unit: g/dL
          standardValueUpperMale: 5.1
          standardValueUpperFemale: 5.1
          standardValueUpperJudgmentMale: E
          standardValueUpperJudgmentFemale: E
          standardValueLowerMale: 3.8
          standardValueLowerFemale: 3.8
          standardValueLowerJudgmentMale: U
          standardValueLowerJudgmentFemale: U
        - code: 104000
          name: β−リポ蛋白
          unit: mg/dL
          inspectionResultType: quantitative
          standardValueUpperMale: 657
          standardValueUpperFemale: 657
          standardValueUpperJudgmentMale: E
          standardValueUpperJudgmentFemale: E
          standardValueLowerMale: 245
          standardValueLowerFemale: 245
          standardValueLowerJudgmentMale: U
          standardValueLowerJudgmentFemale: U
        - code: 104500
          name: ＨＤＬｺﾚｽﾃﾛｰﾙ
          unit: mg/dL
          inspectionResultType: quantitative
          standardValueUpperMale: 86
          standardValueUpperFemale: 86
          standardValueUpperJudgmentMale: E
          standardValueUpperJudgmentFemale: E
          standardValueLowerMale: 40
          standardValueLowerFemale: 40
          standardValueLowerJudgmentMale: U
          standardValueLowerJudgmentFemale: U
    res_inspections:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
          identifier:
            type: string
          orderDate:
            type: string
          studyDate:
            type: string
          status:
            type: number
            example: "returned"
          inspectionResults:
            type: array
            items:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
                inspectionResultType:
                  type: string
                unit:
                  type: string
                standardValueUpper:
                  type: string
                standardValueUpperJudgment:
                  type: string
                standardValueLower:
                  type: string
                standardValueLowerJudgment:
                  type: string
                value:
                  type: string
                resultComment1:
                  type: string
                resultComment2:
                  type: string
                resultComment3:
                  type: string
      example:
        - id: 1
          identifier: 1
          orderDate: "2019-01-01T15:00:00.000Z"
          studyDate: "2019-01-01T15:00:00.000Z"
          status: "returned"
          inspectionResults:
            - code: 100500
              name: アルブミン
              inspectionResultType: quantitative
              unit: g/dL
              standardValueUpper: 5.1
              standardValueUpperJudgment: E
              standardValueLower: 3.8
              standardValueLowerJudgment: U
              value: 4.2
              resultComment1: 再検査済みです。
            - code: 104000
              name: β−リポ蛋白
              inspectionResultType: quantitative
              unit: g/dL
              standardValueUpper: 657
              standardValueUpperJudgment: E
              standardValueLower: 245
              standardValueLowerJudgment: U
              value: 500
            - code: 104500
              name: ＨＤＬｺﾚｽﾃﾛｰﾙ
              inspectionResultType: quantitative
              unit: g/dL
              standardValueUpper: 86
              standardValueUpperJudgment: E
              standardValueLower: 40
              standardValueLowerJudgment: U
              value: 90
              resultComment1: 再検査済みです。
    req_inspectionOrder:
      type: object
      properties:
        id:
          type: number
        clinical_laboratory_id: 
          type: number
        identifier:
          type: string
        studyDate:
          type: string
        orderDate:
          type: string
        patientName:
          type: string
        patientPhonetic:
          type: string
        patientSex:
          type: number
        patientBirthDate:
          type: string
        requestDoctorName:
          type: string
        inspectionOrders:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
        requestComment1:
          type: string
        requestComment2:
          type: string
        requestComment3:
          type: string
        immediateFlag:
          type: boolean
        callbackurl:
          type: string
      example:
        clinical_laboratory_id: 1
        identifier: 123456789
        studyDate: "2020-02-10"
        orderDate: "2020-02-10"
        patientName: "患者　太郎"
        patientPhonetic: "カンジャ　タロウ"
        patientSex: 1
        patientBirthDate: "1990-01-01"
        requestDoctorName: "医師　太郎"
        inspectionOrders:
          - code: 100500
            name: アルブミン
          - code: 104500
            name: ＨＤＬｺﾚｽﾃﾛ-ﾙ
        requestComment1: "コメント1"
        requestComment2: "コメント2"
        requestComment3: "コメント3"
        immediateFlag: true
        callbackurl: https://checkup.lookrec-staging.work/api/t/v1/inspections/callback
    ordered:
      type: object
      properties:
        id:
          type: number
          example: 1
    status:
      type: object
      properties:
        status:
          type: string
          example: "returned"
        message:
          type: string
          example: エラーの場合、なんらかのメッセージを返却する
        

  parameters:
    clinicalLaboratoryId:
      in: path
      name: clinicalLaboratoryId
      description: 臨床検査センターID
      required: true
      schema:
        type: number
        example: 1
    inspectionResultTypeId:
      in: path
      name: inspectionResultTypeId
      description: 結果タイプID
      required: true
      schema:
        type: number
        example: 1
    institutionCode:
      in: path
      name: institutionCode
      description: 施設コード
      required: true
      schema:
        type: string
        example: 4eef853d-4357-4207-8c56-c84cdb3f2e1e
    patientId:
      in: path
      name: patientId
      description: 患者ID
      required: true
      schema:
        type: string
        example: test12345
    inspectionId:
      in: path
      name: inspectionId
      description: オーダリングID
      required: true
      schema:
        type: number
        example: 1
    identifier:
      in: query
      name: identifier
      description: 識別子(データ取得用にカルテIDなどをセットする)
      required: false
      schema:
        type: string
        example: hogehoge
    studyDateStart:
      in: query
      name: studyDateStart
      description: 採取日(From)
      required: false
      schema:
        type: string
        example: "2020-01-01"
    studyDateEnd:
      in: query
      name: studyDateEnd
      description: 採取日(To)
      required: false
      schema:
        type: string
        example: "2020-01-31"
    orderDateStart:
      in: query
      name: orderDateStart
      description: オーダー日(From)
      required: false
      schema:
        type: string
        example: "2020-01-01"
    orderDateEnd:
      in: query
      name: orderDateEnd
      description: オーダー日(To)
      required: false
      schema:
        type: string
        example: "2020-01-31"