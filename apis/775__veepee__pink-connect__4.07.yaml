openapi: 3.0.0
servers:
  - description: staging
    url: https://api.pinkstaging.pink-connect.com/v4
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/cspineda/pink-connect/4.0
  - description: api for Pink Connect
    url: https://api.pink-connect.com/v4
  - description: api for QAshops
    url: http://api.qashops.com/v4
info:
  description: This is a API to integrate workflow with Pink Connect
  version: "4.07"
  title: Pink Connect API
  contact:
    email: integrations@qashops.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  "/catalog/{shopChannelId}":
    parameters:
      - in: path
        name: shopChannelId
        description: Pink Connect Shop Channel Id
        required: true
        schema:
          type: integer
    post:
      tags:
        - catalog
      summary: upload a catalog
      operationId: uploadCatalog
      description: Upload a catalog into pink connect
      parameters:
        - name: incrementalCatalog
          in: query
          description: >
            Default true. When set to false, all products that don't come in the
            file will be disable in Pink Connect.

            That means that PC will send stock 0 to the marketplace for the disable products no matter what stock comes 

            in the stock file.
          schema:
            type: boolean
            default: true
      responses:
        "202":
          description: OK – The file was send to the system to be processed
          content:
            application/json:
              schema:
                type: string
                description: the name of the file uploaded
        "400":
          description: Bad Request – The request was invalid or cannot be served. The exact
            error should be explained in the error payload.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "401":
          description: Unauthorized – The request requires an user authentication
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: Unprocessable Entity – The file cannot be processed.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
          application/json:
            schema:
              type: object
          multipart/form-data:
            schema:
              type: object
              properties:
                catalog:
                  type: string
                  format: binary
                  description: Formats valid - XLS, XML, CSV and Json
        description: Inventory item to add
  "/status/{filename}":
    parameters:
      - in: path
        name: filename
        description: Name of the file to be checked
        required: true
        schema:
          type: string
    get:
      tags:
        - catalog
        - offers
      summary: get file status
      operationId: getFileStatus
      description: >
        Get the status of a file being uploaded. It may be a catalog or offer
        file.

        Beware that your file has been send to a queue to be processed asynchronously. 

        It will take some minutes to process it (the time depends on the number of lines 

        to be processed). 

        Recommended use: 1/hour
      responses:
        "200":
          description: OK – The file was send to the system to be processed. Beware that
            your file has been send to a queue to be processed asynchronously.
            It will take some minutes to process it (the time depends on the
            number of lines to be processed).
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    type: string
                    description: The current status of the process. PENDING - The process
                      did not start yet RUNNING - The process is running
                      FINISHED - The process has finished
                    enum:
                      - PENDING
                      - RUNNING
                      - FINISHED
                  result:
                    type: string
                    description: The current result of process
                    enum:
                      - ok
                      - error
                  errorList:
                    description: List of products with errors/warnings with the error
                      description.
                    type: array
                    items:
                      type: string
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "422":
          description: Unprocessable Entity – The file cannot be processed.
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                  message:
                    type: string
  /offers:
    get:
      tags:
        - offers
      summary: return offers
      operationId: returnOffers
      description: >
        By passing in the appropriate options, you can retrieve the offers
        uploaded into PC
      parameters:
        - name: shopChannelId
          in: query
          required: true
          description: Shop channel to retrieve the offers.
          schema:
            type: integer
        - in: query
          name: offset
          required: false
          description: Number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: false
          description: Maximum number of records to return
          schema:
            type: integer
            format: int32
            maximum: 50
      responses:
        "200":
          description: list offers matching criteria
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    gtin:
                      type: string
                      description: gtin or sku one of these attributes must be set to
                        identify the product.
                    sku:
                      type: string
                      description: gtin or sku one of these attributes must be set to
                        identify the product.
                    stock:
                      type: integer
                      description: >
                        Stock available for this item:

                        Stock is shared among all Channels

                        By default we block stock for all orders in (waiting acceptance, pending and process) statuses

                        We will block any file with all stock at 0 and incremental to false. This behaviour can be disabled in the configuration. We are trying to avoid a wrong stock file to put everything to 0.
                    selling_price:
                      type: number
                      description: >
                        Selling price for the current shop channel.

                        There are some min/max price warnings by default. You can change it on the configuration.

                        We expect dot for decimal separator and currency symbol, only €/EUR is accepted.
                    manufacturer_recommended_price:
                      type: number
                      description: Original price of the product. Recommended by the
                        manufacturer. We expect dot for decimal separator and
                        currency symbol, only €/EUR is accepted.
                    tax_rate:
                      type: integer
                      description: percent of taxes for this shop channel
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Marketplace rejected the refund
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: >
            Unprocessable Entity – Invalid Filter Parameters.
            marketplace-order-code must be used together with marketplace-code
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  "/price-list/{shopChannelId}":
    post:
      tags:
        - offers
      summary: upload an price-list file
      operationId: uploadPriceList
      description: Upload a price list into pink connect.
      parameters:
        - name: shopChannelId
          in: path
          required: true
          description: Shop channel to apply the offer.
          schema:
            type: integer
      responses:
        "202":
          description: OK – The file was send to the system to be processed
          content:
            application/json:
              schema:
                type: string
                description: String with name of files generated
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "422":
          description: Unprocessable Entity – The file cannot be processed.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
          application/json:
            schema:
              type: object
          multipart/form-data:
            schema:
              type: object
              properties:
                priceList:
                  type: string
                  format: binary
                  description: Price list file to upload. Formats valid - XLS, XML, CSV and
                    Json
  /stock:
    post:
      tags:
        - offers
      summary: upload a stock file
      operationId: uploadStock
      description: >
        Upload a stock for a product. Stock is shared between all shop channels.
        If you want to dedicate a percentage  of stock for each shop channel or
        set a security stock please ask your Brand Support to set up the
        configuration.
      parameters:
        - name: incrementalStock
          in: query
          description: Default true. When set to false, all products that don't come in the
            file will be set to 0 stock.
          schema:
            type: boolean
            default: true
      responses:
        "202":
          description: OK – The file was send to the system to be processed
          content:
            application/json:
              schema:
                type: string
                description: String with name of files generated
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "422":
          description: Unprocessable Entity – The file cannot be processed.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
          application/json:
            schema:
              type: object
          multipart/form-data:
            schema:
              type: object
              properties:
                stock:
                  type: string
                  format: binary
                  description: Stock file to upload. Formats valid - XLS, XML, CSV and Json
  /orders:
    get:
      tags:
        - orders
      summary: list orders
      operationId: listOrders
      description: |
        List orders. Filtering can be done using the proper parameters
      parameters:
        - $ref: "#/paths/~1offers/get/parameters/1"
        - $ref: "#/paths/~1offers/get/parameters/2"
        - in: query
          name: orderStatusCodes
          description: An array of order status codes to search
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - WAITING_ACCEPTANCE
                - PENDING
                - PROCESSING
                - SHIPPED
                - CANCELLED
            example:
              oneId:
                summary: Example of a single ID
                value: SHIPPED
              multipleIds:
                summary: Example of multiple IDs
                value: WAITING_ACCEPTANCE, PENDING
        - in: query
          name: shopChannelId
          description: The Id of the shop channel on which the orders where placed
          required: false
          schema:
            type: integer
            format: int16
        - in: query
          name: marketplaceCode
          description: >
            The code of the marketplace from which the orders come from.  Must
            be used together with marketplaceOrderCode This code may be
            retrieved from the operation GET /shop-channels
          required: false
          schema:
            type: string
        - in: query
          name: marketplaceOrderCode
          description: >
            The code of the order on the marketplace side.  Must be used
            together with marketplaceCode
          required: false
          schema:
            type: string
        - in: query
          name: gtin
          description: The gtin of the product. It will obtain all the orders that contain
            this product
          required: false
          schema:
            type: string
        - in: query
          name: creationDateGTE
          description: Creation start date for filtering greater or equal than
            yyyy-MM-dd'T'HH:mm:ss.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: creationDateLTE
          description: Creation end date for filtering lower or equal than
            yyyy-MM-dd'T'HH:mm:ss.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updateDateGTE
          description: Update start date for filtering greater or equal than
            yyyy-MM-dd'T'HH:mm:ss.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updateDateLTE
          description: Update end date for filtering lower or equal than
            yyyy-MM-dd'T'HH:mm:ss.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: list orders matching criteria
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - orderId
                  properties:
                    orderId:
                      type: integer
                      description: Pink Connect Order Id (unique, int)
                    marketplaceName:
                      type: string
                      description: The name of the marketplace
                    marketplaceCode:
                      type: string
                      description: The code of the Marketplace
                    marketplaceOrderCode:
                      type: integer
                      description: The id of the order on the marketplace platform (string,
                        can be duplicated in some cases)
                    shopChannelId:
                      type: integer
                      description: The id of the shop channel on which the order was
                        generated
                    shopChannelName:
                      type: string
                      description: The name of the shop channel on which the order was
                        generated
                    status:
                      description: The current status of the order
                      type: string
                      enum:
                        - WAITING_ACCEPTANCE
                        - PENDING
                        - PROCESSING
                        - SHIPPED
                        - CANCELLED
                    createOrderDate:
                      description: The date on which this order was created
                      type: string
                      format: date-time
                      example: yyyy-MM-dd HH:mm:ss
                    shippedOrderDate:
                      type: string
                      format: date-time
                      example: yyyy-MM-dd HH:mm:ss
                      description: The date on which this order was set as shipped (null if
                        it's not been shipped yet)
                    totalPrice:
                      type: number
                      description: The total amount of the order (Tax and shipping costs
                        Included)
                    shippingCosts:
                      type: number
                      description: The amount of money that you will receive for shipping
                        the order (Tax Included)
                    shippingTaxRate:
                      type: integer
                      description: The Tax rate for the shipping
                    currency:
                      type: string
                      enum:
                        - EUR
                      description: The currency of the order
                    deliveryNote:
                      type: string
                      format: url
                      description: Url to download the delivery note for the order
                    shippingInformation:
                      required:
                        - name
                        - address
                        - city
                        - zip-code
                        - country
                        - phone
                      properties:
                        name:
                          type: string
                        company:
                          type: string
                          description: Name or Vat number of the company
                        address:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        zipCode:
                          type: string
                        country:
                          type: string
                        countryIsoCode:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                      type: object
                    pickupPointId:
                      type: string
                      description: The id of the pickup point id where the customer wants
                        the order delivered
                    billingInformation:
                      $ref: "#/paths/~1orders/get/responses/200/content/application\
                        ~1json/schema/items/properties/shippingInformation"
                    deliveryDetails:
                      description: List of delivery details of the order
                      type: array
                      items:
                        description: Once the order has been set as shipped, all the
                          information regarding the delivery of the order
                        required:
                          - carrierId
                          - trackingNumber
                        properties:
                          carrierId:
                            type: integer
                            description: Pink Connect id for this carrier. Consult List
                              Carriers to get the whole list of supported
                              carriers.
                          carrierName:
                            type: string
                            description: Name of the carrier
                          trackingNumber:
                            type: string
                            description: Tracking number for the shipment
                          trackingUrl:
                            type: string
                            description: Url to check the tracking on the carriers site
                        type: object
                    orderLines:
                      description: All the products purchased on the order
                      type: array
                      items:
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            description: Id of the order line
                          gtin:
                            type: string
                          sku:
                            type: string
                          name:
                            type: string
                          price:
                            type: number
                            description: Individual price of the product (Tax rate included)
                          taxRate:
                            type: number
                          quantity:
                            type: integer
                          brandName:
                            type: string
                          totalPrice:
                            type: number
                            description: The total amount for this line (price*quantity)
                              (Tax rate included)
                          manufacturerReference:
                            type: string
                    additionalInformation:
                      type: string
                      description: A series of additional information related to the order.
                        Depending on the source of the order, different fields
                        may appear
                    refunds:
                      description: List of refunds of the order
                      type: array
                      items:
                        type: object
                        required:
                          - productCost
                          - shippingCost
                          - date
                        properties:
                          date:
                            type: string
                            format: date-time
                            example: yyyy-MM-dd HH:mm:ss
                            description: Date when the refund was done
                          productCost:
                            type: number
                            description: Amount refunded from products (Tax included).
                          shippingCost:
                            type: number
                            description: Amount refunded from shipping_costs (Tax included).
                          currency:
                            type: string
                            enum:
                              - EUR
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "422":
          description: >
            Unprocessable Entity – Invalid Filter Parameters.
            marketplaceOrderCode must be used together with marketplaceCode
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  "/orders/{orderId}":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
    get:
      tags:
        - orders
      summary: View order by Pink Connect Order Id
      operationId: viewOrderById
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1orders/get/responses/200/content/application~1js\
                    on/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Order does not exist or you do not have access to this
            order.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  "/orders/{orderId}/invoice":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - orders
      summary: upload invoice to an order with orderId
      operationId: uploadInvoice
      description: >
        This operation allows to upload an invoice attached to the order with
        orderId. This option is only available for Point of sales Vente Privee.
        When using this operation with an order from Privalia point of sales, an
        error 422 will be returned.
      requestBody:
        description: Invoice to upload
        content:
          image/bmp:
            schema:
              type: string
              format: binary
          image/gif:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary
          image/tiff:
            schema:
              type: string
              format: binary
          application/pdf:
            schema:
              type: string
              format: binary
      responses:
        "204":
          description: OK – The invoice was successfully uploaded
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – The user has no permission to this order.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: >
            Unprocessable Entity – Expected errors are: - The point of sales
            Privalia, does not allow to upload an  invoice directly. You may
            want to sent a notification with the invoice instead.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  "/orders/{orderId}/status/{newStatus}":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: newStatus
        required: true
        schema:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - SHIPPED
            - CANCELLED
          description: >
            Depending on the status of the Order, you can change it from one
            status or another:

            WAITING_ACCEPTANCE => PENDING , CANCELLED

            PENDING => PROCESSING, SHIPPED, CANCELLED

            PROCESSING => SHIPPED, CANCELLED
    put:
      tags:
        - orders
      summary: update order status
      operationId: updateOrderStatus
      description: Update the status of an order
      responses:
        "204":
          description: OK – The resource was successfully updated
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Marketplace rejected the status change
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: >
            Unprocessable Entity – Expected errors are: - Tracking/Carrier id is
            missing or incorrect. - Cant Change from <original status> to <new
            status>
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trackingNumber:
                  type: string
                  description: Read List Carriers for more information. It is mandatory if
                    newStatus=SHIPPED; otherwise will be ignored
                carrierId:
                  type: integer
                  description: read List Carriers for more information. It is mandatory if
                    newStatus=SHIPPED; otherwise will be ignored
                reason:
                  type: string
                  description: It is recommended if newStatus=CANCELLED; otherwise will be
                    ignored
        description: Status order to update
  "/orders/{orderId}/lines":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: integer
          format: int64
    put:
      tags:
        - orders
      summary: cancel products from order
      operationId: cancelProducts
      description: >
        Cancel one or more products from an order. You may want to use this
        operation  while preparing an order to be shipped you realized that
        there is no stock  of one product in the order. You may cancel the line
        of the product you don't  have stock while the order related is is
        status "Pending" or "Processing". 
      requestBody:
        content:
          application/json:
            schema:
              description: Products to cancel from the order
              type: array
              items:
                type: object
                required:
                  - identifierType
                  - identifier
                  - quantity
                properties:
                  identifierType:
                    type: string
                    enum:
                      - gtin
                      - sku
                      - OrderLineId
                  identifier:
                    type: string
                  quantity:
                    type: integer
            examples:
              gtin:
                value:
                  - identifierType: gtin
                    identifier: 888888881123123
                    quantity: 1
              sku:
                value:
                  - identifierType: sku
                    identifier: DDFEERERR
                    quantity: 1
              orderLineId:
                value:
                  - identifierType: OrderLineId
                    identifier: 454
                    quantity: 1
      responses:
        "204":
          description: OK – The products were successfully cancelled
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – The user has no permission to this order.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  /carriers:
    get:
      tags:
        - helper
      summary: list carriers
      operationId: listCarriers
      description: List carriers
      responses:
        "200":
          description: list carriers
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Carrier information
                  type: object
                  properties:
                    id:
                      type: string
                      description: Pink Connect id for this carrier. Consult List Carriers
                        to get the whole list of supported carriers.
                    name:
                      type: string
                      description: Name of the carrier
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  /marketplaces:
    get:
      tags:
        - helper
      summary: list marketplaces
      operationId: listMarketplaces
      description: List marketplaces
      responses:
        "200":
          description: list marketplaces
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Marketplace information
                  type: object
                  properties:
                    code:
                      type: string
                      description: The code of the marketplace
                    name:
                      type: string
                      description: The name of the marketplace
                    logo:
                      type: string
                      format: url
                      description: The url of the marketplace logo
                    invoiceUploadAllowed:
                      type: boolean
                      description: If the marketplace allows to upload invoice
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  /shop-channels:
    get:
      tags:
        - helper
      summary: list shop-channels
      operationId: listShopChannels
      description: List all shop-channels defined for my account
      responses:
        "200":
          description: list shop-channels
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Marketplace information
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The id of the shop channel
                    name:
                      type: string
                      description: The name of the shop channel
                    marketplaceCode:
                      type: string
                      description: The code of the marketplace linked to this shop channel
                    marketplaceName:
                      type: string
                      description: The name of the marketplace linked to this shop channel
                    enabled:
                      type: boolean
                      description: If the shop channel is enabled
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  /returns:
    get:
      parameters:
        - $ref: "#/paths/~1offers/get/parameters/1"
        - $ref: "#/paths/~1offers/get/parameters/2"
        - in: query
          name: returnOrderStatusCodes
          description: An array of return order status codes to search
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - PROCESSING
                - COMPLETE
                - CANCELLED
            example:
              oneId:
                summary: Example of a single ID
                value:
                  - PENDING
              multipleIds:
                summary: Example of multiple IDs
                value:
                  - PROCESSING
                  - PENDING
        - in: query
          name: orderId
          description: Filter the returns related to one orderId
          required: false
          schema:
            type: integer
            format: int16
        - in: query
          name: returnType
          description: Filter the returns by type
          required: false
          schema:
            type: string
            enum:
              - RETURN
              - REPLACEMENT
        - in: query
          name: creationGTE
          description: Creation start date for filtering.
          required: false
          schema:
            type: string
            format: date-time
            example: yyyy-MM-dd'T'HH:mm:ss
        - in: query
          name: creationLTE
          description: Creation end date for filtering.
          required: false
          schema:
            type: string
            format: date-time
            example: yyyy-MM-dd'T'HH:mm:ss
        - in: query
          name: updateGTE
          description: Update start date for filtering.
          required: false
          schema:
            type: string
            format: date-time
            example: yyyy-MM-dd'T'HH:mm:ss
        - in: query
          name: updateLTE
          description: Update end date for filtering.
          required: false
          schema:
            type: string
            format: date-time
            example: yyyy-MM-dd'T'HH:mm:ss
      tags:
        - returns
      summary: list returns
      operationId: listReturns
      description: >
        List returns:

          * You may use this operation if you aim to follow a complete return process.
          * [Here](https://docs.google.com/presentation/d/1UCdPu80iO25lFSgvV_tagBbomZukvAYy_8egqoQ1k0Y/edit?usp=sharing) 
          you find more information about the workflow with Orders and Returns 
      responses:
        "200":
          description: list return orders matching criteria
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - returnId
                    - orderId
                    - state
                    - returnType
                    - reason
                    - totalRefund
                    - linesToReturn
                  properties:
                    returnId:
                      type: integer
                      description: Unique identifier for this return.
                    orderId:
                      type: integer
                      description: / Identifier of the order related to this return. Beware
                        that an order may have more than one return related for
                        returns of more than one products.
                    state:
                      type: string
                      enum:
                        - PENDING
                        - PROCESSING
                        - COMPLETE
                        - CANCELLED
                    returnType:
                      type: string
                      enum:
                        - RETURN
                        - REPLACEMENT
                    reason:
                      type: string
                    totalRefund:
                      type: number
                      description: Amount total refunded.
                    linesToReturn:
                      type: array
                      items:
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            description: Id of the order line
                          gtin:
                            type: string
                          sku:
                            type: string
                          name:
                            type: string
                          price:
                            type: number
                            description: Individual price of the product (Tax rate included)
                          taxRate:
                            type: number
                          quantity:
                            type: integer
                          brandName:
                            type: string
                          totalPrice:
                            type: number
                            description: The total amount for this line (price*quantity)
                              (Tax rate included)
                          manufacturerReference:
                            type: string
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  "/orders/{orderId}/refund":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - orders
      summary: refund money by order
      operationId: refundByOrder
      description: >
        You may use this operation to perform a direct refund of money related
        to a product inside an order.

        Beware that you don't have to use this operation AFTER completing a return. 


        Examples:

          * You don't follow the return order workflow.
          * You receive a product in your warehouse that is not related to any return inside Pink Connect and you want to refund the money.
          * You agree a partial refund with the customer for any reason.
      responses:
        "204":
          description: OK – The refund was successfully created
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – The user has no permission to this order.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - lineToRefund
                - shippingCost
                - currency
                - amount
              properties:
                linesToRefund:
                  type: array
                  items:
                    type: object
                    required:
                      - identifierType
                      - identifier
                    properties:
                      identifierType:
                        type: string
                        enum:
                          - gtin
                          - sku
                          - OrderLineId
                      identifier:
                        type: string
                shippingCost:
                  type: number
                  description: Amount to refund from shipping_costs (Tax included).
                amount:
                  type: number
                  description: Amount to refund from products (Tax included).
                currency:
                  type: string
                  enum:
                    - EUR
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                payload:
                  $ref: "#/paths/~1orders~1%7BorderId%7D~1refund/post/requestBody/c\
                    ontent/application~1json/schema"
            encoding:
              payload:
                contentType: application/json
  "/returns/{returnId}/{newStatus}":
    parameters:
      - in: path
        name: returnId
        description: Pink Connect Return identificator
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: newStatus
        required: true
        schema:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETE
            - CANCELLED
          description: >
            Depending on the status of the Order, you can change it from one
            status or another:

            PENDING=> PROCESSING

            PROCESSING => COMPLETE or CANCELLED
      - in: query
        name: amountToRefund
        description: >
          This parameter is optional. It is just allowed when setting refund
          status to COMPLETE.  You may use this parameter if you need to specify
          the amount to be refunded. The format should be a price with two
          decimals. 

          Notes - If the price is higher than the total price of the order, the total price of the  order will be refunded. - If this parameter is ommited; by default, the amount to be refunded is the selling  price of the order lines refunded without shipping costs. 
        required: false
        schema:
          type: number
    put:
      tags:
        - returns
      summary: update return status
      operationId: updateReturnStatus
      description: >
        Update the status of a return. When you set the status of a return to
        "Completed" a refund will be automatically perform.

        [Here](https://docs.google.com/presentation/d/1UCdPu80iO25lFSgvV_tagBbomZukvAYy_8egqoQ1k0Y/edit?usp=sharing)  you find more information about the workflow with Orders and Returns 
      responses:
        "204":
          description: OK – The resource was successfully updated
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Marketplace rejected the status change
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: >
            Unprocessable Entity – Expected errors are: - Cant Change from
            <original status> to <new status> - quantityToRefund is not a valid
            parameter.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  /notifications:
    get:
      tags:
        - notifications
      summary: list notifications
      operationId: listNotifications
      description: |
        List notifications. Filtering can be done using the proper parameters
      parameters:
        - in: query
          name: orderId
          description: List notifications related to orderId
          schema:
            type: integer
            format: uint64
        - in: query
          name: subject
          description: The subject of the notification (LIKE search)
          schema:
            type: string
        - in: query
          name: message
          description: The content of the message (LIKE search)
          schema:
            type: string
        - in: query
          name: updateDateLTE
          description: Parameter to filter the notifications updated after
            yyyy-MM-dd'T'HH:mm:ss.
          schema:
            type: string
            format: date
        - in: query
          name: updateDateGTE
          description: Parameter to filter the notifications updated before
            yyyy-MM-dd'T'HH:mm:ss.
          schema:
            type: string
            format: date
      responses:
        "200":
          description: list notifications matching criteria
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - orderId
                    - subject
                    - message
                    - status
                  properties:
                    id:
                      type: integer
                      description: Identification number
                    orderId:
                      type: integer
                      format: int64
                      description: Identification number of the related order
                    subject:
                      type: string
                      description: The subject of the notification (LIKE search)
                    message:
                      type: string
                      description: The content of the message (LIKE search)
                    updateDate:
                      type: string
                      description: Date when the notification was last updated
                    createDate:
                      type: string
                      description: Date when the notification was created
                    status:
                      type: string
                      enum:
                        - ALL
                        - PENDING
                        - NEW
                        - READ
                        - ARCHIVED
                      description: The status of the notification
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "422":
          description: >
            Unprocessable Entity – Invalid Filter Parameters.
            marketplaceOrderCode must be used together with marketplaceCode
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
  "/orders/{orderId}/notifications":
    parameters:
      - in: path
        name: orderId
        description: Pink Connect Order Id
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - notifications
      summary: Create a notification related to orderId
      operationId: createNotification
      responses:
        "201":
          description: OK – The notification has been created
          content:
            application/json:
              schema:
                type: string
                description: Notification identifier.
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Notification does not exist or you do not have access to
            this notification.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
        "422":
          description: Unprocessable Entity – The file cannot be processed.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                subject:
                  type: string
                attachedFile:
                  type: string
                  format: binary
        description: Notification message
  "/notifications/{id}":
    parameters:
      - in: path
        name: id
        description: Pink Connect Notification Id
        required: true
        schema:
          type: string
    get:
      tags:
        - notifications
      summary: get notification from identifier
      operationId: viewNotificationById
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/paths/~1notifications/get/responses/200/content/applicatio\
                  n~1json/schema/items"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Notification does not exist or you do not have access to
            this notification.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
    post:
      tags:
        - notifications
      summary: reply notification by identifier
      operationId: replyNotificationById
      responses:
        "204":
          description: OK – The notification was successfully updated
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
        "403":
          description: Forbidden – Notification does not exist or you do not have access to
            this notification.
          content:
            application/json:
              schema:
                $ref: "#/paths/~1status~1%7Bfilename%7D/get/responses/422/content/a\
                  pplication~1json/schema"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                attachedFile:
                  type: string
                  format: binary
        description: Notification message
  /taxonomy:
    parameters:
      - name: version
        in: query
        required: false
        description: Version of the taxonomy. It is not mandatory; if you do not specify
          it, the operation will retrieve the active version. Posible value ->
          2.0.0
        schema:
          type: string
    get:
      tags:
        - taxonomy
      summary: list categories
      operationId: listCategories
      responses:
        "200":
          description: list categories
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  xml:
                    name: Category
                  required:
                    - code
                    - name
                    - path
                    - level
                  properties:
                    code:
                      type: integer
                      description: Numeric code to identify the category.
                    name:
                      type: object
                      description: category name in diferent languages.
                      required:
                        - en
                        - es
                        - it
                        - fr
                      properties:
                        en:
                          type: string
                        es:
                          type: string
                        it:
                          type: string
                        fr:
                          type: string
                    path:
                      type: object
                      description: category path in diferent languages.
                      required:
                        - en
                        - es
                        - it
                        - fr
                      properties:
                        en:
                          type: string
                        es:
                          type: string
                        it:
                          type: string
                        fr:
                          type: string
                    parent_code:
                      type: integer
                      description: category code of the parent category. For level 1
                        categories should be null.
                    level:
                      type: integer
                      description: The level corresponding to the category. There are 4
                        levels.
            application/xml:
              schema:
                type: array
                xml:
                  name: response
                  wrapped: true
                items:
                  $ref: "#/paths/~1taxonomy/get/responses/200/content/application~1\
                    json/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  "/taxonomy/{category_code}":
    parameters:
      - name: version
        in: query
        required: false
        description: Version of the taxonomy. It is not mandatory; if you do not specify
          it, the operation will retrieve the active version. Posible value ->
          2.0.0
        schema:
          type: string
      - in: path
        name: category_code
        description: Taxonomy category code
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - taxonomy
      summary: retrieve category by id
      operationId: retrieveCategoryById
      responses:
        "200":
          description: retrieve category
          content:
            application/json:
              schema:
                $ref: "#/paths/~1taxonomy/get/responses/200/content/application~1js\
                  on/schema/items"
            application/xml:
              schema:
                $ref: "#/paths/~1taxonomy/get/responses/200/content/application~1js\
                  on/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  /taxonomy/attributes:
    parameters:
      - name: version
        in: query
        required: false
        description: Version of the taxonomy. It is not mandatory; if you do not specify
          it, the operation will retrieve the active version. Posible value ->
          2.0.0
        schema:
          type: string
    get:
      tags:
        - taxonomy
      summary: list attributes
      operationId: listAttributes
      responses:
        "200":
          description: list attributes
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  xml:
                    name: Attribute
                  required:
                    - code
                    - description
                    - category_code
                    - label
                    - required
                    - data_type
                    - type
                    - variant
                  properties:
                    code:
                      type: integer
                      description: Code to identify the attribute.
                    description:
                      type: object
                      description: description in diferent languages.
                      required:
                        - en
                        - es
                        - it
                        - fr
                      properties:
                        en:
                          type: string
                        es:
                          type: string
                        it:
                          type: string
                        fr:
                          type: string
                    category_code:
                      type: integer
                      description: numeric code to identify category.
                    label:
                      type: object
                      description: attribute labels in diferent languages.
                      required:
                        - en
                        - es
                        - it
                        - fr
                      properties:
                        en:
                          type: string
                        es:
                          type: string
                        it:
                          type: string
                        fr:
                          type: string
                    required:
                      type: boolean
                    data_type:
                      type: string
                    type:
                      type: string
                      enum:
                        - core
                        - generic
                        - specific
                        - local
                    min_value:
                      type: number
                    max_value:
                      type: number
                    variant:
                      type: boolean
                    values_list:
                      type: object
            application/xml:
              schema:
                type: array
                xml:
                  name: response
                  wrapped: true
                items:
                  $ref: "#/paths/~1taxonomy~1attributes/get/responses/200/content/a\
                    pplication~1json/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  "/taxonomy/{category_code}/attributes":
    parameters:
      - name: version
        in: query
        required: false
        description: Version of the taxonomy. It is not mandatory; if you do not specify
          it, the operation will retrieve the active version. Posible value ->
          2.0.0
        schema:
          type: string
      - in: path
        name: category_code
        description: Pink Connect category code
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - taxonomy
      summary: list attributes by category code
      operationId: listAttributesByCategory
      description: List attributes by category code. Beware you have to pick a
        category_code of a level 4 category.
      responses:
        "200":
          description: list attributes
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1taxonomy~1attributes/get/responses/200/content/a\
                    pplication~1json/schema/items"
            application/xml:
              schema:
                type: array
                xml:
                  name: response
                  wrapped: true
                items:
                  $ref: "#/paths/~1taxonomy~1attributes/get/responses/200/content/a\
                    pplication~1json/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
  /taxonomy/value-list:
    parameters:
      - name: version
        in: query
        required: false
        description: Version of the taxonomy. It is not mandatory; if you do not specify
          it, the operation will retrieve the active version. Posible value ->
          2.0.0
        schema:
          type: string
    get:
      tags:
        - taxonomy
      summary: list values lists for attributes
      operationId: listValuesLists
      responses:
        "200":
          description: list values lists
          headers:
            X-Pagination-Total-Count:
              schema:
                type: integer
              description: Total number of items matching the request.
            X-Pagination-Page-Count:
              schema:
                type: integer
              description: Number of returned items.
            X-Pagination-Current-Page:
              schema:
                type: integer
              description: Number of current page.
            X-Pagination-Per-Page:
              schema:
                type: integer
              description: Number of items per page
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  xml:
                    name: ValuesList
                  required:
                    - code
                    - label
                    - values
                  properties:
                    code:
                      type: integer
                      description: Code to identify the attribute.
                    label:
                      type: object
                      description: attribute labels in diferent languages.
                      required:
                        - en
                        - es
                        - it
                        - fr
                      properties:
                        en:
                          type: string
                        es:
                          type: string
                        it:
                          type: string
                        fr:
                          type: string
                    values:
                      description: List of values allowed.
                      type: object
            application/xml:
              schema:
                type: array
                xml:
                  name: response
                  wrapped: true
                items:
                  $ref: "#/paths/~1taxonomy~1value-list/get/responses/200/content/a\
                    pplication~1json/schema/items"
        "400":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/400"
        "401":
          $ref: "#/paths/~1catalog~1%7BshopChannelId%7D/post/responses/401"
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer