{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Open API for integrate system in KST",
    "version" : "1.0",
    "title" : "Choti API",
    "termsOfService" : "/terms-of-service",
    "contact" : {
      "name" : "IT Team"
    },
    "license" : {
      "name" : "License of API",
      "url" : "http://localhost"
    }
  },
  "tags" : [ {
    "name" : "Data Service",
    "description" : "Service for provide data"
  }, {
    "name" : "Employee Tracking Job Service",
    "description" : "Service tracking employee's job"
  }, {
    "name" : "Log Service",
    "description" : "Service to keep logs from other system"
  }, {
    "name" : "Packing Service",
    "description" : "Packing Controller"
  }, {
    "name" : "Production Process Service",
    "description" : "Service at product processing"
  }, {
    "name" : "Purchase Service",
    "description" : "Service use at purchase"
  }, {
    "name" : "RFID Data Service",
    "description" : "Service to retreive rfid data"
  }, {
    "name" : "Soaking Process Service",
    "description" : "Service use at soaking"
  }, {
    "name" : "Inner Weighting Process Service",
    "description" : "Service use at live and cooked shrimp"
  } ],
  "paths" : {
    "/data/bins" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get all bins",
        "description" : "Get list of bin that registered in system",
        "operationId" : "getBinUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBin"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/bin" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get bin with ID",
        "description" : "Return bin by request bin ID",
        "operationId" : "getBinWithIdUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "binId",
          "in" : "query",
          "description" : "bin ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bin"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/config" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get Config specify by group and name",
        "description" : "Return  config value specify by group and name, config will be json or just single value",
        "operationId" : "getConfigUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "config group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "config name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isJsonValue",
          "in" : "query",
          "description" : "specify that request config value is json type or not",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetConfig"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/employees" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get all employees.",
        "description" : "Return all employees' information.",
        "operationId" : "getEmployeeUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEmployee"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/employee" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get employee with ID.",
        "description" : "Return employees' information specify by ID.",
        "operationId" : "getEmployeeWithEmployeeIDUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "employee ID",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rfid",
          "in" : "query",
          "description" : "rfid tag number that map with employee ID",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Employee"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/job/peeling" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get all Peeling Jobs.",
        "description" : "Return all main jobs associate with list of sub jobs.",
        "operationId" : "getPeelingJobUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPeelingJobs"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/size/fg" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get All Product Sizes",
        "description" : "Return  list of product sizes",
        "operationId" : "getProductSizeUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "specify product type to retrieve, default is shrimp",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "shrimp", "live_shrimp", "cooked_shrimp", "octopus" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProductSize"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/size/product" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get All Product Size Properties",
        "description" : "Return  list of product sizes, product specs and color of each size",
        "operationId" : "getProductSizePropertiesUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProductSizeProperty"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/rawmats/" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get Rawmat Type",
        "description" : "Return  list rawmat type",
        "operationId" : "getRawmatsUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRawmats"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/weight/target" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "Get Weighting Target",
        "description" : "Return  list of weighting target at purchase",
        "operationId" : "getTargetUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWeightingTarget"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/employee/track/job" : {
      "post" : {
        "tags" : [ "Employee Tracking Job Service" ],
        "summary" : "Post Employee's Job Start and Finish",
        "description" : "This service is tracking for kilo employee that work service job. This accept request for employee start new job and finish job. service require RFID card number and decide if action is start or finish job depend on card type scaned, if scan only employee's card should be finish job or scan both employee and work card should be start job. every time scan it will return infomation of that card or null if can not find in the system",
        "operationId" : "postEmployeeTrackJobPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTracking"
                }
              }
            },
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRFIDID"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/employee/production/track/job" : {
      "post" : {
        "tags" : [ "Employee Tracking Job Service" ],
        "summary" : "Post Employee's Job in Production Line Start and Finish",
        "description" : "This service is tracking for all employees in production line. For start send job ID, work order ID, employee's card number and flag START, finish send only employee's card number and flag FINISH",
        "operationId" : "postProductiongTrackJobPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTracking"
                }
              }
            },
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostJobTracking"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/data/farmcodes" : {
      "get" : {
        "tags" : [ "Data Service" ],
        "summary" : "get Farm Codes",
        "operationId" : "getAllFarmCodesUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "specify rawmat type to retrieve, default is shrimp",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "shrimp", "live_shrimp", "cooked_shrimp", "octopus" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFarmCodePurchase"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/packing/pd/job/weighting" : {
      "get" : {
        "tags" : [ "Packing Service" ],
        "summary" : "Get Weighting Job",
        "description" : "Get list of weighting job for packing. This will return all jobs in today add config upper & inner weight to measure that weight is complete or incomplete",
        "operationId" : "getWeightingJobUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWeightingJob"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/packing/pd/weight" : {
      "post" : {
        "tags" : [ "Packing Service" ],
        "summary" : "Post Weight Packing",
        "description" : "Store weight of the packing process.",
        "operationId" : "postWeightPackingUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostWeightPacking"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/production/pd/bin/info" : {
      "get" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Get Bin Info",
        "description" : "Service get bin information, farm code and bin unique ID",
        "operationId" : "getBinInfoUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "binId",
          "in" : "query",
          "description" : "binId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBinInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/pd/binstick/info" : {
      "get" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "get Bin Stick Info",
        "operationId" : "getBinstickInfoSizingUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberId",
          "in" : "query",
          "description" : "numberId",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBinStickInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/pd/farmcodes" : {
      "get" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Get Production Farm Code",
        "description" : "Get list of farm codes that are approved by supervisors.\nThis service will return farm code of the last three days or explicitly put start date and end date, or explicitly put farm code in url query string",
        "operationId" : "getProductionNumberUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "farmCode",
          "in" : "query",
          "description" : "farmCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFarmCodeProduction"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/pd/farmcode/sizing" : {
      "get" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "get Sizing Farm Codes",
        "operationId" : "getFarmCodesSizingUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFarmCodeSizing"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/pd/weight/peeling" : {
      "post" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Post Weight Peeling",
        "description" : "Store weight of the peeling process. The incoming request can be for either before peeling or after peeling, this is differentiated by the weightPos value. If it is before, the system will create a new weight record. Otherwise, it will find the matching record by referenceId and update the record with after peel weight.",
        "operationId" : "weigthPeelingUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostWeightPeeling"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/production/pd/weight/sizing" : {
      "post" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Post Weight Sizing",
        "description" : "Store weight from sizing machines in each basket.",
        "operationId" : "weigthSizingUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostWeightAfterSizing"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/production/pd/bin/resume" : {
      "get" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Get Bin To Resume",
        "description" : "Call this service for ask bin is closed yet, if not it can be resume.",
        "operationId" : "resumeBinProcessUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "binId",
          "in" : "query",
          "description" : "binId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "farmCode",
          "in" : "query",
          "description" : "Farm code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberId",
          "in" : "query",
          "description" : "number Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWeightAfterSizing"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/pd/bin/status" : {
      "post" : {
        "tags" : [ "Production Process Service" ],
        "summary" : "Send bin status (close bin)",
        "operationId" : "postBinProductionStatus",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PostBinStatus"
        }
      }
    },
    "/log/action" : {
      "post" : {
        "tags" : [ "Log Service" ],
        "summary" : "Service post log from rfid system",
        "description" : "Post logs that occur in rfid system like register employee, register job and etc.",
        "operationId" : "postRFIDLogUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRFIDLog"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/rfid/data/register" : {
      "get" : {
        "tags" : [ "RFID Data Service" ],
        "summary" : "Service get registered data from rfid system",
        "description" : "Get registered data from RFID system from rfid card number like find who employee ID that bind wiht that rfid card.",
        "operationId" : "getRFIDDataUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "specify type to query exact value",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "REGISTER_EMPLOYEE", "REGISTER_BIN", "REGISTER_PEELING_JOB", "REGISTER_PACKING_JOB", "REGISTER_SERVICE_JOB" ]
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "value to query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    }
                  },
                  "example" : {
                    "value" : {
                      "binId" : "000013",
                      "size" : "650",
                      "department" : "จัดซื้อวัตถุดิบ"
                    }
                  }
                }
              }
            },
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    }
                  }
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rfid/rawmat/checkin" : {
      "get" : {
        "tags" : [ "RFID Data Service" ],
        "summary" : "Service Tracking Bin",
        "description" : "This service is track bin at each station when bin is checkedin for example bin checkin at station machine sizing or peeling like that",
        "operationId" : "binCheckinUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "station",
          "in" : "query",
          "description" : "Position like sizing machine, kilo peeling",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardNunber",
          "in" : "query",
          "description" : "RFID card number",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefaultResponse"
                }
              }
            },
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/soaking/pd/farmcodes" : {
      "get" : {
        "tags" : [ "Soaking Process Service" ],
        "summary" : "Get Farm Code At Soaking",
        "description" : "Get list of farm codes that are approved by supervisors.\nThis service will return farm code of the last three days or explicitly put start date and end date, or explicitly put farm code in url query string",
        "operationId" : "getSoakingFarmCodeUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "specify product type to retrieve, default is shrimp",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "shrimp", "alive_shrimp", "octopus" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFarmCodeSoaking"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/soaking/pd/weight" : {
      "post" : {
        "tags" : [ "Soaking Process Service" ],
        "summary" : "Post Weight Soaking",
        "description" : "Store weight before soaking",
        "operationId" : "weigthSoakingUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PostWeightSoaking"
        }
      }
    },
    "/soaking/pd/bin/status" : {
      "post" : {
        "tags" : [ "Soaking Process Service" ],
        "summary" : "Send bin status (close bin)",
        "operationId" : "postBinSoakingStatus",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PostBinStatus"
        }
      }
    },
    "/live/weight/spec" : {
      "get" : {
        "tags" : [ "Inner Weighting Process Service" ],
        "summary" : "Get Spec for Inner Weighting",
        "description" : "It used to be live shrimpt service but now use for inner weighting. Return  list of inner weighting spec, include grade, inner weight block and sizes",
        "operationId" : "getInnerWeightingSpecUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "specify product type to retrieve, default is shrimp",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "shrimp", "live_shrimp", "cooked_shrimp", "octopus" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetInnerWeightingSpec"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/live/weight" : {
      "post" : {
        "tags" : [ "Inner Weighting Process Service" ],
        "summary" : "Post Inner Weight",
        "description" : "It used to be live shrimpt service but now use for inner weighting. Store weight live & cooked shrimp",
        "operationId" : "weigthInnerUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PostInnerWeight"
        }
      }
    },
    "/purchase/pd/binstick/info" : {
      "get" : {
        "tags" : [ "Purchase Service" ],
        "summary" : "get Bin Stick Info",
        "operationId" : "getBinstickInfoUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberId",
          "in" : "query",
          "description" : "numberId",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBinStickInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/pd/farmcodes" : {
      "get" : {
        "tags" : [ "Purchase Service" ],
        "summary" : "get Farm Codes",
        "operationId" : "getFarmCodesUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "specify product type to retrieve, default is shrimp",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "shrimp", "alive_shrimp", "octopus" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFarmCodePurchase"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/pd/weight/rawmat" : {
      "post" : {
        "tags" : [ "Purchase Service" ],
        "summary" : "Send Weight Raw Material",
        "operationId" : "weightRawMaterialUsingPOST",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostWeightPurchase"
              }
            }
          },
          "description" : "request",
          "required" : true
        }
      }
    },
    "/purchase/pd/bin/resume" : {
      "get" : {
        "tags" : [ "Purchase Service" ],
        "summary" : "Get Bin To Resume",
        "description" : "Call this service for ask bin is closed yet, if not it can be resume.",
        "operationId" : "resumeBinProcessUsingGET_1",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "binId",
          "in" : "query",
          "description" : "binId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "farmCode",
          "in" : "query",
          "description" : "Farm code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberId",
          "in" : "query",
          "description" : "number Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "target",
          "in" : "query",
          "description" : "target",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWeightPurchase"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/pd/bin/status" : {
      "post" : {
        "tags" : [ "Purchase Service" ],
        "summary" : "Send bin status (close bin)",
        "operationId" : "postBinPurchaseStatus",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "authorize token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSystem",
          "in" : "header",
          "description" : "source system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqId",
          "in" : "header",
          "description" : "request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reqDateTime",
          "in" : "header",
          "description" : "request date time",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "header",
          "description" : "app version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "format yyyy-MM-dd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time in format",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Exception Occur",
            "headers" : {
              "RespDateTime" : {
                "description" : "Response date time",
                "schema" : {
                  "type" : "string"
                }
              },
              "RespId" : {
                "description" : "Unique ID",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PostBinStatus"
        }
      }
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "LOCAL server"
  }, {
    "url" : "http://192.168.110.30:8080",
    "description" : "DEV server"
  }, {
    "url" : "http://192.168.100.10:8080",
    "description" : "PROD server"
  }, {
    "url" : "https://virtserver.swaggerhub.com/KST/RFID-API/1.0",
    "description" : "SWAGGER server"
  } ],
  "components" : {
    "requestBodies" : {
      "PostInnerWeight" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PostInnerWeight"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "PostBinStatus" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PostBinStatus"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "PostWeightSoaking" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PostWeightSoaking"
            }
          }
        },
        "description" : "request",
        "required" : true
      }
    },
    "schemas" : {
      "Bin" : {
        "type" : "object",
        "properties" : {
          "binId" : {
            "type" : "string",
            "description" : "Number at bin side",
            "example" : "000013"
          },
          "departmentId" : {
            "type" : "string",
            "example" : "D010"
          },
          "department" : {
            "type" : "string",
            "example" : "กิโล"
          },
          "size" : {
            "type" : "number",
            "format" : "double",
            "example" : 700,
            "description" : "Size bin ex 300 liters, 700 liters"
          },
          "type" : {
            "type" : "string",
            "example" : "circle",
            "description" : "Bin type ex circle, edge"
          }
        },
        "title" : "Bin"
      },
      "DefaultResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ 200, 400, 500 ],
            "example" : "200",
            "description" : "status code 200 for success, otherwise fail"
          },
          "statusCode" : {
            "type" : "string",
            "example" : "SUCCESS",
            "description" : "status success or fail"
          },
          "statusMessage" : {
            "type" : "string",
            "example" : "K",
            "description" : "message to descripe status"
          }
        }
      },
      "Employee" : {
        "type" : "object",
        "properties" : {
          "departmentId" : {
            "type" : "string",
            "example" : "D0001"
          },
          "department" : {
            "type" : "string",
            "example" : "การเงิน"
          },
          "employeeId" : {
            "type" : "string",
            "example" : "22100055"
          },
          "name" : {
            "type" : "string",
            "example" : "วารุณี จันทรพา"
          }
        },
        "title" : "Employee"
      },
      "ExceptionResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "example" : "Unauthorized",
            "description" : "exception type, ex Unauthorized"
          },
          "message" : {
            "type" : "string",
            "example" : "Token is invalid",
            "description" : "exception description"
          },
          "path" : {
            "type" : "string",
            "example" : "/production/pd/farmcode",
            "description" : "request path"
          },
          "status" : {
            "type" : "string",
            "example" : 500,
            "description" : "exception status code, example 500"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "occur exception timestamp"
          }
        },
        "title" : "ExceptionResponse",
        "description" : "Custom Business error response entity class"
      },
      "FarmCodeWithNumberProductionNumber" : {
        "type" : "object",
        "properties" : {
          "billingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "catchDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "farmCode" : {
            "type" : "string",
            "example" : "AAAA"
          },
          "numbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductionNumber"
            }
          },
          "pondName" : {
            "type" : "string",
            "example" : "แพทรัพวิไลย์"
          },
          "pondNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "species" : {
            "type" : "string"
          },
          "supplierName" : {
            "type" : "string",
            "example" : "วิไลวัณแพกุ้ง"
          },
          "type" : {
            "type" : "string",
            "example" : "Broker"
          }
        },
        "title" : "FarmCodeWithNumberProductionNumber",
        "description" : "List farm codes"
      },
      "FarmCodeWithNumberPurchaseNumber" : {
        "type" : "object",
        "properties" : {
          "billingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "catchDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "farmCode" : {
            "type" : "string",
            "example" : "AAAA"
          },
          "numbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PurchaseNumber"
            }
          },
          "pondName" : {
            "type" : "string",
            "example" : "แพทรัพวิไลย์"
          },
          "pondNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "species" : {
            "type" : "string",
            "example" : "FW"
          },
          "supplierName" : {
            "type" : "string",
            "example" : "วิไลวัณแพกุ้ง"
          },
          "type" : {
            "type" : "string",
            "example" : "Broler"
          }
        },
        "title" : "FarmCodeWithNumberPurchaseNumber",
        "description" : "List farm codes"
      },
      "GetBin" : {
        "type" : "object",
        "properties" : {
          "bins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Bin"
            }
          }
        },
        "example" : {
          "bins" : [ {
            "binId" : "000013",
            "departmentId" : "D010",
            "department" : "กิโล",
            "size" : 700,
            "type" : "circle"
          }, {
            "binId" : "000014",
            "departmentId" : "D010",
            "department" : "กิโล",
            "size" : 400,
            "type" : "square"
          } ]
        },
        "title" : "GetBin"
      },
      "GetBinInfo" : {
        "type" : "object",
        "properties" : {
          "farmCode" : {
            "type" : "string",
            "example" : "AAAA"
          },
          "binUniqueId" : {
            "type" : "string",
            "example" : "slk23-38rkrj-239yhfs-r92",
            "description" : "UUID generate from backoffice"
          }
        },
        "title" : "GetBinInfo",
        "description" : "Service get bin information, farm code and bin unique ID"
      },
      "GetBinStickInfo" : {
        "type" : "object",
        "properties" : {
          "qc" : {
            "type" : "array",
            "description" : "List of qc check list",
            "items" : {
              "$ref" : "#/components/schemas/QcBinStick"
            }
          },
          "nc" : {
            "type" : "array",
            "description" : "List of NC",
            "items" : {
              "$ref" : "#/components/schemas/QcBinStick"
            }
          }
        },
        "example" : {
          "qc" : [ {
            "name" : "black_burr",
            "value" : "2",
            "label" : "เสี้ยนดำ",
            "unit" : "%"
          }, {
            "name" : "black_cube",
            "value" : "7",
            "label" : "ก้อนดำในเนื้อ",
            "unit" : "%"
          }, {
            "name" : "black_meat",
            "value" : "8",
            "label" : "เนื้อดำ",
            "unit" : "%"
          }, {
            "name" : "red_strip",
            "value" : "6",
            "label" : "สีแดงลอก",
            "unit" : "%"
          }, {
            "name" : "swelling",
            "value" : "4",
            "label" : "บวมน้ำ",
            "unit" : "%"
          }, {
            "name" : "crack",
            "value" : "3",
            "label" : "ไส้แตก",
            "unit" : "%"
          }, {
            "name" : "deformed",
            "value" : "5",
            "label" : "กุ้งพิการ",
            "unit" : "%"
          }, {
            "name" : "soft_moult",
            "value" : "6",
            "label" : "นิ่มลอกคราบ",
            "unit" : "%"
          }, {
            "name" : "soft_jelly",
            "value" : "9",
            "label" : "นิ่มวุ่น",
            "unit" : "%"
          }, {
            "name" : "tail_lesion",
            "value" : "65",
            "label" : "แผลข้อหาง",
            "unit" : "%"
          }, {
            "name" : "body_lesion",
            "value" : "14",
            "label" : "แผลตามตัว",
            "unit" : "%"
          }, {
            "name" : "orange_head",
            "value" : "1",
            "label" : "หัวส้ม",
            "unit" : "%"
          } ],
          "nc" : [ {
            "name" : "black_burr",
            "value" : "2",
            "label" : "เสี้ยนดำ",
            "unit" : "%"
          }, {
            "name" : "black_cube",
            "value" : "7",
            "label" : "ก้อนดำในเนื้อ",
            "unit" : "%"
          } ]
        },
        "title" : "GetBinStickInfo",
        "description" : "Information for put in bin stick"
      },
      "GetConfig" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "example" : {
          "value" : "152"
        },
        "title" : "GetConfig"
      },
      "GetEmployee" : {
        "type" : "object",
        "properties" : {
          "employees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Employee"
            }
          }
        },
        "example" : {
          "employees" : [ {
            "departmentId" : "D0001",
            "department" : "การเงิน",
            "employeeId" : "22100055",
            "name" : "วารุณี จันทรพา"
          }, {
            "departmentId" : "D0001",
            "department" : "การเงิน",
            "employeeId" : "22100056",
            "name" : "จันจิรา จันทร์โฉม"
          }, {
            "departmentId" : "D0002",
            "department" : "ขาย",
            "employeeId" : "22103245",
            "name" : "เทียนแข รัศมี"
          } ]
        },
        "title" : "GetEmployee"
      },
      "GetFarmCodeProduction" : {
        "type" : "object",
        "properties" : {
          "farmCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FarmCodeWithNumberProductionNumber"
            }
          }
        },
        "example" : {
          "farmCodes" : [ {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:31:45",
            "createDate" : "2019-01-14 12:31:45",
            "farmCode" : "AAAA",
            "numbers" : [ {
              "machineSizing" : true,
              "mixed" : true,
              "prdNumberId" : 1,
              "prdSize" : 35,
              "rawmatNumber" : 1,
              "rawmatSize" : 40
            }, {
              "machineSizing" : true,
              "mixed" : false,
              "prdNumberId" : 2,
              "prdSize" : 40,
              "rawmatNumber" : 1,
              "rawmatSize" : 40
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          }, {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:31:45",
            "createDate" : "2019-01-14 12:31:45",
            "farmCode" : "AAAB",
            "numbers" : [ {
              "machineSizing" : true,
              "mixed" : false,
              "prdNumberId" : 3,
              "prdSize" : 40,
              "rawmatNumber" : 1,
              "rawmatSize" : 41
            }, {
              "machineSizing" : true,
              "mixed" : false,
              "prdNumberId" : 4,
              "prdSize" : 50,
              "rawmatNumber" : 2,
              "rawmatSize" : 41
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          } ]
        },
        "title" : "GetFarmCodeProduction"
      },
      "GetFarmCodePurchase" : {
        "type" : "object",
        "properties" : {
          "farmCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FarmCodeWithNumberPurchaseNumber"
            }
          }
        },
        "example" : {
          "farmCodes" : [ {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:13:07",
            "createDate" : "2019-01-14 12:13:07",
            "farmCode" : "AAAA",
            "numbers" : [ {
              "numberId" : 12,
              "number" : 1,
              "size" : 60,
              "type" : "ปกติ",
              "containerNumber" : 1
            }, {
              "numberId" : 13,
              "number" : 1,
              "size" : 60,
              "type" : "ปกติ",
              "containerNumber" : 2
            }, {
              "numberId" : 14,
              "number" : 2,
              "size" : 45,
              "type" : "พิเศษ",
              "containerNumber" : 2
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          }, {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:13:07",
            "createDate" : "2019-01-14 12:13:07",
            "farmCode" : "AAAB",
            "numbers" : [ {
              "numberId" : 15,
              "number" : 1,
              "size" : 45,
              "containerNumber" : 1
            }, {
              "numberId" : 16,
              "number" : 2,
              "size" : 50,
              "containerNumber" : 2
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          } ]
        },
        "title" : "GetFarmCodePurchase",
        "description" : "Return list of farm codes"
      },
      "GetFarmCodeSizing" : {
        "type" : "object",
        "properties" : {
          "farmCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FarmCodeWithNumberPurchaseNumber"
            }
          }
        },
        "example" : {
          "farmCodes" : [ {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:13:07",
            "createDate" : "2019-01-14 12:13:07",
            "farmCode" : "AAAA",
            "numbers" : [ {
              "numberId" : 12,
              "number" : 1,
              "size" : 60,
              "type" : "สด"
            }, {
              "numberId" : 13,
              "number" : 2,
              "size" : 45,
              "type" : "ละลาย"
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          }, {
            "billingDate" : "2019-01-14",
            "catchDate" : "2019-01-14 12:13:07",
            "createDate" : "2019-01-14 12:13:07",
            "farmCode" : "AAAB",
            "numbers" : [ {
              "numberId" : 14,
              "number" : 1,
              "size" : 45
            }, {
              "numberId" : 15,
              "number" : 2,
              "size" : 50
            } ],
            "pondName" : "แพทรัพวิไลย์",
            "pondNumber" : 1,
            "species" : "FW",
            "supplierName" : "วิไลวัณแพกุ้ง",
            "type" : "Broker"
          } ]
        },
        "title" : "GetFarmCodePurchase",
        "description" : "Return list of farm codes"
      },
      "GetPeelingJobs" : {
        "type" : "object",
        "properties" : {
          "mainTasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MainPeelingJob"
            }
          }
        },
        "example" : {
          "mainTasks" : [ {
            "mainTask" : "ปอก",
            "subTasks" : [ {
              "jobId" : 1,
              "subTask" : "ปอกหัว(สด , ไม่คัดเครือง)",
              "type" : "fresh",
              "sizing" : false
            }, {
              "jobId" : 2,
              "subTask" : "ปอกหัวเก็บครง(สด , ไม่คัดเครือง)",
              "type" : "fresh",
              "sizing" : false
            } ]
          }, {
            "mainTask" : "ปอกเก็บคาง",
            "subTasks" : [ {
              "jobId" : 3,
              "subTask" : "ปอกเก็บคาง(สด , ไม่คัดเครือง)",
              "type" : "fresh",
              "sizing" : false
            } ]
          } ]
        },
        "title" : "GetPeelingJobs"
      },
      "GetProductSize" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "example" : "21/25"
        },
        "example" : [ "21/25", "26/30", "31/40", "41/50" ],
        "title" : "GetProductSize"
      },
      "GetProductSizeProperty" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ProductSizeProperty"
        },
        "example" : [ {
          "productSize" : "21/25",
          "productSpec" : "38-41",
          "color" : "23ab32"
        }, {
          "productSize" : "26/30",
          "productSpec" : "45-58",
          "color" : "ad236500"
        }, {
          "productSize" : "31/40",
          "productSpec" : "60-72",
          "color" : "000000"
        }, {
          "productSize" : "41/50",
          "productSpec" : "75-90",
          "color" : "124b2c"
        } ],
        "title" : "GetProductSizeProperty"
      },
      "GetInnerWeightingSpec" : {
        "type" : "object",
        "properties" : {
          "specs" : {
            "description" : "น้ำหนัก config ต่อกล่องตามเกรด",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "specId" : {
                  "type" : "number",
                  "format" : "int32"
                },
                "grade" : {
                  "type" : "string",
                  "enum" : [ "A", "B" ]
                },
                "innerWeight" : {
                  "type" : "number",
                  "format" : "int32",
                  "description" : "น้ำหนักต่อกล่อง(กรัม)",
                  "example" : 450
                },
                "lowerWeight" : {
                  "type" : "number",
                  "format" : "double",
                  "description" : "น้ำหนักต่ำสุดที่ยอมรับได้หน่วยเป็นกรัม",
                  "example" : 445
                },
                "upperWeight" : {
                  "type" : "number",
                  "format" : "double",
                  "description" : "น้ำหนักสูงสุดที่ยอมรับได้หน่ยวเป็นกรัม",
                  "example" : 450
                },
                "productName" : {
                  "type" : "string",
                  "description" : "name of product in each spec",
                  "example" : "(KH) FW C-H/O SEMI NB เกรด-A (450GMx10) (KST)"
                }
              }
            }
          }
        },
        "title" : "GetInnerWeightingSpec",
        "example" : {
          "specs" : [ {
            "specId" : 1,
            "grade" : "A",
            "innerWeight" : 800,
            "lowerWeight" : 793,
            "upperWeight" : 798,
            "productName" : "(KH) FW C-H/O SEMI NB เกรด-A (800GMx10) K.เทียน [A-NEW STICKER]"
          }, {
            "specId" : 2,
            "grade" : "A",
            "innerWeight" : 600,
            "lowerWeight" : 580,
            "upperWeight" : 590,
            "productName" : "(KH) FW C-H/O SEMI NB เกรด-A (600GMx10) K.ชิง"
          }, {
            "specId" : 3,
            "grade" : "B",
            "innerWeight" : 400,
            "lowerWeight" : 395,
            "upperWeight" : 400,
            "productName" : "(KH) FW C-H/L SEMI NB เกรด-B (400GMX12) K.เทียน"
          } ]
        }
      },
      "GetRawmats" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "enum" : [ "shrimp", "live_shrimp", "cooked_shrimp", "octopus" ],
        "example" : [ "shrimp", "live_shrimp", "cooked_shrimp", "octopus" ],
        "title" : "GetRawmats"
      },
      "GetWeightingTarget" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/WeightTarget"
        },
        "example" : [ {
          "target" : "system",
          "label" : "เข้าระบบ"
        }, {
          "target" : "sample",
          "label" : "ตัวอย่าง"
        }, {
          "target" : "kr",
          "label" : "ระนอง"
        }, {
          "target" : "kitchen",
          "label" : "ครัว"
        }, {
          "target" : "consignment",
          "label" : "ขาย"
        } ],
        "title" : "GetWeightingTarget"
      },
      "GetWeightingJob" : {
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PackingWeightJob"
            }
          }
        },
        "example" : {
          "jobs" : [ {
            "jobId" : 1,
            "lowerInnerBoundaryWeight" : 898,
            "lowerOuterBoundaryWeight" : 890,
            "productCategory" : "CA-001",
            "productCode" : "0001",
            "productSize" : "31/41",
            "targetWeight" : 900,
            "upperInnerBoundaryWeight" : 902,
            "upperOuterBoundaryWeight" : 910
          }, {
            "jobId" : 2,
            "lowerInnerBoundaryWeight" : 798,
            "lowerOuterBoundaryWeight" : 790,
            "productCategory" : "CA-001",
            "productCode" : "0001",
            "productSize" : "31/41",
            "targetWeight" : 800,
            "upperInnerBoundaryWeight" : 802,
            "upperOuterBoundaryWeight" : 810
          } ]
        },
        "title" : "GetWeightingJob"
      },
      "JobTracking" : {
        "type" : "object",
        "properties" : {
          "employeeName" : {
            "type" : "string",
            "example" : "อิอิทวย",
            "description" : "employee's name"
          },
          "jobName" : {
            "type" : "string",
            "example" : "งานคัดเครื่อง",
            "description" : "Service job name"
          },
          "startDate" : {
            "type" : "string",
            "example" : "2020-06-04 12:00:00",
            "description" : "start time of job, format yyyy-mm-dd H:m:s"
          },
          "finishDate" : {
            "type" : "string",
            "example" : "2020-06-04 13:00:00",
            "description" : "start time of job, format yyyy-mm-dd H:m:s"
          },
          "command" : {
            "type" : "string",
            "enum" : [ "START", "FINISH" ],
            "example" : "START",
            "description" : "describe request action whether it start job or finish job"
          }
        }
      },
      "MainPeelingJob" : {
        "type" : "object",
        "properties" : {
          "mainTask" : {
            "type" : "string"
          },
          "subTasks" : {
            "type" : "array",
            "description" : "List of sub peeling job",
            "items" : {
              "$ref" : "#/components/schemas/SubPeelingJob"
            }
          }
        },
        "title" : "MainPeelingJob",
        "description" : "Main peeling job properties, include job id, job name and sub peeling job"
      },
      "PackingWeightJob" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowerInnerBoundaryWeight" : {
            "type" : "number",
            "format" : "double"
          },
          "lowerOuterBoundaryWeight" : {
            "type" : "number",
            "format" : "double"
          },
          "productCategory" : {
            "type" : "string"
          },
          "productCode" : {
            "type" : "string"
          },
          "productSize" : {
            "type" : "string"
          },
          "targetWeight" : {
            "type" : "number",
            "format" : "double"
          },
          "upperInnerBoundaryWeight" : {
            "type" : "number",
            "format" : "double"
          },
          "upperOuterBoundaryWeight" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "title" : "PackingWeightJob",
        "description" : "Job data information for peeling"
      },
      "PostBinCheckin" : {
        "type" : "object",
        "properties" : {
          "station" : {
            "type" : "string",
            "enum" : [ "SIZING_TH", "SIZING_CH", "PEEL_KILO", "PEEL_PREPARE", "PEEL_SHRIMP" ],
            "example" : "PEEL_KILO",
            "description" : "Specify what station bin is checked in"
          },
          "cardNumber" : {
            "type" : "string",
            "description" : "RFID card that map with bin ID",
            "example" : "0000213658"
          }
        },
        "description" : "Bin checkin at station"
      },
      "PostRFIDLog" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "type" : "string",
            "enum" : [ "REGISTER_EMPLOYEE", "REGISTER_BIN", "REGISTER_PEELING_JOB", "REGISTER_PACKING_JOB", "REGISTER_SERVICE_JOB" ],
            "example" : "REGISTER_EMPLOYEE",
            "description" : "Specify where this log is occured (menu) like worker register, peeling job register, etc"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "REGISTER", "UPDATE", "DELETE" ],
            "example" : "REGISTER",
            "description" : "Specify action type"
          },
          "log" : {
            "type" : "object",
            "description" : "Log detail in json format",
            "example" : {
              "cardNumber" : 213658.0,
              "employeeId" : "23658956"
            }
          },
          "actionDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Log action date"
          }
        },
        "description" : "Log detail post from RFID system"
      },
      "PostWeightAfterSizing" : {
        "type" : "object",
        "properties" : {
          "binUniqueId" : {
            "type" : "string",
            "description" : "generate UUID",
            "example" : "ks84lqaKde23jlk23jI3rePE9Waew;l"
          },
          "binId" : {
            "type" : "string",
            "description" : "Bin id"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "rmNumber" : {
            "type" : "integer",
            "description" : "number from sizing farm code (not number ID)",
            "example" : 1
          },
          "prdNumberId" : {
            "type" : "integer",
            "description" : "number ID from service get farm code at sizing",
            "example" : 1
          },
          "size" : {
            "type" : "string",
            "description" : "product size, employee choose when weighting",
            "example" : "21/25"
          },
          "type" : {
            "type" : "string",
            "description" : "type of number maybe สด, ละลาย",
            "example" : "สด"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "description" : "Weight of basket"
          },
          "countRef" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "PostWeightAfterSizing",
        "description" : "Store weight after sizing by machine sizing"
      },
      "GetWeightAfterSizing" : {
        "type" : "object",
        "properties" : {
          "baskets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeightBasket"
            }
          },
          "binId" : {
            "type" : "string",
            "description" : "Bin id"
          },
          "binUniqueId" : {
            "type" : "string",
            "description" : "Bin unique id generated from rfid system"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "prdNumberId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Production number id"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Size of number (KG)"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "description" : "Sum weight of all baskets"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          }
        },
        "title" : "GetWeightAfterSizing",
        "description" : "Store weight after sizing by machine sizing"
      },
      "PostRFIDID" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "545111561",
            "description" : "RFID card number"
          },
          "device" : {
            "type" : "string",
            "example" : "D01",
            "description" : "Device name"
          }
        },
        "title" : "PostRFIDID",
        "description" : "Post employee start/finish job"
      },
      "PostJobTracking" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "type" : "number",
            "example" : 1
          },
          "workOrderId" : {
            "type" : "number",
            "example" : 2
          },
          "cardNumber" : {
            "type" : "string",
            "example" : "545111561",
            "description" : "RFID card number for employee"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "START", "FINISH" ],
            "example" : "START",
            "description" : "describe request action whether it start job or finish job"
          },
          "device" : {
            "type" : "string",
            "example" : "D01",
            "description" : "Device name"
          }
        },
        "title" : "PostJobTracking",
        "description" : "Post employee in production start/finish job"
      },
      "PostWeightPacking" : {
        "type" : "object",
        "properties" : {
          "countRef" : {
            "type" : "integer",
            "format" : "int32"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "employee id come at after peeling"
          },
          "binUniqueId" : {
            "type" : "string",
            "example" : "534u-fksjfi9-i4rhdks-48rjl"
          },
          "jobId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weightOutOfRangeFlag" : {
            "type" : "boolean",
            "description" : "false if in range inner bound, true otherwise"
          },
          "weight" : {
            "type" : "number",
            "format" : "double"
          },
          "targetWeight" : {
            "type" : "number",
            "format" : "double",
            "description" : "weight in product spec"
          },
          "weightScaleId" : {
            "type" : "string"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "PostWeightPacking"
      },
      "PostWeightPeeling" : {
        "type" : "object",
        "properties" : {
          "referenceId" : {
            "type" : "string",
            "example" : "h3449-43y343-8wey9h-348y3vh8",
            "description" : "Reference id of basket for map before and after peeling basket"
          },
          "binUniqueId" : {
            "type" : "string",
            "example" : "795-fsdl-4ojt-43897ijk",
            "description" : "bin UUID"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Employee ID who peel"
          },
          "jobId" : {
            "type" : "string",
            "example" : 123,
            "description" : "Sub job id get from service get peeling job in data controller"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "description" : "Weight before, after peeling"
          },
          "weightPos" : {
            "type" : "string",
            "example" : "before",
            "description" : "Weight before or after peeling ('peeling_start', 'peeling_end')",
            "enum" : [ "peeling_start", "peeling_end" ]
          },
          "weightScaleId" : {
            "type" : "string",
            "example" : "PE-002"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "PostWeightPeeling",
        "description" : "Data weight at peeling"
      },
      "GetWeightPurchase" : {
        "type" : "object",
        "properties" : {
          "baskets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeightBasket"
            }
          },
          "binUniqueId" : {
            "type" : "string",
            "description" : "generate unique ID to prevent reuse same bin in same farm code",
            "example" : "wer894si04I404jfdklj30904we"
          },
          "binId" : {
            "type" : "string",
            "description" : "Bin id"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of raw material"
          },
          "rmNumberId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "farm code number id"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Size of number (KG)"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "example" : 17.04,
            "description" : "Weight each basket"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          },
          "weightTarget" : {
            "type" : "string",
            "example" : "system",
            "description" : "Weight type, sample or actual weight",
            "enum" : [ "sample", "system", "kr", "kitchen", "consignment" ]
          }
        },
        "title" : "GetWeightPurchase",
        "description" : "Store weight at purchase"
      },
      "PostWeightPurchase" : {
        "type" : "object",
        "properties" : {
          "binUniqueId" : {
            "type" : "string",
            "description" : "generate unique ID to prevent reuse same bin in same farm code",
            "example" : "wer894si04I404jfdklj30904we"
          },
          "binId" : {
            "type" : "string",
            "description" : "Bin id"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of raw material"
          },
          "rmNumberId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "farm code number id"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Size of number (KG)"
          },
          "countRef" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Count number basket"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "example" : 17.04,
            "description" : "Weight each basket"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          },
          "weightTarget" : {
            "type" : "string",
            "example" : "system",
            "description" : "Weight type, sample or actual weight",
            "enum" : [ "sample", "system", "kr", "kitchen", "consignment" ]
          }
        },
        "title" : "PostWeightPurchase",
        "description" : "Store weight at purchase"
      },
      "PostBinStatus" : {
        "type" : "object",
        "properties" : {
          "binUniqueId" : {
            "type" : "string",
            "description" : "generate unique ID to prevent reuse same bin in same farm code",
            "example" : "wer894si04I404jfdklj30904we"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "FINISH" ],
            "description" : "Bin status"
          }
        },
        "title" : "PostBinStatus",
        "description" : "Send bin status ex FINISH for close bin"
      },
      "GetFarmCodeSoaking" : {
        "type" : "object",
        "properties" : {
          "farmCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sizes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "farmCodes" : [ "AAAA", "AAAB", "AAAC" ],
          "sizes" : [ "31/40", "41/50", "51/60" ]
        },
        "title" : "GetFarmCodeSoaking"
      },
      "PostInnerWeight" : {
        "type" : "object",
        "properties" : {
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "specId" : {
            "type" : "number",
            "format" : "int32",
            "example" : 1,
            "description" : "spec ID"
          },
          "size" : {
            "type" : "string",
            "example" : "31/40",
            "description" : "Size of number finish good(lbs)"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "description" : "Sum weight of all baskets (grams)"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "proper", "upper", "lower" ]
          },
          "countRef" : {
            "type" : "number",
            "format" : "int32",
            "description" : "count basket number"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "PostInnerWeight",
        "description" : "Store inner weight"
      },
      "PostWeightSoaking" : {
        "type" : "object",
        "properties" : {
          "binId" : {
            "type" : "string",
            "description" : "Bin id"
          },
          "binUniqueId" : {
            "type" : "string",
            "example" : "woej3-jk3498-tuejri-48uior"
          },
          "employeeId" : {
            "type" : "string",
            "description" : "Person id who weight"
          },
          "farmCode" : {
            "type" : "string"
          },
          "size" : {
            "type" : "string",
            "example" : "31/40",
            "description" : "Size of number finish good(lbs)"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "description" : "Sum weight of all baskets"
          },
          "countRef" : {
            "type" : "number",
            "format" : "int32",
            "description" : "count basket number"
          },
          "weightScaleId" : {
            "type" : "string",
            "description" : "Weight scale name or id"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "PostWeightSoaking",
        "description" : "Store weight before soaking"
      },
      "ProductionNumber" : {
        "type" : "object",
        "properties" : {
          "machineSizing" : {
            "type" : "boolean"
          },
          "mixed" : {
            "type" : "boolean"
          },
          "prdNumberId" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Reference production number"
          },
          "prdSize" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 41,
            "description" : "Size product in KG unit"
          },
          "rawmatNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Reference raw material number from purchase"
          },
          "rawmatSize" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 41,
            "description" : "Size in KG unit at purchase, may be same as production size or not"
          }
        },
        "title" : "ProductionNumber",
        "description" : "Number use in production"
      },
      "ProductSizeProperty" : {
        "type" : "object",
        "properties" : {
          "productSize" : {
            "type" : "string",
            "example" : "21/25",
            "description" : "Product size"
          },
          "productSpec" : {
            "type" : "string",
            "example" : "38-41",
            "description" : "size in kg that belongs to product size"
          },
          "color" : {
            "type" : "string",
            "example" : "f222a3",
            "description" : "Color value in hexa decimal format"
          }
        },
        "title" : "ProductSizeProperty",
        "description" : "Include product size, product spec and color belong to size"
      },
      "PurchaseNumber" : {
        "type" : "object",
        "properties" : {
          "containerNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "To identify the size from which container"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2,
            "description" : "Number that assign by purchase for classify type"
          },
          "numberId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Reference farm code size id in database"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 60,
            "description" : "Size product"
          },
          "type" : {
            "type" : "string",
            "example" : "ปกติ",
            "description" : "type of shrimp"
          }
        },
        "title" : "PurchaseNumber",
        "description" : "Number use for purchase"
      },
      "QcBinStick" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "หัวส้ม",
            "description" : "Qc label for show in bin stick"
          },
          "name" : {
            "type" : "string",
            "example" : "orange_head",
            "description" : "Qc check title"
          },
          "value" : {
            "type" : "object",
            "example" : 2,
            "description" : "Qc point in %"
          }
        },
        "title" : "QcBinStick",
        "description" : "Data qc result"
      },
      "SubPeelingJob" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subTask" : {
            "type" : "string"
          }
        },
        "title" : "SubPeelingJob",
        "description" : "Sub job is deeper detail of main job, indicate how employee peeling shrimp"
      },
      "WeightBasket" : {
        "type" : "object",
        "properties" : {
          "countRef" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Count number basket"
          },
          "weight" : {
            "type" : "number",
            "format" : "double",
            "example" : 17.04,
            "description" : "Weight each basket"
          },
          "weightDate" : {
            "type" : "string",
            "example" : "2018-10-23 14:00:12",
            "description" : "Weighted date in format yyyy-MM-dd HH:mm:ss"
          }
        },
        "title" : "WeightBasket",
        "description" : "Data about weight in each basket"
      },
      "WeightTarget" : {
        "type" : "object",
        "properties" : {
          "target" : {
            "type" : "string",
            "description" : "weighting target for send to API",
            "example" : "system"
          },
          "label" : {
            "type" : "string",
            "description" : "label to show in RFID",
            "example" : "เข้าระบบ"
          }
        },
        "title" : "WeightTarget"
      }
    }
  }
}