openapi: "3.0.0"
info:
  version: "0.1.1"
  title: "Feverzone Ticket aggregation"
paths:
  /b2b/partners/{partnerId}/plans/{planId}/:
    parameters:
      - name: "partnerId"
        in: "path"
        description: "Partner ID"
        required: true
        schema:
          type: "number"
          format: "int64"
          example: 123
      - name: "planId"
        in: "path"
        description: "Plan ID"
        required: true
        schema:
          type: "number"
          format: "int64"
          example: 456
    get:
      summary: "Get aggregated ticket information"
      parameters:
      - name: "start_date"
        in: "query"
        description: "Start date to filter with"
        required: false
        schema:
          type: "string"
          example: "2019-10-23"
      - name: "end_date"
        in: "query"
        description: "End date to filter with"
        required: false
        schema:
          type: "string"
          example: "2019-11-23"
      - name: "venue_id"
        in: "query"
        description: "Venue ID to filter with"
        required: false
        schema:
          type: "string"
          example: "2019-11-23"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
# Added by API Auto Mocking Plugin
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message: 
          type: string
          example: "The start date should be before the end_date"
      required: 
        - message
    SuccessResponse:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/AggregationTotal'
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/TicketAggregation'
    AggregationTotal:
      type: object
      properties:
        number_sold_tickets: 
          type: integer
          example: 12
        number_available_tickets: 
          type: integer
          example: 8
        gross_revenue: 
          $ref: '#/components/schemas/Money'
      required:
        - number_sold_tickets
        - number_available_tickets
        - 0_link
        - gross_revenue
    TicketAggregation:
      type: object
      properties:
        name: 
          type: string
          example: "24 Hour Bike Rental"
        price: 
          type: number
          format: double
          example: 15.99
        currency: 
          type: string
          example: "€"
        number_sold_tickets: 
          type: integer
          example: 12
        number_available_tickets: 
          type: integer
          example: 8
        0_link: 
          type: boolean
          example: true
        gross_revenue_amount: 
          type: number
          format: double
          example: 191.88
      required:
        - name
        - price
        - currency
        - number_sold_tickets
        - number_available_tickets
        - 0_link
        - gross_revenue_amount
    Money:
      type: object
      properties:
        amount: 
          type: number
          format: double
          example: 191.88
        currency: 
          type: string
          example: "€"
      required:
        - amount
        - currency
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/luis-pintado-feverup/Feverzone/0.1.1
