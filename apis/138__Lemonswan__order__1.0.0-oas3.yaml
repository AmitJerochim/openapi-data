openapi: 3.0.0
info:
  description: manages the orders of the product
  version: "1.0.0-oas3"
  title: Order API
  contact:
    email: kevin.kuchenbrandt@lemonswan.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: orders
    description: Generic operations
    
  - name: payment
    description: Payment related operations
paths:
  /order:
    get:
      tags:
        - orders
      summary: Find orders
      description: >
        Retrieve a list of orders
      parameters:
        - in: query
          name: search
          description: Search by userID, orderID
          schema:
            type: string
        - in: query
          name: dateFrom
          description: Search order with creation date equal or younger than given timestamp
          schema:
            type: string 
        - in: query
          name: dateTo
          description: Search order with creation date equal or older than given timestamp
          schema:
            type: string 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/OrderItem'
    post:
      tags:
        - orders
      summary: adds an order item
      operationId: addOrder
      description: Adds an order to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        description: Order item to add
      responses:
        '200':
          description: order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example: 
                status: success
                data: 
                  title: order has been created
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: missing parameters to create order
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order can't be created
  '/order/{orderID}':
    get:
      tags:
        - orders
      summary: Find order by ID
      description: >
        Returns a single order
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to get
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/OrderItem'
              example:
                    id: 4637
                    userID: 2
                    startDate: '2017-07-21T17:32:28.000Z'
                    endDate: '2017-07-21T17:32:28.000Z'
                    Orders:
                      - orderID: 1
                        orderDate: '2017-07-21T17:32:28.000Z'
                        orderCurrency: EUR
                      - orderID: 2
                        orderDate: '2017-07-21T17:32:28.000Z'
                        orderCurrency: EUR
    put:
      tags:
        - orders
      summary: updates the specific order
      description: >
        By passing in the appropriate options, you can update a specific
        order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to get
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example: 
      responses:
        '200':
          description: order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example: 
                status: success
                data: 
                  title: order has been updated
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: missing parameters to update order
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order can't be updated
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
                  
    delete:
      tags:
        - orders
      summary: deletes the specific order
      description: >
        By passing in the appropriate options, you can delete a specific
        order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to delete
          schema:
            type: integer
      responses:
        '200':
          description: Order deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example: 
                status: success
                data: 
                  title: order deleted
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order needs to be older than 10 years
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
  '/order/{orderID}/change-payment-frequency':
    post:
      tags:
        - payment
      summary: changes the payment frequency of said order
      description: >
        By passing in the appropriate options, you can modify the payment
        frequency of said order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to modify
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example:
              operatorID: 5
              newAmount: 120
              frequency: one time
      responses:
        '200':
          description: payment frequency modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example:
                status: success
                data: 
                  title: The payment frequency has been updated
                  dateReceived: '2020-07-21T17:32:28.000Z'
                  dateEffective: '2020-07-21T17:32:28.000Z'
                  operatorID: 5
                  frequencyBefore:
                    frequency: monthly payment
                  frequencyNow:
                    frequency: one time payment
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: frequency missing
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: payment frequency can't be changed
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
  '/order/{orderID}/change-payment-method':
    post:
      tags:
        - payment
      summary: changes the payment method of said order
      description: >
        By passing in the appropriate options, you can modify the payment
        method of said order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to modify
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example:
              operatorID: 5
              newAmount: 120
              frequency: one time
      responses:
        '200':
          description: payment frequency modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example:
                status: success
                data: 
                  title: The payment frequency has been updated
                  dateReceived: '2020-07-21T17:32:28.000Z'
                  dateEffective: '2020-07-21T17:32:28.000Z'
                  operatorID: 5
                  frequencyBefore:
                    frequency: monthly payment
                  frequencyNow:
                    frequency: one time payment
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: payment provider missing
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: payment method can't be changed
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found

  '/order/{orderID}/extend-subscription':
    post:
      tags:
        - orders
      summary: extend based on a specific order
      description: >
        By passing in the appropriate options, you can extend the subscription based the order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to extend
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example:
              operatorID: 5
              orderID: 23448
              renewalAmount: 230.00
      responses:
        '200':
          description: order extended 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example:
                status: success
                data: 
                  title: The subscription has been extended
                  operatorID: 5
                  orderID: 23449
                  userID: 2345
                  renewalAmount: 230.00
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order can't be extended
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
  '/order/{orderID}/withdrawal':
    post:
      tags:
        - withdrawal
      summary: start withdrawal of a specific order
      description: >
        By passing in the appropriate options, you start the withdrawal process of the given order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to extend
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example:
              operatorID: 5
              orderID: 23448
              
      responses:
        '200':
          description: order withdrawed 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example:
                status: success
                data: 
                  title: The order has been withdrawed
                  operatorID: 5
                  orderID: 23449
                  userID: 2345
                  inboundWithdrawal: '2020-07-21T17:32:28.000Z'
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order already withdrawed
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order can't be withdrawed
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
  '/order/{orderID}/recovery':
    post:
      tags:
        - withdrawal
      summary: start recovery of a specific order
      description: >
        By passing in the appropriate options, you recover the given order in the system
      parameters:
        - in: path
          name: orderID
          required: true
          description: Numeric ID of the order to extend
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
            example:
              operatorID: 5
              orderID: 2344
              effectiveDate: '2020-07-21T17:32:28.000Z'
              discountAmount: 230
      responses:
        '200':
          description: order recovered 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultOk'
              example:
                status: success
                data: 
                  title: The order has been recovered
                  operatorID: 5
                  orderID: 23449
                  userID: 2345
                  effectiveDate: '2020-07-21T17:32:28.000Z'
                  discountAmount: 230
        '400':
          description: Invalid Syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order already recovered
        '403':
          description: Request not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResultFail'
              example:
                status: fail
                data: 
                  title: order can't be recovered
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResultError'
              example: 
                status: error
                message: Order not found
servers:
  - url: 'https://virtserver.swaggerhub.com/Lemonswan/order/1.0.0'
components:
  schemas:
    OrderItem:
      type: object
      required:
        - orderID
        - userID
        - contractType
        - amount
        - voucherAmount
        - currency
        - domain
        - contractDate
        - paymentProvider
        - totalAmount
      properties:
        orderID:
          type: string
          format: uuid
          example: 123456
        user:
          $ref: '#/components/schemas/User'
        product:
          type: integer
          example: 2
        contractType:
          type: string
          example: abonnement
        contractDate:
          type: string
          format: date-time
          example: '2020-07-21T17:32:28.000Z'
        totalAmount:
          type: number
          example: 380.4
        paymentProvider:
          $ref: '#/components/schemas/PaymentProvider'
        subscriptionType:
          $ref: '#/components/schemas/Subscription'
        voucher:
          $ref: '#/components/schemas/Voucher'
        discount:
          $ref: '#/components/schemas/Discount'
        runtimeDiscount:
          $ref: '#/components/schemas/RuntimeDiscount'
    PaymentProvider:
      required:
        - name
        - paymentProviderReferenceID
      properties:
        name:
          type: string
          example: Heidelpay
        paymentProviderReferenceID:
          type: string
          example: ABCDEFGHIJK
    Voucher:
      required:
        - amount
        - product
      properties:
        amount:
          type: number
          example: 30
        product:
          type: string
          example: 28DBA
    Discount:
      required:
        - amount
        - product
        - startDate
        - endDate
        - frequency
      properties:
        amount:
          type: number
          example: 50
        product:
          type: string
          example: 28DBA
        startDate:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28.000Z'
        endDate:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28.000Z'
        frequency:
          type: string
          example: monthly
    RuntimeDiscount:
      required:
        - amount
        - product
      properties:
        amount:
          type: number
          example: 30
        product:
          type: string
          example: 28DBA
    Subscription:
      required:
        - duration
        - duration_type
        - renewal_duration
        - renewal_type
        - renewal_amount
        - fee
        - frequeny
      properties:
        duration:
          type: integer
          example: 2
        duration_type:
          type: string
          example: month
        renewal_duration:
          type: integer
          example: 12
        renewal_type:
          type: string
          example: month
        renewal_amount:
          type: integer
          example: 1200
        fee:
          type: number
          example: 0
        frequency:
          type: string
          example: one time
    User:
      required:
        - userID
        - domain
        - currency
      properties:
        userID:
          type: string
          example: HAG726
        domain:
          type: string
          example: 'https://www.lemonswan.de'
        currency:
          type: string
          example: euro
    ApiResultOk:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id:
              type: integer
              example: 123
            msg:
              type: string
              example: Order created successfully
    ApiResultFail:
      type: object
      properties:
        status:
          type: string
          example: fail
        data:
          type: object
          properties:
            title:
              type: string
              example: Order already exists
    ApiResultError:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Unable to create order
        code:
          type: string
          example: 403
