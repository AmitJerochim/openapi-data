{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "RTG Registry Service",
    "version" : "5.101.0"
  },
  "paths" : {
    "/api/config" : {
      "get" : {
        "tags" : [ "config" ],
        "summary" : "get app config",
        "operationId" : "get-app-config",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens" : {
      "post" : {
        "tags" : [ "citizens" ],
        "summary" : "create citizen",
        "operationId" : "create-citizen",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewCitizen"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitizenDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "citizens" ],
        "summary" : "get citizens",
        "operationId" : "get-citizens",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument.firstName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument.middleName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument.lastName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CitizenDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens" ],
        "summary" : "count citizens",
        "operationId" : "count-citizens",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument.firstName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument.middleName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument.lastName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}" : {
      "get" : {
        "tags" : [ "citizens" ],
        "summary" : "get citizen by id",
        "operationId" : "get-citizen-by-id",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "operationReason",
          "in" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/NotarialOperationReason"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitizenDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "citizens" ],
        "summary" : "update citizen",
        "operationId" : "update-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCitizen"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitizenDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/registered-citizens" : {
      "get" : {
        "tags" : [ "citizens", "registrations" ],
        "summary" : "get registered citizens by residence",
        "operationId" : "get-registered-citizens-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens", "registrations" ],
        "summary" : "count registered citizens by residence",
        "operationId" : "count-registered-citizens-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/residing-citizens" : {
      "get" : {
        "tags" : [ "citizens", "registrations" ],
        "summary" : "get residing citizens by residence",
        "operationId" : "get-residing-citizens-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens", "registrations" ],
        "summary" : "count residing citizens by residence",
        "operationId" : "count-residing-citizens-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/locked" : {
      "put" : {
        "tags" : [ "citizens" ],
        "summary" : "lock citizen",
        "operationId" : "lock-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitizenDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-public-data" : {
      "get" : {
        "tags" : [ "citizens" ],
        "summary" : "get citizen public data",
        "operationId" : "get-citizen-public-data",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens" ],
        "summary" : "count citizen public data",
        "operationId" : "count-citizen-public-data",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-public-data/historical" : {
      "get" : {
        "tags" : [ "citizens" ],
        "summary" : "get historical citizen public data",
        "operationId" : "get-historical-citizen-public-data",
        "parameters" : [ {
          "name" : "filter[lastName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[firstName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[middleName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "distinctByCitizen",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens" ],
        "summary" : "count historical citizen public data",
        "operationId" : "count-historical-citizen-public-data",
        "parameters" : [ {
          "name" : "filter[lastName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[firstName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[middleName]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[dateOfBirth]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "distinctByCitizen",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-public-data/{citizenId}" : {
      "get" : {
        "tags" : [ "citizens" ],
        "summary" : "get citizen public data by id",
        "operationId" : "get-citizen-public-data-by-id",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements" : {
      "post" : {
        "tags" : [ "statements" ],
        "summary" : "create statement",
        "operationId" : "create-statement",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewStatement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatementDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "statements" ],
        "summary" : "get statements",
        "operationId" : "get-statements",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StatementDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "statements" ],
        "summary" : "count statements",
        "operationId" : "count-statements",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementCode}" : {
      "get" : {
        "tags" : [ "statements" ],
        "summary" : "get statement by code",
        "operationId" : "get-statement-by-code",
        "parameters" : [ {
          "name" : "statementCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatementDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "statements" ],
        "summary" : "update statement",
        "operationId" : "update-statement",
        "parameters" : [ {
          "name" : "statementCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStatement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatementDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "statements" ],
        "summary" : "lock statement",
        "operationId" : "lock-statement",
        "parameters" : [ {
          "name" : "statementCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string"
                  }
                },
                "required" : [ "reason" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementCode}/state" : {
      "put" : {
        "tags" : [ "statements" ],
        "summary" : "change statement state",
        "operationId" : "change-statement-state",
        "parameters" : [ {
          "name" : "statementCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "$ref" : "#/components/schemas/StatementState"
                  },
                  "rejectReason" : {
                    "type" : "string"
                  }
                },
                "required" : [ "state" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatementDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/districts/{districtId}/statements" : {
      "get" : {
        "tags" : [ "statements" ],
        "summary" : "get statements by district",
        "operationId" : "get-statements-by-district",
        "parameters" : [ {
          "name" : "districtId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StatementDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "statements" ],
        "summary" : "count statements by district",
        "operationId" : "count-statements-by-district",
        "parameters" : [ {
          "name" : "districtId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/localities/{localityId}/statements" : {
      "get" : {
        "tags" : [ "statements" ],
        "summary" : "get statements by locality",
        "operationId" : "get-statements-by-locality",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StatementDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "statements" ],
        "summary" : "count statements by locality",
        "operationId" : "count-statements-by-locality",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/statements" : {
      "get" : {
        "tags" : [ "statements" ],
        "summary" : "get statements by citizen",
        "operationId" : "get-statements-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StatementDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "statements" ],
        "summary" : "count statements by citizen",
        "operationId" : "count-statements-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get register record by id",
        "operationId" : "get-register-record-by-id",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/registration-history" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get registration history of citizen",
        "operationId" : "get-registration-history-of-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegisterRecordDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "registrations" ],
        "summary" : "count registration history of citizen",
        "operationId" : "count-registration-history-of-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/registration-history" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get registration history by residence",
        "operationId" : "get-registration-history-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegisterRecordDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "registrations" ],
        "summary" : "count registration history by residence",
        "operationId" : "count-registration-history-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}/cancel" : {
      "put" : {
        "tags" : [ "registrations" ],
        "summary" : "cancel register record",
        "operationId" : "cancel-register-record",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string"
                  }
                },
                "required" : [ "reason" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}/activate" : {
      "put" : {
        "tags" : [ "registrations" ],
        "summary" : "activate register record",
        "operationId" : "activate-register-record",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string"
                  }
                },
                "required" : [ "reason" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}/activation-date" : {
      "put" : {
        "tags" : [ "registrations" ],
        "summary" : "change register record init date",
        "operationId" : "change-register-record-init-date",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "initDate" : {
                    "type" : "string",
                    "format" : "date-time"
                  }
                },
                "required" : [ "initDate" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}/sign" : {
      "put" : {
        "tags" : [ "registrations" ],
        "summary" : "sign register record",
        "operationId" : "sign-register-record",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "X-Signature",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signature" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get register records",
        "operationId" : "get-register-records",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegisterRecordDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "registrations" ],
        "summary" : "count register records",
        "operationId" : "count-register-records",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/registration-migrations" : {
      "post" : {
        "tags" : [ "registration-migrations" ],
        "summary" : "start registration migration",
        "operationId" : "start-registration-migration",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/RegistrationMigrationRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/registration-migration/<report-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/registration-migrations/{reportId}" : {
      "get" : {
        "tags" : [ "registration-migrations" ],
        "summary" : "get registration migration results",
        "description" : "Output is not described yet",
        "operationId" : "get-registration-migration-results",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/registration-migrations/{reportId}/status" : {
      "get" : {
        "tags" : [ "registration-migrations" ],
        "summary" : "get registration migration status",
        "description" : "Output is not described yet",
        "operationId" : "get-registration-migration-status",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportStatusDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/documents" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "create citizen document",
        "operationId" : "create-citizen-document",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewDocument"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "get documents by citizen",
        "operationId" : "get-documents-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "filter[documentTypeId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[issueDate]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "documents" ],
        "summary" : "count documents by citizen",
        "operationId" : "count-documents-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "filter[documentTypeId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[issueDate]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/documents/{documentId}" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "get document by id",
        "operationId" : "get-document-by-id",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "documents" ],
        "summary" : "count document by id",
        "operationId" : "count-document-by-id",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "documents" ],
        "summary" : "update document",
        "operationId" : "update-document",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDocument"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "documents" ],
        "summary" : "delete document",
        "operationId" : "delete-document",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/documents" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "get documents",
        "operationId" : "get-documents",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[documentTypeId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[issueDate]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "documents" ],
        "summary" : "count documents",
        "operationId" : "count-documents",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[documentTypeId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[issueDate]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[isActive]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/kinship" : {
      "post" : {
        "tags" : [ "kinship" ],
        "summary" : "create citizen kinship",
        "operationId" : "create-citizen-kinship",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewKinship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KinshipDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "kinship" ],
        "summary" : "get kinship by citizen",
        "operationId" : "get-kinship-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/KinshipDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "kinship" ],
        "summary" : "count kinship by citizen",
        "operationId" : "count-kinship-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/kinship/{kinshipId}" : {
      "get" : {
        "tags" : [ "kinship" ],
        "summary" : "get kinship by id",
        "operationId" : "get-kinship-by-id",
        "parameters" : [ {
          "name" : "kinshipId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KinshipDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "kinship" ],
        "summary" : "lock kinship",
        "operationId" : "lock-kinship",
        "parameters" : [ {
          "name" : "kinshipId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/kinship" : {
      "get" : {
        "tags" : [ "kinship" ],
        "summary" : "get kinship",
        "operationId" : "get-kinship",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/KinshipDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "kinship" ],
        "summary" : "count kinship",
        "operationId" : "count-kinship",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/countries" : {
      "get" : {
        "tags" : [ "countries" ],
        "summary" : "get countries",
        "operationId" : "get-countries",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "countries" ],
        "summary" : "count countries",
        "operationId" : "count-countries",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/countries/{countryId}" : {
      "get" : {
        "tags" : [ "countries" ],
        "summary" : "get country by id",
        "operationId" : "get-country-by-id",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/areas/{areaId}" : {
      "get" : {
        "tags" : [ "areas" ],
        "summary" : "get area by id",
        "operationId" : "get-area-by-id",
        "parameters" : [ {
          "name" : "areaId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/regions/{regionId}" : {
      "get" : {
        "tags" : [ "regions" ],
        "summary" : "get region by id",
        "operationId" : "get-region-by-id",
        "parameters" : [ {
          "name" : "regionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/localities/{localityId}/districts" : {
      "get" : {
        "tags" : [ "districts" ],
        "summary" : "get districts by locality",
        "operationId" : "get-districts-by-locality",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[atuuId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!name!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DistrictDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/districts/{districtId}" : {
      "get" : {
        "tags" : [ "districts" ],
        "summary" : "get district by id",
        "operationId" : "get-district-by-id",
        "parameters" : [ {
          "name" : "districtId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/atuu/batch" : {
      "get" : {
        "tags" : [ "localities" ],
        "summary" : "get atuu by ids",
        "operationId" : "get-atuu-by-ids",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AtuuDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/atuu/{atuuId}" : {
      "get" : {
        "tags" : [ "localities" ],
        "summary" : "get atuu by id",
        "operationId" : "get-atuu-by-id",
        "parameters" : [ {
          "name" : "atuuId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AtuuDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/streets/batch" : {
      "get" : {
        "tags" : [ "streets" ],
        "summary" : "get streets by ids",
        "operationId" : "get-streets-by-ids",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StreetDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/streets/{streetId}" : {
      "get" : {
        "tags" : [ "streets" ],
        "summary" : "get street by id",
        "operationId" : "get-street-by-id",
        "parameters" : [ {
          "name" : "streetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreetDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/localities/{localityId}/streets" : {
      "get" : {
        "tags" : [ "streets" ],
        "summary" : "get streets by locality",
        "operationId" : "get-streets-by-locality",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StreetDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "streets" ],
        "summary" : "count streets by locality",
        "operationId" : "count-streets-by-locality",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/districts/{districtId}/streets" : {
      "get" : {
        "tags" : [ "streets" ],
        "summary" : "get streets by district",
        "operationId" : "get-streets-by-district",
        "parameters" : [ {
          "name" : "districtId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StreetDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "streets" ],
        "summary" : "count streets by district",
        "operationId" : "count-streets-by-district",
        "parameters" : [ {
          "name" : "districtId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!streetName!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/buildings/batch" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "get buildings by ids",
        "operationId" : "get-buildings-by-ids",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuildingDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/buildings/{buildingId}" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "get building by id",
        "operationId" : "get-building-by-id",
        "parameters" : [ {
          "name" : "buildingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/streets/{streetId}/buildings" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "get buildings by street",
        "operationId" : "get-buildings-by-street",
        "parameters" : [ {
          "name" : "streetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[numb!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!numb]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!numb!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuildingDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "buildings" ],
        "summary" : "count buildings by street",
        "operationId" : "count-buildings-by-street",
        "parameters" : [ {
          "name" : "streetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[streetName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[numb!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!numb]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[!numb!]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/buildings/{buildingId}/residences" : {
      "post" : {
        "tags" : [ "residences" ],
        "summary" : "create residence",
        "operationId" : "create-residence",
        "parameters" : [ {
          "name" : "buildingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewResidence"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "residences" ],
        "summary" : "get residences by building",
        "operationId" : "get-residences-by-building",
        "parameters" : [ {
          "name" : "buildingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[type]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[room]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[isInhabitable]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResidenceDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "residences" ],
        "summary" : "count residences by building",
        "operationId" : "count-residences-by-building",
        "parameters" : [ {
          "name" : "buildingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[type]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[room]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[isInhabitable]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residence-types" : {
      "get" : {
        "tags" : [ "residences" ],
        "summary" : "get residence types",
        "operationId" : "get-residence-types",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResidenceTypeDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences" : {
      "get" : {
        "tags" : [ "residences" ],
        "summary" : "get residences by ids",
        "operationId" : "get-residences-by-ids",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResidenceDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}" : {
      "get" : {
        "tags" : [ "residences" ],
        "summary" : "get residence by id",
        "operationId" : "get-residence-by-id",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/SearchResultType"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/permanent-residence" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get permanent residence of citizen",
        "operationId" : "get-permanent-residence-of-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            },
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/temporary-residence" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get temporary residence of citizen",
        "operationId" : "get-temporary-residence-of-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            },
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/control" : {
      "patch" : {
        "tags" : [ "residences" ],
        "summary" : "update residence control",
        "operationId" : "update-residence-control",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateResidenceMetadataControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/verification" : {
      "patch" : {
        "tags" : [ "residences" ],
        "summary" : "update residence verification",
        "operationId" : "update-residence-verification",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateResidenceMetadata"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResidenceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-statuses" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get citizen statuses",
        "operationId" : "get-citizen-statuses",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CitizenStatusDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-statuses/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get citizen status by id",
        "operationId" : "get-citizen-status-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitizenStatusDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/document-issuers" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get document issuers",
        "operationId" : "get-document-issuers",
        "parameters" : [ {
          "name" : "filter[code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[shortName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentIssuerDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/document-issuers/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get document issuer by id",
        "operationId" : "get-document-issuer-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentIssuerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/document-types" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get document types",
        "operationId" : "get-document-types",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentTypeDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/document-types/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get document type by id",
        "operationId" : "get-document-type-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentTypeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/kinship-types" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get kinship types",
        "operationId" : "get-kinship-types",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/KinshipTypeDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/kinship-types/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get kinship type by id",
        "operationId" : "get-kinship-type-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KinshipTypeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/military-ranks" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get military ranks",
        "operationId" : "get-military-ranks",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MilitaryRankDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/military-ranks/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get military rank by id",
        "operationId" : "get-military-rank-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MilitaryRankDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/military-specialties" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get military specialties",
        "operationId" : "get-military-specialties",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MilitarySpecialtyDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/military-specialties/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get military specialty by id",
        "operationId" : "get-military-specialty-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MilitarySpecialtyDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/process-reasons" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get process reasons",
        "operationId" : "get-process-reasons",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcessReasonDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/process-reasons/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get process reason by id",
        "operationId" : "get-process-reason-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessReasonDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/reject-reasons" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get reject reasons",
        "operationId" : "get-reject-reasons",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RejectReasonDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/reject-reasons/{itemId}" : {
      "get" : {
        "tags" : [ "references" ],
        "summary" : "get reject reason by id",
        "operationId" : "get-reject-reason-by-id",
        "parameters" : [ {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RejectReasonDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/import/registration-csv" : {
      "post" : {
        "tags" : [ "csv" ],
        "summary" : "start csv import",
        "operationId" : "start-csv-import",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "csv" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "csv" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/import/registration-csv/{importId}/status" : {
      "get" : {
        "tags" : [ "csv" ],
        "summary" : "get csv import status",
        "operationId" : "get-csv-import-status",
        "parameters" : [ {
          "name" : "importId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportStatusDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/import/registration-csv/{importId}" : {
      "get" : {
        "tags" : [ "csv" ],
        "summary" : "get csv import results",
        "operationId" : "get-csv-import-results",
        "parameters" : [ {
          "name" : "importId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "csv" ],
        "summary" : "delete csv import",
        "operationId" : "delete-csv-import",
        "parameters" : [ {
          "name" : "importId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/news/{newsId}" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "get news by id",
        "operationId" : "get-news-by-id",
        "parameters" : [ {
          "name" : "newsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/news" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "get news",
        "operationId" : "get-news",
        "parameters" : [ {
          "name" : "filter[publishDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[visible]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[created]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[updated]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NewsDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "news" ],
        "summary" : "count news",
        "operationId" : "count-news",
        "parameters" : [ {
          "name" : "filter[publishDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[visible]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[created]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[updated]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/task-manager-enabled" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get task manager availability",
        "operationId" : "get-task-manager-availability",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/tasks" : {
      "post" : {
        "tags" : [ "task manager" ],
        "summary" : "create task",
        "operationId" : "create-task",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewTask"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "task manager" ],
        "summary" : "count tasks",
        "description" : "**THIS METHOD IS BROKEN. DO NOT USE IT!**",
        "operationId" : "count-tasks",
        "parameters" : [ {
          "name" : "filter[author]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[assignee]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[authorOrganization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[assigneeOrganization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StatusCode"
            }
          }
        }, {
          "name" : "locked",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "changedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "changedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/tasks/ingoing" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get tasks",
        "operationId" : "get-tasks",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StatusCode"
            }
          }
        }, {
          "name" : "locked",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "changedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "changedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 1000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/tasks/outgoing" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get tasks",
        "operationId" : "get-tasks",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StatusCode"
            }
          }
        }, {
          "name" : "locked",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "changedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "changedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 1000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get task by id",
        "operationId" : "get-task-by-id",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "task manager" ],
        "summary" : "change task",
        "operationId" : "change-task",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "If-match",
          "in" : "header",
          "description" : "Task version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "assigneeId" : {
                    "$ref" : "#/components/schemas/TaskUser"
                  },
                  "assigneeOrganizationId" : {
                    "$ref" : "#/components/schemas/TaskOrganization"
                  },
                  "data" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/task/<task-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "task manager" ],
        "summary" : "delete task",
        "operationId" : "delete-task",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/tasks/{taskId}/status" : {
      "put" : {
        "tags" : [ "task manager" ],
        "summary" : "change task status",
        "operationId" : "change-task-status",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "If-match",
          "in" : "header",
          "description" : "Task version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "status" : {
                    "$ref" : "#/components/schemas/StatusCode"
                  },
                  "assigneeComment" : {
                    "type" : "string"
                  }
                },
                "required" : [ "status" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/task/<task-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/task-statuses" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get task statuses",
        "operationId" : "get-task-statuses",
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatusCode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskStatusDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/reports/residence-verification" : {
      "post" : {
        "tags" : [ "task manager" ],
        "summary" : "start residence verification report",
        "operationId" : "start-residence-verification-report",
        "parameters" : [ {
          "name" : "localityId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "districtId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/reports/residence-verification/<report-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/reports/residence-verification/{reportId}" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get residence verification report results",
        "operationId" : "get-residence-verification-report-results",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "task manager" ],
        "summary" : "delete residence verification report",
        "operationId" : "delete-residence-verification-report",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/reports/residence-verification/{reportId}/status" : {
      "get" : {
        "tags" : [ "task manager" ],
        "summary" : "get residence verification report status",
        "operationId" : "get-residence-verification-report-status",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportStatusDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementId}/form-13" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form13 order by statement",
        "operationId" : "create-form13-order-by-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/form-13" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form13 order by citizen",
        "operationId" : "create-form13-order-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementId}/form-14" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form14 order by statement",
        "operationId" : "create-form14-order-by-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/form-14" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form14 order by citizen",
        "operationId" : "create-form14-order-by-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementId}/form-15" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form15 order by statement",
        "operationId" : "create-form15-order-by-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementId}/form-16" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form16 order by statement",
        "operationId" : "create-form16-order-by-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/register/{registerRecordId}/form-17" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create form17 order by register record",
        "operationId" : "create-form17-order-by-register-record",
        "parameters" : [ {
          "name" : "registerRecordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "signed" : {
                    "type" : "boolean"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  }
                },
                "required" : [ "signed" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/residing-order" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create residing order",
        "operationId" : "create-residing-order",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : {
              "Location" : {
                "description" : "/orders/<order-id>",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-orders" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create citizen order",
        "operationId" : "create-citizen-order",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "residenceId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "buildingId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "streetId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "after" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "before" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  },
                  "showCitizensPersonalData" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "residenceId", "buildingId", "streetId" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-movement-orders/records" : {
      "get" : {
        "tags" : [ "orders" ],
        "summary" : "get citizen movement order records",
        "operationId" : "get-citizen-movement-order-records",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "buildingId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "streetId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "operationReason",
          "in" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/NotarialOperationReason"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MovementOrderRecordDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizen-movement-orders" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "create citizen movement order",
        "operationId" : "create-citizen-movement-order",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "residenceId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "buildingId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "streetId" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "after" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "before" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "operationReason" : {
                    "$ref" : "#/components/schemas/NotarialOperationReason"
                  },
                  "showCitizensPersonalData" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "residenceId", "buildingId", "streetId" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/orders/{orderId}" : {
      "get" : {
        "tags" : [ "orders" ],
        "summary" : "get order by id",
        "operationId" : "get-order-by-id",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[date]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/audit-records" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "get audit records",
        "operationId" : "get-audit-records",
        "parameters" : [ {
          "name" : "filter[action]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/ActionType"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[description]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[actionTime]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[entity]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?referer!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?url!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?page!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^description.\\S+$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuditRecordDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "audit" ],
        "summary" : "count audit records",
        "operationId" : "count-audit-records",
        "parameters" : [ {
          "name" : "filter[action]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/ActionType"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[description]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[actionTime]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[entity]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?referer!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?url!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?page!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^description.\\S+$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/audit-actions" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "get audit actions",
        "operationId" : "get-audit-actions",
        "parameters" : [ {
          "name" : "filter[keywords]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuditActionDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "audit" ],
        "summary" : "count audit actions",
        "operationId" : "count-audit-actions",
        "parameters" : [ {
          "name" : "filter[keywords]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/audit-user-report" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "get audit user report",
        "operationId" : "get-audit-user-report",
        "parameters" : [ {
          "name" : "filter[action]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/ActionType"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[description]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[actionTime]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[after]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[before]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[entity]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?referer!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?url!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^!?page!?$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[/^description.\\S+$/]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/errors" : {
      "post" : {
        "tags" : [ "errors" ],
        "summary" : "create error log",
        "operationId" : "create-error-log",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewErrorLog"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorLogDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "errors" ],
        "summary" : "get error logs",
        "operationId" : "get-error-logs",
        "parameters" : [ {
          "name" : "filter[code]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[backend]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[hostname]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ErrorLogDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "citizens" ],
        "summary" : "count error logs",
        "operationId" : "count-error-logs",
        "parameters" : [ {
          "name" : "filter[code]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[backend]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[hostname]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/errors/{errorLogId}" : {
      "get" : {
        "tags" : [ "errors" ],
        "summary" : "get error log by id",
        "operationId" : "get-error-log-by-id",
        "parameters" : [ {
          "name" : "errorLogId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorLogDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/residences/{residenceId}/registrator-organization" : {
      "get" : {
        "tags" : [ "registrations" ],
        "summary" : "get registrator organization by residence",
        "operationId" : "get-registrator-organization-by-residence",
        "parameters" : [ {
          "name" : "residenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/trembita-requests" : {
      "get" : {
        "tags" : [ "trembita" ],
        "summary" : "get trembita requests",
        "operationId" : "get-trembita-requests",
        "parameters" : [ {
          "name" : "filter[status]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/TrembitaStatus"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registerRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[registerRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registerRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[created]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TrembitaRequestDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "trembita" ],
        "summary" : "count trembita requests",
        "operationId" : "count-trembita-requests",
        "parameters" : [ {
          "name" : "filter[status]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/TrembitaStatus"
          }
        }, {
          "name" : "filter[citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][firstName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][lastName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][middleName]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][documentTypeId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][code]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][issueDate]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][activeDocument][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][id]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][otgIds]",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][dateOfBirth]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][eddrId]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][activeDocument]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][citizenId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][statementId][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][registrationType]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationType"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][state]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementState"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][operator]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][organization]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][method]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatementMethod"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][currentLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][newLocality]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][cancellationStatement][canceledRegisterRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[statementId][canceledRegisterRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registerRecordId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][id]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][citizenId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][registrationStatus]",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          }
        }, {
          "name" : "filter[registerRecordId][residenceId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][buildingId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][streetId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][districtId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][localityId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[registerRecordId][statementId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][cancellationStatement]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId][isActive]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[registerRecordId][locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter[created]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "filter[localityId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[districtId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/trembita-requests/exists" : {
      "head" : {
        "tags" : [ "trembita" ],
        "summary" : "trembita request exists",
        "operationId" : "trembita-request-exists",
        "parameters" : [ {
          "name" : "filter[citizenId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[statementId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[registerRecordId]",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/trembita-requests/{trembitaRequestId}" : {
      "get" : {
        "tags" : [ "trembita" ],
        "summary" : "get trembita request by id",
        "operationId" : "get-trembita-request-by-id",
        "parameters" : [ {
          "name" : "trembitaRequestId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrembitaRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "trembita" ],
        "summary" : "update trembita request",
        "operationId" : "update-trembita-request",
        "parameters" : [ {
          "name" : "trembitaRequestId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateTrembitaRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrembitaRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/trembita-requests/{trembitaRequestId}/status" : {
      "put" : {
        "tags" : [ "trembita" ],
        "summary" : "change trembita request status",
        "operationId" : "change-trembita-request-status",
        "parameters" : [ {
          "name" : "trembitaRequestId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "status" : {
                    "$ref" : "#/components/schemas/TrembitaStatus"
                  },
                  "note" : {
                    "type" : "string"
                  }
                },
                "required" : [ "status" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrembitaRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/trembita-requests/{trembitaRequestId}/locked" : {
      "put" : {
        "tags" : [ "trembita" ],
        "summary" : "change trembita request lock",
        "operationId" : "change-trembita-request-lock",
        "parameters" : [ {
          "name" : "trembitaRequestId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locked" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "locked" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrembitaRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/files" : {
      "post" : {
        "tags" : [ "files" ],
        "summary" : "upload file",
        "operationId" : "upload-file",
        "parameters" : [ {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "title" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "file" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "files" ],
        "summary" : "get files",
        "operationId" : "get-files",
        "parameters" : [ {
          "name" : "filter[title]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[type]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "maximum" : 3000,
            "example" : 10
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "files" ],
        "summary" : "count files",
        "operationId" : "count-files",
        "parameters" : [ {
          "name" : "filter[title]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[type]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[userId]",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "filter[organizationId]",
          "in" : "query",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "filter[locked]",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "X-Result-Count" : {
                "description" : "Count of entities",
                "schema" : {
                  "type" : "number",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/files/{fileId}" : {
      "patch" : {
        "tags" : [ "files" ],
        "summary" : "update file",
        "operationId" : "update-file",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        }, {
          "name" : "if-match",
          "in" : "header",
          "description" : "Entity version",
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateFile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "files" ],
        "summary" : "delete file",
        "operationId" : "delete-file",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "files" ],
        "summary" : "get file by id",
        "operationId" : "get-file-by-id",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/files/{fileId}/download" : {
      "get" : {
        "tags" : [ "files" ],
        "summary" : "download file",
        "operationId" : "download-file",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/citizens/{citizenId}/files/{fileId}" : {
      "post" : {
        "tags" : [ "files" ],
        "summary" : "attach file to citizen",
        "operationId" : "attach-file-to-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "files" ],
        "summary" : "detach file from citizen",
        "operationId" : "detach-file-from-citizen",
        "parameters" : [ {
          "name" : "citizenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/api/statements/{statementId}/files/{fileId}" : {
      "post" : {
        "tags" : [ "files" ],
        "summary" : "attach file to statement",
        "operationId" : "attach-file-to-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "x-result-include",
          "in" : "header",
          "description" : "Return result of query",
          "schema" : {
            "type" : "boolean"
          },
          "example" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "files" ],
        "summary" : "detach file from statement",
        "operationId" : "detach-file-from-statement",
        "parameters" : [ {
          "name" : "statementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "fileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "BadRequestError"
          },
          "401" : {
            "description" : "AuthorizationError"
          },
          "403" : {
            "description" : "ForbiddenError"
          },
          "404" : {
            "description" : "ResourceNotFoundError"
          },
          "409" : {
            "description" : "ResourceConflictError"
          },
          "412" : {
            "description" : "PreconditionFailedError"
          },
          "413" : {
            "description" : "TooLargeError"
          },
          "422" : {
            "description" : "ValidationError"
          },
          "429" : {
            "description" : "TooManyRequestsError"
          },
          "500" : {
            "description" : "ServerError"
          },
          "501" : {
            "description" : "NotImplementedError"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Sex" : {
        "type" : "string",
        "enum" : [ "ч", "ж" ]
      },
      "CitizenCreationReason" : {
        "type" : "string",
        "enum" : [ "Особиста заява громадянина", "Заява представника за дорученням", "Заява батьків", "Заява законного представника", "Заява представника спеціалізованої соціальної установи", "Заява посадової особи виконавця послуг", "Громадянин є особою, що надає дозвіл на реєстрацію", "Громадянин є представником", "Громадянин є держслужбовцем", "Громадянин є стороною судового спору", "Громадянин є стороною договірних відносин", "Архівна картотека «форма 16»", "Представник інтересів особи, що подає заяву", "Імпортовано з ЦВК", "Імпортовано по даним ЖЕК", "Внесення даних", "Архівна реєстрація" ]
      },
      "MilitaryStatus" : {
        "type" : "string",
        "enum" : [ "не підлягає", "призовник", "військовозобов’язаний", "військовослужбовець", "звільнений", "знятий за віком", "спецоблік" ]
      },
      "NewCitizen" : {
        "type" : "object",
        "properties" : {
          "otgIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "localityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          },
          "citizenship" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "citizenshipAbsenceConfirmed" : {
            "type" : "boolean"
          },
          "creationReason" : {
            "$ref" : "#/components/schemas/CitizenCreationReason"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date-time"
          },
          "countryOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "areaOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "regionOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "placeOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "foreignPlaceOfBirth" : {
            "type" : "string"
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ipn" : {
            "type" : "string"
          },
          "eddrId" : {
            "type" : "string"
          },
          "militaryStatus" : {
            "$ref" : "#/components/schemas/MilitaryStatus"
          },
          "militaryCode" : {
            "type" : "string"
          },
          "militarySpecialty" : {
            "type" : "number"
          },
          "customMilitarySpecialty" : {
            "type" : "string"
          },
          "militaryRank" : {
            "type" : "number"
          },
          "customMilitaryRank" : {
            "type" : "string"
          },
          "militaryCommissariat" : {
            "type" : "number"
          },
          "statusId" : {
            "type" : "number"
          },
          "phone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "otgIds", "localityIds", "creationReason", "dateOfBirth", "countryOfBirth", "statusId", "operator" ]
      },
      "GrammaticalCases" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "nominative" : {
            "type" : "string"
          },
          "genitive" : {
            "type" : "string"
          },
          "dative" : {
            "type" : "string"
          },
          "accusative" : {
            "type" : "string"
          },
          "instrumental" : {
            "type" : "string"
          },
          "locative" : {
            "type" : "string"
          },
          "vocative" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "nominative", "genitive", "dative", "accusative", "instrumental", "locative", "vocative", "locked", "created", "updated", "version" ]
      },
      "ConfigurationFooter" : {
        "type" : "string",
        "enum" : [ "giocKyiv50", "ulead115", "demo" ]
      },
      "ConfigurationHeader" : {
        "type" : "string",
        "enum" : [ "singleLine70", "ulead100" ]
      },
      "Otg" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "title" : {
            "type" : "string"
          },
          "grammaticalCasesId" : {
            "$ref" : "#/components/schemas/GrammaticalCases"
          },
          "logo" : {
            "type" : "string"
          },
          "footer" : {
            "$ref" : "#/components/schemas/ConfigurationFooter"
          },
          "header" : {
            "$ref" : "#/components/schemas/ConfigurationHeader"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "grammaticalCasesId", "locked", "created", "updated", "version" ]
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "codeAlfa2" : {
            "type" : "string"
          },
          "codeAlfa3" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "name", "code", "codeAlfa2", "codeAlfa3", "locked", "version" ]
      },
      "Area" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeFull" : {
            "type" : "string"
          },
          "typeAtFirstPosition" : {
            "type" : "boolean"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          }
        },
        "required" : [ "id", "name", "type", "typeFull", "typeAtFirstPosition", "countryId" ]
      },
      "Region" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeFull" : {
            "type" : "string"
          },
          "typeAtFirstPosition" : {
            "type" : "boolean"
          },
          "areaId" : {
            "$ref" : "#/components/schemas/Area"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          }
        },
        "required" : [ "id", "name", "type", "typeFull", "typeAtFirstPosition", "areaId", "countryId" ]
      },
      "Atuu" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "area" : {
            "type" : "string"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          },
          "areaId" : {
            "$ref" : "#/components/schemas/Area"
          },
          "region" : {
            "type" : "string"
          },
          "regionId" : {
            "$ref" : "#/components/schemas/Region"
          },
          "localCouncil" : {
            "type" : "string"
          },
          "localityName" : {
            "type" : "string"
          },
          "localityShortType" : {
            "type" : "string"
          },
          "localityFullType" : {
            "type" : "string"
          },
          "rank" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "countryId", "localityShortType", "localityFullType" ]
      },
      "DocumentCategory" : {
        "type" : "string",
        "enum" : [ "свідоцтво", "посвідка", "документ про народження", "паспортний документ", "посвідчення", "документ про підтвердження смерті", "нерухомість", "довідка", "довідка (військова частина)", "довіреність", "документ зі спец. закладу", "інші", "internal" ]
      },
      "DocumentType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "category" : {
            "$ref" : "#/components/schemas/DocumentCategory"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "category", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "DocumentPhotoRenewalStatus" : {
        "type" : "string",
        "enum" : [ "RENEWED_AT_25_YEARS", "RENEWED_AT_45_YEARS" ]
      },
      "ActiveDocument" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "documentTypeId" : {
            "$ref" : "#/components/schemas/DocumentType"
          },
          "code" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "photoRenewalStatus" : {
            "$ref" : "#/components/schemas/DocumentPhotoRenewalStatus"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "lastName", "documentTypeId", "isActive", "locked", "created", "updated", "version" ]
      },
      "MilitarySpecialty" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "category", "name", "locked", "created", "updated", "version" ]
      },
      "MilitaryRank" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "category" : {
            "type" : "number"
          },
          "categoryName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "name", "locked", "created", "updated", "version" ]
      },
      "CitizenStatus" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "status" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "status", "locked", "created", "updated", "version" ]
      },
      "File" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "title" : {
            "type" : "string"
          },
          "templateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "bucket" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "type", "userId", "organizationId", "locked", "created", "updated", "version" ]
      },
      "CitizenDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "otgIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Otg"
            }
          },
          "localityIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Atuu"
            }
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          },
          "citizenship" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          },
          "citizenshipAbsenceConfirmed" : {
            "type" : "boolean"
          },
          "creationReason" : {
            "$ref" : "#/components/schemas/CitizenCreationReason"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date-time"
          },
          "countryOfBirth" : {
            "$ref" : "#/components/schemas/Country"
          },
          "areaOfBirth" : {
            "$ref" : "#/components/schemas/Area"
          },
          "regionOfBirth" : {
            "$ref" : "#/components/schemas/Region"
          },
          "placeOfBirth" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "foreignPlaceOfBirth" : {
            "type" : "string"
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ipn" : {
            "type" : "string"
          },
          "eddrId" : {
            "type" : "string"
          },
          "activeDocument" : {
            "$ref" : "#/components/schemas/ActiveDocument"
          },
          "militaryStatus" : {
            "$ref" : "#/components/schemas/MilitaryStatus"
          },
          "militaryCode" : {
            "type" : "string"
          },
          "militarySpecialty" : {
            "$ref" : "#/components/schemas/MilitarySpecialty"
          },
          "customMilitarySpecialty" : {
            "type" : "string"
          },
          "militaryRank" : {
            "$ref" : "#/components/schemas/MilitaryRank"
          },
          "customMilitaryRank" : {
            "type" : "string"
          },
          "militaryCommissariat" : {
            "type" : "number"
          },
          "statusId" : {
            "$ref" : "#/components/schemas/CitizenStatus"
          },
          "phone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "fileIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/File"
            }
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "otgIds", "localityIds", "creationReason", "dateOfBirth", "countryOfBirth", "statusId", "controlled", "operator", "locked", "created", "updated", "version" ]
      },
      "NotarialOperationReason" : {
        "type" : "string",
        "enum" : [ "prepareNotarialAct", "commitNotarialAct", "dfsRegister", "dfsAdministrate", "dfsPrepareRequest", "cksContract", "privateExecutorRequest" ]
      },
      "UpdateCitizen" : {
        "type" : "object",
        "properties" : {
          "otgIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "localityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          },
          "citizenship" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "citizenshipAbsenceConfirmed" : {
            "type" : "boolean"
          },
          "creationReason" : {
            "$ref" : "#/components/schemas/CitizenCreationReason"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date-time"
          },
          "countryOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "areaOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "regionOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "placeOfBirth" : {
            "type" : "string",
            "format" : "uuid"
          },
          "foreignPlaceOfBirth" : {
            "type" : "string"
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ipn" : {
            "type" : "string"
          },
          "eddrId" : {
            "type" : "string"
          },
          "militaryStatus" : {
            "$ref" : "#/components/schemas/MilitaryStatus"
          },
          "militaryCode" : {
            "type" : "string"
          },
          "militarySpecialty" : {
            "type" : "number"
          },
          "customMilitarySpecialty" : {
            "type" : "string"
          },
          "militaryRank" : {
            "type" : "number"
          },
          "customMilitaryRank" : {
            "type" : "string"
          },
          "militaryCommissariat" : {
            "type" : "number"
          },
          "statusId" : {
            "type" : "number"
          },
          "phone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "operator" ]
      },
      "RegistrationType" : {
        "type" : "string",
        "enum" : [ "реєстрація адреси місця проживання", "реєстрація адреси місця перебування", "зняття з реєстрації адреси місця проживання", "зняття з реєстрації адреси місця перебування", "скасування реєстрового запису" ]
      },
      "SubjectType" : {
        "type" : "string",
        "enum" : [ "суб’єкт операції реєстраціїї / зняття з реєстрації", "представник суб’єкта операції", "посадова особа виконавця послуг з управління", "управління/відділ реєстрації актів цивільного стану", "управління/відділ соціального захисту населення", "спеціалізована соціальна установа/заклад" ]
      },
      "StatementMethod" : {
        "type" : "string",
        "enum" : [ "особисто в орган реєстрації", "поштове повідомлення", "кур'єрська служба", "електронне повідомлення", "ЦНАП", "ЦВК", "без подання (архівні дані)", "Е-Малятко" ]
      },
      "ResidenceOwnershipType" : {
        "type" : "string",
        "enum" : [ "власник", "співвласник", "наймач" ]
      },
      "NewStatement" : {
        "type" : "object",
        "properties" : {
          "registrationType" : {
            "$ref" : "#/components/schemas/RegistrationType"
          },
          "notes" : {
            "type" : "string"
          },
          "conclusion" : {
            "type" : "string"
          },
          "subjectType" : {
            "$ref" : "#/components/schemas/SubjectType"
          },
          "method" : {
            "$ref" : "#/components/schemas/StatementMethod"
          },
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentId" : {
            "type" : "number"
          },
          "representatives" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "consents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "dissents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "rejectReason" : {
            "type" : "string"
          },
          "processReason" : {
            "type" : "number"
          },
          "issueCertificate" : {
            "type" : "boolean"
          },
          "reverseOperation" : {
            "type" : "boolean"
          },
          "canceledRegisterRecordId" : {
            "type" : "number"
          },
          "currentResidence" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentBuilding" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentStreet" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentLocality" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentAddress" : {
            "type" : "string"
          },
          "currentResidenceDistrict" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentResidenceCountry" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newAddress" : {
            "type" : "string"
          },
          "newResidence" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newBuilding" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newStreet" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newLocality" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newResidenceDistrict" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newResidenceCountry" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "residenceOwnershipType" : {
            "$ref" : "#/components/schemas/ResidenceOwnershipType"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organization" : {
            "type" : "number"
          }
        },
        "required" : [ "registrationType", "subjectType", "method", "citizenId", "processReason", "issueCertificate", "operator", "organization" ]
      },
      "StatementState" : {
        "type" : "string",
        "enum" : [ "чернетка", "зареєстрована", "виконана", "закрита", "скасована" ]
      },
      "Citizen" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "otgIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Otg"
            }
          },
          "localityIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Atuu"
            }
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          },
          "citizenship" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          },
          "citizenshipAbsenceConfirmed" : {
            "type" : "boolean"
          },
          "creationReason" : {
            "$ref" : "#/components/schemas/CitizenCreationReason"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date-time"
          },
          "countryOfBirth" : {
            "$ref" : "#/components/schemas/Country"
          },
          "areaOfBirth" : {
            "$ref" : "#/components/schemas/Area"
          },
          "regionOfBirth" : {
            "$ref" : "#/components/schemas/Region"
          },
          "placeOfBirth" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "foreignPlaceOfBirth" : {
            "type" : "string"
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ipn" : {
            "type" : "string"
          },
          "eddrId" : {
            "type" : "string"
          },
          "activeDocument" : {
            "$ref" : "#/components/schemas/ActiveDocument"
          },
          "militaryStatus" : {
            "$ref" : "#/components/schemas/MilitaryStatus"
          },
          "militaryCode" : {
            "type" : "string"
          },
          "militarySpecialty" : {
            "$ref" : "#/components/schemas/MilitarySpecialty"
          },
          "customMilitarySpecialty" : {
            "type" : "string"
          },
          "militaryRank" : {
            "$ref" : "#/components/schemas/MilitaryRank"
          },
          "customMilitaryRank" : {
            "type" : "string"
          },
          "militaryCommissariat" : {
            "type" : "number"
          },
          "statusId" : {
            "$ref" : "#/components/schemas/CitizenStatus"
          },
          "phone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "fileIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/File"
            }
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "otgIds", "localityIds", "creationReason", "dateOfBirth", "countryOfBirth", "statusId", "controlled", "operator", "locked", "created", "updated", "version" ]
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "documentTypeId" : {
            "$ref" : "#/components/schemas/DocumentType"
          },
          "code" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "photoRenewalStatus" : {
            "$ref" : "#/components/schemas/DocumentPhotoRenewalStatus"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "firstName", "lastName", "citizenId", "documentTypeId", "isActive", "locked", "created", "updated", "version" ]
      },
      "Representative" : {
        "type" : "object",
        "properties" : {
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "positionId" : {
            "type" : "number"
          }
        },
        "required" : [ "citizenId" ]
      },
      "ProcessReason" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "category" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "category", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "District" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "atuuId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "atuuId", "name", "shortName", "locked", "updated", "version" ]
      },
      "Street" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "region" : {
            "type" : "string"
          },
          "localityName" : {
            "type" : "string"
          },
          "localityShortType" : {
            "type" : "string"
          },
          "localityFullType" : {
            "type" : "string"
          },
          "rank" : {
            "type" : "number"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "districtId" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/District"
            }
          },
          "district" : {
            "type" : "string"
          },
          "streetName" : {
            "type" : "string"
          },
          "streetShortType" : {
            "type" : "string"
          },
          "streetFullType" : {
            "type" : "string"
          },
          "typeBeforeName" : {
            "type" : "boolean"
          },
          "cvkStreetName" : {
            "type" : "string"
          },
          "cvkStreetNameAddType" : {
            "type" : "boolean"
          },
          "linkedStreets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Street"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "marker" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "localityName", "localityShortType", "localityFullType", "localityId", "streetName", "typeBeforeName" ]
      },
      "LinkedBuilding" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "numb" : {
            "type" : "string"
          },
          "nativeNumb" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeShort" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "linkStartType" : {
            "type" : "string"
          },
          "linkEndType" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "localityId", "streetId", "numb", "postcode", "locked", "updated", "version", "linkStartType", "linkEndType" ]
      },
      "Building" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "numb" : {
            "type" : "string"
          },
          "nativeNumb" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeShort" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "linkedBuildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkedBuilding"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "localityId", "streetId", "numb", "postcode", "locked", "updated", "version" ]
      },
      "Residence" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "buildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "type" : {
            "type" : "string"
          },
          "typeShort" : {
            "type" : "string"
          },
          "typeBeforeRoom" : {
            "type" : "boolean"
          },
          "room" : {
            "type" : "string"
          },
          "registrationReason" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "verified" : {
            "type" : "boolean"
          },
          "verifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verifiedBuildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "verifiedStreetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "registrationBuildingIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Building"
            }
          },
          "registrationStreetIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Street"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "isEapResidence" : {
            "type" : "boolean"
          },
          "isInhabitable" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "localityId", "buildingId", "controlled", "locked", "updated", "version", "isEapResidence" ]
      },
      "StatementDocument" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "number"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "deathDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "RegistrationStatus" : {
        "type" : "string",
        "enum" : [ "проживає", "перебуває", "вибув з проживання", "вибув з перебування" ]
      },
      "Statement" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "registrationType" : {
            "$ref" : "#/components/schemas/RegistrationType"
          },
          "state" : {
            "$ref" : "#/components/schemas/StatementState"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organization" : {
            "type" : "number"
          },
          "notes" : {
            "type" : "string"
          },
          "conclusion" : {
            "type" : "string"
          },
          "subjectType" : {
            "$ref" : "#/components/schemas/SubjectType"
          },
          "method" : {
            "$ref" : "#/components/schemas/StatementMethod"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "documentId" : {
            "$ref" : "#/components/schemas/Document"
          },
          "representatives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Representative"
            }
          },
          "consents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "dissents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "rejectReason" : {
            "type" : "string"
          },
          "processReason" : {
            "$ref" : "#/components/schemas/ProcessReason"
          },
          "reason" : {
            "type" : "string"
          },
          "issueCertificate" : {
            "type" : "boolean"
          },
          "reverseOperation" : {
            "type" : "boolean"
          },
          "currentResidence" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "currentBuilding" : {
            "$ref" : "#/components/schemas/Building"
          },
          "currentStreet" : {
            "$ref" : "#/components/schemas/Street"
          },
          "currentLocality" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "currentAddress" : {
            "type" : "string"
          },
          "currentResidenceDistrict" : {
            "$ref" : "#/components/schemas/District"
          },
          "currentResidenceCountry" : {
            "$ref" : "#/components/schemas/Country"
          },
          "newAddress" : {
            "type" : "string"
          },
          "newResidence" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "newBuilding" : {
            "$ref" : "#/components/schemas/Building"
          },
          "newStreet" : {
            "$ref" : "#/components/schemas/Street"
          },
          "newLocality" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "newResidenceDistrict" : {
            "$ref" : "#/components/schemas/District"
          },
          "newResidenceCountry" : {
            "$ref" : "#/components/schemas/Country"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StatementDocument"
            }
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approved" : {
            "type" : "string",
            "format" : "date-time"
          },
          "residenceOwnershipType" : {
            "$ref" : "#/components/schemas/ResidenceOwnershipType"
          },
          "finished" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fileIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/File"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "relatedStatement" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "canceledRegisterRecordId" : {
            "$ref" : "#/components/schemas/RegisterRecord"
          }
        },
        "required" : [ "id", "code", "registrationType", "state", "operator", "organization", "subjectType", "method", "citizenId", "documentId", "processReason", "issueCertificate", "locked", "created", "updated", "version" ]
      },
      "RegisterRecord" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "registrationStatus" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          },
          "residenceId" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "buildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "statementId" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "cancellationStatement" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reason" : {
            "type" : "string"
          },
          "signature" : {
            "type" : "string"
          },
          "signedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "signedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "citizenId", "registrationStatus", "residenceId", "buildingId", "streetId", "localityId", "operator", "statementId", "isActive", "initDate", "created", "updated", "version", "locked" ]
      },
      "StatementDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "registrationType" : {
            "$ref" : "#/components/schemas/RegistrationType"
          },
          "state" : {
            "$ref" : "#/components/schemas/StatementState"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organization" : {
            "type" : "number"
          },
          "notes" : {
            "type" : "string"
          },
          "conclusion" : {
            "type" : "string"
          },
          "subjectType" : {
            "$ref" : "#/components/schemas/SubjectType"
          },
          "method" : {
            "$ref" : "#/components/schemas/StatementMethod"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "documentId" : {
            "$ref" : "#/components/schemas/Document"
          },
          "representatives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Representative"
            }
          },
          "consents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "dissents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "rejectReason" : {
            "type" : "string"
          },
          "processReason" : {
            "$ref" : "#/components/schemas/ProcessReason"
          },
          "reason" : {
            "type" : "string"
          },
          "issueCertificate" : {
            "type" : "boolean"
          },
          "reverseOperation" : {
            "type" : "boolean"
          },
          "currentResidence" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "currentBuilding" : {
            "$ref" : "#/components/schemas/Building"
          },
          "currentStreet" : {
            "$ref" : "#/components/schemas/Street"
          },
          "currentLocality" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "currentAddress" : {
            "type" : "string"
          },
          "currentResidenceDistrict" : {
            "$ref" : "#/components/schemas/District"
          },
          "currentResidenceCountry" : {
            "$ref" : "#/components/schemas/Country"
          },
          "newAddress" : {
            "type" : "string"
          },
          "newResidence" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "newBuilding" : {
            "$ref" : "#/components/schemas/Building"
          },
          "newStreet" : {
            "$ref" : "#/components/schemas/Street"
          },
          "newLocality" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "newResidenceDistrict" : {
            "$ref" : "#/components/schemas/District"
          },
          "newResidenceCountry" : {
            "$ref" : "#/components/schemas/Country"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StatementDocument"
            }
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approved" : {
            "type" : "string",
            "format" : "date-time"
          },
          "residenceOwnershipType" : {
            "$ref" : "#/components/schemas/ResidenceOwnershipType"
          },
          "finished" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fileIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/File"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "relatedStatement" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "canceledRegisterRecordId" : {
            "$ref" : "#/components/schemas/RegisterRecord"
          }
        },
        "required" : [ "id", "code", "registrationType", "state", "operator", "organization", "subjectType", "method", "citizenId", "documentId", "processReason", "issueCertificate", "locked", "created", "updated", "version" ]
      },
      "UpdateStatement" : {
        "type" : "object",
        "properties" : {
          "registrationType" : {
            "$ref" : "#/components/schemas/RegistrationType"
          },
          "notes" : {
            "type" : "string"
          },
          "conclusion" : {
            "type" : "string"
          },
          "subjectType" : {
            "$ref" : "#/components/schemas/SubjectType"
          },
          "method" : {
            "$ref" : "#/components/schemas/StatementMethod"
          },
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "representatives" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "consents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "dissents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "rejectReason" : {
            "type" : "string"
          },
          "processReason" : {
            "type" : "number"
          },
          "reason" : {
            "type" : "string"
          },
          "issueCertificate" : {
            "type" : "boolean"
          },
          "reverseOperation" : {
            "type" : "boolean"
          },
          "currentResidence" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentBuilding" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentStreet" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentLocality" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentAddress" : {
            "type" : "string"
          },
          "currentResidenceDistrict" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currentResidenceCountry" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newAddress" : {
            "type" : "string"
          },
          "newResidence" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newBuilding" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newStreet" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newLocality" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newResidenceDistrict" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newResidenceCountry" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "residenceOwnershipType" : {
            "$ref" : "#/components/schemas/ResidenceOwnershipType"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organization" : {
            "type" : "number"
          }
        },
        "required" : [ "operator", "organization" ]
      },
      "RegisterRecordDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "registrationStatus" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          },
          "residenceId" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "buildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "statementId" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "cancellationStatement" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reason" : {
            "type" : "string"
          },
          "signature" : {
            "type" : "string"
          },
          "signedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "signedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "citizenId", "registrationStatus", "residenceId", "buildingId", "streetId", "localityId", "operator", "statementId", "isActive", "initDate", "created", "updated", "version", "locked" ]
      },
      "RegistrationMigrationRequest" : {
        "type" : "object",
        "properties" : {
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "oldResidenceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "newResidenceId" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "citizenId", "oldResidenceId", "newResidenceId" ]
      },
      "ErrorLog" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "number"
          },
          "backend" : {
            "type" : "boolean"
          },
          "hostname" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "backend", "hostname", "data", "created", "updated", "version" ]
      },
      "Report" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "partOf" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          },
          "processedItems" : {
            "type" : "number"
          },
          "totalItems" : {
            "type" : "number"
          },
          "finished" : {
            "type" : "boolean"
          },
          "filter" : {
            "type" : "object"
          },
          "results" : {
            "type" : "object"
          },
          "error" : {
            "$ref" : "#/components/schemas/ErrorLog"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "type", "processedItems", "totalItems", "finished", "filter", "results", "created", "updated", "version" ]
      },
      "ReportStatusDto" : {
        "type" : "object",
        "properties" : {
          "processedItems" : {
            "type" : "number"
          },
          "totalItems" : {
            "type" : "number"
          },
          "finished" : {
            "type" : "boolean"
          },
          "error" : {
            "$ref" : "#/components/schemas/ErrorLog"
          }
        },
        "required" : [ "processedItems", "totalItems", "finished" ]
      },
      "NewDocument" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentTypeId" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "photoRenewalStatus" : {
            "$ref" : "#/components/schemas/DocumentPhotoRenewalStatus"
          }
        },
        "required" : [ "firstName", "lastName", "citizenId", "documentTypeId", "code" ]
      },
      "DocumentDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "documentTypeId" : {
            "$ref" : "#/components/schemas/DocumentType"
          },
          "code" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "photoRenewalStatus" : {
            "$ref" : "#/components/schemas/DocumentPhotoRenewalStatus"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "firstName", "lastName", "citizenId", "documentTypeId", "isActive", "locked", "created", "updated", "version" ]
      },
      "UpdateDocument" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "documentTypeId" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "photoRenewalStatus" : {
            "$ref" : "#/components/schemas/DocumentPhotoRenewalStatus"
          }
        }
      },
      "NewKinship" : {
        "type" : "object",
        "properties" : {
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "kinshipTypeId" : {
            "type" : "number"
          },
          "targetCitizenId" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "citizenId", "kinshipTypeId", "targetCitizenId" ]
      },
      "KinshipName" : {
        "type" : "string",
        "enum" : [ "бабуся", "батько", "брат", "вітчим", "двоюрідна бабуся", "двоюрідний дід", "дівер", "дідусь", "дочка", "дружина", "дядько", "зовиця", "зять", "мати", "мачуха", "невістка", "онук", "онучата племінниця", "онучатий племінник", "онучка", "падчерка", "пасинок", "племінник", "племінниця", "свекор", "свекруха", "своячка", "сестра", "син", "тесть", "теща", "тітка", "чоловік", "шуряк", "опікун", "підопічний", "підопічна" ]
      },
      "KinshipType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "firstToSecond" : {
            "$ref" : "#/components/schemas/KinshipName"
          },
          "secondToFirst" : {
            "$ref" : "#/components/schemas/KinshipName"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "firstToSecond", "secondToFirst", "locked", "created", "updated", "version" ]
      },
      "KinshipDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "kinshipTypeId" : {
            "$ref" : "#/components/schemas/KinshipType"
          },
          "targetCitizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "citizenId", "kinshipTypeId", "targetCitizenId", "locked", "created", "updated", "version" ]
      },
      "SearchResultType" : {
        "type" : "string",
        "enum" : [ "actual", "history", "incorrect", "all", "exact" ]
      },
      "CountryDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "codeAlfa2" : {
            "type" : "string"
          },
          "codeAlfa3" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "name", "code", "codeAlfa2", "codeAlfa3", "locked", "version" ]
      },
      "AreaDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeFull" : {
            "type" : "string"
          },
          "typeAtFirstPosition" : {
            "type" : "boolean"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          }
        },
        "required" : [ "id", "name", "type", "typeFull", "typeAtFirstPosition", "countryId" ]
      },
      "RegionDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeFull" : {
            "type" : "string"
          },
          "typeAtFirstPosition" : {
            "type" : "boolean"
          },
          "areaId" : {
            "$ref" : "#/components/schemas/Area"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          }
        },
        "required" : [ "id", "name", "type", "typeFull", "typeAtFirstPosition", "areaId", "countryId" ]
      },
      "DistrictDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "atuuId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "atuuId", "name", "shortName", "locked", "updated", "version" ]
      },
      "AtuuDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "area" : {
            "type" : "string"
          },
          "countryId" : {
            "$ref" : "#/components/schemas/Country"
          },
          "areaId" : {
            "$ref" : "#/components/schemas/Area"
          },
          "region" : {
            "type" : "string"
          },
          "regionId" : {
            "$ref" : "#/components/schemas/Region"
          },
          "localCouncil" : {
            "type" : "string"
          },
          "localityName" : {
            "type" : "string"
          },
          "localityShortType" : {
            "type" : "string"
          },
          "localityFullType" : {
            "type" : "string"
          },
          "rank" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "countryId", "localityShortType", "localityFullType" ]
      },
      "StreetDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "region" : {
            "type" : "string"
          },
          "localityName" : {
            "type" : "string"
          },
          "localityShortType" : {
            "type" : "string"
          },
          "localityFullType" : {
            "type" : "string"
          },
          "rank" : {
            "type" : "number"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "districtId" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/District"
            }
          },
          "district" : {
            "type" : "string"
          },
          "streetName" : {
            "type" : "string"
          },
          "streetShortType" : {
            "type" : "string"
          },
          "streetFullType" : {
            "type" : "string"
          },
          "typeBeforeName" : {
            "type" : "boolean"
          },
          "linkedStreets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Street"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "marker" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "localityName", "localityShortType", "localityFullType", "localityId", "streetName", "typeBeforeName" ]
      },
      "BuildingDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "numb" : {
            "type" : "string"
          },
          "nativeNumb" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeShort" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "linkedBuildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkedBuilding"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "localityId", "streetId", "numb", "postcode", "locked", "updated", "version" ]
      },
      "NewResidence" : {
        "type" : "object",
        "properties" : {
          "buildingId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string"
          },
          "room" : {
            "type" : "string"
          },
          "registrationReason" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "verified" : {
            "type" : "boolean"
          },
          "verifiedBuildingId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "verifiedStreetId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "useOwnName" : {
            "type" : "boolean"
          }
        },
        "required" : [ "buildingId", "room" ]
      },
      "ResidenceDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "buildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "type" : {
            "type" : "string"
          },
          "typeShort" : {
            "type" : "string"
          },
          "typeBeforeRoom" : {
            "type" : "boolean"
          },
          "room" : {
            "type" : "string"
          },
          "registrationReason" : {
            "type" : "string"
          },
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          },
          "verified" : {
            "type" : "boolean"
          },
          "verifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verifiedBuildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "verifiedStreetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "registrationBuildingIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Building"
            }
          },
          "registrationStreetIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Street"
            }
          },
          "locked" : {
            "type" : "boolean"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "isEapResidence" : {
            "type" : "boolean"
          },
          "isInhabitable" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "localityId", "buildingId", "controlled", "locked", "updated", "version", "isEapResidence" ]
      },
      "ResidenceTypeDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "rusName" : {
            "type" : "string"
          },
          "rusShortName" : {
            "type" : "string"
          },
          "engName" : {
            "type" : "string"
          },
          "engShortName" : {
            "type" : "string"
          },
          "levelName" : {
            "type" : "string"
          },
          "levelShortName" : {
            "type" : "string"
          },
          "firstPosition" : {
            "type" : "boolean"
          },
          "locked" : {
            "type" : "boolean"
          },
          "isResidence" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "name", "shortName", "locked", "isResidence" ]
      },
      "UpdateResidenceMetadataControl" : {
        "type" : "object",
        "properties" : {
          "controlled" : {
            "type" : "boolean"
          },
          "controlledComment" : {
            "type" : "string"
          }
        },
        "required" : [ "controlled", "controlledComment" ]
      },
      "UpdateResidenceMetadata" : {
        "type" : "object",
        "properties" : {
          "verified" : {
            "type" : "boolean"
          },
          "verifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verifiedBuildingId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "verifiedStreetId" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "verified" ]
      },
      "CitizenStatusDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "status" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "status", "locked", "created", "updated", "version" ]
      },
      "DocumentIssuerDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "DocumentTypeDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "category" : {
            "$ref" : "#/components/schemas/DocumentCategory"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "category", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "KinshipTypeDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "firstToSecond" : {
            "$ref" : "#/components/schemas/KinshipName"
          },
          "secondToFirst" : {
            "$ref" : "#/components/schemas/KinshipName"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "firstToSecond", "secondToFirst", "locked", "created", "updated", "version" ]
      },
      "MilitaryRankDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "category" : {
            "type" : "number"
          },
          "categoryName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "name", "locked", "created", "updated", "version" ]
      },
      "MilitarySpecialtyDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "category", "name", "locked", "created", "updated", "version" ]
      },
      "ProcessReasonDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "category" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "category", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "RejectReasonDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "name", "shortName", "locked", "created", "updated", "version" ]
      },
      "OrganizationCategory" : {
        "type" : "string",
        "enum" : [ "державна", "комерційна", "нотаріальна", "орган місцевого самоврядування", "орган районного самоврядування", "РДА", "ЦНАП", "ДФС", "ОСББ/ЖБК/ВЖ", "соцзахист", "орган реєстрації МПП", "приватні виконавці" ]
      },
      "NewsDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tag" : {
            "type" : "string"
          },
          "targetOrganizations" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "targetOrganizationCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationCategory"
            }
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "visible" : {
            "type" : "boolean"
          },
          "priority" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "title", "description", "publishDate", "userId", "organizationId", "locked", "created", "updated", "version" ]
      },
      "NewTask" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "format" : "uuid"
          },
          "authorOrganization" : {
            "type" : "number"
          },
          "authorComment" : {
            "type" : "string"
          },
          "assignee" : {
            "type" : "string",
            "format" : "uuid"
          },
          "assigneeOrganization" : {
            "type" : "number"
          },
          "data" : {
            "type" : "object"
          }
        },
        "required" : [ "author", "data" ]
      },
      "StatusCode" : {
        "type" : "string",
        "enum" : [ "new", "inProgress", "processed", "canceled", "closed" ]
      },
      "Status" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "$ref" : "#/components/schemas/StatusCode"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "name", "locked", "created", "updated", "version" ]
      },
      "TaskUser" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "id" ]
      },
      "TaskOrganization" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "id" ]
      },
      "TaskDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "author" : {
            "$ref" : "#/components/schemas/TaskUser"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/TaskUser"
          },
          "authorOrganization" : {
            "$ref" : "#/components/schemas/TaskOrganization"
          },
          "assigneeOrganization" : {
            "$ref" : "#/components/schemas/TaskOrganization"
          },
          "authorComment" : {
            "type" : "string"
          },
          "assigneeComment" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "status", "author", "data", "locked", "created", "updated", "version" ]
      },
      "TaskStatusDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "$ref" : "#/components/schemas/StatusCode"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "code", "name", "locked", "created", "updated", "version" ]
      },
      "MovementOrderRecordDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "registrationStatus" : {
            "$ref" : "#/components/schemas/RegistrationStatus"
          },
          "residenceId" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "buildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "streetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "districtId" : {
            "$ref" : "#/components/schemas/District"
          },
          "localityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "operator" : {
            "type" : "string",
            "format" : "uuid"
          },
          "statementId" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "cancellationStatement" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "initDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reason" : {
            "type" : "string"
          },
          "signature" : {
            "type" : "string"
          },
          "signedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "signedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          },
          "citizenId" : {
            "type" : "object"
          }
        },
        "required" : [ "id", "registrationStatus", "residenceId", "buildingId", "streetId", "localityId", "operator", "statementId", "isActive", "initDate", "created", "updated", "version", "locked", "citizenId" ]
      },
      "ActionType" : {
        "type" : "string",
        "enum" : [ "CREATE_CITIZEN", "UPDATE_CITIZEN", "LOCK_CITIZEN", "GET_CITIZEN", "GET_CITIZENS", "GET_CITIZENS_ORDER", "GET_CITIZENS_ORDER_BY_ID", "GET_CITIZENS_MOVEMENT_ORDER", "GET_CITIZENS_MOVEMENT_ORDER_BY_ID", "GET_CITIZENS_MOVEMENT_ORDER_RECORDS", "CREATE_STATEMENT", "GET_STATEMENT", "GET_STATEMENTS", "CHANGE_STATEMENT_STATE", "UPDATE_STATEMENT", "LOCK_STATEMENT", "LOCK_CANCELLATION_STATEMENT", "GET_REGISTER_RECORD", "GET_REGISTRATION_HISTORY_OF_CITIZEN", "CANCEL_REGISTER_RECORD", "CHANGE_REGISTER_RECORD_INIT_DATE", "CREATE_CITIZEN_DOCUMENT", "GET_DOCUMENT", "GET_DOCUMENTS", "LOCK_DOCUMENT", "UPDATE_DOCUMENT", "CREATE_CITIZEN_KINSHIP", "GET_KINSHIP", "DELETE_KINSHIP", "GET_ATUU", "GET_ATUUS", "GET_STREET", "GET_STREETS", "GET_BUILDING", "GET_BUILDINGS", "CREATE_RESIDENCE", "UPDATE_RESIDENCE", "UPDATE_RESIDENCE_CONTROL", "UPDATE_RESIDENCE_VERIFICATION", "DELETE_RESIDENCE", "GET_RESIDENCE", "GET_RESIDENCES", "START_REGISTRATION_STATUS_REPORT", "GET_REGISTRATION_STATUS_REPORT_DATA", "GET_CKS_REGISTER_REPORT", "GET_CKS_RESIDING_REPORT", "GET_CKS_REGISTRATION_STATUS", "GET_FORM_13", "GET_FORM_13_BY_ID", "GET_FORM_14", "GET_FORM_14_BY_ID", "GET_FORM_15", "GET_FORM_15_BY_ID", "GET_FORM_16", "GET_FORM_16_BY_ID", "GET_FORM_17", "GET_FORM_17_BY_ID", "GET_RESIDING_ORDER", "GET_RESIDING_ORDER_BY_ID", "GET_AUDIT_RECORDS", "MIGRATE_REGISTRATIONS", "GET_EXTERNAL_SYSTEM_REGISTRATION_REQUEST", "GET_EXTERNAL_SYSTEM_REGISTRATION_REQUESTS", "CHANGE_EXTERNAL_SYSTEM_REGISTRATION_REQUEST_STATUS", "UPDATE_EXTERNAL_SYSTEM_REGISTRATION_REQUEST", "LOCK_EXTERNAL_SYSTEM_REGISTRATION_REQUEST", "UNLOCK_EXTERNAL_SYSTEM_REGISTRATION_REQUEST", "UPLOAD_FILE", "UPDATE_FILE", "LOCK_FILE", "ATTACH_FILE_TO_CITIZEN", "DETACH_FILE_FROM_CITIZEN", "ATTACH_FILE_TO_STATEMENT", "DETACH_FILE_FROM_STATEMENT" ]
      },
      "AuditRecordDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "action" : {
            "$ref" : "#/components/schemas/ActionType"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organization" : {
            "type" : "number"
          },
          "description" : {
            "type" : "object"
          },
          "actionTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalUser" : {
            "type" : "string"
          },
          "externalOrganization" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "required" : [ "id", "action", "actionTime" ]
      },
      "AuditActionDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ActionType"
          },
          "description" : {
            "type" : "string"
          },
          "nameUa" : {
            "type" : "string"
          },
          "keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "id" ]
      },
      "NewErrorLog" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "number"
          },
          "backend" : {
            "type" : "boolean"
          },
          "hostname" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          }
        },
        "required" : [ "backend", "hostname", "data" ]
      },
      "ErrorLogDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "code" : {
            "type" : "number"
          },
          "backend" : {
            "type" : "boolean"
          },
          "hostname" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "backend", "hostname", "data", "created", "updated", "version" ]
      },
      "OrganizationUnit" : {
        "type" : "string",
        "enum" : [ "центральний орган влади", "головне управління", "управління", "відділ", "районний відділ", "обласний комісаріат", "міський військкомісаріат", "районний в місті комісаріат", "ОСББ", "ЖБК", "Відомче житло" ]
      },
      "OrganizationDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/OrganizationCategory"
          },
          "organizationUnit" : {
            "$ref" : "#/components/schemas/OrganizationUnit"
          },
          "districtIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/District"
            }
          },
          "localityIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Atuu"
            }
          },
          "otgId" : {
            "$ref" : "#/components/schemas/Otg"
          },
          "primaryLocality" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "actualAddress" : {
            "type" : "string"
          },
          "legalAddress" : {
            "type" : "string"
          },
          "mailingAddress" : {
            "type" : "string"
          },
          "phones" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string"
          },
          "notificationEmail" : {
            "type" : "string"
          },
          "edrpou" : {
            "type" : "string"
          },
          "stamp" : {
            "type" : "string"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          },
          "subordination" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "name", "shortName", "category", "organizationUnit", "localityIds", "otgId", "primaryLocality", "actualAddress", "legalAddress", "mailingAddress", "created", "updated", "version" ]
      },
      "TrembitaStatus" : {
        "type" : "string",
        "enum" : [ "new", "accepted", "declined" ]
      },
      "TrembitaRequestDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          },
          "normalizedData" : {
            "type" : "object"
          },
          "xRoadInstance" : {
            "type" : "string"
          },
          "memberClass" : {
            "type" : "string"
          },
          "memberCode" : {
            "type" : "string"
          },
          "subsystemCode" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/TrembitaStatus"
          },
          "note" : {
            "type" : "string"
          },
          "citizenId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "statementId" : {
            "$ref" : "#/components/schemas/Statement"
          },
          "registerRecordId" : {
            "$ref" : "#/components/schemas/RegisterRecord"
          },
          "isMotherAddress" : {
            "type" : "boolean"
          },
          "motherId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "motherResidenceId" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "motherBuildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "motherStreetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "motherDistrictId" : {
            "$ref" : "#/components/schemas/District"
          },
          "motherLocalityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "motherCountryId" : {
            "$ref" : "#/components/schemas/Country"
          },
          "fatherId" : {
            "$ref" : "#/components/schemas/Citizen"
          },
          "fatherResidenceId" : {
            "$ref" : "#/components/schemas/Residence"
          },
          "fatherBuildingId" : {
            "$ref" : "#/components/schemas/Building"
          },
          "fatherStreetId" : {
            "$ref" : "#/components/schemas/Street"
          },
          "fatherDistrictId" : {
            "$ref" : "#/components/schemas/District"
          },
          "fatherLocalityId" : {
            "$ref" : "#/components/schemas/Atuu"
          },
          "fatherCountryId" : {
            "$ref" : "#/components/schemas/Country"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          },
          "locked" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "data", "status", "locked", "created", "updated", "version" ]
      },
      "UpdateTrembitaRequest" : {
        "type" : "object",
        "properties" : {
          "citizenId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "statementId" : {
            "type" : "number"
          },
          "registerRecordId" : {
            "type" : "number"
          },
          "motherId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherResidenceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherBuildingId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherStreetId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherDistrictId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherLocalityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "motherCountryId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherResidenceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherBuildingId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherStreetId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherDistrictId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherLocalityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fatherCountryId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          }
        }
      },
      "UpdateFile" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "organizationId" : {
            "type" : "number"
          }
        },
        "required" : [ "userId", "organizationId" ]
      }
    },
    "responses" : { },
    "parameters" : {
      "include" : {
        "name" : "include",
        "in" : "query",
        "description" : "field1,field2.subfield,field3",
        "schema" : {
          "type" : "string"
        }
      },
      "sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "field1,-field2,field3",
        "schema" : {
          "type" : "string"
        }
      }
    },
    "examples" : { },
    "requestBodies" : { },
    "headers" : { },
    "securitySchemes" : {
      "auth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "links" : { },
    "callbacks" : { }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/HnennyyAndryy/RTG-Registry/5.101.0"
  } ]
}