penapi: 3.0.1
info:
  title: Sénèque Pricer API
  description: |
    API provided by Sénèque to get optical prices.
    Query parameters are passed as deepObject (See https://swagger.io/docs/specification/serialization/)
  version: "1-oas3"
servers:
- url: https://pricer.seneque.io/
security:
- ApiKeyAuth: []
paths:
  /v1/dental-price:
    get:
      x-swagger-router-controller: Default
      operationId: dentalpriceGET
      description: Get the price for a dental act
      parameters:
      - name: actCode
        in: query
        description: The act code
        required: true
        schema:
          type: string
          enum:
          - HBLD031
          - HBLD035
          - HBLD047
          - HBLD075
          - HBLD131
          - HBLD227
          - HBLD332
          - HBLD403
          - HBLD418
          - HBLD425
          - HBLD452
          - HBLD470
          - HBLD474
          - HBLD734
          - TO 90
          - VIS+PILIER
          - HBLD038
          - HBLD073
          - HBLD491
          - HBLD634
          - HBBD004
          - HBFD008
          - HBFD033
          - HBFD035
          - HBGD036
          - HBJD001
          - HBMD049
          - HBMD050
          - HBQK002
          - HBLD079
          - HBLD083
          - HBLD101
          - HBLD138
          - HBLD203
          - HBLD349
          - HBLD370
          - HBLD785
          - C
        examples:
          HBLD038:
            summary: Pose d'une couronne dentaire dentoportée en alliage non précieux
            value: HBLD038
          HBJD001:
            summary: Détartrage et polissage des dents
            value: HBJD001

      - name: location
        in: query
        description: |
          `zipcode` (code postal) or latitude and longitude `coordinates` to be used for future pricing.
          Not used at the moment.
        required: true
        style: deepObject
        explode: false
        schema:
          $ref: '#/components/schemas/location'
        examples:
          latlngParis:
            summary: The latitude and longitude of Paris.
            value: location[coordinates][lat]=48.8589506&location[coordinates][lng]=2.2768486
          zipcodeParis:
            summary: The zipcode of Paris 12ème.
            value: location[zipcode]=75012
          latlngBayonne:
            summary: The latitude and longitude of Bayonne.
            value: location[coordinates][lat]=43.4844564&location[coordinates][lng]=-1.4961698

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  price:
                    type: integer
                    description: Sénèque estimated price for the health act (€ VAT incl)
                    format: int32
                additionalProperties: false
                example:
                  price: 103

        "404":
          description: The price could not be found
          content:
            application/json:
              schema:
                x-content-type: application/json
              examples:
                zipcodeNotFound:
                  summary: The zipcode could not be found in the geocoding DB
                  value:
                    code: "ZIPCODE_NOT_FOUND"
                    message: "Invalid zipcode: 00000"
                priceNotFound:
                  summary: No price found for the given params
                  value:
                    code: "PRICE_NOT_FOUND"
                    message: "No price could be found for zipcode 00000 and actCode XXXXX"

        default:
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
              example: {}

  /v1/health-price:
    get:
      x-swagger-router-controller: Default
      operationId: healthpriceGET
      description: Get the price for a health act
      parameters:
      - name: actCode
        in: query
        description: The act code
        required: true
        schema:
          type: string
        examples:
          C:
            summary: Consultation au cabinet
            value: C
          TC:
            summary: Consultation à distance réalisée entre un médecin spécialiste et un patient (téléconsultation)
            value: TC

      - name: location
        in: query
        description: |
          `zipcode` (code postal) or latitude and longitude `coordinates` to be used for future pricing.
          Not used at the moment.
        required: true
        style: deepObject
        explode: false
        schema:
          $ref: '#/components/schemas/location'
        examples:
          latlngParis:
            summary: The latitude and longitude of Paris.
            value: location[coordinates][lat]=48.8589506&location[coordinates][lng]=2.2768486
          zipcodeParis:
            summary: The zipcode of Paris 12ème.
            value: location[zipcode]=75012
          latlngBayonne:
            summary: The latitude and longitude of Bayonne.
            value: location[coordinates][lat]=43.4844564&location[coordinates][lng]=-1.4961698

      - name: convention
        in: query
        description: The convention for the price
        required: true
        style: deepObject
        explode: false
        schema:
          type: string
          enum:
            - Secteur 1
            - Secteur 2
        examples:
          secteur1:
            description: Professionnel de santé conventionné secteur 1
            value: Secteur 1
          secteur2:
            description: Professionnel de santé conventionné secteur 2 / OPTAM
            value: Secteur 2

      - name: speciality
        in: query
        description: The speciality for the price
        required: true
        style: deepObject
        explode: false
        schema:
          type: integer
          enum:
            - 6
            - 18
            - 22
            - 23
            - 33
            - 35
            - 45
            - 53
            - 56
            - 59
            - 60
            - 64
            - 65
            - 70
        examples:
          cardiologue:
            summary: cardiologue
            value: 6
          chirurgien-dentiste:
            summary: chirurgien-dentiste
            value: 18
          Ddermatologue et vénérologue:
            summary: Ddermatologue et vénérologue
            value: 22
          Endocrinologue-diabétologue:
            summary: Endocrinologue-diabétologue
            value: 23
          Gastro-entérologue et hépatologue:
            summary: Gastro-entérologue et hépatologue
            value: 33
          Gynécologue:
            summary: Gynécologue
            value: 35
          Médecin généraliste:
            summary: Médecin généraliste
            value: 45
          Neurologue:
            summary: Neurologue
            value: 53
          Ophtalmologue:
            summary: Ophtalmologue
            value: 56
          ORL:
            summary: ORL
            value: 59
          Pédiatre:
            summary: Pédiatre
            value: 60
          Pneumologue:
            summary: Pneumologue
            value: 64
          Psychiatre:
            summary: Psychiatre
            value: 65
          Rhumatologue:
            summary: Rhumatologue
            value: 70

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  price:
                    type: integer
                    description: Sénèque estimated price for the health act (€ VAT incl)
                    format: int32
                additionalProperties: false
                example:
                  price: 103

        "404":
          description: The price could not be found
          content:
            application/json:
              schema:
                x-content-type: application/json
              examples:
                zipcodeNotFound:
                  summary: The zipcode could not be found in the geocoding DB
                  value:
                    code: "ZIPCODE_NOT_FOUND"
                    message: "Invalid zipcode: 00000"
                priceNotFound:
                  summary: No price found for the given params
                  value:
                    code: "PRICE_NOT_FOUND"
                    message: "No price could be found for zipcode 00000, actCode XXXXX, convention XXXXX and speciality XXXXX"

        default:
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
              example: {}

  /v1/optical-price:
    get:
      operationId: opticalpriceGET
      parameters:
      - name: location
        in: query
        description: |
          `zipcode` (code postal) or latitude and longitude `coordinates` to be used for future pricing.
          Not used at the moment.
        required: true
        style: deepObject
        explode: false
        schema:
          $ref: '#/components/schemas/location'
        examples:
          latlngParis:
            summary: The latitude and longitude of Paris.
            value: location[coordinates][lat]=48.8589506&location[coordinates][lng]=2.2768486
          zipcodeParis:
            summary: The zipcode of Paris 12ème.
            value: location[zipcode]=75012
          latlngBayonne:
            summary: The latitude and longitude of Bayonne.
            value: location[coordinates][lat]=43.4844564&location[coordinates][lng]=-1.4961698

      - name: lens
        in: query
        description: |
          The lens information.
          Must contain either the lens' `index` or the lens' `correction` information.
        required: true
        explode: true
        examples:
          with_index:
            summary: Specifying the lens' index
            value: lens[index]=1.5
          with_correcion:
            summary: Specifying the lens' correction
            value: lens[correction][left][sphere]=-1&lens[correction][left][cylinder]=0.25&lens[correction][left][axis]=120&lens[correction][right][sphere]=-1.25&lens[correction][right][cylinder]=1.25&lens[correction][right][axis]=110
          index_with_all_options:
            summary: Specifying the lens' index with all options applied
            value: lens[index]=1.5&lens[options][madeInFrance]&lens[options][blueLight]&lens[options][photochromic]&lens[options][uvProof]&lens[options][gradient]&lens[options][polarized]
          index_with_progressive_focal:
            summary: Specifying the lens' index with a progressive focal
            value: lens[index]=1.5&lens[progressiveFocal]

        schema:
          type: object
          additionalProperties: false
          properties:
            progressiveFocal:
              $ref: '#/components/schemas/lens_progressive_focal'

            index:
              $ref: '#/components/schemas/lens_index'

            correction:
              $ref: '#/components/schemas/lens_correction'

            options:
              $ref: '#/components/schemas/lens_options'

      - name: frame
        in: query
        description: The frame information.
        required: false
        examples:
          fullrim:
            summary: Full rim frame
            value: frame[rim]=fullrim
          halfrim:
            summary: Half rim frame
            value: frame[rim]=halfrim
          rimless:
            summary: Rimless frame
            value: frame[rim]=rimless
        schema:
          type: object
          additionalProperties: false
          properties:
            rim:
              $ref: '#/components/schemas/frame_rim'

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  lens:
                    type: object
                    properties:
                      left:
                        properties:
                          minPrice:
                            type: integer
                            minimum: 80
                            maximum: 514
                            description: Sénèque estimated min price for a single lense (€ VAT incl)
                            format: int32
                          maxPrice:
                            type: integer
                            minimum: 80
                            maximum: 514
                            description: Sénèque estimated max price for a single lense (€ VAT incl)
                            format: int32
                      right:
                        properties:
                          minPrice:
                            type: integer
                            minimum: 80
                            maximum: 514
                            description: Sénèque estimated min price for a single lense (€ VAT incl)
                            format: int32
                          maxPrice:
                            type: integer
                            minimum: 80
                            maximum: 514
                            description: Sénèque estimated max price for a single lense (€ VAT incl)
                            format: int32
                      pairingPrice:
                        type: integer
                        enum:
                          - 0
                          - 5
                          - 10
                        description: Pairing price for the spectacle lenses (€ VAT incl)
                        format: int32
                additionalProperties: false
              example:
                lens:
                  left:
                    minPrice: 103
                    maxPrice: 341
                  right:
                    minPrice: 120
                    maxPrice: 441
                  pairingPrice: 5

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                x-content-type: application/json
              examples:
                missing_location:
                  summary: "Missing location parameter"
                  value:
                    code: "REQUIRED"
                    message: "Request validation failed: Parameter (location) is required"
                missing_lens:
                  summary: "Missing lens parameter"
                  value:
                    code: "REQUIRED"
                    message: "Request validation failed: Parameter (lens) is required"
                bad_lens_index:
                  summary: "Bad lens[index]"
                  value:
                    code: "SCHEMA_VALIDATION_FAILED"
                    message: "Request validation failed: Parameter (lens) failed schema validation"
                    errors:
                    - code: "ENUM_MISMATCH"
                      message: "No enum match for: 1.4"
                      path: "lens.index"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                x-content-type: application/json
              example:
                code: "UNAUTHENTICATED"
                message: "Wrong authentication credentials"
        default:
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
              example: {}
      x-swagger-router-controller: Default

components:
  schemas:
    location:
      type: object
      properties:
        zipcode:
          maxLength: 5
          pattern: ^\d{5}$
          type: string
          description: |
            The zipcode to be used for pricing.
            Mutually exclusive with `coordinates`.
        coordinates:
          $ref: '#/components/schemas/location_coordinates'
      additionalProperties: false
    optical_price_eye:
      type: object
      additionalProperties: false
      description: The correction for the left eye
      properties:
        axis:
          type: string
          description: The axis correction
          enum:
          - "0"
          - "5"
          - "10"
          - "15"
          - "20"
          - "25"
          - "30"
          - "35"
          - "40"
          - "45"
          - "50"
          - "55"
          - "60"
          - "65"
          - "70"
          - "75"
          - "80"
          - "85"
          - "90"
          - "95"
          - "100"
          - "105"
          - "110"
          - "115"
          - "120"
          - "125"
          - "130"
          - "135"
          - "140"
          - "145"
          - "150"
          - "155"
          - "160"
          - "165"
          - "170"
          - "175"
          - "180"
        sphere:
          type: string
          description: The sphere correction
          enum:
          - "-6"
          - "-5.75"
          - "-5.5"
          - "-5.25"
          - "-5"
          - "-4.75"
          - "-4.5"
          - "-4.25"
          - "-4"
          - "-3.75"
          - "-3.5"
          - "-3.25"
          - "-3"
          - "-2.75"
          - "-2.5"
          - "-2.25"
          - "-2"
          - "-1.75"
          - "-1.5"
          - "-1.25"
          - "-1"
          - "-0.75"
          - "-0.5"
          - "-0.25"
          - "0"
          - "0.25"
          - "0.5"
          - "0.75"
          - "1"
          - "1.25"
          - "1.5"
          - "1.75"
          - "2"
          - "2.25"
          - "2.5"
          - "2.75"
          - "3"
          - "3.25"
          - "3.5"
          - "3.75"
          - "4"
          - "4.25"
          - "4.5"
          - "4.75"
          - "5"
          - "5.25"
          - "5.5"
          - "5.75"
          - "6"
        cylinder:
          type: string
          description: The cylinder correction
          enum:
          - "-4"
          - "-3.75"
          - "-3.5"
          - "-3.25"
          - "-3"
          - "-2.75"
          - "-2.5"
          - "-2.25"
          - "-2"
          - "-1.75"
          - "-1.5"
          - "-1.25"
          - "-1"
          - "-0.75"
          - "-0.5"
          - "-0.25"
          - "0"
          - "0.25"
          - "0.5"
          - "0.75"
          - "1"
          - "1.25"
          - "1.5"
          - "1.75"
          - "2"
          - "2.25"
          - "2.5"
          - "2.75"
          - "3"
          - "3.25"
          - "3.5"
          - "3.75"
          - "4"
        add:
          type: string
          description: The progressive additional magnifying
          enum:
          - "-4"
          - "-3.75"
          - "-3.5"
          - "-3.25"
          - "-3"
          - "-2.75"
          - "-2.5"
          - "-2.25"
          - "-2"
          - "-1.75"
          - "-1.5"
          - "-1.25"
          - "-1"
          - "-0.75"
          - "-0.5"
          - "-0.25"
          - "0"
          - "0.25"
          - "0.5"
          - "0.75"
          - "1"
          - "1.25"
          - "1.5"
          - "1.75"
          - "2"
          - "2.25"
          - "2.5"
          - "2.75"
          - "3"
          - "3.25"
          - "3.5"
          - "3.75"
          - "4"

    lens_progressive_focal:
      description: If present, the lens' focal is progressive.
      type: string
      pattern: ^$
      minLength: 0
      maxLength: 0

    lens_index:
      description: |
        The index of the glass.
        Mutually exclusive with `lens[correction]`.
      type: string
      enum:
      - "1.5"
      - "1.6"
      - "1.67"

    lens_correction:
      description: |
        The lens correction values from the prescription.
        Mutually exclusive with `lens[index]`.
      type: object
      properties:
        left:
          $ref: '#/components/schemas/optical_price_eye'
        right:
          $ref: '#/components/schemas/optical_price_eye'
      additionalProperties: false

    lens_options:
      description: The lens' options
      type: object
      additionalProperties: false
      properties:
        madeInFrance:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        blueLight:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        photochromic:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        uvProof:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        gradient:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        polarized:
          type: string
          pattern: ^$
          minLength: 0
          maxLength: 0
        geometry:
          type: string
          enum:
            - classic
            - evolved
            - personalized

    frame_rim:
      description: The type of rim used for the frame.
      type: string
      enum:
        - "fullrim"
        - "halfrim"
        - "rimless"

    location_coordinates:
      type: object
      additionalProperties: false
      properties:
        lat:
          type: string
          pattern: ^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$
          maxLength: 10
        lng:
          type: string
          pattern: ^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$
          maxLength: 10
      description: |
        The lat and lng coordinates to be used for pricing. Mutually exclusive with `zipcode`.
  securitySchemes:
    ApiKeyAuth:
      description: "Each request must be authenticated with the X-API-KEY header containing the proper value"
      type: apiKey
      name: X-API-KEY
      in: header