openapi: 3.0.0
info:
  title: Text-box list service API
  version: 0.5.0
servers:
  - url: '{schema}://localhost/list-service'
    description: OpenApi parameters
    variables:
      schema:
        enum:
          - https
          - http
        default: http
paths:
  '/api/{userRole}/{userId}/lists':
    get:
      tags:
        - Lists
      summary: Get lists
      description: 'Get lists:<ul><li>user can see only his lists</li><li>admin gets all lists</li></ul>'
      operationId: 'App\Http\Controllers\ListController::index'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list':
    post:
      tags:
        - Lists
      summary: Store list
      description: Store list
      operationId: 'App\Http\Controllers\ListController::store'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: List name
                  type: string
              type: object
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}':
    get:
      tags:
        - Lists
      summary: Get list by ID
      description: Get list by ID
      operationId: 'App\Http\Controllers\ListController::show'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
    put:
      tags:
        - Lists
      summary: Update list
      description: Update list
      operationId: 'App\Http\Controllers\ListController::update'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: List name
                  type: string
              type: object
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{lsitId}':
    delete:
      tags:
        - Lists
      summary: Delete list
      description: Delete list
      operationId: 'App\Http\Controllers\ListController::destroy'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list-file-fields':
    get:
      tags:
        - Lists
      summary: Retun array of file fields for mapping
      description: Retun array of file fields for mapping
      operationId: 'App\Http\Controllers\ListController::listFileFields'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/with-phones':
    get:
      tags:
        - Lists
      summary: Get list by ID with phones
      description: Get list by ID with phones
      operationId: 'App\Http\Controllers\ListController::showWithPhones'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{id}/only-phones':
    get:
      tags:
        - Lists
      summary: Get phones by list id
      description: Get phones by list id
      operationId: 'App\Http\Controllers\ListController::showPhonesByListId'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/files':
    get:
      tags:
        - ListFiles
      summary: Get imported files for list
      description: Get all imported files with statuses for list
      operationId: 'App\Http\Controllers\ListFileController::index'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file':
    post:
      tags:
        - ListFiles
      summary: Import file into list
      description: Import file into list
      operationId: 'App\Http\Controllers\ListFileController::store'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      requestBody:
        description: Input data format
        content:
          multipart/form-data:
            schema:
              allOf:
                - required:
                    - importFile
                  properties:
                    importFile:
                      description: Import file
                      type: string
                      format: binary
                    hlr_check:
                      description: Enable/disable HLR check for uploaded CSV data
                      type: boolean
                    fields_map:
                      description: Array of document fields
                      type: array
                      items:
                        type: string
                      example: '[''name'', ''phone'', ''ignore'', ...]'
                  type: object
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file/{fileId}':
    get:
      tags:
        - ListFiles
      summary: Get imported file datail report
      description: Get imported file datail report
      operationId: 'App\Http\Controllers\ListFileController::show'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
    delete:
      tags:
        - ListFiles
      summary: Delete imported file
      description: Delete imported file
      operationId: 'App\Http\Controllers\ListFileController::destroy'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file/{fileId}/cancel-import':
    get:
      tags:
        - ListFiles
      summary: Cancel file import
      description: Cancel file import
      operationId: 'App\Http\Controllers\ListFileController::cancel'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file/{fileId}/run-hlr-check':
    get:
      tags:
        - ListFiles
      summary: Run HLR check for this file
      description: Run HLR check for this file
      operationId: 'App\Http\Controllers\ListFileController::runHLRCheck'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file/{fileId}/skip-hlr-check':
    get:
      tags:
        - ListFiles
      summary: Skip/Cancel HLR check for this file
      description: Skip/Cancel HLR check for this file
      operationId: 'App\Http\Controllers\ListFileController::skipHLRCheck'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/file/{fileId}/export-report-csv':
    post:
      tags:
        - ListFiles
      summary: Export file import report by type
      description: Export file import report by type
      operationId: 'App\Http\Controllers\ListFileController::exportReportCSV'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/fileId'
        - name: report_type
          in: query
          description: Report type
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                report_type:
                  description: 'Report type '
                  type: string
              type: object
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/phones':
    get:
      tags:
        - ListPhones
      summary: Get phones for list
      description: Get phones for list
      operationId: 'App\Http\Controllers\ListPhoneController::index'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  '/api/{userRole}/{userId}/list/{listId}/phone/{phoneId}':
    get:
      tags:
        - ListPhones
      summary: Get phone infomation
      description: Get phone infomation
      operationId: 'App\Http\Controllers\ListPhoneController::show'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/phoneId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
    put:
      tags:
        - ListPhones
      summary: Update phone
      description: Update phone
      operationId: 'App\Http\Controllers\ListPhoneController::update'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/phoneId'
        - name: phone
          in: query
          description: phone
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
    delete:
      tags:
        - ListPhones
      summary: Remove phone from list
      description: Remove phone from list
      operationId: 'App\Http\Controllers\ListPhoneController::destroy'
      parameters:
        - $ref: '#/components/parameters/userRole'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/phoneId'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Permission Denied
  /api:
    get:
      tags:
        - Test connection
      summary: Test connection
      description: Home page
      operationId: 'App\Http\Controllers\SystemController::index'
      responses:
        '200':
          description: successful operation
components:
  parameters:
    listId:
      name: listId
      in: path
      description: List Id
      required: true
      style: simple
      schema:
        type: integer
    fileId:
      name: fileId
      in: path
      description: File Id
      required: true
      style: simple
      schema:
        type: integer
    phoneId:
      name: phoneId
      in: path
      description: Phone Id
      required: true
      style: simple
      schema:
        type: integer
    userRole:
      name: userRole
      in: path
      description: Authorize user role
      required: true
      style: simple
      schema:
        type: string
    userId:
      name: userId
      in: path
      description: Authorize user id
      required: true
      style: simple
      schema:
        type: integer
