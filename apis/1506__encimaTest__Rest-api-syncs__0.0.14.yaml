openapi: 3.0.0
info:
  title: REST-API
  description: Collection for rest-api calls
  contact: {}
  version: "0.0.14"
servers:
  - description: Yzewyn testomgeving
    url: 'https://yzewyn.staging.marcando.be/rest/api'
paths:
  /contactpersons: 
    get:
      tags:
        - ContactPerson
      summary: Get all contactpersons
      description: Get the export of all syncable contactpersons
      operationId: ContactPersonExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactPersons"
      deprecated: false
  /contactpersons/{id}/ :
    get:
      tags:
        - ContactPerson
      summary: Get single contactperson
      description: Get the export of a specific contactperson by id.
      operationId: SingleContactPersonExport
      parameters:
        - name: id
          in: path
          description: Id of the contactperson
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Contactperson object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactPerson"
      deprecated: false
  /contactpersons/count : 
    get:
      tags: 
        - ContactPerson
      summary: Count syncable contactpersons
      description: Get the full count of syncable contactpersons with or without date.
      operationId: ContactPersonCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"  
  /customers: 
    get:
      tags:
        - Customer
      summary: Get all customers
      description: Get the export of all syncable customers
      operationId: CustomerExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
      deprecated: false
  /customers/{id}/ :
    get:
      tags:
        - Customer
      summary: Get single customer
      description: Get the export of a specific customer by id.
      operationId: SingleCustomerExport
      parameters:
        - name: id
          in: path
          description: Id of the customer
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Customer object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
      deprecated: false
  /customers/count : 
    get:
      tags: 
        - Customer
      summary: Count syncable customer
      description: Get the full count of syncable customers with or without date.
      operationId: CustomerCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"  
  /addresses: 
    get:
      tags:
        - Address
      summary: Get all addresses for customers
      description: Get the export of all syncable adresses
      operationId: AddressExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Addresses"
      deprecated: false
  /customeraddresses/{customerId}: 
    get:
      tags:
        - Address
      summary: Get all addresses for a customer
      description: Get the export of all syncable adresses of 1 customer
      operationId: CustomerAddressExport
      parameters: 
        - name: customerId
          in: path
          description: The id of the customer
          required: true
          style: simple
          explode: true
          schema:
            type: string
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Addresses"
      deprecated: false
  /addresses/{id}/ :
    get:
      tags:
        - Address
      summary: Get single customeraddress
      description: Get the export of a specific customeraddress by id.
      operationId: SingleAddressExport
      parameters:
        - name: id
          in: path
          description: Id of the address
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Address object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
      deprecated: false
  /addresses/count : 
    get:
      tags: 
        - Address
      summary: Count syncable addresses
      description: Get the full count of syncable addresses with or without date.
      operationId: AddressCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /articles: 
    get:
      tags:
        - Article
      summary: Get all articles
      description: Get the export of all syncable articles
      operationId: ArticleExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
      deprecated: false
  /articles/{id}/ :
    get:
      tags:
        - Article
      summary: Get single article
      description: Get the export of a specific article by id.
      operationId: SingleArticleExport
      parameters:
        - name: id
          in: path
          description: Id of the article
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Article object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
      deprecated: false
  /articles/count : 
    get:
      tags: 
        - Article
      summary: Count syncable articles
      description: Get the full count of syncable articles with or without date.
      operationId: ArticleCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /categories: 
    get:
      tags:
        - Category
      summary: Get all categories
      description: Get the export of all syncable categories
      operationId: CategoryExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categories"
      deprecated: false
  /categories/{id}/ :
    get:
      tags:
        - Category
      summary: Get single category
      description: Get the export of a specific category by id.
      operationId: SingleCategoryExport
      parameters:
        - name: id
          in: path
          description: Id of the category
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Category object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
      deprecated: false
  /categories/count : 
    get:
      tags: 
        - Category
      summary: Count syncable categories
      description: Get the full count of syncable categories with or without date.
      operationId: CategoryCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /prices: 
    get:
      tags:
        - Price
      summary: Get all prices
      description: Get the export of all syncable prices
      operationId: PriceExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prices"
      deprecated: false
  /prices/{id}/ :
    get:
      tags:
        - Price
      summary: Get single price
      description: Get the export of a specific price by id.
      operationId: SinglePriceExport
      parameters:
        - name: id
          in: path
          description: Id of the price
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Price object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Price"
      deprecated: false
  /prices/count : 
    get:
      tags: 
        - Price
      summary: Count syncable prices
      description: Get the full count of syncable prices with or without date.
      operationId: PriceCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /units: 
    get:
      tags:
        - Unit
      summary: Get all units
      description: Get the export of all syncable units
      operationId: UnitExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Units"
      deprecated: false
  /units/{id}/ :
    get:
      tags:
        - Unit
      summary: Get single unit
      description: Get the export of a specific stock by id.
      operationId: SingleUnitExport
      parameters:
        - name: id
          in: path
          description: Id of the unit
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Unit object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
      deprecated: false
  /units/count : 
    get:
      tags: 
        - Unit
      summary: Count syncable units
      description: Get the full count of syncable units with or without date.
      operationId: UnitCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /stocks: 
    get:
      tags: 
        - Stock
      summary: Get all stocks
      description: Get all the stock objects on articles.
      operationId: StockExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
  /stocks/{id}/: 
    get:
      tags:
        - Stock
      summary: Get single stock
      description: Get the export of a specific stock by the id.
      operationId: SingleStockExport
      parameters:
        - name: id
          in: path
          description: Id of the stock
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Stock object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stock"
      deprecated: false
  /stocks/count:
    get:
      tags: 
        - Stock
      summary: Count syncable stocks
      description: Get the full count of syncable stocks with or without date.
      operationId: StockCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /stockrooms: 
    get:
      tags: 
        - StockRoom
      summary: Get all stockrooms
      description: Get all the stockrooms objects.
      operationId: StockRoomExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRooms'
  /stockrooms/{id}/: 
    get:
      tags:
        - StockRoom
      summary: Get single stockroom
      description: Get the export of a specific stockroom by the id.
      operationId: SingleStockRoomExport
      parameters:
        - name: id
          in: path
          description: Id of the stockroom
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Stockroom object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockRoom"
      deprecated: false
  /stockrooms/count:
    get:
      tags: 
        - StockRoom
      summary: Count syncable stockrooms
      description: Get the full count of syncable stockrooms with or without date.
      operationId: StockRoomCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /branches: 
    get:
      tags: 
        - Branch
      summary: Get all branches
      description: Get all the branches objects.
      operationId: BranchExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branches'
  /branches/{id}/: 
    get:
      tags:
        - Branch
      summary: Get single branch
      description: Get the export of a specific branch by the id.
      operationId: SingleBranchExport
      parameters:
        - name: id
          in: path
          description: Id of the branch
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Branch object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
      deprecated: false
  /branches/count:
    get:
      tags: 
        - Branch
      summary: Count syncable branches
      description: Get the full count of syncable branches with or without date.
      operationId: BranchCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"
  /vattypes: 
    get:
      tags: 
        - VatType
      summary: Get all vattypes
      description: Get all the vattype objects.
      operationId: VatTypeExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatTypes'
  /vattypes/{id}/: 
    get:
      tags:
        - VatType
      summary: Get single vattype
      description: Get the export of a specific vattype by the id.
      operationId: SingleVatTypeExport
      parameters:
        - name: id
          in: path
          description: Id of the vattype
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted Stock object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatType"
      deprecated: false
  /vattypes/count:
    get:
      tags: 
        - VatType
      summary: Count syncable vattypes
      description: Get the full count of syncable stocks with or without date.
      operationId: VatTypeCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count" 
  /groups: 
    get:
      tags: 
        - Group
      summary: Get all groups
      description: Get all the group objects.
      operationId: RateGroupExport
      parameters: 
        - name: type
          in: query
          description: Type of the group
          required: true
          schema:
            $ref: '#/components/schemas/GroupEnum'
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
  /groups/{id}/: 
    get:
      tags:
        - Group
      summary: Get single group
      description: Get the export of a specific group by the id.
      operationId: SingleRateGroupExport
      parameters:
        - name: id
          in: path
          description: Id of the rategroup
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: query
          description: Type of the group
          required: true
          schema:
            $ref: '#/components/schemas/GroupEnum'
      responses:
        '200':
          description: 'Json formatted Rategroup object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
      deprecated: false
  /groups/count:
    get:
      tags: 
        - Group
      summary: Count syncable groups based on type
      description: Get the full count of syncable rategroups with or without date.
      operationId: RateGroupCount
      parameters: 
        - name: type
          in: query
          description: Type of the group
          required: true
          schema:
            $ref: '#/components/schemas/GroupEnum'
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"  
  /paymentconditions: 
    get:
      tags: 
        - PaymentCondition
      summary: Get all paymentconditions
      description: Get all the paymentcondition objects.
      operationId: PaymentConditionExport
      parameters: 
        - name: offset
          in: query
          description: Starting offset Default = 0
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: fetchsize 
          in: query
          description: Fetchsize, default = 200
          required: false
          style: form
          explode: true
          schema: 
            type: integer
            format: int32
            example: 200
      responses:
        '200' :
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConditions'
  /paymentconditions/{id}/: 
    get:
      tags:
        - PaymentCondition
      summary: Get single paymentcondition
      description: Get the export of a specific paymentcondition by the id.
      operationId: SinglePaymentConditionExport
      parameters:
        - name: id
          in: path
          description: Id of the paymentcondition
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: 'Json formatted PaymentCondition object'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentCondition"
      deprecated: false
  /paymentconditions/count:
    get:
      tags: 
        - PaymentCondition
      summary: Count syncable paymentconditions
      description: Get the full count of syncable paymentcondition with or without date.
      operationId: PaymentConditionCount
      parameters: 
        - name: lastupdated
          in: query
          description: 'Date string, update needs to be updated later then this date. Format: yyyy-MM-dd HH:mm'
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200' :
          description: 'Json object containing amount.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Count"        
components:
  schemas:
    ContactPersons:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items: 
          type: array
          items:
            $ref: '#/components/schemas/ContactPerson'
    ContactPerson:
      type: object
      required:
        - id
        - salutation
        - lastname
        - email
        - language
      properties:
        id:
          type: string
        customerId:
          type: string
          description: 'References the customer the contactperson is attached to.'
        salutation:
          $ref: '#/components/schemas/SalutationEnum'
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        mobile:
          type: string
        phone: 
          type: string
        language:
          type: string
          description: 'ISO 639-1 code expected to indicate language'
        active:
          type: boolean
        newsletter:
          type: boolean
          description: 'Indicates if the contactperson is subscribed to the newsletter.'
    Customers:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      required:
        - id
        - type
        - vatregime
        - status
        - email
        - currency
      properties:
        id: 
          type: string
        type:
          $ref: '#/components/schemas/CustomerTypeEnum'
        vatregime:
          type: boolean
          default: true
          description: 'Used as overruling setting if client is vatliable or not.'
        status:
          $ref: '#/components/schemas/CustomerStatusEnum'
        memo: 
          type: string
        fullname: 
          type: string
        company:
          type: string
        email: 
          type: string
        phone: 
          type: string
        fax: 
          type: string
        mobile:
          type: string
        language:
          type: string
          description: 'ISO 639-1 code expected to indicate language'
        currency:
          type: string
          description: 'ISO 4217 currency code expected'
        banknr:
          type: string
        bic:
          type: string
        tav:
          type: string
        businessnr:
          type: string
        reductionpercentage:
          type: number
          default: 0
          description:
            'Minimum percentage of reduction expected for client regardless of reductions applied to customer.'
        paysshipmentcost:
          type: boolean
          default: true
          description: 
            'If set to false the customer is not required to pay shipmentcosts.'
        paymentconditionId:
          type: string
          description: 'References a paymentcondition object.'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupLink'
        deliveryAddressId:
          type: string
          description: 'References wich address should be used as default for delivery. The address has to be linked to the customer via its customerId.'
        invoiceAddressId:
          type: string
          description: 'References wich address should be used as default for invoice. The address has to be linked to the customer via its customerId.'
        dynamicFields:
          type: array
          items:
            $ref: '#/components/schemas/DynamicField'
    Addresses:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    Address:
      type: object
      required:
        - id
        - customerid
        - street
        - postalcode
        - city
        - countrycode
      properties:
        id:
          type: string
        customerid:
          type: string
        countrycode:
          type: string
          description: '2 Character ISO code expected for country'
        city:
          type: string
        postalcode:
          type: string
        street:
          type: string
        number: 
          type: string
        box:
          type: string
        tav:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        company:
          type: string
        email:
          type: string
        phone:
          type: string
        fax:
          type: string
        mobile:
          type: string
        memo:
          type: string
        type:
          $ref: '#/components/schemas/AddressEnum'
    Articles:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    Article:
      type: object
      required:
        - id
        - code
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
        description:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
        weight:
          type: number
        endOfLife:
          type: boolean
        priceOnRequest:
          type: boolean
        published: 
          type: boolean
          default: false
        allowReductions:
          type: boolean
          default: true
        vatTypeId:
          type: string
        unitId:
          type: string
        relatedArticles:
          type: array
          items: 
            $ref: '#/components/schemas/RelatedArticle'
        categorieIds:
          type: array
          items:
            type: string
        replacedByArticleId:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupLink'
        dynamicFields:
          type: array
          items:
            $ref: '#/components/schemas/DynamicField'
    Categories:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Category:
      type: object
      required: 
        - id
      properties:
        id:
          type: string
        parentId: 
          type: string
          default: -1
          description: 'Returns -1 when no parentcategory is set.'
        name:
          type: array
          items: 
            $ref: '#/components/schemas/Lang'
        description:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
        dynamicFields:
          type: array
          items:
            $ref: '#/components/schemas/DynamicField'
        lastUpdated:
          type: string
          format: date-time
    Prices:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Price'
    Price:
      type: object
      required: 
        - id
        - value
        - articleId
        - rateGroupId
        - customerId
        - unitId
      properties: 
        id: 
          type: string
        value:
          type: number
        currency:
          type: string
        inclVat:
          type: boolean
          default: false
        articleId:
          type: string
          default: -1
          description: 'Returns -1 if no article is linked.'
        rateGroupId:
          type: string
          default: -1
          description: 'Returns -1 if no rategroup is linked.'
        customerId:
          type: string
          default: -1
          description: 'Returns -1 if no customer is linked.'
        unitId:
          type: string
          default: -1
          description: 'Returns -1 if no unit is linked.'
        lastUpdated:
          type: string
          format: date-time
    Units:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items: 
            $ref: "#/components/schemas/Unit"
    Unit:
      type: object
      required: 
        - id
      properties:
        id:
          type: string
        baseUnit:
          type: boolean
          default: true
        factor:
          type: number
          default: 1
        name:
          type: array
          items: 
            $ref: "#/components/schemas/Lang"
        lastUpdated:
          type: string
          format: date-time
    Stocks:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Stock'
    Stock:
      type: object
      required: 
        - id
        - stockRoomId
        - articleId
      properties:
        id:
          type: string
        available:
          type: number
          default: 0
        stock:
          type: number
          default: 0
        stockLocationName:
          type: string
        stockRoomId:
          type: string
        articleId:
          type: string
        lastUpdated:
          type: string
          format: date-time
    StockRooms:
      type: object
      properties: 
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items: 
          $ref: '#/components/schemas/StockRoom'
    StockRoom:
      type: object
      required:
        - id
        - branchId
      properties:
        id:
          type: string
        branchId: 
          type: string
        name:
          type: string
        main:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
    Branches:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          $ref: '#/components/schemas/Branch'
    Branch:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        lastUpdated:
          type: string
          format: date-time
    VatTypes:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          $ref: '#/components/schemas/VatType'
    VatType:
      type: object
      required:
        - id
      properties:
        id: 
          type: string
        percentage:
          type: number
          default: 0
        exempt:
          type: boolean
          default: false
        liable:
          type: boolean
          default: true
        name: 
          type: string
        lastUpdated:
          type: string
          format: date-time
    Groups:
      type: object
      properties: 
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          $ref: '#/components/schemas/Group'
    Group:
      type: object
      required: 
        - id
      properties:
        id:
          type: string
        name: 
          type: string
        type:
          $ref: '#/components/schemas/GroupEnum'
    PaymentConditions:
      type: object
      properties:
        nextOffsetValue:
          type: integer
          format: int32
          default: -1
        items:
          $ref: '#/components/schemas/PaymentCondition'
    PaymentCondition:
      type: object
      required:
        - id
      properties: 
        id:
          type: string
        name:
          type: array
          items: 
            $ref: "#/components/schemas/Lang"
        description:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
    Lang:
      type: object
      required:
        - lang
        - value
      properties:
        lang:
          type: string
        value:
          type: string
    Count:
      type: object
      description: 'Returns a count of all found objects for given parameters in the call.'
      required:
        - amount
      properties:
        amount: 
          type: integer
          format: int32
          default: -1
          description: 'Returns -1 when a count is not possible of the items.'
    GroupLink:
      type: object
      description: 'object used to link towards a group.'
      required:
        - type
        - id
      properties:
        type: 
          $ref: '#/components/schemas/GroupEnum'
        id:
          type: string
    GroupEnum:
      type: string
      enum: 
        - rategroup
        - customergroup
        - reductiongroup
    CustomerStatusEnum:
      type: string
      enum: 
        - active
        - blocked
        - prospect
      default: prospect
    CustomerTypeEnum:
      type: string
      enum: 
        - business
        - individual
    AddressEnum:
      type: string
      enum:
        - invoice
        - delivery
      description: 'If addresses have a type inside the erppacket this field can be used to destinct between addresses that need to be used for delivery information or invoice information.'
    SalutationEnum:
      type: string
      enum:
        - Mr
        - Mrs
    DynamicField:
      type: object
      description: 'Used to assign values to an object that are not part of the standard information. An example could be the colour of an article.'
      properties: 
        key:
          type: string
        value:
          type: string
    RelatedArticle:
      type: object
      properties:
        articleId:
          type: string
        required:
          type: boolean
        priceincluded:
          type: boolean
        amount:
          type: number
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
security:
  - httpBasic: []
tags:
  - name: ContactPerson
    description: ''
  - name: Customer
    description: ''
  - name: Address
    description: ''
  - name: Article
    description: ''
  - name: Category
    description: ''
  - name: Price
    description: ''
  - name: Unit
    description: ''
  - name: Stock
    description: ''
  - name: StockRoom
    description: ''
  - name: Branch
    description: ''
  - name: VatType
    description: ''
  - name: Group
    description: ''
  - name: PaymentCondition
    description: ''