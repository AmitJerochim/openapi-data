penapi: "3.0.0"
info:
  contact:
    name: Departamento de operaciones de Taya
    url: http://some.url.info
    email: soporte@taya.com
  version: 1.0.0 
  title: API Taya sync
  description: |
    This is an api to connect desktop version of taya 
    to centralized api and send all information 
    about specific tables.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CloudAppi/swagger-petstore/1.0.0
  - url: https://api.ictreasury.com/
    description: Production api provider
  - url: https://pre-api.ictreasury.com
    description: No production server
paths:
  /sync:
    post:
      summary: Create a new sincronization
      operationId: createSync
      tags:
        - Sync
      requestBody:
        $ref: '#/components/requestBodies/CreateSyncRequestBody'
      security:
        - OauthPassword:
          - admin
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSyncResponse"
        '400': 
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: '#/components/responses/DefaultError'
          
components:
  schemas:
    Table:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 'PAR_ENT_Cuentas'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/Column'
    Column:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        required:
          type: boolean     
    Data:
      type: object
      properties:
        table_name:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
    Row:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Column_value'
    Column_value:
      type: object
      properties:
        column_name:
          type: string
        value:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          description: Internal error code
          type: integer
          format: int32
        message:
          description: Error message
          type: string
    Errors:
      type: array
      items: 
        $ref: "#/components/schemas/Error"
          
    StandardResponse:
      type: object
      properties:
        result:
          type: boolean
          description: > 
            Operation result. _true_ if http code is 2xx, _false_ otherwise
          example: true
        http_code:
          type: integer
          format: int32
          description: Response http code.
          example: 200
        info:
          type: string
          description: Brief description of operation's result
          example: OK
      required:
        - result
        - http_code
        - info
        
    ErrorResponse:
      allOf: 
        - $ref: "#/components/schemas/StandardResponse"
      properties:
        errors:
          $ref: "#/components/schemas/Errors"
      required:
        - errors
   
    CreateSyncResponse:
      allOf:
        - $ref: "#/components/schemas/StandardResponse"
      properties:
        data:
          $ref: '#/components/schemas/Table'
            
  requestBodies:
    CreateSyncRequestBody:
      description: A JSON object to create data to sync
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              origin:
                type: string
              tables:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
            required:
              - tables
              - data
                            
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            allOf: 
              - $ref: "#/components/schemas/ErrorResponse"
          example:
            result: false
            http_code: 400
            info: parameter error
            errors:
              - code: 1
                message: Error on parameter x
                
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            allOf: 
              - $ref: "#/components/schemas/ErrorResponse"
          example:
            result: false
            http_code: 404
            info: Not Found
            errors:
              - code: 4
                message: Requested resource was not found

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            allOf: 
              - $ref: "#/components/schemas/ErrorResponse"
          example:
            result: false
            http_code: 401
            info: Unauthorized
            errors:
              - code: 11
                message: User has not been authenticated

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            allOf: 
              - $ref: "#/components/schemas/ErrorResponse"
          example:
            result: false
            http_code: 403
            info: Forbidden
            errors:
              - code: 12
                message: User has no permissions to access the resource 
                
    DefaultError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf: 
              - $ref: "#/components/schemas/ErrorResponse"
          example:
            result: false
            http_code: 500
            info: Internal Server Error
            errors:
              - code: 10
                message: Unexpected server error
                
    NoContent:
      description: No content
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardResponse'
          example:
            result: true
            http_code: 204
            info: No content
            
  securitySchemes:
      
    OauthClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://token.server/token
          refreshUrl: https://token.server/token
      
    OauthPassword:
      type: oauth2
      flows:
        password:
          tokenUrl: https://token.server/token
          refreshUrl: https://token.server/token
          scopes:
            reader: grants Sync reading access
            admin: grants Sync creation access