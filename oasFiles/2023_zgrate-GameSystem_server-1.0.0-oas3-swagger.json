{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "GameSystem Server API",
    "description" : "Opisane API do systemu GameServer",
    "version" : "1.0.0-oas3",
    "contact" : { }
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "tags" : [ {
    "name" : "login",
    "description" : "Login and handshake"
  }, {
    "name" : "base",
    "description" : "Base functions, used for handshaking and security"
  } ],
  "paths" : {
    "/hand" : {
      "get" : {
        "summary" : "Handshake system",
        "tags" : [ "base" ],
        "description" : "Handshake for communicating with the base server",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "Current token to check",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Token Valid",
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          },
          "401" : {
            "description" : "Invalid token, please login again",
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "operationId" : "0",
        "callbacks" : { }
      }
    },
    "/register" : {
      "post" : {
        "summary" : "Register the user",
        "tags" : [ "login" ],
        "description" : "Registers user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisterData"
              }
            }
          },
          "required" : true,
          "description" : "Register Data object"
        },
        "responses" : {
          "200" : {
            "description" : "Register sucessful",
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "parameters" : [ ]
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Performs login to system",
        "description" : "Logins the user",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginData"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Login sucessfull, returns token as response"
          },
          "401" : {
            "description" : "Login without success, invalid username or password, message 'pswd_invalid' if invalid password, 'usrn_n_found' if username not found"
          }
        },
        "parameters" : [ ]
      }
    },
    "/token" : {
      "get" : {
        "summary" : "Gets current public key",
        "tags" : [ "base" ],
        "description" : "Returns current public key",
        "responses" : {
          "200" : {
            "description" : "Current public key",
            "content" : { }
          }
        },
        "parameters" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Response" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "date",
            "description" : "time of processing message"
          },
          "message" : {
            "type" : "string",
            "description" : "return message"
          },
          "response" : {
            "type" : "object",
            "description" : "Response Body"
          },
          "endpoint_id" : {
            "type" : "number",
            "description" : "Id of the endpoint (see"
          }
        }
      },
      "LoginData" : {
        "example" : {
          "username" : "test",
          "password" : "test"
        },
        "type" : "object",
        "required" : [ "username", "password" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "format" : "username",
            "example" : "zgrate"
          },
          "password" : {
            "type" : "string",
            "description" : "password encoded with public key (see /token)"
          }
        }
      },
      "RegisterData" : {
        "type" : "object",
        "required" : [ "username", "password", "email", "date" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "ZGrate"
          },
          "password" : {
            "type" : "string",
            "format" : "Encoded with Public key //TODO: Narazie nie trzeba"
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "example@example.com"
          },
          "date" : {
            "description" : "time after epoch",
            "type" : "integer",
            "format" : "date",
            "example" : ""
          }
        }
      }
    },
    "links" : { },
    "callbacks" : { }
  },
  "security" : [ ]
}