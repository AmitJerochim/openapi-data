{"openapi":"3.0.0","servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/eversend/eversend/1.0.0"},{"description":"Eversend Sandbox v1","url":"https://api-sandbox.eversend.co/v1"},{"description":"Eversend Prod v1","url":"https://api.eversend.co/v1"}],"externalDocs":{"description":"Find out more about Eversend here","url":"https://eversend.co"},"info":{"version":"1.0.0","title":"Eversend API","termsOfService":"https://eversend.co/terms/","contact":{"email":"hello@eversend.co"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"description":"Welcome to Eversend‚Äôs API documentation.\n\nThe Eversend API is REST based. Use this reference documentation to start your journey towards build amazing apps. You'll find guides & documentation to help you build powerful web & mobile solutions. Start by creating a dev account with us to styart interracting with the API. All responses will be returned in JSON.\n## Libraries\nWe provide libraries for several languages to make it easy to build on our platform. Here are the officially supported SDKs.\n- PHP\n- Java\n- Ruby\n- Python\n\nYou can view code examples in your preferred language after the docs.\n\n## Quick Start üöÄ\nEager to start? Follow the following steps to get started.\n1. [Sign Up](https://developers.eversend.co) for an Eversend Developer account.\n2. Login and get your Client ID and Secret on the settings page.\n3. Download the appropriate SDK from the SDKs section.\n4. Using your credentials and the SDK library, connect to the API endpoint: [https://api.eversend.co](https://api.eversend.co)\n5. Follow the docs to identify the endpoints/classes you need\n\n## API Endpoint\nYou access Eversend‚Äôs API at the following endpoint:\n\n``` https://api.eversend.co ```\n\n## Authentication\nAll requests MUST use https.\nThe Eversend API uses OAuth 2.0 Auth Code Authentication, and requires an a Client ID and Client Secret for authentication. These credentials should be kept secret. You will receive the `access_token` and `refresh_token` in the Authentication flow which should be persisted in your application for use with future API requests.\n\nYou must supply your Access Token with all API requests using the ‚ÄúAuthorization‚Äù header using Bearer scheme as shown in the examples. The Access Token in all the examples is a valid test key, so you can test the examples immediately.\n\n## Throttling\nRequests to Eversend are throttled. If you send too many requests too fast, you will receive a throttling error resulting in a response with the HTTP status code ‚Äú429 Too Many Requests‚Äù.\n\n**API READ** requests are limited to `XXX/minute`.\n\n**API WRITE** requests are limited to `XXX/minute`.\n\n## Error Handling\nEversend uses HTTP status codes to indicate success or failure of a request. Depending on the response you get, a status code in the **2XX** range indicates a successful operation whereas a status code in the **4XX** or **5XX** range indicates your client or Eversend's server error respectively. In all cases, the response will include an appropriate status code and content-type. The body of the response will include any additional details regarding the nature of the error. Most error responses will include a ‚Äúdetails‚Äù key in the body of the response, but some may include additional information, for example, they may include information about missing fields.\n\nYour code should handle errors gracefully.\n\nEversend‚Äôs API libraries will raise an exception when an error occurs. So you should add exception handling to your requests as shown in the examples to the right.\n\n### Common Error Codes\n| Code | Message                                    | Description                                                                                       |\n|------|--------------------------------------------|---------------------------------------------------------------------------------------------------|\n| 400  | Bad Request                                | Your request is malformed or is missing some required parameters                                  |\n| 401  | Unauthorized                               | You are using an invalid access token                                                             |\n| 403  | Forbidden                                  | You are attempting to access a resource that doesn‚Äôt belong to you. Check that you are using the correct API token for the user who owns the resource |\n| 404  | Not Found                                  | You are attempting to access a resource that doesn‚Äôt exit. Check the url for your request         |\n| 405  | Method Not Allowed                         | You are attempting to use an invalid method. For example, you might be trying to POST to a readonly endpoint |\n| 406  | Not Acceptable                             | You requested a format that isn‚Äôt supported. Check the ‚ÄúAccept‚Äù header of your request, and try to ensure that you are using json format for your requests |\n| 409  | Conflict                                   | You sent a duplicate request. Check your Duplicate-Check-Key                                      |\n| 415  | Unsupported Media Type                     | Check the content-type of the data you are sending                                                |\n| 429  | Throttled                                  | You are sending too many requests in a short period of time. Slow down!                           |\n| 500  | Internal Server Error                      | We had a problem with our server. Try again later.                                                |\n| 503  | Service Unavailable                        | We‚Äôre temporarily offline for maintenance. Please try again later                                 |"},"tags":[{"name":"Wallets","description":"Wallets endpoints","externalDocs":{"description":"Find out more","url":"https://developers.eversend.co/v1/docs"}},{"name":"Users","description":"Users endpoints"},{"name":"Transactions","description":"Transactions endpoints"},{"name":"Billing","description":"Billing endpoints e.g. Airtime purchase"},{"name":"Merchants","description":"Merchants endpoints","externalDocs":{"description":"Find out more about our business features","url":"https://eversend.co/partnerships"}}],"security":[{"accessCode":["read","write"]}],"paths":{"/wallets/{id}":{"parameters":[{"in":"path","name":"id","description":"ID of wallet to return","required":true,"schema":{"$ref":"#/components/schemas/UUID"}}],"get":{"tags":["Wallets"],"summary":"Fetch Wallet information","operationId":"getWallet","description":"Get a wallet in Eversend given its ID","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WalletResponse"}}}},"404":{"description":"specified wallet not found"}}}},"/wallets/{id}/credit":{"post":{"tags":["Wallets"],"operationId":"creditWallet","summary":"Credit a wallet","parameters":[{"in":"path","name":"id","required":true,"description":"Wallet ID","schema":{"$ref":"#/components/schemas/UUID"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditTransactionResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/CreditTransactionResponse"}}}},"400":{"description":"bad input parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"specified user wallet not found"}},"requestBody":{"$ref":"#/components/requestBodies/TransactionRequest"}}},"/wallets/{id}/debit":{"post":{"tags":["Wallets"],"operationId":"debitWallet","summary":"Debit a wallet","parameters":[{"in":"path","name":"id","required":true,"description":"Wallet ID","schema":{"$ref":"#/components/schemas/UUID"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DebitTransactionResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/DebitTransactionResponse"}}}},"400":{"description":"bad input parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"specified user wallet not found"}},"requestBody":{"$ref":"#/components/requestBodies/TransactionRequest"}}},"/wallets/{sourceId}/transfer/{targetId}":{"post":{"tags":["Wallets"],"operationId":"transfer","summary":"Transfer from sourceId to targetId","description":"Transfer Money from one Eversend wallet to another","parameters":[{"in":"path","name":"sourceId","required":true,"description":"Source/Sender wallet ID","schema":{"$ref":"#/components/schemas/UUID"}},{"in":"path","name":"targetId","required":true,"description":"Target/Recipient wallet ID","schema":{"$ref":"#/components/schemas/UUID"},"example":"c4bd9f02-a7f4-4d99-8fa2-b4cf5e6a202a"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferTransactionResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/TransferTransactionResponse"}}}},"400":{"description":"bad input parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"specified wallet(s) not found"}},"requestBody":{"$ref":"#/components/requestBodies/TransactionRequest"}}},"/users/{id}/wallets":{"get":{"tags":["Users"],"summary":"Fetch all User Wallets","operationId":"getWallets","description":"Get all Wallets of the specified user","parameters":[{"$ref":"#/components/parameters/userId"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletsResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WalletsResponse"}}}}}}},"/users/{id}/wallets/{walletId}":{"get":{"tags":["Users"],"summary":"Get user's wallet given its id","operationId":"getUserWallet","parameters":[{"$ref":"#/components/parameters/userId"},{"$ref":"#/components/parameters/walletId"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WalletResponse"}}}},"404":{"description":"specified user wallet not found"}}}},"/users/{id}/wallets/transactions":{"get":{"tags":["Users","Transactions"],"summary":"Get all wallets transactions of a user","operationId":"getWalletsTransactions","parameters":[{"$ref":"#/components/parameters/userId"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/offset"},{"$ref":"#/components/parameters/search"},{"$ref":"#/components/parameters/sort"},{"$ref":"#/components/parameters/sortBy"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionsListResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/TransactionsListResponse"}}}}}}},"/users/{id}/wallets/{walletId}/transactions":{"get":{"tags":["Users","Transactions"],"summary":"Get a user's Wallet transactions","operationId":"getWalletTransactions","parameters":[{"$ref":"#/components/parameters/userId"},{"$ref":"#/components/parameters/walletId"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/offset"},{"$ref":"#/components/parameters/search"},{"$ref":"#/components/parameters/sort"},{"$ref":"#/components/parameters/sortBy"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionsListResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/TransactionsListResponse"}}}},"404":{"description":"specified user wallet not found"}}}},"/users/{id}/wallets/{walletId}/transactions/{transactionId}":{"get":{"tags":["Users","Transactions"],"summary":"Get a user's wallet transaction","operationId":"getWalletTransaction","parameters":[{"$ref":"#/components/parameters/userId"},{"$ref":"#/components/parameters/walletId"},{"$ref":"#/components/parameters/transactionId"}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DebitTransactionResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/DebitTransactionResponse"}}}},"404":{"description":"transaction not found"}}}},"/users/{id}/wallets/{walletId}/transactions/reference/{reference}":{"get":{"tags":["Users","Transactions"],"summary":"Get a user's wallet transactions by reference","operationId":"getWalletTransactionByReference","parameters":[{"$ref":"#/components/parameters/userId"},{"$ref":"#/components/parameters/walletId"},{"$ref":"#/components/parameters/transactionId"},{"name":"reference","in":"path","required":true,"description":"Transaction Unique Reference","schema":{"type":"string"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditTransactionResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/CreditTransactionResponse"}}}},"404":{"description":"transaction not found"}}}},"/billing/airtime":{"post":{"tags":["Billing"],"operationId":"buyAirtime","summary":"Buy Airtime","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AirtimeResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/AirtimeResponse"}}}},"400":{"description":"bad input parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"requestBody":{"$ref":"#/components/requestBodies/BuyAirtimeRequest"}}},"/merchants/mobile/checkout":{"post":{"tags":["Merchants"],"operationId":"mobileCheckout","summary":"Buy good via Mobile Checkout","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MobileCheckoutResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/MobileCheckoutResponse"}}}},"400":{"description":"bad input parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"requestBody":{"$ref":"#/components/requestBodies/MobileCheckoutRequest"}}},"/merchants/c2b":{"get":{"tags":["Merchants"],"operationId":"c2b","summary":"Consumer to Business Transaction","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/merchants/b2c":{"get":{"tags":["Merchants"],"operationId":"b2c","summary":"Business to Consumer Transaction","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/merchants/b2b":{"get":{"tags":["Merchants"],"operationId":"b2b","summary":"Business to Business Transaction","responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}}},"components":{"schemas":{"Integer":{"type":"number","format":"int32"},"Integer64":{"type":"integer","format":"int64"},"Timestamp":{"type":"string","format":"date-time"},"UUID":{"type":"string","example":"97ea7940-1d47-441b-9f7f-169e617f5036","format":"uuid"},"UserId":{"$ref":"#/components/schemas/UUID"},"Phone":{"type":"object","properties":{"number":{"type":"number","format":"double","example":722001122},"countryCode":{"type":"number","format":"int64","example":254}}},"TxnReference":{"type":"string","description":"Your transaction references. Should always be a 12 digit string","example":675654543465,"minLength":12,"maxLength":12},"Error":{"type":"object","required":["code","message"],"properties":{"code":{"type":"string","description":"error code"},"type":{"type":"string","description":"Eversend error type designation"},"message":{"type":"string","description":"the error description"},"data":{"type":"object"}}},"Money":{"type":"object","required":["value","currency"],"properties":{"value":{"type":"number","format":"double","minimum":0},"currency":{"type":"string","example":"KES"}}},"Merchant":{"type":"object","required":["id","product"],"properties":{"id":{"$ref":"#/components/schemas/UUID"},"product":{"type":"string","example":"shop.com"}}},"PaginationMeta":{"type":"object","properties":{"page":{"$ref":"#/components/schemas/Integer64"},"pages":{"$ref":"#/components/schemas/Integer64"},"limit":{"$ref":"#/components/schemas/Integer64"},"total":{"$ref":"#/components/schemas/Integer64"},"first_url":{"type":"string"},"next_url":{"type":"string"},"self_url":{"type":"string"},"prev_url":{"type":"string"},"last_url":{"type":"string"}}},"Wallet":{"type":"object","required":["id","userId","currency"],"properties":{"id":{"type":"string","format":"uuid","example":"3ad759f0-c006-45e1-b137-131b80fe2311"},"userId":{"$ref":"#/components/schemas/UserId"},"currency":{"type":"string","description":"The currency e.g KES - Kenya Shillings","example":"KES"},"availableBalance":{"type":"number","format":"double"},"reservedBalance":{"type":"number","format":"double"},"locked":{"type":"boolean","example":false},"balance":{"type":"number"},"ownerType":{"type":"string","enum":["USER","BUSINESS"]}}},"WalletResponse":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/Wallet"},"meta":{"type":"object","properties":{"owner":{"type":"string","example":"Joseph Akhenda"}}}}},"WalletsArray":{"type":"array","items":{"$ref":"#/components/schemas/Wallet"}},"WalletsResponse":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/WalletsArray"},"meta":{"type":"object","example":{"total":1}}}},"WalletTransactionType":{"type":"string","enum":["DEBIT","CREDIT","TRANSFER"]},"WalletTransactionStatus":{"type":"string","enum":["SUCCESS","IN_PROGRESS","PENDING","FAILED"]},"TransactionMetadata":{"type":"object","required":["name","value"],"properties":{"name":{"type":"string","description":"name of metadata"},"value":{"type":"string","description":"any value to represent"}}},"TransactionRequest":{"type":"object","required":["reference","amount"],"properties":{"reference":{"type":"string"},"amount":{"$ref":"#/components/schemas/Money"},"memo":{"type":"string","description":"A memo describing the transaction"},"metadata":{"type":"array","description":"List of metadata objects for the transaction","items":{"$ref":"#/components/schemas/TransactionMetadata"}}}},"WalletTransaction":{"type":"object","readOnly":true,"properties":{"id":{"$ref":"#/components/schemas/Integer"},"status":{"$ref":"#/components/schemas/WalletTransactionStatus"},"reference":{"type":"string","description":"internal reference"},"amount":{"$ref":"#/components/schemas/Money"},"balance":{"$ref":"#/components/schemas/Money"},"wasReversed":{"type":"boolean"},"entryDate":{"$ref":"#/components/schemas/Timestamp"},"creationDate":{"$ref":"#/components/schemas/Timestamp"},"reversalTransactionId":{"$ref":"#/components/schemas/Integer"},"serviceReference":{"type":"string"},"walletId":{"$ref":"#/components/schemas/UUID"}}},"WalletDebitTransaction":{"allOf":[{"$ref":"#/components/schemas/WalletTransaction"}],"properties":{"type":{"$ref":"#/components/schemas/WalletTransactionType"}}},"WalletCreditTransaction":{"allOf":[{"$ref":"#/components/schemas/WalletTransaction"}],"properties":{"type":{"type":"string","example":"CREDIT"}}},"WalletTransferTransaction":{"allOf":[{"$ref":"#/components/schemas/WalletTransaction"}],"properties":{"type":{"type":"string","example":"TRANSFER"}}},"DebitTransactionResponse":{"readOnly":true,"type":"object","required":["status"],"properties":{"data":{"type":"object","allOf":[{"$ref":"#/components/schemas/WalletDebitTransaction"}]},"meta":{"type":"array","description":"List of metadata for the transaction","items":{"$ref":"#/components/schemas/TransactionMetadata"}}}},"CreditTransactionResponse":{"readOnly":true,"type":"object","required":["status"],"properties":{"data":{"type":"object","allOf":[{"$ref":"#/components/schemas/WalletCreditTransaction"}]},"meta":{"type":"array","description":"List of metadata for the transaction","items":{"$ref":"#/components/schemas/TransactionMetadata"}}}},"TransferTransactionResponse":{"readOnly":true,"type":"object","required":["status"],"properties":{"data":{"type":"object","allOf":[{"$ref":"#/components/schemas/WalletTransferTransaction"}]},"meta":{"type":"array","description":"List of metadata for the transaction","items":{"$ref":"#/components/schemas/TransactionMetadata"}}}},"TransactionsPaginationMeta":{"allOf":[{"$ref":"#/components/schemas/PaginationMeta"}],"example":{"page":1,"pages":3,"limit":20,"total":70,"first_url":"https://api.eversend.co/v1/transactions?page=1","next_url":"https://api.eversend.co/v1/transactions?page=2","self_url":"https://api.eversend.co/v1/transactions?page=1","prev_url":null,"last_url":"https://api.eversend.co/v1/transactions?page=3"}},"TransactionsListResponse":{"type":"object","required":["transactions"],"properties":{"data":{"allOf":[{"$ref":"#/components/schemas/WalletDebitTransaction"},{"$ref":"#/components/schemas/WalletCreditTransaction"},{"$ref":"#/components/schemas/WalletTransferTransaction"}]},"meta":{"$ref":"#/components/schemas/TransactionsPaginationMeta"}}},"BuyAirtimeRequest":{"type":"object","required":["airtime","walletId","targetPhoneNo"],"properties":{"airtime":{"type":"object","properties":{"reference":{"$ref":"#/components/schemas/TxnReference"},"amount":{"$ref":"#/components/schemas/Money"}}},"type":{"type":"string","enum":["SAFARICOM_KE","AIRTEL_KE","TELKOM_KE"]},"walletId":{"$ref":"#/components/schemas/UUID"},"targetPhoneNo":{"$ref":"#/components/schemas/Phone"}}},"AirtimeResponse":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/WalletTransactionStatus"},"reference":{"type":"string","example":712345678908}}},"MobileCheckoutRequest":{"type":"object","required":["merchant","amount","targetPhoneNo"],"properties":{"merchant":{"$ref":"#/components/schemas/Merchant"},"targetPhoneNo":{"$ref":"#/components/schemas/Phone"},"reference":{"$ref":"#/components/schemas/TxnReference"},"amount":{"$ref":"#/components/schemas/Money"},"metadata":{"type":"array","description":"List of metadata objects for the transaction","items":{"$ref":"#/components/schemas/TransactionMetadata"}}}},"MobileCheckoutResponse":{"type":"object","properties":{"status":{"type":"string","example":"PENDING"},"reference":{"type":"string","example":712345678908},"description":{"type":"string","example":"Waiting for user input"},"transactionId":{"$ref":"#/components/schemas/UUID"}}},"ApiResponse":{"type":"object","properties":{"status":{"type":"string","example":"IN_PROGRESS"},"reference":{"type":"string","example":712345678908},"description":{"type":"string","example":"the transaction is in progress"},"transactionId":{"$ref":"#/components/schemas/UUID"}}}},"parameters":{"userId":{"name":"id","in":"path","required":true,"description":"User ID","schema":{"$ref":"#/components/schemas/UserId"}},"walletId":{"name":"walletId","in":"path","required":true,"description":"Wallet ID","schema":{"type":"string","format":"uuid","example":"36052c4e-615b-4405-9b7c-b0fbd9fc8579"}},"transactionId":{"name":"transactionId","in":"path","required":true,"description":"Transaction ID","schema":{"type":"string","format":"uuid","example":"673b05cc-bf41-4abc-b4a0-3570354283b4"}},"limit":{"name":"limit","in":"query","description":"Limits the number of returned results","required":false,"schema":{"type":"integer"}},"offset":{"name":"offset","in":"query","description":"Offset from which start returned results","required":false,"schema":{"type":"integer","format":"int32"}},"page":{"name":"page","in":"query","description":"Page to return when the results is paginated","required":false,"schema":{"type":"integer","format":"int32"}},"search":{"name":"s","in":"query","description":"String to search","required":false,"schema":{"type":"string"}},"sortBy":{"name":"sort-by","in":"query","required":false,"schema":{"type":"string","description":"The field to sort by","enum":["created_at","updated_at","name"]}},"sort":{"name":"sort","in":"query","required":false,"schema":{"type":"string","description":"The direction of the sort","enum":["asc","desc"]}}},"requestBodies":{"TransactionRequest":{"required":true,"description":"Transaction Request object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionRequest"}},"application/xml":{"schema":{"$ref":"#/components/schemas/TransactionRequest"}}}},"BuyAirtimeRequest":{"required":true,"description":"Airtime Request object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BuyAirtimeRequest"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BuyAirtimeRequest"}}}},"MobileCheckoutRequest":{"required":true,"description":"Mobile Checkout Request object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MobileCheckoutRequest"}},"application/xml":{"schema":{"$ref":"#/components/schemas/MobileCheckoutRequest"}}}}},"securitySchemes":{"accessCode":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/oauth/authorize","tokenUrl":"/oauth/token","scopes":{"admin":"allows admin operations","user":"allows user operations"}}}}}}}