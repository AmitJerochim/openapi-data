{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://loquiz-staging-pr-221.herokuapp.com/api/v3"
  } ],
  "info" : {
    "version" : "3.2.0",
    "title" : "Loquiz API v3",
    "description" : "The third API version for Loquiz."
  },
  "paths" : {
    "/play/{eventId}" : {
      "get" : {
        "tags" : [ "Playing" ],
        "description" : "Get all event data needed to play a game.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "eventId",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Event ID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Event data including game settings and tasks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameFile"
                }
              }
            }
          },
          "403" : {
            "description" : "unauthorized - access token not provided or invalid\n\nevent_closed - event is closed\n\nno_subscription - account has no active subscription\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "event_not_found - event with provided id was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "internal_server_error - Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/play/register" : {
      "post" : {
        "tags" : [ "Playing" ],
        "description" : "Register a team to an event and get the Firebase authentication token.",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "event", "name" ],
                "properties" : {
                  "event" : {
                    "type" : "string",
                    "description" : "Event ID"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Team name"
                  },
                  "members" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Newly created team ID and Firebase token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "_id", "firebaseToken" ],
                  "properties" : {
                    "_id" : {
                      "type" : "string"
                    },
                    "firebaseToken" : {
                      "type" : "string",
                      "description" : "Custom Firebase authentication token used to save data on Firestore using this team"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "event_missing - event id was not provided\n\nteam_name_missing - team name was not provided\n\nteam_name_exists - team with provided name is already registered\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "unauthorized - access token not provided or invalid\n\nevent_closed - event is closed\n\nevent_limit_full - event limit is full\n\nno_subscription - account has no active subscription\n\nno_teams_available - not enough team credits available\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "event_not_found - event with provided id was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "internal_server_error - Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/play/resume" : {
      "post" : {
        "tags" : [ "Playing" ],
        "description" : "Resume playing an event with a team by fetching a new Firebase authentication token",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "event", "team" ],
                "properties" : {
                  "event" : {
                    "type" : "string",
                    "description" : "Event ID"
                  },
                  "team" : {
                    "type" : "string",
                    "description" : "Team ID"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Team ID and Firebase token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "id", "firebaseToken" ],
                  "properties" : {
                    "_id" : {
                      "type" : "string"
                    },
                    "firebaseToken" : {
                      "type" : "string",
                      "description" : "Custom Firebase authentication token used to save data on Firestore using this team"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "event_missing - event ID was not provided\n\nteam_missing - team ID was not provided\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "unauthorized - access token not provided or invalid\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "team_not_found - team with provided name and event was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "internal_server_error - Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/languages/{languageId}/translations" : {
      "get" : {
        "tags" : [ "Languages" ],
        "description" : "Get language version, RTL flag and translations",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "languageId",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Language ID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Language version, RTL flag and translations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "version", "rtl", "translations" ],
                  "properties" : {
                    "version" : {
                      "type" : "number"
                    },
                    "rtl" : {
                      "type" : "boolean"
                    },
                    "translations" : {
                      "type" : "object",
                      "properties" : {
                        "$TRANSLATION_CODE" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "language_not_found - language with provided id was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "internal_server_error - Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "Error" : {
        "type" : "object",
        "required" : [ "error", "message" ],
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "GameFile" : {
        "type" : "object",
        "required" : [ "id", "generatedAt", "version", "title", "language", "units", "showPostAnswerComment", "showAnswerCorrectness", "showCorrectAnswer", "penalizeIncorrectAnswers", "allowChatting", "showShortIntroUnderPin", "showAllTeamScores", "showAllTeamLocations", "showCodeScanner", "mapTiles", "mapOverlays", "tasks", "primaryColor", "secondaryColor" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "generatedAt" : {
            "type" : "integer",
            "description" : "Game file generation timestamp in seconds"
          },
          "version" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string",
            "format" : "uri"
          },
          "primaryColor" : {
            "type" : "string"
          },
          "secondaryColor" : {
            "type" : "string"
          },
          "units" : {
            "type" : "string",
            "enum" : [ "metric", "imperial" ]
          },
          "language" : {
            "$ref" : "#/components/schemas/LanguageRef"
          },
          "pinInfo" : {
            "type" : "string",
            "enum" : [ "order", "score", "intro", "none" ]
          },
          "taskBackgroundImageUrl" : {
            "type" : "string",
            "description" : "Image to be shown as background when task is open"
          },
          "intro" : {
            "type" : "string",
            "example" : "Welcome to the game!"
          },
          "outro" : {
            "type" : "string",
            "example" : "Thank you for playing!"
          },
          "hintLimit" : {
            "type" : "integer",
            "example" : 9
          },
          "fastForwardLimit" : {
            "type" : "integer",
            "example" : 2
          },
          "showPostAnswerComment" : {
            "type" : "boolean",
            "example" : false
          },
          "showAnswerCorrectness" : {
            "type" : "boolean",
            "example" : true
          },
          "showCorrectAnswer" : {
            "type" : "boolean",
            "example" : false
          },
          "penalizeIncorrectAnswers" : {
            "type" : "boolean",
            "example" : false
          },
          "allowChatting" : {
            "type" : "boolean"
          },
          "showShortIntroUnderPin" : {
            "type" : "boolean"
          },
          "showAllTeamScores" : {
            "type" : "boolean"
          },
          "showAllTeamLocations" : {
            "type" : "boolean"
          },
          "showCodeScanner" : {
            "type" : "boolean"
          },
          "afterFinishMeetingPoint" : {
            "type" : "object",
            "required" : [ "location", "pin" ],
            "properties" : {
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "pin" : {
                "$ref" : "#/components/schemas/Pin"
              },
              "message" : {
                "type" : "string"
              }
            }
          },
          "mapTiles" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "type" ],
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "style" : {
                  "type" : "string"
                }
              }
            }
          },
          "mapOverlays" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "imageUrl", "alpha", "bounds", "rotation" ],
              "properties" : {
                "imageUrl" : {
                  "type" : "string",
                  "format" : "uri"
                },
                "alpha" : {
                  "type" : "number",
                  "example" : 100
                },
                "bounds" : {
                  "type" : "object",
                  "required" : [ "top", "right", "bottom", "left" ],
                  "properties" : {
                    "top" : {
                      "type" : "number"
                    },
                    "right" : {
                      "type" : "number"
                    },
                    "bottom" : {
                      "type" : "number"
                    },
                    "left" : {
                      "type" : "number"
                    }
                  }
                },
                "rotation" : {
                  "type" : "number"
                }
              }
            }
          },
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Task"
            }
          },
          "points" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "enum" : [ "TASK" ]
                  },
                  "taskId" : {
                    "type" : "string"
                  },
                  "location" : {
                    "type" : "object"
                  },
                  "activate" : {
                    "type" : "object"
                  },
                  "showOnMap" : {
                    "type" : "object"
                  },
                  "showInList" : {
                    "type" : "object"
                  }
                }
              }, {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "enum" : [ "FINISH" ]
                  },
                  "location" : {
                    "type" : "object"
                  },
                  "activate" : {
                    "type" : "object"
                  },
                  "showOnMap" : {
                    "type" : "object"
                  },
                  "showInList" : {
                    "type" : "object"
                  }
                }
              } ]
            }
          },
          "system" : {
            "type" : "object",
            "properties" : {
              "minAndroidVersion" : {
                "type" : "string"
              },
              "minIOSVersion" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Task" : {
        "type" : "object",
        "required" : [ "id", "text", "answerType", "answers" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string",
            "example" : "What is Loquiz?"
          },
          "answerType" : {
            "type" : "string",
            "enum" : [ "single", "multiple", "text", "number", "number:range", "photo", "video", "none", "activity" ]
          },
          "survey" : {
            "type" : "boolean",
            "example" : false
          },
          "answers" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "type" : "object",
                "required" : [ "text", "correct" ],
                "properties" : {
                  "text" : {
                    "type" : "string"
                  },
                  "correct" : {
                    "type" : "boolean"
                  }
                }
              }, {
                "type" : "object",
                "required" : [ "text", "min", "max", "correct" ],
                "properties" : {
                  "text" : {
                    "type" : "string"
                  },
                  "min" : {
                    "type" : "number"
                  },
                  "max" : {
                    "type" : "number"
                  },
                  "correct" : {
                    "type" : "boolean"
                  }
                }
              } ]
            }
          },
          "difficulty" : {
            "type" : "number",
            "example" : 10
          },
          "timeLimit" : {
            "type" : "integer",
            "description" : "Time limit in seconds (only used if game settings have questionTimeLimit=question)"
          },
          "comments" : {
            "type" : "object",
            "properties" : {
              "shortIntro" : {
                "type" : "string"
              },
              "hint" : {
                "type" : "string"
              },
              "correct" : {
                "type" : "string",
                "description" : "After-answer comment if answered correctly"
              },
              "incorrect" : {
                "type" : "string",
                "description" : "After-answer comment if answered incorrectly"
              }
            }
          },
          "media" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "image", "youtube", "vimeo", "webpage" ]
                },
                "url" : {
                  "type" : "string",
                  "format" : "uri"
                }
              }
            }
          },
          "pin" : {
            "$ref" : "#/components/schemas/Pin"
          },
          "custom" : {
            "type" : "object",
            "properties" : { }
          },
          "password" : {
            "type" : "string",
            "description" : "Instructor password for activity station"
          },
          "superpower" : {
            "example" : {
              "effect" : "multiply",
              "value" : 5,
              "timer" : 120
            },
            "oneOf" : [ {
              "type" : "object",
              "properties" : {
                "effect" : {
                  "type" : "string",
                  "enum" : [ "multiply" ]
                },
                "value" : {
                  "type" : "number"
                },
                "timer" : {
                  "type" : "integer"
                }
              }
            }, {
              "type" : "object",
              "properties" : {
                "effect" : {
                  "type" : "string",
                  "enum" : [ "teleport" ]
                },
                "timer" : {
                  "type" : "integer"
                }
              }
            }, {
              "type" : "object",
              "properties" : {
                "effect" : {
                  "type" : "string",
                  "enum" : [ "bomb" ]
                }
              }
            } ]
          },
          "augmentedRealityBaseUrl" : {
            "type" : "string",
            "description" : "URL to base resource used for augmented photo/video question types"
          },
          "backgroundAudio" : {
            "type" : "object",
            "required" : [ "url", "loop" ],
            "properties" : {
              "url" : {
                "type" : "string"
              },
              "loop" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "LanguageRef" : {
        "type" : "object",
        "required" : [ "id", "version" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "en"
          },
          "version" : {
            "type" : "integer"
          }
        }
      },
      "Pin" : {
        "type" : "object",
        "properties" : {
          "none" : {
            "type" : "boolean",
            "example" : false
          },
          "1x" : {
            "type" : "string",
            "format" : "uri"
          },
          "2x" : {
            "type" : "string",
            "format" : "uri"
          },
          "3x" : {
            "type" : "string",
            "format" : "uri"
          },
          "iconAnchor" : {
            "type" : "array",
            "minItems" : 2,
            "maxItems" : 2,
            "items" : {
              "type" : "number",
              "format" : "float32"
            },
            "example" : [ 0.5, 0.5 ]
          },
          "areaColor" : {
            "type" : "string",
            "example" : "#ff00eedd",
            "description" : "ARGB"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "required" : [ "lat", "lng", "radius" ],
        "properties" : {
          "lat" : {
            "type" : "number",
            "format" : "float32",
            "example" : 41.336
          },
          "lng" : {
            "type" : "number",
            "format" : "float32",
            "example" : 20.325
          },
          "radius" : {
            "type" : "number",
            "format" : "float32",
            "example" : 20,
            "description" : "Location radius in meters"
          }
        }
      }
    }
  }
}