openapi: 3.0.0
info:
  description: Eldorado API documentation
  version: 1.0.0-oas3
  title: Eldorado API
tags:
  - name: goods
    description: operations for goods and related
  - name: catalog
    description: requests for catalog
  - name: product_page
    description: requests for product page
  - name: users
    description: requests for users and related
  - name: orders
    description: 'запити для замовленням (Checkout, ThankYouPage)'
  - name: promotions
    description: запити для роботи з акціями
  - name: crm_logs
    description: логування проглянутих товарів користувачем
servers:
  - url: 'https://api.eldorado.ua/v1'
    description: Production
  - url: 'http://api.eldodev.org.ua/v1'
    description: Test
paths:
  /goods_descriptions:
    get:
      tags:
        - goods
        - product_page
      summary: Получить описание товара
      operationId: goods_descriptions
      description: |
        Получить описание полные описания для указаного товара
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: набор записей с полными описаниями указаных товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id записи
                    ext_id:
                      type: string
                      example: '71266428'
                      description: внешний id товара
                    goods_id:
                      type: string
                      example: '1389523'
                      description: внешний id товара
                    desc_full:
                      type: string
                      example: >-
                        <style> .block { display: block; } </style><div>Пример
                        описания</div>
                    desc_full_ua:
                      type: string
                      example: >-
                        <style> .block { display: block; } </style><div>Приклад
                        опису</div>
                    created_at:
                      type: string
                      format: date-time
                      example: '2019-03-20 14:12:08'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2019-03-25 14:46:53'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_categories:
    get:
      tags:
        - goods
        - product_page
      summary: Получить список категорий
      operationId: goods_categories
      description: |
        Получить список категорий
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: список категорий полученый в соответсвии с указаными условиями
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsCategoryItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_attributes_values_output:
    get:
      tags:
        - goods
        - product_page
      summary: Получить атрибуты по одному товару в виде удобном для вывода
      operationId: get_goods_attributes_values_output
      description: |
        Получить характеристики в виде подходящем для вывода на карту товара
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: Аттрибуты для одного товара
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsAttributesGroupsOutput'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_attributes_list:
    get:
      tags:
        - goods
        - catalog
      summary: Получить список фильтров
      operationId: goods_attributes_list
      description: |
        Получение форматированого списка фильтров
      parameters:
        - name: categoryId
          in: query
          description: id категории
          required: true
          schema:
            type: string
            example: categoryId = 123123
        - name: attributes
          in: query
          description: >
            Cписок фильтров в указаном ниже формате


            Для фильтрации по значению определенного атрибута нужно указать
            значение атрибута

            с помощью оператора

                =

            В примере ниже (в блоке responses) для для фильтрации по "Система
            бритья" со значением "роторная"


            нужно передать в параметр **attributes** значение *id* данного
            аттрибута *Система бритья*


            в который через опреатор передать значение **value_default_id** из
            одного из елементов

            поля **defaultValues**


            то есть в результате выйдет конструкция

                attributes=1938=1960

            значение *id* аттрибута может быть как числом так строкой (например
            **producer**)


            значение value_default_id может быть как числом так строкой
            (например **samsung** или **199-250**)


            Что бы указать несколько значений атрибутов их нужно указать через

                ,

            например

                attributes=1938=1960,1961



            Для фильтрации по нескольким атрибутам их нужно перечислить через

                /

            Например

                attributes=1938=1960/producer=samsung/1212=1111

            так же одновременно можно указывать и несколько значений

                attributes=1938=1960,1961/producer=samsung,xiaomi

            в результате выйдет запрос вида

                /goods_attributes_list?categoryId=1042092&attributes=1938=1960,1961/producer=bosch,xiaomi/11617=170-545

            и будет возвращен уже новый список атрибутов (они же фильтры)


            ### Относительно полей в модели атрибута (GoodsAttributesListItem)


            В модели атрибута точно будут возвращены только поля с пометкой * -
            *required* в схеме ответа


            Все остальные возвращаются опционально и нужны в основном только для
            сайта
          required: false
          schema:
            type: string
            example: 'attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683'
      responses:
        '200':
          description: полученый полный список фильтров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsAttributesListItem'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_list:
    get:
      tags:
        - goods
        - catalog
      summary: Получить список отфильтрованых id товаров
      operationId: goods_list
      description: |
        Получить список отфильтрованых id товаров
      parameters:
        - name: categoryId
          in: query
          description: id категории
          required: true
          schema:
            type: string
            example: categoryId = 123123
        - name: order
          in: query
          description: >
            Параметр может принимать несколько значений.


            Ниже объяснения по каждому значению


            **popularity** - стандартная сортировка (визуализируется как
            популярность)


            **priceUp** - от дешевых к дорогим


            **priceDown** - от дорогих к дешевым


            **titleUp** - в алфавитном порядке


            **titleDown** - в порядке противополжном алфавитному


            **CommentsUp** - от меньшего к большему количеству комментариев


            **CommentsDown** - от большего к меньшему количеству комментариев


            **RatingUp** - рейтинг по возврастанию


            **RatingDown** - рейтинг по убыванию
          required: false
          schema:
            type: string
            enum:
              - popularity
              - priceUp
              - priceDown
              - titleUp
              - titleDown
              - commentsUp
              - commentsDown
              - ratingUp
              - ratingDown
            example: >-
              attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683&order=popularity
        - name: attributes
          in: query
          description: >
            формирование строки фильтрации аналогично таковому в запросе

                goods_attributes_list

            то есть если нужно получить список id товаров для набора фильтров по
            запросу

                /v1/goods_attributes_list?categoryId=1042092&attributes=11617=170-545/producer=bosch


            нужно подставить такую же строку и в этот запрос

                /v1/goods_list?categoryId=1042092&attributes=11617=170-545/producer=bosch
          required: false
          schema:
            type: string
            example: 'attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683'
      responses:
        '200':
          description: полученый полный список id товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsListItem'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  '/goods{get_catalog_goods}':
    get:
      tags:
        - goods
        - catalog
      summary: Получить товары для каталога
      operationId: get_catalog_goods
      deprecated: true
      description: >
        Получить товары с дополнительными полями-объектами (возможно получить по
        3 основным идентификаторам модели goods (id, ext_id, offer_id))
      parameters:
        - name: get_catalog_goods
          in: path
          description: Параметр определяющий формат ответа
          required: true
          allowEmptyValue: true
          schema:
            nullable: true
        - name: ids
          in: query
          description: id необходимых товаров
          schema:
            type: string
        - name: offerIds
          in: query
          description: offer_id необходимых товаров
          schema:
            type: string
        - name: extIds
          in: query
          description: ext_id необходимых товаров
          schema:
            type: string
      responses:
        '200':
          description: >-
            полученый набор товаров (возвращаются как сами товары так и их
            вариации цветов)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogGood'
        '404':
          $ref: '#/components/responses/404NotFound'
  '/goods{get_ids_by_cat_and_promo}':
    get:
      tags:
        - promotions
      summary: Получить товары сгрупированные по категориях переданной акции
      operationId: get_ids_by_cat_and_promo
      parameters:
        - name: get_ids_by_cat_and_promo
          in: path
          description: Параметр определяющий формат ответа
          required: true
          allowEmptyValue: true
          schema:
            nullable: true
        - name: promotion_id
          in: query
          description: id акции
          required: true
          schema:
            type: string
      responses:
        '200':
          description: полученый набор товаров (возвращаются как сами товары так и их вариации цветов)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoCategoriesGoods'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_catalog:
    get:
      tags:
        - goods
        - catalog
      summary: Получить товары для каталога
      operationId: goods_catalog
      description: >
        Получить товары с дополнительными полями-объектами (возможно получить по
        3 основным идентификаторам модели goods (id, ext_id, offer_id))
      parameters:
        - name: get_catalog_goods
          in: path
          description: Параметр определяющий формат ответа
          required: true
          allowEmptyValue: true
          schema:
            nullable: true
        - name: ids
          in: query
          description: id необходимых товаров
          schema:
            type: string
        - name: offerIds
          in: query
          description: offer_id необходимых товаров
          schema:
            type: string
        - name: extIds
          in: query
          description: ext_id необходимых товаров
          schema:
            type: string
      responses:
        '200':
          description: >-
            полученый набор товаров (возвращаются как сами товары так и их
            вариации цветов)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogGood'
        '404':
          $ref: '#/components/responses/404NotFound'
  /goods_remains:
    get:
      tags:
        - goods
        - product_page
      summary: Получить остатки по товарам
      operationId: goods_remains
      description: |
        Получить остатки по товарам
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: список категорий полученый в соответсвии с указаными условиями
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemainItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    put:
      tags:
        - shop_name
        - remains
      summary: Обновить остатки по товарам
      operationId: update goods remains
      requestBody:
        description: Информация для обновления
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shop_name:
                  type: string
                  example: 'C001'
                remains:
                  type: array
                  items:
                    type: object
                    properties:
                      ext_id:
                        type: string
                        example: '12345'
                      quantity:
                        type: integer
                        example: 5
      responses:
        '200':
          description: список обновленных товаров со статусом обновления
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                  data:
                    type: object
                    properties:
                      statuses:
                        type: object
                        properties:
                          ext_id:
                            type: string
                            example: 12345
                          status:
                            type: boolean
                            example: true
        '404':
          $ref: '#/components/responses/404NotFound'
  /comments:
    get:
      tags:
        - goods
        - product_page
      summary: Получить комментарии
      operationId: comments
      description: |
        Получить комментарии
      parameters:
        - name: returnCommentsList
          in: query
          description: обязательный параметр для указания формата ответа
          required: true
          allowEmptyValue: true
          schema:
            type: string
            example: returnCommentsList
        - name: goods_id
          in: query
          description: id товара к которому нужно получить комментарии
          required: true
          schema:
            type: string
            example: goods_id=123123
        - name: type
          in: query
          description: Тип запрашиваемого  комментария обзор ('r') или вопрос ('q')
          required: true
          schema:
            type: string
            enum:
              - r
              - q
            example: type='q'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: список акционных тегов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentsItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - goods
        - product_page
      summary: Добавить новый комментарий
      operationId: add_comments
      description: |
        Добавить новый комментарий
      requestBody:
        description: Тело нового комментария
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentItemBase'
      responses:
        '200':
          description: Удачный ответ
        '400':
          $ref: '#/components/responses/400BadRequest'
  /goods_videos:
    get:
      tags:
        - goods
        - product_page
      summary: Відеоогляди товару
      operationId: goods_videos_get
      description: |
        Получить комментарии
      parameters:
        - name: conditions
          in: query
          description: id товара к которому нужно получить видео
          required: true
          schema:
            type: string
            example: conditions=goods_id=123123
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: відеоогляд до товару
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsVideosItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /sign:
    get:
      tags:
        - users
      summary: Методи для авторизації користувача на сайті
      operationId: sign
      description: >
        **Авторизація користувача**


        Повертає два об'єкти access і roles.

        В access головне - поле token. В запитах з обов'язковою авторизацією
        додавати до url в вигляді
        token=$2y$08$Vkt4azN4bVJpVDJlR0YwMe/bsEMqildS1WElu3kit0CJr2kWMzeS.

        session_token - необов'язковий параметр. Якщо його додати то запит також
        поверне повний об'єкт сесії з юзером всередині

        Токен повинен бути переданий в інший запит як url параметр запиту


        Приклад запиту

        `/sign?login=380982523456&password=111111`


        Приклад відповіді

         `{ "meta": { "code": 200, "message": "0K", "request_time": 1552407488, "access": { "limit": 217290, "total": 1, "offset": 0 }, "resource": "http://api.eldodev.org.ua/v1/sign?login=380982523456&password=111111" }, "data": { "access": { "user_id": 11111, "token": "$2y$08$ckY2YWpRQXFSWkx2N2Z2O.36BBdgae3t2bbW7SW.yHmlt5GBR3CZe", "expire_date": "2019-03-19 18:18:07" }, "roles": { "id": "1", "name": "Admin", "active": "1" } } }`

        Поля

        - "access":

        - "user_id": 11111, - id юзера

        - "token":
        "$2y$08$ckY2YWpRQXFSWkx2N2Z2O.36BBdgae3t2bbW7SW.yHmlt5GBR3CZe", -
        отриманий токен

        - "expire_date": "2019-03-19 18:18:07" - дата закінчення дії токена

        "roles": - інформація про роль юзера

        - "id": "1", - id ролі

        - "name": "Admin" назва ролі (можливі значення 1 - Admin, 2 - User)

        - "active": "1" - активність юзера ( 0 - не активний, 1 - активний)


        **Оновлення токена**

        /sign?refresh_token=refresh_qwerty

        Приклад праворуч


        **Користувацька авторизація з кроками**


        Інший формат запиту використовуєтсья для авторизації на сайті і
        поділений на кроки

        Існує декілька випадків при використанні покрокової авторизації


        ***Випадок 1: Юзер наявний в системі***


        *Крок 1: Перевірка наявності користувача за телефоном*


        Тип запиту :GET

        Приклад запиту `/sign/?login=380982523456&step=phone-check&lang=ru`


        Приклад відповіді при наявності телефону у системі


        `{ "meta": { "code": 200, "message": "0K", "request_time": 1552406587,
        "limit": null, "total": null, "offset": null, "resource":
        "http://api.eldodev.org.ua/v1/sign/?login=380982597023&step=phone-check&lang=ru"
        }, "data": { "phone": "380982523456", "userExists": true, "nextStep":
        "password-step" } }`


        Поля


        - "phone": "380982523456", - телефон котрий перевірявся

        - "userExists": true, - наявність юзера (true - наявний, false -
        відсутній)

        - "nextStep": "password-step", - наступний рекомендовний крок
        (password-step - в даному випадку стандартний логін описаний в кроці 2)


        *Крок 2: Після перевірки (у випадку коли номер наявний у системі) номера
        використовується стандартна авторизація з першого прикладу*


        Тип запиту :GET

        Приклад запиту `/sign?login=380982523456&password=111111`


        Інша інформація стосовно цього запиту описана вище


        У випадку наявності користувача це останній крок


        ***Випадок 2: Юзер відсутній в системі***


        *Крок 1: Перевірка наявності користувача за телефоном*


        Тип запиту :GET

        Приклад запиту `/sign?login=380982523456&password=111111`


        1.1 Приклад відповіді при відсутності телефону у системі


        `{"meta": { "code": 200, "message": "0K", "request_time": 1552409409,
        "limit": null, "total": null, "offset": null, "resource":
        "http://api.eldodev.org.ua/v1/sign/?login=380982592323&step=phone-check&lang=ru"
        }, "data": { "phone": "380982592323", "userExists": false, "nextStep":
        "verification-step" } }`


        Поля


        - "phone": "380982523456", - телефон котрий перевірявся

        - "userExists": false, - наявність юзера (true - наявний, false -
        відсутній)

        - "nextStep": "verification-step", - наступний рекомендовний крок


        За відсутності юзера на наданий номер буде відправлено смс з кодом
        верифікаці для наступного кроку реєстрації


        *Крок 2: Початок реєстрації, підтверждення коду верифікації*


        Тип запиту :GET

        Приклад запиту:
        `/sign/?login=380982597024&verification_code=1111&step=verification-step&lang=ru`


        При неправильно введеному коді авторизації буде повернена така відповідь


        `{"meta":{"code":200,"message":"0K","request_time":1552411778,"limit":null,"total":null,"offset":null,"resource":"http:\/\/api.eldodev.org.ua\/v1\/sign\/?login=380982597023&verification_code=1111&step=verification-step&lang=ru"},"data":{"phone":"380982597023","phoneVerified":false}}`


        Поля


        - "phone": "380982523456", - телефон которий перевірявся

        - "phoneVerified": false, - верифікація телефону (true - код був
        введений вірно, false - коду було введено неправильно)

        У такому випадку потрібно запропонувати ввести код повторно


        При правильно введеному коді авторизації буде повернена така відповідь


        `"meta":{"code":200,"message":"0K","request_time":1552411748,"limit":null,"total":null,"offset":null,"resource":"http:\/\/api.eldodev.org.ua\/v1\/sign\/?login=380982597023&verification_code=6448&step=verification-step&lang=ru"},"data":{"phone":"380982597023","phoneVerified":true,"user":{"surname":{},"name":{}},"nextStep":"personal-data-input"}}`


        Поля

        - "phone": "380982523456", - телефон котрий перевірявся

        - "phoneVerified": true, - верифікація телефону (true - код був введений
        вірно, false - коду було введено неправильно)

        - "nextStep": "personal-data-input", - наступний рекомендовний крок


        *Крок 3: Реєстрація. Введення персональних даних*


        **Відновлення пароля**


        В запит передаються праметри: login - номер телефона користувача

        step - назва поточного кроку


        Приклад запиту: `/sign/?login=380982231223&step=password-recovery-step`


        Після успішної відправки запиту клієнn отримує новий згенерований пароль


        ***Випадок 3: Авторизація за допомогою facebook***


        *Крок 1: Авторизація в facebook на фронті*


        За допомогою бібліотеки facebook авторизуємося на facebook, в успішному
        випадку отримуємо від facebook та id access_token користувача


        *Крок 2: Перевірка існування користувача *


        Робимо запит на
        `/sign/?fb_id=10218583626282509&step=facebook-check&lang=ru`


        Поля:


        - fb_id - id користувача facebook


        Якщо користувач з таким id існує в базі, повертається об'єкт виду


        `{"meta":{"code":200,"message":"0K","request_time":1574083937,"access":{"offset":0},"resource":"https:\/\/api.eldorado.ua\/v1\/sign\/?login=380633223539&password=null&session_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJndWVzdCIsInN1YiI6InNlc3Npb25JZF9kZjdmZGMxYy02MGU5LTQwNDUtODg4Ni03YzhkNjVjNWNiOTMiLCJpYXQiOjE1NzQwODM4ODksImV4cCI6MTU3NTI5MzQ4OX0.PSpk_kGn__8MQCRq1FyRYG6qWqxVsKEuVK2dXgRrfKg&isFb=true&lang=ru"},"data":{"access":{"user_id":11111,"token":"$2y$08$cnFka2N6bUkwRUp5Nk4zZU\/Vri\/\/oH32hZZfhapO0ALQ3ibLdmm","expire_date":"2019-11-25
        15:32:17"},"roles":{"id":"1","name":"Admin","active":"1"},"session":{"startTime":1574083889,"endTime":1575293537,"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJndWVzdCIsInN1YiI6InNlc3Npb25JZF9kZjdmZGMxYy02MGU5LTQwNDUtODg4Ni03YzhkNjVjNWNiOTMiLCJpYXQiOjE1NzQwODM4ODksImV4cCI6MTU3NTI5MzUzN30.X1r_B-HIiqyGvp7_yXrbdtrOd6JJs1l_pgUwqMDNzrM","user":{"id":25251,"name":"\u0410\u043b\u0435\u043a\u0441\u0435\u0439","email":"eee@gmail.com","profile":{"id":"11111","user_id":"11111","member_id":null,"last_name":"\u0411\u0430\u0440\u0430\u043d\u043e\u0432","first_name":"\u0410\u043b\u0435\u043a\u0441\u0435\u0439","middle_name":"","birthday":"1987-01-14","gender":"0","marital_status":null,"car_owner":null,"form_fill_date":null,"client_social_id":null,"class_social_id":null,"activate_personal_pages":null,"profile_fill_state_id":null,"updated_at":null,"created_at":null,"when_last_authorize":null,"socialaccounts_email":null,"client_user_agent":null,"client_signed":null,"registration_date":null,"call_failure_count":null,"activate_info_kiosk":null,"businessID":null,"partner_source_id":null,"client_browser":null,"language_id":null,"language_name":null,"id_phone_numbers":"0","client_address_id":"","id_client_emails":null},"cards":[{"number":"1011019328"}],"phone":"380633223539","auth":true,"ip":"10.4.210.11","ua":"Mozilla\/5.0
        (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit\/537.36 (KHTML, like
        Gecko) Chrome\/78.0.3904.97
        Safari\/537.36"},"access":{"user_id":25251,"token":"$2y$08$cnFka2N6bUkwRUp5Nk4zZOJU\/Vri\/\/oH32hZZfhapO0ALQ3ibLdmm","expire_date":"2019-11-25
        15:32:17"}}}}`


        Після цього виконуємо запит
        `/sign/?login=380633223539&password=null&session_token=KJsg857th6ctn4tn34cn4cb437tcn43xntb4&isFb=true`


        Якщо в базі такого користувача немає, відповідь буде наступного виду:


        `{"meta":{"code":200,"message":"0K","request_time":1574088771,"limit":null,"total":null,"offset":null,"resource":"https:\/\/api.eldorado.ua\/v1\/sign\/?fb_id=10218583626282509&step=facebook-check&lang=ru"},"data":{"userExists":false,"fbUserExists":false,"fbUserId":"10218583626282509","nextStep":"facebook-phone-step"}}`


        І далі необхідно йти шляхом звичайної покрокової авторизації -
        запропонувати ввести номер телефону - відправити на цей номер код
        верифікації. При відправленні коду верифікації на перевірку, необхідно
        додати до запиту facebook
        acces380633223539{phone}&verification_code=1111&step=verification-step&fb_access_token=cj9t7cjt7y245ct7NX7T47T7Tnc7t4c`


        Після валідации коду авторизуємо користувача на сайті
      responses:
        '200':
          description: успішна авторизація
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                  data:
                    type: object
                    properties:
                      access:
                        type: object
                        properties:
                          user_id:
                            type: string
                            example: 777
                          token:
                            type: string
                            example: 'qwerty'
                          expire_date:
                            type: string
                            example: '2020-02-01 15:16:42'
                      refresh:
                        type: object
                        properties:
                          user_id:
                            type: string
                            example: 777
                          refresh_token:
                            type: string
                            example: 'refresh_qwerty'
                          expire_date:
                            type: string
                            example: '2020-02-01 15:16:42'
                      phone:
                        type: object
                      roles:
                        type: object
  /users_profile:
    get:
      tags:
        - users
      summary: Отримати профіль користувача або к-сть бонусів
      operationId: users_profile
      description: |
        Отримати профіль користувача або к-сть бонусів на основі token
      parameters:
        - $ref: '#/components/parameters/token'
        - in: query
          name: return-bonuses
          schema:
            type: string
          description: 'Якщо передати, вернеться к-сть бонусів'
        - in: query
          name: id
          schema:
            type: integer
          description: >-
            id з моделі User. Потрібно передавати завжди, коли передається
            параметр `return-bonuses`
      responses:
        '200':
          description: профіль користувача
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersProfileItem'
        '201':
          description: '200 відповідь, якщо переданий параметр `return-bonuses`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersProfileBonusesItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    put:
      tags:
        - users
      summary: Редагування контактної інформації (профілю)
      operationId: users_profile_put
      parameters:
        - $ref: '#/components/parameters/token'
        - in: query
          name: id
          schema:
            type: integer
          description: id користувача з моделі User
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UsersProfileItem'
      responses:
        '200':
          description: оновлений профіль
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersProfileItem'
  /user_feedback:
    get:
      tags:
        - users
      summary: Отримати звернення клиента
      operationId: user_feedback_get
      parameters:
        - $ref: '#/components/parameters/token'
      description: |
        Отримати звернення клиента
      responses:
        '200':
          description: звернення клієнта
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersFeedbackItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - users
      summary: Надсилання звернення клієнта
      operationId: users_feedback_post
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersFeedbackItem'
      responses:
        '200':
          description: оновлений профіль
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersFeedbackItem'
  /user_feedback_categories:
    get:
      tags:
        - users
      summary: Отримати категорії звернень користувачів
      operationId: user_feedback_categories
      description: >
        Отримати категорії звернень користувачів для використання в
        `/user_feedback`
      responses:
        '200':
          description: категорії звернень користувачів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersFeedbackCategoriesItem'
  /users_price_watch:
    get:
      tags:
        - users
      summary: Получить список "Следить за ценой" для авторизованого юзера
      operationId: users_price_watch
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: список "Следить за ценой"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersPriceWatchItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - users
      summary: Добавить товар в список "Следить за ценой" для авторизованого юзера
      operationId: cerate users_price_watch
      description: |
        Добавить товар в список "Следить за ценой" для авторизованого юзера
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: список "Следить за ценой"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersPriceWatchItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - users
      summary: Видалити товар з списоку "Следить за ценой" для авторизованого юзера
      operationId: users_price_watch_delete
      description: |
        Видалити товар з списоку "Следить за ценой" для авторизованого юзера
      parameters:
        - $ref: '#/components/parameters/token'
        - name: id
          in: query
          description: id модели для удаления
          required: true
          schema:
            type: string
            example: id=119
      responses:
        '200':
          description: список "Следить за ценой"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    type: array
                    items:
                      type: string
                      example: ''
        '404':
          $ref: '#/components/responses/404NotFound'
  /search:
    get:
      tags:
        - goods
      summary: Поиск по товарам
      operationId: search
      description: |
        Получить наиболее подходящие под запрос товары
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/cat'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/columns'
        - name: showSimilarQueries
          in: query
          description: вертати схожі запити до надісланого
          schema:
            type: boolean
      responses:
        '200':
          description: >-
            набор товаров, с которых нужно взять только id, и потом загрузить
            через стандартный метод каталога
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/SearchItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /best_offers:
    get:
      tags:
        - goods
      summary: Кращі пропозиції
      operationId: best_offers_get
      description: |
        Отримати набір кращих пропозицій товарів
      parameters:
        - name: full_data
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: |
            згрупований по категорії набір товарів
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BestOffersItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /reviews_goods:
    summary: Просмотренные пользователем товары
    get:
      tags:
        - goods
      summary: получить просмотренные пользователем товары
      operationId: reviews_goods_get
      description: |
        получить просмотренные авторизованным пользователем товары
      parameters:
        - in: query
          required: true
          name: user_hash
          description: |
            Захешированная алгоритмом md5 строка, которая состоит из слова "user" и ID авторизованного пользователя (получаем при авторизации методом /sign). Например "user1111".
          schema:
            type: integer
            example: 11111
      responses:
        200:
          description: |
            данные о просмотренных ранее пользователем товарах
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogGood'
    post:
      tags:
        - goods
      summary: получить просмотренные пользователем товары
      operationId: reviews_goods_post
      description: |
        Сохранение в базе информации о просмотренном авторизированным пользователем товаре
      parameters:
        - in: query
          required: true
          name: user_hash
          description: |
            Захешированная алгоритмом md5 строка, которая состоит из слова "user" и ID авторизованного пользователя (получаем при авторизации методом /sign). Например "user1111".
          schema:
            type: integer
            example: 11111
        - in: query
          required: true
          name: goods_id
          description: |
            ID товара товара из модели Goods
          schema:
            type: integer
            example: 111111
      responses:
        200:
          description: |
            данные о успешно добавленной записи
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    type: array
                    items:
                      properties:
                        user_hash:
                          type: string
                          example: cm40958tu2c8m5y97cmehaoc7
                        goods_id:
                          type: integer
                          example: 123456
                        insert_id:
                          type: integer
                          example: 1231456
  /orders:
    summary: Заказы
    get:
      tags:
        - orders
      summary: получить список заказов
      operationId: orders_get
      description: |
        отримати список замовлень користувача по токену
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/columns'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/relations'
      responses:
        '200':
          description: список замовлень
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/OrdersItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - orders
      operationId: orders
      description: >
        Створення замовлення \

        \

        На даний момент істнують такі обмеження можливих варіантів
        доставки-оплати

        * Якщо серед `goods` є хоча б один, з параметром `ext_category_id` IN
        (15,16,17) - самовивіз доступний (fromShop), але зі способів оплати
        завжди доступні *тільки* `26`, `applePay`, `googlePay`, `monobank`,
        `abank`, `alfabank` \
          та при деяких умовах доступний `cash`, див. /v1/goods_prepay (примітка це пункт буде описаний 12.2019, поки що в моб апп це робити не потрібно)
        * Якщо серед `goods` є хоча б один, з параметром `sell_status` < 4 -
        адресна доставка та НП недоступні (addresses, fromNewPost)

        * Способи оплати `masterCard`, `partPayOnShop`, `credit` - доступні
        тільки для самовивозу (fromShop)

        * Способи оплати `3`, `24` - доступні тільки для адресної і НП
      requestBody:
        description: обьект заказа для создания
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersItem'
      responses:
        '200':
          description: созданная модель заказа
  /mono_postback:
    summary: Робота з замовленням з способом оплати "monobank"
    get:
      tags:
        - orders
      operationId: mono_postback
      description: >
        Цей метод потрібно викликати спочатку перед створенням замовлення для
        валідації клієнта, чи зареєстрований він в monobank - див. параметр
        `phone` \

        Потім, після створення замовленя, потрібно викликати цей метод з
        параметром `order_id`. І робити це з інтервалом (5-10 сек). \

        Як тільки у відповідь прийде `state='IN_PROCESS'` та
        `order_sub_state='WAITING_FOR_STORE_CONFIRM'` - це означає, що клієнт
        замовлення оплатив і його потрібно перенаправити на ThankYouPage. \

        Поки `state` та `order_sub_state` дорівнюють будь-якому іншому значенню
        - клієнту потрібно відображати екран з проханням підтвердити оплату
        частинами в мобільному застосунку Monobank \

        Якщо у відповідь прийде `state=FAIL` потрібно показати екран, що
        замовлення не успішне \

        Детальніше про статуси див.
        https://u2.ftband.com/docs/index.html#operation/getOrderStateUsingPOST
      parameters:
        - in: query
          name: phone
          description: |
            Телефон клиента в формате 3800000000. \
            Якщо переданий цей параметр у відповідь може прийти
            * `200` - клієнт в монобанку є
            * `404` - клієнта в монобанку немає, оформити замовлення неможливо
          schema:
            type: integer
            example: 3800000000
        - in: query
          name: order_id
          description: |
            id створеного замовлення, див. `/orders` \
            Якщо переданий цей параметр див. стандартну 200 відповідь
          schema:
            type: integer
            example: 3800000000
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/MonoPostbackItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /abank_postback:
    summary: Робота з замовленням з способом оплати "A-Bank"
    get:
      tags:
        - orders
      operationId: abank_postback
      description: >
        Цей метод потрібно викликати спочатку перед створенням замовлення для
        валідації клієнта, чи зареєстрований він в monobank - див. параметр
        `phone` \

        Потім, після створення замовленя, потрібно викликати цей метод з
        параметром `order_id`. І робити це з інтервалом (5-10 сек). \

        Як тільки у відповідь прийде `state='IN_PROCESS'` та
        `order_sub_state='WAITING_FOR_STORE_CONFIRM'` - це означає, що клієнт
        замовлення оплатив і його потрібно перенаправити на ThankYouPage. \

        Поки `state` та `order_sub_state` дорівнюють будь-якому іншому значенню
        - клієнту потрібно відображати екран зі статусами обробки замовлення,
        які приходять в респонсі запиту abank_postback\

        Якщо у відповідь прийде `state=FAIL` потрібно показати екран, що
        замовлення не успішне \
      parameters:
        - in: query
          name: phone
          description: |
            Телефон клиента в формате 3800000000. \
            Якщо переданий цей параметр у відповідь може прийти
            * `200` - клієнт в монобанку є
            * `404` - клієнта в монобанку немає, оформити замовлення неможливо
          schema:
            type: integer
            example: 3800000000
        - in: query
          name: order_id
          description: |
            id створеного замовлення, див. `/orders` \
            Якщо переданий цей параметр див. стандартну 200 відповідь
          schema:
            type: integer
            example: 3800000000
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/AbankPostbackItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /payment_types:
    summary: Способи оплати замовлення
    get:
      tags:
        - orders
      operationId: payment_types
      description: |
        Див. `/orders` параметр `creditPaymentType`
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: набір способів оплати
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/PaymentTypesItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /users_waitlist:
    get:
      tags:
        - users
      summary: Отримати список "Список очікування"
      operationId: users_waitlist
      description: |
        Отримати список "Список очікування" для авторизованого користувача
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/conditions'
      responses:
        '200':
          description: список "Список очікування"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersWaitlistItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - users
      summary: Додати товар в "Список очікування"
      operationId: users_waitlist_post
      description: |
        Додати товар в "Список очікування"
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersWaitlistItem'
      responses:
        '200':
          description: список "Список очікування"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersWaitlistItem'
        '404':
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - users
      summary: Видалити товар з "Список очікування"
      operationId: users_waitlit_delete
      description: |
        Видалити товар з "Список очікування"
      parameters:
        - $ref: '#/components/parameters/token'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: список "Список очікування"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersWaitlistItem'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
  /users_wishlist:
    get:
      tags:
        - users
      summary: Получить список "Список желаний"
      operationId: users_wishlist
      description: |
        Получить список "Список желаний"
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: список "Список желаний"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersWishlist'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - users
      summary: Добавить товар в "Список желаний"
      operationId: add_users_wishlist
      description: |
        Добавить товар в "Список желаний"
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersWishlist'
            example:
              user_id: 25251
              goods_id: 123456
      responses:
        '200':
          description: список "Список желаний"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersWishlist'
        '404':
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - users
      summary: Удалить товар из "Список желаний"
      operationId: delete_users_wishlist
      description: |
        Удалить товар из "Список желаний"
      parameters:
        - $ref: '#/components/parameters/token'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: список "Список желаний"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersWishlist'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
  /users_emails:
    get:
      tags:
        - users
      summary: Отримати статус підписки на розсилку по email
      operationId: users_emails_get
      description: |
        Отримати статус підписки на розсилку по email \
        Якщо `esputnik_id` не null - email підписаний
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            minimum: 5
      responses:
        '200':
          description: email
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersEmailsItem'
    post:
      tags:
        - users
      summary: Підписка на email розсилку
      operationId: users_emails_post
      description: |
        Підписка на email розсилку, без створення користувача
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersEmailsItem'
            example:
              email: test@gmail.com
              esputnik_forward: 1
      responses:
        '200':
          description: підписаний email
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersEmailsItem'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '409':
          $ref: '#/components/responses/409Conflict'
    delete:
      tags:
        - users
      summary: Відписка від розсилки
      operationId: users_emails_delete
      description: |
        Відписка від розсилки
      parameters:
        - name: id
          in: path
          description: унікальна id запису для видалення
          required: true
          schema:
            type: integer
            example: 29
      responses:
        '200':
          description: email відписано успішно
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersEmailsItem'
  /user_deliveries:
    get:
      tags:
        - users
      summary: >-
        Отримати список "Збережені способи доставки користувача" для
        авторизованого юзера
      operationId: user_deliveries
      description: >
        Отримати список "Збережені способи доставки користувача" для
        авторизованого юзера
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: список "Список желаний"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersDeliveriesItem'
    post:
      tags:
        - users
      summary: Додати один спосіб отримання для авторизованого юзера
      operationId: user_deliveries_post
      description: Додати один спосіб отримання для авторизованого юзера
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UsersDeliveriesItem'
      responses:
        '200':
          description: доданий спосіб отримання
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersDeliveriesItem'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
    delete:
      tags:
        - users
      summary: Видалити спосіб отримання
      operationId: user_deliveries_delete
      description: Видалити спосіб отримання
      parameters:
        - $ref: '#/components/parameters/token'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: список "Список желаний"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UsersDeliveriesItem'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
  /users_sms:
    get:
      tags:
        - users
      summary: Получить список отправленных смс для авторизированного пользователя
      operationId: users_sms_get
      description: |
        Получить список отправленных смс для авторизированного пользователя
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: список отправленных смс
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersSms'
  /delivery_types:
    get:
      tags:
        - orders
      summary: Отримати список способів доставки
      operationId: delivery_types
      description: |
        Отримати список способів доставки
      parameters:
        - $ref: '#/components/parameters/conditions'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: список способів доставки
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryTypesItem'
  /users_devices:
    get:
      tags:
        - users
      summary: Получить список девайсов пользователя
      operationId: users_devices_get
      description: |
        Получить список девайсов пользователя
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: список девайсов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDeviceItem'
    post:
      tags:
        - users
      summary: Добавить уникальный id устройства
      operationId: users_devices_post
      description: Добавить уникальный id устройства
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UserDeviceItem'
      responses:
        '200':
          description: добавлено устройство
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/UserDeviceItem'
  /Общие_концепции_акций:
    get:
      tags:
        - promotions
      summary: ''
      operationId: promo_doc
      description: >
        Акционные условия находятся в 3 разположеных ниже запросах
         - promotion_catalog
         - promotions_tags
         - promotion_sets


         В них находятся несколько важных для акций полей
         (в promotions_tags поля вынесены на верхний уровень для удобства но названия у них такие же)

        в поле offer

            - "promotion_algorithm": "2" - по сути тип акции существинный различия от остальных есть (на данный) только в алгоритме 1 - комплекте

        Описание поля -

        id алгоритму акції (сума знижки може розраховна за допомогою полів
        operation_type та price_discount ) назви із сторонньої системи

          - 1   - комплект (TODO докладніше в пункті promotion_sets  )
          - 2   - скидка - звичайна знижка ( розраховується як звичайна знижка )
          - 6   - Скидка на позицию в чеке ( знижа на один з товарів у чеку (наприклад третій))
          - 8   - Bonus (, сумма) ( розмір бонусу розраховуеться так само як і в алгоритмі 2  )
          - 14  - Кредитные акции ( виводяться так само як і 16 )
          - 15  - Предзаказ (сейчас работает как 16)
          - 16  - вывод на сайт ( просто вивід товарів на сайт )

        Основная масса акций имеет алгоритмы 1, 2 и 8 в которых цена товара
        меняется


        Остальные алгоритмы скидок как таковых скидок не дают а просто выводят
        определенный список товаров


            - "operation_type": "Ничего",
            - "price_discount": "0",


        Для рсчета размера скидки нужно два выше указаных поля

        - price_discount - определяет размер скидки


        - правило по которому размер скидки высчитать


        Окончательная цена рассчитывается так -


        price - цена товара

        price_discount - значение поля price_discount


        СкидкаПроцент - price - ((price * price_discount) / 100)

        СкидкаСумма   - price - price_discount

        УстановкаЦены - price_discount (просто вместо основной цены установыть
        значение price_discount)

        Ничего        - price (не менять цену)

            "key_set": "0",
            "order_set": "0",

        Поля для упорялочивания комплектов (если алгоритм не 1 то значения полей
        0)


        - key_set - id комплекта в акции
          Все товары с одинаковым key_set в пределах одной promotion_setting_id (или setting.id)
          принадлежат одному комплекту

        - order_set - порядок товара в комплекте



        То-есть если в комплекте есть три товара и значение этого поля равняется
        1 то это основной товар

        комплекта если больше то то один из дополнительных. При значении 2 товар
        располагается во воторой

        ячекйке комплекта, при значении 3 в третей и т.д.


        Так как в одной ячейке комплекта


        В поле setting

        "discount_type": "ПодарочнаяКартаVRT",
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /Меню_фильтров_акции:
    get:
      tags:
        - promotions
      summary: "Отримати список ІД товарів для акції з ІД№ ***"
      operationId: promo_filters_doc
      description: |
        Акційні фільтри створюються наступним чином:

        Є масив основних категорій меню з рекурсивними дочірніми категоріями під ключем children. Це саме дерево меню https://api.eldorado.ua/v1/menu_output?lang=ru.

        Для того щоб отримати активні ІД категорій, які треба відображати в фільтрах - треба виконати запит
        https://api.eldorado.ua/v1/goods?get_ids_by_cat_and_promo&promotion_id=4493, який поверне об"єкт з ключами ІД категорій. Ці ключі - це і є ті категорії, які треба відобразити в фільтрах на сторінці акцій.

        Для цього по масиву з меню треба пройти рекурсивно і відсіяти ті категорії яких немає в КЛЮЧАХ об"єкту який повернувся з https://api.eldorado.ua/v1/goods?get_ids_by_cat_and_promo&promotion_id=4493

        Після цього вивести меню для вибору користувачу, і вибрану категорію передавати в запити на атрибути і товари акції. (параметр categoryId)
      parameters:
        - name: promotionId
          in: query
          description: id категории
          required: false
          schema:
            type: string
            example: categoryId = 123123
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: string
  /promotion_goods_list:
    get:
      tags:
        - promotions
      summary: Отримати список відфільтрованих id акційних товарів
      operationId: promotion_goods_list
      description: |
        Отримати список відфільтрованих id акційних товарів
      parameters:
        - name: categoryId
          in: query
          description: id категории
          required: false
          schema:
            type: string
            example: categoryId = 123123
        - name: promotionId
          in: query
          description: |
            id акції
          required: true
          schema:
            type: string
          example: '1234'
        - name: order
          in: query
          description: |
            Параметр может принимать несколько значений.


            Ниже объяснения по каждому значению


            **popularity** - стандартная сортировка (визуализируется как
            популярность)


            **priceUp** - от дешевых к дорогим


            **priceDown** - от дорогих к дешевым


            **titleUp** - в алфавитном порядке


            **titleDown** - в порядке противополжном алфавитному
          required: false
          schema:
            type: string
            enum:
              - popularity
              - priceUp
              - priceDown
              - titleUp
              - titleDown
            example: >-
              attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683&order=popularity
        - name: attributes
          in: query
          description: >
            формирование строки фильтрации аналогично таковому в запросе

                promotion_goods_attributes_list

            то есть если нужно получить список id товаров для набора фильтров по
            запросу

                /v1/promotion_goods_attributes_list?categoryId=1042092&promotionId=123&attributes=11617=170-545/producer=bosch


            нужно подставить такую же строку и в этот запрос

                /v1/promotion_goods_list?categoryId=1042092&promotionId=123&attributes=11617=170-545/producer=bosch
          required: false
          schema:
            type: string
            example: 'attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683'
      responses:
        '200':
          description: полученый полный список id товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsListItem'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /promotion_goods_attributes_list:
    get:
      tags:
        - promotions
      summary: Получить список фильтров для акционной страницы
      operationId: promotion_goods_attributes_list
      description: |
        Получение форматированого списка фильтров для страницы акции
      parameters:
        - name: categoryId
          in: query
          description: id категории
          required: false
          schema:
            type: string
            example: categoryId = 123123
        - name: promotionId
          in: query
          description: |
            id акції
          required: true
          schema:
            type: string
          example: '1234'
        - name: attributes
          in: query
          description: >
            Cписок фильтров в указаном ниже формате


            Для фильтрации по значению определенного атрибута нужно указать
            значение атрибута

            с помощью оператора

                =

            В примере ниже (в блоке responses) для для фильтрации по "Система
            бритья" со значением "роторная"


            нужно передать в параметр **attributes** значение *id* данного
            аттрибута *Система бритья*


            в который через опреатор передать значение **value_default_id** из
            одного из елементов

            поля **defaultValues**


            то есть в результате выйдет конструкция

                attributes=1938=1960

            значение *id* аттрибута может быть как числом так строкой (например
            **producer**)


            значение value_default_id может быть как числом так строкой
            (например **samsung** или **199-250**)


            Что бы указать несколько значений атрибутов их нужно указать через

                ,

            например

                attributes=1938=1960,1961



            Для фильтрации по нескольким атрибутам их нужно перечислить через

                /

            Например

                attributes=1938=1960/producer=samsung/1212=1111

            так же одновременно можно указывать и несколько значений

                attributes=1938=1960,1961/producer=samsung,xiaomi

            в результате выйдет запрос вида

                /promotion_goods_attributes_list?categoryId=1042092&promotionId=123&attributes=1938=1960,1961/producer=bosch,xiaomi/11617=170-545

            и будет возвращен уже новый список атрибутов (они же фильтры)


            ### Относительно полей в модели атрибута (GoodsAttributesListItem)


            В модели атрибута точно будут возвращены только поля с пометкой * -
            *required* в схеме ответа


            Все остальные возвращаются опционально и нужны в основном только для
            сайта
          required: false
          schema:
            type: string
            example: 'attributes=producer=samsung,xiaomi/2256=2414,2418/5045=37683'
      responses:
        '200':
          description: полученый полный список фильтров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsAttributesListItem'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /promotion_catalog:
    get:
      tags:
        - promotions
      summary: Получить товары для каталога акций
      operationId: promotion_catalog
      description: |
        Получить акционную информацию для указаных товаров
      parameters:
        - name: withGoods
          in: query
          description: >-
            определяет получать ли товар в запрашиваемом объекте (рекомендуется
            не использовать)
          required: false
          schema:
            type: string
            nullable: true
        - name: goods_ids
          in: query
          description: |
            список id товаров
          required: true
          schema:
            type: string
          example: '111111,222222,333333'
        - name: promotion_id
          in: query
          description: id акции
          required: true
          schema:
            type: string
            example: 667
        - $ref: '#/components/parameters/promoRelations'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: полученый набор запрашиваемых товаров для акции
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromotionCatalogGoodWithSet'
        '404':
          $ref: '#/components/responses/404NotFound'
  /promotion_sets:
    get:
      tags:
        - promotions
      summary: Получить только акционные комплекты по указаным товарам
      operationId: promotions_set
      description: |
        Получить только акционные комплекты по указаным товарам
      parameters:
        - name: condtions
          in: query
          description: Условия запроса
          required: true
          schema:
            type: string
            example: id = 123
        - $ref: '#/components/parameters/promoRelations'
      responses:
        '200':
          description: список акционных комплектов по указаным товарам
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromotionCatalogGoodWithSet'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /promotions_tags:
    get:
      tags:
        - promotions
      summary: Получить акционные теги
      operationId: promotion_tags
      description: |
        Получить акционные теги по указаным критериям
      parameters:
        - name: get_promo_by_goods
          in: query
          description: Определяет фомат ответа. Параметр оставлять пустым.
          required: true
          allowEmptyValue: true
          schema:
            type: string
            example: get_promo_by_goods
        - name: goods_ids
          in: query
          description: Список id товаров по которым будут получены акционные теги
          required: true
          schema:
            type: string
            example: goods_ids=12132
        - name: outputPosition
          in: query
          description: |
            Место вывода тега
              - checkout - страница чекаута (<a href='https://eldorado.ua/checkout/'> https://eldorado.ua/checkout/ </a> - для входа нужен товар в корзине)
              - catalog - любая страница каталога как обычного (<a href='https://eldorado.ua/smartphones/c1038946/'> https://eldorado.ua/smartphones/c1038946/ </a>), так т акционного (<a href='https://eldorado.ua/promotion/611/'> https://eldorado.ua/promotion/611/ </a>)
              - cart - вывод в модальном окне корзины (сейчас почти не используется для вывода в корзину чаще используется checkout)
              - product - вывод тега на страницу товара (<a href='https://eldorado.ua/smartfon-samsung-sm-j600-galaxy-j6-black-sm-j600-fzkdsek-/p71252394/'> https://eldorado.ua/smartfon-samsung-sm-j600-galaxy-j6-black-sm-j600-fzkdsek-/p71252394/ </a>)
              - promotion - вівод тега толко на акционный каталог (<a href='https://eldorado.ua/promotion/611/'> https://eldorado.ua/promotion/611/ </a>)
              - all_promo_page - тег для фильтрации акций на странице всех акций по типам (<a href='https://eldorado.ua/promotions/'> https://eldorado.ua/promotions/ </a> - галочки на сиранице)

              **Любой тег может облядать множеством мест для вывода но запрашивать можно только по одному**
          required: true
          schema:
            type: string
            example: outputPosition='product'
            enum:
              - checkout
              - catalog
              - cart
              - product
              - promotion
              - all_promo_page
      responses:
        '200':
          description: список акционных тегов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromotionTagItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  '/promotions{promotions_slider_list}':
    get:
      tags:
        - promotions
      summary: Отримати список акцій
      operationId: 'promotions{promotions_slider_list}'
      description: |
        Отримати список акцій
      parameters:
        - name: promotions_slider_list
          in: path
          description: Параметр котрий змінює формат відповіді
          required: true
          schema:
            type: string
            example: '?promotions_slider_list'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: список акцій
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromotionSliderItem'
  /promotion_images:
    get:
      tags:
        - promotions
      summary: Отримати набір зображень для акцій
      operationId: promotion_images
      description: |
        Отримати набір зображень для акцій
      parameters:
        - $ref: '#/components/parameters/conditions'
      responses:
        '200':
          description: список акцій
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromotionSliderItem'
  /push_service:
    post:
      tags:
        - service
      summary: Отправка push-увыедомления для мобильного устройства
      operationId: push_service_post
      description: |
        Отправка push-увыедомления для мобильного устройства
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushServiceItem'
            example:
              user_id: 25251
              device_id: wrtwtc34t34ct34c534c345
              title: Заголовок
              body: Текст
      responses:
        '200':
          description: список "Результат отправки"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/PushServiceItem'
  /promo_code:
    post:
      tags:
        - promotions
      summary: Перевірка валідності промо кода
      operationId: promo_code_post
      description: >
        Користувачу потрібно вивести input для вводу промо кода. \

        Input виводиться якщо виконується наступна умова:

        * серед всіх promotions_tags товарів корзини є  один з атрибутом
        is_promo_code (якщо є більше чим 1 - не виводити. Поки, що підтримується
        замовлення тільки з одним промо кодом). Важливо. Може бути два товара з
        одним і тим самим тегом, тому треба робити унікальність по id тега, і
        вже після цього дивитись чи він 1 чи більше.


        Після вводу промокода потрібно взяти promotions_setting_id з знайденого
        вище тега і значення з самого інпута і відправити в цей запит. \

        Якщо код відповіді 400. Промокод не валідний - показати це користувачу і
        попросити ввести промо код заново. \

        Якщо код відповіді 200 і is_activated = 1 - промо код валідний. В такому
        випадку:

        * до тих товарів в корзині, в яких є той промо тег по якому проводилась
        перевірка, додати наступні атрибути:
          - isActivatePromoCode
          - promoCode
          - promoCode1CTransactionId
          в такому вигляді товари повинні передатись при замовлені в POST /orders
        * при відправці необхідно наповнити масив promotions цією активованою
        акцією (див. POST /v1/orders параметр promotions)
      parameters:
        - name: promo_code
          in: path
          description: Промо код. До 10 символів
          required: true
          schema:
            type: string
            example: '1234567890'
        - name: promotion_setting_id
          in: path
          description: id налаштування акції
          required: true
          schema:
            type: string
            example: '3765'
      responses:
        '200':
          description: успішний результат перевірки промо кода
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/PromoCodeItem'
        '400':
          description: неуспішний результат перевірки промокода
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    type: object
                    format: binary
  /crm_logs:
    post:
      tags:
        - crm_logs
      summary: відправити проглянутий товар в CRM
      operationId: crm_logs_post
      description: |
        Відправити проглянутий користувачем товар в CRM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmLogs'
            example:
              user_phone: '380633333333'
              created_at: '2019-10-03 17:26:12'
              source: Site
              good_id: '1364443'
              type_code: PageView
              name: Телевизор KIVI 55UR50GU
              page_type_code: Product
              page_type_name: Product
              product_code: '71258436'
              product_site_category_code: '1038962'
              amount: '16999.00'
              link: 'https://eldorado.ua/led-tel-r-kivi-55-ur50-gu/p71258436/'
              os_type: MAC
              device_type: Phone
              device_model: XIAOMI
              mac: '00:0a:95:9d:68:16'
              ext_user_guid: a0e3ddb0-e5da-11e9-b2b1-0753dab371ed
      responses:
        '200':
          description: список "Результат отправки"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/PushServiceItem'
        '404':
          $ref: '#/components/responses/404NotFound'
  /menu_output:
    get:
      tags:
        - catalog
      summary: Отримання категорій для побудування меню
      operationId: menu_output
      description: >
        Отримання категорій для побудування меню \

        Для побудови дерева меню необхідно першим кроком отримати кореневі
        категорії, передавши в url параметр **mainCategories** \

        Далі для отримання підкатегорій для кожної кореневої категорії потрібно
        робити запит, передавши в url параметр **categoryId** \

        Якщо в отриманому запису поле `isNode=true` це означає, що ця категорія
        ще має в собі підкатегорії, які описані в масиві `children`. Він має
        таку ж саму структуру, як поточний об'єкт.
      parameters:
        - name: mainCategories
          in: query
          description: Отримання кореневих категорій меню
          schema:
            type: string
            example: '?mainCategories'
        - name: categoryId
          in: query
          description: Отримання підкатегорій меню
          schema:
            type: integer
            example: '?categoryId=1215257'
      responses:
        '200':
          description: Список категорій
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    format: binary
                  data:
                    $ref: '#/components/schemas/MenuOutput'
components:
  responses:
    404NotFound:
      description: records not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel404'
    400BadRequest:
      description: bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel400'
    409Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel409'
    403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel403'
  parameters:
    conditions:
      name: conditions
      in: query
      description: Условия запроса
      required: false
      schema:
        type: string
        example: id = 123
    offset:
      name: offset
      in: query
      description: >-
        Количество строк которые будут пропущены от начала результирующего
        набора.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limit:
      name: limit
      in: query
      description: Максимальное количество строк которые будут возвращены.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
    token:
      name: token
      in: query
      description: Токен авторизированого пользователя
      required: true
      schema:
        type: string
      example: $2y$08$bDFoTFQ2RzJGR1dteFFUdORFsBabgiIzRbORmagtg0n.H55JLQ6JS
    cat:
      name: cat
      in: query
      description: категория товара
      required: false
      schema:
        type: integer
        format: int32
      example: 1038958
    q:
      name: q
      in: query
      description: поисковый запрос
      required: true
      schema:
        type: string
      example: samsung
    columns:
      name: columns
      in: query
      description: выбор полей модели (не работает вместе с conditions)
      required: false
      schema:
        type: string
        example: 'id,title,desc,order_num'
    relations:
      name: relations
      in: query
      description: >-
        разом з моделями віддавати зв'язки (наприклад для goods віддати
        категорію)
      required: false
      schema:
        type: string
        example: 'category(id,title,order_num)'
    promoRelations:
      name: relations
      in: query
      description: |
        особый парметр добавляющий поля к ответу (описаны в схеме)
        слева написано значение параметра - справа добавляемое поле


            - promotions          - promotions
            - promotion_offers    - offer
            - promotion_settings  - setting
            - promotion_rules     - rule
      required: false
      schema:
        type: string
        example: |
          promotion_offers
        enum:
          - promotions
          - promotion_offers
          - promotion_settings
          - promotion_rules
          - manufacturer_image
          - images
          - manufacturer
          - credits
  schemas:
    ErrorBody:
      type: object
      properties:
        code:
          type: integer
          minimum: 400
          maximum: 600
        resource:
          type: string
          example: 'http://api.eldodev.org.ua/v1/goods?get_catalog_goods&extIds=12312'
        message:
          type: string
        data:
          type: object
    ErrorModel404:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorBody'
            - type: object
              properties:
                code:
                  example: 404
                message:
                  example: Not Found
                data:
                  type: object
                  example:
                    RECORDS_NOT_FOUND: Records not found
                    developer: TODO
    ErrorModel400:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorBody'
            - type: object
              properties:
                code:
                  example: 400
                message:
                  example: Bad Request
                data:
                  type: object
                  example:
                    WRONG_INPUT_PARAMETERS: good_ids is no specified
                    developer: TODO
    ErrorModel409:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorBody'
            - type: object
              properties:
                code:
                  example: 409
                message:
                  example: Conflict
                data:
                  type: object
                  example:
                    CONFLICT: Conflict
                    developer: TODO
    ErrorModel403:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorBody'
            - type: object
              properties:
                code:
                  example: 403
                message:
                  example: Forbidden
                data:
                  type: object
                  example:
                    FORBIDDEN: FORBIDDEN
                    developer: TODO
    SellStatusSchema:
      type: integer
      example: '4'
      nullable: true
      description: |
        Статус наличия товара.
        - 0 Продано
        - 1 Архивный
        - 2 Последний товар
        - 3 Заканчивается
        - 4 Есть в наличии
        - 5 Предзаказ
      minimum: 0
      maximum: 5
    CatalogGood:
      type: object
      properties:
        id:
          type: string
          example: '1354969'
          description: Уникальный id товара
        parent_id:
          type: string
          example: '1038946'
          nullable: true
          description: Уникальный id категории товара
        mpath:
          type: string
          example: '1038944,1038946'
          nullable: true
          description: >-
            последовательность принадлежности товара категориям перечисленая
            через запятую
        ext_id:
          type: string
          example: '71254762'
          description: Уникальный id товара из внешней CRM
        ext_category_id:
          type: string
          example: '1'
          nullable: true
          description: Уникальный id категории товара из внешней CRM
        sell_status:
          $ref: '#/components/schemas/SellStatusSchema'
        name:
          type: string
          description: Полное название товара в виде удобном для вывода в URL
          example: smartfon-samsung-sm-j600-galaxy-j6-lavenda-sm-j600-fzvdsek
        offer_id:
          type: string
          description: id товара для вывода в URL
          nullable: true
          example: '71254762'
        manufacturer_id:
          type: string
          description: id производителя товара
          nullable: true
          example: '468'
        is_active:
          type: string
          example: '1'
          description: |
            активность товара
             - 0 - товар не активен
             - 1 - товар активен
          minimum: 0
          maximum: 1
        title:
          type: string
          description: |
            Название товара на русском языке
          example: Смартфон SAMSUNG SM-J600 Galaxy J6 Lavenda (SM-J600FZVDSEK)
        title_ua:
          type: string
          description: |
            Название товара на украинском языке
          example: Смартфон SAMSUNG SM-J600 Galaxy J6 Lavenda (SM-J600FZVDSEK)
        desc_small:
          type: string
          description: Краткое описание товара
          example: Описание товара
        is_service:
          type: string
          description: >
            Признак того есть ли товар услугой (например установкой
            кондиционера)

            - 0 - товар не услуга

            - 1 - товар услуга
          example: '0'
        preorder_end_date:
          type: string
          format: date-time
          nullable: true
          example: '2019-02-19 00:41:40'
          description: |
            Дата акончания предзаказа
        total_mark:
          type: string
          description: |
            Оценка товара
          example: '3'
          minimum: 0
          maximum: 5
        comments_number:
          type: string
          description: |
            Количество комментариев товара
          example: '3'
        order_num:
          type: string
          description: >
            Порядок вывода товара в каталог при сортировке по умолчанию (или
            популярности)
          example: '12'
        price:
          type: string
          description: |
            Цена товара
          example: '4999.00'
        price_discount:
          description: |
            Старая цена товара
          type: string
          example: '5499.00'
        videos:
          type: string
          nullable: true
          example: null
        dnk_first:
          type: string
          nullable: true
          example: 5.6 ''
        dnk_second:
          type: string
          nullable: true
          example: 2 ГБ
        dnk_third:
          type: string
          nullable: true
          example: 32 ГБ
        dnk_fourth:
          type: string
          nullable: true
          example: 13 Мп
        colors_group:
          type: string
          nullable: true
          description: |
            ext_id товара главного в цветовой группе
          example: '71252394'
        color_hash:
          type: string
          nullable: true
          description: |
            Цвет товара
          example: 8470FF
        updated_at:
          type: string
          description: |
            Дата последнего обновления товара
          example: '2019-02-19 00:41:40'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageCatalogItem'
        credits:
          $ref: '#/components/schemas/CreditCatalogItem'
        manufacturer:
          $ref: '#/components/schemas/ManufacturerCatalogItem'
        manufacturer_image:
          $ref: '#/components/schemas/ManufacturerImageCatalogItem'
    PromoCategoriesGoods:
      type: object
      properties:
        1038939:
          type: string
          example: "1362377,1361703,1318511,1367183,1181966,1208299,1254388,1118619"
          description: Ключ это ИД категории, а значение это ИД товаров этой категории
    CommentItemBase:
      type: object
      required:
        - comment
        - user_profile_id
        - goods_id
        - parent_id
        - status
        - type
      properties:
        goods_id:
          type: string
          description: id товара к которому был оставлен комментарий
          example: '1358879'
        user_profile_id:
          type: string
          description: id profile-a юзера
          example: '516111'
        parent_id:
          type: string
          nullable: true
          description: >-
            id родительского комментария (если есть), в случае его отсутсвия
            значение 0
          example: '0'
        comment:
          type: string
          description: Текст комментария
          example: |
            Сразу начну с хорошего.
        advantages:
          type: string
          description: Преимущества товара
          example: |
            Яркая, сочная картинка после настройки
        disadvantages:
          type: string
          description: Недостатки товара
          example: |
            Высокая минимальная яркость
        type:
          type: string
          description: Тип комментария обзор ('r') или вопрос ('q')
          enum:
            - r
            - q
          example: r
        status:
          type: string
          description: |
            Статус коментария
             - 0 - не промодерирован
             - 1 - промодерирован
          enum:
            - 0
            - 1
          example: '1'
        using_time_id:
          type: string
          description: |
            Время использования товара
            - 1 - 1-2 дня
            - 2 - больше 1 месяца
            - 3 - больше 1 года
          example: '1'
          enum:
            - 1
            - 2
            - 3
        rating_value:
          type: integer
          minimum: 1
          maximum: 5
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          description: |
            Значение оценки товара пользователем
          example: 4
    CommentItemSimple:
      type: object
      properties:
        id:
          type: string
          description: ункальный id комментария
          example: '153959'
        goods_id:
          type: string
          description: id товара к которому был оставлен комментарий
          example: '1358879'
        user_profile_id:
          type: string
          description: id profile-a юзера
          example: '516111'
        parent_id:
          type: string
          nullable: true
          description: >-
            id родительского комментария (если есть), в случае его отсутсвия
            значение 0
          example: '0'
        rating_id:
          type: string
          description: id записи с рейтингом комментария
          example: '8297'
        using_time_id:
          type: string
          description: id записи с временем использования товара
          example: '1'
        comment:
          type: string
          description: Текст комментария
          example: |
            Сразу начну с хорошего.
        advantages:
          type: string
          description: Преимущества товара
          example: |
            Яркая, сочная картинка после настройки
        disadvantages:
          type: string
          description: Недостатки товара
          example: |
            Высокая минимальная яркость
        likes:
          $ref: '#/components/schemas/CommentsLikesItem'
        dislikes:
          type: string
          deprecated: true
          example: null
        type:
          type: string
          description: Тип комментария обзор ('r') или вопрос ('q')
          enum:
            - r
            - q
          example: r
        status:
          type: string
          description: |
            статус комментария
            - 0 - неактивный
            - 1 - активный
          enum:
            - 0
            - 1
          example: '1'
        user_name:
          type: string
          nullable: true
          description: Указаное пользователем имя
          example: null
        email:
          type: string
          nullable: true
          description: Указаный пользователем email
          example: vsc_79@mail.ru
        created_at:
          type: string
          description: Время создания комментария
          example: '2019-02-17 10:43:55'
        updated_at:
          type: string
          description: Время последенего редактирования комментария
          example: '2019-02-18 10:57:18'
    CommentUsingTimeItem:
      type: object
      properties:
        title:
          type: string
          example: 1-2 дня
        title_ua:
          type: string
          example: 1-2 дні
        id:
          type: string
          example: '1'
    CommentRatingItem:
      type: object
      properties:
        id:
          type: string
          example: '8297'
        goods_id:
          type: string
          example: '1358879'
        rating_value:
          type: string
          example: '4'
    CommentUserProfileItem:
      type: object
      properties:
        first_name:
          type: string
          example: 'Виталий '
        user_id:
          type: string
          example: '516111'
    UsersPriceWatchItem:
      type: object
      properties:
        id:
          type: string
          description: Уникальный id записи слежения за ценой
          example: '543'
        user_id:
          type: string
          description: id пользователя следящего за ценой
          example: '17399'
        good_id:
          type: string
          description: id товара за которым следят
          example: '1219818'
        price:
          type: string
          description: цена на момент сохранения цены
          example: '1499.00'
        sended_price:
          type: string
          description: цена отправленая пользователю в письме *(техническое поле)
          example: '1499.00'
        updated_at:
          type: string
          format: date-time
          description: дата последнего изменения записи
          example: '2018-06-10 22:47:52'
        created_at:
          type: string
          format: date-time
          description: дата создания записи
          example: '2018-06-10 22:47:52'
    UsersProfileItem:
      type: object
      properties:
        id:
          type: integer
          description: унікальний id профілю
          example: '543'
        user_id:
          type: integer
          description: id користувача
          example: '555'
        last_name:
          type: string
          description: прізвище користувача
          example: Вейдер
        first_name:
          type: string
          description: ім'я користувача
          example: Дарт
        middle_name:
          type: string
          description: по-батькові
          example: ''
        birthday:
          type: string
          description: дата народження в форматі yyyy-mm-dd
          example: '1999-12-31'
        gender:
          type: boolean
          description: 'стать користувача 0 - жіноча, 1 - чоловіча'
          example: '1'
        updated_at:
          type: string
          format: date-time
          description: дата останньої зміни запису
          example: '2018-06-10 22:47:52'
        created_at:
          type: string
          format: date-time
          description: дата створення запису
          example: '2018-06-10 22:47:52'
    UsersFeedbackItem:
      type: object
      properties:
        category_id:
          type: integer
          description: id категорії з `/users_feedback_categories`
          example: '2'
        user_id:
          type: integer
          description: id користувача
          example: '54'
        parent_id:
          type: integer
          description: id звернення якщо це відповідь. NULL - якщо це звернення
        message:
          type: string
          example: Привет!...
        replies:
          type: array
          items:
            $ref: '#/components/schemas/UsersFeedbackItem'
    UsersFeedbackCategoriesItem:
      type: object
      properties:
        id:
          type: integer
          description: унікальний id
          example: '2'
        title:
          type: integer
          description: назва категорії російською мовою
          example: 'Сервис, возврат'
        title_ua:
          type: string
          description: назва категорії українською мовою
          example: 'Сервіс, повернення'
        key:
          type: string
          example: null
    UsersProfileBonusesItem:
      type: object
      properties:
        user_id:
          type: integer
          description: id користувача
          example: '555'
        bonuses:
          type: integer
          description: активні бонуси
          example: 199
        not_active_bonuses:
          type: integer
          description: 'неактивні бонуси, стають активними через 14 днів після покупки'
          example: 423
    CommentsItem:
      allOf:
        - $ref: '#/components/schemas/CommentItemSimple'
        - $ref: '#/components/schemas/CommentUsingTimeItem'
        - $ref: '#/components/schemas/CommentRatingItem'
        - $ref: '#/components/schemas/CommentUserProfileItem'
        - type: object
          properties:
            children:
              $ref: '#/components/schemas/CommentItemSimple'
    CommentsLikesItem:
      type: object
      properties:
        id:
          type: string
          example: '5503'
        comment_id:
          type: string
          description: id комментария к которому был оставлен лайк или дизлайк
          example: '153959'
        user_profile_id:
          type: string
          description: id профиля пользователя
          example: '988793'
        liked:
          type: string
          description: |
            тип лайка
            - 0 - дизлайк
            - 1 - лайк
          enum:
            - 0
            - 1
          example: '1'
    GoodsVideosItem:
      type: object
      properties:
        id:
          type: string
          example: '5503'
        goods_id:
          type: string
          description: id товара
          example: '153959'
        ext_id:
          type: string
          description: внешний id товара
          example: '988793'
        video:
          type: string
          description: id видео из youtube
          example: '153959'
    GoodsAttributesItem:
      type: object
      properties:
        id:
          type: string
          description: Уникальный id атрибута
          example: '2306'
        type_id:
          type: string
          description: |
            Тип атрибута

              - 1 - Текстовий
              - 2 - Вибір
              - 3 - Мультивибір
              - 4 - Прапорець
              - 5 - Число
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          example: '2'
        name:
          type: string
          description: |
            Имя атрибута латинскими буквами
          example: Built-in_camera_smart
        title:
          type: string
          description: |
            Имя атрибута (рус)
          example: Основная камера
        title_ua:
          type: string
          description: |
            Имя атрибута (укр)
          example: Основна камера
        unit:
          type: string
          description: |
            Имя единицы измерения (рус)
          example: Мп
        unit_ua:
          type: string
          description: |
            Имя единицы измерения (укр)
          example: Мп
        glossary:
          type: string
          example: ''
        glossary_ua:
          type: string
          example: ''
        order_num:
          type: string
          description: |
            Порядок вывода характеристик на карте товара
          example: '2'
        order_filter:
          type: string
          description: |
            Порядок вывода характеристик в каталоге
          example: '14'
        small_description_priority:
          type: string
          example: '6'
        goods_cat_id:
          type: string
          description: |
            id категории к котрой относится атрибут
          example: null
        group_id:
          type: string
          description: |
            id группы атрибутов к котрой относится атрибут
          example: '2382'
        is_filter:
          type: string
          example: '1'
        is_active:
          type: string
          example: '1'
        is_index:
          type: string
          example: '1'
        is_in_admin:
          type: string
          example: '1'
        created_at:
          type: string
          format: date-time
          example: '2016-11-16 18:23:52'
        updated_at:
          type: string
          format: date-time
          example: '2018-09-06 16:23:25'
        seo_title_value:
          type: string
          example: с основной камерой
        seo_title_value_ua:
          type: string
          example: з основною камерою
        seo_h1_value:
          type: string
          example: null
        seo_h1_value_ua:
          type: string
          example: null
        seo_description_value:
          type: string
          example: null
        seo_description_value_ua:
          type: string
          example: null
        seo_text_value:
          type: string
          example: null
        seo_text_value_ua:
          type: string
          example: null
        seo_robots:
          type: string
          example: null
        seo_canonical:
          type: string
          example: null
        value:
          type: array
          items:
            $ref: '#/components/schemas/GoodsAtributesOutputValueItem'
        default_values:
          type: array
          items:
            $ref: '#/components/schemas/GoodsAttributesDefaultValuesItem'
    GoodsAtributesOutputValueItem:
      type: object
      properties:
        id:
          type: string
          description: |
            Уникальный id значения атрибута
          example: '29560987'
        attribute_id:
          type: string
          description: |
            id атрибута к которому относится значение
          example: '2306'
        goods_id:
          type: string
          description: |
            id товара к которому относится значение
          example: '1389523'
        value_default_id:
          type: string
          description: |
            id одного из значений по умолчанию к которому относится значение
          example: '81121'
        value_text:
          type: string
          nullable: true
          description: >
            При значении поля type_id = 1 (Текстовый) - текстовое значение
            атрибута (рус)
          example: null
        value_text_ua:
          type: string
          description: >
            При значении поля type_id = 1 (Текстовый) - текстовое значение
            атрибута (укр)
          example: null
        value_checkbox:
          type: string
          example: null
        value_int:
          type: string
          example: null
        value_numeric:
          type: string
          example: null
    GoodsAttributesDefaultValuesItem:
      type: object
      properties:
        id:
          type: string
          description: |
            Уникальный id значения атрибута по умолчанию
          example: '2540'
        attribute_id:
          type: string
          description: |
            id атрибута к которому относится значение по умолчанию
          example: '2306'
        ext_id:
          type: string
          example: null
        icon:
          type: string
          example: null
        title:
          type: string
          description: |
            (Значение) Название значения по умолчанию (рус)
          example: '2'
        title_ua:
          type: string
          description: |
            (Значение) Название значения по умолчанию (укр)
          example: '2'
        created_at:
          type: string
          format: date-time
          example: '2016-11-16 18:28:39'
        updated_at:
          type: string
          format: date-time
          example: '2018-09-04 14:12:06'
        is_active:
          type: string
          example: '1'
        order_num:
          type: string
          description: |
            Порядок значений по умолчанию
          example: '20'
        source:
          type: string
          example: null
        seo_title_value:
          type: string
          example: null
        seo_filter_value:
          type: string
          example: 2 Мп
        seo_filter_value_ua:
          type: string
          example: null
        seo_title_value_ua:
          type: string
          example: null
        seo_h1_value:
          type: string
          example: ''
        seo_h1_value_ua:
          type: string
          example: null
        seo_text_value:
          type: string
          example: ''
        seo_text_value_ua:
          type: string
          example: null
        seo_robots:
          type: string
          example: null
        seo_canonical:
          type: string
          example: ''
        is_index:
          type: string
          example: '1'
        seo_description_value:
          type: string
          example: null
        seo_description_value_ua:
          type: string
          example: null
    GoodsAttributesGroupsOutput:
      type: object
      required:
        - id
        - name
        - name_ua
        - loading
        - toggled
        - attributes
      properties:
        id:
          type: string
          description: >
            Уникальный id группы характеристик (Если равно 0 то это особоая
            группа характеристик 'Основные характеристики' в нее попадают все
            характеристики без группы и возвращаемый объект состоит тольк и
            полей указаных как required*)
          example: '2382'
        goods_cat_id:
          type: string
          description: |
            id категории к которой относится группа характеристик
          example: '1038946'
        parent_id:
          type: string
          example: null
        mpath:
          type: string
          example: null
        icon:
          type: string
          example: null
        name:
          type: string
          description: |
            Название группы характеристик (рус)
          example: Камера
        name_ua:
          type: string
          description: |
            Название группы характеристик (укр)
          example: Камера
        descr:
          type: string
          description: |
            Описание группы характеристик (рус)
          example: ''
        descr_ua:
          type: string
          description: |
            Описание группы характеристик (укр)
          example: ''
        order_num:
          type: string
          description: |
            Порядок вывода группы характеристик
          example: '7'
        created_at:
          type: string
          example: '2016-11-16 18:22:32'
        updated_at:
          type: string
          example: '2018-08-28 13:58:10'
        loading:
          type: string
          description: |
            Служебыный флажок
          example: false
        toggled:
          type: string
          description: |
            Служебыный флажок
          example: true
        children:
          type: string
          example: null
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/GoodsAttributesItem'
    ImageCatalogItem:
      type: object
      properties:
        group_name:
          type: string
          example: images
        href:
          type: string
          example: goods_images/1038946/6193179-1530093338.jpg
        order_num:
          type: string
          example: '0'
        width:
          type: string
          example: '297'
        height:
          type: string
          example: '580'
        record_id:
          type: string
          example: '1354969'
    GoodsListItem:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: '1313377'
          description: id товара
    GoodsAttributesListItem:
      type: object
      required:
        - id
        - title
        - title_ua
        - defaultValues
      properties:
        id:
          type: string
          example: '1938'
          description: id атрибута товара
        title:
          type: string
          example: Система бритья
          description: Имя атрибута для вывода на клиент (рус)
        title_ua:
          type: string
          example: Система гоління
          description: Имя атрибута для вывода на клиент (укр)
        defaultValues:
          type: array
          description: список значений данного атрибута
          items:
            $ref: '#/components/schemas/GoodsListAttributeDefaultValue'
        type_id:
          type: string
          example: '3'
        name:
          type: string
          example: Razor_Type
          description: системное имя атрибута
        unit:
          type: string
          example: ''
        unit_ua:
          type: string
          example: ''
        glossary:
          type: string
          example: ''
        glossary_ua:
          type: string
          example: ''
        order_num:
          type: string
          example: '1'
        order_filter:
          type: string
          example: '1938'
        small_description_priority:
          type: string
          example: null
        goods_cat_id:
          type: string
          example: null
        group_id:
          type: string
          example: '12714'
        is_filter:
          type: string
          example: '1'
        is_active:
          type: string
          example: '1'
        is_index:
          type: string
          example: '1'
        is_in_admin:
          type: string
          example: '1'
        created_at:
          type: string
          format: date-time
          example: '2016-11-16 18:23:50'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-09 15:12:01'
        seo_title_value:
          type: string
          example: null
        seo_title_value_ua:
          type: string
          example: null
        seo_h1_value:
          type: string
          example: null
        seo_h1_value_ua:
          type: string
          example: null
        seo_description_value:
          type: string
          example: null
        seo_description_value_ua:
          type: string
          example: null
        seo_text_value:
          type: string
          example: null
        seo_text_value_ua:
          type: string
          example: null
        seo_robots:
          type: string
          example: null
        seo_canonical:
          type: string
          example: null
    GoodsListAttributeDefaultValue:
      type: object
      properties:
        value_default_id:
          type: string
          example: '1960'
          description: значение атрибута
        title:
          type: string
          example: роторная
          description: Имя значения атрибута для вывода на клиент (рус)
        title_ua:
          type: string
          example: роторна
          description: Имя значения атрибута для вывода на клиент (укр)
        count:
          type: string
          example: '3'
          description: >-
            количество товаров которые которые соответсвуют этому значению
            атрибута
        attribute_id:
          type: string
          example: '1938'
          description: id атрибута к которому относится значение
        seo_title_value:
          type: string
          example: null
        seo_filter_value:
          type: string
          example: null
        seo_h1_value:
          type: string
          example: 'Роторные электробритвы {brand}'
        seo_description_value:
          type: string
          example: null
        seo_text_value:
          type: string
          example: ''
        seo_robots:
          type: string
          example: null
        seo_canonical:
          type: string
          example: ''
        is_index:
          type: string
          example: '1'
    GoodsCategoryItem:
      type: object
      properties:
        id:
          type: string
          example: '1038946'
        parent_id:
          type: string
          example: '1038944'
        mpath:
          type: string
          example: '1038944'
        google_id:
          type: string
          example: '267'
        name:
          type: string
          example: smartphones
        title:
          type: string
          example: Смартфоны
        descr:
          type: string
          example: ''
        img_href:
          type: string
          example: /offers/154/154359.jpg
        erp_id:
          type: string
          example: '0'
        order_num:
          type: string
          example: '1'
        is_active:
          type: string
          example: '1'
        dnk_first:
          type: string
          example: '2256'
        dnk_second:
          type: string
          example: '17401'
        dnk_third:
          type: string
          example: '17399'
        dnk_fourth:
          type: string
          example: '2306'
        keywords:
          type: string
          example: ''
        seo_title_value:
          type: string
          example: >-
            Смартфоны - купить телефон в Киеве, Харькове, Одессе, Днепре, Львове
            и других городах Украины: отзывы о смартфонах | Eldorado.ua
        seo_h1_value:
          type: string
          example: ''
        seo_description_value:
          type: string
          example: >-
            ⭐ Смартфоны в интернет-магазине Eldorado.ua ✅ Самые низкие цены!
            Купить Смартфоны с доставкой по Украине ✅ Заказывайте прямо сейчас ☎
            Тел: 0800 502-2-55
        seo_text_value:
          type: string
          example: >
            <h2>Покупка смартфона</h2> <p>Смартфон &mdash; неотъемлемый элемент
            повседневной жизни, он находится с нами большую часть времени,
            выполняя незаурядные функции. Поэтому важно, чтобы телефон был
            удобен, отвечал заявленным требованиям.</p> <p>На страницах
            онлайн-магазина Eldorado можно купить смартфон разного ценового
            сегмента, более чем от 24 производителей.</p> <h2>Как выбрать модель
            смартфона</h2> <p>Характеристики техники зависят от таких
            показателей, как: производитель, версия, стоимость. Инструкция к
            телефону содержит всю необходимую информацию о выбранной модели.</p>
        created_at:
          type: string
          format: date-time
          example: '2019-03-20 14:12:08'
        updated_at:
          type: string
          format: date-time
          example: '2019-03-25 14:46:53'
    CreditCatalogItem:
      type: object
      properties:
        id:
          type: string
          example: '60121'
        ext_id:
          type: string
          example: '71254762'
        good_id:
          type: string
          example: '1354969'
        multiplier:
          type: string
          example: '20'
        is_overpayment:
          type: string
          example: '0'
        is_hidden:
          type: string
          example: '0'
        credit_conditions_text:
          type: string
          example: ' '
        is_active:
          type: string
          example: '1'
        pay_part:
          type: string
          example: '20'
        mono_pp:
          type: string
          example: '10'
        price_type:
          type: string
          example: '0'
        created_at:
          type: string
          example: '2019-02-16 09:44:55'
        updated_at:
          type: string
          example: '2019-02-16 09:44:55'
    ManufacturerCatalogItem:
      type: object
      properties:
        id:
          type: string
          example: '468'
        title:
          type: string
          example: SAMSUNG
        image_href:
          type: string
          example: /producers/0/361.png
        name:
          type: string
          example: samsung
    ManufacturerImageCatalogItem:
      type: object
      properties:
        href:
          type: string
          example: /producers/0/361.png
        record_id:
          type: string
          example: '468'
    PromotionTagItem:
      type: object
      properties:
        tag_id:
          type: string
          example: '13314805'
          description: Уникальный id тега
        good_id:
          type: string
          example: '1389523'
          description: id товара к которому относится тег
        promotion_id:
          type: string
          description: id акции к которой относится тег
          example: '3117'
        tag_name:
          type: string
          description: Техническое название акции
          example: '"Покупка частями" до 10 платежей'
        is_promo_code:
          type: string
          description: Флажок определяющий нужен ли для активации акции промокод
          enum:
            - 0
            - 1
          example: '0'
        promo_code_nn:
          type: string
          description: Уникальный id для активации промокода
          example: null
        small_description:
          type: string
          description: Краткое описание акции
          nullable: true
          example: ''
        promotion_algorithm:
          type: string
          description: Тип акции и механизм ресчета скидки @TODO (позже будут описаны все)
          example: '16'
        discount_type:
          type: string
          example: Деньги
          description: |
            Тип выплаты скидки
              - Деньги - скидка напрямую на товар отнимается от цены
              - БонусыНаПК - бонусы на карту лояльности
              - ПодарочнаяКартаVRT - бонус на текущий чек
          enum:
            - Деньги
            - БонусыНаПК
            - ПодарочнаяКартаVRT
        promotion_setting_id:
          type: string
          description: id настройки акции к которой относится тег
          example: '6755'
        operation_type:
          type: string
          description: |
            Тип операции для расчета скидки
              - ЦенаПроцент         - не используется
              - РаспределениеСкидки - не используется
              - РучнаяСкидка        - не используется
              - ЦенаПоПрайсу        - не используется
              - СкидкаПроцент       - скидка в процентах от текущей цены
              - Ничего              - не выполнять никаких операций
              - УстановкаЦены       - установыить новую цену
              - СкидкаСумма         - скидка на фиксированую сумму
          example: Ничего
          enum:
            - ЦенаПроцент
            - РаспределениеСкидки
            - РучнаяСкидка
            - ЦенаПоПрайсу
            - СкидкаПроцент
            - Ничего
            - УстановкаЦены
            - СкидкаСумма
        price_discount:
          type: string
          description: Размер скидки над которой выполняется операция **operation_type**
          example: '0'
        key_set:
          type: string
          example: '0'
        output_order:
          type: string
          example: '5'
        image_url:
          type: string
          description: Ссылка на изображение
          example: promotions_tags_images/777-1554813955.png
        image_name:
          type: string
          example: '777'
        payment_count:
          type: string
          description: >-
            Параметр необходимый для указания количства частей акции если акция
            кредитная
          example: '0'
        priority:
          type: string
          description: >-
            Приоритет вывода тега на товар (чем выше приоритет тем выше стоит
            тег)
          example: '5'
        title:
          type: string
          description: название тега
          example: Покупка частями
        location:
          type: string
          example: 'product,catalog,promotion,cart,all_promo_page,checkout'
        tag_type:
          type: string
          example: regular
        dynamic_part_text:
          type: string
          description: >-
            Текс для вывода при наведении (@TODO есть определенная логика с
            параметрами для вывода и расчета скидки прямо тут)
          example: Покупка частями
    RemainItem:
      type: object
      properties:
        id:
          type: string
          example: '3273749'
        warehouse_id:
          type: string
          example: '90'
        goods_id:
          type: string
          example: '1387177'
        quantity:
          type: string
          example: '210'
        changed:
          type: string
          example: '2019-04-04 00:01:26'
        ext_id:
          type: string
          example: '1173600509'
        price_retail:
          type: string
          example: '0.00'
        price_discount:
          type: string
          example: '0.00'
        ext_doc_no:
          type: string
          example: null
        ext_scale_of_discount_id:
          type: string
          example: null
        kf:
          type: string
          example: '0'
        kf_internet:
          type: string
          example: '0'
        operation_type:
          type: string
          example: null
        is_updated:
          type: string
          example: null
    SearchItem:
      type: object
      properties:
        stards:
          type: object
        hits:
          type: object
          properties:
            total:
              type: integer
              example: 4513
              description: общее к-ство товаров в массиве
            hits:
              type: array
              description: 'массив товары подпадающие под запрос, смотреть только на id'
              items:
                $ref: '#/components/schemas/CatalogGood'
        aggregations:
          type: object
          properties:
            categories:
              type: object
              properties:
                buckets:
                  type: array
                  items:
                    $ref: '#/components/schemas/SearchCategoryAggrItem'
                  description: агрегация категорий
        similarQueries:
          type: array
          items:
            type: object
            properties:
              query:
                type: string
                example: ноутбу
              num:
                type: integer
                example: 2341
        mpath:
          type: string
          example: '1038944,1038946'
          nullable: true
          description: >-
            последовательность принадлежности товара категориям перечисленая
            через запятую
    BestOffersItem:
      type: object
      description: група категорій кращих пропозицій
      properties:
        goods:
          type: string
          example: '71269170-511-0-71269170,71279685-523-0-71278141,71258526-518-0-71258526'
          description: |
            зашифровані товари в категорії по масці:
            {ext_id товара}-{порядок відображення кращої пропозиції в групі}-{признак чи цей товар в групі є "кращим"}-{колірна група товару},...
        title:
          type: string
          example: 'Смартфоны'
          description: |
            назва групи російською
        title_ua:
          type: string
          example: 'Смартфони'
          description: |
            назва групи українською
        category_id:
          type: string
          example: '1038946'
          description: |
            id категорії по якій створена група
        display_order:
          type: string
          example: '5'
          description: |
            порядок відображення групи
    OrdersItem:
      type: object
      required:
        - phone
        - name
        - email
        - called
        - deliveryType
        - paymentType
        - totalSum
      properties:
        phone:
          type: string
          description: 'номер телефону клієнта, код оператора і формат перевіряється'
          example: '380982299222'
        status:
          type: string
          description: |
            статус замовлення \
            отримати список можливих статусів див. `/orders_statuses` \
            \
            1 Заявка \

            2 Подтвержден \

            3 Оформление в банке \

            4 Отменен \

            5 Выполнен \

            7 Подтвержден магазином \

            9 Товар в пути \

            11 Ожидает выдачи \

            13 Отклонен магазином \

            15 Оформляется в банке \

            17 Товар в пути (адресная) \

            19 Подтвержден менеджером \

            21 Подтвержден клиентом \

            23 Одобрен банком \

            25 Оформлен \

            27 Закрыт \

            29 Оплачен
          example: '1'
        name:
          type: string
          description: ім'я клієнта
          example: Андрій
        surname:
          type: string
          description: прізвище клієнта
          example: Андрієнко
        patronymic:
          type: string
          description: по-батькові клієнта
          example: Андрійович
        email:
          type: string
          description: email адреса клієнта
          example: eldoteam@gmail.com
        allow:
          type: boolean
          description: >-
            згода з умовами надання персональних данних (true - згоден, false -
            не згоден) https://eldorado.ua/info/privacy_policy/
        called:
          type: boolean
          description: чи передзвонити клієнту для підтвердження замовлення
        subscribe:
          type: boolean
          description: чи підписати клієнта на розсилку по email
          default: false
        deliveryType:
          type: string
          enum:
            - fromShop
            - addresses
            - fromNewPost
          description: |
            * `fromShop` - самовивіз з магазину
            * `addresses` - адресна доставка
            * `fromNewPost` - самовивіз з Нової Пошти
        warehouse:
          type: string
          default: null
          example: C231
          description: >-
            Код магазину вибраного магазину самовивозу. Тільки для
            deliveryType=fromShop.
        paymentType:
          type: string
          enum:
            - cash
            - masterCard
            - credit
            - creditOnTheCouch
            - noCash
            - partPayOnShop
            - 3
            - 24
            - 26
            - visaCheckout
            - monobank
            - applePay
            - googlePay
            - alfabank
            - abank
          description: |
            вибраний спосіб оплати:
             * `cash` - готівка
             * `noCash` - безготівкова оплата
             * `masterCard` - оплата картою на касі магазину (тільки для самовивозу з магазину)
             * `credit` - в кредит на касі магазину (Супер Розстрочка) - тільки для самовивозу
             * `creditOnTheCouch` - в кредит при адресній або НП (Супер Розстрочка) - тільки для адресної і НП
             * `3` - оплата онлайн через приват24 (liqpay) - тільки для НП і адресної. \
                У відповідь прийде об'єкт liqpay для формування лінки на оплату (нижче)
             * `24` - оплата онлайн частинами приват банк - тільки для НП і адресної. \
               У відповідь прийде об'єкт privatIpp для формування лінки на оплату (нижче)
             * `partPayOnShop` - оплата частина приват банк на касі магазину - тільки для самовивозу з магазину
             * `26` - оплата онлайн картою (iPay) - тільки для НП і адресної \
               У відповідь прийде об'єкт iPay для формування лінки на оплату (нижче)
             * `monobank` - оплата онлайн частинами монобанк - тільки для самовивозу з магазину \
               Про подальшу роботу з замовленням з цим способом оплати див. `/mono_postback`
             * `visaCheckout` - оплата онлайн через VisaCheckout - тільки для НП і адресної \
               У відповідь прийде об'єкт iPay для формування лінки на оплату (нижче)
             * `applePay` - оплата ApplePay - для цього способу оплати потрібно передати додатковий параметр applePayObj (див. нижче).
             * `googlePay` - оплата GooglePay - для цього способу оплати потрібно передати додатковий параметр googlePayObj (див. нижче).
        partsCount:
          type: string
          description: >
            к-сть частин, вибраних клієнтом, на які потрібно розбити оплату
            замовлення \

            (при оплаті частинами, розстрочці і тд - *required*, тобто для
            credit, creditOnTheCouch, 24,partPayOnShop, monobank)\

            максимальне значення береться з моделі `credits`, де: \
              * `pay_parts` - макс для ОЧ приват \
              * `mono_pp` - макс для ОЧ монобанк \
              * `multiplier` - макс для розстрочки \

            Клієнту потрібно давати можливість вибрати не тільки максимально
            доступну к-сть частин, а і всі можливі менші к-сті частин. \

            Детальніше про це - параметр `creditPaymentType`
          example: '10'
        creditPaymentType:
          type: string
          description: >
            code_1c вибраного кредитного способу оплати. В майбутньому code_1c
            будь-якого способу оплати. \

            \

            required для способів оплати: credit, creditOnTheCouch, 24,
            partPayOnShop, monobank \

            \

            Нулі перед цифрами зберігати обов'язково \

            \

            Береться з  `GET /payment_types/?conditions=type='MP' AND
            is_active=1`. Про можливі значення type див. `PaymentTypesItem`. \

            Отримаємо масив з способами оплати, звідти взяти всі можливі parts,
            що вивести для вибору клієнту - наприклад [4, 7, 10, 12, 15, 25],
            але цей масив потрібно обмежити максимальною можливою к-стю частин,
            доступних для вибраного товару (якщо товарів > 1 потрібно вибрати
            мінімальну к-сть частин). \

            *Наприклад:*

            > Нам потрібно визначити можливі частини для монобанку. З
            `/payments_types` отримали масив [4, 7, 10, 12, 15, 25]. В корзині 2
            товари. В яких в `/credits` отримали максимально можливі к-сті
            частин 15 і 10. Так, як в корзині два товари то для них обох спільно
            доступно максимум 10 платежів (мінімум). Після чого з масиву
            способів оплати викидаємо все, що більше і отримаємо: \
              [4, 7, 10] - доступні платежі
          example: '000000422'
        ageAllow:
          type: boolean
          description: >-
            При кредитному способу оплати повинно = true. Відмітка 'Я
            подтверждаю, что мой возраст от 18 до 70 лет.'
          default: false
        workAllow:
          type: boolean
          description: >-
            При кредитному способу оплати повинно = true. Відмітка 'Я
            подтверждаю, что я трудоустроен(а).'
          default: false
        comment:
          type: string
          description: коментар клієнта до замовлення
        goods:
          type: array
          description: товари в замовленні
          items:
            $ref: '#/components/schemas/OrdersGoodsItem'
        promotions:
          type: array
          description: 'акції, які були використані до товарів, які були замовлені'
          items:
            $ref: '#/components/schemas/OrdersPromotionsItem'
        totalSum:
          type: integer
          description: 'сума цін всіх товарів в корзині, без копійок (price*quantity)'
          example: 12886
        eldoradoCities:
          type: string
          description: ''
          example: ''
        newPostOffice:
          type: string
          description: назва вибраного відділення НП. Обов'язкове при способі доставки НП.
          example: >-
            Отделение №128 (до 2 кг), Мини-отделение: пл. Спортивная, 1 (ТРЦ
            "Gulliver")
        newPostId:
          type: string
          description: id вибраного відділення НП. Обов'язкове при способі доставки НП.
          example: 6f567f34-6fe6-11e4-acce-0050568002cf
        storesGroupId:
          type: integer
          description: >-
            id каналу, який створює замовлення. 2 - сайт. **TODO: УТОЧНИТИ** -
            мобільний застосунок
        citiesInput:
          type: string
          description: місто в яке буде проводитися доставка (лише для адресної доставки)
          example: Тернопіль
        street:
          type: string
          description: вулиця на яку буде проводитися доставка (лише для адресної доставки)
          example: вул. Живова
        house:
          type: string
          description: >-
            будинок на який буде проводитися доставка (лише для адресної
            доставки)
          example: 7а
        apartment:
          type: string
          description: >-
            квартира на яку буде проводитися доставка (лише для адресної
            доставки)
          example: кв. 12
        user:
          type: object
          description: >-
            весь об'єкт юзера з сесії (як отримати дивитись sign)(замовлення з
            user - приклад №4)
        liqpay:
          type: object
          description: |
            Приходить в відповідь на POST, передавати в запросі не потрібно. \
            Формування лінки для переходу на оплату (на ThankYouPage): \
              ``` HTML
              <form method="POST" action={order.liqpay.request_url} acceptCharset="utf-8">
                  <input type="hidden" name="data" value={order.liqpay.request_data} />
                  <input type="hidden" name="signature" value={order.liqpay.request_signature} />
                  <input type="submit" name="btn_text" />
              </form>```
          properties:
            request_url:
              type: string
              example: 'https://www.liqpay.ua/api/3/checkout'
            request_data:
              type: string
              example: >-
                eyJhY3Rpb24iOiJwYXkiLCJhbW91bnQiOjE1OTk5LCJsYW5ndWFnZSI6InVrIiwiY3VycmVuY3kiOiJVQUgiLCJkZXNjcmlwdGlvbiI6Ilx1MDQxZVx1MDQzZlx1MDQzYlx1MDQzMFx1MDQ0Mlx1MDQzMCBcdTA0MzdcdTA0MzBcdTA0M2NcdTA0M2VcdTA0MzJcdTA0M2JcdTA0MzVcdTA0M2RcdTA0M2RcdTA0NGYgXHUyMTE2OTAwMDAwMDUwNTY1MDk2IFx1MDQzZFx1MDQzMCBcdTA0NDFcdTA0MzBcdTA0MzlcdTA0NDJcdTA0NTYgZWxkb3JhZG8udWEiLCJvcmRlcl9pZCI6IjkwMDAwMDA1MDU2NTA5NiIsInZlcnNpb24iOiIzIiwicGF5dHlwZXMiOiJwcml2YXQyNCIsInNlcnZlcl91cmwiOiJodHRwczpcL1wvYXBpLmVsZG9yYWRvLnVhXC92MVwvbGlxcGF5XC8iLCJyZXN1bHRfdXJsIjoiaHR0cHM6XC9cL2VsZG9yYWRvLnVhXC8iLCJwdWJsaWNfa2V5IjoiaTg1MDcyMTYyNjQ0In0=
            request_signature:
              type: string
              example: 3N7fcNMMMP5SCOsCt4Pg5V8Cw2Q=
        privatIpp:
          type: object
          description: |
            Приходить в відповідь на POST, передавати в запросі не потрібно. \
            Формування лінки для переходу на оплату (на ThankYouPage): \
              ```
              https://payparts2.privatbank.ua/ipp/v2/payment?token={order.privatIpp.token}```
              сюди відправити юзера для оплати
          properties:
            token:
              type: string
              example: F35BEEC2BCC14BCF8088FBA6C549969B
            payUrl:
              type: string
              example: >-
                https://payparts2.privatbank.ua/ipp/v2/payment?token=F35BEEC2BCC14BCF8088FBA6C549969B
        iPay:
          type: object
          description: |
            Приходить в відповідь на POST, передавати в запросі не потрібно. \
            Клієнта для оплати потрібно переспрямувати на `order.iPay.url`
          properties:
            url:
              type: string
              example: >-
                https://checkout.ipay.ua/ac41f3c1e6af51a20012df95003c9f66e864b056
        applePayObj:
          type: object
          description: |
            Потрібно відправити тільки якщо paymentType = 'applePay'.
          properties:
            payment_token:
              type: string
              example: gjflak421fasdsdf13
              description: Apple payment token
        googlePayObj:
          type: object
          description: |
            Потрібно відправити тільки якщо paymentType = 'googlePay'.
          properties:
            payment_token:
              type: string
              example: gjflak421fasdsdf13
              description: Google payment token
        orders_status:
          $ref: '#/components/schemas/OrdersStatusesItem'
        source:
          type: string
          description: Код джерела замовлення
          default: 64
          example: 64
        inStoreOrder:
          type: boolean
          description: >-
            Признак що замовлення створене в магазині з участю продавця (в цьому
            випадку поля storeNumber і sellerId - обов'язкові)
          default: 0
          example: 1
        storeNumber:
          type: string
          description: Код магазину в якому створено замовлення (якщо inStoreOrder = 1)
          example: C231
        sellerId:
          type: string
          description: Код продавця
          example: 41234155
    OrdersStatusesItem:
      type: object
      required:
        - status
        - status_output
        - status_output_ua
      properties:
        id:
          type: integer
          example: 1
        status:
          type: string
          description: внутрішній статус замовлення
          example: ПодтвержденМагазином
        status_output:
          type: string
          description: статус замовлення для виводу клієнту
          example: В обработке
        status_ouput_ua:
          type: string
          description: статус замовлення для виводу клієнту українською
          example: В обробці
    OrdersGoodsItem:
      type: object
      required:
        - goods_id
        - extId
        - quantity
        - basePrice
        - price
        - key
      properties:
        good_id:
          type: string
          description: id товара (з моделі CatalogItem) для замовлення
          example: '1364443'
        extId:
          type: string
          description: ext_id товара (з моделі CatalogItem) для замовлення
          example: '71236701'
        quantity:
          type: integer
          description: к-сть одиниць данного товару
          example: 2
        basePrice:
          type: integer
          description: ціна товару без врахування знижок
          example: 5205
        price:
          type: integer
          description: >-
            ціна товару з врахуванням знижок, якщо таких немає - вона повинна =
            basePrice
          example: 5205
        key:
          type: integer
          description: >-
            порядковий номер товару для замовлення, починаючи з 0. ключ по якому
            заязувати з акцією (нижче)
          example: 0
    OrdersPromotionsItem:
      type: object
      required:
        - goods_id
        - extId
        - discount
        - extPromoId
        - keyPromotion
        - price
        - key
      properties:
        goods_id:
          type: string
          description: id товара (з моделі CatalogItem) для замовлення
          example: '1364443'
        extId:
          type: string
          description: ext_id товара (з моделі CatalogItem) для замовлення
          example: '71236701'
        discount:
          type: integer
          description: знижка на товар (ціна товару - ціна товару зі знижкою)
          example: 3799
        extPromoId:
          type: integer
          description: id використаної акції
          example: 1718
        extPromoSettingId:
          type: integer
          description: id використаної настройки акції
          example: 1718
        promoCode1CTransactionId:
          type: string
          description: 'id транзакції, по якій перевірявся промо код (див /promo_code)'
        isActivatePromoCode:
          type: boolean
          description: чи активовано промокод
        promoCode:
          type: string
          description: промо код (див /promo_code)
        keyPromotion:
          type: integer
          description: ключ по якому заязувати з товаром
          example: 0
    PaymentTypesItem:
      type: object
      required:
        - id
        - code_1c
      description: |
        Способи оплати замовлення \ Є такі типи: \
          `PP` - оплата частинами приват банк
          `MP` - оплата частинами монобанк
          `II` - розстрочка
      properties:
        id:
          type: integer
          example: 11
        code_1c:
          type: string
          description: 1C id способу оплати
          example: '000000422'
        type:
          type: string
          enum:
            - PP
            - MP
            - II
            - PT
          description: тип способу оплати
          example: 3799
        parts:
          type: integer
          description: 'к-сть частин, якщо це кредитний спосіб оплати'
          example: 25
        is_active:
          type: integer
          description: признак активності способу оплати
          example: 0
    MonoPostbackItem:
      type: object
      properties:
        order_id:
          type: integer
          example: 50689673
          description: id замовлення OrdersItem
        state:
          type: string
          example: IN_PROCESS
          description: статус заявки на оплату частинами
        order_sub_state:
          type: string
          example: WAITING_FOR_STORE_CONFIRM
          description: підстатус заявки на оплату частинами
    AbankPostbackItem:
      type: object
      properties:
        order_id:
          type: integer
          example: 50689673
          description: id замовлення OrdersItem
        state:
          type: string
          example: IN_PROCESS
          description: статус заявки на оплату частинами
        order_sub_state:
          type: string
          example: WAITING_FOR_STORE_CONFIRM
          description: підстатус заявки на оплату частинами
        message:
          type: string
          example: Ожидание от магазина подтверждения заявки
          description: детальний опис статусу для користувача
    SearchCategoryAggrItem:
      type: object
      properties:
        key:
          type: integer
          example: 1038946
          description: id категории товара
        doc_count:
          type: integer
          example: 544
          description: число вхождений категории в массив товаров
    UsersWaitlistItem:
      type: object
      properties:
        id:
          type: integer
          example: 100
          description: уникальный id записи о товаре в списке желаний
        user_id:
          type: integer
          example: 544
          description: 'id пользователя (из модели User), добавившего товар в список'
        goods_id:
          type: integer
          example: 1193455
          description: 'id товара (из модели Goods), добавленного в список'
        status:
          type: string
          description: |
            Статус записи
             - 0 - не активна
             - 1 - активна
          enum:
            - 0
            - 1
          example: '1'
        created_at:
          type: string
          description: Время создания записи
          example: '2019-02-17 10:43:55'
        updated_at:
          type: string
          description: Время последнего редактирования записи
          example: '2019-02-18 10:57:18'
    UsersWishlist:
      type: object
      properties:
        id:
          type: integer
          example: 100
          description: уникальный id записи о товаре в списке желаний
        user_id:
          type: integer
          example: 544
          description: 'id пользователя (из модели User), добавившего товар в список'
        goods_id:
          type: integer
          example: 1193455
          description: 'id товара (из модели Goods), добавленного в список'
        status:
          type: string
          description: |
            Статус записи
             - 0 - не активна
             - 1 - активна
          enum:
            - 0
            - 1
          example: '1'
        created_at:
          type: string
          description: Время создания записи
          example: '2019-02-17 10:43:55'
        updated_at:
          type: string
          description: Время последнего редактирования записи
          example: '2019-02-18 10:57:18'
    UsersEmailsItem:
      type: object
      properties:
        id:
          type: integer
          example: 5
          description: унікальний id
        email:
          type: string
          example: test@gmail.com
          description: email для підписки на розсилку
        esputnik_forward:
          type: integer
          example: 544
          description: передавати 1
        esputnik_id:
          type: integer
          example: 123543
          description: id підписки
    DeliveryTypesItem:
      type: object
      properties:
        id:
          type: integer
          example: 100
          description: уникальный id записи
        value:
          type: string
          example: addresses
          description: значення доставки для передачі в замовлення
        title:
          type: string
          example: Доставка по адресу
          description: назва способу доставки
    UserDeviceItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: уникальный id записи
        user_id:
          type: integer
          example: 544
          description: id користувача (з модели User)
        name:
          type: string
          example: Name
          description: Название устройства
        mac:
          type: string
          example: 89gh-c456c-556c445
          description: Mac-адрес устройства
        device_id:
          type: string
          example: 8v9j834tyv485yv3945yv45c3y345y45j
          description: Униакльный id устройства
    UsersDeliveriesItem:
      type: object
      properties:
        id:
          type: integer
          example: 100
          description: уникальный id записи
        user_id:
          type: integer
          example: 544
          description: id користувача (з модели User)
        delivery_type_id:
          type: integer
          example: 544
          description: id способу доставки (з моделі DeliveryTypesItem)
        shop_id:
          type: integer
          example: 544
          description: >
            id магазину або складу НП (з моделі Shops) \

            Заповнюється тільки для самовивозу з магазину або НП. Для адресної
            доставки = NULL
        city:
          type: string
          example: 544
          description: назва міста способу отримання
        street:
          type: string
          example: 544
          description: назва вулиці способу отримання
        house:
          type: string
          example: 544
          description: номер будинку способу отримання
        apartment:
          type: string
          example: 544
          description: номер квартири способу отримання
        last_used_at:
          type: string
          description: Час останнього використання способу доставки
          example: '2019-02-17 10:43:55'
        created_at:
          type: string
          description: Час створення запису
          example: '2019-02-17 10:43:55'
        updated_at:
          type: string
          description: Час останнього редагування запису
          example: '2019-02-18 10:57:18'
    PromotionCatalogGoodWithSet:
      allOf:
        - $ref: '#/components/schemas/PromotionCatalogGoods'
        - type: object
          properties:
            set:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/CatalogGood'
                  - $ref: '#/components/schemas/PromotionCatalogGoods'
    PromotionCatalogGoods:
      type: object
      properties:
        id:
          type: string
          example: '1354969'
          description: Уникальный id товара
        promotion:
          $ref: '#/components/schemas/PromotionCatalogGoodsPromotionItem'
        setting:
          $ref: '#/components/schemas/PromotionCatalogGoodsSetting'
        rule:
          $ref: '#/components/schemas/PromotionCatalogGoodsRuleItem'
        offer:
          $ref: '#/components/schemas/PromotionCatalogGoodsOfferItem'
    PromotionCatalogGoodsPromotionItem:
      type: object
      properties:
        id:
          type: string
          example: '611'
          description: уникальный id акции
        code:
          type: string
          example: '1043'
          description: id акции сторонней системы
        default_category:
          type: string
          example: null
        ext_promo_id:
          type: string
          example: '1043'
        filter_tag_id:
          type: string
          example: '9'
        happy_day:
          type: string
          example: null
        is_hotline_export:
          type: string
          example: '0'
        is_permanent:
          type: string
          example: '1'
        keywords:
          type: string
          example: null
        keywords_ua:
          type: string
          example: null
        name:
          type: string
          example: 161012 Выбирай свой подарок
          description: техниеское название акции
        output_order:
          type: string
          example: '1'
          description: порядок вывода акции в списке акций
        permanent_description:
          type: string
          example: <div>OPISANIE</div>
          description: описание акции для вывода постаянных акций
        permanent_description_ua:
          type: string
          example: null
          description: описание акции для вывода постаянных акций(укр.)
        permanent_subscribe_text:
          type: string
          example: null
          description: текст у поля с подпиской для постоянных акций
        permanent_subscribe_text_ua:
          type: string
          example: null
          description: текст у поля с подпиской для постоянных акций(укр.)
        permanent_title:
          type: string
          example: Вибери подарунок
          description: название для вывода на сайт постоянной акции
        permanent_url:
          type: string
          example: choose_youre_gift
          description: кастомный url для вывода постоянной акци
        price_type:
          type: string
          example: null
        promo_code_nn:
          type: string
          example: null
        seo_description_value:
          type: string
          example: ''
        seo_description_value_ua:
          type: string
          example: null
        seo_h1_value:
          type: string
          example: ''
        seo_h1_value_ua:
          type: string
          example: null
        seo_text_value:
          type: string
          example: ''
        seo_text_value_ua:
          type: string
          example: null
        seo_title_value:
          type: string
          example: ''
        seo_title_value_ua:
          type: string
          example: null
        show_on_main_page:
          type: string
          example: '1'
          description: 'отображать на странице всех акций данную (0 - нет, 1 - да)'
        tag_name:
          type: string
          example: Выбирай свой подарок
        tag_name_ua:
          type: string
          example: Обирай свій подарунок
        title:
          type: string
          example: Подарки к каждой покупке!
          description: название акции на сайте
        title_ua:
          type: string
          example: Подарунки до кожної покупки!
          description: название акции на сайте (укр.)
        updated_at:
          type: string
          example: '2019-06-02 13:40:16'
          description: дата последнего редактирования записи
        created_at:
          type: string
          example: '2017-01-30 19:31:33'
          description: дата создания записи
    DiscountFields:
      type: object
      properties:
        operation_type:
          type: string
          description: |
            Тип операции для расчета скидки
              - ЦенаПроцент         - не используется
              - РаспределениеСкидки - не используется
              - РучнаяСкидка        - не используется
              - ЦенаПоПрайсу        - не используется
              - СкидкаПроцент       - скидка в процентах от текущей цены
              - Ничего              - не выполнять никаких операций
              - УстановкаЦены       - установыить новую цену
              - СкидкаСумма         - скидка на фиксированую сумму
          example: Ничего
          enum:
            - ЦенаПроцент
            - РаспределениеСкидки
            - РучнаяСкидка
            - ЦенаПоПрайсу
            - СкидкаПроцент
            - Ничего
            - УстановкаЦены
            - СкидкаСумма
        price_discount:
          type: string
          description: Размер скидки над которой выполняется операция **operation_type**
          example: '0'
    PromotionCatalogGoodsOfferItem:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: '9265191'
              description: уникальный id акционного товара
            active:
              $ref: '#/components/schemas/PromoActiveItem'
            offer_id:
              type: string
              example: '1085660'
              description: id товару до якого відноситься акціні правила
            key_set:
              type: string
              example: '0'
              description: >-
                id комплекта в акции (идинтефицирует комплект в пределах одной
                акции)
            order_set:
              type: string
              example: '0'
              description: порядок товара в комплекте (комплект определяется полем key_set)
            priority:
              type: string
              example: '24'
            promotion_algorithm:
              $ref: '#/components/schemas/PromotionAlgorithmItem'
            promotion_group_id:
              type: string
              example: '735'
            promotion_id:
              type: string
              example: '611'
              description: id акції до якої відноситься товар
            promotion_setting_id:
              type: string
              example: '993'
            promotion_tag_id:
              type: string
              example: '16064991'
            rule_date_begin:
              type: string
              example: '2019-01-15 00:00:00'
              description: дата начала действия акции на товар на которой действует правило
            rule_date_end:
              type: string
              example: null
              nullable: true
              description: >-
                дата окончания действия акции на товар на которой действует
                правило (если null то дата акончания не задана)
            rule_id:
              type: string
              example: '9265191'
              description: id акционного правила к которому относится акционный товар
            setting_date_begin:
              type: string
              example: '2019-01-15 00:00:00'
              description: дата начала работы настройки акции
            setting_date_end:
              type: string
              example: null
              description: дата окончания работы настройки акции (если null то не указана)
            tag_location:
              type: string
              example: 'product,catalog,promotion,cart,all_promo_page,checkout'
            updated_at:
              type: string
              example: '2019-06-02 13:41:59'
              description: дата последнего обновления записи
            created_at:
              type: string
              example: '2017-10-02 17:25:26'
              description: дата создания записи
        - $ref: '#/components/schemas/DiscountFields'
    PromotionCatalogGoodsRuleItem:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: '9265191'
              description: уникальный id настройки акции
            date_begin:
              type: string
              example: '2019-01-15 00:00:00'
              description: дата начала действия акции на товар на которой действует правило
            date_end:
              type: string
              example: null
              description: >-
                дата окончания действия акции на товар на которой действует
                правило (если null то дата акончания не задана)
              nullable: true
            key_set_offer:
              type: string
              example: '37'
            key_set:
              type: string
              example: '0'
              description: >-
                id комплекта в акции (идинтефицирует комплект в пределах одной
                акции)
            order_set:
              type: string
              example: '0'
              description: порядок товара в комплекте (комплект определяется полем key_set)
            price_discount_min:
              type: string
              example: null
            promotion_setting_id:
              type: string
              example: '993'
            updated_at:
              type: string
              example: '2019-06-02 13:41:59'
              description: дата последнего обновления записи
            created_at:
              type: string
              example: '2017-10-02 17:25:26'
              description: дата создания записи
        - $ref: '#/components/schemas/DiscountFields'
    PromoActiveItem:
      type: string
      example: 'Y'
      enum:
        - 'Y'
        - 'N'
      description: 'активность акции ("Y" - активная, "N" - не активная)'
    PromotionCatalogGoodsSetting:
      type: object
      properties:
        id:
          type: string
          example: '993'
          description: уникальный id настройки акции
        active:
          $ref: '#/components/schemas/PromoActiveItem'
        catalog_id:
          type: string
          example: '611'
          description: id акции к которой относится настройка
        check_discount_position:
          type: string
          example: '0'
          description: >-
            номер позиции в чеке на которую дается скидка (нужно только для
            алгоритма акции - 6 - скидки на чек)
        check_sum_begin:
          type: string
          example: '0'
        check_sum_end:
          type: string
          example: '0'
        date_begin:
          type: string
          example: '2019-01-15 00:00:00'
          description: дата начала работы настройки акции
        date_end:
          type: string
          example: null
          nullable: true
          description: дата окончания работы настройки акции (если null то не указана)
        discount_type:
          $ref: '#/components/schemas/PromotionDiscountAlgorithm'
        doc_date:
          type: string
          example: '2017-02-10 19:40:06'
        doc_no:
          type: string
          example: '1328'
          description: id настройки в сторонней системе (номер документа)
        ext_promo_id:
          type: string
          example: '1043'
          description: id настройки в сторонней системе
        full_description:
          type: string
          example: >
            <p>Покупайте акционную технику и выбирайте себе подарок!</p>↵<p>1. В
            акции принимают участие товары с пометкой <img width="1.5%"
            src="https://i.eldorado.ua/promotions_tags_images/737.png"><br/>↵2.
            Оформляйте заказ, добавляя в корзину выбранный Вами товар и подарок
            или позвоните в колл-центр, где скидку оформит оператор при
            подтверждении заказа<br/>↵3. Данную выгоду вы можете потратить на
            любой товар с сайта, и оформить как подарок, кроме товара который
            уже принимает участие в акции или в коде товара с буквой
            "Р".<br/>↵4. Скидки по разным акциям данного предложения не
            суммируются со скидками по другим акционным программам. <br/>↵5. Под
            скидкой понимается процент скидки, который указан на ценнике в
            магазине, или плашка в интернет-магазине <img width="1.5%"
            src="https://i.eldorado.ua/promotions_tags_images/737.png"><br/>↵6.
            Если стоимость выбранного Вами подарка меньше суммы отведенного для
            подарка, то остаток сгорает. Если стоимость выбранного Вами подарка
            больше суммы отведенного для подарка, то необходимо осуществить
            доплату<br/>↵7. Выберите один из удобных для Вас способ получения:
            <br/>↵- самовывоз из магазина Eldorado; <br/>↵- самовывоз из
            отделения "Нова Пошта"; <br/>↵- адресная доставка. <br/>↵8. Выберите
            удобный для Вас способ оплаты заказа в нашем интернет-магазине:
            <br/>↵- оплата наличными в гривнах - доступно; <br/>↵- оплата
            платежной картой онлайн или на кассе магазина - доступно; <br/>↵-
            оплата «СУПЕР РАССРОЧКА!®»* - до 10 платежей; <br/>↵- оплата частями
            (онлайн или на кассе магазина) от ПриватБанк – до 10 платежей;
            <br/>↵- безналичная оплата - доступно. <br/>↵* с переплатой не более
            0,1% по программе «Супер рассрочка!®» с привлечением
            банков-партнеров</p>↵<span style= "color: red;">Внимание! Акция
            продлена до 16.06.2019г.</span>
          description: полное описание акции
        full_description_ukr:
          type: string
          example: >
            <p>Купуйте акційну техніку та обирайте собі подарунок!</p>↵<p>1. В
            акції приймають участь товарі з позначкою <img width="1.5%"
            src="https://i.eldorado.ua/promotions_tags_images/737.png"><br/>↵2.
            Оформляйте замовлення, додаючи у кошик обраний Вами товар та
            подарунок або зателефонуйте в колл-центр, де знижку оформить
            оператор при підтвердженні замовлення<br/>↵3. Дану вигоду ви можете
            витратити на будь-який товар з сайту, та оформити як подарунок,
            окрім товару який уже приймає участь в акції або у коді товару з
            літерою "P".<br/>↵4. Знижки за різними акціями даної пропозиції не
            підсумовуються зі знижками по іншим акційними програмами.<br/>↵5.
            Під знижкою розуміється процент знижки, який зазначений на ціннику в
            магазині , або плашка в інтернет-магазині <img width="1.5%"
            src="https://i.eldorado.ua/promotions_tags_images/737.png"><br/>↵6.
            Якщо вартість обраного Вами подарунка менше суми відведеного для
            подарунка, то залишок згорає. Якщо вартість обраного Вами подарунка
            більше суми відведеної для подарунка, то необхідно здійснити
            доплату<br/>↵7. Виберіть один із зручних для Вас спосіб отримання:
            <br/>↵- самовивіз з магазину Eldorado; <br/>↵- самовивіз з
            відділення "Нова Пошта"; <br/>↵- адресна доставка. <br/>↵8. Виберіть
            зручний для Вас спосіб оплати замовлення в нашому інтернет-магазині:
            <br/>↵- оплата готівкою в гривнях - доступно; <br/>↵- оплата
            платіжною карткою онлайн або на касі магазину - доступно; <br/>↵-
            оплата «СУПЕР РОЗСТРОЧКА! ®»* - до 10 платежів; <br/>↵- оплата
            частинами (онлайн або на касі магазину) від ПриватБанк - до 10
            платежів; <br/>↵- безготівкова оплата - доступно. <br/>↵* З
            переплатою не більше 0,1% за програмою «Супер розстрочка!®» з
            залученням банків-партнерів </p>↵<span style= "color: red;"> Увага!
            Акцію подовжено до 16.06.2019р.</span>
          description: полное описание акции (укр)
        html_layout:
          type: string
          example: ''
        img:
          type: string
          example: ''
        is_promo_code:
          type: string
          example: '0'
          description: |
            признак определяющий действует ли скидка без промокода
                - 0 - скидка применяется без промокода
                - 1 - скидка применяется только с промокодом
        layout:
          type: string
          example: ''
        manufacturer_id:
          $ref: '#/components/schemas/PromotionManufacturerId'
        promotion_algorithm:
          $ref: '#/components/schemas/PromotionAlgorithmItem'
        scale_of_discount:
          type: string
          example: '0'
        shops_available:
          type: string
          example: >-
            C125 # C166 # C001 # C162 # T002 # T004 # T006 # T007 # T008 # T009
            # T010 # T011 # T012 # T014 # T015 # T018 # T019 # T020 # T021 #
            T022 # T023 # T024 # T025 # T026 # T027 # T029 # T030 # T031 # T032
            # T033 # T034 # T035 # T036 # T038 # T039 # T040 # T041 # T042 #
            T043 # T044 # T045 # T046 # T048 # T055 # T060 # T063 # T064 # T065
            # C226 # C229 # C128 # C242 # C243 # C244 # T079 # C126 # C127 #
            C161 # C123 # C137 # C140 # C038 # C135 # C136 # C121 # C129 # C133
            # C134 # C231 # C232 # C233 # C234 # C235 # C236 # C237 # C238 #
            C239 # C240 # C241 # C138 # C160 # C130 # C132 # C261 # C262 # C263
            # C264 # C265 # C245 # C246 # C247 # C248 # C249 # C250 # C251 #
            C252 # C253 # C254 # C255 # C256 # C257 # C258 # C259 # C260 # T101
            # C003 # C008 # C014 # C016 # C019 # C023 # C025 # C027 # C029 #
            C033 # C034 # C035 # C036 # C044 # C045 # C048 # C049 # C056 # C058
            # C060 # C062 # C063 # C069 # C071 # C076 # C079 # C081 # C084 #
            C085 # C088 # C089 # C091 # C092 # C093 # C095 # C098 # C102 # C103
            # C108 # C109 # C110 # C112 # C113 # C114 # C115 # C116 # C158 #
            T121 # T100 # C205 # C002 # C170 # C177 # C174 # C175 # C176 # C178
            # C179 # C181 # C182 # C171 # C172 # C190 # C191 # C192 # C187 #
            C188 # C184 # C185 # C186 # C189 # C223 # C224 # C212 # C213 # C214
            # C215 # C221 # C222 # C219 # C220 # C216 # C217 # C218 # C206 #
            C207 # C208 # C209 # C210 # C211 # C201 # C202 # C195 # C204 # C203
            # C193 # C194 # C200 # C198 # C199 # C196 # C197 # C183 # C180 #
            C169 # M001 # M002 # C165 # C227 # C228 # C157 # C225 # C163 # C142
            # C143 # C145 # C148 # C150 # C151 # C152
        site_name:
          type: string
          example: ''
        small_description:
          type: string
          example: Покупайте акционную технику и выбирайте себе подарок!
          description: краткое описание акции
        small_description_ukr:
          type: string
          example: Купуйте акційну техніку та обирайте собі подарунок!
          description: краткое описание акции (укр)
        url:
          type: string
          example: ''
        updated_at:
          type: string
          example: '2019-06-02 13:42:36'
          description: дата последнего обновления записи
        created_at:
          type: string
          example: '2017-04-04 11:03:29'
          description: дата создания записи
    PromotionAlgorithmItem:
      type: string
      enum:
        - 1
        - 2
        - 6
        - 8
        - 14
        - 15
        - 16
      description: >
        id алгоритму акції (TODO)

        (сума знижки може розраховна за допомогою полів operation_type та
        price_discount (TODO))

        назви із сторонньої системи

            - 1   - комплект (TODO докладніше в пункті promotion_sets  )
            - 2   - скидка - звичайна знижка ( розраховується як звичайна знижка )
            - 6   - Скидка на позицию в чеке (  )
            - 8   - Bonus (, сумма) ( розмір бонусу розраховуеться так само як і в алгоритмі 2  )
            - 14  - Кредитные акции ( виводяться так само як і 16 )
            - 15  - Предзаказ (сейчас работает как 16)
            - 16  - вывод на сайт ( просто вивід товарів на сайт )
      example: '2'
    PromotionManufacturerId:
      type: string
      description: id виробника для брендових акцій
      nullable: true
      example: null
    PromotionDiscountAlgorithm:
      type: string
      example: ПодарочнаяКартаVRT
      description: |
        способ выплаты скидки
            - БонусыНаПК - выплата бонусами
            - Деньги - прямая скидка (вычитается из цены)
            - ПодарочнаяКартаVRT - бонусы которые действуют только на текущий чек (выбери себе подарок сам)
      enum:
        - БонусыНаПК
        - Деньги
        - ПодарочнаяКартаVRT
    PromotionSliderItem:
      type: object
      properties:
        id:
          type: string
          description: id акції
          example: '1769'
        output_order:
          type: string
          description: порядок виводу акції
          example: '2'
        name:
          type: string
          description: Технічна назва акції
          example: 180426 Бесплатная установка КБТ без материалов
        title:
          type: string
          description: назва акції для виводу (рос.)
          example: Акционная подарочная установка кондиционера!
        title_ua:
          type: string
          description: назва акції для виводу (укр.)
          example: Акційне подарункове встановлення кондиціонера!
        promotion_setting_id:
          type: string
          description: id  налашутування акції
          example: '5105'
        date_begin:
          type: string
          description: дата почтаку дії акції
          example: '2018-04-28 00:00:00'
        date_end:
          type: string
          description: дата кінця дії акції
          nullable: true
          example: null
        active:
          $ref: '#/components/schemas/PromoActiveItem'
        manufacturer_id:
          $ref: '#/components/schemas/PromotionManufacturerId'
        promotion_algorithm:
          $ref: '#/components/schemas/PromotionAlgorithmItem'
    PushServiceItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: уникальный id записи
        user_id:
          type: integer
          example: 544
          description: id користувача (з модели User)
        device_id:
          type: string
          example: 8v9j834tyv485yv3945yv45c3y345y45j
          description: Униакльный id устройства
        title:
          type: string
          example: Заголовок
          description: Заголовок уведомления
        body:
          type: string
          example: Какой-то текст уведомления
          description: Текст уведомления
        is_delivered:
          type: string
          example: '1'
          description: |
            Признак доставлено ли уведомление
              - 1 - доставлено
              - 0 - недоставлено
    PromoCodeItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: унікальний id запису
        promo_code:
          type: string
          example: '1234567890'
          description: id користувача (з модели User)
        transaction_id:
          type: string
          example: '53145'
          description: id транзакції
        is_activated:
          type: boolean
          example: '1'
          description: Чи успішно активовано промо код
        error:
          type: string
          example: Текст
          description: Текст помилки якщо промо код активувати не вдалося
        android:
          type: string
          example: '{"android_channel_id":"global_promo_push"}'
          description: Системная информация для отправки push уведомлений для android
        payload:
          type: string
          example: '{"pushtype":"Time_bound_offer","promoid":3077}'
          description: Дополнительные данные для push уведомлений
    UsersSms:
      type: object
      properties:
        id:
          type: string
          description: id смс
          example: '1769'
        recipient:
          type: string
          description: номер телефона пользователя
          example: '380631111111'
        text:
          type: string
          description: Текст смс
          example: Текст смс
        status:
          type: string
          description: |
            "Признак доставки сообщения". Возможные значения:
                - 1 - смс доставлено
                - 0 - смс не доставлено
          example: '1'
        created_at:
          type: string
          description: Дата создания
          example: '2019-07-03 17:41:19'
        updated_at:
          type: string
          description: Дата обновления
          example: '2019-07-03 17:41:19'
    CrmLogs:
      type: object
      properties:
        user_phone:
          type: string
          description: Номер телефону користувача
          example: '380631111111'
        created_at:
          type: string
          description: Дата відправки
          example: '2019-07-03 17:41:19'
        source:
          type: string
          description: Джерело відправки запиту (Site/MobileApp)
          example: Site
        good_id:
          type: string
          description: ID переглянутого товара
          example: '1364443'
        type_code:
          type: string
          description: >-
            Тип логування - покинута корзина чи проглянутий
            товар(LeftCart/PageView)
          example: LeftCart
        name:
          type: string
          description: Назва проглянутого товару
          example: '2019-07-03 17:41:19'
        page_type_code:
          type: string
          description: Код типу сторінки. Обовязковий для type_code = PageView
          example: Product
        page_type_name:
          type: string
          description: Назва коду сторінки. Обовязковий для type_code = PageView
          example: Product
        product_code:
          type: string
          description: Код продукта 1c. Обовязковий для type_code = LeftCart
          example: '71258436'
        product_site_category_code:
          type: string
          description: Код категории продукта на сайт
          example: Телевизоры
        amount:
          type: string
          description: Вартість товару
          example: '16999.00'
        link:
          type: string
          description: Посилання на товар на сайті
          example: 'https://eldorado.ua/led-tel-r-kivi-55-ur50-gu/p71258436/'
        os_type:
          type: string
          description: Тип ОС
          example: Windows
        device_type:
          type: string
          description: Тип устройства
          example: MobilePhone
        device_model:
          type: string
          description: Модель пристрою
          example: Xiaomi TOP
        mac:
          type: string
          description: MAC-адрес устройства
          example: '00:0a:95:9d:68:16'
        ext_user_guid:
          type: string
          description: Згенерований user_id
          example: a0e3ddb0-e5da-11e9-b2b1-0753dab371ed
    MenuOutput:
      type: object
      properties:
        children:
          type: array
          description: Підкатегорії
          items:
            type: string
        id:
          type: integer
          description: Унікальний id
          example: 111111
        images:
          type: array
          description: Зображення категорії
          items:
            properties:
              group_name:
                type: string
                example: image
              href:
                type: string
                example: goods_categories_images/605.jpg
              name:
                type: string
                example: 605.jpg
              order_num:
                type: integer
                example: null
              record_id:
                type: integer
                example: 1088605
        isNode:
          type: boolean
          description: Чи є материнською для інших категорій
          example: true
        mpath:
          type: integer
          description: Материнська категорія
          example: 1088605
        name:
          type: string
          example: 111111
        order_num:
          type: integer
          description: Порядок для сортування
          example: 2
        parent_id:
          type: integer
          description: Материнська категорія
          example: 1088605
        producers:
          type: array
          items:
            type: string
        title:
          type: string
          description: Назва
          example: Игровые приставки