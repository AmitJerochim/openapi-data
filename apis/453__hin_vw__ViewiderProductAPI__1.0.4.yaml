openapi: 3.0.0
info:
  version: "1.0.4"
  title: 'Viewider Product Side API'
  description: 'Handle product, inventory and viewider listings on viewider'
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /getAccessToken:
    post:
      tags:
        - developers
      summary: get API access token
      operationId: getAccessToken
      description: use viewdier user login to get API access token
      responses:
        '200':
          description: request processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getToken'
        description: Products
  /product/createProductGroup:
    post:
      tags:
        - developers
      summary: create products on Viewider
      operationId: createProductGroup
      description: create products (named as productGroup) on Viewider, reqired info is provided in other API
      responses:
        '200':
          description: product Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseCreatePG'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPG'
        description: Products
  /product/getCategoryList:
    post:
      tags:
        - developers
      summary: get viewider categoryList
      operationId: getCategoryList
      description: get viewider categoryList. viewdier category ID is needed to create product group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getCat'
        description: Products
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetCat'
  /product/getConditionList:
    post:
      tags:
        - developers
      summary: get viewider conditionList
      operationId: getConditionList
      description: get viewider conditionList, condition ID is needed to create product group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/basicGet'
        description: Products
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetConditionList'
  /product/getFulfillmentInfo:
    post:
      tags:
        - developers
      summary: get Fulfillment info
      operationId: getFulfillmentInfo
      description: get Fulfillment info. user need to fill in fulfillment info to viewider when creating productGroup. This API provides related info for users to fill in.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/basicGet'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseFulfillmentInfo'
  /product/getMeasurementInfo:
    post:
      tags:
        - developers
      summary: get Measurement info
      operationId: getMeasurementInfo
      description: get Measurement that accepted in viewider when create product group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/basicGet'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseMeasurementInfo'
  /product/editProductPrice:
    post:
      tags:
        - developers
      summary: edit product price
      operationId: editProductPrice
      description: using productGroupID and productID to edit selling price of the product on Viewider marketplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editPrice'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseCreatePG'
  /product/editInventroy:
    post:
      tags:
        - developers
      summary: edit Inventroy
      operationId: editInventroy
      description: using inventoryID to edit inventory of product in each warehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editInventory'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetEditInventroy'
  /product/createVWlistingFromProduct:
    post:
      tags:
        - developers
      summary: convert product group to listing
      operationId: createVWlistingFromProduct
      description: convert product group to viewider marketplace listing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createVWlisting'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseCreateListing'
  /product/getProductGroupID:
    post:
      tags:
        - developers
      summary: get user's productGroupID
      operationId: getProductGroupID
      description: get user's productGroupID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getProductGroupID'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetPG'
  /product/getProductGroupForInventoryByID:
    post:
      tags:
        - developers
      summary: get inventory Info
      operationId: getProductGroupForInventoryByID
      description: get inventory Info of product groups, by productGroupID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getInventoryByID'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetInventory'
  /ViewiderListing/getAvailableSite:
    post:
      tags:
        - developers
      summary: get sites
      operationId: getAvailableSite
      description: get sites the viewider supported to sold to 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/basicGet'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetSites'
  /ViewiderListing/getPackage:
    post:
      tags:
        - developers
      summary: get user's listing package
      operationId: getPackage
      description: get user's listing package
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/basicGet'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetPackage'
  /ViewiderListing/updateListing:
    post:
      tags:
        - developers
      summary: update Listing settings
      operationId: updateListing
      description: edit viewider marketplace Listing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateListing'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUpdateListing'
  /ViewiderListing/uploadListing:
    post:
      tags:
        - developers
      summary: upload Listing to viewider marketplace
      operationId: uploadListing
      description: upload Listing to viewider marketplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadListings'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUploadListing'
  /shipment/getShipmentLabelUrl:
    post:
      tags:
        - developers
      summary: Get Shipment Label URL by ShipmentID 
      operationId: getShipmentLabelUrl
      description: Get Shipment Label URL by ShipmentID 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getShipmentLabelUrl'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetShipmentLabelUrl'
  /shipment/getShipmentStatus:
    post:
      tags:
        - developers
      summary: Get Shipment Status by ShipmentID 
      operationId: getShipmentStatus
      description: Get Shipment Status by ShipmentID 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getShipmentStatus'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetShipmentStatus'
  /shipment/createShipmentByPlatformTransactionID:
    post:
      tags:
        - developers
      summary: Create Shipment by platformTransactionID 
      operationId: createShipmentByPlatformTransactionID
      description: Create Shipment by platformTransactionID 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createShipmentByPlatformTransactionID'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseCreateShipmentByPlatformTransactionID'
  /shipment/createCustomShipment:
    post:
      tags:
        - developers
      summary: Create Shipment with custom information 
      operationId: createCustomShipment
      description: Create Shipment with custom information 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCustomShipment'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseCreateCustomShipment'
  /transaction/getB2bTransaction:
    post:
      tags:
        - developers
      summary: Get getB2bTransaction 
      operationId: getB2bTransaction
      description: Get B2B Transaction 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getB2bTransaction'
        description: access token
      responses:
        '200':
          description: request processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetB2bTransaction'
servers:
  - url: 'https://api.viewider.com/latest/externalAPI'
components:
  schemas:
    getToken:
      type: object
      required:
        - username 
        - password
      properties:
        username:
          type: string
          description: viewdier Username
          example: abc@ccc.com
        password:
          type: string
          description: password
    responseToken:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          items:
            $ref: '#/components/schemas/responseToken.resopn'      
    responseToken.resopn:
      type: object
      properties:
        access_token: 
          type: string
  
    basicGet:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
          description: OAuthTaken of Viewider
  
    getProductGroupID:
      type: object
      required:
        - data
        - access_token
      properties:
        page:
          type: integer
          description: each page return 1000 record
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseGetPG:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetPG.responese'
    responseGetPG.responese:
      type: object
      properties:
        page:
          type: integer
        pageCount:
          type: integer
        response:
          items:
            $ref: '#/components/schemas/responseGetPG.responese.PG'
    responseGetPG.responese.PG:
      type: object
      properties:
        productGroupID: 
          type: string
        customLabel:
          type: string
      
    getCat:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          type: integer
          description: 1-10, top level category ID
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseGetCat:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          items:
            $ref: '#/components/schemas/responseGetCat.Category'
    responseGetCat.Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        children:
          type: array
          items:
            type: object
          description: include Category recursively.
      
    responseGetConditionList.condition:
      type: object
      properties:
        conditionID: 
          type: integer
        conditionName:
          type: string
    responseGetConditionList:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          items:
            $ref: '#/components/schemas/responseGetConditionList.condition'
    
    responseFulfillmentInfo:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseFulfillmentInfo.FulfillmentInfo'
    responseFulfillmentInfo.FulfillmentInfo:
      type: object
      properties:
        fulfillmentDeliveryDay:
          type: array
          items:
            type: string
        fulfillmentHandlingTime:
          type: array
          items:
            type: string
        fulfillmentParty:
          type: array
          items:
            type: string
        fulfillmentShipToLocation:
          type: array
          items:
            type: string
            
    responseMeasurementInfo:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseMeasurementInfo.MeasurementInfo'
    responseMeasurementInfo.MeasurementInfo:
      type: object
      properties:
        weightUnit:
          type: array
          items:
            type: string
          example:
            - kg
            - g
            - oz
            - lbs
        lengthUnit:
          type: array
          items:
            type: string
          example:
            - mm
            - cm
            - m
            - inch
    
    responseGetPackage:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetPackage.package'
    responseGetPackage.package:
      type: object
      properties:
        name:
          type: string
        packageID:
          type: string
    
    responseGetSites:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          items:
            $ref: '#/components/schemas/responseGetSites.site'
    responseGetSites.site:
      type: object
      properties:
        platform:
          type: string
        country:
          type: string
        domain:
          type: string
        siteID:
          type: integer
        
    editInventory:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/editInventory.inventory'
        access_token:
          type: string
          description: OAuthTaken of Viewider
    editInventory.inventory:
      type: object
      required:
        - inventoryID
        - remainQuantity
      properties:
        inventoryID:
          type: string
        remainQuantity:
          type: integer
    responseGetEditInventroy:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetEditInventroy.responseGetEditInventroy'
    responseGetEditInventroy.responseGetEditInventroy:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: successfully edited inventory ID.
        fail:
          type: array
          items:
            type: string
          description: failed to edit inventory ID.
        noChange:
          type: array
          items:
            type: string
          description: not changed value inventory ID.
    
    updateListing:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/updateListing.listing'
        access_token:
          type: string
          description: OAuthTaken of Viewider
    updateListing.listing:
      type: object
      required:
        - ListingID
      properties:
        additionReturnFee:
          type: integer
        additionReturnFeeType:
          type: integer
          example: ['percentage','amount']
        AutoSupportVwNewAddSite:
          type: boolean
        isAcceptReturn:
          type: boolean
          description: please set additionReturnFee and additionReturnFeeType when it set to true
        ListingID:
          type: string
        packageID:
          type: string
        supportPlatform:
          type: array
          items:
            $ref: '#/components/schemas/updateListing.listing.supportPlatform'
    updateListing.listing.supportPlatform:
      type: object
      required:
        - maxDistributor
        - siteID
      properties:
        maxDistributor:
          type: integer
        siteID:
          type: integer
    responseUpdateListing:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseUpdateListing.response'
    responseUpdateListing.response:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: listingIDs of listings updated
        fail:
          type: array
          items:
            type: string
          description: listingIDs of listings failed to update
    
    editPrice:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/editPrrce.productGroup'
        access_token:
          type: string
          description: OAuthTaken of Viewider
    editPrrce.productGroup.products:
      type: object
      required:
        - productID
        - sellingPrice
      properties:
        productID:
          type: string
        sellingPrice:
          type: string
    editPrrce.productGroup:
      type: object
      required:
        - productGroupID
        - products
      properties:
        productGroupID:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/editPrrce.productGroup.products'

    createVWlisting:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          description: array of productGroupID to convert
          type: array
          items:
            type: string
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseCreateListing:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseCreateListing.listing'
    responseCreateListing.listing:
      type: object
      properties:
        success:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateListing.listing.success'
        fail:
          description: array of productGroupID cannot convert
          type: array
          items:
            type: string
    responseCreateListing.listing.success:
      type: object
      properties:
        productGroupID:
          type: string
        listingID:
          type: string
          description: converted ListingID
          
    uploadListings:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          description: array of ListingID to upload
          type: array
          items:
            type: string
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseUploadListing:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseUploadListing.response'
    responseUploadListing.response:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: listingIDs of listings uploaded
        fail:
          type: array
          items:
            type: string
          description: listingIDs of listings failed to upload
    
    getShipmentLabelUrl:
      type: object
      required:
        - access_token
        - username
        - password
        - shipmentID
      properties:
        shipmentID:
          description: array of shipmentID 
          type: array
          items:
            type: string
        username:
          type: string
          description: username of Viewider account
        password:
          type: string
          description: password of Viewider account
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseGetShipmentLabelUrl:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetShipmentLabelUrl.response'
    responseGetShipmentLabelUrl.response:
      type: object
      properties:
        shipment:
          type: array
          items:
            $ref: '#/components/schemas/responseGetShipmentLabelUrl.response.shipment'
          description: Array of shipment created
    responseGetShipmentLabelUrl.response.shipment:
      type: object
      properties:
        shipmentID:
          type: string
        shipmentLabelUrl:
          type: string
        shipmentPdfUrl:
          type: string
          
    getShipmentStatus:
      type: object
      required:
        - access_token
        - username
        - password
        - shipmentID
      properties:
        shipmentID:
          description: array of shipmentID 
          type: array
          items:
            type: string
        username:
          type: string
          description: username of Viewider account
        password:
          type: string
          description: password of Viewider account
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseGetShipmentStatus:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetShipmentStatus.response'
    responseGetShipmentStatus.response:
      type: object
      properties:
        shipment:
          type: array
          items:
            $ref: '#/components/schemas/responseGetShipmentStatus.response.shipment'
          description: Array of shipment
    responseGetShipmentStatus.response.shipment:
      type: object
      properties:
        shipmentID:
          type: string
        shipmentStatus:
          type: string
          
    createShipmentByPlatformTransactionID:
      type: object
      required:
        - access_token
        - username
        - password
        - platform
        - transactionID
        - viewiderStock
      properties:
        transactionID:
          type: array
          items:
            type: string
          description: array of platform transactionID <br>Special cases:<br>eBay:OrderLineItemID<br>Gittigidiyor:OrderLineItemID (eBay HK)
        platform:
          type: string
          description: Transaction Platform <br>supported platform:["eBay","Gittigidiyor","Lazada","Shopee","Shopify","Gmarket]
        username:
          type: string
          description: username of Viewider account
        password:
          type: string
          description: password of Viewider account
        access_token:
          type: string
          description: OAuthTaken of Viewider
        viewiderStock:
          type: boolean
          description: user viewider stock to fulfil
    responseCreateShipmentByPlatformTransactionID:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseCreateShipmentByPlatformTransactionID.response'
    responseCreateShipmentByPlatformTransactionID.response:
      type: object
      properties:
        createShipments:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateShipmentByPlatformTransactionID.response.createShipments'
          description: Contain List success & fail created shipments 
        validShipment:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateShipmentByPlatformTransactionID.response.validShipment'
          description: Array of Created Shipment Details
        invalidShipment:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateShipmentByPlatformTransactionID.response.invalidShipment'
          description: Array of Invalid Shipment
    responseCreateShipmentByPlatformTransactionID.response.createShipments:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: List of success created Shipment ID
        fail:
          type: array
          items:
            type: string
          description: List of success created Shipment ID
    responseCreateShipmentByPlatformTransactionID.response.validShipment:
      type: object
      properties:
        _id:
          type: string
          description: shipmentID
        shipmentStatus:
          type: string
        shipmentType:
          type: string
          description: Shipment Type:<br>-  directLineShipment<br>-  localShipment<br>-  viewiderStock
        warehousePickUp:
          type: boolean
    responseCreateShipmentByPlatformTransactionID.response.invalidShipment:
        type: object
        properties:
          error_msg:
            type: string
    getB2bTransaction:
      type: object
      required:
        - access_token
        - username
        - password
        - startDate
        - page
      properties:
        startDate: 
          type: string
          description: dateFormat must be 'YYYY-MM-DD HH:mm:ss'
        page:
          type: integer
          description: 50 / page
        username:
          type: string
          description: username of Viewider account
        password:
          type: string
          description: password of Viewider account
        access_token:
          type: string
          description: OAuthTaken of Viewider        
    responseGetB2bTransaction:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetB2bTransaction.response'
    responseGetB2bTransaction.response:
      type: object
      properties:
        Total:
          type: integer
          description: total transaction count
        Page:
          type: integer
          description: number of current page
        Count:
          type: integer
          description: count
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/responseGetB2bTransaction.response.Transaction'
          description: Array of B2B Transaction
    responseGetB2bTransaction.response.Transaction:
      type: object
      properties:
        _id:
          type: string
          description: B2B Transaction ID
        isAcceptReturn:
          type: boolean
          description: AcceptReturn 
        additionReturnFee:
          type: number
          description: Estimated additionReturnFee
        packingFee:
          type: number
          description: Estimated packingFee
        platformBuyer:
          type: string
          description: platformBuyer name 
        transactionPlatform:
          type: string
          description: Transaction Platform
        platformTransactionID:
          type: string
          description: Platform TransactionID
        platformListingID:
          type: string
          description: Platform ListingID
        SKUofProduct:
          type: string
          description: SKU of Product on Viewider
        SKUofListing:
          type: string
          description: SKU of Product on Viewider
        platformSellingPrice:
          type: string
          description: Selling Price on platform
        platformCurrency:
          type: string
          description: Platform Currency
        buyerAddress:
          type: string
          description: Transaction buyer Address
        Token:
          type: string
          description: Seller account (Token)
        transactionCreatedDate:
          type: string
          description: Transaction Created Date on Platform (YYYY-MM-DD HH:mm:ss)
        transactionPaidDate:
          type: string
          description: Transaction Paid Date on Platform (YYYY-MM-DD HH:mm:ss)
        transactionSiteID:
          type: string
          description: Transaction SiteID on Viewider
        Quantity:
          type: integer
          description: Quantity Sold of the Transaction 
        productGroupID:
          type: string
          description: productGroupID on Viewider
        productID:
          type: string
          description: productID on Viewider
        seller:
          type: string
          description: Seller name on Viewider
        sellerUserID:
          type: integer
          description: Seller UserID on Viewider 
        supplier:
          type: string
          description: Supplier name on Viewider
        supplierUserID:
          type: integer
          description: Supplier UserID on Viewider
        SalesRecordStatus:
          type: string
          description: B2B Transction Status on Viewider  
        platformTitle:
          type: string
          description: Platform Listing Title 
        variationID:
          type: string
          description: variationID on Viewider 
        lastMileWarehouseID:
          type: string
          description: lastMileWarehouseID on Viewider 
        shippingCost:
          type: number
          description: Estimated shippingCost
        shippingCompany:
          type: string
          description: shippingCompany selected
        shippingService:
          type: string
          description: shippingService selected 
        Country:
          type: string
          description: Destination Country
        fulfillmentMethod:
          type: string
          description: fulfillmentMethod
        combineOrderID:
          type: string
          description: combineOrderID (same combineOrderID, means combineOrder)
        shipmentID:
          type: string
          description: shipmentID
        barcodeUrl:
          type: string
          description: Product barcode Url
        shippingLabelUrl:
          type: string
          description: Shipping Label Url
        confirmTransactionTime:
          type: string
          description: Confirm Transaction by Seller on Viewider (YYYY-MM-DD HH:mm:ss)
        internalMarkShipTime:
          type: string
          description: First mile Warehouse Mark Ship Time (YYYY-MM-DD HH:mm:ss)
        warehouseReceivedTime:
          type: string
          description: First Mile Warehouse Received Time (YYYY-MM-DD HH:mm:ss)
        warehouseMarkShipTime:
          type: string
          description: Last Mile Warehouse Mark Ship Time (YYYY-MM-DD HH:mm:ss)
    createCustomShipment:
      type: object
      required:
        - access_token
        - username
        - password
        - shipmentType
        - source
        - destination
        - recipient
        - items
        - remark
      properties:
        source:
          type: object
          properties:
            country:
              type: string
            address:
              type: string
            address2:
              type: string
            state:
              type: string
            city:
              type: string
            zipcode:
              type: string
          description: shipping information of sender
        destination:
          type: object
          properties:
            country:
              type: string
            address:
              type: string
            address2:
              type: string
            state:
              type: string
            city:
              type: string
            zipcode:
              type: string
          description: shipping information of receiver
        recipient:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
          description: recipient information
        items:
          type: array
          items:
            $ref: '#/components/schemas/shippingItem'
        remark:
          type: string
        username:
          type: string
          description: username of Viewider account
        password:
          type: string
          description: password of Viewider account
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseCreateCustomShipment:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseCreateCustomShipment.response'
    responseCreateCustomShipment.response:
      type: object
      properties:
        createShipments:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateCustomShipment.response.createShipments'
          description: Contain List success & fail created shipments 
        validShipment:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateCustomShipment.response.validShipment'
          description: Array of Created Shipment Details
        invalidShipment:
          type: array
          items:
            $ref: '#/components/schemas/responseCreateCustomShipment.response.invalidShipment'
          description: Array of Invalid Shipment
    responseCreateCustomShipment.response.createShipments:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: List of success created Shipment ID
        fail:
          type: array
          items:
            type: string
          description: List of success created Shipment ID
    responseCreateCustomShipment.response.validShipment:
      type: object
      properties:
        _id:
          type: string
          description: shipmentID
        shipmentStatus:
          type: string
        shipmentType:
          type: string
          description: Shipment Type:<br>-  directLineShipment<br>-  localShipment<br>-  viewiderStock
        warehousePickUp:
          type: boolean
    responseCreateCustomShipment.response.invalidShipment:
        type: object
        properties:
          error_msg:
            type: string
    
    getInventoryByID:
      type: object
      required:
        - productGroupID
        - access_token
      properties:
        productGroupID:
          description: array of productGroupID to get Inventory
          type: array
          items:
            type: string
        access_token:
          type: string
          description: OAuthTaken of Viewider
    responseGetInventory:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          $ref: '#/components/schemas/responseGetInventory.response'
    responseGetInventory.response:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/responseGetInventory.data'
        page:
          type: integer
        pageCount:
          type: integer
    responseGetInventory.data:
      type: object
      properties:
        ProductGroups:
          type: array
          items:
            $ref: '#/components/schemas/responseGetInventory.data.PG'
    responseGetInventory.data.PG:
      type: object
      properties:
        ProductGroupID:
          type: string
        Products:
          type: array
          items:
            $ref: '#/components/schemas/responseGetInventory.data.PG.product'
    responseGetInventory.data.PG.product:
      type: object
      properties:
        productID:
          type: string
        SKU:
          type: string
        inventory:
          type: array
          items:
            $ref: '#/components/schemas/responseGetInventory.data.PG.product.inventory'
    responseGetInventory.data.PG.product.inventory:
      type: object
      properties:
        additionalCost:
          type: integer
        country: 
          type: string
        inventoryID:
          type: string
        location:
          type: string
        remainQuantity:
          type: integer
        safetyLine:
          type: integer
        zipCode:
          type: integer
      
    createPG:
      type: object
      required:
        - data
        - access_token
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
        access_token:
          type: string
          description: OAuthTaken of Viewider
    ProductGroup:
      type: object
      required:
        - products
        - viewiderCategoryID
        - customLabel
        - title
        - keywords
        - images
        - condition
        - conditionDescription
        - withBattery
        - withLiquid
        - html@1
        - html@2
        - html@3
        - html@4
        - specific@Brand
        - specific@MPN
        - specific@UPC
        - specific@EAN
        - specific@ISBN
        - fulfillmentParty
        - fulfillmentHandlingTime
        - fulfillmentShipToLocation@1
        - fulfillmentDeliveryDay@1
        - fulfillmentShippingCost@1
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        viewiderCategoryID:
          type: integer
        customLabel:
          type: string
          example: DB-1235
        title:
          type: string
          example: toy abcde
        keywords:
          type: string
          example: abcde
        images:
          type: array
          items:
            type: string
        condition:
          type: integer
        conditionDescription:
          type: string
        withBattery:
          type: boolean
        withLiquid:
          type: boolean
        html@1:
          type: string
          description: cannot be empty
        html@2:
          type: string
        html@3:
          type: string
        html@4:
          type: string
        specific@Brand:
          type: string
        specific@MPN:
          type: string
        specific@UPC:
          type: string
        specific@EAN:
          type: string
        specific@ISBN:
          type: string
        specific@_ANYSPEC_:
          type: string
          description: you can use any item spec
        fulfillmentParty:
          type: string
        fulfillmentHandlingTime:
          type: string
        fulfillmentShipToLocation@1:
          type: string
        fulfillmentDeliveryDay@1:
          type: string
        fulfillmentShippingCost@1:
          type: string
    Product:
      type: object
      required:
        - variationCustomLabel
        - variationImages
        - itemVariation@1
        - itemVariation@2
        - itemVariation@3
        - netPrice
        - qty
        - weight
        - weightUnit
        - length
        - height
        - depth
        - lengthUnit
        - country
        - location
        - zipCode
        - additionalCost
        - stockSafetyLine
      properties:
        variationCustomLabel:
          type: string
          example: DB-1235
        variationImages:
          type: array
          items:
            type: string
        itemVariation@1:
          type: string
          example: 'color:Blue'
        itemVariation@2:
          type: string
          example: 'size:XXL'
        itemVariation@3:
          type: string
          example: 'type:dress'
        netPrice:
          type: integer
          example:
            - 11.5
            - 22.2
        qty:
          type: integer
          example:
            - 1
            - 10
            - 15
        weight:
          type: integer
          example:
            - 1.5
            - 2.2
        weightUnit:
          type: string
          example:
            - kg
            - g
            - oz
            - lbs
        length:
          type: integer
          example:
            - 1.5
            - 2.2
        height:
          type: integer
          example:
            - 1.5
            - 2.2
        depth:
          type: integer
          example:
            - 1.5
            - 2.2
        lengthUnit:
          type: string
          example:
            - mm
            - cm
            - m
            - inch
        country:
          type: string
        location:
          type: string
        zipCode:
          type: string
        additionalCost:
          type: integer
        stockSafetyLine:
          type: integer
    responseCreatePG:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        response:
          type: object
          properties:
            failCount:
              type: integer
            successCount:
              type: integer
            productGroups:
              type: array
              items:
                $ref: '#/components/schemas/responseCreatePG.ProductGroup'
    responseCreatePG.ProductGroup:
      type: object
      properties:
        adoptViewiderPacking:
          type: boolean
        brandID:
          type: string
        catalogID:
          type: string
        condition:
          type: integer
        conditionDescription:
          type: string
        createFormListing:
          type: string
        customLabel:
          type: string
        customMessage:
          type: string
        customTag:
          type: array
          items:
            type: string
        products:
          items:
            $ref: '#/components/schemas/responseCreatePG.Product'
        status:
          type: string
        fulfillment:
          $ref: '#/components/schemas/responseCreatePG.ProductGroup.fulfillment'
        productGroupID:
          type: string
        ownerID:
          type: integer
        viewiderCategoryID:
          type: integer
    responseCreatePG.inventory:
      type: object
      properties:
        inventoryID:
          type: string
        additionalCost:
          type: integer
        customMessage:
          type: string
        ownerID:
          type: integer
        paidQuantity:
          type: integer
        remainQuantity:
          type: integer
        returnQuantity:
          type: integer
        safetyLine:
          type: integer
        shipQuantity:
          type: integer
        status:
          type: string
        type:
          type: string
        unknownQuantity:
          type: integer
        unpaidQuantity:
          type: integer
        userID:
          type: array
          items:
            type: integer
        warehouseID:
          type: string
    responseCreatePG.Product:
      type: object
      properties:
        acceptReturn:
          type: boolean
        cost:
          type: integer
        currency:
          type: string
        customLabel:
          type: string
        customMessage:
          type: string
        depth:
          type: integer
        ean:
          type: string
        height:
          type: string
        images:
          type: array
          items:
            type: string
        isbn:
          type: string
        length:
          type: integer
        lengthUnit:
          type: string
        mpn:
          type: string
        productID:
          type: string
        releaseDate:
          type: string
        returnCost:
          type: integer
        sellingPrice:
          type: integer
        status:
          type: string
        upc:
          type: string
        viewiderPackingID:
          type: string
        weight:
          type: integer
        weightUnit:
          type: string
        withBattery:
          type: boolean
        withLiquid:
          type: boolean
        inventory:
          type: array
          items:
            $ref: '#/components/schemas/responseCreatePG.inventory'
    responseCreatePG.ProductGroup.fulfillment.shippingDetail:
      type: object
      properties:
        deliveryDay:
          type: string
        shippingCost:
          type: integer
        shipToLocation:
          type: array
          items:
            type: string
    responseCreatePG.ProductGroup.fulfillment:
      type: object
      properties:
        fulfillment:
          type: string
        handlingTime:
          type: string
        shippingDetail:
          items:
            $ref: >-
              #/components/schemas/responseCreatePG.ProductGroup.fulfillment.shippingDetail
    shippingItem:
      type: object
      required:
        - title
        - customLabel
        - images
        - quantity
        - unitPrice
        - upc
        - itemTags
        - itemRemark
      properties:
        title:
          type: string
        customLabel:
          type: string
        images:
          type: array
          items:
            type: string
        quantity:
          type: string
        unitPrice:
          type: string
        upc:
          type: string
        itemTags:
          type: array
          items:
            type: string
        itemRemark:
          type: string