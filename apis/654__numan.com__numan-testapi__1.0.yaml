penapi: 3.0.0
info:
  version: '1.0'
  title: 'Numan Test API'
  description: 'This is a collection of API endpoints to be used for the test challenges during hiring process'
  contact:
    email: admin@numan.com
servers:
  - description: Numan Test API
    url: 'https://numan-testapi.herokuapp.com/v1/'
paths:
  /status:
    get:
      summary: Returns status information
      description: Returns status information about the service
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '"ok" or "error"'
  /product_categories:
    get:                    
      summary: Returns a collection of categories
      description: Returns a collection of categories including their products and their products' product variants
      responses:
        '200':
          $ref: '#/components/responses/ProductCategoriesResponse'
  /events:
    get:                    
      summary: Returns a collection of events
      description: Returns a collection of events
      responses:
        '200':
          $ref: '#/components/responses/EventsCollection'
    post:
      summary: Adds an event
      description: Adds an event to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAttributes'
      responses:
        '201':
          $ref: '#/components/responses/EventResponse'
        '422':
          $ref: '#/components/responses/GeneralError'
components:
  schemas:
    JsonApiObjectIdAndType:
      type: object
      properties:
        id: 
          type: string
          description: Unique Identifier of an object. Standard field according to JSON API format for any object.
        type: 
          type: string
          description: The type of the object.  Standard field according to JSON API format for any object.
      required:
        - id
        - type
    JsonApiSingleObjectRelationship:
      type: object
      properties:
        data: 
          $ref: '#/components/schemas/JsonApiObjectIdAndType'
      required:
        - data
    JsonApiCollectionOfObjectsRelationship:
      properties:
        data: 
          type: array
          items:
            $ref: '#/components/schemas/JsonApiObjectIdAndType'
      required:
        - data
    EventAttributes:
      type: object
      properties:
        type:
          type: string
          description: 'The event type, examples: "user-selected-product-category", "user-selected-product", "user-submited-order" i.e.'
        user_id:
          type: string
          description: 'The ID of the user, should be unique for the user, can be any identifier'
        data:
          type: object
          description: 'An object containing custom data for each event, can hold different data for each type'
      required:
        - type
        - user_id
        - data
    Event:
      description: An Event object including its fields
      type: object
      properties:
        id: 
          type: string
          description: 'Unique Identifier of an event. Standard field according to JSON API format for any object.'
        type:
          type: string
          description: 'The type of the object.  Standard field according to JSON API format for any object. For event objects this has always the value of "event".'
        attributes:
          $ref: '#/components/schemas/EventAttributes'
      required:
        - id
        - type
        - attributes
    ProductCategory:
      description: A ProductCategory object including its fields
      type: object
      properties:
        id: 
          type: string
          description: 'Unique Identifier of an event. Standard field according to JSON API format for any object.'
        type:
          type: string
          description: 'The type of the object. Standard field according to JSON API format for any object. For product category objects this has always the value of "product_category".'
        attributes:
          type: object
          properties:
            name:
              type: string
              description: 'The human readable name of the ProductCategory'
            slug:
              type: string
              description: 'A unique code that can be used in URLs'
            default_product_id:
              type: string
              description: 'The ID of the default Product for this ProductCategory'
            active:
              type: boolean
              description: 'Indicates whether the ProductCategory is active for purcahse or not'
            position:
              type: integer
              description: "Indicates the ProductCategory's position in relation with other ProductCategories. Used to dicate the order of appearance."
            relationships:
              type: object
              description: "An object that contains all the relationship for the entity. Standard optional field according to JSON API format for any object."
              properties:
                default_product:
                  $ref: '#/components/schemas/JsonApiSingleObjectRelationship'
                products:
                  $ref: '#/components/schemas/JsonApiCollectionOfObjectsRelationship'
          required:
            - name
            - slug
            - active
            - position
      required:
        - id
        - type
        - attributes
  responses:
    EventResponse:
      description: An Event object including its fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'
    EventsCollection:
      description: A list of Events including their fields
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                    $ref: '#/components/schemas/Event'
    ProductCategoriesResponse:
      description: A list of Product categories including their fields
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                    $ref: '#/components/schemas/ProductCategory'  
    GeneralError:
      description: General error due to several conditions
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: object
                description: 'An object carrying one or more errors'