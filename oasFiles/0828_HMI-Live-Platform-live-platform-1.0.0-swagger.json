{
  "openapi" : "3.0.2",
  "info" : {
    "version" : "1.0.0",
    "title" : "hmi-iot-api",
    "description" : "The API for the Herman Miller Live Platform"
  },
  "paths" : {
    "/facilities" : {
      "description" : "Gets a list of all facilities",
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Facility"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauathorized"
          }
        }
      }
    },
    "/facilities/{facilityId}" : {
      "get" : {
        "description" : "Gets a facility by Id",
        "parameters" : [ {
          "in" : "path",
          "name" : "facilityId",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedFacility"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/facilities/{facilityId}/floors" : {
      "description" : "Gets a list of all floors for a facility",
      "parameters" : [ {
        "in" : "path",
        "name" : "facilityId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The facility the floors are located"
      } ],
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Floor"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/floors/{floorId}" : {
      "description" : "Gets a list of all floors for a facility",
      "parameters" : [ {
        "in" : "path",
        "name" : "facilityId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The facility the floors are located"
      }, {
        "in" : "path",
        "name" : "floorId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The id of the floor"
      } ],
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedFloor"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/floors/{floorId}/spaces" : {
      "description" : "Gets a list of all spaces for a given floor",
      "parameters" : [ {
        "in" : "path",
        "name" : "facilityId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The facility in which the floors are located"
      }, {
        "in" : "path",
        "name" : "floorId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The floor on which the spaces are located"
      } ],
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Space"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/spaces/{spaceId}" : {
      "description" : "Gets a space",
      "parameters" : [ {
        "in" : "path",
        "name" : "spaceId",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedSpace"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/spaces/{spaceId}/zones" : {
      "description" : "Gets a list of all zones for a given space",
      "parameters" : [ {
        "in" : "path",
        "name" : "spaceId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The space in which the zones are located"
      } ],
      "get" : {
        "tags" : [ "ontology" ],
        "responses" : {
          "200" : {
            "description" : "A list of zones with associated workstations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Zone"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/zones/{zoneId}" : {
      "description" : "Gets a zone",
      "parameters" : [ {
        "in" : "path",
        "name" : "zoneId",
        "required" : true,
        "description" : "The id of the zone",
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "ontology", "workstations" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedZone"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/zones/{zoneId}/workstations" : {
      "description" : "Gets a list of all workstations for a given zone",
      "parameters" : [ {
        "in" : "path",
        "name" : "zoneId",
        "required" : true,
        "description" : "The id of the zone",
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "ontology", "workstations" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Workstation"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/workstations/{workstationId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "workstationId",
        "required" : true,
        "description" : "The id of the workstation",
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "description" : "Gets a specific workstation for the given id",
        "tags" : [ "workstations" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workstation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/workstations/{workstationId}/occupant" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "workstationId",
        "required" : true,
        "description" : "The id of the workstation",
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "workstations", "checkins" ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "workstations", "checkins" ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "userId" : {
                    "type" : "integer",
                    "example" : 2001
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "workstations", "checkins" ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/devices/{deviceId}/paddle/color" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "deviceId",
        "required" : true,
        "description" : "The id of the device",
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "tags" : [ "devices", "workstations" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaddleColor"
                }
              }
            }
          },
          "400" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Not Authorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "devices", "workstations" ],
        "description" : "Sets the color of the paddle light",
        "requestBody" : {
          "description" : "Provides a color value to the the device",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaddleColor"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "users" ],
        "requestBody" : {
          "description" : "The user to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          }
        }
      }
    },
    "/users/{userId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "userId",
        "required" : true,
        "description" : "The id of the user",
        "example" : 4545,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "tags" : [ "users" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Unauathorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/HMI-Live-Platform/live-platform/1.0.0"
  } ],
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          }
        }
      },
      "Workstation" : {
        "type" : "object",
        "properties" : {
          "workstationId" : {
            "type" : "string",
            "example" : 1000
          },
          "name" : {
            "type" : "string",
            "example" : "17301B7-WS"
          },
          "deviceId" : {
            "type" : "string",
            "example" : "175102B2"
          },
          "type" : {
            "enum" : [ "open", "assigned" ],
            "example" : "open"
          },
          "occupant" : {
            "type" : "string",
            "example" : "Alex Jones"
          },
          "occupantId" : {
            "type" : "integer",
            "example" : 2345
          },
          "status" : {
            "enum" : [ "occupied", "unoccupied", "none" ],
            "example" : "occupied"
          },
          "registration" : {
            "enum" : [ "checkedIn", "none" ],
            "example" : "checkedIn"
          },
          "lastUpdate" : {
            "type" : "string",
            "description" : "UTC",
            "format" : "date-time"
          }
        }
      },
      "Facility" : {
        "type" : "object",
        "properties" : {
          "facilityId" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "World Headquarters"
          },
          "lastUpdate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExtendedFacility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Facility"
        }, {
          "type" : "object",
          "required" : [ "floors" ],
          "properties" : {
            "floors" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Floor"
              }
            }
          }
        } ]
      },
      "Floor" : {
        "type" : "object",
        "properties" : {
          "floorId" : {
            "type" : "integer",
            "example" : 10
          },
          "name" : {
            "type" : "string",
            "example" : "First Floor"
          },
          "lastUpdate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExtendedFloor" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Floor"
        }, {
          "type" : "object",
          "required" : [ "spaces" ],
          "properties" : {
            "spaces" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Space"
              }
            }
          }
        } ]
      },
      "Space" : {
        "type" : "object",
        "properties" : {
          "spaceId" : {
            "type" : "integer",
            "example" : 20
          },
          "name" : {
            "type" : "string",
            "example" : "Cafe"
          },
          "lastUpdate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExtendedSpace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Space"
        }, {
          "type" : "object",
          "required" : [ "zones" ],
          "properties" : {
            "zones" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ExtendedZone"
              }
            }
          }
        } ]
      },
      "Zone" : {
        "type" : "object",
        "properties" : {
          "zoneId" : {
            "type" : "integer",
            "example" : 30
          },
          "name" : {
            "type" : "string",
            "example" : "Window Seats"
          },
          "workstations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Workstation"
            }
          },
          "lastUpdate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExtendedZone" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Zone"
        }, {
          "type" : "object",
          "required" : [ "workstations" ],
          "properties" : {
            "workstations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Workstation"
              }
            }
          }
        } ]
      },
      "PaddleColor" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "A color specified as a hex value",
            "type" : "string",
            "example" : "#0000ff"
          }
        }
      }
    }
  }
}