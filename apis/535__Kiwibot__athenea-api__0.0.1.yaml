openapi: 3.0.2
info:
  title: Athenea API
  description: This is an MVP for a B2B shipping API for Kiwibot
  version: 0.0.1
paths:
  '/v1/requesters/{requester_id}/tasks':
    get:
      tags:
        - Tasks
      summary: Get All Tasks
      description: >-
        This endpoint allows getting all the tasks between a specified period of
        time and

        certain status.
      operationId: get_all_tasks_v1_requesters__requester_id__tasks_get
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
        - required: false
          schema:
            title: Status
            type: string
            default: pending
          name: status
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Tasks
      summary: Create Task
      description: >-
        It lets requesters create a new task with as minimum as a dropoff and
        pickup locations.
      operationId: create_task_v1_requesters__requester_id__tasks_post
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/tasks/{task_id}/status':
    patch:
      tags:
        - Tasks
      summary: Update Task Status
      description: >-
        It allows updating the current status of a task.

        Once ran correctly, it will save automatically the corresponding
        timestamp for the 

        status being updated. 
      operationId: >-
        update_task_status_v1_requesters__requester_id__tasks__task_id__status_patch
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: true
          schema:
            title: Task Id
            type: string
            format: uuid
          name: task_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/tasks/{task_id}/worker':
    patch:
      tags:
        - Tasks
      summary: Update Task Worker
      description: It allows updating the current worker assigned to a task.
      operationId: >-
        update_task_worker_v1_requesters__requester_id__tasks__task_id__worker_patch
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: true
          schema:
            title: Task Id
            type: string
            format: uuid
          name: task_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/tasks/{task_id}':
    get:
      tags:
        - Tasks
      summary: Get Task
      description: This endpoint allows getting a single task by id.
      operationId: get_task_v1_requesters__requester_id__tasks__task_id__get
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: true
          schema:
            title: Task Id
            type: string
            format: uuid
          name: task_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/requesters:
    get:
      tags:
        - Requesters
      summary: Get All Requesters
      description: >-
        This endpoint allows getting all the orders between a specified period
        of time and

        certain status.
      operationId: get_all_requesters_v1_requesters_get
      parameters:
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestersOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Requesters
      summary: Create Requester
      description: 'It lets requesters create a new requester. '
      operationId: create_requester_v1_requesters_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requester'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/name':
    patch:
      tags:
        - Requesters
      summary: Update Requester Name
      description: It allows updating the name of a requester.
      operationId: update_requester_name_v1_requesters__requester_id__name_patch
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Name'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/discount':
    patch:
      tags:
        - Requesters
      summary: Update Requester Fare Discount
      description: It allows updating the discount fare of a requester.
      operationId: >-
        update_requester_fare_discount_v1_requesters__requester_id__discount_patch
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareDiscount'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}':
    get:
      tags:
        - Requesters
      summary: Get Requester
      description: This endpoint allows getting a single order by id.
      operationId: get_requester_v1_requesters__requester_id__get
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/quotes':
    get:
      tags:
        - Quotes
      summary: Get Active Quotes
      description: This endpoint allows getting all the quotes of a requester.
      operationId: get_active_quotes_v1_requesters__requester_id__quotes_get
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotesOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Quotes
      summary: Create Quote
      description: 'It lets us create a new quote. '
      operationId: create_quote_v1_requesters__requester_id__quotes_post
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/v1/requesters/{requester_id}/quotes/{quote_id}':
    get:
      tags:
        - Quotes
      summary: Get Quote
      description: This endpoint allows getting a single quote by id.
      operationId: get_quote_v1_requesters__requester_id__quotes__quote_id__get
      parameters:
        - required: true
          schema:
            title: Requester Id
            type: string
            format: uuid
          name: requester_id
          in: path
        - required: true
          schema:
            title: Quote Id
            type: string
            format: uuid
          name: quote_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/zones:
    get:
      tags:
        - Zones
      summary: Get All Zones
      description: This endpoint allows getting all the zones.
      operationId: get_all_zones_v1_zones_get
      parameters:
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Zones
      summary: Update Zones
      description: It allows updating the current zones using Mapbox as source.
      operationId: update_zones_v1_zones_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
  '/v1/zones/{zone_id}':
    get:
      tags:
        - Zones
      summary: Get Zone
      description: This endpoint allows getting a single zone by id.
      operationId: get_zone_v1_zones__zone_id__get
      parameters:
        - required: true
          schema:
            title: Zone Id
            type: string
          name: zone_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneOut'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    FareDiscount:
      title: FareDiscount
      required:
        - fare_discount
      type: object
      properties:
        fare_discount:
          title: Fare Discount
          type: number
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Manifest:
      title: Manifest
      required:
        - description
        - value
      type: object
      properties:
        description:
          title: Description
          type: string
        value:
          title: Value
          type: number
    ManifestItem:
      title: ManifestItem
      required:
        - name
        - quantity
        - value
      type: object
      properties:
        name:
          title: Name
          type: string
        quantity:
          title: Quantity
          type: integer
        value:
          title: Value
          type: number
    Name:
      title: Name
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
    Quote:
      title: Quote
      required:
        - pickup
        - dropoff
      type: object
      properties:
        pickup:
          $ref: '#/components/schemas/routers__quotes__Pickup'
        dropoff:
          $ref: '#/components/schemas/routers__quotes__Dropoff'
    QuoteOut:
      title: QuoteOut
      required:
        - id
        - zone_id
        - valid_until
        - estimated_duration
        - estimated_distance
        - fare
        - pickup
        - dropoff
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        zone_id:
          title: Zone Id
          type: string
        valid_until:
          title: Valid Until
          type: number
        estimated_duration:
          title: Estimated Duration
          type: number
        estimated_distance:
          title: Estimated Distance
          type: number
        fare:
          title: Fare
          type: number
        pickup:
          $ref: '#/components/schemas/routers__quotes__Pickup'
        dropoff:
          $ref: '#/components/schemas/routers__quotes__Dropoff'
    QuotesOut:
      title: QuotesOut
      required:
        - quotes
      type: object
      properties:
        quotes:
          title: Quotes
          type: array
          items:
            $ref: '#/components/schemas/QuoteOut'
    Requester:
      title: Requester
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
        fare_discount:
          title: Fare Discount
          type: number
          default: 0
        webhook_url:
          title: Webhook Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    RequesterOut:
      title: RequesterOut
      required:
        - id
        - name
        - fare_discount
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        fare_discount:
          title: Fare Discount
          type: number
        webhook_url:
          title: Webhook Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    RequestersOut:
      title: RequestersOut
      required:
        - requesters
      type: object
      properties:
        requesters:
          title: Requesters
          type: array
          items:
            $ref: '#/components/schemas/RequesterOut'
    StateUpdate:
      title: StateUpdate
      required:
        - status
      type: object
      properties:
        status:
          title: Status
          type: string
    Task:
      title: Task
      required:
        - quote_id
        - external_id
        - manifest
        - manifest_items
      type: object
      properties:
        quote_id:
          title: Quote Id
          type: string
          format: uuid
        external_id:
          title: External Id
          type: string
        manifest:
          $ref: '#/components/schemas/Manifest'
        manifest_items:
          title: Manifest Items
          type: array
          items:
            $ref: '#/components/schemas/ManifestItem'
    TaskOut:
      title: TaskOut
      required:
        - id
        - quote_id
        - zone_id
        - status
        - created_at
        - estimated_pickup_at
        - estimated_delivery_at
        - estimated_distance
        - estimated_duration
        - fare
        - pickup
        - dropoff
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        quote_id:
          title: Quote Id
          type: string
          format: uuid
        zone_id:
          title: Zone Id
          type: string
        worker_id:
          title: Worker Id
          type: string
        status:
          title: Status
          type: string
        created_at:
          title: Created At
          type: number
        estimated_pickup_at:
          title: Estimated Pickup At
          type: number
        estimated_delivery_at:
          title: Estimated Delivery At
          type: number
        estimated_distance:
          title: Estimated Distance
          type: number
        estimated_duration:
          title: Estimated Duration
          type: number
        fare:
          title: Fare
          type: number
        pickup:
          $ref: '#/components/schemas/routers__tasks__Pickup'
        dropoff:
          $ref: '#/components/schemas/routers__tasks__Dropoff'
    TasksOut:
      title: TasksOut
      required:
        - tasks
      type: object
      properties:
        tasks:
          title: Tasks
          type: array
          items:
            $ref: '#/components/schemas/TaskOut'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    WorkerUpdate:
      title: WorkerUpdate
      required:
        - worker_id
      type: object
      properties:
        worker_id:
          title: Worker Id
          type: string
    ZoneOut:
      title: ZoneOut
      required:
        - id
        - name
        - currency
        - time_zone
        - base_fare
        - distance_factor
        - open_time
        - close_time
        - last_updated_at
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        currency:
          title: Currency
          type: string
        time_zone:
          title: Time Zone
          type: string
        base_fare:
          title: Base Fare
          type: number
        distance_factor:
          title: Distance Factor
          type: number
        open_time:
          title: Open Time
          type: string
        close_time:
          title: Close Time
          type: string
        last_updated_at:
          title: Last Updated At
          type: number
    ZonesOut:
      title: ZonesOut
      required:
        - zones
      type: object
      properties:
        zones:
          title: Zones
          type: array
          items:
            $ref: '#/components/schemas/ZoneOut'
    routers__quotes__Dropoff:
      title: Dropoff
      required:
        - dropoff_address
      type: object
      properties:
        lat:
          title: Lat
          type: number
        lon:
          title: Lon
          type: number
        dropoff_address:
          title: Dropoff Address
          type: string
        dropoff_description:
          title: Dropoff Description
          type: string
    routers__quotes__Pickup:
      title: Pickup
      required:
        - pickup_address
      type: object
      properties:
        lat:
          title: Lat
          type: number
        lon:
          title: Lon
          type: number
        pickup_address:
          title: Pickup Address
          type: string
        pickup_description:
          title: Pickup Description
          type: string
    routers__tasks__Dropoff:
      title: Dropoff
      required:
        - dropoff_address
      type: object
      properties:
        lat:
          title: Lat
          type: number
        lon:
          title: Lon
          type: number
        dropoff_address:
          title: Dropoff Address
          type: string
        dropoff_description:
          title: Dropoff Description
          type: string
    routers__tasks__Pickup:
      title: Pickup
      required:
        - pickup_address
      type: object
      properties:
        lat:
          title: Lat
          type: number
        lon:
          title: Lon
          type: number
        pickup_address:
          title: Pickup Address
          type: string
        pickup_description:
          title: Pickup Description
          type: string
