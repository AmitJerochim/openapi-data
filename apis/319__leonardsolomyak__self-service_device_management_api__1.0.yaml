openapi: 3.0.2
info:
  title: Self-Service Device Management API
  version: '1.0'
servers:
  - url: 'https://dmgmoridevices.adamos.com/ssdm'
paths:
  /iotconnectorstatus:
    get:
      summary: Get hardware (health) status of IoTconnector
      operationId: iotconnectorstatus
      description: Get health status of IoTconnector connected to the provided machine id.
      parameters:
        - in: query
          name: machineid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: IoTconnector health status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoTconnectorStatus'
        '404':
          description: No IoTconnector found for given machine id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /healththresholds:
    get:
      summary: Get thresholds for health values of IoTconnector
      operationId: healththresholds
      description: >-
        Get warning anc critical thresholds for the health indicators cpu, ram
        and disk.
      parameters: []
      responses:
        '200':
          description: Health threshold information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThresholdConfiguration'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /softwarelist:
    get:
      summary: Request software list of IoTconnector
      operationId: softwarelist
      description: Request a detailed list of software packages of an IoTconnector
      parameters:
        - in: query
          name: machineid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Software list of IoTconnector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareList'
        '404':
          description: No IoTconnector found for given machine id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /approvesoftwareinstallation:
    put:
      summary: Approves the installation of a software package
      operationId: approvesoftwareinstallation
      description: >-
        Approves the installation of a software package and provides the
        installation date
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovePackage'
        required: true
      responses:
        '200':
          description: Software package successfully approved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedStatus'
        '404':
          description: >-
            Software package with given id or IoTconnector with given machine id
            not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Software package can not be approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /updatestrategy:
    get:
      summary: Requests the update strategy of an IoTconnector
      operationId: updatestrategy
      description: Requests the update strategy of an IoTconnector
      parameters:
        - in: query
          name: machineid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Update strategy successfully set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStrategy'
        '404':
          description: No IoTconnector found for given machine id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /setupdatestrategy:
    put:
      summary: Defines the update strategy of an IoTconnector
      operationId: setupdatestrategy
      description: >-
        Defines the update strategy of an IoTconnector (Automatic,
        AutomaticWithMaintenanceInterval, Manual)
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStrategy'
        required: true
      responses:
        '200':
          description: Update strategy successfully set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStrategy'
        '404':
          description: No IoTconnector found for given machine id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /setupdatenotifications:
    post:
      summary: Enable or disable the update notifications of an IoTconnector
      operationId: setupdatenotifications
      description: >-
        If enabled the Device Management will call the API of the myDMGMORI
        portal whenever the related IoTconnector has a package which needs to be
        installed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotification'
        required: true
      responses:
        '200':
          description: Callback successfully registered for IoTconnector
          content: {}
        '404':
          description: No IoTconnector found for given machine id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    SoftwareList:
      type: object
      properties:
        iotconnectorid:
          type: integer
          description: ID of IoTconnector object
          default: 0
        machineid:
          type: string
          description: serial number of machine
        software:
          type: array
          items:
            $ref: '#/components/schemas/SoftwarePackage'
          description: software list of IoTconnector
      required:
        - iotconnectorid
        - machineid
        - software
    IoTconnectorStatus:
      type: object
      properties:
        iotconnectorid:
          type: integer
          description: ID of IoTconnector object
          default: 0
        machineid:
          type: string
          description: serial number of machine
        online:
          type: boolean
          description: >-
            Online status of the IoTconnector according to cumulocity send
            status
          default: false
        notificationsenabled:
          type: boolean
        cpuusage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: CPU usage in percent (i.e. value of 50 means 50%)
        ramusage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: RAM usage in percent (i.e. value of 50 means 50%)
        diskcusage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: 'Drive C: usage in percent (i.e. value of 50 means 50%)'
        diskdusage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: 'Drive D: usage in percent (i.e. value of 50 means 50%)'
      required:
        - iotconnectorid
        - machineid
        - online
        - notificationsenabled
        - cpuusage
        - ramusage
        - diskcusage
        - diskdusage
    ThresholdConfiguration:
      type: object
      properties:
        cpuwarning:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the CPU utilization is higher than the defined value it will be
            considered as warning
        cpucritical:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the CPU utilization is higher than the defined value it will be
            considered as critical
        ramwarning:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the RAM utilization is higher than the defined value it will be
            considered as warning
        ramcritical:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the RAM utilization is higher than the defined value it will be
            considered as critical
        diskwarning:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the disk utilization is higher than the defined value it will be
            considered as warning
        diskcritical:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: >-
            If the disk utilization is higher than the defined value it will be
            considered as critical
      required:
        - cpuwarning
        - cpucritical
        - ramwarning
        - ramcritical
        - diskwarning
        - diskcritical
    UpdateStrategy:
      type: object
      properties:
        machineid:
          type: string
          description: serial number of machine
        updatestrategy:
          type: string
          enum:
            - automatic
            - automaticmaintenance
            - manual
          description: >-
            automatic - install all updates automatically which do not require
            approval

            automaticmaintenance - install all updates automatically within
            maintenance interval which do not require approval

            manual - install all updates manually
        maintenanceinterval:
          type: object
          description: >-
            Defines the maintenance interval for the IoTconnector. Only
            necessary if the update strategy automaticmaintenance is used
          properties:
            interval:
              type: string
              enum:
                - daily
                - weekly
                - monthly
            day:
              type: integer
              format: int32
              minimum: 1
              maximum: 30
              description: >-
                This parameter defines the day of the maintenance interval.

                weekly interval: 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 -
                Thursday, 5 - Friday, 6 - Saturday, 7 - Sunday

                monthly interval: value describes the day of the month
            timestart:
              type: string
              pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
              description: >-
                Defines the start of the maintenance interval. The timestamp has
                to interpreted as UTC time.
            duration:
              type: integer
              format: int32
              minimum: 1
              maximum: 24
              description: Defines the duration of the maintenance interval in hours.
      required:
        - machineid
        - updatestrategy
    SoftwarePackage:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        id:
          type: integer
          description: ID of package in software repository
        status:
          $ref: '#/components/schemas/SoftwarePackageStatus'
      required:
        - name
        - version
        - id
        - status
    ApprovePackage:
      type: object
      properties:
        machineid:
          type: string
          description: serial number of machine
        name:
          type: string
        version:
          type: string
        id:
          type: integer
          description: ID of package in software repository
        scheduledinstallationtime:
          type: string
          format: date-time
          description: >-
            scheduled installation timestamp in UTC (RFC 3339, section 5.6;
            i.e.2017-07-21T17:32:28Z). If the timestamp specifies a date in the
            past the package should be installed immediatley.
      required:
        - machineid
        - name
        - version
        - id
        - scheduledinstallationtime
    ApprovedStatus:
      type: object
      properties:
        iotconnectorid:
          type: integer
          description: ID of IoTconnector object
          default: 0
        machineid:
          type: string
          description: serial number of machine
        name:
          type: string
        version:
          type: string
        status:
          $ref: '#/components/schemas/SoftwarePackageStatus'
      required:
        - iotconnectorid
        - machineid
        - name
        - version
        - status
    UpdateNotification:
      type: object
      properties:
        machineid:
          type: string
          description: serial number of machine
        enablenotifications:
          type: boolean
      required:
        - machineid
        - enablenotifications
    SoftwarePackageStatus:
      type: string
      enum:
        - assigned
        - downloading
        - downloaded successfully
        - download failed
        - downloaded extraction failed
        - downloaded checksum failed
        - to be installed
        - to be executed
        - installing
        - executing
        - installed
        - executed
        - installation failed
        - execution failed
        - waiting for dependencies
        - waiting for approval
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
