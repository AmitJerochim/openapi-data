{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.4.37",
    "title" : "IVA CV Vector API",
    "description" : "API to manage suspects and perform search. All queries to port 8089 unless you use custom configuration."
  },
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "search"
  } ],
  "paths" : {
    "/add" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "addSuspect",
        "summary" : "Add suspect to database",
        "description" : "Add suspect to database",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "description" : "suspect name",
                    "type" : "string"
                  },
                  "path_image" : {
                    "description" : "suspect photo file path",
                    "type" : "string"
                  },
                  "vector" : {
                    "description" : "base64 encoded array of float32 biometric features",
                    "type" : "string"
                  },
                  "search_detection_bool" : {
                    "description" : "Perform backward search against collected detections and recognize them as a suspect in case they match. Backward search is less accurate than live recognition, because only some of data available in runtime is saved into database.",
                    "type" : "string",
                    "enum" : [ "false", "true" ]
                  },
                  "override_suspect" : {
                    "description" : "When performing backward search, overwrite already recognized suspects to this new suspect, if similarity score is higher",
                    "type" : "string",
                    "enum" : [ "false", "true" ]
                  },
                  "threshold" : {
                    "description" : "Threshold to use during backward search. Detections with similarity score higher than treshold will be considered suspect.",
                    "type" : "number"
                  },
                  "group_id" : {
                    "description" : "Suspect group(s) id, comma-separated",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "integer",
                      "description" : "Id of the added suspect",
                      "example" : 534
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/remove" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "removeSuspect",
        "summary" : "Remove suspect from database",
        "description" : "Remove suspect from database",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "description" : "suspect id",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "string",
                      "example" : "Success removed"
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/remove_list" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "removeList",
        "summary" : "Remove group of suspects and its contents",
        "description" : "Remove group of suspects and its contents",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "group_id" : {
                    "description" : "Suspects' group id",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "string",
                      "example" : ""
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "searchSuspect",
        "summary" : "Search by single face in suspects database",
        "description" : "return one most similiar suspect and its similarity score (\"id\":id, \"score\":score in \"body\" response field)",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "vector" : {
                    "description" : "base64 encoded array of float32 biometric features",
                    "type" : "string"
                  },
                  "groups_id" : {
                    "description" : "Groups to search in. \"none\" for all groups, or comma-separated ids limit search to particular groups (i.e. \"2,5,6\")",
                    "type" : "string",
                    "default" : "none"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "example" : 543
                        },
                        "score" : {
                          "type" : "number",
                          "example" : 0.9998512268066406
                        }
                      }
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search_suspects" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "searchSuspects",
        "summary" : "Search by single face in suspects database",
        "description" : "return multiple most similiar suspects and its similarity score (array of \"id\":id, \"score\":score in \"body\" response field), sorted by score descending",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "vector" : {
                    "description" : "base64 encoded array of float32 biometric features",
                    "type" : "string"
                  },
                  "groups_id" : {
                    "description" : "Groups to search in. \"none\" for all groups, or comma-separated ids to limit search to particular groups (i.e. \"2,5,6\")",
                    "type" : "string",
                    "default" : "none"
                  },
                  "limit" : {
                    "description" : "limit search to top X results",
                    "type" : "integer",
                    "default" : 150
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "string",
                      "example" : ""
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search_list_in_lists" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "searchListInLists",
        "summary" : "Search group(s) of suspects in group(s) of suspects",
        "description" : "return multiple most similiar suspects and its similarity score",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "current_groups" : {
                    "description" : "comma-separated ids of suspect groups to search for",
                    "type" : "string"
                  },
                  "search_area" : {
                    "description" : "Groups to search in. \"none\" for all groups, or comma-separated ids to limit search to particular groups (i.e. \"2,5,6\")",
                    "type" : "string",
                    "default" : "none"
                  },
                  "limit" : {
                    "description" : "limit search to top X results",
                    "type" : "integer",
                    "default" : 150
                  },
                  "group_by" : {
                    "description" : "Combine results into single group (\"false\" to keep original groups)",
                    "type" : "string",
                    "enum" : [ "false", "true" ],
                    "default" : "false"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "check response \"status\" field for operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "string",
                      "example" : ""
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search_detection" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "searchDetection",
        "summary" : "Search for detections",
        "description" : "return array of detections with similarity score higher than treshold, in response \"body\" field",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "cam_id" : {
                    "description" : "Return detections from camera cam_id only",
                    "type" : "integer",
                    "minimum" : 0,
                    "default" : 0
                  },
                  "timestamp_start" : {
                    "description" : "Limits search results by timestamp, keeping only detections after timestamp_start",
                    "type" : "integer"
                  },
                  "timestamp_end" : {
                    "description" : "Limits search results by timestamp, keeping only detections before timestamp_end",
                    "type" : "integer",
                    "minimum" : 1
                  },
                  "vector" : {
                    "description" : "base64 encoded array of float32 biometric features",
                    "type" : "string"
                  },
                  "treshold" : {
                    "description" : "minimum similarity score",
                    "type" : "number",
                    "default" : "None"
                  },
                  "sort_by_score" : {
                    "description" : "Sort results by score descending",
                    "type" : "string",
                    "enum" : [ "true", "false" ],
                    "default" : "false"
                  },
                  "limit" : {
                    "description" : "limits the maximum amount of detections to be returned",
                    "type" : "integer",
                    "minimum" : 1,
                    "default" : 150
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "$ref" : "#/components/schemas/DetectionWithVector"
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "getStatus",
        "summary" : "",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/response"
                }
              }
            }
          }
        }
      }
    },
    "/score_between" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "scoreBetween",
        "summary" : "Get score between vectors",
        "description" : "Get the difference between two vectors",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "vector_one" : {
                    "type" : "string"
                  },
                  "vector_two" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/responseStatus"
                    },
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "score" : {
                          "type" : "number"
                        }
                      }
                    },
                    "message" : {
                      "$ref" : "#/components/schemas/responseMessage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/change" : {
      "post" : {
        "tags" : [ "search" ],
        "operationId" : "change",
        "summary" : "Change",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/response"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8089"
  }, {
    "url" : "http://localhost:18080/search/api"
  } ],
  "components" : {
    "schemas" : {
      "responseMessage" : {
        "type" : "string",
        "description" : "Response message: containing either an empty string (status: 1) or description of an error (status: 0)",
        "oneOf" : [ {
          "description" : "Empty string for success"
        }, {
          "description" : "Message containing error information in case of a failure"
        } ],
        "title" : "responseMessage",
        "example" : ""
      },
      "responseStatus" : {
        "title" : "responseStatus",
        "type" : "integer",
        "description" : "Response status: 0 is failure, 1 is success",
        "enum" : [ 0, 1 ],
        "example" : 1
      },
      "response" : {
        "title" : "response",
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/responseStatus"
          },
          "body" : {
            "type" : "string",
            "example" : ""
          },
          "message" : {
            "$ref" : "#/components/schemas/responseMessage"
          }
        },
        "description" : "Standart response"
      },
      "Detection" : {
        "title" : "Detection",
        "type" : "object",
        "description" : "Object containing Detection information",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "62433f34-9556-11ea-be11-0242ac15000c"
          },
          "cam_id" : {
            "type" : "integer",
            "example" : 61
          },
          "suspect_id" : {
            "type" : "integer",
            "example" : 519
          },
          "score" : {
            "type" : "number",
            "example" : 0.957857
          },
          "photos" : {
            "type" : "array",
            "maxItems" : 6,
            "minItems" : 1,
            "items" : {
              "type" : "string"
            },
            "example" : [ "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_0.jpg", "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_5.jpg", "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_10.jpg", "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_15.jpg", "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_20.jpg", "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/face_25.jpg" ]
          },
          "time" : {
            "type" : "integer",
            "example" : 1589400885
          },
          "time_pos" : {
            "type" : "string",
            "example" : "00:00:00"
          },
          "start_read_time" : {
            "type" : "integer",
            "example" : 1589400878
          },
          "end_read_time" : {
            "type" : "integer",
            "example" : 1589400880
          },
          "video_chunk_url" : {
            "type" : "string",
            "example" : ""
          },
          "qa_params" : {
            "type" : "array",
            "maxItems" : 6,
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/QA_Params"
            }
          },
          "supposed_suspect_id" : {
            "type" : "integer",
            "example" : 519
          },
          "matched_photo" : {
            "type" : "string",
            "example" : "/detections/61/0242ac15000c/be11/11ea/9556/62433f34/searched_face_0.jpg"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "M", "F" ],
            "example" : "M"
          },
          "age" : {
            "type" : "integer",
            "example" : 38
          },
          "access_key" : {
            "type" : "string",
            "example" : ""
          },
          "global_id" : {
            "type" : "string",
            "example" : ""
          }
        }
      },
      "QA_Params" : {
        "title" : "QA_Params",
        "description" : "Quality parameters",
        "type" : "object",
        "properties" : {
          "src_distance" : {
            "type" : "number",
            "example" : 5.8787760734558105
          },
          "eye_distance" : {
            "type" : "number",
            "example" : 59.8865966796875
          },
          "aligned_eye_distance" : {
            "type" : "number",
            "example" : 34.74881362915039
          },
          "wd_ratio" : {
            "type" : "number",
            "example" : 2.3711482681092804
          },
          "pitch" : {
            "type" : "number",
            "example" : 1.2987210548338977
          },
          "yaw" : {
            "type" : "number",
            "example" : 1.6018060991689826
          },
          "nose_x_delta" : {
            "type" : "number",
            "example" : 2.4660220228029175
          },
          "roll" : {
            "type" : "number",
            "example" : 2.9773585719241122
          },
          "sharpness" : {
            "type" : "number",
            "example" : 0.999999981126087
          },
          "wd_ratio_delta" : {
            "type" : "number",
            "example" : 0.8072625355823799
          },
          "detector_score" : {
            "type" : "number",
            "example" : 0.9759038686752319
          }
        }
      },
      "DetectionWithVector" : {
        "title" : "DetectionWithVector",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Detection"
        }, {
          "type" : "object",
          "properties" : {
            "vector" : {
              "type" : "string",
              "example" : "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"
            }
          }
        } ]
      }
    },
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}