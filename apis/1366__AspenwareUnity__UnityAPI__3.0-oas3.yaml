openapi: 3.0.1
info:
  version: "1.0.0"
  title: M2A Connect API Definition
  description: ''
  contact:
    name: M2A Media
    url: 'https://www.m2amedia.tv'
    email: ta@m2amedia.tv
tags:
  - name: organisations
  - name: groups
  - name: sources
  - name: subscriptions
  - name: events
paths:
  /organisations:
    get:
      tags:
        - organisations
      summary: Get list of links to Organisations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLListResponse'
              example:
                - /organisations/2cea7980-72f3-4e50-8590-28fb009390c9
                - /organisations/8070ad6e-0963-4a63-a834-4bb2cb73e963
        '403':
          description: Forbidden
    post:
      tags:
        - organisations
      summary: Create an Organisation
      requestBody:
        description: Organisation to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly created Organisation
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
    get:
      tags:
        - organisations
      summary: Get Organisation by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationResponse'
        '403':
          description: Forbidden
        '404':
          description: An Organisation with the specified ID was not found
    delete:
      tags:
        - organisations
      summary: Delete Group by id
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Forbidden
        '404':
          description: An Organisation with the specified ID was not found
  '/organisations/{organisation-id}/groups':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
    get:
      tags:
        - groups
      summary: Get list of links to Groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLListResponse'
              example:
                - /organisations/2cea7980-72f3-4e50-8590-28fb009390c9/groups/8bf9468f-d54c-4b24-9be7-7260b743a0e4
                - /organisations/8070ad6e-0963-4a63-a834-4bb2cb73e963/groups/d6824f67-ebbe-4163-9b17-8c956d7237aa
        '403':
          description: Forbidden
    post:
      tags:
        - groups
      summary: Create a Group
      requestBody:
        description: Group to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly created Group
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}/groups/{group-id}':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
    get:
      tags:
        - groups
      summary: Get Group by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '403':
          description: Forbidden
        '404':
          description: A Group with the specified ID was not found
    delete:
      tags:
        - groups
      summary: Delete Group by id
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Forbidden
        '404':
          description: A Group with the specified ID was not found
  '/organisations/{organisation-id}/groups/{group-id}/events':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
    get:
      tags:
        - events
      summary: Get list of links to Events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLListResponse'
              example:
                - /organisations/2cea7980-72f3-4e50-8590-28fb009390c9/groups/8bf9468f-d54c-4b24-9be7-7260b743a0e4/events/c622059c-6a41-4e4f-a4b6-abbb73d6bb17
                - /organisations/8070ad6e-0963-4a63-a834-4bb2cb73e963/groups/d6824f67-ebbe-4163-9b17-8c956d7237aa/events/8a8d5659-3ea6-4958-a1fc-f8497afebf60
        '403':
          description: Forbidden
    post:
      tags:
        - events
      summary: Create an Event
      requestBody:
        description: Event to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly created Event
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}/groups/{group-id}/events/{event-id}':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
      - $ref: '#/components/parameters/event-id'
    get:
      tags:
        - events
      summary: Get Event by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '403':
          description: Forbidden
        '404':
          description: An Event with the specified ID was not found
    delete:
      tags:
        - events
      summary: Delete Event by id
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Forbidden
        '404':
          description: An Event with the specified ID was not found
  '/organisations/{organisation-id}/groups/{group-id}/sources':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
    get:
      tags:
        - sources
      summary: Get list of links to Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLListResponse'
              example:
                - /organisations/2cea7980-72f3-4e50-8590-28fb009390c9/groups/8bf9468f-d54c-4b24-9be7-7260b743a0e4/sources/0fbd5663-27dd-4e1b-b37a-b42a29b679a7
                - /organisations/8070ad6e-0963-4a63-a834-4bb2cb73e963/groups/d6824f67-ebbe-4163-9b17-8c956d7237aa/sources/5446781e-443d-4572-a2ce-16f15cca443e
        '403':
          description: Forbidden
    post:
      tags:
        - sources
      summary: Create a Source
      requestBody:
        description: Source to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly created Source
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}/groups/{group-id}/sources/{source-id}':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
      - $ref: '#/components/parameters/source-id'
    get:
      tags:
        - sources
      summary: Get Source by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
        '403':
          description: Forbidden
        '404':
          description: A Source with the specified ID was not found
    delete:
      tags:
        - sources
      summary: Delete Source by id
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Forbidden
        '404':
          description: A Source with the specified ID was not found
  '/organisations/{organisation-id}/groups/{group-id}/sources/{source-id}/statistics':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
      - $ref: '#/components/parameters/source-id'
    get:
      tags:
        - sources
      summary: Get Source by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceStatisticsResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}/groups/{group-id}/sources/{source-id}/subscriptions':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
      - $ref: '#/components/parameters/source-id'
    get:
      tags:
        - subscriptions
      summary: Get list of links to Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLListResponse'
              example:
                - /organisations/2cea7980-72f3-4e50-8590-28fb009390c9/groups/8bf9468f-d54c-4b24-9be7-7260b743a0e4/sources/0fbd5663-27dd-4e1b-b37a-b42a29b679a7/subscriptions/523bc5be-d4ca-44fd-83af-46a21ac57de4
                - /organisations/8070ad6e-0963-4a63-a834-4bb2cb73e963/groups/d6824f67-ebbe-4163-9b17-8c956d7237aa/sources/5446781e-443d-4572-a2ce-16f15cca443e/subscriptions/4c8c8ac6-754f-40ee-8576-88b27a0a7ea7
        '403':
          description: Forbidden
    post:
      tags:
        - subscriptions
      summary: Create a Subscription
      requestBody:
        description: Subscription to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly created Subscription
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '403':
          description: Forbidden
  '/organisations/{organisation-id}/groups/{group-id}/sources/{source-id}/subscriptions/{subscription-id}':
    parameters:
      - $ref: '#/components/parameters/organisation-id'
      - $ref: '#/components/parameters/group-id'
      - $ref: '#/components/parameters/source-id'
      - $ref: '#/components/parameters/subscription-id'
    get:
      tags:
        - subscriptions
      summary: Get Subscription by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '403':
          description: Forbidden
        '404':
          description: A Subscription with the specified ID was not found
    delete:
      tags:
        - subscriptions
      summary: Delete Subscription by id
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Forbidden
        '404':
          description: A Source with the specified ID was not found
components:
  schemas:
    UUID:
      type: string
      format: uuid4
      pattern: '^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?4[a-fA-F0-9]{3}-?[89ab][a-fA-F0-9]{3}-?[a-fA-F0-9]{12}$'
    StandardMetadata:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
    Protection:
      type: object
      properties:
        enabled:
          type: boolean
        type:
          type: string
          enum:
            - static-key
            - speke
        algorithm:
          type: string
          enum:
            - aes-128
            - aes-192
            - aes-256
        key:
          type: string
    BaseSource:
      type: object
      required:
        - source-type
      properties:
        source-type:
          type: string
          enum:
            - m2a-managed
            - aws-managed
            - ingest
            - entitled
      discriminator:
        propertyName: source-type
      example:
        type: m2a-managed
    BaseNonEntitledSource:
      allOf:
        - $ref: '#/components/schemas/BaseSource'
        - type: object
          properties:
            whitelist-cidr:
              type: string
              format: cidr
      example:
        whitelist-cidr: 5.6.7.8/32
    M2AManagedSource:
      allOf:
        - $ref: '#/components/schemas/BaseNonEntitledSource'
      example:
        type: m2a-managed
        whitelist-cidr: 9.1.2.3/32
    AWSManagedSource:
      allOf:
        - $ref: '#/components/schemas/BaseNonEntitledSource'
      example:
        type: aws-managed
        whitelist-cidr: 4.5.6.7/32
    IngestSource:
      allOf:
        - $ref: '#/components/schemas/BaseNonEntitledSource'
      example:
        type: ingest
        whitelist-cidr: 8.9.1.2/32
    EntitledSource:
      allOf:
        - $ref: '#/components/schemas/BaseSource'
        - type: object
          properties:
            entitlement-arn:
              type: string
              format: arn
      example:
        type: entitled
        entitlement-arn: 'arn:aws:mediaconnect:eu-west-1:123456789012:entitlement:1-ABCDEFGHIJKLMNOP-0a1b2c3d4e5f:madeup'
    URLListResponse:
      type: array
      items:
        type: string
        format: uri
    BaseResponse:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/UUID'
    OrganisationRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/StandardMetadata'
      example:
        metadata:
          $ref: '#/components/examples/StandardMetadata/value'
    OrganisationResponse:
      allOf:
        - $ref: '#/components/schemas/OrganisationRequest'
        - $ref: '#/components/schemas/BaseResponse'
      example:
        id: 7c5c80c6-be68-4088-9209-dc01060680c7
    GroupRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/StandardMetadata'
        aws-account-number:
          type: string
          pattern: '^\d{12}$'
      example:
        metadata:
          $ref: '#/components/examples/StandardMetadata/value'
        aws-account-number: '123456789012'
    GroupResponse:
      allOf:
        - $ref: '#/components/schemas/GroupRequest'
        - $ref: '#/components/schemas/BaseResponse'
      example:
        id: 22a4abf1-1742-432e-a32c-26aa15065ba8
    SourceRequest:
      type: object
      properties:
        egress-regions:
          type: array
          items:
            type: string
        ingress-region:
          type: string
        availability-zone:
          type: string
        source:
          oneOf:
            - $ref: '#/components/schemas/M2AManagedSource'
            - $ref: '#/components/schemas/AWSManagedSource'
            - $ref: '#/components/schemas/IngestSource'
            - $ref: '#/components/schemas/EntitledSource'
          discriminator:
            propertyName: source-type
        decryption:
          $ref: '#/components/schemas/Protection'
        metadata:
          $ref: '#/components/schemas/StandardMetadata'
      example:
        egress-regions:
          - eu-west-1
          - eu-central-1
        ingress-region: eu-west-1
        availability-zone: eu-west-1a
        source:
          $ref: '#/components/examples/BaseNonEntitledSource/value'
        decryption:
          $ref: '#/components/examples/Protection/value'
        metadata:
          $ref: '#/components/examples/StandardMetadata/value'
    SourceResponse:
      allOf:
        - $ref: '#/components/schemas/SourceRequest'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - CREATING
                - STOPPED
                - STARTING
                - RUNNING
                - STOPPING
                - FAILED
      example:
        id: 17928d7f-a9e0-45aa-8ac6-cf86e5616e83
        status: CREATING
    SourceStatisticsResponse:
      type: object
      properties:
        connected:
          type: boolean
        etr290-status:
          type: object
          properties:
            p1-errors:
              type: boolean
            p2-errors:
              type: boolean
            p3-errors:
              type: boolean
      example:
        connected: true
        etr290-status:
          p1-errors: false
          p2-errors: true
          p3-errors: true
    SubscriptionRequest:
      type: object
      properties:
        entitled-group-id:
          $ref: '#/components/schemas/UUID'
        region:
          type: string
          format: date-time
        encryption:
          $ref: '#/components/schemas/Protection'
        metadata:
          $ref: '#/components/schemas/StandardMetadata'
      example:
        entitled-group-id: c5e1c119-c7da-406c-8a21-951b534389a2
        region: eu-west-1
        encryption:
          $ref: '#/components/examples/Protection/value'
        metadata:
          $ref: '#/components/examples/StandardMetadata/value'
    SubscriptionResponse:
      allOf:
        - $ref: '#/components/schemas/SubscriptionRequest'
        - $ref: '#/components/schemas/BaseResponse'
      example:
        id: 43acec88-9e4b-448a-b8d1-a711f24f7dfe
    EventRequest:
      type: object
      properties:
        start-time:
          type: string
          format: date-time
        end-time:
          type: string
          format: date-time
        resource-ids:
          type: array
          items:
            $ref: '#/components/schemas/UUID'
        metadata:
          $ref: '#/components/schemas/StandardMetadata'
      example:
        start-time: '2019-12-19T11:15:05+00:00'
        end-time: '2019-12-19T11:20:05+00:00'
        resource-ids:
          - 13c19c8e-09f3-4e55-a856-8728e4001223
          - 81699d24-6870-4e7f-b8d6-39ac3d95692e
        metadata:
          $ref: '#/components/examples/StandardMetadata/value'
    EventResponse:
      allOf:
        - $ref: '#/components/schemas/EventRequest'
        - $ref: '#/components/schemas/BaseResponse'
      example:
        id: 3fd471ea-7e53-4fc1-bc74-852c03c8eca3
  examples:
    StandardMetadata:
      value:
        'tv.m2amedia:example-reserved-namespace-name': example-value
        unnamespaced-name: another-value
    Protection:
      value:
        enabled: true
        type: static-key
        algorithm: aes-256
        key: 4c07f2a503f13888a08a5acf4148ef849f701a0511ab53ffee97766da2a82088
    BaseSource:
      value:
        source-type: m2a-managed
    BaseNonEntitledSource:
      value:
        source-type: m2a-managed
        whitelist-cidr: 1.2.3.4/32
  parameters:
    organisation-id:
      name: organisation-id
      description: The id of the Organisation
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    group-id:
      name: group-id
      description: The id of the Group
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    event-id:
      name: event-id
      description: The id of the Event
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    source-id:
      name: source-id
      description: The id of the Source
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    subscription-id:
      name: subscription-id
      description: The id of the Subscription
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Timeheads/connect-module/1.0.0
