openapi: 3.0.1
info:
  title: Smart Parking Client API
  description: API for mobile devices and client endpoints
  version: 2.2.0
paths:
  /api/configs:
    get:
      security:
        - JWTBearerAuth: []
      tags:
        - Configuration
      operationId: ListConfig
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartParkingConfiguration'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
  /api/Navigation:
    post:
      security:
        - JWTBearerAuth: []
      tags:
        - Navigation
      operationId: FilterParkingPlaces
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NavigationParameters'
          application/json:
            schema:
              $ref: '#/components/schemas/NavigationParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/NavigationParameters'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NavigationParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/ParkingPlace'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
  /api/private-lists:
    get:
      security:
        - JWTBearerAuth: []
      tags:
        - Private parking place list details
      operationId: GetPrivateLists
      parameters:
        - in: query
          name: code
          required: false
          schema:
            $ref: '#/components/schemas/PrivateListCodes'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/PrivateListDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
  /api/auth/token:
    post:
      tags:
        - Authentication
      operationId: UserAuthToken
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/TokenPack'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
security:
  - JWTBearerAuth: []
components:
  securitySchemes:
    JWTBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SmartParkingConfiguration:
      type: object
      properties:
        reportContent:
          type: string
        updateTimestamp:
          type: string
        comfortFee:
          $ref: '#/components/schemas/ComfortFee'
        yRadius:
          $ref: '#/components/schemas/Radius'
        tTimes:
          $ref: '#/components/schemas/Times'
    ComfortFee:
      type: object
      properties:
        vodafoneFee:
          type: integer
          format: int32
        telekomFee:
          type: integer
          format: int32
        telenorFee:
          type: integer
          format: int32
    Radius:
      type: object
      properties:
        y1:
          type: integer
          format: int32
        y2:
          type: integer
          format: int32
    Times:
      type: object
      properties:
        t1:
          type: integer
          format: int32
        t2:
          type: integer
          format: int32
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
      additionalProperties:
        type: object
    NavigationParameters:
      required:
        - gpsCoordinates
        - radius
      type: object
      properties:
        gpsCoordinates:
          $ref: '#/components/schemas/GpsCoordinates'
        radius:
          type: integer
          format: int32
        isFreePlacesOnly:
          type: boolean
          default: false
        isPrivatesListsOnly:
          type: boolean
          default: false
          description: List only private parking places
        privateListCodes:
          $ref: '#/components/schemas/PrivateListCodes'
    GpsCoordinates:
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    ParkingPlace:
      required:
        - category
        - lastUpdateTimestamp
        - parkingPlaceId
        - state
      type: object
      properties:
        gpsCoordinates:
          $ref: '#/components/schemas/GpsCoordinates'
        lastUpdateTimestamp:
          type: string
          description: date-time in RFC 3339 format
        parkingPlaceId:
          type: string
        state:
          enum:
            - Free
            - Occupied
            - Unknown
            - Disabled
          type: string
        category:
          enum:
            - Normal
            - Loading
            - Disabled
          type: string
        isElectricCharger:
          type: boolean
          description: 'True, if the parking place has an electric charger'
        isOnlyElectric:
          type: boolean
          description: 'True, if the parking place is available for only electric cars'
        privateListIds:
          $ref: '#/components/schemas/PrivateListIds'
    PrivateListCodes:
      type: array
      description: Private parking place list codes
      minItems: 1
      maxItems: 32
      uniqueItems: true
      items:
        type: string
    PrivateListIds:
      type: array
      description: Private parking place list IDs
      minItems: 1
      maxItems: 32
      uniqueItems: true
      items:
        type: integer
        format: int32
    PrivateListDetails:
      description: Private parking place list details
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique numeric ID
        code:
          type: string
          description: Unique non-public code
        displayName:
          type: string
          description: User friendly name for mobile applications / frontends
        isValidNow:
          type: boolean
        validFrom:
          type: string
          format: date-time
          description: date-time in RFC 3339 format
        validTo:
          type: string
          format: date-time
          description: date-time in RFC 3339 format
    UserCredentials:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    TokenPack:
      required:
        - access
        - accessExpiresAt
      type: object
      properties:
        access:
          type: string
        accessExpiresAt:
          type: string
          format: date-time
          description: date-time in RFC 3339 format
          nullable: true
        refresh:
          type: string
          example: null
        refreshExpiresAt:
          type: string
          format: date-time
          description: date-time in RFC 3339 format
          nullable: true
          example: null
