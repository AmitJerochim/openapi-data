penapi: 3.0.0
info:
  description: Получение информации о запросе на массовую подпись документов.
  version: "0.1.200210"
  title: Signing Request Information
  contact:
    name: "RooX Solutions"
    url: "http://rooxteam.com"
    email: "support@rooxteam.com"
  license:
    name: "COMMERCIAL"
servers:
  - url: /sso/api/signingRequests
paths:
  /{id}:
    get:
      tags:
        - signingRequest
      description: "Получение информации о запросе на массовую подпись"
      operationId: getSigningRequest
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Запрос с заданным id найден, пользователь имеет право на просмотр запроса. В теле ответа содержится представление запроса.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/SigningRequestResponse"
        "400":
          description: Некорректный запрос.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
        "401":
          description: Доступ запрещен. Токен не передан, не найден, или его время жизни истекло.
        "403":
          description: Некорректный запрос. Запрос на массовую подпись найден, но у пользователя недостаточно прав доступа для чтения.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
              example:
                "errors":
                  - "status": "403"
                    "code": "user_is_not_authorized_to_access_requested_rest_resource"
        "404":
          description: Некорректный запрос. Запрос на массовую подпись не найден.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"

  /{id}/documents:
    get:
      tags:
        - signingRequest
      description: "Получение информации о документах из запроса на массовую подпись"
      operationId: getSigningRequestDocuments
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
      responses:
        "200":
          description: Запрос с заданным id найден, пользователь имеет право на просмотр запроса. В теле ответа содержатся представления документов из запроса.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/DocumentsResponse"
        "400":
          description: Некорректный запрос.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
        "401":
          description: Доступ запрещен. Токен не передан, не найден, или его время жизни истекло.
        "403":
          description: Некорректный запрос. Запрос на массовую подпись найден, но у пользователя недостаточно прав доступа для чтения.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
              example:
                "errors":
                  - "status": "403"
                    "code": "user_is_not_authorized_to_access_requested_rest_resource"
        "404":
          description: Некорректный запрос. Запрос на массовую подпись не найден или пользователь не имеет прав на просмотр.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"

  /verify:
    post:
      tags:
        - signingRequest
      description: "Верификация подписанных ранее документов из запроса на массовую подпись"
      operationId: verifySigningRequestDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyDocumentsRequest"
        required: true
      responses:
        "200":
          description: Запрос с заданным id найден, пользователь имеет право на просмотр запроса. Удалось верифицировать документы и вернуть результат верификации (успешный или неуспешный с описанием ошибки)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyDocumentsResponse"
        "400":
          description: Некорректный запрос.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
        "401":
          description: Доступ запрещен. Токен не передан, не найден, или его время жизни истекло.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"
        "404":
          description: Некорректный запрос. Запрос на массовую подпись не найден или пользователь не имеет прав на просмотр.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorsResponse"

components:
  parameters:
    ContentType:
      description: Content-Type для запросов.
      in: header
      name: Content-Type
      schema:
        type: string
        enum:
          - application/vnd.api+json
        default: application/vnd.api+json
      required: true
    id:
      name: id
      in: path
      description: "Идентификатор запроса на массовую подпись."
      required: true
      schema:
        type: string
    size:
      name: size
      in: query
      description: "Пагинация. Размер страницы."
      required: false
      schema:
        type: integer
        minimum: 0
        default: 1000
    page:
      name: page
      in: query
      description: "Пагинация. Номер страницы."
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: "Уникальный идентификатор ошибки."
        status:
          type: string
          description: "Статус HTTP ответа."
    ErrorsResponse:
      type: object
      properties:
        errors:
          type: array
          description: "Массив произошедших ошибок."
          items:
            $ref: "#/components/schemas/Error"
    SigningRequestResponse:
      type: object
      properties:
        data:
          description: "Запрос на массовую подпись в формате jsonapi 1.1."
          $ref: "#/components/schemas/SigningRequest"
    DocumentsResponse:
      type: object
      properties:
        data:
          type: array
          description: "Документы из запроса на массовую подпись в формате jsonapi 1.1."
          items:
            $ref: "#/components/schemas/Document"
    SigningRequest:
      type: object
      properties:
        id:
          type: string
          description: "Идентификатор запроса на массовую подпись."
        principalOwnerId:
          type: string
          description: "Идентификатор пользователя, создавшего запрос на массовую подпись."
        meta:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Meta'
        creationTime:
          type: integer
          description: "Время создания запроса в формате UNIX TIME."
        signatures:
          type: array
          description: "Массив подписей запроса на массовую подпись документов."
          items:
            $ref: "#/components/schemas/Signature"
    Document:
      type: object
      properties:
        id:
          type: string
          description: "Идентификатор документа."
        title:
          type: string
          description: "Пользовательское название документа."
        content:
          type: string
          format: byte
          description: "Битовое содержание документа, закодированное в base64."
        creationTime:
          type: integer
          description: "Время создания запроса в формате UNIX TIME."
        meta:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Meta'
        mimeType:
          type: string
          description: "Тип документа в формате MIME."
        signatures:
          type: array
          description: "Массив подписей документа."
          items:
            $ref: "#/components/schemas/Signature"
    Signature:
      type: object
      properties:
        id:
          type: string
          description: "Идентификатор подписи."
        creationTime:
          type: integer
          description: "Время создания подписи в формате UNIX TIME."
        hash:
          type: string
          description: "Хеш подписи."
        alg:
          type: string
          enum:
            - OtpGost3411_2012_512
          description: "Название алгоритма, согласно которому был вычислен хеш подписи."
        signingCredentials:
          type: array
          items:
            $ref: "#/components/schemas/CodeCredential"
          description: "Учетные данные пользователя, с которыми был вычислен хеш подписи."
          example:
            - msisdn: "89876543210"
            - otpId: "9999"
            - otpCode: "1234"
        principalSignerId:
          type: string
          description: "Идентификатор подписавшего пользователя."

    CodeCredential:
      allOf:
        - $ref: "#/components/schemas/MsisdnCredential"
        - $ref: "#/components/schemas/OtpIdCredential"
        - $ref: "#/components/schemas/OtpCodeCredential"
      description: "Данные, использованные для вычисления хеша подписи."
    OtpCodeCredential:
      type: object
      properties:
        otpCode:
          type: string
      description: "Одноразовый пароль, отправленный пользователю (как правило в SMS сообщении)."
      example:
        - otpCode: "1234"
    OtpIdCredential:
      type: object
      properties:
        otpId:
          type: string
      description: "Порядковый номер одноразового пароля."
      example:
        - otpId: "1"
    MsisdnCredential:
      type: object
      properties:
        msisdn:
          type: string
      description: "Телефонный номер пользователя."
      example:
        - msisdn: "9876543210"
    Meta:
      type: object
      description: "Мета информация в свободном формате."
      
    VerifyDocumentsRequest:
      type: object
      properties:
        id:
          type: string
          description: Signing request id
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentForVerification"
        meta:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Meta'
    DocumentForVerification:
      type: object
      properties:
        title:
          type: string
          description: "Пользовательское название документа."
        content:
          type: string
          format: byte
          description: "Битовое содержание документа, закодированное в base64."
        meta:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Meta'
        mimeType:
          type: string
          description: "Тип документа в формате MIME."
    VerifyDocumentsResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: "Результат верификации"
        reason:
          type: string
          description: "Причины неуспешной верификации"
          enum:
            - document_has_no_id
            - document_not_found
            - credentials_not_found
            - document_signature_not_valid
            - document_has_no_title
            - signing_request_not_found