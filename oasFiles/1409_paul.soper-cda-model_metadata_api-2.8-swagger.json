{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "CDA Model Metadata API",
    "version" : "2.8",
    "description" : "Defines weather model data for use in human interactions with computer systems. The data could be used to drive information systems, user interfaces or just to get extra information about specific elements of weather models and their parameters.",
    "termsOfService" : "http://www.metoffice.gov.uk/cdaproject/terms/",
    "contact" : {
      "name" : "Paul Soper",
      "email" : "paul.soper@roweit.co.uk",
      "url" : "https://www.metoffice.gov.uk"
    },
    "license" : {
      "name" : "Proprietary",
      "url" : "http://www.metoffice.gov.uk"
    }
  },
  "tags" : [ {
    "name" : "AutheticatedUsers",
    "description" : "Authenticated user calls only"
  } ],
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/paul.soper/cda-model_metadata_api/2.8"
  } ],
  "paths" : {
    "/models" : {
      "get" : {
        "summary" : "List all available weather model names",
        "operationId" : "getModels",
        "responses" : {
          "200" : {
            "description" : "all available model names are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WeatherModelNamesList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/models/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the identifier of the model you wish to retrieve information about"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "Provide details about specific weather model",
        "operationId" : "getModel",
        "responses" : {
          "200" : {
            "description" : "a specific model's details are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WeatherModel"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "410" : {
            "$ref" : "#/components/responses/Gone"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/runtimes" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model for which you wish to check the runtimes (filter parameter)"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all available weather model run times or filter the runtimes for a specific model",
        "operationId" : "getRuntimes",
        "responses" : {
          "200" : {
            "description" : "all available runtimes and their descriptions are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuntimeList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/leveltypes" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model you want to get parameters for"
        }
      } ],
      "get" : {
        "summary" : "List all available level type names",
        "operationId" : "getLevelTypes",
        "responses" : {
          "200" : {
            "description" : "all available level type names are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelTypeNamesList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/leveltypes/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "agl",
          "description" : "the level type you want to get information for"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "Provide the description for a specific level type",
        "operationId" : "getLevelType",
        "responses" : {
          "200" : {
            "description" : "a specific level type's desription is returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelType"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "410" : {
            "$ref" : "#/components/responses/Gone"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/parameters" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model you want to get parameters for"
        }
      }, {
        "name" : "levelTypeId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "isbl"
        }
      }, {
        "name" : "levelGroup",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "single", "height", "pressure" ],
          "example" : "pressure",
          "description" : "the level measurement you want to get the parameters for"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all of the available parameters",
        "operationId" : "getParameters",
        "responses" : {
          "200" : {
            "description" : "all available parameter names are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParameterList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/parameters/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "modelId",
        "in" : "query",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "uk"
        }
      }, {
        "name" : "levelTypeId",
        "in" : "query",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "isbl"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "Get a specific parameter's details",
        "operationId" : "getParameterDetails",
        "responses" : {
          "200" : {
            "description" : "a specific parameters's desription is returned within the context of the given model and level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Parameter"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "410" : {
            "$ref" : "#/components/responses/Gone"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/regions" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model you want to get regions for"
        }
      }, {
        "name" : "organisationId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "roweit",
          "description" : "the organisation whose regions you wish to retrieve",
          "default" : "public"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all available system defined regions, or filter out and provide all regions for a given model/organisation combination.",
        "operationId" : "getRegions",
        "responses" : {
          "200" : {
            "description" : "all available regions are returned; if a modelId is specified, all the available regions within that model are provided; if the organisationId is specified, all the available regions within that model are provided; if both model and organisation parameters are provided, all regions for a given organisation within the given model are provided.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionList"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "410" : {
            "$ref" : "#/components/responses/Gone"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/timesteps" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model you wish to retrieve timesteps for"
        }
      }, {
        "name" : "modelRunTime",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "06:00",
          "description" : "the model run time you wish to retrieve timesteps for"
        }
      }, {
        "name" : "parameterId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "fraction-of-cloud-cover",
          "description" : "the parameter you wish to retrieve timesteps for"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all available timestep definitions or optionally, filter out and provide the timesteps for a given modelId and/or parameterId combination",
        "operationId" : "getTimesteps",
        "responses" : {
          "200" : {
            "description" : "all available timesteps are returned or if a modelId is specified, all the available timesteps within that model are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimestepInformationList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/levels" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global",
          "description" : "the model you wish to retrieve available levels for"
        }
      }, {
        "name" : "levelTypeId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "agl",
          "description" : "the level type you wish to retrieve available levels for"
        }
      }, {
        "name" : "parameterId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "fraction-of-cloud-cover",
          "description" : "the parameter you wish to retrieve available levels for"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all available level definitions or optionally, filter out and provide the levels for a given modelId, level type and parameterId combination",
        "operationId" : "getLevels",
        "responses" : {
          "200" : {
            "description" : "all available levels are returned or if a modelId, levelTypeId and/or parameterId is specified, all the available levels for a given model/leveltype/parameter combination are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    },
    "/deliveries" : {
      "parameters" : [ {
        "name" : "modelId",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "global"
        }
      }, {
        "$ref" : "#/components/parameters/locale"
      } ],
      "get" : {
        "summary" : "List all of the available deliveries",
        "operationId" : "getDeliveries",
        "responses" : {
          "200" : {
            "description" : "all available delivery types are returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryList"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/WrongAuthentication"
          },
          "403" : {
            "$ref" : "#/components/responses/NoPermissions"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        },
        "security" : [ {
          "apikey" : [ ]
        } ],
        "tags" : [ "users" ]
      }
    }
  },
  "components" : {
    "responses" : {
      "BadRequest" : {
        "description" : "Your request is incorrectly formed so the API is unable to process it.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/badRequestResponse"
            }
          }
        }
      },
      "WrongAuthentication" : {
        "description" : "You have not sent any authentication or your authentication details are incorrect.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/wrongAuthenticationResponse"
            }
          }
        }
      },
      "NoPermissions" : {
        "description" : "You sent correct authentication details, but you do not have permissions to access this resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/noPermissionsResponse"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "You requested a resource that does not exist and that has never existed.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/notFoundResponse"
            }
          }
        }
      },
      "Gone" : {
        "description" : "You have requested a resource that used to exist. However, it has now been permanently removed.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/goneResponse"
            }
          }
        }
      },
      "ServerError" : {
        "description" : "Something went wrong on the server which is not your fault. Please retry your request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/serverErrorResponse"
            }
          }
        }
      }
    },
    "schemas" : {
      "WeatherModelNamesList" : {
        "description" : "A list of available weather model names.",
        "type" : "object",
        "properties" : {
          "models" : {
            "type" : "array",
            "example" : [ "global", "uk" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WeatherModel" : {
        "description" : "Information about a model.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "information" : {
            "$ref" : "#/components/schemas/WeatherModelInformation"
          },
          "data" : {
            "$ref" : "#/components/schemas/WeatherModelData"
          }
        },
        "required" : [ "modelId", "information", "data" ]
      },
      "WeatherModelInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "global"
          },
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "Global Model"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "Global Atmospheric Hi-Res Model - Deterministic"
          },
          "domain" : {
            "type" : "string",
            "example" : "Global – region can be selected"
          },
          "resolution" : {
            "type" : "string",
            "example" : "Approx. 0.09 degrees (10km)"
          },
          "parameters" : {
            "type" : "string",
            "example" : "Variety of selectable parameters at single level, pressure level and height level (see available parameters)"
          },
          "deliveries" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "Via API"
            }
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : [ "GRIB2 – Gridded Binary format", "NetCDF - Network Common Data Format" ]
            }
          }
        },
        "required" : [ "id", "locale", "message", "detailedMessage" ]
      },
      "WeatherModelData" : {
        "description" : "Data for a WeatherModel that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "boundary" : {
            "$ref" : "#/components/schemas/RegionBoundaryData"
          },
          "runtimes" : {
            "$ref" : "#/components/schemas/RuntimeData"
          }
        }
      },
      "RuntimeList" : {
        "description" : "List of the available runtimes and their associated language translations.",
        "type" : "object",
        "properties" : {
          "runtimes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Runtime"
            }
          }
        }
      },
      "Runtime" : {
        "description" : "Information about a runtime.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuntimeInformation"
            }
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "runtimes" : {
                "$ref" : "#/components/schemas/RuntimeData"
              }
            }
          }
        },
        "required" : [ "modelId", "information", "data" ]
      },
      "RuntimeInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "global-midnight"
          },
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "00:00 UTC"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "00:00 UTC - Full Run"
          },
          "additionalInformation" : {
            "type" : "string",
            "example" : "Note that the intermediate 06:00 and 18:00 runs are curtailed and do not generate full data."
          }
        },
        "required" : [ "id", "locale", "message", "detailedMessage" ]
      },
      "RuntimeData" : {
        "description" : "Data for a Runtime that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "times" : {
            "type" : "array",
            "example" : [ "00:00", "06:00", "12:00", "18:00" ],
            "items" : {
              "type" : "string"
            }
          },
          "timezone" : {
            "type" : "string",
            "example" : "UTC"
          }
        },
        "required" : [ "times", "timezone" ]
      },
      "LevelTypeNamesList" : {
        "description" : "A list of available level type names.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "levelTypes" : {
            "type" : "array",
            "example" : [ "isbl", "agl", "zeroisotherm", "atmospheretop" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LevelType" : {
        "description" : "Information about a Level Type",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LevelTypeInformation"
            }
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "levelTypes" : {
                "$ref" : "#/components/schemas/LevelTypeData"
              }
            }
          }
        },
        "required" : [ "modelId", "information", "data" ]
      },
      "LevelTypeInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "isbl"
          },
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "Pressure Level (ISBL)"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "Isobaric Level a.k.a pressure level"
          },
          "unit" : {
            "type" : "string",
            "example" : "hPa"
          },
          "unitDescription" : {
            "type" : "string",
            "example" : "HectoPascals"
          }
        },
        "required" : [ "id", "locale", "message", "detailedMessage", "unit", "unitDescription" ]
      },
      "LevelTypeData" : {
        "description" : "Data for a Level Type that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "levelTypeIds" : {
            "type" : "array",
            "example" : [ "isbl", "agl", "zeroisotherm", "atmospheretop" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "levelTypeIds" ]
      },
      "ParameterList" : {
        "description" : "List of the available parameters and their associated language translations.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "levelTypeId" : {
            "type" : "string",
            "example" : "isbl"
          },
          "levelGroup" : {
            "type" : "string",
            "example" : "pressure"
          },
          "parameterGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParameterGroup"
            }
          }
        },
        "required" : [ "modelId", "levelTypeId", "levelGroup", "parameterGroups" ]
      },
      "ParameterGroup" : {
        "description" : "A grouping of parameters sharing a common theme",
        "type" : "object",
        "properties" : {
          "groupName" : {
            "type" : "string",
            "example" : "Cloud"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Parameter"
            }
          }
        }
      },
      "Parameter" : {
        "description" : "Information about a set of parameters for a model and level.",
        "type" : "object",
        "properties" : {
          "parameterId" : {
            "type" : "string",
            "example" : "fraction-of-cloud-cover"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParameterInformation"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParameterData"
            }
          }
        },
        "required" : [ "parameterId", "information", "data" ]
      },
      "ParameterInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "Fraction of cloud cover"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "Fraction of horizontal grid square occupied by cloud at a selected height above the ground."
          },
          "unit" : {
            "type" : "string",
            "example" : "Oktas"
          },
          "unitDescription" : {
            "type" : "string",
            "example" : "1/8ths of the grid covered in cloud, from 0 (no cloud) to 8 (sky completely cloudy)"
          },
          "precision" : {
            "type" : "string",
            "example" : "1 Okta"
          },
          "timeInterpretation" : {
            "type" : "string",
            "example" : "Instantaneous"
          },
          "timesteps" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "3-hourly (57-144)"
            }
          },
          "levels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LevelInformation"
            }
          }
        },
        "required" : [ "locale", "message", "detailedMessage", "unit", "unitDescription", "precision", "timeInterpretation", "timesteps", "levels" ]
      },
      "ParameterData" : {
        "description" : "Data about a Parameter that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "availableLevels" : {
            "$ref" : "#/components/schemas/LevelData"
          },
          "availableTimesteps" : {
            "$ref" : "#/components/schemas/TimestepData"
          }
        },
        "required" : [ "availableLevels" ]
      },
      "RegionList" : {
        "description" : "List of the available regions and their associated language translations.",
        "type" : "object",
        "properties" : {
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        },
        "required" : [ "regions" ]
      },
      "Region" : {
        "description" : "Information about region definitions.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "roweit-global-southofengland"
          },
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "organisationId" : {
            "type" : "string",
            "example" : "roweit"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionInformation"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionBoundaryData"
            }
          }
        },
        "required" : [ "modelId", "organisationId", "information", "data" ]
      },
      "RegionInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "South of England"
          },
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "A bounding box covering the Southern part of England"
          },
          "groupTags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "South of England and Wales", "Northern France and the South of England" ]
          }
        },
        "required" : [ "name", "locale", "detailedMessage" ]
      },
      "DeliveryList" : {
        "description" : "List of the available deliveries and their associated language translations.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "deliveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Delivery"
            }
          }
        }
      },
      "Delivery" : {
        "description" : "a delivery method that a consumer can use to get some weather data",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "filepertimestepgrib2"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryInformation"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryData"
            }
          }
        },
        "required" : [ "id", "information", "data" ]
      },
      "DeliveryInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "File Per Timestep"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "Each timestep in a request will be delivered in a separate file"
          },
          "deliveryType" : {
            "type" : "string",
            "example" : "timestep"
          },
          "fileType" : {
            "type" : "string",
            "example" : "Grib 2"
          }
        },
        "required" : [ "locale", "message", "detailedMessage", "deliveryType" ]
      },
      "DeliveryData" : {
        "description" : "Data for a Delivery that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "deliveryTypes" : {
            "type" : "array",
            "example" : [ "api", "ftp", "s3" ],
            "items" : {
              "type" : "string"
            }
          },
          "fileTypes" : {
            "type" : "array",
            "example" : [ "netcdf", "grib2", "bin", "png" ],
            "items" : {
              "type" : "string"
            }
          },
          "contentTypes" : {
            "type" : "array",
            "example" : [ "application/x-netcdf", "application/x-grib", "application/octet-stream", "image/png" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "deliveryTypes" ]
      },
      "TimestepInformationList" : {
        "description" : "List of the available timesteps and their associated language translations.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "modelRunTime" : {
            "type" : "string",
            "example" : "06:00"
          },
          "parameterId" : {
            "type" : "string",
            "example" : "specific-humidity"
          },
          "timesteps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Timestep"
            }
          }
        }
      },
      "Timestep" : {
        "description" : "Information about timestep definitions.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "global-t10"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimestepInformation"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimestepData"
            }
          }
        },
        "required" : [ "id", "information", "data" ]
      },
      "TimestepInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "10"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "Global model run time plus 10 hours"
          }
        },
        "required" : [ "locale", "message", "detailedMessage" ]
      },
      "TimestepData" : {
        "description" : "Data for a Runtime that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "example" : "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
            }
          }
        }
      },
      "LevelList" : {
        "description" : "List of the available levels and their associated language translations.",
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "string",
            "example" : "global"
          },
          "levelTypeId" : {
            "type" : "string",
            "example" : "agl"
          },
          "parameterId" : {
            "type" : "string",
            "example" : "fraction-of-cloud-cover"
          },
          "levels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Level"
            }
          }
        }
      },
      "Level" : {
        "description" : "Information about a level.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "global-agl-1.5"
          },
          "information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LevelInformation"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LevelData"
            }
          }
        },
        "required" : [ "id", "information", "data" ]
      },
      "LevelInformation" : {
        "description" : "Text definitions intended for human consumption. \\\"message\\\" is intended for use in short elements, such as checkboxes and radio buttons. \\\"detailedMessage\\\" gives additional detail to provide more information to the user.",
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "example" : "en",
            "minLength" : 2,
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "example" : "1.5"
          },
          "detailedMessage" : {
            "type" : "string",
            "example" : "1.5 metres above ground level"
          },
          "isPopular" : {
            "type" : "boolean",
            "example" : true
          }
        },
        "required" : [ "locale", "message", "detailedMessage", "isPopular" ]
      },
      "LevelData" : {
        "description" : "Data for levels that needs interpretation by the caller.",
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "example" : [ 1.5, 5.0, 10.0, 20.0, 30.0, 50.0, 75.0, 100.0 ],
            "items" : {
              "type" : "number"
            }
          },
          "unit" : {
            "type" : "string",
            "example" : "M"
          },
          "unitDescription" : {
            "type" : "string",
            "example" : "metres"
          }
        },
        "required" : [ "values", "unit", "unitDescription" ]
      },
      "RegionBoundaryData" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "$ref" : "#/components/schemas/RegionBoundaryDataItem"
          },
          "y" : {
            "$ref" : "#/components/schemas/RegionBoundaryDataItem"
          },
          "crs" : {
            "$ref" : "#/components/schemas/CrsObject"
          }
        },
        "required" : [ "x", "y", "crs" ],
        "example" : {
          "x" : {
            "name" : "Longitude",
            "lowerBound" : -179.9296875,
            "upperBound" : 179.9296875,
            "unit" : "deg",
            "unitDescription" : "degrees"
          },
          "y" : {
            "name" : "Latitude",
            "lowerBound" : -89.953125,
            "upperBound" : 89.953125,
            "unit" : "deg",
            "unitDescription" : "degrees"
          },
          "crs" : {
            "name" : "WGS84",
            "wkt" : "GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]"
          }
        }
      },
      "RegionBoundaryDataItem" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "lowerBound" : {
            "type" : "number"
          },
          "upperBound" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "string",
            "example" : "deg"
          },
          "unitDescription" : {
            "type" : "string",
            "example" : "degrees"
          }
        },
        "required" : [ "name", "lowerBound", "upperBound", "unit" ]
      },
      "CrsObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "CRS84"
          },
          "wkt" : {
            "type" : "string",
            "example" : "GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]"
          }
        }
      },
      "badRequestResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 400
          },
          "message" : {
            "type" : "string",
            "example" : "Your request is incorrectly formed so the API is unable to process it."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "code", "message", "time" ]
      },
      "wrongAuthenticationResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 401
          },
          "message" : {
            "type" : "string",
            "example" : "You have not sent any authentication or your authentication details are incorrect."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "code", "message", "time" ]
      },
      "noPermissionsResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 403
          },
          "message" : {
            "type" : "string",
            "example" : "You sent correct authentication details, but you do not have permissions to access this resource."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "code", "message", "time" ]
      },
      "notFoundResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 404
          },
          "message" : {
            "type" : "string",
            "example" : "You requested a resource that does not exist and that has never existed."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "code", "message", "time" ]
      },
      "goneResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 410
          },
          "message" : {
            "type" : "string",
            "example" : "You have requested a resource that used to exist. However, it has now been permanently removed."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "codet", "message", "time" ]
      },
      "serverErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "example" : 500
          },
          "message" : {
            "type" : "string",
            "example" : "Something went wrong on the server which is not your fault. Please retry your request."
          },
          "time" : {
            "type" : "string",
            "example" : "2020-02-15T14:02:16.375Z"
          }
        },
        "required" : [ "code", "message", "time" ]
      }
    },
    "parameters" : {
      "locale" : {
        "name" : "locale",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "en",
          "description" : "the locale to use for this request",
          "minLength" : 2,
          "maxLength" : 2,
          "default" : "en"
        }
      }
    },
    "securitySchemes" : {
      "apikey" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-API-KEY"
      }
    }
  }
}