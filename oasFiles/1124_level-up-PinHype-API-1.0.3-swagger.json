{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "# Introduction\n\n\nThis is an API that aims to integrate partners who want to offer our product catalog quickly and practically.\n\n## What is Pin Hype?\nPin Hype is a credit or game key redemption platform development by Level Up! Interactive, the leading game publisher in Latin America since 2004.\n\n> Player page to rescue Pin Hype\n> [https://redeem.hype.games](https://redeem.hype.games/)\n\n# How to Authenticate?\n\nThe authentication data (`identifier` and `secret`) is shared at the beginning of the developed by email, request the authentication data by email <partner.hype@levelup.com.br>\n\nFor token authentication we use JSON (JSON Web Tokens) [https://jwt.io/introduction/](https://jwt.io/introduction/)\n\n## What is JSON Web Token?\n\nJSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.\n\n\n*By [Level Up Games Development Team](https://levelupgames.uol.com.br/levelup/)*\n  ",
    "version" : "1.0.3",
    "title" : "Pin Hype Api"
  },
  "tags" : [ {
    "name" : "Auth",
    "description" : "Auth"
  }, {
    "name" : "Catalog",
    "description" : "Catalog"
  }, {
    "name" : "Pre-redeem",
    "description" : "Pre-redeem"
  }, {
    "name" : "Reversal",
    "description" : "Cancel redeem"
  }, {
    "name" : "Report",
    "description" : "Report"
  }, {
    "name" : "Echo",
    "description" : "Echo"
  } ],
  "paths" : {
    "/echo" : {
      "get" : {
        "tags" : [ "Echo" ],
        "summary" : "Request to check if application is online",
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Request to get Authorization Token",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "description" : "This endpoint is to get the token, the token is a mandatory header parameter in the api's main endpoints. The parameters sent from the request body (`identifier` and `secret`) are email information at the beginning of development."
      },
      "put" : {
        "tags" : [ "Auth" ],
        "summary" : "Request to refresh Authorization Token",
        "description" : "This endpoint is a good practice to avoid constant sending of sensitive data (`identifier` and `secret`). To get a new token just send the previous token and refresh token endpointed in POST Auth endopint",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RefreshToken"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/catalog" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Catalog" ],
        "summary" : "Returns available products by partner",
        "description" : "Returns all product catalogs available to Partner, products are grouped by product collections in a hierarchical structure (such as a tree)",
        "operationId" : "getCatalog",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collections"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/catalog/info/{productId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Catalog" ],
        "summary" : "Returns available info product",
        "description" : "Return all data from a single product and with information from which collection it belongs",
        "parameters" : [ {
          "in" : "path",
          "name" : "productId",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/catalog/{catalogId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Catalog" ],
        "summary" : "Returns available products by partner from a specific collection",
        "description" : "Returns a list of products from a specific collection. The `catalogId` parameter represents the product collection id",
        "parameters" : [ {
          "in" : "path",
          "name" : "catalogId",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collections"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/collections/catalog" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Catalog" ],
        "summary" : "Returns available collections by partner",
        "description" : "Returns only the product collection but without related products by partner.",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collections"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/catalog/stock/{productId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Catalog" ],
        "summary" : "Returns whether or not the product has stock",
        "description" : "Returns a stock status of a product and the amount of the product in stock. When the product is of unlimited stock the amount value returns \"-1\"",
        "parameters" : [ {
          "in" : "path",
          "name" : "productId",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/pre-redeem" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Pre-redeem" ],
        "summary" : "Book a Pin for a specific product",
        "description" : "Book a Pin Hype for a specific product",
        "operationId" : "pre-redeem",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreRedeemResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PreRedeemOrder"
              }
            }
          },
          "description" : "Pre Redeem",
          "required" : true
        }
      }
    },
    "/pre-redeem/lot" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Pre-redeem" ],
        "summary" : "Book a batch of Pins for one or more specific product",
        "description" : "Allows you to send a list of products with quantities of the same, to facilitate the purchase by batch",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreRedeemLotResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PreRedeemOrderLot"
              }
            }
          },
          "description" : "Pre Redeem",
          "required" : true
        }
      }
    },
    "/pre-redeem/lot/{partnerReference}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Pre-redeem" ],
        "summary" : "Return the current status of the batch general",
        "description" : "Returns the batch queues associated with a partner reference remembering that there may be one more queue, because the queue is generated by product.",
        "parameters" : [ {
          "in" : "path",
          "name" : "partnerReference",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Your transaction Id or order number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedeemLotQueueResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/reversal" : {
      "put" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Reversal" ],
        "summary" : "Cancel redeem",
        "description" : "Cancel redeem",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReversalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReversalRequest"
              }
            }
          },
          "description" : "Reversal",
          "required" : true
        }
      }
    },
    "/reversal/lot" : {
      "put" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Reversal" ],
        "summary" : "Cancel a batch redeem",
        "description" : "Allows you to cancel a batch purchase",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReversalLotResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReversalLotRequest"
              }
            }
          },
          "description" : "Reversal",
          "required" : true
        }
      }
    },
    "/report/{startDate}/{finishDate}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Report" ],
        "summary" : "Returns sales list for period not exceeding 30 days",
        "parameters" : [ {
          "in" : "path",
          "name" : "startDate",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Period start date"
        }, {
          "in" : "path",
          "name" : "finishDate",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Period end date"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reports"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/report/transaction/{transactionId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Report" ],
        "summary" : "Returns sales information for a specific transaction (Our transaction Id)",
        "parameters" : [ {
          "in" : "path",
          "name" : "transactionId",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Our transaction Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reports"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/report/partnerReference/{partnerReferenceId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Report" ],
        "summary" : "Returns sales information for a specific transaction (Your transaction Id or order number)",
        "parameters" : [ {
          "in" : "path",
          "name" : "partnerReferenceId",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Your transaction Id or order number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reports"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/report/documentNumber/{documentNumber}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Report" ],
        "summary" : "Returns sales information by searching for buyer document number",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentNumber",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Buyer's document number (no mask)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reports"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundError"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "Test Environment",
    "url" : "https://preprod-stock.hype.games/api/"
  }, {
    "description" : "Live Environment",
    "url" : "https://stock.hype.games/api/"
  } ],
  "components" : {
    "responses" : {
      "InternalServerError" : {
        "description" : "Internal error"
      },
      "UnauthorizedError" : {
        "description" : "Access token is missing or invalid"
      },
      "NotFoundError" : {
        "description" : "Not Found"
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    },
    "schemas" : {
      "RefreshToken" : {
        "type" : "object",
        "properties" : {
          "acessToken" : {
            "type" : "string"
          },
          "refreshToken" : {
            "type" : "string"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "secret" : {
            "type" : "string"
          }
        },
        "required" : [ "identifier", "secret" ]
      },
      "Collections" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Collection"
        }
      },
      "Collection" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "example" : "Jogos Steam para PC"
          },
          "image" : {
            "type" : "string",
            "example" : "https://hype.games/assets/images/menu/icon-steamgames.png"
          },
          "termsAndConditions" : {
            "type" : "string",
            "example" : "Após a visualização da chave no Hype, não há como realizar..."
          },
          "howToRedeem" : {
            "type" : "string",
            "example" : "Para adquirir seu jogo é muito fácil! \\r\\nApós concluir a compra deste produto..."
          },
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Collection"
            }
          },
          "Products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          },
          "Tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tags"
            }
          }
        }
      },
      "CollectionSingle" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "example" : "Jogos Steam para PC"
          },
          "image" : {
            "type" : "string",
            "example" : "https://hype.games/assets/images/menu/icon-steamgames.png"
          },
          "termsAndConditions" : {
            "type" : "string",
            "example" : "Após a visualização da chave no Hype, não há como realizar..."
          },
          "howToRedeem" : {
            "type" : "string",
            "example" : "Para adquirir seu jogo é muito fácil! \\r\\nApós concluir a compra deste produto..."
          },
          "collection" : {
            "$ref" : "#/components/schemas/CollectionSingle"
          }
        }
      },
      "Tags" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "example" : "Grand Theft Auto V"
          },
          "image" : {
            "type" : "string",
            "example" : "https://img.hype.games/cdn/3ef499d0-2c87-4d48-81f6-6d3bd7195d6egtav-cover-starlet.jpg"
          },
          "salesPrice" : {
            "type" : "number",
            "example" : 69.99,
            "description" : "Suggested selling price"
          },
          "partnerCostPrice" : {
            "type" : "number",
            "example" : 63.69,
            "description" : "Product cost to partner"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "BR",
            "description" : "2-character country code (ISO 3166-1 alfa-2)"
          },
          "salesCurrencyCode" : {
            "type" : "string",
            "example" : "BRL",
            "description" : "2-character currency code (ISO 4217)"
          },
          "salesCurrencySymbol" : {
            "type" : "string",
            "example" : "R$",
            "description" : "Currency symbol"
          },
          "Tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tags"
            }
          }
        }
      },
      "ProductInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "example" : "Grand Theft Auto V"
          },
          "description" : {
            "type" : "string",
            "example" : "Grand Theft Auto V para PC oferece aos jogadores a opção de explorar o gigantesco e premiado mundo ..."
          },
          "image" : {
            "type" : "string",
            "example" : "https://img.hype.games/cdn/3ef499d0-2c87-4d48-81f6-6d3bd7195d6egtav-cover-starlet.jpg"
          },
          "salesPrice" : {
            "type" : "number",
            "example" : 69.99,
            "description" : "Suggested selling price"
          },
          "partnerCostPrice" : {
            "type" : "number",
            "example" : 63.69,
            "description" : "Product cost to partner"
          },
          "howToRedeem" : {
            "type" : "string"
          },
          "termsAndConditions" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "BR",
            "description" : "2-character country code (ISO 3166-1 alfa-2)"
          },
          "salesCurrencyCode" : {
            "type" : "string",
            "example" : "BRL",
            "description" : "2-character currency code (ISO 4217)"
          },
          "salesCurrencySymbol" : {
            "type" : "string",
            "example" : "R$",
            "description" : "Currency symbol"
          },
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CollectionSingle"
            }
          }
        }
      },
      "PreRedeemOrderLot" : {
        "type" : "object",
        "properties" : {
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreRedeemOrderItem"
            }
          }
        },
        "required" : [ "partnerReference" ]
      },
      "PreRedeemOrderItem" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Our product Id in catalog request"
          },
          "ammount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "number of items in this product"
          }
        },
        "required" : [ "productId", "ammount" ]
      },
      "PreRedeemOrder" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "number",
            "format" : "int32",
            "description" : "Our product Id in catalog request"
          },
          "customer" : {
            "type" : "object",
            "properties" : {
              "document" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "bornAt" : {
                "type" : "string",
                "format" : "date"
              },
              "email" : {
                "type" : "string",
                "format" : "email"
              },
              "zipCode" : {
                "type" : "string"
              },
              "streetName" : {
                "type" : "string"
              },
              "streetNumber" : {
                "type" : "string"
              },
              "complement" : {
                "type" : "string"
              },
              "neighborhood" : {
                "type" : "string"
              },
              "city" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string"
              },
              "countryCode" : {
                "type" : "string",
                "example" : "BR"
              }
            }
          }
        },
        "required" : [ "productId", "partnerReference", "customer - document - name - bornAt" ]
      },
      "ReversalRequest" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "number",
            "format" : "int32",
            "description" : "Our transaction Id"
          }
        },
        "required" : [ "transactionId" ]
      },
      "ReversalLotRequest" : {
        "type" : "object",
        "properties" : {
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          }
        },
        "required" : [ "partnerReference" ]
      },
      "StockResponse" : {
        "type" : "object",
        "properties" : {
          "hasStock" : {
            "type" : "boolean"
          },
          "amount" : {
            "type" : "number",
            "format" : "int32",
            "example" : -1,
            "description" : "The amount of the product in stock. When the product is of unlimited stock the amount value returns \"-1\""
          }
        }
      },
      "ReversalResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "transactionId" : {
            "type" : "number",
            "format" : "int32"
          }
        }
      },
      "ReversalLotResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          }
        }
      },
      "PreRedeemResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Pre-Redeem Status (out stock-> when the product is out of stock at the moment; delivered-> when the product is available; already requested -> when the request is made with the same partnerReference we return the key of the last request; limit exceeded -> When customer exceeds purchase limit of one product per day)",
            "enum" : [ "out of stock", "delivered", "already requested", "limit exceeded" ]
          },
          "transaction" : {
            "type" : "object",
            "properties" : {
              "transactionId" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Our transaction Id"
              },
              "key" : {
                "type" : "string",
                "description" : "the product key to redeem"
              },
              "redirectLink" : {
                "type" : "string",
                "description" : "the link to the rescue page with the product key to redeem"
              },
              "partnerReference" : {
                "type" : "string",
                "description" : "Your transaction Id or order number"
              }
            }
          }
        }
      },
      "PreRedeemLotResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Pre-Redeem Status (delivered-> when the product is available; already requested -> when the request is made with the same partnerReference we return the key of the last request)",
            "enum" : [ "delivered", "already requested" ]
          },
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          }
        }
      },
      "RedeemLotQueueResponse" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RedeemLotQueueItemResponse"
        }
      },
      "RedeemLotQueueItemResponse" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Our product Id in catalog request"
          },
          "ammount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "number of items in this product"
          },
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          },
          "isFinished" : {
            "type" : "boolean",
            "description" : "Inform whether the queue was generated or not"
          }
        }
      },
      "AuthResponse" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string"
          },
          "refreshToken" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date"
          },
          "expiredAt" : {
            "type" : "string",
            "format" : "date"
          },
          "isAuthenticated" : {
            "type" : "boolean"
          }
        }
      },
      "Reports" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Report"
        }
      },
      "Report" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Our transaction Id"
          },
          "partnerReference" : {
            "type" : "string",
            "description" : "Your transaction Id or order number"
          },
          "salesPrice" : {
            "type" : "number",
            "example" : 69.99,
            "description" : "Suggested selling price"
          },
          "partnerCostPrice" : {
            "type" : "number",
            "example" : 63.69,
            "description" : "Product cost to partner"
          },
          "productId" : {
            "type" : "number",
            "format" : "int32",
            "description" : "Our product Id in catalog request"
          },
          "productName" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string",
            "description" : "Buyer Name"
          },
          "customerDocument" : {
            "type" : "string",
            "description" : "Buyer document number"
          },
          "status" : {
            "type" : "string",
            "description" : "Transaction Status (In of stock-> when the transaction is currently pending; Out of stock-> when the transaction was delivered; Reserved in stock -> when the transaction is pre-redeeming (but not yet redeemed);Canceled in stock-> when the transaction was canceled)",
            "enum" : [ "In of stock", "Out of stock", "Reserved in stock", "Canceled in stock" ]
          },
          "transactionDate" : {
            "type" : "string",
            "format" : "datetime"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "BR",
            "description" : "2-character country code (ISO 3166-1 alfa-2)"
          },
          "salesCurrencyCode" : {
            "type" : "string",
            "example" : "BRL",
            "description" : "2-character currency code (ISO 4217)"
          },
          "salesCurrencySymbol" : {
            "type" : "string",
            "example" : "R$",
            "description" : "Currency symbol"
          },
          "key" : {
            "type" : "string",
            "description" : "the product key to redeem"
          },
          "keySentToCustomer" : {
            "type" : "boolean"
          }
        }
      },
      "MessageResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}