{"openapi":"3.0.0","info":{"description":"Specifications for a Brex Accounting API to be used for pull-based integrations with accounting partners.\n","version":"1.2.0","title":"Brex Accounting API","contact":{"email":"intuit-contact@brex.com"}},"servers":[{"url":"https://platform.staging.brexapps.com/v1/accounting","description":"\n# Authentication via OAuth + OpenID Connect\nBrex API authentication is fully compliant with OpenID Connect, an extension on top of OAuth2. For more details on the OpenID Connect protocol see the spec [here](https://openid.net/specs/openid-connect-core-1_0.html). The well-known configuration can be found at the following urls:\n\n**Production:** [https://accounts.brex.com/.well-known/openid-configuration](https://accounts.brex.com/.well-known/openid-configuration)\n\n**Staging:** [https://accounts.staging.brexapps.com/.well-known/openid-configuration](https://accounts.staging.brexapps.com/.well-known/openid-configuration)\n\n\n## Scopes\nYou will need to request the following scopes to access the API:\n\n`openid`\n\n`offline_access`\n\n\n`https://accounting.brexapis.com/cash`\n\n\n`https://accounting.brexapis.com/card`\n\nFor the `/cards` endpoint, the additional scope `https://corpcard.brexapis.com/cards.readonly` is required.\n\n## Example Auth Flow\nThe current base url for these requests is\n\n**Production**\n`https://accounts.brex.com/oauth2/v1`\n\n**Staging**\n`https://accounts.staging.brexapps.com/oauth2/v1`\n\n\nThis may change in the future so be sure to check the openid-configuration.\n\n### 1. Authorize\n```\ncurl <BASE_URL>/auth?prompt=consent&client_id=<CLIENT_ID>&response_type=code&redirect_uri=<REDIRECT_URI>&scope=<SCOPES>\n\n```\nThis will return an authentication code to be used for obtaining a token in step 2:\n\n\n### 2. Authorization grant\n**Request**\n```\ncurl --url '<BASE_URL>/token' \\\n     --data 'code=<AUTHORIZATION_CODE_FROM_STEP_1>' \\ \n     --data 'client_id=<CLIENT_ID>' \\ \n     --data 'client_secret=<CLIENT_SECRET>' \\ \n     --data 'grant_type=authorization_code' \\ \n     --data 'redirect_uri=<URL_ENCODED_REDIRECT_URI>' \\\n     --data 'prompt=consent'\n```\n\nTo obtain a `refresh_token`, make sure you've included the parameter `prompt=consent` and requested the `offline_access` scope.\n\n\n**Response**\n```\n{\n  access_token: <TOKEN>,\n  expires_in: 3600,\n  token_type: Bearer,\n  refresh_token: <REFRESH_TOKEN>,\n  scope: <SCOPES>,\n  id_token: <some_id>\n}\n```\n\n### 3. Refresh token\nNote: Always use the new refresh token! We are transitioning into a strict rotation scheme.\n\n**Request**\n```\ncurl --url '<BASE_URL>/token' \\\n     --data 'refresh_token=<REFRESH_TOKEN>' \\\n     --data 'client_id=<CLIENT_ID' \\\n     --data 'grant_type=refresh_token' \\\n     --data 'redirect_uri=<URL_ENCODED_REDIRECT_URI>'\n\n```\n\n**Response**\n```\n{\n  \"access_token\": <TOKEN>,\n  \"expires_in\": 36000,\n  \"id_token\", <ID_TOKEN>,\n  \"refresh_token\": <REFRESH_TOKEN>,\n  \"token_type\": \"Bearer\"\n}\n```\n\n\n## Calling the API\n\n\n**Production endpoint:** [https://platform.brexapis.com/v1](https://platform.brexapis.com/v1)\n\n**Staging endpoint:** [https://platform.staging.brexapps.com/v1](https://platform.staging.brexapps.com/v1)\n\nThe primary serialization format for this API is JSON.\n\nAfter an access token is made available with the appropriate scopes, it should be passed in the HTTP headers as follows:\n```\nAuthorization: Bearer <access token>\n```\n\n### Example usage\n**New customer setup**\n1. Get accounts via `/accounts`\n\n```\nhttps://platform.brexapis.com/v1/accounting/accounts\n```\n\n2. Get historical data\n```\nhttps://platform.brexapis.com/v1/accounting/accounts/{account_id}/transactions?start_time={2 years ago}\n```\n\n\n**Daily pulls**\n1. Get accounts via `/accounts`\n\n```\nhttps://platform.brexapis.com/v1/accounting/accounts\n```\n\n2. Get historical data\n```\nhttps://platform.brexapis.com/v1/accounting/accounts/{account_id}/transactions?start_time={7 dayas ago}\n```\n\n# Pagination\nAll the endpoints below will return a maximum of **100** results at a time.\nFor pagination, we will expose a `next_cursor` token in the list of results.\n\n```\n{\n  \"items\": [\n    {\n      ...\n    },\n    {\n      ...\n    }\n  ],\n  \"next_cursor\": \"bGltaXQ9MjAmb2Zmc2V0PTE\"\n}\n```\n\nTo request the next page, append `cursor=<token>` to the request URL. If you pass in a cursor, you do not need to pass in any additional parameters (the parameters of your original query will be automatically used). \n\nIf there are no more results, the `next_cursor` will be `null`.\n\n**Example**\n```\nhttps://platform.staging.brexapps.com/v1/accounting/accounts/{accountId}/transactions?cursor=bGltaXQ9MjAmb2Zmc2V0PTE\n``` \n\n# Tracing\nThe API returns a Brex trace ID in the response header, `X-Brex-Trace-Id` which can be used for debugging and observability."},{"url":"https://platform.staging.brexapps.com/v1"},{"url":"https://platform.brexapis.com/v1"},{"url":"https://platform.brexapis.com/v1/accounting"}],"tags":[{"name":"accounts","description":"Query data for Card and Cash accounts, transactions and statements"},{"name":"cards","description":"Query data for an individual card"}],"paths":{"/cards":{"get":{"tags":["cards"],"summary":"Get information for a card","description":"The object containing the details of a card.\n\nFor this endpoint, use `https://platform.staging.brexapps.com/v1/cards` instead of `https://platform.staging.brexapps.com/v1/accounting`\n\nRequires an additional scope during OAuth, **https://corpcard.brexapis.com/cards.readonly**","operationId":"getCards","parameters":[],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Card"},"example":{"items":[{"user_id":"auser_cyzsdvz7s00011mry1s0i1xk","type":"credit","status":"active","network":"mastercard","last_four":"7085","instrument_type":"virtual/physical","id":"ncard_c160yyp4i00001nyfyvwq126","holder_name":"First Last","first_six":"111111"}]}}}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"}},"security":[{"bearerAuth":["read:accounts"]}]}},"/accounts":{"get":{"tags":["accounts"],"summary":"Get information for an account","description":"This is the basic object that provides a top-level view of a company's available accounts.","operationId":"getAccounts","parameters":[],"responses":{"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Account"},"example":{"next_cursor":null,"items":[{"id":"dpacc_12345","type":"ASSET","instrument":"CASH","name":"Brex Cash","description":"Brex Cash Account","status":"ACTIVE","settlement_currency":"usd","current_balance":{"amount":888800,"currency":"usd"},"available_balance":{"amount":3400,"currency":"usd"},"cash":{"account_number":"dpacc_12345","routing_number":"122105100","current_statement_period":{"start":"2020-02-01","end":"2020-02-31"}}},{"id":"cuacc_12345","type":"LIABILITY","instrument":"CARD","name":"Brex Card","description":"Brex Card Account","status":"ACTIVE","settlement_currency":"usd","current_balance":{"amount":666600,"currency":"usd"},"available_balance":{"amount":3400,"currency":"usd"},"card":{"account_limit":{"amount":100000,"currency":"usd"},"current_statement_period":{"start":"2020-02-01","end":"2020-02-31"}}}]}}}}}},"security":[{"bearerAuth":["read:accounts"]}]}},"/accounts/{accountId}/transactions":{"get":{"tags":["accounts"],"summary":"Get transactions for an account","description":"This endpoint supports both `PENDING` and `POSTED` transactions. For now, this endpoint will only return posted transactions. However, you should build against it assuming it returns both `PENDING` and `POSTED`.\n\nIf the transaction is `PENDING`, The `balance`, `posted_at`, and `statement_id` fields will be `null`\n\nIf the transaction is `POSTED` but the statement has not closed yet, `statement_id` will be `null`\n\nNote that `amount.amount` is the amount of a transaction, whereas `balance.amount` is the running balance of the account *including* the amount of this transaction. Most of the time, the two values will be different.\n\nAll amounts will have signage.\n\nFor **CASH**, a debit activity will have a **positive** value. *i.e. depositing a paycheck*. A credit activity will have a **negative** sign. *i.e. paying a bill via outgonig ACH transfer*.\n\nFor **CREDIT CARD**, a debit activity will have a **negative** value. *i.e. paying off the credit card bill*. A credit activity will have a **positive** sign. *i.e. purchasing coffee*.","operationId":"getTransactions","parameters":[{"name":"accountId","in":"path","description":"ID of the account to get transactions for","required":true,"schema":{"type":"string"}},{"name":"start_time","in":"query","description":"Inclusive UTC ISO timestamp, optional. For posted transactions, this will filter on the `posted_at` field For pending transactions, this will filter on the `initiated_at` field","required":false,"schema":{"type":"string"}},{"name":"statement_id","in":"query","description":"If this parameter is given, only `POSTED` transactions will be returned","required":false,"schema":{"type":"string"}},{"name":"limit","in":"query","description":"optional, maximum allowed is 100","required":false,"schema":{"type":"integer"}}],"responses":{"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Transaction"},"example":{"next_cursor":"bGltaXQ9MjAmb2Zmc2V0PTE","items":[{"id":"ptx_1234","kind":"CARD","status":"POSTED","amount":{"amount":12340,"currency":"usd"},"balance":{"amount":888800,"currency":"usd"},"description":"Uber","initiated_at":"2019-09-01T00:00:00Z","posted_at":"2019-09-03T00:00:00Z","statement_id":"st_123","method":{"type":"CREDIT_CARD","credit_card":{"id":"card_1234","network":"VISA","last_four":"7890","first_six":"123456","cardholder_name":"First Last"}},"card_transaction_details":{"type":"PURCHASE","purchase":{"raw_descriptor":"PAYPAL *UBER","mcc_code":"145"}}}]}}}}}},"security":[{"bearerAuth":["read:accounts"]}]}},"/accounts/{accountId}/statements":{"get":{"tags":["accounts"],"summary":"Get statements for an account","description":"Retrieve the statement information for a given account. By default, it returns statements in order of `period.end` (latest first). The data returned by this endpoint is *immutable*, so it will only return *closed* statements. The current \"open\" statement (which is *mutable*) will not be returned.","operationId":"getStatements","parameters":[{"name":"accountId","in":"path","description":"ID of the account to get statements for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Statement"},"example":{"next_cursor":"bGltaXQ9MjAmb2Zmc2V0PTE","items":[{"id":"pst_123","start_balance":{"amount":123400,"currency":"usd"},"end_balance":{"amount":333000,"currency":"usd"},"period":{"start":"2019-09-01T00:00:00Z","end":"2019-09-30T23:59:59Z"},"document_url":"https://www.brex.com/assets/123"}]}}}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"}},"security":[{"bearerAuth":["read:accounts"]}]}}},"components":{"schemas":{"Account":{"required":["id","type","instrument","name","description","status","settlement_currency","current_balance","available_balance"],"type":"object","properties":{"id":{"type":"string","example":"acc_12345"},"type":{"type":"string","description":"Asset or liability","enum":["ASSET","LIABILITY"]},"instrument":{"type":"string","description":"CASH or CARD","enum":["CASH","CARD"]},"name":{"type":"string","description":"Name on the account","example":"Brex Card"},"description":{"type":"string","example":"Brex Card Account"},"status":{"type":"string","description":"Whether the account is active or inactive","enum":["ACTIVE","INACTIVE"]},"settlement_currency":{"type":"string","description":"lowercase string in ISO-4217 format","example":"usd"},"current_balance":{"$ref":"#/components/schemas/Money"},"available_balance":{"$ref":"#/components/schemas/Money"}},"oneOf":[{"$ref":"#/components/schemas/CardAccountDetails"},{"$ref":"#/components/schemas/CashAccountDetails"}],"discriminator":{"propertyName":"accountDetailType","mapping":{"card":"#/components/schemas/CardAccountDetails","cash":"#/components/schemas/CashAccountDetails"}}},"CashAccountDetails":{"required":["account_number","routing_number"],"type":"object","properties":{"account_number":{"type":"string","example":"dpacc123"},"routing_number":{"type":"string","example":"1111234"},"current_statement_period":{"$ref":"#/components/schemas/TimePeriod"}}},"CardAccountDetails":{"required":["account_limit"],"type":"object","properties":{"account_limit":{"$ref":"#/components/schemas/Money"},"current_statement_period":{"$ref":"#/components/schemas/TimePeriod"}}},"Transaction":{"type":"object","required":["id","source_type","status","amount","method","description","initiated_at","posted_at"],"properties":{"id":{"type":"string","example":"ptx_123"},"source_type":{"type":"string","enum":["CARD","CASH"],"example":"CARD"},"status":{"type":"string","enum":["POSTED","PENDING"],"example":"POSTED"},"amount":{"$ref":"#/components/schemas/Money"},"balance":{"$ref":"#/components/schemas/Money"},"method":{"$ref":"#/components/schemas/TransactionMethod"},"description":{"type":"string","example":"Uber","description":"mutable field"},"initiated_at":{"type":"string","example":"2019-09-01T00:00:00Z","description":"ISO 8601 string"},"posted_at":{"type":"string","example":"2019-09-03T00:00:00Z","description":"ISO 8601 string"},"statement_id":{"type":"string","example":"st_123"}},"oneOf":[{"$ref":"#/components/schemas/CardTransactionDetails"},{"$ref":"#/components/schemas/CashTransactionDetails"}]},"TransactionMethod":{"type":"object","properties":{"type":{"type":"string","enum":["CREDIT_CARD","DEBIT_CARD","ACH","WIRE_TRANSFER","CHECK","BREX_NETWORK_TRANSFER","OTHER"],"example":"CREDIT_CARD"}},"oneOf":[{"$ref":"#/components/schemas/CreditCardMethod"},{"$ref":"#/components/schemas/DebitCardMethod"},{"$ref":"#/components/schemas/ACHMethod"},{"$ref":"#/components/schemas/WireTransferMethod"},{"$ref":"#/components/schemas/CheckMethod"},{"$ref":"#/components/schemas/BrexNetworkTransferMethod"}],"discriminator":{"propertyName":"transactionMethodType","mapping":{"credit_card":"#/components/schemas/CreditCardMethod","debit_card":"#/components/schemas/DebitCardMethod","ach":"#/components/schemas/ACHMethod","wire_transfer":"#/components/schemas/WireTransferMethod","check":"#/components/schemas/CheckMethod","brex_network_transfer":"#/components/schemas/BrexNetworkTransferMethod"}}},"CreditCardMethod":{"type":"object","properties":{"id":{"type":"string","example":"card_1234"},"network":{"type":"string","example":"VISA"},"last_four":{"type":"string","example":"1234"},"first_six":{"type":"string","example":"111111"},"cardholder_name":{"type":"string","example":"First Last"}}},"DebitCardMethod":{"type":"object"},"ACHMethod":{"type":"object"},"WireTransferMethod":{"type":"object"},"CheckMethod":{"type":"object"},"BrexNetworkTransferMethod":{"type":"object"},"CardTransactionDetails":{"properties":{"type":{"type":"string","enum":["PAYMENT","PURCHASE","REFUND","CHARGEBACK","REWARDS_CREDIT","OTHER"]}},"oneOf":[{"$ref":"#/components/schemas/CardPaymentDetails"},{"$ref":"#/components/schemas/CardPurchaseDetails"},{"$ref":"#/components/schemas/CardRefundDetails"},{"$ref":"#/components/schemas/CardChargebackDetails"},{"$ref":"#/components/schemas/CardRewardsCreditDetails"}],"discriminator":{"propertyName":"transactionDetailType","mapping":{"payment":"#/components/schemas/CardPaymentDetails","purchase":"#/components/schemas/CardPurchaseDetails","refund":"#/components/schemas/CardRefundDetails","chargeback":"#/components/schemas/CardChargebackDetails","rewards":"#/components/schemas/CardRewardsCreditDetails"}}},"CardPaymentDetails":{"type":"object"},"CardPurchaseDetails":{"type":"object","required":["card_id","raw_descriptor"],"properties":{"raw_descriptor":{"type":"string","example":"PAYPAL *UBER"},"mcc_code":{"type":"string","example":"145"}}},"CardRefundDetails":{"type":"object","required":["card_id","raw_descriptor"],"properties":{"raw_descriptor":{"type":"string","example":"PAYPAL *UBER"},"mcc_code":{"type":"string","example":"145"}}},"CardChargebackDetails":{"type":"object","required":["card_id","raw_descriptor"],"properties":{"raw_descriptor":{"type":"string","example":"PAYPAL *UBER"},"mcc_code":{"type":"string","example":"145"}}},"CardRewardsCreditDetails":{"type":"object"},"CashTransactionDetails":{"type":"object","properties":{"type":{"type":"string","enum":["PAYMENT","DIVIDEND","FEE","ADJUSTMENT","OTHER"]}},"oneOf":[{"$ref":"#/components/schemas/CashPaymentDetails"},{"$ref":"#/components/schemas/CashDividendDetails"},{"$ref":"#/components/schemas/CashFeeDetails"},{"$ref":"#/components/schemas/CashAdjustmentDetails"}],"discriminator":{"propertyName":"transactionDetailType","mapping":{"payment":"#/components/schemas/CashPaymentDetails","dividend":"#/components/schemas/CashDividendDetails","fee":"#/components/schemas/CashFeeDetails","adjustment":"#/components/schemas/CashAdjustmentDetails"}}},"CashPaymentDetails":{"type":"object","properties":{"counterparty":{"$ref":"#/components/schemas/CashCounterparty"},"bai2_code":{"type":"string","example":"010"}}},"CashDividendDetails":{"type":"object"},"CashFeeDetails":{"type":"object"},"CashAdjustmentDetails":{"type":"object"},"CashCounterparty":{"type":"object","properties":{"name":{"type":"string","example":"Counterparty Name"}}},"Statement":{"type":"object","required":["id","start_balance","end_balance","period"],"properties":{"id":{"type":"string","example":"pst_123"},"start_balance":{"$ref":"#/components/schemas/Money"},"end_balance":{"$ref":"#/components/schemas/Money"},"period":{"$ref":"#/components/schemas/TimePeriod"},"document_url":{"type":"string","example":"https://www.brex.com/assets/123"}}},"Card":{"type":"object","properties":{"id":{"type":"string","example":"ncard_c160yyp4i00001nyfyvwq126"},"user_id":{"type":"string","example":"auser_cyzsdvz7s00011mry1s0i1xk"},"type":{"type":"string","enum":["credit","prepaid"]},"status":{"type":"string","enum":["waiting_activation","active","suspended","terminated"]},"network":{"type":"string","enum":["visa","mastercard"]},"last_four":{"type":"string"},"first_six":{"type":"string"},"instrument_type":{"type":"string","enum":["virtual","physical"]},"holder_name":{"type":"string","example":"First Last"}}},"Money":{"type":"object","properties":{"currency":{"type":"string","example":"usd","description":"lowercase string in ISO-4217 format"},"amount":{"type":"integer","example":888000,"description":"amount in the currency's smallest unit (eg. cents)"}}},"TimePeriod":{"type":"object","properties":{"start":{"type":"string","example":"2019-10-01T00:00:00Z","description":"ISO 8601 string"},"end":{"type":"string","example":"2019-10-31T23:59:59Z","description":"ISO 8601 string"}}}},"securitySchemes":{"Brex OAuth2 Authentication":{"type":"oauth2","flows":{"clientCredentials":{"authorizationUrl":"https://accounts.staging.brexapps.com/oauth2/v1/auth","tokenUrl":"https://accounts.staging.brexapps.com/oauth2/v1/token","scopes":{"openid":"openid","https://meta.brexapis.com/administrative":"administrative","https://accounting.brexapis.com/card":"read card data","https://accounting.brexapis.com/cash":"read cash data"}}}},"bearerAuth":{"type":"http","scheme":"bearer"}}}}