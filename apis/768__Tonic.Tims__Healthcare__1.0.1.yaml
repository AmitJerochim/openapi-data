openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Tonic.Tims/Healthcare/1.0.0
info:
  description: This is a API built for demo purpose. About patients and their treatment plan.
  version: "1.0.1"
  title: Healthcare
  contact:
    email: naseem.mohammed@slkgroup.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Patient
    description: Patient related matters
  - name: Treatment plan
    description: Treatment related matters
paths:
  /patient:
    get:
      tags:
        - Patient
      summary: Finds patient by id
      operationId: findPatient
      description: |
        By passing in the appropriate options, you can search for
        the patient in the database
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          example: AccessTokenHere
        - in: query
          name: patientId
          description: pass the patientId for looking up the database
          required: false
          schema:
            type: integer
          example: 415
      responses:
        '200':
          description: search result matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: bad input parameter
    post:
      tags:
        - Patient
      summary: adds a patient to the list
      operationId: addPatient
      description: Adds a patient to the system
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '201':
          description: patient added
        '400':
          description: invalid input, object invalid
        '409':
          description: patient already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        description: Add Patient to list
    delete:
      tags:
        - Patient
      summary: deletes a patient from list
      operationId: deletePatient
      description: Deletes a patient from the list
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: patientId
        in: query
        description: Patient id to delete
        required: true
        schema:
          type: string
      responses:
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Patient not found"
  /patient/{patientId}/treatmentplan:
    get:
      tags:
        - Treatment plan
      summary: Get patient's treatment plan
      operationId: getTreatementPlan
      description: |
        By passing in the patientId, you can get the  patient's treamtment plan
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - in: path
          name: patientId
          description: pass the patientId for looking up the database
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search result matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatmentPlan'
        '400':
          description: bad input parameter

components:
  schemas:
    Patient:
      type: object
      required:
        - id
        - name
        - totalWeightInKilos
        - classification
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Lionel Messi
        totalWeightInKilos:
          type: integer
          example: 77
        classification:
          type: string
          items:
            type: "string"
            enum: [Underweight, Normal, Overweight, Obese]
            example: Normal
    TreatmentPlan:
      type: object
      required:
        - id
        - patientId
        - doctorId
        - hospitalId
        - patientclassification
        - treatmentPlan
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        patientId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        doctorId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        classification:
          type: string
          items:
            type: "string"
            enum: [Underweight, Normal, Overweight, Obese]
            example: Normal
        prescription:
          type: string
          items:
            type: "string"
            enum: ["None", "Eat eggs", "Run 5 miles", "Run 15 miles"]
            example: "None"
