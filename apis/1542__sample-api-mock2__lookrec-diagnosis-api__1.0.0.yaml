openapi: 3.0.0
info:
  description: LOOKREC 遠隔診断側に新たに作成するAPIを定義する
  version: 1.0.0
  title: LOOKREC 遠隔診断APIリスト

servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/sample-api-mock2/lookrec-diagnosis-api/1.0.0
  - url: '{protocol}://{server}/api-v1'
    variables:
      protocol:
        default: https
        enum:
          - https
      server:
        default: app.lookrec-staging.work
        enum:
          - app.lookrec.com
          - app.lookrec-staging.work

paths:
  /api/j/v1/patients:
    get:
      tags:
      - patients
      summary: 患者データ取得
      description: 患者を取得する
      parameters:
        - $ref: '#/components/parameters/institutionCode'
        - $ref: '#/components/parameters/patientId'
      responses:
        200:
          description: 取得した患者データを返却する
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/patients'
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        401:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Unauthorized request."
        403:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jwt has expired."
    post:
      tags:
      - patients
      summary: 患者データ更新
      description: 患者を作成・更新する
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                institutionCode:
                  type: string
                  example: f3732fb7-5d4f-ca4b-23fb-2614fc9e598d
                patientId:
                  type: string
                  example: test12345
                patientInfo:
                  type: string
                  example: '{"address":"広島県広島市","birthDate":"1972-11-27T00:00:00Z","email":"","familyHistory":"家族歴","medicalHistory":"既往歴","mobilePhoneNumber":"","notices":"","patientName":"健診　秋","phoneNumber":"","phoneticName":"ケンシン　アキ","postalCode":"7340002","sex":1}'
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 成功メッセージ
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        401:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Unauthorized request."
        403:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jwt has expired."

  /api/j/v1/jwt/check:
    get:
      tags:
      - jwtCheck
      summary: JWTチェック
      description: |
        リクエストヘッダーからJWTを取り出してユーザーデータに存在するか確認する
      parameters:
        - in: header
          name: Bearer-Token
          description: 事前に取り交わしたアプリ間のAccessToken
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
        - in: header
          name: Jwt-Token
          description: cookieに格納されたJWTトークン
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId: 
                    type: string
                    example: "c9e29530-678e-11e7-b1a2-42601b920957"
                  Expired:
                    type: string
                    example: "2019-12-14T14:08:39Z"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        401:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Unauthorized request."
        403:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jwt has expired."
  /api/j/v1/users:
    get:
      tags:
      - users
      summary: ユーザー情報を取得する
      description: |
        ユーザー情報を取得する
        施設コードがパラメータにない場合は、サーバーに保存されている現在ログイン中施設コードを使用してユーザー情報を取得する
      parameters:
        - in: header
          name: Bearer-Token
          description: 事前に取り交わしたアプリ間のAccessToken
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
        - in: header
          name: Jwt-Token
          description: cookieに格納されたJWTトークン
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
        - in: query
          name: institutionCode
          description: 施設コード
          required: false
          schema:
            type: string
            example: "d151f295-42db-f3b4-a456-d1ad2ac17f09"
        - in: query
          name: userId
          description: ユーザーID
          required: true
          schema:
            type: string
            example: "c9e29530-678e-11e7-b1a2-42601b920957"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  userInfo:
                    allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                        accounts:
                          type: string
                        institutionCodes:
                          items:
                            type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                  currentInstitutionCode:
                    type: string
                  memberInfo:
                    allOf:
                    - type: object
                      properties:
                        userId:
                          type: string
                        institutionCodes:
                          type: string
                        detail:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                  logoutUrl:
                    type: string
                example:
                  userInfo:
                    id: 6c9d5537-121f-11e9-92c2-a77916baa755
                    accounts: "[{\"providerName\":\"google\",\"account\":\"113543153865768322833\"}]"
                    institutionCodes:
                      - f3732fb7-5d4f-ca4b-23fb-2614fc9e598d
                      - 36b9a5f4-1e6b-2240-28f2-fb91fa945927
                      - 4eef853d-4357-4207-8c56-c84cdb3f2e1e
                    createdAt: "2019-10-11T02:04:10.692213Z"
                    createdBy: ""
                    updatedAt: "2019-07-10T00:18:59Z"
                    updatedBy: ""
                  currentInstitutionCode: f3732fb7-5d4f-ca4b-23fb-2614fc9e598d
                  memberInfo:
                    userId: 6c9d5537-121f-11e9-92c2-a77916baa755
                    institutionCodes: f3732fb7-5d4f-ca4b-23fb-2614fc9e598d
                    detail: "{\"userName\":\"テスト\",\"position\":\"\",\"emergencyEmail\":\"test@mnes.org\",\"roles\":[{\"actions\":[{\"action\":\"read\",\"permission\":true},{\"action\":\"download\",\"permission\":true},{\"action\":\"upload\",\"permission\":true},{\"action\":\"delete\",\"permission\":true}],\"service\":\"backup\"},{\"actions\":[{\"action\":\"read\",\"permission\":true},{\"action\":\"write\",\"permission\":true},{\"action\":\"delete\",\"permission\":true}],\"service\":\"order\"},{\"actions\":[{\"action\":\"receive\",\"permission\":true},{\"action\":\"read\",\"permission\":true},{\"action\":\"write\",\"permission\":true},{\"action\":\"comment\",\"permission\":true},{\"action\":\"cancel\",\"permission\":true}],\"service\":\"report\"},{\"actions\":[{\"action\":\"read\",\"permission\":true},{\"action\":\"write\",\"permission\":true},{\"action\":\"delete\",\"permission\":true}],\"service\":\"questionary\"},{\"actions\":[{\"action\":\"read\",\"permission\":false},{\"action\":\"write\",\"permission\":false},{\"action\":\"delete\",\"permission\":false}],\"service\":\"visitClinic\"},{\"actions\":[{\"action\":\"clerk\",\"permission\":false},{\"action\":\"nurse\",\"permission\":false},{\"action\":\"doctor\",\"permission\":false},{\"action\":\"technician\",\"permission\":false},{\"action\":\"admin\",\"permission\":false}],\"service\":\"visitAdmin\"}]}"
                    createdAt: "2019-11-18T02:55:14.94832Z"
                    createdBy: "hoghoge@gmail.com"
                    updatedAt: "0001-01-01T00:00:00Z"
                    updatedBy: ""
                  logoutUrl: "https://app.lookrec-staging.work/_ah/logout?continue=https://accounts.google.com/Logout%3Fcontinue%3Dhttps://appengine.google.com/_ah/logout%253Fcontinue%253Dhttps://google.com/url%25253Fsa%25253DD%252526q%25253Dhttps://app.lookrec-staging.work/%252526ust%25253D1574140740299907%252526usg%25253DAFQjCNFEMErTP9NCLkegmQ9g_UFdHeUuhA%26service%3Dah"
        400:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        401:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Unauthorized request."
        403:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."
        500:
          description: 失敗時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jwt has expired."
  /api/j/v1/institutions:
    get:
      tags:
      - institutions
      summary: 施設情報を取得する
      description: |
        施設情報を取得する
        施設コードがパラメータにない場合は、サーバーに保存されている現在ログイン中施設コードを使用してユーザー情報を取得する
      parameters:
        - in: header
          name: Bearer-Token
          description: 事前に取り交わしたアプリ間のAccessToken
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
        - in: header
          name: Jwt-Token
          description: cookieに格納されたJWTトークン
          required: true
          schema:
            type: string
            example: "xxxxxxxxxxxxxxxxxxxxxxxx"
        - in: query
          name: institutionCode
          description: 施設コード
          required: false
          schema:
            type: string
            example: "d151f295-42db-f3b4-a456-d1ad2ac17f09"
      responses:
        200:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                  type: object
                  required:
                  - name
                  - email
                  properties:
                    institutionCode:
                      type: string
                      example: "d151f295-42db-f3b4-a456-d1ad2ac17f09"
                    institutionName:
                      type: string
                      example:  すいすいクリニック
                    detail:
                      type: object
                      properties:
                        formalName:
                          type: string
                          example: すいすい帰ろう水曜日クリニック
                        representativeDirectorName:
                          type: string
                          example: 森藤 敏之
                        countryCode:
                          type: string
                          example: JPN
                        zipCode:
                          type: string
                          example: 999-9999
                        address:
                          type: string
                          example: 東京都武蔵野市吉祥寺本町2-15-10 いちご吉祥寺ビル1F
                        phoneNumber:
                          type: string
                          example: 999-9999-9999
                        faxNumber:
                          type: string
                          example: 999-9999-9999
                    contractedServices:
                      type: object
                      properties:
                        backup:
                          type: boolean
                          example: true
                        conference:
                          type: boolean
                          example: true
                        order:
                          type: boolean
                          example: true
                        report:
                          type: boolean
                          example: true
                        reserve:
                          type: boolean
                          example: true
                        karte:
                          type: boolean
                          example: true

components:
  schemas:
    patients:
      type: object
      properties:
          institutionCode:
              type: string
              example: 87753bf4-27ce-4ae3-915f-8f4b1ee9674c
          patientId:
              type: string
              example: test12345
          patientName:
              type: string
              example: 患者　太郎
          patientInfo:
              type: string
              example: '{"patientName":"山根　温子","phoneticName":"ヤマネ　アツコ","birthDate":"1956-02-15T00:00:00Z","age":"62","sex":"2","address":"安芸高田市高宮町原田1378-3","phoneNumber":"0826-57-1875","mobilePhoneNumber":"090-1180-1136"}'
  parameters:
    institutionCode:
      in: path
      name: institutonCode
      description: 施設コード
      required: true
      schema:
        type: string
        example: f3732fb7-5d4f-ca4b-23fb-2614fc9e598d
    patientId:
      in: path
      name: patientId
      description: 患者ID
      required: true
      schema:
        type: string
        example: test12345
