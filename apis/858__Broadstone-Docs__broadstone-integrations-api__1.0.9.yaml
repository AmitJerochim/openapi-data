openapi: 3.0.1
info:
  title: Broadstone - Integrations API
  description: This is an example of the Endpoints for Integration with Broadstone
  contact:
    email: integrations@broadstone-engage.com
  version: "1.0.9"
servers:
- url: https://testing.api.broadstoneapp.com/v2/integrations
tags:
- name: site
  description: Sites
- name: jobs
  description: Job Adverts
- name: shifts
  description: Shifts
- name: timesheets
  description: Timesheets
- name: workers
  description: Workers
paths:
  /sites:
    post:
      tags:
      - site
      summary: Create a new Site
      operationId: postSite
      requestBody:
        description: Site Object to Add Job Adverts too
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /sites/{uuid}:
    get:
      tags:
      - site
      summary: Get an existing Site
      operationId: getSite
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - site
      summary: Delete an existing Site
      operationId: deleteSite
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    patch:
      tags:
      - site
      summary: Edit an existing Site
      operationId: patchSite
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Site Object to Add Job Adverts too
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /sites/{uuid}/jobs:
    post:
      tags:
      - jobs
      summary: Create a new Job Advert on a Site
      operationId: postJob
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Site"
        required: true
        schema:
          type: string
      requestBody:
        description: Job Advert Object to Add Shifts too
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
        required: true
      responses:
        200:
          description: "Return with Created Job"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /jobs/services:
    get:
      tags:
      - jobs
      summary: Get all the Job Services
      operationId: getJobServices
      responses:
        200:
          description: "Return with a list of the Job Services"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobServices'
      security:
      - api_key: []
  /jobs/sectors:
    get:
      tags:
      - jobs
      summary: Get all the Job Sectors
      operationId: getJobSectors
      responses:
        200:
          description: "Return with a list of the Job Sectors"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSectors'
      security:
      - api_key: []
  /jobs/requirements:
    get:
      tags:
      - jobs
      summary: Get all the Job Requirements
      operationId: getJobRequirements
      responses:
        200:
          description: "Return with a list of the Job Requirements"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRequirements'
      security:
      - api_key: []
  /jobs/{uuid}:
    get:
      tags:
      - jobs
      summary: Get an existing Job Advert
      operationId: getJob
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Job Advert"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Return with Deleted Job"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - jobs
      summary: Delete an existing Job Advert
      operationId: deleteJob
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Job Advert"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Return with Deleted Job"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    patch:
      tags:
      - jobs
      summary: Edit an existing Job Advert
      operationId: patchJob
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Job Advert"
        required: true
        schema:
          type: string
      requestBody:
        description: Job Advert Object to Add Shifts too
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        200:
          description: "Return with Deleted Job"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /jobs/{uuid}/shifts:
    post:
      tags:
      - shifts
      summary: Create a new Shift on a Job Advert
      operationId: postShift
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Job Advert"
        required: true
        schema:
          type: string
      requestBody:
        description: Shift Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
        required: true
      responses:
        200:
          description: "Return with Posted Shift"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /shifts/{uuid}:
    get:
      tags:
      - shifts
      summary: Get an existing Shift
      operationId: getShift
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Return with Job"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - shifts
      summary: Delete an existing Shift
      operationId: deleteShift
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Return with Deleted Shift"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
    patch:
      tags:
      - shifts
      summary: Edit an existing Shift
      operationId: patchShift
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      requestBody:
        description: Job Advert Object to Add Shifts too
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
        required: true
      responses:
        200:
          description: "Return with Edited Shift"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
  /shifts/{uuid}/timesheet:
    post:
      tags:
      - timesheets
      summary: Create a Timesheet for a Shift
      operationId: postTimesheet
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      requestBody:
        description: Shift Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
        required: true
      responses:
        200:
          description: "Return with Posted Timesheet"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
  /shifts/{uuid}/clockin:
    post:
      tags:
      - timesheets
      summary: Create a Clock In Entry for a Shift
      operationId: postClockIn
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      requestBody:
        description: Clock In Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clock'
        required: true
      responses:
        200:
          description: "Return with Posted Clock In"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
  /shifts/{uuid}/clockout:
    post:
      tags:
      - timesheets
      summary: Create a Clock Out Entry for a Shift
      operationId: postClockOut
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      requestBody:
        description: Clock Out Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clock'
        required: true
      responses:
        200:
          description: "Return with Posted Clock In"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
  /shifts/{uuid}/worker/remove:
    post:
      tags:
      - workers
      summary: Remove a Worker from a Shift
      operationId: removeShiftWorker
      parameters:
      - name: uuid
        in: path
        description: "UUID of the Shift"
        required: true
        schema:
          type: string
      requestBody:
        description: Remove Worker Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveWorker'
        required: true
      responses:
        200:
          description: "Return with Posted Clock In"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWorkerResponse'
        405:
          description: Invalid input
          content: {}
      security:
      - api_key: []
components:
  schemas:
    Location:
      required:
      - address1
      - city
      - country
      - county
      - latitude
      - longitude
      type: object
      properties:
        address1:
          type: string
          example: XYZ Building
        address2:
          type: string
          example: Hardman Blvd
        address3:
          type: string
          example: '...'
        city:
          type: string
          example: Manchester
        postcode:
          type: string
          example: M3 3AQ
        county:
          type: string
          example: Greater Manchester
        country:
          type: string
          description: ISO2 Country Code
          example: GB
        latitude:
          type: number
          example: 53.47984
        longitude:
          type: number
          example: -2.24866
    Client:
      required:
      - name
      - reference
      type: object
      properties:
        reference:
          type: string
        name:
          type: string
        visible:
          type: boolean
          description: Toggles client information visibility for this Site to Workers
    Site:
      required:
      - location
      - reference
      type: object
      properties:
        reference:
          type: string
          example: site-001
        instructions:
          type: string
          example: Entrance is to the left of the road
        purchase_order:
          type: string
          example: PO-001
        client:
          $ref: '#/components/schemas/Client'
        location:
          $ref: '#/components/schemas/Location'
    Job:
      required:
      - description
      - reference
      - title
      type: object
      properties:
        reference:
          type: string
          description: Internal Reference to link the Job Advert
          example: job-001
        title:
          type: string
          description: Title displayed on the Job Advert to Workers
        description:
          type: string
          description: Description displayed on the Job Advert to Workers
        uniform_description:
          type: string
          description: Description of Uniform
        payment_type:
          type: string
          enum: [contractor, paye]
          description: >
            Which Payment Type is this?:
              * `contractor` - Contractor
              * `paye` - PAYE
    JobRequirement:
      required:
      - id
      - title
      type: object
      properties:
        id:
          type: number
          format: integer
          description: ID of Requirement
        title:
          type: string
          description: Title of Requirement
    JobRequirements:
      type: array
      items:
        $ref: '#/components/schemas/JobRequirement'
    JobService:
      required:
      - id
      - title
      type: object
      properties:
        id:
          type: number
          format: integer
          description: ID of Service
        title:
          type: string
          description: Title of Service
    JobServices:
      type: array
      items:
        $ref: '#/components/schemas/JobService'
    JobSector:
      required:
      - id
      - title
      type: object
      properties:
        id:
          type: number
          format: integer
          description: ID of Sector
        title:
          type: string
          description: Title of Sector
    JobSectors:
      type: array
      items:
        $ref: '#/components/schemas/JobSector'
    JobRequest:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            sector:
              type: number
              format: integer
              description: ID of Sector
            service:
              type: number
              format: integer
              description: ID of Service
            requirements:
              type: array
              items:
                type: integer
              description: List of Requirement ID's
    JobResponse:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: "UUID of Job Advert"
            site:
              allOf:
                - $ref: '#/components/schemas/Site'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: "UUID of Site"
            sector:
              $ref: '#/components/schemas/JobSector'
            service:
              $ref: '#/components/schemas/JobService'
            requirements:
              type: array
              items:
                $ref: '#/components/schemas/JobRequirement'
    Shift:
      required:
      - reference
      - start_at
      - end_at
      - hourly_rate
      type: object
      properties:
        reference:
          type: string
          description: Internal Reference to link the Shift
          example: shift-001
        start_at:
          type: string
          format: date-time
          description: Start Date & Time of Shift as ISO8601 Zulu
          example: "2020-07-21T17:00:00Z"
        end_at:
          type: string
          format: date-time
          description: End Date & Time of Shift as ISO8601 Zulu
          example: "2020-07-21T23:00:00Z"
        hourly_rate:
          type: number
          format: double
          description: Hourly Rate of Shift
    ShiftResponse:
      allOf:
        - $ref: '#/components/schemas/Shift'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: "UUID of Shift"
            job:
              allOf:
                - $ref: '#/components/schemas/Job'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: "UUID of Job Advert"
            worker:
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Worker'
    Timesheet:
      required:
      - reference
      - approved
      type: object
      properties:
        reference:
          type: string
          description: Internal Reference to link the Timesheet
          example: timesheet-001
        approved:
          type: boolean
          description: Was this timesheet approved or declined?
        hours:
          type: number
          nullable: true
          format: double
          description: Number of Hours Approved
        hourly_rate:
          type: number
          nullable: true
          format: double
          description: Hourly Rate Approved
    TimesheetResponse:
      allOf:
        - $ref: '#/components/schemas/Timesheet'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: "UUID of Timesheet"
            shift:
              allOf:
                - $ref: '#/components/schemas/Shift'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: "UUID of Shift"
    Clock:
      required:
      - reference
      - worker
      - clock_at
      type: object
      properties:
        worker_actioned:
          type: boolean
          description: Did the worker do this?
        clock_at:
          type: string
          format: date-time
          description: What time did it happen? as ISO8601 Zulu
          example: "2020-07-21T17:00:00Z"
        latitude:
          type: number
          nullable: true
          format: double
          description: Latitude
        longitude:
          type: number
          nullable: true
          format: double
          description: Longitude
    ClockResponse:
      allOf:
        - $ref: '#/components/schemas/Clock'
        - type: object
          properties:
            shift:
              allOf:
                - $ref: '#/components/schemas/Shift'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: "UUID of Shift"
    WorkerNextOfKin:
      required:
      - name
      - relationship
      type: object
      properties:
        name:
          type: string
          description: Name of next of kin
        relationship:
          type: string
          description: Relation of next of kin to Worker
        contact_telephone:
          type: string
          format: phone
          description: Phone Number of next of kin
    Worker:
      required:
      - uuid
      - forename
      - surname
      - contact_telephone
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: UUID of the Worker
        forename:
          type: string
          description: First name of the Worker
        surname:
          type: string
          description: First name of the Worker
        contact_telephone:
          type: string
          format: phone
          description: Phone Number of the worker
        address:
          $ref: '#/components/schemas/Location'
        next_of_kin:
          nullable: true
          $ref: '#/components/schemas/WorkerNextOfKin'
    RemoveWorker:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum: [cancelled, declined]
          description: >
            Which Type of Worker Removal is this?:
              * `declined` - Staff removed worker
              * `cancelled` - Worker cancelled
    RemoveWorkerResponse:
      allOf:
        - $ref: '#/components/schemas/RemoveWorker'
        - type: object
          properties:
            shift:
              allOf:
                - $ref: '#/components/schemas/Shift'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: "UUID of Shift"
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
