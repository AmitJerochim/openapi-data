{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://app.ecochain.com/api/v1"
  } ],
  "info" : {
    "description" : "This is a simple Product API. It will return published products with descriptive information, and their impacts per midpoint, global and relative score, as well as end-of-life usage and waste scenario information",
    "version" : "1.1.1",
    "title" : "Simple Product API",
    "contact" : {
      "email" : "support@ecochain.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/authenticate" : {
      "post" : {
        "security" : [ {
          "OAuth2" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "primary authentication",
        "operationId" : "authenticate",
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResult"
                }
              }
            }
          },
          "401" : {
            "description" : "not authenticated"
          }
        }
      }
    },
    "/authenticate/clientip/{clientIp}" : {
      "post" : {
        "security" : [ {
          "OAuth2" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "primary authentication",
        "operationId" : "authenticateClientIP",
        "parameters" : [ {
          "name" : "clientIp",
          "in" : "path",
          "description" : "IP address of the client being authenticated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResult"
                }
              }
            }
          },
          "401" : {
            "description" : "not authenticated"
          }
        }
      }
    },
    "/authenticate/clientip/{clientIp}/user/{userId}" : {
      "post" : {
        "security" : [ {
          "OAuth2" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "primary authentication",
        "operationId" : "authenticateClientIPAndUser",
        "parameters" : [ {
          "name" : "clientIp",
          "in" : "path",
          "description" : "IP address of the client being authenticated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "user id of the person authenticating themselves for SSO",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResult"
                }
              }
            }
          },
          "401" : {
            "description" : "not authenticated"
          }
        }
      }
    },
    "/refresh" : {
      "post" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "refresh the access token",
        "operationId" : "refresh",
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResult"
                }
              }
            }
          },
          "401" : {
            "description" : "not authenticated"
          }
        }
      }
    },
    "/products/query/{query}/offset/{offset}/limit/{limit}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "searches products using query, limit and offset",
        "operationId" : "searchProducts",
        "description" : "By passing in the appropriate options, you can search for available products in the system",
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "description" : "pass an optional search string for looking up products",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "path",
          "description" : "number of records to skip for pagination",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "maximum number of records to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "format" : "int32"
          }
        }, {
          "name" : "lastActivityAfter",
          "in" : "query",
          "description" : "ISO 8601 date (e. g. 2004-02-12T15:19:21+00:00). When specified, only those products that have been modified after this timestamp are returned",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products/query/{query}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "searches products by query, using default limit and offset",
        "operationId" : "searchProductsWithDefaultPagination",
        "description" : "Search products by query, using default limit and offset",
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "description" : "pass an optional search string for looking up products",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastActivityAfter",
          "in" : "query",
          "description" : "ISO 8601 date (e. g. 2004-02-12T15:19:21+00:00). When specified, only those products that have been modified after this timestamp are returned",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "returns all products using default limit and offset",
        "operationId" : "productListWithDefaultPagination",
        "parameters" : [ {
          "name" : "lastActivityAfter",
          "in" : "query",
          "description" : "ISO 8601 date (e. g. 2004-02-12T15:19:21+00:00). When specified, only those products that have been modified after this timestamp are returned",
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Return all products using default limit and offset",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products/{productId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a product by id",
        "operationId" : "getProduct",
        "description" : "By passing in the product id, you get the full details",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "product for the id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/impacts/products/{productId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets impacts for a product",
        "operationId" : "getProductImpacts",
        "description" : "Get all environmental impacts for a product",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "impacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/companies/me" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets the company for the current logged in account",
        "operationId" : "getCompany",
        "description" : "Get company details for current company",
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/companies/{companyId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a company by id",
        "operationId" : "getCompanyById",
        "description" : "Get company details",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "the company id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/companies/{companyId}/products" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a company products",
        "operationId" : "getProductsForCompany",
        "description" : "Get all products for a company",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "the company id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/companies/{companyId}/products/offset/{offset}/limit/{limit}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a company products",
        "operationId" : "getProductsForCompanyWithCustomPagination",
        "description" : "Get all products for a company",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "the company id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "path",
          "description" : "number of records to skip for pagination",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "maximum number of records to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products/{productId}/scenarios" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets scenarios for a product",
        "operationId" : "getScenariosForProduct",
        "description" : "Get all scenarios linked to a product",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "impacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScenarioResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products/{productId}/scenarios/offset/{offset}/limit/{limit}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets scenarios for a product",
        "operationId" : "getScenariosForProductWithCustomPagination",
        "description" : "Get all scenarios linked to a product",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "path",
          "description" : "number of records to skip for pagination",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "maximum number of records to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "impacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScenarioResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/impacts/products/{productId}/scenarios/{scenarioId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets impacts for a scenario",
        "operationId" : "getScenarioImpacts",
        "description" : "Get all environmental impacts for a scenario",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scenarioId",
          "in" : "path",
          "description" : "the scenario id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "impacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/products/{productId}/scenarios/{scenarioId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a scenario",
        "operationId" : "getScenario",
        "description" : "Get  a scenario",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "the product id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scenarioId",
          "in" : "path",
          "description" : "the scenario id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "scenario",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScenarioResult"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/scenarios/{scenarioId}/products" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets all scenario products",
        "operationId" : "getProductsForScenario",
        "description" : "Get all products for a scenario",
        "parameters" : [ {
          "name" : "scenarioId",
          "in" : "path",
          "description" : "the scenario id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/scenarios/{scenarioId}/products/offset/{offset}/limit/{limit}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets all scenario products",
        "operationId" : "getProductsForScenarioWithCustomPagination",
        "description" : "Get all products for a scenario",
        "parameters" : [ {
          "name" : "scenarioId",
          "in" : "path",
          "description" : "the scenario id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "path",
          "description" : "number of records to skip for pagination",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "maximum number of records to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100,
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResults"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/impactdefinitions" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "returns all impact definitions",
        "operationId" : "getImpactDefinitions",
        "description" : "returns all impact definitions",
        "responses" : {
          "200" : {
            "description" : "impact definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactDefinitionsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/impactdefinitions/{impactId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets an impact definition by id",
        "operationId" : "getImpactDefinition",
        "description" : "By passing in the impact id, you get the full details",
        "parameters" : [ {
          "name" : "impactId",
          "in" : "path",
          "description" : "the impact definintion id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "impact definition for the id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactDefinitionResult"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/me" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets the current user, if any",
        "operationId" : "getUser",
        "description" : "Gets the logged in user, if user-client authentication was used",
        "responses" : {
          "200" : {
            "description" : "logged in user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "404" : {
            "description" : "no logged in user"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "security" : [ {
          "Token" : [ ]
        } ],
        "tags" : [ "developers" ],
        "summary" : "gets a user by id",
        "operationId" : "getUserById",
        "description" : "By passing in the user id, you get the full details",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "the user id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "user for the id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "OAuth2" : {
        "type" : "oauth2",
        "description" : "authenticates with the OAuth2 client-credentials flow using a client id and secret. An access token is returned in the Token header, which should be passed back in a Bearer Authorization header in following requests. Pass credentials as query parameters OR as base64 encoded Basic Authorization header",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://app.ecochain.com/api/v1/authenticate",
            "scopes" : { }
          }
        }
      },
      "Token" : {
        "type" : "http",
        "description" : "authenticates with an access token, generated by the OAuth2 client-credentials flow.  Pass token as Bearer Authorization",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "TokenResult" : {
        "type" : "object",
        "description" : "access token",
        "properties" : {
          "access_token" : {
            "description" : "used to access the API",
            "type" : "string",
            "example" : "ZGKFDKJHSKUHELKJHS..."
          },
          "expires_in" : {
            "description" : "number of seconds until the access token expires",
            "type" : "number",
            "example" : 3600
          },
          "refresh_token" : {
            "description" : "used to refresh the access token",
            "type" : "string",
            "example" : "ZGKFDKJHSKUHELKJHS..."
          },
          "token_type" : {
            "description" : "how the access and refresh tokens should be passed to the API",
            "type" : "string",
            "example" : "ZGKFDKJHSKUHELKJHS..."
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "rel" : {
            "description" : "link relationship type",
            "type" : "string",
            "example" : "company"
          },
          "href" : {
            "description" : "uri of resource",
            "type" : "string",
            "example" : "https://app.ecochain.com/api/v1/company/d290f1ee-6c54-4b01-90e6-d701748f1234"
          }
        }
      },
      "SearchResults" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "description" : "products matching query",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          },
          "total" : {
            "description" : "total number of results",
            "type" : "integer",
            "example" : 500
          }
        }
      },
      "ImpactResults" : {
        "type" : "object",
        "properties" : {
          "impacts" : {
            "description" : "array of impacts",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Impact"
            }
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "CompanyResult" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "$ref" : "#/components/schemas/Company"
          }
        }
      },
      "ProductResults" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "description" : "products list",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          },
          "total" : {
            "description" : "total number of results",
            "type" : "integer",
            "example" : 500
          }
        }
      },
      "ScenarioResults" : {
        "type" : "object",
        "properties" : {
          "scenarios" : {
            "description" : "scenarios list",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Scenario"
            }
          },
          "total" : {
            "description" : "total number of results",
            "type" : "integer",
            "example" : 500
          }
        }
      },
      "ScenarioResult" : {
        "type" : "object",
        "properties" : {
          "scenario" : {
            "$ref" : "#/components/schemas/Scenario"
          }
        }
      },
      "ImpactDefinitionsResult" : {
        "type" : "object",
        "properties" : {
          "impactDefinitions" : {
            "description" : "impact definition list",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImpactDefinition"
            }
          }
        }
      },
      "ImpactDefinitionResult" : {
        "type" : "object",
        "properties" : {
          "impactDefinition" : {
            "$ref" : "#/components/schemas/ImpactDefinition"
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "identifier",
            "type" : "string",
            "example" : "ce505026-3aff-481b-acb9-546656efd8f2"
          },
          "name" : {
            "description" : "published name of the product",
            "type" : "string",
            "example" : "Cement"
          },
          "externalName" : {
            "description" : "product external name",
            "type" : "string",
            "example" : "Cement-2020-1234567.89"
          },
          "eance" : {
            "description" : "EANCE",
            "type" : "string",
            "example" : "XXYYZZ1234"
          },
          "eanhe" : {
            "description" : "EANHE",
            "type" : "string",
            "example" : "XXYYZZ1234"
          },
          "description" : {
            "description" : "description of the product",
            "type" : "string",
            "example" : "Fine organic based quick drying cement"
          },
          "year" : {
            "description" : "manufacturing year of the product",
            "type" : "integer",
            "format" : "int32",
            "example" : 2016
          },
          "unit" : {
            "description" : "production unit",
            "type" : "string",
            "example" : "box"
          },
          "unitCount" : {
            "description" : "amount of products in a unit",
            "type" : "integer",
            "example" : 1
          },
          "weight" : {
            "description" : "product weight in kg",
            "type" : "number",
            "example" : 1.5
          },
          "gtinNumber" : {
            "description" : "globally unique product number",
            "type" : "string",
            "example" : "12345678901234"
          },
          "volume" : {
            "description" : "volume in cubic meters",
            "type" : "number",
            "example" : 2.6
          },
          "published" : {
            "description" : "if this product is published for public use",
            "type" : "boolean",
            "example" : true
          },
          "verified" : {
            "description" : "if the product data has been verified",
            "type" : "boolean",
            "example" : true
          },
          "tags" : {
            "description" : "tags for the product",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "impactScore" : {
            "description" : "MKI per Euro score",
            "type" : "number",
            "example" : 0.5
          },
          "impactLabel" : {
            "description" : "impact label between A and G denoting the impact range score",
            "type" : "string",
            "example" : "A"
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "Company" : {
        "type" : "object",
        "description" : "manufacturing company details",
        "properties" : {
          "id" : {
            "description" : "identifier",
            "type" : "string",
            "example" : "ce505026-3aff-481b-acb9-546656efd8f2"
          },
          "name" : {
            "type" : "string",
            "example" : "ACME Corporation"
          },
          "contactInfo" : {
            "$ref" : "#/components/schemas/ContactInfo"
          },
          "postalAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "residentialAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "Address" : {
        "type" : "object",
        "description" : "physical location details",
        "properties" : {
          "streetName" : {
            "type" : "string",
            "example" : "some street"
          },
          "streetNumber" : {
            "type" : "string",
            "example" : "11"
          },
          "city" : {
            "type" : "string",
            "example" : "Amsterdam"
          },
          "zipCode" : {
            "type" : "string",
            "example" : "1111AA"
          },
          "country" : {
            "type" : "string",
            "example" : "Netherlands"
          }
        }
      },
      "ContactInfo" : {
        "type" : "object",
        "description" : "contact information",
        "properties" : {
          "phone" : {
            "type" : "string",
            "example" : "1234567890"
          }
        }
      },
      "Impact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "identifier of the impact, corresponds to impactdefinition id",
            "type" : "string",
            "example" : "ce505026-3aff-481b-acb9-546656efd8f2"
          },
          "amount" : {
            "description" : "amount of impact",
            "type" : "number",
            "example" : 123.45
          }
        }
      },
      "ImpactDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "identifier",
            "type" : "string",
            "example" : "ce505026-3aff-481b-acb9-546656efd8f2"
          },
          "name" : {
            "description" : "name of impact definition",
            "type" : "string",
            "example" : "Environmental Costs Indicator"
          },
          "unit" : {
            "description" : "unit of impact definition",
            "type" : "string",
            "example" : "euro"
          }
        }
      },
      "Scenario" : {
        "type" : "object",
        "description" : "Use or End-Of-Life scenario",
        "properties" : {
          "name" : {
            "description" : "Scenario name",
            "type" : "string",
            "example" : "China"
          },
          "description" : {
            "description" : "Scenario description",
            "type" : "string",
            "example" : "Usage in China with grey electricity"
          },
          "type" : {
            "description" : "Type of scenario. Can be 'use' or 'eol'",
            "type" : "string",
            "example" : "use"
          },
          "module" : {
            "description" : "LCA module that this scenario models",
            "type" : "string",
            "example" : "A1"
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "Tag" : {
        "type" : "string"
      },
      "User" : {
        "type" : "object",
        "description" : "user details",
        "properties" : {
          "id" : {
            "description" : "identifier",
            "type" : "string",
            "example" : "ce505026-3aff-481b-acb9-546656efd8f2"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Doe"
          },
          "email" : {
            "type" : "string",
            "example" : "jd@email.com"
          },
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "links" : {
            "description" : "links to related resources",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Access token is missing or invalid"
      }
    }
  }
}