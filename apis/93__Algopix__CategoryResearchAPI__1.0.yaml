openapi: 3.0.0
servers:                                                 
  - description: 'Algopix API'
    url: https://api.algopix.com/v3
  - description: 'Algopix Testing API'
    url: https://staging.algopix.com/v3
  - description: 'SwaggerHub API Auto Mocking'
    url: https://virtserver.swaggerhub.com/Algopix/search/1.2.0
info:
  contact:
    email: 'support@algopix.com'
    name: 'Algopix Support'
  description: 'This is a sample Algopix server API currently supporting the Category API (beta). The category API allows you to send an category ID from a taxanomy and get up to 9600 products within it'
  version: "1.0"
  title: Category Research API
  termsOfService: 'https://algopix.com/policies'
paths:
  /category/analysisAsync:
    get:
      tags:
        - Request for a category
      summary: 'Send category ID to search for.'
      operationId: search
      security:
        - apiKey: []
          appId: []   # <-- no leading dash (-)
      responses:
        '200':
          description: 'Successful operation. The request ID that has recieved represents the request that has been made and will allow you to track the results that will be recieved while calling the getReadyResults'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGet'
        '401': 
          description: 'API key (X-API-KEY) or App ID (X-APP-ID) is missing or invalid'
        '409': 
          description: 'If the exact request is being processed, the following message will be displayed: The request you have entered is already being processed. (request Id: X). For fetching it results, you should call getReadyResults'
        '429':
          description: 'Request throttled.'
        '500':
          description: 'Oops, something went wrong.'
      parameters:
        - name: browseNodeId
          in: query
          description: 'A valid Amazon node ID that represents an Algopix category. Full list of Amazon IDs can be found here: (https://algopix.com/pages/amazon_nodes_US.txt), This version supports only US locale'
          required: true
          schema:
            type: string
        - name: maxItems
          in: query
          description: 'Positive number between 1-9600'
          schema:
            type: number
        - name: query
          in: query
          description: "Keywords search within a cateogry"
          required: false
          schema:
            type: string
  /category/analysisAsync/getReadyResults:
    get:
      tags:
        - Get ready results
      summary: 'Get all the ready results.'
      operationId: Get
      security:
        - apiKey: []
          appId: []   # <-- no leading dash (-)
      responses:
        '200':
          description: 'Successful operation. The data can contain products in each call. Each product (result) is assigned with metadata and request id- representing the call that has been made in order to retrieve it whie performing GET category/analysisAsync/'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseRecieve'
        '401': 
          description: 'API key (X-API-KEY) or App ID (X-APP-ID) is missing or invalid'
        '429':
          description: 'Request throttled.'
        '500':
          description: 'Oops, something went wrong.'
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY
    appId:
      type: apiKey
      in: header
      name: X-APP-ID
  responses:
    UnauthorizedError:
      description: 'API key or App ID is missing or invalid.'
      headers:
        WWW_Authenticate:
          schema:
            type: string
  schemas:
    ApiResponseGet:
      type: object
      properties:
        timestamp:
          type: integer
          description: 'The number of seconds passed since epoch, representing the time this response was produced.'
        status:
          type: string
          enum:
            - SUCCESS
            - ERROR
            - WARNING
        statusMessage:
          type: string
        statusCode:
          type: integer
          description: 'Application level status code.'
        requestId: 
          type: string
          description: "Requset ID that represents the current API call"
    ApiResponseRecieve:
      type: object
      properties:
        timestamp:
          type: integer
          description: 'The number of seconds passed since epoch, representing the time this response was produced.'
        status:
          type: string
          enum:
            - SUCCESS
            - ERROR
            - WARNING
        statusMessage:
          type: string
        statusCode:
          type: integer
          description: 'Application level status code.'
        requestId: 
          type: string
          description: "Requset ID that represents the current API call"
        result:
          type: array
          description: 
            "Contains up to 10 ready results, differentatie by their request ID"
          items: 
            $ref: '#/components/schemas/Result'
        asyncApiStatus:
          type: object
          $ref: '#/components/schemas/asyncApiStatus'
        
    Result:
      type: object
      description: "Each ready result that is ready to be fetched. contains the metadata of the result and product information"
      properties:
        timestamp:
          type: integer
          description: 'The number of seconds passed since epoch, representing the time this response was produced.'
        status:
          type: string
          enum:
            - SUCCESS
            - ERROR
            - WARNING
        statusMessage:
          type: string
        statusCode:
          type: integer
          description: 'Application level status code.'
        requestId: 
          type: string
          description: "Requset ID that represents the parameters that have been sent (the request ID from 'Request for a category') and the result that has recieved"
        result:
          type: object
          $ref: '#/components/schemas/Product'
      
    Product:
      type: object
      description: "Contains the information regarding product- aid,title, market price and image URL"
      properties:
        aid:
          type: string
          description: 'Unique Algopix identifier'
        title:
          type: string
          description: 'Product title'
        marketPrice:
          type: object
          $ref: '#/components/schemas/Price'
        imageUrl:
          type: string
    Price:
      type: object
      properties:
        currencyCode:
          type: string
          description: 'ISO 4217 currency codes, see [ISO 4217](https://www.ibm.com/support/knowledgecenter/en/SSZLC2_7.0.0/com.ibm.commerce.payments.developer.doc/refs/rpylerl2mst97.htm)'
        amount:
          type: number
      required:
        - currencyCode
        - amount

    asyncApiStatus:
        type: object
        description: contains all the requests that have been made with metadata regarding each
        $ref: '#/components/schemas/JobsStatus'
    JobsStatus:
      type: object
      properties: 
        jobsStatus:
          type: object
          $ref: '#/components/schemas/RequestId'
          description: 'the request that has been sent before and it metadata. By default, requests will be deleted (and their statuses) after pulling the entire category data or after 14 days since it was first performed. What ever comes first'
          
    RequestId:
      type: object
      properties: 
        requestId: 
          type: object
          $ref: '#/components/schemas/SingleRequestStatus'
    SingleRequestStatus: 
      type: object
      properties:
        ProgressStatus:
          type: string
          enum: ["DONE","IN PROGRESS"]
        jobResultsReadyForFetch:
          type: boolean
      description: "Allows you to see single request status. If the ProgressStatus is DONE and JobsResultsReadyForFetch is false- the entire category has been pulled. As long as the ProgressStatus is IN PROGRESS, you should expect results to keep coming for that request ID"
