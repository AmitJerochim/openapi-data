openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/galaxyAbstractor/DiscordTag/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Discord tag bot thingy
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
  - name: link
paths:
  /api/user:
    post:
      tags:
        - user
      summary: adds an user
      operationId: addUser
      description: Adds an item to the system
      responses:
        '201':
          description: user created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing user already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User to add
    put:
      tags:
        - user
      summary: updates an user
      operationId: updateUser
      description: Update user tag
      responses:
        '200':
          description: user updated
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: No such user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User to update
  /api/user/{discord_id}:
    delete:
      tags:
        - user
      summary: Delete the user
      parameters:
        - in: path
          name: discord_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
  /api/user/{discord_id}/links:
    get:
      tags:
        - link
      summary: Get the links of a user
      parameters:
        - in: path
          name: discord_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: List of the users links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfLinks'
    post:
      tags:
        - link
      summary: Create a new link
      parameters:
        - in: path
          name: discord_id
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Link created
        '401':
          description: User has too many links
        '404':
          description: User not found
        '409':
          description: Link already taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
  /api/user/{discord_id}/links/{link}:
    delete:
      tags:
        - link
      summary: Delete the link of a user
      parameters:
        - in: path
          name: discord_id
          schema:
            type: string
          required: true
        - in: path
          name: link
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Link deleted
        '404':
          description: User or link not found

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - discord_id
        - tag
      properties:
        discord_id:
          type: string
        tag:
          type: string
    Link:
      type: object
      properties:
        link:
          type: string
    ArrayOfLinks:
      type: array
      items:
        $ref: '#/components/schemas/Link'
