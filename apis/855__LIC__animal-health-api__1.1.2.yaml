penapi: "3.0.0"
info:
  version: "1.1.2"
  title: Animal Bootstrap Feed API
  description: |-
    This API provides a feed of animal bootstrap resources.
    A bootstrap feed item does not map to an animal, rather they describe events that ocurred (where a specific animal is involved).

    Important Note: By default, OpenAPI 3 considers fields to be optional. Unless a field in this spec is marked explicitly as required, it should be considered to be optional.

    In order to access this API you'll need to authenticate with LIC's identity service with credentials supplied to you by LIC (no self service signup exists for this right now). The service uses OAuth, you should use the `client_credentials` grant type and use the credentials we give you to obtain a token from the identity service. Once you have that token you can use it to make requests against the API.
    When you make your auth request you should supply the scope `urn:id:scope:subscriptions`. You will only have access to data associated with Agrigate subscribers. An example requiest against our acceptance environment might look like this:

    ```
    POST https://identity.accp.mindainfo.io/oauth/token
    Content-Type: application/x-www-form-urlencoded
    Authorization: Basic {{client_id}} {{secret}}
    grant_type=client_credentialsscope=urn:id:scope:subscriptions
  contact:
    name: Alex Corkin
    email: alex.corkin@lic.co.nz
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/LIC/animal-health-api/1.1.2
  - url: https://api1.accp.mindainfo.io
    description: Acceptance
paths:
  /event-publisher/animal-bootstrap:
    get:
      summary: The Animal Bootstrap Root
      operationId: getRootLinks
      tags:
        - Animal Health
      responses:
        '200':
          description: A paged list of animal bootstrap items
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/animalBootstrap"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      description: |-
        Animal Bootstrap acts as a jumping off point for the access of animal health condition data. The endpoint provides a list of HATEOS links as well as a list of Animal Bootstrap items. These items represent an event, and will contain an amount of static information about the animal, as well as health records or events.

        Unfortunately, the number at the end of the URIs that are returned in the items array don't map to any kind of animal identifier. The number at the end of the URI identifies the feed item only. If you want to identify the animal you'll need to look at the `animalUrn` value within the returned feed item. A number of other URNs also exists in the feed item. There is an argument to be made about replacing other static data with URNs but such discussions are out of scope of the current engagement.                                                                                                                                                                                        
  /event-publisher/animal-bootstrap/{id}:
    get:
      summary: Get animal health
      operationId: getItem
      tags:
        - Animal Health
      parameters:
        - name: id
          in: path
          description: The identifier of the animal you are interested in
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A single animal bootstrap resource
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/animalEvent'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      description: |-
        The animal bootstrap feed item contains static data about the feed item as well as a number of URNs that identify the animal, agOp and group. Additionally, the feed item contains a large health conditions object.

        The key change here is around the introduction of a planned and administyered concept. Before we just had a doses array that contained data about doses given, but concepts were missing. As part of this engagement we're adding those concepts and this neccessitates a rethink of how the object is structured.

        Note the removal of the doses array, and the introduction of the treatment plan and treatments objects.

        The treatment plan object describes the overral approach the farmer has taken with the animal, to address the health condition.

        I.e. Animal 5 has mastitis. The vet has prescribed three tubes of product X, once a day for three days. I've administered the first tube today as prescribed but I don't have any more tubes, and won't have until next week. Once I get the tubes in I'll follow the remainder of the plan.

        In the above, we've moved to an intent based model. The farmer intends to follow the plan, and the plan has treatments that are fulfilled and unfulfilled. In more specific language, prescribed and administered. We also now explicitly call out that there is a plan separate from the execution of that plan in that we have two objects, a treatment plan and a treatment, rather than having everything sit inside the doses array.                                                                                      
components:
  schemas:
    animalEvent:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/hateoasLinkItem'
        eid:
          type: string
        managementNumber:
          type: string
        animalUrn:
          type: string
        groupUrn:
          type: string
        agOpUrn:
          type: string
        dateOfBirth:
          type: string
        sex:
          type: string
          enum:
            - Male
            - Female
        birthId:
          $ref: '#/components/schemas/birthId'
        sireId:
          type: integer
        damId:
          type: integer
        updated:
          type: string
        breeds:
          type: array
          items:
            $ref: '#/components/schemas/breed'
        healthConditions:
          type: array
          items:
            $ref: '#/components/schemas/healthCondition'
        _type:
          type: string
        _kind:
          type: string
      description: This resource describes the animal bootstrap resource. It contains information relevant to the animal and it's health conditions. The resource also contains a number of URNs that describe other resources of interest.
    hateoasLinkItem:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
      description: A hypermedia link.
    linkItem:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
      description: An animal bootstrap event item
    birthId:
      type: object
      properties:
        prefix:
          type: string
        year:
          type: integer
        sequence:
          type: integer
      description: The birthID of an animal
    breed:
      type: object
      properties:
        abbreviation:
          type: string
        portion16th:
          type: integer
      description: The breed data for an animal
    healthCondition:
      type: object
      properties:
        dateOfOnFarmEvent:
          type: string
        dateOfEventCreation:
          type: string
        healthRecordId:
          type: integer
        conditionCategoryCode:
          type: string
        dryCow:
          type: boolean
        veterinarian:
          type: string
        lastTreatmentDate:
          type: string
        treatmentCompleted:
          type: string
        withholdingForMilk:
          $ref: '#/components/schemas/withholdingForMilk'
        withholdingForMeat:
          $ref: '#/components/schemas/withholdingForMeat'
        treatmentPlan:
          $ref: '#/components/schemas/treatmentPlan'
        returnToVat:
          $ref: '#/components/schemas/returnToVat'
        affectedQuarters:
          $ref: '#/components/schemas/affectedQuarters'
        healthProduct:
          $ref: '#/components/schemas/healthProduct'
      description: The top level health condition item. Contains a number of smaller objects that in turn, hold granular information about things like milk, meat and medicine
    treatmentPlan:
      type: object
      properties:
        numberOfDosesPlanned:
          type: integer
        dosageValue:
          type: integer
        dosageUnits:
          type: string
          enum:
            - cap
            - gram
            - mg
            - ml
            - oblt
            - pess
            - tab
            - tube
            - unit
        treatments:
          type: array
          items:
            $ref: '#/components/schemas/treatment'
      description: The holding object that describes the intent of a vet or farmer to treat an animal over time. Contains an array of individual treatments as well as the status of those treatments.
    treatment:
      type: object
      properties:
        administeredDate:
          type: string
        plannedDate:
          type: string
      description: An individual treatment. Replaces some data from the doses array
    withholdingForMilk:
      type: object
      properties:
        value: 
          type: integer
        unit:
          type: string
    withholdingForMeat:
      type: object
      properties:
        value: 
          type: integer
        unit:
          type: string
    returnToVat:
      type: object
      properties:
        date:
          type: string
        meridiem:
          type: string
          enum:
            - AM
            - PM
    affectedQuarters:
      type: object
      properties:
        frontLeft:
          type: boolean
        frontRight:
          type: boolean
        rearLeft:
          type: boolean
        rearRight:
          type: boolean
    healthProduct:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        healthProductCategory:
          $ref: '#/components/schemas/healthProductCategory'
    healthProductCategory:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        created:
          type: string
        updated:
          type: string
    animalBootstrap:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/hateoasLinkItem'
        items:
          type: array
          items:
            $ref: '#/components/schemas/linkItem'
        _type:
          type: string
      description: The complete response from the animal bootstrap root. Contains a list of HATEOAS links as well as a list of animal bootstrap items.
    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string