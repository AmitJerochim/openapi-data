openapi: 3.0.1
info:
  title: Money Transfer
  description: demo 
  version: '0.1'
servers:
  - url: 'http://68.66.240.170:9006'
paths:
  /get_users:
    get:
      description: Get all users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "badge_num": "test_badge_num", 
                        "f_print": "test_f_print", 
                        "face_id": "test_face_id", 
                        "password": "sha256$WBynTeta$aa3feff3b871c11b98d54ad073c70c7294039109670b3466f2d00fa21b3c1ddc", 
                        "user_id": 730562153, 
                        "user_level": "admin", 
                        "username": "usama1"
                      }, 
                      {
                        "badge_num": "test_badge_num", 
                        "f_print": "test_f_print", 
                        "face_id": "test_face_id", 
                        "password": "sha256$O70k6Fpg$511a5fa8876dac4b30da14442824cff1b770577b10cef60ce220e98e242f31a0", 
                        "user_id": 1624211562, 
                        "user_level": "admin", 
                        "username": "usama"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_verify:
    get:
      description: Get all verifications history
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "num_try": "2", 
                        "sms": "1234", 
                        "ver_id": "1", 
                        "whatsapp": "qrcode"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_user:
    get:
      description: Get one user
      parameters:
        - name: id
          in: query
          schema:
            type: string
          example: '730562153'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      password:
                        type: string
                      f_print:
                        type: string
                      user_id:
                        type: integer
                      badge_num:
                        type: string
                      face_id:
                        type: string
                      user_level:
                        type: string
                      username:
                        type: string
              examples:
                '0':
                  value: |
                    {
                      "user": {
                        "badge_num": "test_badge_num", 
                        "f_print": "test_f_print", 
                        "face_id": "test_face_id", 
                        "password": "sha256$WBynTeta$aa3feff3b871c11b98d54ad073c70c7294039109670b3466f2d00fa21b3c1ddc", 
                        "user_id": 730562153, 
                        "user_level": "admin", 
                        "username": "usama1"
                      }
                    }
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_receivers:
    get:
      description: Get all receivers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "barcode": "test_barcode", 
                        "birthdate": "Mon, 01 Jan 1990 00:00:00 GMT", 
                        "email": "email@gmail.com", 
                        "f_print": "test_fprint", 
                        "face_id": "test_faceid", 
                        "mount": "$1,250,000.00", 
                        "phone": "9647712345678", 
                        "qrcode": "test_qrcode", 
                        "receiver_id": 11, 
                        "receiver_name": "Muhammed", 
                        "sender_name": "Haitham", 
                        "trans_date": "Fri, 09 Aug 2019 00:00:00 GMT", 
                        "unique_code": "test_unique"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_senders:
    get:
      description: Get all senders
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "barcode": "test_barcode", 
                        "birthdate": "Tue, 01 Jan 1991 00:00:00 GMT", 
                        "email": "mail@gmail.com", 
                        "f_print": "test_fprint", 
                        "face_id": "test_faceid", 
                        "id": 11, 
                        "mount": "$1,250,000.00", 
                        "phone": "9647812345678", 
                        "qrcode": "test_qrcode", 
                        "receiver_name": "Muahmmed", 
                        "sender_name": "Haitham", 
                        "trans_date": "Fri, 09 Aug 2019 00:00:00 GMT", 
                        "unique_code": "test_unique"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_actions:
    get:
      description: Get all actions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "ac_id": 1, 
                        "action_date": "Fri, 09 Aug 2019 00:00:00 GMT", 
                        "exchange": "True", 
                        "transfer": "False"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /create_user:
    post:
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                f_print:
                  type: string
                badge_num:
                  type: string
                user_level:
                  type: string
                face_id:
                  type: string
                username:
                  type: string
            examples:
              '0':
                value: >-
                  {"username":"Muhammed","password":"muhammed","user_level":"admin","f_print":"test_f_print","face_id":"test_face_id","badge_num":"test_badge_num"}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                '0':
                  value: |
                    {
                      "message": "New user created!"
                    }
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_biometrics:
    get:
      description: Get all biometric data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "action_date": "Fri, 09 Aug 2019 00:00:00 GMT", 
                        "f_print": "tesT_fprint", 
                        "face_id": "test_faceid", 
                        "id": 1, 
                        "photo": "test_photo"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
  /get_regions:
    get:
      description: Get all regions data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: |
                    [
                      {
                        "block": "17", 
                        "city": "Karada", 
                        "county": "baghdad", 
                        "district": "aa", 
                        "reg_id": 2, 
                        "region": "Baghdad"
                      }
                    ]
      servers:
        - url: 'http://68.66.240.170:9006'
    servers:
      - url: 'http://68.66.240.170:9006'
