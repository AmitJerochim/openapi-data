{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "The Coredataservice provides OMDS compatible ways to interact with cca environments.",
    "version" : "1.210.3-oas3",
    "title" : "CCA Core DataService API",
    "contact" : {
      "name" : "API Team",
      "url" : "http://www.ccaedv.at",
      "email" : "apiteam@ccaedv.at"
    }
  },
  "security" : [ {
    "oauth2sql" : [ ]
  }, {
    "apiCustomAuth" : [ ]
  } ],
  "paths" : {
    "/antraege" : {
      "post" : {
        "tags" : [ "Antrag", "Offert" ],
        "operationId" : "CreateApplicationFromOffer",
        "summary" : "Transforms an offer to an application.",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OfferToApplicationResultModel"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json+vnd.offerToApplication" : {
              "schema" : {
                "$ref" : "#/components/schemas/OfferToApplicationModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/dokumente" : {
      "get" : {
        "tags" : [ "Dokumente" ],
        "operationId" : "getDokumente",
        "summary" : "Gets a List of Dokumente",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DokumentResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Dokumente with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dokumente/{dokId}" : {
      "get" : {
        "tags" : [ "Dokumente" ],
        "operationId" : "getDokument",
        "summary" : "Gets a Dokument per Id",
        "parameters" : [ {
          "name" : "dokId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DokumentViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Dokument with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dokumente/{dokId}/unterschreiben/{perId}" : {
      "get" : {
        "tags" : [ "Dokumente" ],
        "operationId" : "getUnterschreibenStatus",
        "summary" : "gets the sign state of referred document",
        "parameters" : [ {
          "name" : "dokId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DokumentUnterschreibenStatusResult"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Dokument with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Dokumente" ],
        "operationId" : "signDokument",
        "summary" : "Provides a document for a endcustomer to sign",
        "parameters" : [ {
          "name" : "dokId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find Dokument with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dokumente/{dokId}/content" : {
      "get" : {
        "tags" : [ "Dokumente" ],
        "operationId" : "downloadDokument",
        "summary" : "Downloads a document per dokId",
        "parameters" : [ {
          "name" : "dokId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find Dokument with passed parameters.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/kfzRisiken" : {
      "get" : {
        "tags" : [ "KFZRisiken" ],
        "operationId" : "getKFZRisiken",
        "summary" : "Gets a List of KFZRisiken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KFZResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find KFZRisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/kfzRisiken/{kfzRisikoId}" : {
      "get" : {
        "tags" : [ "KFZRisiken" ],
        "operationId" : "getKFZRisiko",
        "summary" : "Gets a KFZRisiko per Id",
        "parameters" : [ {
          "name" : "kfzRisikoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KFZViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find KFZRisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "KFZRisiken" ],
        "operationId" : "editKFZRisiko",
        "summary" : "Edits a KFZRisiko per Id",
        "parameters" : [ {
          "name" : "kfzRisikoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find KFZRisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit KFZRisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KFZEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/sachRisiken" : {
      "get" : {
        "tags" : [ "Sachrisiken" ],
        "operationId" : "getSachrisiken",
        "summary" : "Liste von Sachrisiken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SachrisikoResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Sachrisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sachRisiken/{sachRisikoId}" : {
      "get" : {
        "tags" : [ "Sachrisiken" ],
        "operationId" : "getSachrisiko",
        "summary" : "Gets a Sachrisiko per Id",
        "parameters" : [ {
          "name" : "sachRisikoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SachrisikoViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Sachrisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Sachrisiken" ],
        "operationId" : "editSachrisiko",
        "summary" : "Edits a Sachrisiko per Id",
        "parameters" : [ {
          "name" : "sachRisikoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find Sachrisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit Sachrisiko with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SachrisikoEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen" : {
      "get" : {
        "tags" : [ "Person" ],
        "operationId" : "getPersons",
        "summary" : "Gets a List of Persons",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person" ],
        "operationId" : "createPerson",
        "summary" : "Creates a Person",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created person."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}" : {
      "get" : {
        "tags" : [ "Person" ],
        "operationId" : "getPerson",
        "summary" : "Gets an Person per Id",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Person" ],
        "operationId" : "editPerson",
        "summary" : "Edits an Person per Id",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/adressen" : {
      "get" : {
        "tags" : [ "Adresse", "Person" ],
        "operationId" : "getPersonAddressen",
        "summary" : "Gets addresses of a Person with Id {perId}.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdresseResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "Adresse" ],
        "operationId" : "createPersonAdresse",
        "summary" : "Creates an Adresse",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Adresse."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Adresse with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "501" : {
            "description" : "Could not create Adresse because of Configuration issues.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdresseCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/adressen/{adrId}" : {
      "get" : {
        "tags" : [ "Person", "Adresse" ],
        "operationId" : "getPersonAdresse",
        "summary" : "Gets Adresse {adrId} of Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "adrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdresseViewModel"
                }
              }
            }
          },
          "403" : {
            "description" : "User is not allowed to delete Adresse.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Person", "Adresse" ],
        "operationId" : "deletePersonAdresse",
        "summary" : "Delete Adresse {adrId} of Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "adrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "403" : {
            "description" : "User is not allowed to delete Adresse.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Person", "Adresse" ],
        "operationId" : "EditPersonAdresse",
        "summary" : "Edits an Adresse of a person",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "adrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Could not find Adresse with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit Adresse with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdresseEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/bankkonten/" : {
      "get" : {
        "tags" : [ "Person", "Bankkonto" ],
        "operationId" : "getBankkonten",
        "summary" : "Lists all active Bankkonten associated with a Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BankkontoResultPage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "Bankkonto" ],
        "operationId" : "addBankkonto",
        "summary" : "Adds a Bankkonto to the given person.",
        "description" : "Only accounts with a valid IBAN are accepted. If the BIC (Swift) code is present, and exactly one bank is identified by that code, the bank is associated with the account.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "*/*" : {
                "schema" : {
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created bankkonto."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity (IBAN not valid or No Bank for BIC).",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BankkontoCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/bankkonten/{bankkontoId}" : {
      "get" : {
        "tags" : [ "Person", "Bankkonto" ],
        "operationId" : "getBankkonto",
        "summary" : "Retrieves a bankkonto",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bankkontoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BankkontoViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound - The person or bankkonto could not be found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Person", "Bankkonto" ],
        "operationId" : "patchBankkonto",
        "summary" : "Modifies a Bankkonto to the given person.",
        "description" : "Only accounts with a valid IBAN are accepted. The BIC (Swift) must exactly match one bank in the cca instance. The bank is associated with the account. **Attention** Changing a bank account usually means that workflows need to be taken into account (i.e. informing insurance companies). Those Workflows are **not** triggered by this operation.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bankkontoId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "422" : {
            "description" : "Unprocessable Entity (IBAN not valid or No Bank for BIC)",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BankkontoEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/dokumente" : {
      "get" : {
        "tags" : [ "Person", "Dokumente" ],
        "operationId" : "getDokumenteForPerson",
        "summary" : "Gets a List of Dokumente of Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DokumentResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Dokumente with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "Dokumente" ],
        "operationId" : "createDokumentToPerson",
        "summary" : "Creates a Dokument to Person {perId}.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "description" : "The Persons Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Dokument."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Dokument with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createDokumentToPerson"
        }
      }
    },
    "/personen/{perId}/kfzRisiken" : {
      "get" : {
        "tags" : [ "Person", "KFZRisiken" ],
        "operationId" : "getKFZRisikenForPerson",
        "summary" : "Gets a List of KFZRisiken of Person {perId}.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KFZResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find KFZRisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "KFZRisiken" ],
        "operationId" : "createKFZtoPerson",
        "summary" : "Creates a KFZ to Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created KFZ."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create KFZ with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/KFZCreateModel"
        }
      }
    },
    "/personen/{perId}/sachRisiken" : {
      "get" : {
        "tags" : [ "Person", "Sachrisiken" ],
        "operationId" : "getSachrisikenToPerson",
        "summary" : "Liste von Sachrisiken von Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SachrisikoResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Sachrisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "Sachrisiken" ],
        "operationId" : "createSachrisikoforPerson",
        "summary" : "Creates a NKP risiko for a Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created NKP."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create NKP with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SachrisikoCreateModel"
        }
      }
    },
    "/personen/{perId}/vertraege" : {
      "get" : {
        "tags" : [ "Person", "Vertrag" ],
        "operationId" : "getPersonVertraege",
        "summary" : "Gets Vertraege of a Person with Id {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VertragResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person", "Vertrag" ],
        "operationId" : "createVertrag",
        "summary" : "Legt einen Vertrag zu einer Person an.",
        "description" : "Die Person wird als Versicherungsnehmer des Vertrags angelegt. \n",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Vertrag."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Vertrag with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "501" : {
            "description" : "Could not create Antrag because of Configuration issues.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VertragCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/antraege" : {
      "post" : {
        "tags" : [ "Person", "Vertrag", "Antrag" ],
        "operationId" : "createAntrag",
        "summary" : "Creates an Antrag with Sparte",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Vertrag."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Antrag with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "501" : {
            "description" : "Could not create Antrag because of Configuration issues.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AntragCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/offerte" : {
      "post" : {
        "tags" : [ "Person", "Vertrag", "Offert" ],
        "operationId" : "createOffert",
        "summary" : "Creates an Offert with Sparte",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Offert."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Offert with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "501" : {
            "description" : "Could not create Offert because of Configuration issues.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OffertCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/beziehungen" : {
      "get" : {
        "tags" : [ "Person" ],
        "operationId" : "getPersonConnections",
        "summary" : "Gets a List of Connections of Person {perId}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonBeziehungResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Person" ],
        "operationId" : "createPersonConnection",
        "summary" : "Creates a connection between {perId} and {perId2}",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "422" : {
            "description" : "Could not create connection between Persons with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonBeziehungCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/personen/{perId}/beziehungen/{bezId}" : {
      "delete" : {
        "tags" : [ "Person" ],
        "operationId" : "deletePersonConnection",
        "summary" : "Removes a relationship",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bezId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "403" : {
            "description" : "User is not allowed to delete Connection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Person with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege" : {
      "get" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "getVertraege",
        "summary" : "Gets a List of Vertraege",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VertragResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Vertrag with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}" : {
      "get" : {
        "tags" : [ "Vertrag", "Antrag", "Offert" ],
        "operationId" : "getVertrag",
        "summary" : "Get Vertrag By Id",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "description" : "The Vertrags id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VertragViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Vertrag with Id {verId} not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "editVertrag",
        "summary" : "Edits a Vertrag per Id",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "404" : {
            "description" : "Could not find Vertrag with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit Vertrag with passed parameters; Could not open Vertrag; Could not close Vertrag;",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VertragEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/vertraege/{verId}/personRisiken" : {
      "get" : {
        "tags" : [ "Vertrag", "Personrisiken" ],
        "operationId" : "getPersonRisikenForVertrag",
        "summary" : "Gets a List of PersonRisiken of Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonRisikoResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find contract.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vertrag", "Personrisiken" ],
        "operationId" : "linkPersonRiskToContract",
        "summary" : "Links an existing Person to a contract as a risk",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created KFZ."
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The Contract does not exist, or is not visible to the editor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "The KFZ risk could not be linked. (KFZ Risk might not exist)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExistingRiskObject"
        }
      }
    },
    "/vertraege/{verId}/personRisiken/{perId}" : {
      "delete" : {
        "tags" : [ "Vertrag", "Personrisiken" ],
        "operationId" : "unlinkPersonRiskFromContract",
        "summary" : "removes a VersichertePerson Relationship between a contract and a person.",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "404" : {
            "description" : "The Contract does not exist, or is not visible to the editor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "The risk could not be unlinked. (Risk might not exist)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/kfzRisiken" : {
      "get" : {
        "tags" : [ "Vertrag", "KFZRisiken" ],
        "operationId" : "getKFZRisikenToVertrag",
        "summary" : "Gets a List of KFZRisiken of Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KFZResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find KFZRisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vertrag", "KFZRisiken" ],
        "operationId" : "createKFZtoVertrag",
        "summary" : "Creates a KFZ to Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created KFZ."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create KFZ with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/KFZCreateModel"
              }
            },
            "application/json+vnd.existingRiskObject" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/ExistingRiskObject"
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/kfzRisiken/{kfzId}" : {
      "delete" : {
        "tags" : [ "Vertrag", "KFZRisiken" ],
        "operationId" : "unlinkKFZRiskFromContract",
        "summary" : "removes the relationship between a contract and a kfz.",
        "parameters" : [ {
          "name" : "kfzId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "404" : {
            "description" : "The Contract does not exist, or is not visible to the editor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "The risk could not be unlinked. (Risk might not exist)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/sachRisiken" : {
      "get" : {
        "tags" : [ "Vertrag", "Sachrisiken" ],
        "operationId" : "getSachrisikenToVertrag",
        "summary" : "Liste von Sachrisiken von Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SachrisikoResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Sachrisiken with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vertrag", "Sachrisiken" ],
        "operationId" : "createNKPtoVertrag",
        "summary" : "Creates a NKP to Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created NKP."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create NKP with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/SachrisikoCreateModel"
              }
            },
            "application/json+vnd.existingRiskObject" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/ExistingRiskObject"
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/sachRisiken/{nkpId}" : {
      "delete" : {
        "tags" : [ "Vertrag", "Sachrisiken" ],
        "operationId" : "unlinkNKPZRiskFromContract",
        "summary" : "removes the relationship between a contract and a Sachrisiko.",
        "parameters" : [ {
          "name" : "nkpId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "404" : {
            "description" : "The Contract does not exist, or is not visible to the editor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "The risk could not be unlinked. (Risk might not exist)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/close" : {
      "post" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "closeBook",
        "summary" : "Closed the Book of Vertrag {verId}.",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "422" : {
            "description" : "Could not close Vertrag.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/open" : {
      "post" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "openBook",
        "summary" : "Open the Book of Vertrag {verId}.",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "422" : {
            "description" : "Could not open Vertrag.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/buch" : {
      "patch" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "editVertragBuch",
        "summary" : "Set a Vertrag either to open or closed.",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "404" : {
            "description" : "Could not find Vertrag with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "422" : {
            "description" : "Could not edit Vertrag with passed parameters; Could not open Vertrag; Could not close Vertrag;",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VertragBuchEditModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/vertraege/{verId}/xml" : {
      "put" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "setVertragXml",
        "summary" : "Sets the XML of Vertrag {verId}.",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "422" : {
            "description" : "Could not open Vertrag.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "xml" : {
                    "type" : "string",
                    "format" : "xml"
                  }
                },
                "required" : [ "xml" ]
              }
            }
          }
        }
      }
    },
    "/vertraege/{verId}/dokumente" : {
      "get" : {
        "tags" : [ "Vertrag", "Dokumente" ],
        "operationId" : "getDokumenteForVertrag",
        "summary" : "Gets a List of Dokumente of Vertrag {verId}.",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DokumentResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find Dokumente with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vertrag", "Dokumente" ],
        "operationId" : "createDokumentToVertrag",
        "summary" : "Creates a Dokument to Vertrag {verId}.",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "description" : "The contracts id.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created Dokument."
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create Dokument with passed parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createDokumentToPerson"
        }
      }
    },
    "/vertraege/{verId}/vertragsparten" : {
      "get" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "getVSP",
        "summary" : "Gets a List of VSPs of Vertrag {verId}",
        "parameters" : [ {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        }, {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VertragSparteResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find VSPs with passed parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "createVSPToVertrag",
        "summary" : "Creates a VSP to Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "The id of the created VSP"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Could not create VSP with passed parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VertragSparteCreateModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/vertraege/{verId}/vertragsparten/{vspId}/leistungszeilen" : {
      "get" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "getLz",
        "summary" : "Get Leistungszeilen of Vertragssparte {spId} for Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "vspId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/pagingPerPageParam"
        }, {
          "$ref" : "#/components/parameters/pagingPageNumberParam"
        }, {
          "$ref" : "#/components/parameters/orderByParam"
        }, {
          "$ref" : "#/components/parameters/filterByPropertiesParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LeistungszeileResultPage"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/vertraege/{verId}/leistungszeilen/{lzId}" : {
      "put" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "editLZ",
        "summary" : "Edit Leistungszeile {lzId} of Vertragssparte {spId} for Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lzId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "422" : {
            "description" : "Could not open Vertrag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LeistungszeileModel"
                }
              }
            }
          },
          "required" : true
        }
      }
    },
    "/vertraege/{verId}/zusatzdaten" : {
      "get" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "getVertragZusatzdaten",
        "summary" : "Retrieves Zusatzdaten for the selected Vertrag {verId}",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZusatzdatenModel"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Vertrag" ],
        "operationId" : "editZusatzdaten",
        "summary" : "Edits the additional datafields for Vertrag {verId}. The data is an update - setting values for additional datafields: \n  **sets** the data if it was not set before\n  **replaces** the data if it was already set\n  **removes** the current value if the value is `null`\nAll additional datafields that are not part of the patch request are ignored.\n",
        "parameters" : [ {
          "name" : "verId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "422" : {
            "description" : "Could not set Zusatzdaten",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ZusatzdatenModel"
                }
              }
            }
          },
          "required" : true
        }
      }
    },
    "/configuration/auswahllisten/{tabellenName}" : {
      "get" : {
        "tags" : [ "Konfiguration" ],
        "operationId" : "getAuswahllisten",
        "summary" : "Retrieves selection list items for the specified table",
        "parameters" : [ {
          "name" : "tabellenName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Beruf", "TitelAkademisch", "TitelBeruf", "TitleNachgestellt", "KfzMarke" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuswahllistenModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/configuration/omdsMappings/{schluesselArt}" : {
      "get" : {
        "parameters" : [ {
          "name" : "schluesselArt",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "DokumentType", "FamilienstandCd", "FzgArtCd", "GeschlechtCd", "KomArtCd", "LandesCd", "SonstPersArtCd", "VersSacheCd", "VerwendzweckCd", "VtgSparteCd", "VtgStatusCd", "VuVerbandNr", "WaehrungsCd", "ZahlRhythmCd", "ZahlWegCd" ]
          }
        } ],
        "tags" : [ "Konfiguration" ],
        "operationId" : "getOmdsMappings",
        "summary" : "Retrieves the mapped OMDS values for a given OMDS SchluesselArt",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OmdsMappingModel"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/configuration/orte" : {
      "get" : {
        "tags" : [ "Konfiguration" ],
        "operationId" : "getOrte",
        "summary" : "Produces the list of configured [Ort](#/definitions/Ort)",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrtElement"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/personBeziehungsarten" : {
      "get" : {
        "tags" : [ "Konfiguration" ],
        "operationId" : "getPersonBeziehungsarten",
        "summary" : "Produces the list of configured [PersonBeziehungsart](#/definitions/PersonBeziehungsart)",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonBeziehungsart"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/personBeziehungsarten" : {
      "get" : {
        "tags" : [ "Konfiguration" ],
        "operationId" : "getPersonBeziehungsartenOld",
        "summary" : "Gets a List of PersonBeziehungsarten",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonBeziehungsart"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/search" : {
      "post" : {
        "tags" : [ "Volltextsuche" ],
        "operationId" : "search",
        "summary" : "Performs a fulltext search",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SearchResponseModel"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchRequestModel"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/endkundenportal/logins/{perId}" : {
      "put" : {
        "tags" : [ "Endkundenportal" ],
        "operationId" : "SetEndkundenPortalLogin",
        "summary" : "Setzt die Endkundnenportal Login Daten zu einer person",
        "parameters" : [ {
          "name" : "perId",
          "in" : "path",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "required" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndkundenPortalLogin"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "NoContent"
          },
          "401" : {
            "description" : "Wenn die übergebenen parameter nicht korrekt sind."
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Wenn die Person nicht gefunden wurde"
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://ccaonline-test.ccaedv.at:443/CCAOnline-API-Demo/coredataservice/api/v1.210.3/"
  } ],
  "components" : {
    "parameters" : {
      "pagingPerPageParam" : {
        "name" : "perPage",
        "in" : "query",
        "description" : "Indicates how many results should be returned per resultset page.",
        "required" : false,
        "example" : "/somePagingList?perPage=50",
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1,
          "maximum" : 100,
          "default" : 15
        }
      },
      "pagingPageNumberParam" : {
        "name" : "page",
        "in" : "query",
        "description" : "Requests a page specified by its page number. If the page requests it out of scope, the returned data-set will be empty.",
        "required" : false,
        "example" : "/somePagingList?page=4",
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1,
          "default" : 1
        }
      },
      "orderByParam" : {
        "name" : "orderBy",
        "in" : "query",
        "description" : "A string, in the form of: <name of property> \"-\" asc / desc - multiple orderBy parameters can be specified, and will be resolved in order of left to right.",
        "required" : false,
        "example" : "/someOrderableList?orderBy=typeId-asc&orderBy=filename-desc",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "filterByPropertiesParam" : {
        "name" : "filter",
        "in" : "query",
        "description" : "A string to specify filters for the list",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "KFZCreateModel" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/KFZCreateModel"
            }
          }
        },
        "required" : true
      },
      "ExistingRiskObject" : {
        "content" : {
          "application/json+vnd.existingRiskObject" : {
            "schema" : {
              "$ref" : "#/components/schemas/ExistingRiskObject"
            }
          }
        },
        "required" : true
      },
      "createDokumentToPerson" : {
        "content" : {
          "multipart/form-data" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "content" : {
                  "description" : "The files Content. The Filename must be passed in the contents Content-Disposition Header.",
                  "type" : "string",
                  "format" : "binary"
                },
                "dokumentTypCode" : {
                  "description" : "See (https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/DokumentTypCode)\n",
                  "type" : "string"
                }
              },
              "required" : [ "content", "dokumentTypCode" ]
            }
          }
        }
      },
      "SachrisikoCreateModel" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SachrisikoCreateModel"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "apiCustomAuth" : {
        "type" : "oauth2",
        "description" : "CCAOnline custom grant flow",
        "flows" : {
          "password" : {
            "tokenUrl" : "https://ccaonline-test.ccaedv.at/CCAOnline-API-Demo/api/token",
            "scopes" : { }
          }
        }
      },
      "oauth2sql" : {
        "type" : "oauth2",
        "description" : "This token endpoint allows to use the standard `resourceowner password credentials` flow to retrieve accesstokens for CCA users, that use SQL Authentication type.\n",
        "flows" : {
          "password" : {
            "tokenUrl" : "https://ccaonline-test.ccaedv.at/CCAOnline-API-Demo/coredataservice/api/token",
            "scopes" : { }
          }
        }
      }
    },
    "schemas" : {
      "AdresseModel" : {
        "properties" : {
          "landesCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/LandesCode"
          },
          "plz" : {
            "type" : "string",
            "description" : "PLZ of the address",
            "x-cca-property-hint" : "ort.PLZ",
            "x-omds2-property" : "PLZ"
          },
          "ort" : {
            "type" : "string",
            "description" : "Ort of the address",
            "x-cca-property-hint" : "ort.Name",
            "x-omds2-property" : "Ort"
          },
          "strasse" : {
            "type" : "string",
            "description" : "Strasse of the address",
            "x-cca-property-hint" : "adrStrasse",
            "x-omds2-property" : "Strasse"
          }
        }
      },
      "AdresseCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AdresseModel"
        } ]
      },
      "AdresseEditModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AdresseModel"
        } ]
      },
      "AdresseViewModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AdresseModel"
        } ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the address",
            "x-cca-property-hint" : "adrID"
          }
        }
      },
      "BankkontoBic" : {
        "type" : "string",
        "description" : "ISO 9362 standard format of Business Identifier Codes",
        "format" : "iso9362",
        "x-cca-property-hint" : "bankkBIC",
        "pattern" : "^[a-z]{6}[2-9a-z][0-9a-np-z]([a-z0-9]{3}|x{3})?$"
      },
      "BankkontoIban" : {
        "type" : "string",
        "description" : "International bank account number",
        "format" : "iban",
        "x-cca-property-hint" : "bankkIBAN",
        "pattern" : "^\\w{2}\\d{2}\\s?([0-9a-zA-Z]{4}\\s?){4}[0-9a-zA-Z]{2}$"
      },
      "BankkontoCreateModel" : {
        "type" : "object",
        "properties" : {
          "bic" : {
            "$ref" : "#/components/schemas/BankkontoBic"
          },
          "iban" : {
            "$ref" : "#/components/schemas/BankkontoIban"
          },
          "kontoinhaber" : {
            "type" : "string",
            "description" : "The holder fo the bankaccount",
            "x-cca-property-hint" : "bankkKontoName"
          }
        },
        "required" : [ "iban", "bic" ]
      },
      "BankkontoViewModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the bankaccount",
            "x-cca-property-hint" : "bankkID",
            "x-cca-extension" : true
          },
          "bic" : {
            "$ref" : "#/components/schemas/BankkontoBic"
          },
          "iban" : {
            "$ref" : "#/components/schemas/BankkontoIban"
          }
        },
        "required" : [ "id", "iban" ]
      },
      "BankkontoEditModel" : {
        "type" : "object",
        "properties" : {
          "bic" : {
            "$ref" : "#/components/schemas/BankkontoBic"
          },
          "iban" : {
            "$ref" : "#/components/schemas/BankkontoIban"
          },
          "kontoinhaber" : {
            "type" : "string",
            "description" : "The holder of the bankaccount",
            "x-cca-property-hint" : "bankkKontoName"
          }
        },
        "required" : [ "iban", "bic" ]
      },
      "OrtElement" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-property-hint" : "ortId"
          },
          "name" : {
            "type" : "string",
            "x-cca-property-hint" : "ortName"
          },
          "plz" : {
            "type" : "string",
            "x-cca-property-hint" : "ortPLZ"
          },
          "landesCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/LandesCode"
          }
        }
      },
      "PersonBeziehungsart" : {
        "type" : "object",
        "description" : "Personbeziehungen sind gerichtete Kanten zwischen zwei Personen. Die PersonBeziehungsart beschreibt die Natur dieser Beziehung.Sofern eine Umkehrbeziehung existiert, ist diese die gegenläufige Kante zur ursprünglichen Personbeziehung.",
        "properties" : {
          "beziehungsartCode" : {
            "$ref" : "#/components/schemas/PersonBeziehungsArtCode"
          },
          "name" : {
            "type" : "string",
            "description" : "Human readable identifier for the relationship"
          },
          "umkehrbeziehungArt" : {
            "description" : "The inverse relation to the original relation, if one exists.",
            "type" : "object",
            "properties" : {
              "beziehungsartCode" : {
                "$ref" : "#/components/schemas/PersonBeziehungsArtCode"
              },
              "name" : {
                "type" : "string",
                "description" : "Human readable identifier for the relationship"
              }
            }
          }
        }
      },
      "PersonBeziehungCreateModel" : {
        "description" : "Createmodel for PersonRelationship",
        "properties" : {
          "beziehungsartCode" : {
            "$ref" : "#/components/schemas/PersonBeziehungsArtCode"
          },
          "personId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The related personId"
          }
        },
        "required" : [ "beziehungsartCode", "personId" ]
      },
      "PersonBeziehung" : {
        "type" : "object",
        "description" : "Personbeziehungen sind gerichtete Kanten zwischen zwei Personen. PersonA ist der Startknoten dieser gerichteten Kante und PersonB der Endknoten.",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-property-hint" : "pervId",
            "description" : "The identifier for this specific connection"
          },
          "personAId" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-property-hint" : "pervPersonID",
            "description" : "Die Id der Person von dem die Beziehung ausgeht (Der Startknoten der gerichteten Kante)"
          },
          "personBId" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-property-hint" : "pervFremdID",
            "description" : "Die Id der Person auf den die Beziehung zeigt (Der Endknoten der gerichteten Kante)"
          },
          "beziehungsArt" : {
            "$ref" : "#/components/schemas/PersonBeziehungsart"
          }
        }
      },
      "NatuerlichePersonModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Familyname",
            "x-cca-property-hint" : "perName1",
            "x-omds2-property" : "Familienname"
          },
          "vorname" : {
            "type" : "string",
            "description" : "First name",
            "x-cca-property-hint" : "perName2",
            "x-omds2-property" : "Vorname"
          },
          "geschlechtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GeschlechtCode"
          },
          "geburtsDatum" : {
            "type" : "string",
            "format" : "date",
            "description" : "Birthday of the Person",
            "x-cca-property-hint" : "perGebDat",
            "x-omds2-property" : "GebDat"
          },
          "staatsbuergerschaft" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/LandesCode",
            "x-cca-property-hint" : "perStaatbuergerchaft_Land.lndMDSCode"
          },
          "familienstand" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/FamilienstandCode"
          },
          "titelBeruf" : {
            "type" : "string",
            "description" : "The persons job title.",
            "x-cca-property-hint" : "perTitelBerufId",
            "x-cca-extension" : true
          },
          "beruf" : {
            "type" : "string",
            "description" : "The persons job",
            "x-cca-property-hint" : "perBerufId",
            "x-cca-extension" : true
          },
          "titel" : {
            "type" : "string",
            "description" : "The persons title",
            "x-cca-property-hint" : "perTitelAkademischId",
            "x-cca-extension" : true
          },
          "titelNachgestellt" : {
            "type" : "string",
            "description" : "The persons title",
            "x-cca-property-hint" : "perTitelNachgestelltId",
            "x-cca-extension" : true
          }
        },
        "required" : [ "name", "geschlechtCode" ]
      },
      "SonstigePersonModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the entity",
            "x-cca-property-hint" : "perName1",
            "x-omds2-property" : "Name"
          },
          "kurzname" : {
            "type" : "string",
            "description" : "Shortname of the company",
            "x-cca-property-hint" : "perName2",
            "x-omds2-property" : "Kurzname"
          },
          "sonstigePersonArt" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/SonstigePersonArtCode"
          }
        },
        "required" : [ "name", "sonstigePersonArt" ]
      },
      "Kontaktdaten" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-property-hint" : "adrvID"
          },
          "kommunikationsArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/KommunikationsArtCode"
          },
          "kennung" : {
            "type" : "string",
            "description" : "Phonenumber, Emailaddress, URl, ...",
            "x-omds2-property" : "Kennung",
            "x-cca-property-hint" : "telFullNumber"
          }
        },
        "required" : [ "kommunikationsArtCode", "kennung" ]
      },
      "KontaktdatenCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Kontaktdaten"
        } ]
      },
      "KontaktdatenEditModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Kontaktdaten"
        }, {
          "type" : "object"
        }, {
          "properties" : {
            "id" : {
              "description" : "Id of the item to be edited. If left null or 0 the item will be created.",
              "type" : "integer",
              "format" : "int32",
              "x-cca-property-hint" : "adrvID"
            }
          }
        } ]
      },
      "KontaktdatenViewModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Kontaktdaten"
        }, {
          "type" : "object"
        }, {
          "properties" : {
            "id" : {
              "description" : "Id of the item.",
              "type" : "integer",
              "format" : "int32",
              "x-cca-property-hint" : "adrvID"
            }
          }
        } ]
      },
      "PersonCreateModel" : {
        "description" : "Createmodel for Person",
        "type" : "object",
        "properties" : {
          "istKunde" : {
            "type" : "boolean",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "perKundeSeit"
          },
          "betreuerId" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-extension" : true,
            "description" : "The persons administrator at the insurance office.",
            "x-cca-property-hint" : "perBetreuerId"
          },
          "personenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/PersonenArtCode"
          },
          "natuerlichePerson" : {
            "$ref" : "#/components/schemas/NatuerlichePersonModel"
          },
          "sonstigePerson" : {
            "$ref" : "#/components/schemas/SonstigePersonModel"
          },
          "kontaktdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KontaktdatenCreateModel"
            }
          }
        },
        "required" : [ "personenNummer", "personenArtCode" ]
      },
      "PersonEditModel" : {
        "description" : "EditModel for Person.",
        "properties" : {
          "istKunde" : {
            "type" : "boolean",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "perKundeSeit"
          },
          "betreuerId" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-extension" : true,
            "description" : "The persons administrator at the insurance office.",
            "x-cca-property-hint" : "perBetreuerId"
          },
          "personenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/PersonenArtCode"
          },
          "natuerlichePerson" : {
            "$ref" : "#/components/schemas/NatuerlichePersonModel"
          },
          "sonstigePerson" : {
            "$ref" : "#/components/schemas/SonstigePersonModel"
          },
          "kontaktdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KontaktdatenEditModel"
            }
          }
        }
      },
      "PersonViewModel" : {
        "description" : "Viewmodel for Person.",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "perId"
          },
          "istKunde" : {
            "type" : "boolean",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "perKundeSeit"
          },
          "betreuerId" : {
            "type" : "integer",
            "format" : "int32",
            "x-cca-extension" : true,
            "description" : "The persons administrator at the insurance office.",
            "x-cca-property-hint" : "perBetreuerId"
          },
          "personenNummer" : {
            "type" : "string",
            "description" : "Personnumber of the Person.",
            "x-cca-property-hint" : "perPersNr",
            "x-omds2-property" : "PersonenNr"
          },
          "personenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/PersonenArtCode"
          },
          "natuerlichePerson" : {
            "$ref" : "#/components/schemas/NatuerlichePersonModel"
          },
          "sonstigePerson" : {
            "$ref" : "#/components/schemas/SonstigePersonModel"
          },
          "name" : {
            "type" : "string",
            "description" : "The persons full name.",
            "x-cca-property-hint" : "person.perName1 + person.perName2"
          },
          "kontaktdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KontaktdatenViewModel"
            }
          },
          "hauptAdresse" : {
            "$ref" : "#/components/schemas/AdresseViewModel"
          }
        }
      },
      "PersonBeziehungsArtCode" : {
        "type" : "string",
        "description" : "Type of the relationship. Must be one of the configured Beziehungsarten in `configuration/personBeziehungsarten`\n"
      },
      "PersonRisikoViewModel" : {
        "description" : "ViewModel for a PersonRisk",
        "properties" : {
          "vertragSparteId" : {
            "description" : "The id of the VertragSparte if the person risk is only related to a vertragsparte of a contract\n",
            "type" : "integer",
            "format" : "int32",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "vervVertragSparteID"
          },
          "gueltiAb" : {
            "description" : "If set, this determines the date after which the relationship is valid\n",
            "type" : "string",
            "format" : "date",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "vervGueltigAb"
          },
          "gueltiBis" : {
            "description" : "If set, this determines the date after which the relationship is invalid\n",
            "type" : "string",
            "format" : "date",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "vervGueltigAb"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonViewModel"
          }
        }
      },
      "KFZCommonProperties" : {
        "properties" : {
          "abs" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/EntscheidungJaNein",
            "x-omds2-property" : "ABSKz",
            "x-cca-property-hint" : "kfzABS"
          },
          "antriebsartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/AntriebsartCode"
          },
          "baujahr" : {
            "type" : "integer",
            "format" : "int16",
            "x-omds2-property" : "Modelljahr",
            "x-cca-property-hint" : "kfzBaujahr"
          },
          "co2Ausstoss" : {
            "type" : "integer",
            "format" : "int16",
            "x-omds2-property" : "CO2_Ausstoss",
            "x-cca-property-hint" : "kfzCO2"
          },
          "eigengewicht" : {
            "type" : "integer",
            "format" : "int16",
            "x-cca-property-hint" : "kfzGesamtGewicht"
          },
          "erstzulassungsDatum" : {
            "type" : "string",
            "format" : "date",
            "x-omds2-property" : "Erstzulassdat",
            "x-cca-property-hint" : "kfzErstzulassung"
          },
          "fahrgestellNummer" : {
            "type" : "string",
            "x-omds2-property" : "Fahrgestnr",
            "x-cca-property-hint" : "kfzFahrgestNummer"
          },
          "fahrzeugArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/FahrzeugArtCode"
          },
          "handelsbezeichnung" : {
            "type" : "string",
            "x-omds2-property" : "Handelsbez",
            "x-cca-property-hint" : "kfzHandelsbez"
          },
          "hubraum" : {
            "type" : "integer",
            "format" : "int16",
            "x-omds2-property" : "Hubraum",
            "x-cca-property-hint" : "kfzHubraum"
          },
          "istLeasingKfz" : {
            "x-omds2-property" : "Leasingkz",
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/EntscheidungJaNein0"
          },
          "katalysator" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/EntscheidungJaNein0",
            "x-omds2-property" : "Katkz",
            "x-cca-property-hint" : "kfzKatalysator"
          },
          "kennzeichen" : {
            "type" : "string",
            "x-omds2-property" : "Pol_Kennz",
            "x-cca-property-hint" : "kfzKennzeichen"
          },
          "kfzTyp" : {
            "type" : "string",
            "description" : "Type/Modell of the KFZ",
            "x-cca-property-hint" : "kfzTyp"
          },
          "leistung" : {
            "type" : "number",
            "format" : "double",
            "x-omds2-property" : "Leistung",
            "x-cca-property-hint" : "kfzKilowatt"
          },
          "marke" : {
            "type" : "string",
            "description" : "Brandname. Must be one of the provided list of `/configuration/auswahllisten/kfzMarke`",
            "x-omds2-property" : "Marke",
            "x-cca-property-hint" : "KFZHersteller.khersText"
          },
          "motorNummer" : {
            "type" : "string",
            "x-omds2-property" : "Motornr",
            "x-cca-property-hint" : "kfzMotorNummer"
          },
          "natCode" : {
            "type" : "string",
            "x-omds2-property" : "NatCode",
            "x-cca-property-hint" : "kfzNatCode"
          },
          "nutzlast" : {
            "type" : "integer",
            "format" : "int16",
            "x-omds2-property" : "Nutzlast",
            "x-cca-property-hint" : "kfzNutzlast"
          },
          "plaetze" : {
            "type" : "integer",
            "format" : "int8",
            "x-omds2-property" : "Plaetze",
            "x-cca-property-hint" : "kfzSitzplaetzeMit"
          },
          "verwendungsZweckCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VerwendungsZweckCode"
          }
        }
      },
      "KFZCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/KFZCommonProperties"
        } ],
        "required" : [ "verwendungsZweckCode", "fahrzeugArtCode" ]
      },
      "KFZEditModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/KFZCommonProperties"
        } ]
      },
      "KFZViewModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/KFZCommonProperties"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id of the KFZn"
            },
            "besitzerId" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id of the Person owning the vehicle",
              "x-cca-property-hint" : "Person.perId"
            },
            "besitzer" : {
              "type" : "string",
              "description" : "The owners full name",
              "x-cca-property-hint" : "Person.perName1 + Person.perName2"
            },
            "steuerbefreit" : {
              "type" : "string",
              "x-cca-property-hint" : "KFZSteuerbefreit_T.kfzRisikentbText",
              "x-cca-extension" : true
            }
          }
        } ]
      },
      "SachrisikoCreateModel" : {
        "properties" : {
          "ausstattungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/AusstattungCode"
          },
          "bauartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/BauartCode"
          },
          "gebaeudeartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudeartCode"
          },
          "dachungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/DachungCode"
          },
          "gebaeudehoeheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudehoeheCode"
          },
          "nutzungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/NutzungCode"
          },
          "versicherteSacheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VersicherteSacheCode"
          },
          "adresseId" : {
            "type" : "integer",
            "description" : "The id of an *existing* address that should be associated with this risk.",
            "x-cca-property-hint" : "adresse.adrID"
          },
          "gebaeudeBezeichnung" : {
            "type" : "string",
            "x-omds2-property" : "GebaeudeBez",
            "x-cca-property-hint" : "nkpBezeichnung"
          },
          "fdesCodeechen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlaechenCreateModel"
            }
          },
          "objektdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjektdatenCreateModel"
            }
          }
        }
      },
      "SachrisikoEditModel" : {
        "properties" : {
          "ausstattungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/AusstattungCode"
          },
          "bauartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/BauartCode"
          },
          "gebaeudeartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudeartCode"
          },
          "dachungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/DachungCode"
          },
          "gebaeudehoeheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudehoeheCode"
          },
          "nutzungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/NutzungCode"
          },
          "versicherteSacheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VersicherteSacheCode"
          },
          "gebaeudeBezeichnung" : {
            "type" : "string",
            "x-omds2-property" : "GebaeudeBez",
            "x-cca-property-hint" : "nkpBezeichnung"
          },
          "flaechen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlaechenEditModel"
            }
          },
          "objektdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjektdatenEditModel"
            }
          }
        }
      },
      "SachrisikoViewModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the NKP."
          },
          "besitzerId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the person owning the property.",
            "x-cca-property-hint" : "person.perId",
            "x-cca-extension" : true
          },
          "ausstattungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/AusstattungCode"
          },
          "bauartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/BauartCode"
          },
          "gebaeudeartCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudeartCode"
          },
          "dachungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/DachungCode"
          },
          "gebaeudehoeheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/GebaeudehoeheCode"
          },
          "nutzungCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/NutzungCode"
          },
          "versicherteSacheCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VersicherteSacheCode"
          },
          "adresse" : {
            "$ref" : "#/components/schemas/AdresseViewModel"
          },
          "gebaeudeBezeichnung" : {
            "type" : "string",
            "x-omds2-property" : "GebaeudeBez",
            "x-cca-property-hint" : "nkpBezeichnung"
          },
          "besitzer" : {
            "type" : "string",
            "description" : "Full name of the properties owner.",
            "x-cca-property-hint" : "person.perName1 + person.perName2",
            "x-cca-extension" : true
          },
          "art" : {
            "type" : "string",
            "description" : "Full Text of the Type of the Property.",
            "x-cca-property-hint" : "nkpart_t.nkpaText",
            "x-cca-extension" : true
          },
          "flaechen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlaechenViewModel"
            }
          },
          "objektdaten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjektdatenViewModel"
            }
          }
        }
      },
      "FlaechenCreateModel" : {
        "properties" : {
          "flaechenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/FlaechenArtCode"
          },
          "innenFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflInnenFlaeche",
            "x-omds2-property" : "InnenFlaeche"
          },
          "verbauteFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflVerbauteFlaeche",
            "x-omds2-property" : "VerbauteFlaeche"
          },
          "nummer" : {
            "type" : "string",
            "description" : "Bei gleichartigen `flaechenArtCode`, dient die Nummer als Unterscheidungsmerkmal (zB.: Geschoss).\n",
            "x-ccaproperty-hint" : "nkpflNummer",
            "x-omds2-property" : "Nummer"
          }
        },
        "required" : [ "flaechenArtCode" ]
      },
      "FlaechenEditModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the property area to edit. If this is null or 0, the model is used to create a new Area.",
            "x-cca-property-hint" : "nkpflID"
          },
          "flaechenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/FlaechenArtCode"
          },
          "innenFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflInnenFlaeche",
            "x-omds2-property" : "InnenFlaeche"
          },
          "verbauteFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflVerbauteFlaeche",
            "x-omds2-property" : "VerbauteFlaeche"
          },
          "nummer" : {
            "type" : "string",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflNummer",
            "x-omds2-property" : "Nummer"
          }
        }
      },
      "FlaechenViewModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the property area.",
            "x-cca-property-hint" : "nkpflID"
          },
          "flaechenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/FlaechenArtCode"
          },
          "innenFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflInnenFlaeche",
            "x-omds2-property" : "InnenFlaeche"
          },
          "verbauteFlaeche" : {
            "type" : "number",
            "format" : "double",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflVerbauteFlaeche",
            "x-omds2-property" : "VerbauteFlaeche"
          },
          "nummer" : {
            "type" : "string",
            "description" : "See omds description.",
            "x-ccaproperty-hint" : "nkpflNummer",
            "x-omds2-property" : "Nummer"
          }
        },
        "required" : [ "flaechenArtCode", "id" ]
      },
      "ObjektdatenCreateModel" : {
        "properties" : {
          "objektdatenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ObjektdatenArtCode"
          },
          "wert" : {
            "type" : "string",
            "description" : "The data.",
            "x-cca-property-hint" : "nkpodWert",
            "x-omds2-property" : "Wert"
          }
        },
        "required" : [ "objektdatenArtCode" ]
      },
      "ObjektdatenEditModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the property data. If this is null or 0, the model is used to create a new data entry.",
            "x-cca-property-hint" : "nkpodID"
          },
          "objektdatenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ObjektdatenArtCode"
          },
          "wert" : {
            "type" : "string",
            "description" : "The data.",
            "x-cca-property-hint" : "nkpodWert",
            "x-omds2-property" : "Wert"
          }
        },
        "required" : [ "objektdatenArtCode" ]
      },
      "ObjektdatenViewModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the property data.",
            "x-cca-property-hint" : "nkpodID"
          },
          "objektdatenArtCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ObjektdatenArtCode"
          },
          "wert" : {
            "type" : "string",
            "description" : "The data.",
            "x-cca-property-hint" : "nkpodWert",
            "x-omds2-property" : "Wert"
          }
        },
        "required" : [ "id", "objektdatenArtCode" ]
      },
      "DokumentViewModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the Dokument."
          },
          "anlageDatum" : {
            "type" : "string",
            "format" : "date",
            "description" : "Time of creation.",
            "x-cca-property-hint" : "dokAnlageDatum"
          },
          "beschreibung" : {
            "type" : "string",
            "description" : "The document description.",
            "x-cca-property-hint" : "dokBeschreibung"
          },
          "betreff" : {
            "type" : "string",
            "description" : "Subject of the document.",
            "x-cca-property-hint" : "dokBetreff"
          },
          "personId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the person associated with that dokument.",
            "x-cca-property-hint" : "dokPersonId"
          },
          "dateiname" : {
            "type" : "string",
            "description" : "The filename (including fileextension).",
            "x-cca-property-hint" : "dokbDateiname"
          },
          "dateierweiterung" : {
            "type" : "string",
            "description" : "The fileextension without the separating '.' (dot).",
            "x-cca-property-hint" : "patindex('%.%',reverse(dokbDateiname))"
          },
          "dokumentTyp" : {
            "type" : "string",
            "description" : "Full Text of the CCA9 Type of the Document.",
            "x-cca-property-hint" : "DokumentTyp_T.dtypText",
            "x-cca-extension" : true
          },
          "dokumentTypCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/DokumentTypCode"
          }
        }
      },
      "DokumentEditModel" : {
        "properties" : {
          "beschreibung" : {
            "type" : "string",
            "description" : "The document description.",
            "x-cca-property-hint" : "dokBeschreibung"
          },
          "betreff" : {
            "type" : "string",
            "description" : "Subject of the document.",
            "x-cca-property-hint" : "dokBetreff"
          }
        }
      },
      "XmlData" : {
        "properties" : {
          "xml" : {
            "type" : "string",
            "description" : ""
          }
        }
      },
      "VertragViewCreateExclusiveProperties" : {
        "type" : "object",
        "properties" : {
          "defaultKontoId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Standard-Vermittler-Konto",
            "x-cca-extension" : true
          },
          "vertragSparteCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VertragSparteCode"
          },
          "vuNiederlassungId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of insurances branch office.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verNiederlassungID"
          },
          "vuNr" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VuNr"
          }
        },
        "required" : [ "vuNr" ]
      },
      "VertragCreateModelsCommonProperties" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragCommonProperties"
        }, {
          "$ref" : "#/components/schemas/VertragViewCreateExclusiveProperties"
        }, {
          "type" : "object",
          "properties" : {
            "produkte" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteByProductCreateModel"
              }
            },
            "vertragSparten" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteManualCreateModel"
              }
            }
          }
        } ]
      },
      "VertragCommonProperties" : {
        "type" : "object",
        "properties" : {
          "adresseId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the adresse.",
            "x-cca-property-hint" : "verAdressID"
          },
          "automatischeVerlaengerung" : {
            "type" : "boolean",
            "description" : "Wird der Vertrag automatisch verlängert.",
            "x-cca-property-hint" : "verAutomVerlaeng"
          },
          "bankverbindungId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the BankConnection"
          },
          "betreuerId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the contracts administrator at the insurance-office.",
            "x-cca-property-hint" : "verBetreuerID"
          },
          "eingereicht" : {
            "type" : "string",
            "format" : "date",
            "description" : "Datum der Antragseinreichung.",
            "x-cca-property-hint" : "verEingereicht"
          },
          "inkasso" : {
            "type" : "boolean",
            "description" : "Betreibt der Makler selber das Inkasso für den Vertrag.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verInkasso"
          },
          "hauptFaelligkeitMonat" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Month of the main premium settlement date.",
            "x-cca-property-hint" : "verHauptFaellMonat"
          },
          "hauptFaelligkeitTag" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Day of the main premium settlement date.",
            "x-cca-property-hint" : "verHauptFaellTag"
          },
          "info" : {
            "type" : "string",
            "description" : "Information about the contract.",
            "x-cca-property-hint" : "verInfo"
          },
          "kuendbarPer" : {
            "type" : "string",
            "format" : "date",
            "description" : "Datum ab dem der Vertrag kündbar ist.",
            "x-cca-property-hint" : "verKuendbarPer"
          },
          "kuendigungFrist" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Kündigungsfrist in Monaten.",
            "x-cca-property-hint" : "verKuendigungFrist"
          },
          "risiko1" : {
            "type" : "string",
            "description" : "A label for a risk that is associated with that Vertrag.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verRisiko1"
          },
          "risiko2" : {
            "type" : "string",
            "description" : "A label for a second risk that is associated with that contract.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verRisiko2"
          },
          "vertragBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Begin date.",
            "x-cca-property-hint" : "verBeginn"
          },
          "vertragEnde" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the contracts expiry.",
            "x-cca-property-hint" : "verAblauf"
          },
          "waehrungsCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/WaehrungsCode",
            "x-cca-property-hint" : "verWaehrungID"
          },
          "zahlungsRhythmusCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsRhythmusCode"
          },
          "zahlungsWegCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsWegCode"
          },
          "zahlungDauer" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Auszahlungsdauer bei Er-Lebensverträgen in Monaten.",
            "x-cca-property-hint" : "verZahlungDauer",
            "x-cca-extension" : true
          }
        },
        "required" : [ "hauptFaelligkeitTag", "hauptFaelligkeitMonat", "vertragBeginn", "vertragEnde", "waehrungsCode", "adresseId" ]
      },
      "AntragCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragCreateModelsCommonProperties"
        }, {
          "type" : "object",
          "properties" : {
            "antragNr" : {
              "type" : "string",
              "description" : "Proposal number Wenn die Antragsnummer nicht befüllt ist, wird sie durch das System automatisch vergeben.",
              "x-cca-property-hint" : "verAntragNr"
            },
            "produkte" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteByProductCreateModel"
              }
            },
            "vertragSparten" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteManualCreateModel"
              }
            },
            "vermittlernummer" : {
              "type" : "string",
              "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
              "x-cca-property-hint" : "ktoKontoNr"
            }
          }
        } ]
      },
      "OffertCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragCreateModelsCommonProperties"
        }, {
          "type" : "object",
          "properties" : {
            "offertNr" : {
              "type" : "string",
              "description" : "Proposal number Wenn die Offernummer nicht befüllt ist, wird sie durch das System automatisch vergeben.",
              "x-cca-property-hint" : "verAntragNr"
            }
          },
          "required" : [ "offertNr" ]
        } ]
      },
      "VertragCreateModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragCreateModelsCommonProperties"
        }, {
          "type" : "object",
          "properties" : {
            "vertragNr" : {
              "type" : "string",
              "description" : "Polizzennummer",
              "x-cca-property-hint" : "verPolizzenNr"
            },
            "polizziert" : {
              "type" : "string",
              "format" : "date",
              "x-cca-property-hint" : "verPolizziert"
            },
            "vertragStatusCode" : {
              "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VertragStatusCode"
            },
            "produkte" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteByProductCreateModel"
              }
            },
            "vertragSparten" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertragsSparteManualCreateModel"
              }
            },
            "vermittlernummer" : {
              "type" : "string",
              "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
              "x-cca-property-hint" : "ktoKontoNr"
            }
          }
        } ]
      },
      "VertragViewModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id des Vertrages."
          },
          "betreuerId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The persons administrator at the insurance office."
          },
          "vuNr" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VuNr"
          },
          "vertragNr" : {
            "type" : "string",
            "description" : "Polizzennummer",
            "x-cca-property-hint" : "verPolizzenNr"
          },
          "antragNr" : {
            "type" : "string",
            "description" : "Proposal number Wenn die Antragsnummer nicht befüllt ist, wird sie durch das System automatisch vergeben.",
            "x-cca-property-hint" : "verAntragNr"
          },
          "versicherungsnehmer" : {
            "type" : "string",
            "description" : "Name of the person.",
            "x-cca-property-hint" : "Person.perName1 + Person.perName2"
          },
          "versicherungsnehmerId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id for the person entry of the insurance holder.",
            "x-cca-property-hint" : "verVNID"
          },
          "polizziert" : {
            "type" : "string",
            "format" : "date",
            "x-cca-property-hint" : "verPolizziert"
          },
          "niederlassung" : {
            "type" : "string",
            "x-cca-property-hint" : "verNiederlassung"
          },
          "vuNiederlassungId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of insurances branch office.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verNiederlassungID"
          },
          "vertragArt" : {
            "type" : "string",
            "x-cca-property-hint" : "VertragArt_T.vartText"
          },
          "adresse" : {
            "$ref" : "#/components/schemas/AdresseViewModel"
          },
          "buchstatus" : {
            "type" : "string",
            "x-cca-extension" : true,
            "enum" : [ "offen", "geschlossen" ]
          },
          "defaultKontoId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Standard-Vermittler-Konto",
            "x-cca-extension" : true
          },
          "vertragSparteCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VertragSparteCode"
          },
          "anlageDatum" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the contracts creation.",
            "x-cca-property-hint" : "verAnlageDatum"
          },
          "automatischeVerlaengerung" : {
            "type" : "boolean",
            "description" : "Wird der Vertrag automatisch verlängert.",
            "x-cca-property-hint" : "verAutomVerlaeng"
          },
          "bankverbindungId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the BankConnection"
          },
          "eingereicht" : {
            "type" : "string",
            "format" : "date",
            "description" : "Datum der Antragseinreichung.",
            "x-cca-property-hint" : "verEingereicht"
          },
          "inkasso" : {
            "type" : "boolean",
            "description" : "Betreibt der Makler selber das Inkasso für den Vertrag.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verInkasso"
          },
          "gueltigBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the last contract modifications ",
            "x-cca-property-hint" : "verAenderungDatum"
          },
          "hauptFaelligkeitMonat" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Month of the main premium settlement date.",
            "x-cca-property-hint" : "verHauptFaellMonat"
          },
          "hauptFaelligkeitTag" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Day of the main premium settlement date.",
            "x-cca-property-hint" : "verHauptFaellTag"
          },
          "info" : {
            "type" : "string",
            "description" : "Information about the contract.",
            "x-cca-property-hint" : "verInfo"
          },
          "kuendbarPer" : {
            "type" : "string",
            "format" : "date",
            "description" : "Datum ab dem der Vertrag kündbar ist.",
            "x-cca-property-hint" : "verKuendbarPer"
          },
          "kuendigungFrist" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Kündigungsfrist in Monaten.",
            "x-cca-property-hint" : "verKuendigungFrist"
          },
          "praemieBruttoVertrag" : {
            "type" : "number",
            "format" : "double",
            "description" : "The contracts gross premium per payment interval.",
            "x-cca-property-hint" : "verFBP"
          },
          "praemieNettoVertrag" : {
            "type" : "number",
            "format" : "double",
            "description" : "The contracts annual net premium.",
            "x-cca-property-hint" : "verJNP"
          },
          "risiko1" : {
            "type" : "string",
            "description" : "A label for a risk that is associated with that Vertrag.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verRisiko1"
          },
          "risiko2" : {
            "type" : "string",
            "description" : "A label for a second risk that is associated with that contract.",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "verRisiko2"
          },
          "vertragBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Begin date.",
            "x-cca-property-hint" : "verBeginn"
          },
          "vertragEnde" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the contracts expiry.",
            "x-cca-property-hint" : "verAblauf"
          },
          "waehrungsCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/WaehrungsCode",
            "x-cca-property-hint" : "verWaehrungID"
          },
          "zahlungsRhythmusCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsRhythmusCode"
          },
          "zahlungsWegCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsWegCode"
          },
          "zahlungDauer" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Auszahlungsdauer bei Er-Lebensverträgen in Monaten.",
            "x-cca-property-hint" : "verZahlungDauer",
            "x-cca-extension" : true
          },
          "vertragTyp" : {
            "$ref" : "#/components/schemas/VertragTypesEnum",
            "x-cca-property-hint" : "verVertragTyp",
            "x-cca-extension" : true
          },
          "vertragStatusCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VertragStatusCode"
          },
          "vermittlernummer" : {
            "type" : "string",
            "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
            "x-cca-property-hint" : "Konto.ktoKontoNr"
          }
        }
      },
      "VertragEditModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragCommonProperties"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id des Vertrages."
            },
            "vertragNr" : {
              "type" : "string",
              "description" : "Polizzennummer",
              "x-cca-property-hint" : "verPolizzenNr"
            },
            "antragNr" : {
              "type" : "string",
              "description" : "Proposal number Wenn die Antragsnummer nicht befüllt ist, wird sie durch das System automatisch vergeben.",
              "x-cca-property-hint" : "verAntragNr"
            },
            "vertragStatusCode" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "code of the VertragStatus.",
              "x-cca-property-hint" : "verStatusCode"
            },
            "gueltigBeginn" : {
              "type" : "string",
              "format" : "date",
              "description" : "Date of the last contract modifications.",
              "x-cca-property-hint" : "verAenderungDatum"
            },
            "polizziert" : {
              "type" : "string",
              "format" : "date",
              "x-cca-property-hint" : "verPolizziert"
            },
            "vermittlernummer" : {
              "type" : "string",
              "description" : "Vu - Vermittler-Konto (Vermittlernummer).",
              "x-cca-property-hint" : "Konto.ktoKontoNr"
            }
          }
        } ]
      },
      "VertragBuchEditModel" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the vertrag.",
            "x-cca-property-hint" : "verID"
          },
          "buchstatus" : {
            "type" : "string",
            "x-cca-extension" : true,
            "enum" : [ "offen", "geschlossen" ]
          }
        },
        "required" : [ "id", "buchstatus" ]
      },
      "LeistungszeileViewModel" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id of the LZ.",
              "x-cca-property-hint" : "vsplID"
            }
          }
        }, {
          "$ref" : "#/components/schemas/LeistungszeileModel"
        } ]
      },
      "LeistungszeileModel" : {
        "properties" : {
          "bezeichnung" : {
            "type" : "string",
            "description" : "Info about the LZ.",
            "x-cca-property-hint" : "vsplBezeichnung"
          },
          "laufnummer" : {
            "type" : "integer",
            "format" : "int16",
            "minimum" : 1,
            "x-cca-property-hint" : "vsplLaufnummer"
          },
          "isActive" : {
            "type" : "boolean",
            "x-cca-property-hint" : "vsplAktiv"
          },
          "leistungTyp" : {
            "type" : "string",
            "x-cca-property-hint" : "vsplLeistungTypID",
            "enum" : [ "leistung", "zuschlag" ]
          },
          "vsu" : {
            "type" : "number",
            "x-cca-property-hint" : "vsplVSU"
          },
          "vsuBewertet" : {
            "type" : "number",
            "x-cca-property-hint" : "vsplVSUBewertet"
          },
          "sumUpVsu" : {
            "type" : "boolean",
            "x-cca-property-hint" : "vsplVSUaddieren"
          },
          "berechnungTyp" : {
            "type" : "string",
            "x-cca-property-hint" : "vsplBerechnungTypID",
            "enum" : [ "fixNetto", "fixBrutto", "vsuPercent", "vsuPermille" ]
          },
          "praemie" : {
            "type" : "number",
            "x-cca-property-hint" : "vsplPraemie"
          },
          "rabatt" : {
            "description" : "Rabatt in Prozent auf die Prämie.",
            "type" : "number",
            "maximum" : 100,
            "minimum" : 0,
            "x-cca-property-hint" : "vsplRabattProz"
          },
          "selbstbehalt" : {
            "type" : "object",
            "properties" : {
              "minimum" : {
                "type" : "number",
                "format" : "currency",
                "minimum" : 0,
                "x-cca-property-hint" : "vsplSbMinimum"
              },
              "maximum" : {
                "type" : "number",
                "format" : "currency",
                "x-cca-property-hint" : "vsplSbMaximum"
              },
              "prozent" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 100,
                "x-cca-property-hint" : "vsplSbProzent"
              }
            }
          },
          "info" : {
            "type" : "string",
            "description" : "Information",
            "x-cca-property-hint" : "vsplInfo"
          },
          "infoBuero" : {
            "type" : "string",
            "description" : "Interne Information.",
            "x-cca-property-hint" : "vsplInfoBuero"
          }
        },
        "required" : [ "id" ]
      },
      "VertragSparteProduktModel" : {
        "type" : "object",
        "properties" : {
          "beobachtungBis" : {
            "type" : "string",
            "format" : "date",
            "description" : "Beobachtungszeitraum für die aktuelle B/M Stufe bei KFZ-Haftpflicht Sparten.",
            "x-cca-property-hint" : "vspBeobachtungBis",
            "x-cca-kfz-spezifisch" : true
          },
          "beobachtungVon" : {
            "type" : "string",
            "format" : "date",
            "description" : "Beobachtungszeitraum für die aktuelle B/M Stufe bei KFZ-Haftpflicht Sparten.",
            "x-cca-property-hint" : "vspBeobachtungVon",
            "x-cca-kfz-spezifisch" : true
          },
          "bonusMalusProzent" : {
            "type" : "number",
            "format" : "real",
            "description" : "Bonus / Malus Stufe Multiplikator.",
            "x-cca-property-hint" : "vspBMProzent"
          },
          "bonusMalusStufeIntern" : {
            "type" : "string",
            "description" : "Rating of the insurance-holders driving history.",
            "x-cca-property-hint" : "BonusMalusStufe.bmstStufeIntern",
            "x-omds2-property" : "ElEinstufung EstArtCdType=T EstWert"
          },
          "feuersteuerProzent" : {
            "type" : "number",
            "format" : "float",
            "default" : 0,
            "description" : "Feuerschutzsteuer in Prozent",
            "x-cca-property-hint" : "vspFeuerStProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "indexArtId" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Indexierungsgrundlage (z.B.: VPI, Baukostenindex,...)",
            "x-cca-property-hint" : "vspIndexArtID",
            "x-cca-extension" : true
          },
          "info" : {
            "type" : "string",
            "description" : "Information zur Sparte.",
            "x-cca-property-hint" : "vspInfo"
          },
          "praemieBruttoSparte" : {
            "type" : "number",
            "format" : "float",
            "description" : "",
            "x-cca-property-hint" : "vspJBP",
            "x-omds2-property" : "PraemieBtoSp"
          },
          "praemieNettoSparte" : {
            "type" : "number",
            "format" : "float",
            "description" : "Yearly netto bonus.",
            "x-cca-property-hint" : "vspJNP_BM",
            "x-omds2-property" : "PraemieNtoSp"
          },
          "kfzRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of KFZ-Risiks related to this Sparte."
          },
          "vermittlernummer" : {
            "type" : "string",
            "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
            "x-cca-property-hint" : "vspKonto.KontoNr",
            "x-omds2-property" : "Vermnr (bei Vertrag)"
          },
          "personenRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of Person-Risiks related to this Sparte."
          },
          "jnpVsuBerechnungsArt" : {
            "type" : "string",
            "description" : "Beschreibt wie die Jnp und Versicherungssumme berechnet werden. Entweder werden die JNP und VSU aus den Leistungszeilen berechnet, oder explizit gesetzt (die Berechnung ist dann deaktiviert).",
            "enum" : [ "AusLeistungszeilen", "Deaktiviert" ],
            "x-cca-property-hint" : "vspJNPVSUmanuell",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "sachRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of NKP-Risiks related to this Sparte."
          },
          "provisionSchabloneId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "CCA Provisionsschablone",
            "x-cca-property-hint" : "vspSchabloneID",
            "x-cca-extension" : true
          },
          "spartenBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Begin date of the contract-class.",
            "x-cca-property-hint" : "vspBeginn",
            "x-omds2-property" : "SpartenBeg"
          },
          "spartenEnde" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the classes expiry.",
            "x-cca-property-hint" : "vspAblauf",
            "x-omds2-property" : "Sparte.SpartenEnd"
          },
          "unterjaehrigkeitsZuschlagProzent" : {
            "type" : "number",
            "format" : "float",
            "default" : 0,
            "description" : "UnterjaehrigkeitsZuschlag Prozent.",
            "x-cca-property-hint" : "vspUJZProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "vbNummer" : {
            "type" : "string",
            "description" : "Versicherungsbestätigung",
            "x-cca-property-hint" : "vspVBNummer",
            "x-cca-kfz-spezifisch" : true
          },
          "verbandZuweisung" : {
            "type" : "boolean",
            "description" : "Gibt an ob eine KFZ-HP vom Verband zugewiesen wurde.",
            "x-cca-property-hint" : "vspVerbandZuwg",
            "x-cca-kfz-spezifisch" : true
          },
          "vermittlerObjektId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Vermittler-Objekt",
            "x-cca-property-hint" : "vspVermittlerObjektID",
            "x-cca-extension" : true,
            "x-cca-vermittlerprovision" : true
          },
          "versicherungsSumme" : {
            "type" : "number",
            "format" : "float",
            "description" : "The insured amount.",
            "x-cca-property-hint" : "vspVSU"
          },
          "versicherungsSteuerProzent" : {
            "type" : "number",
            "format" : "float",
            "description" : "The applicable insurance tax, depending on the insurance class. A default is provided by cca if not set.",
            "x-cca-property-hint" : "vspVersStProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "vorsteuerProzent" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Höhe der Vorsteuerabzugsberechtigung in Prozent",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "vspVorstProzent"
          },
          "wechselKennzeichen" : {
            "type" : "boolean",
            "description" : "Kennzeichnet HP Verträge für WechselKennzeichen. Die Berechnung der Prämien/Steuerberechung wird dann aufgrund der mit WechselKennzeichen gekennzeichenten KFZ - Risiken durchgeführt.",
            "x-cca-property-hint" : "vspWechselKZ",
            "x-cca-kfz-spezifisch" : true,
            "x-cca-sparten-berechnung" : true
          }
        }
      },
      "VertragsparteModel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragSparteProduktModel"
        }, {
          "type" : "object",
          "properties" : {
            "spartenText" : {
              "type" : "string",
              "description" : "The insurance classes name.",
              "x-cca-property-hint" : "vspBezeichnung",
              "x-omds2-property" : "Sparte.Spartentxt"
            },
            "spartenCode" : {
              "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/SpartenCode",
              "x-cca-property-hint" : "vwcSparteBez.spMDSCode"
            },
            "tarif" : {
              "type" : "string",
              "description" : "Tarfibezeichnung lt. Versicherer.",
              "x-cca-property-hint" : "vspTarif",
              "x-omds2-property" : "HauptTarifBez"
            },
            "variante" : {
              "type" : "string",
              "description" : "Tarfivariante lt Versicherer - zb. \"mit Leihwagenverzicht\" bei KFZ-Haftpflicht.",
              "x-cca-property-hint" : "vspVariante"
            },
            "versicherungsSteuer2BerechnungsArt" : {
              "type" : "string",
              "description" : "Beschreibt wie die Motorenbezogene Versicherungssteuer berechnet wird. Entweder wird die Steuer aus den KFZ-Risiken berechnet. ",
              "enum" : [ "AusKfzRisiken", "Deaktiviert" ],
              "x-cca-property-hint" : "vspVersSt2manuell",
              "x-cca-extension" : true,
              "x-cca-sparten-berechnung" : true,
              "x-cca-kfz-spezifisch" : true
            },
            "versicherungsSteuer2" : {
              "type" : "number",
              "format" : "float",
              "description" : "The second applicable insurance tax, depending on the insurance class. (i.e. Motorbezogene Versicherungssteuer).",
              "x-cca-property-hint" : "vspVersSteuer2",
              "x-cca-kfz-spezifisch" : true
            }
          }
        } ]
      },
      "VertragsSparteByProductCreateModel" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "productId" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id of stored schema"
            }
          }
        }, {
          "$ref" : "#/components/schemas/VertragSparteProduktModel",
          "required" : [ "productId" ]
        } ]
      },
      "VertragsSparteManualCreateModel" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragsparteModel"
        }, {
          "type" : "object",
          "required" : [ "spartenText", "versicherungsSumme", "praemieNettoSparte", "unterjaehrigkeitsZuschlagProzent", "feuersteuerProzent", "versicherungsSteuerProzent" ]
        } ]
      },
      "VertragSparteViewModel" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/VertragsparteModel"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Id of the vsp.",
              "x-cca-property-hint" : "vspID"
            },
            "kfzRisiken" : {
              "description" : "Ids der `KFZ` die direkt zu dieser Sparte verknüpft sind.",
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "personenRisiken" : {
              "description" : "Ids der `Person` - Risiken die direkt zu dieser Sparte verknüpft sind.",
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "sachRisiken" : {
              "description" : "Ids der `Sachrisiko` die direkt zu dieser Sparte verknüpft sind.",
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "indexArt" : {
              "type" : "string",
              "description" : "Text of the indexArt.",
              "x-cca-property-hint" : "IndexArt_T.idxaText"
            }
          }
        } ]
      },
      "VertragSparteCreateModel" : {
        "properties" : {
          "produkte" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VertragsSparteByProductCreateModel"
            }
          },
          "vertragsparten" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VertragsSparteManualCreateModel"
            }
          }
        }
      },
      "VertragSparteEditModel" : {
        "properties" : {
          "beobachtungBis" : {
            "type" : "string",
            "format" : "date",
            "description" : "Beobachtungszeitraum für die aktuelle B/M Stufe bei KFZ-Haftpflicht Sparten.",
            "x-cca-property-hint" : "vspBeobachtungBis",
            "x-cca-kfz-spezifisch" : true
          },
          "beobachtungVon" : {
            "type" : "string",
            "format" : "date",
            "description" : "Beobachtungszeitraum für die aktuelle B/M Stufe bei KFZ-Haftpflicht Sparten.",
            "x-cca-property-hint" : "vspBeobachtungVon",
            "x-cca-kfz-spezifisch" : true
          },
          "bonusMalusProzent" : {
            "type" : "number",
            "format" : "real",
            "description" : "Bonus / Malus Stufe Multiplikator.",
            "x-cca-property-hint" : "vspBMProzent"
          },
          "bonusMalusStufeIntern" : {
            "type" : "string",
            "description" : "Rating of the insurance-holders driving history.",
            "x-cca-property-hint" : "BonusMalusStufe.bmstStufeIntern",
            "x-omds2-property" : "ElEinstufung EstArtCdType=T EstWert"
          },
          "feuersteuerProzent" : {
            "type" : "number",
            "format" : "float",
            "default" : 0,
            "description" : "Feuerschutzsteuer in Prozent",
            "x-cca-property-hint" : "vspFeuerStProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "info" : {
            "type" : "string",
            "description" : "Information zur Sparte.",
            "x-cca-property-hint" : "vspInfo"
          },
          "praemieBruttoSparte" : {
            "type" : "number",
            "format" : "float",
            "description" : "",
            "x-cca-property-hint" : "vspJBP",
            "x-omds2-property" : "PraemieBtoSp"
          },
          "praemieNettoSparte" : {
            "type" : "number",
            "format" : "float",
            "description" : "Yearly netto bonus.",
            "x-cca-property-hint" : "vspJNP_BM",
            "x-omds2-property" : "PraemieNtoSp"
          },
          "kfzRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of KFZ-Risiks related to this Sparte."
          },
          "vermittlernummer" : {
            "type" : "string",
            "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
            "x-cca-property-hint" : "vspKonto.KontoNr",
            "x-omds2-property" : "Vermnr (bei Vertrag)"
          },
          "personenRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of Person-Risiks related to this Sparte."
          },
          "jnpVsuBerechnungsArt" : {
            "type" : "string",
            "description" : "Beschreibt wie die Jnp und Versicherungssumme berechnet werden. Entweder werden die JNP und VSU aus den Leistungszeilen berechnet, oder explizit gesetzt (die Berechnung ist dann deaktiviert).",
            "enum" : [ "AusLeistungszeilen", "Deaktiviert" ],
            "x-cca-property-hint" : "vspJNPVSUmanuell",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "sachRisiken" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "List of NKP-Risiks related to this Sparte."
          },
          "provisionSchabloneId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "CCA Provisionsschablone",
            "x-cca-property-hint" : "vspSchabloneID",
            "x-cca-extension" : true
          },
          "spartenBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Begin date of the contract-class.",
            "x-cca-property-hint" : "vspBeginn",
            "x-omds2-property" : "SpartenBeg"
          },
          "spartenEnde" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the classes expiry.",
            "x-cca-property-hint" : "vspAblauf",
            "x-omds2-property" : "Sparte.SpartenEnd"
          },
          "unterjaehrigkeitsZuschlagProzent" : {
            "type" : "number",
            "format" : "float",
            "default" : 0,
            "description" : "UnterjaehrigkeitsZuschlag Prozent.",
            "x-cca-property-hint" : "vspUJZProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "vbNummer" : {
            "type" : "string",
            "description" : "Versicherungsbestätigung",
            "x-cca-property-hint" : "vspVBNummer",
            "x-cca-kfz-spezifisch" : true
          },
          "verbandZuweisung" : {
            "type" : "boolean",
            "description" : "Gibt an ob eine KFZ-HP vom Verband zugewiesen wurde.",
            "x-cca-property-hint" : "vspVerbandZuwg",
            "x-cca-kfz-spezifisch" : true
          },
          "vermittlerObjektId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Vermittler-Objekt",
            "x-cca-property-hint" : "vspVermittlerObjektID",
            "x-cca-extension" : true,
            "x-cca-vermittlerprovision" : true
          },
          "versicherungsSumme" : {
            "type" : "number",
            "format" : "float",
            "description" : "The insured amount.",
            "x-cca-property-hint" : "vspVSU"
          },
          "versicherungsSteuerProzent" : {
            "type" : "number",
            "format" : "float",
            "description" : "The applicable insurance tax, depending on the insurance class. A default is provided by cca if not set.",
            "x-cca-property-hint" : "vspVersStProzent",
            "x-cca-extension" : true,
            "x-cca-sparten-berechnung" : true
          },
          "vorsteuerProzent" : {
            "type" : "integer",
            "format" : "int16",
            "description" : "Höhe der Vorsteuerabzugsberechtigung in Prozent",
            "x-cca-extension" : true,
            "x-cca-property-hint" : "vspVorstProzent"
          },
          "wechselKennzeichen" : {
            "type" : "boolean",
            "description" : "Kennzeichnet HP Verträge für WechselKennzeichen. Die Berechnung der Prämien/Steuerberechung wird dann aufgrund der mit WechselKennzeichen gekennzeichenten KFZ - Risiken durchgeführt.",
            "x-cca-property-hint" : "vspWechselKZ",
            "x-cca-kfz-spezifisch" : true,
            "x-cca-sparten-berechnung" : true
          }
        }
      },
      "ZusatzdatenModel" : {
        "properties" : {
          "alias" : {
            "type" : "string",
            "description" : "The datafields alias."
          },
          "datenTyp" : {
            "type" : "string",
            "description" : "The datafields datatype + Text - free text (linebreaks are ignored!) + Datum - Date + Ganzzahl - integer + Gleitzahl - number / double + Enum - fixed enumeration of possible string values + JaNein - boolean value\n",
            "enum" : [ "Text", "Datum", "Ganzzahl", "Gleitzahl", "Enum", "JaNein" ]
          },
          "rawValue" : {
            "type" : "string",
            "description" : "The values string representation if set or null.\n  * Text - the text \n  * Datum - The ISO 8601 formated datetime\n  * Ganzzahl - Integer digits with optional negative sign (i.e. \"1234\", \"-1234\")\n  * Gleitzahl - Integral and decimal digits with optional negative sign. Decimal-separator: \".\"\n  * Enum - the enum identifier as string\n  * JaNein - (\"false\"|\"true\")\"\n  \n"
          },
          "stringValue" : {
            "type" : "string",
            "description" : "The string value is set for the types [Text,Enum]."
          },
          "dateValue" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "The date value is set for [Datum]."
          },
          "integerValue" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The integer value is set for [Ganzzahl]."
          },
          "doubleValue" : {
            "type" : "number",
            "format" : "double",
            "description" : "The doubleValue is set for [Gleitzahl]."
          },
          "booleanValue" : {
            "type" : "boolean",
            "description" : "The booleanValue is set for [JaNein]."
          }
        }
      },
      "SearchRequestModel" : {
        "properties" : {
          "searchTerm" : {
            "type" : "string",
            "description" : "Fulltext Search term. Words shorter than 3 characters will be ignored."
          },
          "searchMode" : {
            "type" : "string",
            "format" : "enum - Tier1 - Tier2",
            "description" : "CCAOnline supports two searchmodes.\n  * Tier 1: is a fast search mode, that only includes properties directly associated with the enitity (like name, info, ...)- This is only supported for Person, Vertrag, Schaden\n  * Tier 2: provides extensive search results.\n"
          },
          "entityFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityTypesEnum"
            },
            "description" : "List of entity types that should be included in the search result.  Attention: Tier1 Search only support Person, Vertrag and Schaden. All other entities will be ignored in tier1 Mode.\n"
          },
          "filterFiliale" : {
            "type" : "boolean",
            "description" : "If Filialen are configured this option can be used to only return items, that are administered by the users filiale.\n"
          }
        }
      },
      "SearchResponseModel" : {
        "properties" : {
          "entityType" : {
            "$ref" : "#/components/schemas/EntityTypesEnum"
          },
          "entityId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The identifier of entity."
          }
        }
      },
      "EntityTypesEnum" : {
        "type" : "string",
        "enum" : [ "Person", "Vertrag", "Schaden", "Dokument", "Risiko", "Wiedervorlage", "Kontakt", "Finanziell" ]
      },
      "SignatureProcessStateEnum" : {
        "type" : "string",
        "enum" : [ "Deferred", "InProgress", "Finished", "Canceled", "Error", "PartiallySigned", "NotFound" ]
      },
      "VertragTypesEnum" : {
        "description" : "Type of the Contract (offer, proposal or contract)",
        "type" : "string",
        "enum" : [ "Contract", "Proposal", "Offer" ]
      },
      "AuswahllistenModel" : {
        "properties" : {
          "ccaTabelle" : {
            "type" : "string",
            "description" : "The cca table that relates to the selectionlist."
          },
          "mappings" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int32",
                  "description" : "The CCA Id of the selectionlist item."
                },
                "text" : {
                  "type" : "string",
                  "description" : "The label for the selectionlist item (localized)."
                }
              }
            }
          }
        },
        "required" : [ "ccaTabelle" ]
      },
      "OmdsMappingModel" : {
        "properties" : {
          "omdsSchluesselArt" : {
            "type" : "string",
            "description" : "The OMDS Key Type."
          },
          "mappings" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "omdsCode" : {
                  "type" : "string",
                  "description" : "The omds code."
                },
                "omdsBezeichnung" : {
                  "type" : "string",
                  "description" : "The label of the omds code."
                },
                "id" : {
                  "type" : "integer",
                  "format" : "int32",
                  "description" : "The cca id of that item."
                },
                "text" : {
                  "type" : "string",
                  "description" : "The cca label for that item (localized)."
                }
              }
            }
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "description" : "A for the request unique ID."
          },
          "detail" : {
            "type" : "string",
            "description" : "A for the user detailed readable error message."
          },
          "instance" : {
            "type" : "string",
            "description" : "The ressource where the error occurred."
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "HTTP Status Code"
          },
          "title" : {
            "type" : "string",
            "description" : "A for the user summarized readable error message."
          },
          "type" : {
            "type" : "string",
            "description" : "A URI which describes the Problemtype."
          }
        },
        "required" : [ "status", "type" ]
      },
      "PageModel" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string",
            "description" : "URl to the first page of results."
          },
          "last" : {
            "type" : "string",
            "description" : "URl to the last page of results"
          },
          "next" : {
            "type" : "string",
            "description" : "URl to the immediate next page of results. If empty the current page is the last page of results."
          },
          "pageNumber" : {
            "type" : "integer",
            "description" : "Current page number."
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Max. number of items returned by a page."
          },
          "prev" : {
            "type" : "string",
            "description" : "URl to the immediate previous page of results. If empty the current page is the first page of results."
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of items in the list."
          }
        }
      },
      "DokumentUnterschreibenStatusResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SignatureProcessStateEnum"
        }, {
          "type" : "object"
        } ]
      },
      "AdresseResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/AdresseViewModel"
              }
            }
          }
        } ]
      },
      "PersonBeziehungResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/PersonBeziehung"
              }
            }
          }
        } ]
      },
      "BankkontoResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/BankkontoViewModel"
              }
            }
          }
        } ]
      },
      "DokumentResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/DokumentViewModel"
              }
            }
          }
        } ]
      },
      "PersonResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/PersonViewModel"
              }
            }
          }
        } ]
      },
      "PersonRisikoResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/PersonRisikoViewModel"
              }
            }
          }
        } ]
      },
      "KFZResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/KFZViewModel"
              }
            }
          }
        } ]
      },
      "SachrisikoResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/SachrisikoViewModel"
              }
            }
          }
        } ]
      },
      "VertragResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/VertragViewModel"
              }
            }
          }
        } ]
      },
      "VertragSparteResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/VertragSparteViewModel"
              }
            }
          }
        } ]
      },
      "LeistungszeileResultPage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageModel"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Ressource data",
              "items" : {
                "$ref" : "#/components/schemas/LeistungszeileViewModel"
              }
            }
          }
        } ]
      },
      "ExistingRiskObject" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The Id of the risk"
          }
        },
        "required" : [ "Id" ]
      },
      "OfferToApplicationModel" : {
        "properties" : {
          "offerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vuNr" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/VuNr"
          },
          "antragNr" : {
            "type" : "string",
            "description" : "Proposal number Wenn die Antragsnummer nicht befüllt ist, wird sie durch das System automatisch vergeben.",
            "x-cca-property-hint" : "verAntragNr"
          },
          "eingereicht" : {
            "type" : "string",
            "format" : "date",
            "description" : "Datum der Antragseinreichung.",
            "x-cca-property-hint" : "verEingereicht"
          },
          "vertragBeginn" : {
            "type" : "string",
            "format" : "date",
            "description" : "Begin date.",
            "x-cca-property-hint" : "verBeginn"
          },
          "vertragEnde" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of the contracts expiry.",
            "x-cca-property-hint" : "verAblauf"
          },
          "vermittlernummer" : {
            "type" : "string",
            "description" : "Vu - Vermittler-Konto (Vermittlernummer)",
            "x-cca-property-hint" : "ktoKontoNr"
          },
          "zahlungsRhythmusCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsRhythmusCode"
          },
          "zahlungsWegCode" : {
            "$ref" : "https://api.swaggerhub.com/domains/TIS-CCA/omds-components/2.10#/definitions/ZahlungsWegCode"
          }
        },
        "required" : [ "offerId" ]
      },
      "OfferToApplicationResultModel" : {
        "properties" : {
          "antragNr" : {
            "description" : "The supplied or generated AntragNr.",
            "type" : "string"
          }
        }
      },
      "EndkundenPortalLogin" : {
        "properties" : {
          "benutzername" : {
            "type" : "string"
          },
          "kennwort" : {
            "type" : "string"
          }
        },
        "required" : [ "benutzername", "kennwort" ]
      }
    }
  }
}