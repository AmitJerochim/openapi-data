penapi: 3.0.0
info:
  description: Ticket System Integration
  version: "1.1.0-oas3"
  title: VIDAcare Ticket API
  contact:
    email: dev@vida.care
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: vidacare
    description: Operations exposed by VIDAcare
  - name: ticket-system
    description: Operations exposed by ticketing system
paths:
  /patient/search:
    get:
      tags:
        - vidacare
      operationId: searchPatient
      description: >
        Searches for patient and returns appointments information for that
        patient.  
      parameters:
        - in: query
          name: op
          description: operation
          required: true
          schema:
            type: string
            enum:
              - checkin
        - in: query
          name: patientName
          description: patient name
          required: true
          schema:
            type: string
        - in: query
          name: patientBirthdate
          description: patient birthdate in format yyyy-MM-dd
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: patientNIN
          description: patient citizen card id
          required: true
          schema:
            type: string
        - in: query
          name: patientFiscalCode
          description: patient fiscal code
          required: true
          schema:
            type: string
        - in: query
          name: patientNHS
          description: patient national healthcare system id
          required: true
          schema:
            type: string
        - in: query
          name: siteId
          description: unique site identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  procedures:
                    type: array
                    items:
                      $ref: '#/components/schemas/Appointment'
                  patientId:
                    type: string
                  registration:
                    type: boolean
                  message:
                    type: string
        '400':
          description: bad input parameter
      summary: searches patient and returns appointments info
  /ticket/called:
    post:
      tags:
        - vidacare
      operationId: calledTicked
      description: >-
        Stores called ticket data
      parameters:
        - in: query
          name: ticketId
          description: ticket unique id
          required: true
          schema:
            type: string
        - in: query
          name: ticketNumber
          description: ticket number
          required: true
          schema:
            type: string
        - in: query
          name: userName
          description: username that called ticket
          required: true
          schema:
            type: string
        - in: query
          name: issueDate
          description: ticket issue date
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: siteId
          description: unique site identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: operation succeeded
        '400':
          description: bad input parameter
      summary: Stores called ticket or issued ticket data
  /ticket/new:
      post:
        tags:
          - vidacare
        operationId: newTicket
        description: >-
          Stores new ticket data
        parameters:
          - in: query
            name: ticketId
            description: ticket unique id
            required: true
            schema:
              type: string
          - in: query
            name: ticketNumber
            description: ticket number
            required: true
            schema:
              type: string
          - in: query
            name: patientId
            description: id of the patient
            required: true
            schema:
              type: string
          - in: query
            name: issueDate
            description: ticket issue date
            required: true
            schema:
              type: string
              format: date-time
          - in: query
            name: siteId
            description: unique site identifier
            required: true
            schema:
              type: string
        responses:
          '200':
            description: operation succeeded
          '400':
            description: bad input parameter
        summary: Stores issued ticket data
  /patient/appointments:
    post:
      tags:
        - ticket-system
      operationId: patientAppointments
      description: updates queue according to patient appointments
      requestBody:
        description: Slot search criteria definition
        required: true
        content:
          application/json:
            schema:
               properties:
                ticketId:
                  description: ticketId to re-order
                  type: string
                appointments:
                  description: List of patient appointments
                  type: array
                  items:
                    $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: operation succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  errorMessage:
                    type: string
        '400':
          description: bad input parameter
      summary: updates queue
servers:
  - url: 'https://virtserver.swaggerhub.com/vidacare/vidacare.ticket/1.0.0'
components:
  schemas:
    Appointment:
      type: object
      required:
        - name
        - start
      properties:
        name:
          type: string
          example: Raio-X Anca
        start:
          type: string
          format: date-time
          example: '2020-08-29T09:12:00.000Z'