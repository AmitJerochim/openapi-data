{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Plexus-Gateway/Documents-API/1.0.0"
  }, {
    "description" : "Plexus Staging Environment",
    "url" : "https://api-staging.plexus.co/1.0.0"
  } ],
  "info" : {
    "version" : "0.0.0.2",
    "title" : "Plexus Gateway Documents API",
    "description" : "This document describes the customer facing API, available for integration with the documents model within the Plexus Gateway platform.",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "support@plexus.co"
    }
  },
  "tags" : [ {
    "name" : "documents",
    "description" : "Everything related to documents within Plexus Gateway"
  } ],
  "security" : [ {
    "application" : [ "read", "write" ]
  } ],
  "paths" : {
    "/documents/_search" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Search for a list of documents",
        "description" : "Returns a list of documents matching the supplied filter criteria.",
        "requestBody" : {
          "description" : "A JSON object containing the document search filters",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTree"
              },
              "examples" : {
                "basicSearch" : {
                  "summary" : "Basic search example",
                  "value" : {
                    "operator" : "AND",
                    "left" : {
                      "fieldName" : "name",
                      "comparison" : "equals",
                      "value" : "my document"
                    }
                  }
                },
                "basicBooleanSearch" : {
                  "summary" : "Basic boolean search example",
                  "value" : {
                    "operator" : "AND",
                    "left" : {
                      "fieldName" : "name",
                      "comparison" : "equals",
                      "value" : "my document"
                    },
                    "right" : {
                      "fieldName" : "createdAt",
                      "comparison" : "greterThanOrEqual",
                      "value" : "2020-01-01"
                    }
                  }
                },
                "complexBooleanSearch" : {
                  "summary" : "Complex search example",
                  "value" : {
                    "operator" : "AND",
                    "left" : {
                      "fieldName" : "name",
                      "comparison" : "equals",
                      "value" : "my document"
                    },
                    "right" : {
                      "operator" : "AND",
                      "left" : {
                        "fieldName" : "createdAt",
                        "comparison" : "greterThanOrEqual",
                        "value" : "2020-01-01"
                      },
                      "right" : {
                        "fieldName" : "generatedBy",
                        "comparison" : "equals",
                        "value" : "My App"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SearchDocument"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documents/{documentId}" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Get document details by Id",
        "description" : "Returns all the details of a document based on the document Id, can include document metadata if required.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/documentIdParam"
        }, {
          "name" : "includeMetadata",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "required" : false,
          "description" : "If true, will include metadata along with the document."
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            }
          },
          "404" : {
            "description" : "Document not found"
          }
        }
      }
    },
    "/documents/{documentId}/download" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Download document by Id",
        "description" : "Returns the PDF document based on the document Id.  Does not return any attachments, linked documents or sub-documents.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/documentIdParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Document not found"
          }
        }
      }
    },
    "/documents/{documentId}/attachments/{attachmentId}/download" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Download document attachment by attachment Id",
        "description" : "Returns the PDF document based on the attachment Id.  The list of attachments can be found by calling the /document/{documentId} API first.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/documentIdParam"
        }, {
          "$ref" : "#/components/parameters/attachmentIdParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Attachment not found"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "documentIdParam" : {
        "name" : "documentId",
        "in" : "path",
        "description" : "Id of the document",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "attachmentIdParam" : {
        "name" : "attachmentId",
        "in" : "path",
        "description" : "Id of the attachment",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "schemas" : {
      "SearchTree" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "AND", "OR" ]
          },
          "left" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SearchTree"
            }, {
              "$ref" : "#/components/schemas/SearchFilter"
            } ]
          },
          "right" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SearchTree"
            }, {
              "$ref" : "#/components/schemas/SearchFilter"
            } ]
          }
        },
        "required" : [ "operator", "left" ]
      },
      "SearchFilter" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 10
          },
          "comparison" : {
            "type" : "string",
            "enum" : [ "equals", "startsWith", "endsWith", "greaterThan", "lessThan", "greterThanOrEqual", "lessThanOrEqual", "contains" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [ "fieldName", "comparison", "value" ]
      },
      "SearchDocument" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Document name or title",
            "example" : "Example document title"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 300,
            "description" : "Document description",
            "example" : "Example document description"
          },
          "status" : {
            "$ref" : "#/components/schemas/DocumentStatus"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "When was the document initially created"
          },
          "createdByEmail" : {
            "type" : "string",
            "description" : "Email address of the user who initially created the document",
            "example" : "user@company.com"
          },
          "ownerEmail" : {
            "type" : "string",
            "description" : "Email address of the user who currently owns the document",
            "example" : "owner@company.com"
          },
          "generatedBy" : {
            "type" : "string",
            "description" : "The application used to generate the document",
            "maxLength" : 100,
            "example" : "Example App 1"
          },
          "documentType" : {
            "type" : "string",
            "maxLength" : 512,
            "description" : "Document type",
            "example" : "Non Disclosure Agreement"
          },
          "counterParty" : {
            "type" : "string",
            "maxLength" : 512,
            "description" : "Name of the company or individual who is the counter party",
            "example" : "Counterparty compaqny name"
          },
          "contractValue" : {
            "type" : "number",
            "example" : 10000
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The start date of the contract"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attachmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "example" : [ 10, 11, 12, 13 ]
          },
          "version" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string",
                "description" : "Version number",
                "example" : 1.0
              },
              "dateReceived" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "When did this version of the document get created"
              },
              "createdByEmail" : {
                "type" : "string",
                "description" : "Email address of the user who created this version of the document",
                "example" : "user2@company.com"
              }
            }
          }
        },
        "required" : [ "id", "name", "status", "createdAt", "createdByEmail", "generatedBy", "documentType", "version" ]
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Document name or title",
            "example" : "Example document title"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 300,
            "description" : "Document description",
            "example" : "Example document description"
          },
          "status" : {
            "$ref" : "#/components/schemas/DocumentStatus"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "When was the document initially created"
          },
          "createdByEmail" : {
            "type" : "string",
            "description" : "Email address of the user who initially created the document",
            "example" : "user@company.com"
          },
          "ownerEmail" : {
            "type" : "string",
            "description" : "Email address of the user who currently owns the document",
            "example" : "owner@company.com"
          },
          "generatedBy" : {
            "type" : "string",
            "description" : "The application used to generate the document",
            "maxLength" : 100,
            "example" : "Example App 1"
          },
          "documentType" : {
            "type" : "string",
            "maxLength" : 512,
            "description" : "Document type",
            "example" : "Non Disclosure Agreement"
          },
          "counterParty" : {
            "type" : "string",
            "maxLength" : 512,
            "description" : "Name of the company or individual who is the counter party",
            "example" : "Counterparty compaqny name"
          },
          "contractValue" : {
            "type" : "number",
            "example" : 10000
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The start date of the contract"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attachmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "example" : [ 10, 11, 12, 13 ]
          },
          "metadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          },
          "version" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string",
                "description" : "Version number",
                "example" : 1.0
              },
              "dateReceived" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "When did this version of the document get created"
              },
              "createdByEmail" : {
                "type" : "string",
                "description" : "Email address of the user who created this version of the document",
                "example" : "user2@company.com"
              }
            }
          }
        },
        "required" : [ "id", "name", "status", "createdAt", "createdByEmail", "generatedBy", "documentType", "version" ]
      },
      "DocumentStatus" : {
        "type" : "string",
        "enum" : [ "black", "white", "red", "green", "blue" ]
      },
      "MetadataItem" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Metadata field name",
            "example" : "metadata_field_name_1"
          },
          "value" : {
            "type" : "string",
            "description" : "Metadata field value",
            "example" : "value1"
          }
        },
        "required" : [ "name", "value" ]
      }
    },
    "securitySchemes" : {
      "application" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "http://plxs-ext.au.auth0.com/oauth/token",
            "scopes" : {
              "write" : "allows modifying resources",
              "read" : "allows reading resources"
            }
          }
        }
      }
    }
  }
}