openapi: 3.0.0
info:
  version: 2.0.0
  title: Reservation of La Grace
  description: Public API for cruises of La Grace
  contact:
    name: Lukas Pokorny
    email: pokorny@luk4s.cz
  license:
    name: GPLv3
security:
- token: []
tags:
- name: admin
  description: endpoints required `admin`
- name: User
servers:
- url: https://rezervace.lagrace.cz
paths:
  "/":
    get:
      summary: List of available sails
      description: Return list of all current sails
      security: []
      parameters:
      - name: sort
        description: name of 'column' for sort. Can be also in format name:asc or
          :desc
        example: email:desc (for reverse order users by e-mail
        in: query
        schema:
          type: string
      - name: direction
        description: sort direction
        in: query
        schema:
          type: string
          enum:
          - asc
          - desc
      - name: page
        description: number of requested page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Sail"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/admin/users.json":
    get:
      summary: List
      tags:
      - User
      - admin
      parameters:
      - name: q
        description: free-text filter of current entity - `like`
        in: query
        schema:
          type: string
      - name: set_filter
        description: enable filtering
        in: query
        schema:
          type: boolean
      - name: sort
        description: name of 'column' for sort. Can be also in format name:asc or
          :desc
        example: email:desc (for reverse order users by e-mail
        in: query
        schema:
          type: string
      - name: page
        description: number of requested page
        in: query
        schema:
          type: integer
      responses:
        '401':
          description: not authorized
        '404':
          description: not found
        '406':
          description: not allowed
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: internal server error
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
  "/admin/users/{id}.json":
    get:
      summary: Find by ID
      description: Returns a single entity
      tags:
      - User
      - admin
      parameters:
      - name: id
        in: path
        description: ID to fetch
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '401':
          description: not authorized
        '404':
          description: not found
        '406':
          description: not allowed
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: internal server error
        '200':
          description: detail object response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
components:
  schemas:
    Sail:
      required:
      - id
      - code
      - date_to
      - date_from
      - route
      - plan
      - price_cabin
      - price_cadet
      - price_ship
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
        code:
          type: string
        date_to:
          type: string
          format: date
        date_from:
          type: string
          format: date
        route:
          type: string
        plan:
          type: string
        price_cabin:
          type: number
          format: double
        price_cadet:
          type: number
          format: double
        price_ship:
          type: number
          format: double
    User:
      required:
      - id
      - login
      - email
      properties:
        id:
          type: integer
          format: int64
        fist_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
          enum:
          - active
          - pending
          - archived
    ErrorModel:
      required:
      - attribute
      - messages
      properties:
        attribute:
          type: string
          example: login
        messages:
          type: array
          items:
            type: string
            example: cannot be blank
  examples: {}
  links: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  securitySchemes:
    token:
      type: apiKey
      name: key
      in: header