openapi: 3.0.0
info:
  description: ""
  version: "0.1"
  title: ""
  contact:
    email: you@your-company.com
paths:
   /files:
    post:
      summary: File object create
      responses:
        '201':
          description: file created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/FileDto'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorDto'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreateRequestDto'
   /files/:id:
    get:
      summary: File object details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        '200':
          description: file object
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/FileDto'
        '404':
          description: 'File not found'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorDto'
   /files/:id/images:
    get:
      summary: List of images linked to file
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        '200':
          description: Images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDto'
        '404':
          description: 'File not found'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorDto'
components:
  schemas:
    FileCreateRequestDto:
      type: object
      required:
        - fileName
        - contentType
        - validityDays
      properties:
        fileName:
          type: string
        contentType:
          type: string
          example: 'application/zip'
        validityDays:
          type: integer
          example: 5
    FileDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        status:
          type: string
          example: 'CREATED|PROCESSING|READY'
        expires:
          type: string
          example: '2020-06-21T17:32:28Z'
        uploadSignedUrl:
          type: string
          description: 'valid for 10 minutes'
          example: 'https://upload/aws/signed/url'
    ImageDto:
      type: object
      properties:
        url:
          type: string
          example: 'https://aws/signed/file_id/imagename.png'
    ErrorDto:
      type: object
      properties:
        message:
          type: string
          example: 'Error occured'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/k939/viewer/0.1
