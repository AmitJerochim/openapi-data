{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Wapi",
    "version" : "0.0.9"
  },
  "servers" : [ {
    "url" : " http://wapi-dev.us-east-2.elasticbeanstalk.com/v1"
  } ],
  "paths" : {
    "/view/map" : {
      "get" : {
        "description" : "deliver an interactive map",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "query",
          "description" : "The apiKey used to find the build the map",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lat",
          "in" : "query",
          "description" : "latitude of the target",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "long",
          "in" : "query",
          "description" : "longitude of the target",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Location found and image returned"
          }
        }
      }
    },
    "/view/map/static" : {
      "get" : {
        "description" : "deliver an image of the map section",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "query",
          "description" : "The apiKey used to find the location",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addr",
          "in" : "query",
          "description" : "address location, will override lat and lng query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lat",
          "in" : "query",
          "description" : "latitude of the target required if addr is not provided",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "long",
          "in" : "query",
          "description" : "longitude of the target required if addr is not provided",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "the type of map to be displayed options\\:(beauty_n,interest, beauty_m, comfort, amenitites,access, or safety )",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Location found and image returned"
          }
        }
      }
    },
    "/street" : {
      "get" : {
        "description" : "Get information on a specific street",
        "parameters" : [ {
          "name" : "lat",
          "description" : "latitude of target",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "long",
          "description" : "longitude of target",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully found street",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string"
                    },
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Users not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string"
                    },
                    "err" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/me" : {
      "get" : {
        "description" : "Get user information",
        "responses" : {
          "200" : {
            "description" : "Successfully found user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/me"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is missing components",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer",
                      "example" : 400
                    },
                    "route" : {
                      "type" : "string"
                    },
                    "err" : {
                      "type" : "string",
                      "example" : "Invalid request"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/user/me/key" : {
      "get" : {
        "description" : "Get list of keys owned by user",
        "responses" : {
          "200" : {
            "description" : "Sucesssfully found User's keys",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/me"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/user/me/key/{keyID}" : {
      "get" : {
        "description" : "Get information on a specific key",
        "parameters" : [ {
          "name" : "keyID",
          "in" : "path",
          "description" : "The Key prefix or keyID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succcessfully found key and its owned by the user requesting it",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/users/me/key"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Key"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/user/password" : {
      "post" : {
        "description" : "Change the password of the user. A basic header authorization is required to force re-entry of credientals",
        "responses" : {
          "200" : {
            "description" : "Succcessfully changed the user password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/users/password"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : "SUCCESS"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserBasic" : [ ]
        } ]
      }
    },
    "/keys" : {
      "post" : {
        "description" : "Generate a new key for the user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Succcessfully generated a new key. However, this is the one time the user key is seen in cleartext.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer",
                      "example" : 200
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key"
                    },
                    "key" : {
                      "type" : "string",
                      "description" : "The string of characters before the period (not including the period) is seen as the \nkey prefix or key id. In this example \"9b7f67f145\" is the keyID\n",
                      "example" : "9b7f67f14.aa828431b32285233db74d4443147c0661631800a3af5d39837560ba0521ec9"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/keys/{keyID}" : {
      "get" : {
        "description" : "Get information on key",
        "parameters" : [ {
          "name" : "keyID",
          "in" : "path",
          "description" : "The Key prefix or keyID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succcessfully found key and its owned by the user requesting it",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key/asdasd"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Key"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      },
      "delete" : {
        "description" : "Delete key",
        "parameters" : [ {
          "name" : "keyID",
          "in" : "path",
          "description" : "The Key prefix or keyID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted the key",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key/asdasd"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : "1 keys deleted"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/poi" : {
      "get" : {
        "description" : "List POIs",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name of the POI",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lat",
          "in" : "query",
          "description" : "Latitude of the point of the radius",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "long",
          "in" : "query",
          "description" : "Longitude of the point of the radius",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius in Miles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of point of interest",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "owner",
          "in" : "query",
          "description" : "Owner of point of interest",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns POI data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key/asdasd"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/POI"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        }, {
          "ApiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "description" : "Generate a poi of interest for that spot",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns POI data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key/asdasd"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/POI"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        }, {
          "ApiKeyAuth" : [ ]
        } ]
      }
    },
    "/poi/{poiID}" : {
      "get" : {
        "description" : "Get information on poi",
        "parameters" : [ {
          "name" : "poiID",
          "in" : "path",
          "description" : "The poi uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succcessfully found poi",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/poi/123123"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/POI"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/nav" : {
      "get" : {
        "description" : "Navigate to and from 2 points",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The type of route (short, beauty_n, beauty_m, comfort, interest, safety, acess or amenities). Default is short ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slat",
          "in" : "query",
          "description" : "Starting point Latitude",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "slong",
          "in" : "query",
          "description" : "Starting point Longitude",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "flat",
          "in" : "query",
          "description" : "Ending point Latitude",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "flong",
          "in" : "query",
          "description" : "Ending point Longitude",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns navigation in steps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/key/asdasd"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/NavigationResult"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        }, {
          "ApiKeyAuth" : [ ]
        } ]
      }
    },
    "/auth" : {
      "post" : {
        "description" : "Signup user",
        "responses" : {
          "200" : {
            "description" : "Succcessfully signedup user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/poi/123123"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "username" : {
                          "type" : "string",
                          "format" : "username"
                        },
                        "pool" : {
                          "type" : "object",
                          "properties" : {
                            "userPoolId" : {
                              "type" : "string",
                              "description" : "the user pool the user was saved to"
                            },
                            "clientId" : {
                              "type" : "string",
                              "description" : "the id of the user"
                            },
                            "client" : {
                              "type" : "object",
                              "description" : "information on the user pool",
                              "properties" : {
                                "endpoint" : {
                                  "type" : "string"
                                },
                                "userAgent" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "advancedSecurityDataCollectionFlag" : {
                              "type" : "boolean"
                            }
                          }
                        },
                        "client" : {
                          "type" : "object",
                          "description" : "information on the user pool",
                          "properties" : {
                            "endpoint" : {
                              "type" : "string"
                            },
                            "userAgent" : {
                              "type" : "string"
                            }
                          }
                        },
                        "authenticationFlowType" : {
                          "type" : "string",
                          "example" : "USER_SRP_AUTH"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserBasic" : [ ]
        } ]
      }
    },
    "/auth/login" : {
      "post" : {
        "description" : "Login user",
        "responses" : {
          "200" : {
            "description" : "Succcessfully Logged in User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/poi/123123"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "idToken" : {
                          "type" : "object",
                          "properties" : {
                            "jwtToken" : {
                              "type" : "string",
                              "example" : "eyOiJzMnI4OEZViYmQ1Yn...."
                            },
                            "payload" : {
                              "type" : "object",
                              "properties" : {
                                "sub" : {
                                  "type" : "string",
                                  "description" : "The id of the user"
                                },
                                "aud" : {
                                  "type" : "string"
                                },
                                "email_verified" : {
                                  "type" : "boolean"
                                },
                                "event_id" : {
                                  "type" : "string"
                                },
                                "token_use" : {
                                  "type" : "string"
                                },
                                "auth_time" : {
                                  "type" : "string"
                                },
                                "iss" : {
                                  "type" : "string"
                                },
                                "cognito:username" : {
                                  "type" : "string",
                                  "description" : "username/email"
                                },
                                "exp" : {
                                  "type" : "integer"
                                },
                                "iat" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        },
                        "refreshToken" : {
                          "type" : "object",
                          "properties" : {
                            "token" : {
                              "type" : "string",
                              "description" : "the token used for refreshing your access token"
                            }
                          }
                        },
                        "accessToken" : {
                          "type" : "object",
                          "properties" : {
                            "jwtToken" : {
                              "type" : "string",
                              "example" : "eyOiJzMnI4OEZViYmQ1Yn...."
                            },
                            "payload" : {
                              "type" : "object",
                              "properties" : {
                                "sub" : {
                                  "type" : "string",
                                  "description" : "The id of the user"
                                },
                                "jti" : {
                                  "type" : "string"
                                },
                                "token_use" : {
                                  "type" : "string",
                                  "description" : "scope of token"
                                },
                                "event_id" : {
                                  "type" : "string"
                                },
                                "scope" : {
                                  "type" : "string"
                                },
                                "auth_time" : {
                                  "type" : "string"
                                },
                                "iss" : {
                                  "type" : "string"
                                },
                                "username" : {
                                  "type" : "string",
                                  "description" : "username/email"
                                },
                                "exp" : {
                                  "type" : "integer"
                                },
                                "iat" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        },
                        "clockDrift" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "UserAuth" : [ ]
        } ]
      }
    },
    "/auth/password/forget" : {
      "post" : {
        "description" : "Request a forget password code",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "format" : "email"
                  }
                },
                "required" : [ "email" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Forget password email succcessfully sent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/poi/123123"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "CodeDeliveryDetails" : {
                          "type" : "object",
                          "properties" : {
                            "AttributeName" : {
                              "type" : "string"
                            },
                            "DeliveryMedium" : {
                              "type" : "string"
                            },
                            "Destination" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/code" : {
      "post" : {
        "description" : "Send code along with new password",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "format" : "email"
                  },
                  "verificationCode" : {
                    "type" : "integer"
                  },
                  "newPassword" : {
                    "type" : "string"
                  }
                },
                "required" : [ "email" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Forget password email succcessfully sent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "type" : "integer"
                    },
                    "route" : {
                      "type" : "string",
                      "example" : "/poi/123123"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "username" : {
            "type" : "string",
            "format" : "email"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "walkHistory" : {
            "type" : "object"
          },
          "preferences" : {
            "type" : "object"
          },
          "userType" : {
            "type" : "string",
            "example" : "walker"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastLogin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requests" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }
      },
      "Key" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "fasda213"
          },
          "name" : {
            "type" : "string",
            "example" : "Example key"
          },
          "scope" : {
            "type" : "object",
            "example" : {
              "type" : "string"
            }
          },
          "owner" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "usuage" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUsed" : {
            "type" : "string",
            "format" : "date-time"
          },
          "keyType" : {
            "type" : "string",
            "example" : "free"
          },
          "domains" : {
            "type" : "object"
          }
        }
      },
      "POI" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "reports" : {
            "type" : "object"
          },
          "owner" : {
            "type" : "string",
            "format" : "uuid"
          },
          "latitude" : {
            "type" : "integer"
          },
          "longitude" : {
            "type" : "integer"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NavigationResult" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer"
          },
          "route" : {
            "type" : "string",
            "example" : "/key/asdasd"
          },
          "data" : {
            "$ref" : "#/components/schemas/NavigationResult_data"
          }
        }
      },
      "body" : {
        "required" : [ "keyName" ],
        "properties" : {
          "keyName" : {
            "type" : "string"
          },
          "scopes" : {
            "type" : "object"
          },
          "keyType" : {
            "type" : "string"
          },
          "domains" : {
            "type" : "object"
          }
        }
      },
      "body_1" : {
        "required" : [ "lat", "long", "type" ],
        "properties" : {
          "poiName" : {
            "type" : "string"
          },
          "lat" : {
            "type" : "number"
          },
          "long" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "NavigationResult_data_geojson" : {
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "type" : "array",
            "description" : "A list of the coordinates of each point by long, lat",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Type of geojson"
          }
        },
        "description" : "the path in geojson"
      },
      "NavigationResult_data_steps" : {
        "type" : "object",
        "properties" : {
          "alternatives_count" : {
            "type" : "integer",
            "description" : "the number of alternate points this point could have"
          },
          "waypoint_index" : {
            "type" : "integer",
            "description" : "The index of the waypoint inside the geojson response"
          },
          "matchings_index" : {
            "type" : "integer",
            "description" : "the index the response was found in. Most cases 0"
          },
          "distance" : {
            "type" : "integer",
            "description" : "the length of the step in meters"
          },
          "name" : {
            "type" : "string",
            "description" : "the name of the block/street",
            "example" : "Broadway"
          },
          "location" : {
            "type" : "array",
            "description" : "the coordinates of the step",
            "example" : [ -73.988735, 40.745256 ],
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "NavigationResult_data" : {
        "type" : "object",
        "properties" : {
          "confidence" : {
            "type" : "number",
            "description" : "a value between 0 and 1 for confidence"
          },
          "duration" : {
            "type" : "integer",
            "description" : "the length of time to travel the path in seconds"
          },
          "distance" : {
            "type" : "integer",
            "description" : "The distance of the path in meters"
          },
          "geojson" : {
            "$ref" : "#/components/schemas/NavigationResult_data_geojson"
          },
          "steps" : {
            "$ref" : "#/components/schemas/NavigationResult_data_steps"
          }
        }
      }
    },
    "responses" : {
      "InvalidRequestError" : {
        "description" : "Request is missing components",
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "example" : 400
                },
                "route" : {
                  "type" : "string"
                },
                "err" : {
                  "type" : "string",
                  "example" : "Invalid request"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "UserBasic" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "UserAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "Bearer"
      },
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "name" : "X-API-KEY",
        "in" : "header"
      }
    }
  }
}