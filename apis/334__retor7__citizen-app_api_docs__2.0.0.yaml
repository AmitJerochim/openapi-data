openapi: '3.0.2'
info:
  title: citizen_app API docs
  contact: {}
  version: '2.0.0'
servers:
  - url: http://mobile.gorod.sputnik.systems/api/mobile/v2
paths:
  /cameras:
    get:
      tags:
      - cameras
      summary: Cameras#index
      description: Camera list
      operationId: Cameras#index
      parameters:
      - name: type
        in: query
        description: >-
          Camera installation location:
           * `intercom` - Returns all cameras from all intercoms installed on entrance
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/type'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cameras%23indexResponse'
                description: OK
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cameras%23indexException'
      deprecated: false
  /account/bind_to_flat:
    put:
      tags:
      - settings
      summary: Citizens#bind_to_flat
      description: Bind citizen to flat
      operationId: Citizens#bind_to_flat
      parameters:
      - name: apartment
        in: query
        description: Apartment number
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23flatUpdateResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /account/settings:
    get:
      tags:
      - settings
      summary: Citizens#showSettings
      description: User profile
      operationId: Citizens#showSettings
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23showResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
    put:
      tags:
      - settings
      summary: Citizens#updateSettings
      description: Update user profile
      operationId: Citizens#updateSettings
      parameters:
      - name: avatar
        in: query
        description: base64 encoded file following data URI scheme
        style: form
        explode: true
        schema:
          type: string
      - name: first_name
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: last_name
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: token
        in: query
        description: apns or fcm token
        style: form
        explode: true
        schema:
          type: string
      - name: address_verified
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /account/settings/sip:
    get:
      tags:
      - settings
      summary: Settings#sip
      description: Get sip account
      operationId: Settings#sip
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings%23showResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/settings/untie_payment_card:
    patch:
      tags:
      - settings
      summary: Settings#untie_payment_card
      description: Untie payment card
      operationId: Settings#untie_payment_card
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okStatusResponse'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/settings/tie_payment_card:
    post:
      tags:
      - settings
      summary: Settings#tie_payment_card
      description: Tie payment card
      operationId: Settings#tie_payment_card
      parameters:
      - name: payment_token
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings%23tiePaymentCardResponse'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/devices/sputnik/open:
    get:
      tags:
      - devices
      summary: Devices#open
      description: ''
      operationId: Devices#get-open
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device%23openResponse'
      deprecated: false
    post:
      tags:
      - devices
      summary: Devices#open
      description: ''
      operationId: Devices#open
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device%23openResponse'
      deprecated: false
  /account/devices/sputnik/video:
    get:
      tags:
      - devices
      summary: devices#sputnik_video
      description: ''
      operationId: devices#sputnik_video
      parameters:
      - name: intercom_uuid
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device%23sputnik_videoResponse'
        '422':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/devices/{intercom_uuid}/video:
    get:
      tags:
      - devices
      summary: devices#sputnik_video
      description: ''
      operationId: devices#sputnik_video_alt
      parameters:
      - name: intercom_uuid
        in: path
        description: ''
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device%23sputnik_videoResponse'
        '422':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /avatar:
    delete:
      tags:
      - settings
      summary: avatar#destroy
      description: ''
      operationId: avatar#destroy
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
      deprecated: false
  /devices/{intercom_uuid}/open_door:
    post:
      tags:
      - devices
      summary: devices#open_door
      description: ''
      operationId: devices#open_door
      parameters:
      - name: intercom_uuid
        in: path
        description: ''
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '422':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /face_recognition:
    post:
      tags:
      - settings
      summary: face_recognitions#create
      description: ''
      operationId: face_recognitions#create
      parameters:
      - name: image
        in: query
        description: ''
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '422':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
    delete:
      tags:
      - settings
      summary: face_recognitions#destroy
      description: ''
      operationId: face_recognitions#destroy
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '422':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/check_status:
    get:
      tags:
      - settings
      summary: Settings#check_status
      description: Checks is call enabled
      operationId: Settings#check_status
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting%23check_statusResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting%23check_statusErrorResponse'
      deprecated: false
  /account/activate:
    put:
      tags:
      - settings
      summary: Settings#activate
      description: Add binding to entrance
      operationId: Settings#activate
      parameters:
      - name: data
        in: query
        description: 'encoded data'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/deactivate:
    put:
      tags:
      - settings
      summary: Settings#deactivate
      description: Remove binding to entrance
      operationId: Settings#deactivate
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings%23deactivateResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /account:
    patch:
      tags:
      - citizens
      summary: Citizens#update
      description: Update citizen
      operationId: Citizens#update
      parameters:
      - name: avatar
        in: query
        description: base64 encoded file following data URI scheme
        style: form
        explode: true
        schema:
          type: string
      - name: first_name
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: last_name
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: address_verified
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: apns or fcm token
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
    delete:
      tags:
      - citizens
      summary: Citizens#destroy
      description: Remove account
      operationId: Citizens#destroy
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23indexResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /account/feedback:
    post:
      tags:
      - feedback
      summary: Feedback#create
      description: ''
      operationId: Feedback#create
      parameters:
        - name: title
          in: query
          description: ''
          schema:
            type: string
        - name: text
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okStatusResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback%23createErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback%23createErrorResponse'
      deprecated: false
  /auth/register:
    post:
      tags:
      - auth
      summary: Auth#register
      description: Register user
      operationId: Auth#register
      parameters:
      - name: phone
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: confirmation_type
        in: query
        description: >-
          Confirmation code sending type:
           * `sms` - Send confirmation code via sms (default)
           * `call` - Send confirmation code via phone call
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/confirmation_type'
      security: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth%23registerResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /auth/register/confirm:
    post:
      tags:
      - auth
      summary: Auth#confirm
      description: Confirm user registration
      operationId: Auth#registerConfirm
      parameters:
      - name: phone
        in: query
        description: ''
        required: true
        schema:
          type: string
      - name: sms_code
        in: query
        description: ''
        required: true
        schema:
          type: string
      - name: platform
        in: query
        description: ''
        required: true
        schema:
          type: string
      security: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth%23registerConfirmResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citizens%23updateResponse'
      deprecated: false
  /auth/register/logout:
    post:
      tags:
      - auth
      summary: Auth#logout
      description: Register user
      operationId: Auth#registerLogout
      parameters: []
      security: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth%23logoutResponse'
      deprecated: false
  /account/auth_code:
    post:
      tags:
      - settings
      summary: Account#auth_code
      description: Get activation code
      operationId: Account#auth_code
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account%23auth_codeResponse'
      deprecated: false
  /account/package/status:
    put:
      tags:
      - packages
      summary: Account#package
      description: Activate packages. There is same route for deactivate below. Depends on 'enabled' param in query.
      operationId: Account#packageActivate
      parameters:
      - name: enabled
        in: query
        description: ''
        schema:
          type: boolean
      - name: amount
        in: query
        description: ''
        schema:
          type: string
      - name: payment_token
        in: query
        description: ''
        schema:
          type: string
      - name: use_payment_method
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account%23packageResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/package/status-:
    put:
      tags:
      - packages
      summary: Account#package
      description: Deactivate packages. There is same route for activate above. Depends on 'enabled' param in query. **Dash in route should not to be used**.
      operationId: Account#packageDeactivate
      parameters:
      - name: enabled
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okMessageSuccessResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/services/{name}/status:
    put:
      tags:
      - services
      summary: Account#servicesActivate
      description: Activate services. There is same route for deactivate below. Depends on 'enabled' param in query.
      operationId: Account#servicesActivate
      parameters:
      - name: enabled
        in: query
        description: ''
        schema:
          type: boolean
      - name: name
        in: path
        description: ''
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account%23servicesResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/services/{name}/status-:
    put:
      tags:
      - services
      summary: Account#servicesDeativate
      description: Activate services. There is same route for deactivate below. Depends on 'enabled' param in query. **Dash in route should not be used**.
      operationId: Account#servicesDeactivate
      parameters:
      - name: enabled
        in: query
        description: ''
        schema:
          type: boolean
      - name: name
        in: path
        description: ''
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account%23servicesResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /account/services:
    get:
      tags:
      - services
      summary: Services#index
      description: ''
      operationId: Services#index
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account%23servicesResponse'
      deprecated: false
  /services/disable:
    post:
      tags:
      - services
      summary: Services#disable
      description: ''
      operationId: Services#disable
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okStatusResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cameras%23indexException'
      deprecated: false
  /services:
    post:
      tags:
      - services
      summary: Services#create
      description: ''
      operationId: Services#create
      parameters:
        - name: amount
          in: query
          description: ''
          schema:
            type: string
        - name: payment_token
          in: query
          description: ''
          schema:
            type: string
        - name: use_payment_method
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services%23createResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /visitors:
    get:
      tags:
      - visitors
      summary: visitors#index
      description: ''
      operationId: visitors#index
      parameters:
      - name: page
        in: query
        description: ''
        schema:
          type: string
      - name: limit
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitors%23indexResponse'
      deprecated: false
  /call:
    get:
      tags:
      - calls
      summary: Calls#show
      description: Call show
      operationId: Calls#show
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calls%23showResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /call/accept:
    put:
      tags:
      - calls
      summary: Calls#accept
      description: Accept call
      operationId: Calls#accept
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthorizedError'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false
  /notifications/call_notify:
    post:
      tags:
      - calls
      summary: Notifications#call_notify
      description: '**`NOT IMPLEMENTED`** Call notify. Use api v1.'
      operationId: Notifications#call_notify
      parameters:
      - name: device_uuid
        in: query
        description: ''
        schema:
          type: string
      - name: flat_number
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/okResponse'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unprocessableError'
      deprecated: false

components:
  schemas:
    type:
      title: type
      enum:
      - intercom
      type: string
    Cameras#indexResponse:
      title: Cameras#indexResponse
      type: object
      properties:
        uuid:
          type: string
        stream_url:
          type: string
        embed:
          type: string
        thumb:
          type: string
        preview:
          type: string
        intercom:
          type: boolean
        intercom_uuid:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
    Cameras#indexException:
      title: Cameras#indexException
      type: object
      properties:
        error:
          type: string
    Citizens#showResponse:
      title: Citizens#showResponse
      type: object
      properties:
        state:
          type: string
        call_enabled:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        full_address:
          type: string
        avatar:
          type: string
        apartment:
          type: string
        fcm_token:
          type: string
        about:
          type: string
        call_type:
          type: string
        connected_service:
          type: boolean
        archive_enabled:
          type: boolean
        next_paument_date:
          type: string
        card_info:
          type: string
        payment_method_id:
          type: string
        services_paid_by_partner:
          type: boolean
        address_verification_required:
          type: boolean
    Citizens#updateResponse:
      title: Citizens#updateResponse
      type: object
      properties:
        message:
          type: string
    Citizens#flatUpdateResponse:
      title: Citizens#flatUpdateResponse
      type: object
      properties:
        state:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        full_address:
          type: string
        apartment:
          type: integer
        connected_service:
          type: boolean
        next_payment_date:
          type: string
        payment_method_id:
          type: string
        card_info:
          type: string
        services_paid_by_partner:
          type: boolean
    Settings#deactivateResponse:
      title: Settings#deactivateResponse
      type: object
      properties:
        message:
          type: string
    Settings#showResponse:
      title: Settings#sip
      type: object
      properties:
        sip_account:
          type: object
    Settings#tiePaymentCardResponse:
      title: Settings#tiePaymentCardResponse
      type: object
      properties:
        confirmation_url:
          type: string
    Setting#check_statusResponse:
      title: Settings#tiePaymentCardResponse
      type: object
      properties:
        state:
          type: boolean
        full_address:
          type: string
    Setting#check_statusErrorResponse:
      title: Settings#tiePaymentCardResponse
      type: object
      properties:
        error:
          type: string
          enum:
            [Not found]
    Citizens#indexResponse:
      title: Citizens#indexResponse
      type: object
      properties:
        message:
          type: string
    Calls#showResponse:
      title: Settings#sip
      type: object
      properties:
        call:
          type: object
    confirmation_type:
      title: confirmation_type
      enum:
      - sms
      - call
      type: string
    Auth#registerResponse:
      title: Auth#registerResponse
      type: object
      properties:
        message:
          type: string
    Auth#logoutResponse:
      title: Auth#registerResponse
      type: object
      properties:
        status:
          type: string
    Auth#registerConfirmResponse:
      title: Auth#registerConfirmResponse
      type: object
      properties:
        state:
          type: string
        jwt:
          type: string
    Account#auth_codeResponse:
      title: Account#auth_codeResponse
      type: object
      properties:
        code:
          type: string
    Account#packageResponse:
      title: Account#packageResponse
      type: object
      properties:
        confirmation_url:
          type: string
    Account#servicesResponse:
      title: Account#servicesResponse
      type: object
      properties:
        call_enabled:
          type: boolean
        face_recognition_enabled:
          type: boolean
        archive_enabled:
          type: boolean
        visitors_enabled:
          type: boolean
    Device#openResponse:
      title: Device#openResponse
      type: object
      properties:
        status:
          type: string
    Device#sputnik_videoResponse:
      title: Device#openResponse
      type: string
    Feedback#createErrorResponse:
      title: Feedback#createInputErrorResponse
      type: object
      properties:
        error:
          $ref: '#/components/schemas/feedbackError'
    Services#createResponse:
      title: Services#createResponse
      type: object
      properties:
        confirmation_url:
          type: string
    Visitors#indexResponse:
      title: Visitors#indexResponse
      type: object
    feedbackError:
      title: feedbackInputError
      type: object
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    okResponse:
      title: ok
      type: object
      properties:
        message:
          type: string
    okStatusResponse:
      title: ok
      type: object
      properties:
        status:
          type: string
          enum:
            [success]
    okMessageSuccessResponse:
      title: ok
      type: object
      properties:
        message:
          type: string
          enum:
            [success]
    notAuthorizedError:
      title: notAuthorizedError
      type: object
      properties:
        message:
          type: string
          enum:
            [Not Authorized]
    unprocessableError:
      title: unprocessableError
      type: object
      properties:
        error:
          type: string
  securitySchemes:
      jwt:
        type: apiKey
        description: API key to authorize requests.
        name: jwt
        in: header
security:
  - jwt: []
tags:
- name: auth
- name: calls
- name: cameras
- name: citizens
- name: devices
- name: settings
- name: services
- name: packages
- name: feedback
- name: visitors