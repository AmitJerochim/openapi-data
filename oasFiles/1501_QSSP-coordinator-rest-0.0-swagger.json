{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "coordinator rest",
    "description" : "QS coordinator rest service",
    "contact" : {
      "name" : "QS Qualit√§t und Sicherheit GmbH ",
      "url" : "http://www.q-s.de/",
      "email" : "info@q-s.de"
    },
    "version" : "0.0"
  },
  "tags" : [ {
    "name" : "coordinator"
  } ],
  "paths" : {
    "/coordinator/location" : {
      "get" : {
        "summary" : "gets the location detail",
        "description" : "returns the location detail information",
        "operationId" : "location",
        "parameters" : [ {
          "name" : "location_number",
          "in" : "query",
          "description" : "the location number",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "{276123456789012}"
        }, {
          "name" : "production_scope",
          "in" : "query",
          "description" : "the production scope of the location",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "example" : "{1001}"
        }, {
          "name" : "contact-persons",
          "in" : "query",
          "description" : "get the contact persons",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "audits",
          "in" : "query",
          "description" : "get the audits",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "blockages",
          "in" : "query",
          "description" : "get the blockages",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "updates the location details",
        "description" : "updates the location details",
        "operationId" : "location_update",
        "requestBody" : {
          "description" : "the location detail data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/create-bundle" : {
      "post" : {
        "summary" : "creates a bundle",
        "description" : "creates a bundle",
        "operationId" : "create_bundle",
        "requestBody" : {
          "description" : "the bundle data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/locations" : {
      "get" : {
        "summary" : "a list of location keys",
        "description" : "returns a list of location keys owned by the coordinator",
        "operationId" : "locations",
        "parameters" : [ {
          "name" : "updated-since",
          "in" : "query",
          "description" : "the date after an update happend",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "{2020-01-31}"
        }, {
          "name" : "unbundled",
          "in" : "query",
          "description" : "lists all unbundled locations",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LocationKey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/audits" : {
      "get" : {
        "summary" : "a list of audits",
        "description" : "Returns a list of audits. Either the update_since parameter must be set or the location_number and the production_scope must be set.",
        "operationId" : "audits",
        "parameters" : [ {
          "name" : "updated-since",
          "in" : "query",
          "description" : "the date after an update happend",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "{2020-01-31}"
        }, {
          "name" : "location_number",
          "in" : "query",
          "description" : "a location number",
          "schema" : {
            "type" : "string"
          },
          "example" : "{276123456789012}"
        }, {
          "name" : "production_scope",
          "in" : "query",
          "description" : "a production scope",
          "schema" : {
            "type" : "string"
          },
          "example" : "{1001}"
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuditDetail"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/location-split" : {
      "post" : {
        "summary" : "location split",
        "description" : "Splits a location in multiple locations. The primary location will receive all the attached data (audits, sample related data,...)",
        "operationId" : "location_split",
        "requestBody" : {
          "description" : "the split data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationSplit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/location-merge" : {
      "post" : {
        "summary" : "location merge",
        "description" : "Merges multiple locations into one. The new location will receive all the data from the primary location (audits, sample related data,...)",
        "operationId" : "location_merge",
        "requestBody" : {
          "description" : "the merge data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationSplit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/deregister-location" : {
      "post" : {
        "summary" : "deactivates an existing location",
        "description" : "deactivates an existing location",
        "operationId" : "deregister_location",
        "requestBody" : {
          "description" : "the location key",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationKey"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/login-status" : {
      "get" : {
        "summary" : "gets the login status of the scheme participant",
        "description" : "gets the login statusof the scheme participant.",
        "operationId" : "login_status",
        "parameters" : [ {
          "name" : "QsID",
          "in" : "query",
          "description" : "QS-ID of the scheme participant",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/check-location" : {
      "get" : {
        "summary" : "checks if a location exists in the database",
        "description" : "returns a list of location keys of an existing location, returns an empty list if the location doesn't exits",
        "operationId" : "check_location",
        "parameters" : [ {
          "name" : "location_number",
          "in" : "query",
          "description" : "the location number",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "production_scope",
          "in" : "query",
          "description" : "the production scope",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LocationKey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/scheme-participants" : {
      "get" : {
        "summary" : "a list of scheme participant QsID's",
        "description" : "returns a list of scheme participant QsID's owned by the coordinator",
        "operationId" : "scheme-participants",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/scheme-participant" : {
      "get" : {
        "summary" : "gets the scheme participant detail",
        "description" : "returns the scheme participant detail information",
        "operationId" : "scheme_participant",
        "parameters" : [ {
          "name" : "qs-id",
          "in" : "query",
          "description" : "the scheme participant QsID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemeParticipantResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "updates the scheme participant details",
        "description" : "updates the scheme participant details",
        "operationId" : "scheme_participant_update",
        "requestBody" : {
          "description" : "the scheme participant detail data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemeParticipantUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/activate-location" : {
      "post" : {
        "summary" : "activates an existing location",
        "description" : "activates an existing location",
        "operationId" : "activate_location",
        "requestBody" : {
          "description" : "the location key",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationKey"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/create-login" : {
      "post" : {
        "summary" : "creates the login of the scheme participants",
        "description" : "creates the login of the scheme participants.",
        "operationId" : "create-login",
        "requestBody" : {
          "description" : "The login status",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLogin"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/scheme-participant-id-update" : {
      "post" : {
        "summary" : "updates a QS-ID",
        "description" : "updates a scheme participant QS-ID",
        "operationId" : "scheme_participant_id_update",
        "requestBody" : {
          "description" : "the old and the new QS-ID",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QS-ID-Update"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/certification-scheme-update" : {
      "post" : {
        "summary" : "update the chertification scheme",
        "description" : "Updates the certification scheme an its related data (certification scheme, certification body, certificate validity)",
        "operationId" : "certification-scheme-update",
        "requestBody" : {
          "description" : "the certification data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificationData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/coordinator/location-key-update" : {
      "post" : {
        "summary" : "updates a location key",
        "description" : "updates a location key",
        "operationId" : "location_key_update",
        "requestBody" : {
          "description" : "the old and the new location key",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationKey-Update"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdditionalInformation" : {
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AdditionalInformationAnimal"
        }, {
          "$ref" : "#/components/schemas/AdditionalInformationCoordinator"
        }, {
          "$ref" : "#/components/schemas/AdditionalInformationFuitVegetablesPotatoes"
        }, {
          "$ref" : "#/components/schemas/AdditionalInformationTransport"
        } ]
      },
      "AdditionalInformationAnimal" : {
        "type" : "object",
        "properties" : {
          "livestock_farming_information" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LivestockFarming"
            }
          },
          "on_farm_mixer" : {
            "type" : "boolean"
          },
          "mobile_feed_milling_and_mixing_plants" : {
            "type" : "boolean"
          },
          "transport_less_than_50" : {
            "type" : "boolean"
          },
          "transport_less_than_65" : {
            "type" : "boolean"
          },
          "transport_over_50" : {
            "type" : "boolean"
          },
          "own_vehicles" : {
            "type" : "boolean"
          }
        }
      },
      "AdditionalInformationCoordinator" : {
        "type" : "object",
        "properties" : {
          "cattle_farming" : {
            "type" : "boolean"
          },
          "pig_farming" : {
            "type" : "boolean"
          },
          "poultry_farming" : {
            "type" : "boolean"
          },
          "livestock_transport" : {
            "type" : "boolean"
          },
          "crop_farming" : {
            "type" : "boolean"
          },
          "grassland_use_and_forage_production" : {
            "type" : "boolean"
          },
          "food_potato_production" : {
            "type" : "boolean"
          },
          "fruit_production" : {
            "type" : "boolean"
          },
          "vegetable_production" : {
            "type" : "boolean"
          }
        }
      },
      "AdditionalInformationFuitVegetablesPotatoes" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      },
      "AdditionalInformationTransport" : {
        "type" : "object",
        "properties" : {
          "transport_company" : {
            "type" : "boolean"
          },
          "own_vehicles" : {
            "type" : "boolean"
          },
          "transport_less_than_50" : {
            "type" : "boolean"
          },
          "transport_less_than_65" : {
            "type" : "boolean"
          },
          "transport_over_50" : {
            "type" : "boolean"
          }
        }
      },
      "AuditDetail" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "format" : "date-time"
          },
          "to" : {
            "type" : "string",
            "format" : "date-time"
          },
          "certification_body" : {
            "type" : "string"
          },
          "auditor" : {
            "type" : "string"
          },
          "releasing_person" : {
            "type" : "string"
          },
          "authorisation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "audit_type" : {
            "type" : "string",
            "enum" : [ "ANNOUNCED_SYSTEM_AUDIT", "UNANNOUNCED_SYSTEM_AUDIT", "SPOT_AUDIT", "RANDOM_SAMPLE_AUDIT", "AUDIT_OF_SPECIAL_PURPOSE", "PARALLEL_AUDIT" ]
          },
          "info_compined_audit" : {
            "type" : "string"
          },
          "general_ko" : {
            "type" : "boolean"
          },
          "general_ko_comment" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "audit_result" : {
            "type" : "string",
            "enum" : [ "STATUS_1", "STATUS_2", "STATUS_3", "STATUS_4", "PASSED", "FAILED" ]
          },
          "far" : {
            "type" : "number",
            "format" : "float"
          },
          "proportion_of_c_evaluations" : {
            "type" : "number",
            "format" : "float"
          },
          "proportion_of_d_evaluations" : {
            "type" : "number",
            "format" : "float"
          },
          "proportion_of_cd_evaluations" : {
            "type" : "number",
            "format" : "float"
          },
          "audited_location" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuditedLocation"
            }
          },
          "checkpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Checkpoints"
            }
          },
          "corrective_actions_report" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrectiveActionsReport"
            }
          }
        }
      },
      "AuditedLocation" : {
        "type" : "object",
        "properties" : {
          "location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "production_scope" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inspection_working_and_social_conditions_requested" : {
            "type" : "boolean"
          },
          "additional_information" : {
            "$ref" : "#/components/schemas/AdditionalInformation"
          }
        }
      },
      "Blockage" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "from" : {
            "type" : "string",
            "format" : "date"
          },
          "to" : {
            "type" : "string",
            "format" : "date"
          },
          "info" : {
            "type" : "string"
          }
        }
      },
      "BundleData" : {
        "type" : "object",
        "properties" : {
          "bundle_name" : {
            "type" : "string"
          },
          "bundle_number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationKey"
            }
          }
        }
      },
      "CertificationDataDetail" : {
        "type" : "object",
        "properties" : {
          "certification_body" : {
            "type" : "string"
          },
          "certification_scheme" : {
            "type" : "string",
            "enum" : [ "QS", "QS_GAP", "GLOBAL_GAP", "GLOBAL_GAP_OPT1_CMS", "GLOBAL_GAP_OPT2", "AMA_RIND", "AMA_GAP", "IKB_LAND", "CODIPLAN", "QM_MILCH", "DECLARATION_OF_COMMITMENT_ANTIBIOTICA", "DECLARATION_OF_COMMITMENT_SALMONELLA", "DECLARATION_OF_COMMITMENT_ANTIBIOTICA_SALMONELLA" ]
          },
          "inspected_production_scope" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approved_production_scope" : {
            "type" : "integer",
            "format" : "int32"
          },
          "auditing" : {
            "type" : "string",
            "enum" : [ "UNANNOUNCED_SYSTEM", "UNANNOUNCED_SPOT", "UNANNOUNCED_SYSTEM_SPOT" ]
          },
          "eligible_to_deliver_until" : {
            "type" : "string",
            "format" : "date"
          },
          "blocked" : {
            "type" : "boolean"
          }
        }
      },
      "Checkpoints" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          },
          "requirement" : {
            "type" : "string"
          },
          "evaluation" : {
            "type" : "string",
            "enum" : [ "A", "B", "C", "D", "E", "KO" ]
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "ContactPerson" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "salutation" : {
            "type" : "string",
            "enum" : [ "EMPTY", "MR", "MRS", "COMPANY" ]
          },
          "title" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CONTACT_PERSON", "ASSISTANT_CONTACT", "LEGAL_REPRESENTATIVE", "CRISIS_MANAGER" ]
          },
          "phone1" : {
            "type" : "string"
          },
          "phone2" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "mail" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string",
            "enum" : [ "GERMAN", "ENGLISH", "SPAIN" ]
          }
        }
      },
      "CorrectiveActionsReport" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          },
          "description_of_nonconformity" : {
            "type" : "string"
          },
          "agreed_corrective_actions" : {
            "type" : "string"
          },
          "production_branch" : {
            "type" : "string",
            "enum" : [ "CATTLE", "PIG", "POULTRY", "POTATO", "FRUIT_VEGETABLE", "TRANSPORT" ]
          },
          "deadline_for_correction" : {
            "type" : "string",
            "format" : "date"
          },
          "implemented" : {
            "type" : "string",
            "format" : "date"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "LivestockFarming" : {
        "type" : "object",
        "properties" : {
          "production_scope" : {
            "type" : "integer",
            "format" : "int32"
          },
          "indoor" : {
            "type" : "boolean"
          },
          "indoor_places" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outdoor" : {
            "type" : "boolean"
          },
          "outdoor_places" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LocationDetail" : {
        "type" : "object",
        "properties" : {
          "location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "name" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "postal_code" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "post_office_box_postal_code" : {
            "type" : "string"
          },
          "post_office_box" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO-3166 NUMERIC"
          },
          "federal_state" : {
            "type" : "string",
            "description" : "only mandatory for country germany",
            "enum" : [ "BADEN_WUERTTEMBERG", "BAYERN", "BERLIN", "BRANDENBURG", "BREMEN", "HAMBURG", "HESSEN", "MECKLENBURG_VORPOMMERN", "NIEDERSACHSEN", "NORDRHEIN_WESTFALEN", "RHEINLAND_PFALZ", "SAARLAND", "SACHSEN", "SACHSEN_ANHALT", "SCHLESWIG_HOLSTEIN", "THUERINGEN", "UNKNOWN" ]
          },
          "url" : {
            "type" : "string"
          },
          "location_plan" : {
            "type" : "string"
          },
          "registration_number" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegistrationNumber"
            }
          },
          "contact_person" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPerson"
            }
          },
          "certification_data" : {
            "$ref" : "#/components/schemas/CertificationDataDetail"
          },
          "blockages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Blockage"
            }
          },
          "none_blocking" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoneBlocking"
            }
          },
          "audits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuditDetail"
            }
          },
          "scheme_participant" : {
            "type" : "string",
            "description" : "QS-ID"
          },
          "bundle" : {
            "$ref" : "#/components/schemas/BundleData"
          },
          "vlog" : {
            "type" : "boolean"
          },
          "regionalfenster" : {
            "type" : "boolean"
          },
          "fias" : {
            "type" : "boolean"
          },
          "fias_passed" : {
            "type" : "boolean"
          },
          "family_business" : {
            "type" : "boolean"
          },
          "location_status" : {
            "type" : "string",
            "enum" : [ "STATUS_1", "STATUS_2", "STATUS_3", "STATUS_4", "APPLICANT", "BUNDLE_MEMBER", "CERTIFIED", "PASSED", "FAILED" ]
          }
        }
      },
      "LocationKey" : {
        "type" : "object",
        "properties" : {
          "location_number" : {
            "type" : "string"
          },
          "production_scope" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LocationResponse" : {
        "type" : "object",
        "properties" : {
          "return_code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error_messages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDetail"
          }
        }
      },
      "NoneBlocking" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "from" : {
            "type" : "string",
            "format" : "date"
          },
          "to" : {
            "type" : "string",
            "format" : "date"
          },
          "info" : {
            "type" : "string"
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          },
          "area" : {
            "type" : "number"
          }
        }
      },
      "RegistrationNumber" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "GLOBAL_GAP", "IKB_LAND", "CODIPLAN" ]
          },
          "number" : {
            "type" : "string"
          }
        }
      },
      "Response" : {
        "type" : "object",
        "properties" : {
          "return_code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error_messages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LocationSplit" : {
        "type" : "object",
        "properties" : {
          "update_type" : {
            "type" : "string",
            "enum" : [ "OVERWRITE", "NEW" ]
          },
          "primary_location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "new_location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "old_location_keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationKey"
            }
          }
        }
      },
      "LoginStatus" : {
        "type" : "object",
        "properties" : {
          "login_status" : {
            "type" : "string",
            "enum" : [ "NO_LOGIN", "LOGIN_ACTIVE", "TOKEN_ACTIVE", "TOKEN_INACTIVE" ]
          },
          "login" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "validUntil" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "LoginStatusResponse" : {
        "type" : "object",
        "properties" : {
          "return_code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error_messages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "loginStatus" : {
            "$ref" : "#/components/schemas/LoginStatus"
          }
        }
      },
      "LocationUpdate" : {
        "type" : "object",
        "properties" : {
          "update_type" : {
            "type" : "string",
            "enum" : [ "OVERWRITE", "NEW" ]
          },
          "location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "name" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "postal_code" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "post_office_box_postal_code" : {
            "type" : "string"
          },
          "post_office_box" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO-3166 NUMERIC"
          },
          "federal_state" : {
            "type" : "string",
            "description" : "only mandatory for country germany",
            "enum" : [ "BADEN_WUERTTEMBERG", "BAYERN", "BERLIN", "BRANDENBURG", "BREMEN", "HAMBURG", "HESSEN", "MECKLENBURG_VORPOMMERN", "NIEDERSACHSEN", "NORDRHEIN_WESTFALEN", "RHEINLAND_PFALZ", "SAARLAND", "SACHSEN", "SACHSEN_ANHALT", "SCHLESWIG_HOLSTEIN", "THUERINGEN", "UNKNOWN" ]
          },
          "url" : {
            "type" : "string"
          },
          "location_plan" : {
            "type" : "string"
          },
          "contact_person" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPerson"
            }
          },
          "scheme_participant" : {
            "$ref" : "#/components/schemas/SchemeParticipantUpdate"
          },
          "vlog" : {
            "type" : "boolean"
          },
          "regionalfenster" : {
            "type" : "boolean"
          },
          "fias" : {
            "type" : "boolean"
          },
          "fias_passed" : {
            "type" : "boolean"
          },
          "family_business" : {
            "type" : "boolean"
          }
        }
      },
      "SchemeParticipantUpdate" : {
        "type" : "object",
        "properties" : {
          "qsID" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "postal_code" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "post_office_box_postal_code" : {
            "type" : "string"
          },
          "post_office_box" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO-3166 NUMERIC"
          },
          "federal_state" : {
            "type" : "string",
            "description" : "only mandatory for country germany",
            "enum" : [ "BADEN_WUERTTEMBERG", "BAYERN", "BERLIN", "BRANDENBURG", "BREMEN", "HAMBURG", "HESSEN", "MECKLENBURG_VORPOMMERN", "NIEDERSACHSEN", "NORDRHEIN_WESTFALEN", "RHEINLAND_PFALZ", "SAARLAND", "SACHSEN", "SACHSEN_ANHALT", "SCHLESWIG_HOLSTEIN", "THUERINGEN", "UNKNOWN" ]
          },
          "url" : {
            "type" : "string"
          },
          "location_plan" : {
            "type" : "string"
          },
          "registration_number" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegistrationNumber"
            }
          },
          "contact_person" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPerson"
            }
          }
        }
      },
      "SchemeParticipantDetail" : {
        "type" : "object",
        "properties" : {
          "qsID" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "postal_code" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "post_office_box_postal_code" : {
            "type" : "string"
          },
          "post_office_box" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO-3166 NUMERIC"
          },
          "federal_state" : {
            "type" : "string",
            "description" : "only mandatory for country germany",
            "enum" : [ "BADEN_WUERTTEMBERG", "BAYERN", "BERLIN", "BRANDENBURG", "BREMEN", "HAMBURG", "HESSEN", "MECKLENBURG_VORPOMMERN", "NIEDERSACHSEN", "NORDRHEIN_WESTFALEN", "RHEINLAND_PFALZ", "SAARLAND", "SACHSEN", "SACHSEN_ANHALT", "SCHLESWIG_HOLSTEIN", "THUERINGEN", "UNKNOWN" ]
          },
          "url" : {
            "type" : "string"
          },
          "location_plan" : {
            "type" : "string"
          },
          "registration_number" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegistrationNumber"
            }
          },
          "contact_person" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPerson"
            }
          }
        }
      },
      "SchemeParticipantResponse" : {
        "type" : "object",
        "properties" : {
          "return_code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error_messages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scheme_participant" : {
            "$ref" : "#/components/schemas/SchemeParticipantDetail"
          }
        }
      },
      "CreateLogin" : {
        "type" : "object",
        "properties" : {
          "qsID" : {
            "type" : "string"
          },
          "sendMail" : {
            "type" : "boolean"
          }
        }
      },
      "QS-ID-Update" : {
        "type" : "object",
        "properties" : {
          "old_QsID" : {
            "type" : "string"
          },
          "new_QsID" : {
            "type" : "string"
          }
        }
      },
      "CertificationData" : {
        "type" : "object",
        "properties" : {
          "location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "certification_body" : {
            "type" : "string",
            "description" : "required for QS and QS_GAP"
          },
          "certification_scheme" : {
            "type" : "string",
            "enum" : [ "QS", "QS_GAP", "GLOBAL_GAP", "GLOBAL_GAP_OPT1_CMS", "GLOBAL_GAP_OPT2", "AMA_RIND", "AMA_GAP", "IKB_LAND", "CODIPLAN", "QM_MILCH", "DECLARATION_OF_COMMITMENT_ANTIBIOTICA", "DECLARATION_OF_COMMITMENT_SALMONELLA", "DECLARATION_OF_COMMITMENT_ANTIBIOTICA_SALMONELLA" ]
          },
          "certificate_runtime" : {
            "type" : "string",
            "format" : "date"
          },
          "production_scope" : {
            "type" : "integer",
            "description" : "required for QS/QS_GAP",
            "format" : "int32"
          },
          "registration_number" : {
            "type" : "string"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      },
      "LocationKey-Update" : {
        "type" : "object",
        "properties" : {
          "update_type" : {
            "type" : "string",
            "enum" : [ "OVERWRITE", "NEW" ]
          },
          "old_location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          },
          "new_location_key" : {
            "$ref" : "#/components/schemas/LocationKey"
          }
        }
      }
    }
  }
}