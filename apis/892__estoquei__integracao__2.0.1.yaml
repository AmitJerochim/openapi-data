penapi: 3.0.2
info:
  version: "2.0.1"
  title: 'Estoquei'
  description: 'API para integração com o Estoquei'
paths: 
  /api/integracao/v2/login:
    post:
      tags: [Acesso]
      description: API para validação das credenciais e geração do token de autorização.
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              required:
                - usuario
                - senha
              properties: 
                usuario:
                  type: string
                senha: 
                  type: string
      responses:
        '200':
          description: Acesso autorizado
          content:
            application/json:
              schema:
                type: object
                properties: 
                  token:
                    type: string
                    description: Token que deverá ser utilizado no header das requisições das demais APIs.
                    example: AsR35XCKbLzk+bjvMasd12e1sZ0+Cz5YyHnSxclMoNjaQdNhM9qsYQaXvOqasd123123fv45t+hNfpuOQgDjpma2GiQC95Ha2kn9F
        '401':
          description: Usuário ou senha inválida ou sem permissão para utilização da API de integração
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message:
                    type: string
                    description: Mensagem indicando que as credenciais são inválidas
                    example: Acesso não autorizado
                    
  /api/integracao/v2/estabelecimento:
    post:
      description: API para criação e atualização de estabelecimentos.
      tags: [Estabelecimento]
      security: 
        - bearedAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'Estabelecimento no qual os produtos estão armazenados. <br>Todas as pessoas físicas ou jurídicas cadastradas no Estoquei são armazenadas na mesma estrutura de dados, portanto os atributos indicados com "unique: true" deverão ter um valor único entre todas as pessoas cadastradas.'
              required:
                - id
                - apelido
                - razaoSocial
                - nomeFantasia
                - cnpj
                - endereco
                - telefone
                - inscricaoEstadual
              properties:
                id:
                  type: string
                  description: ID (chave primária) do estabelecimento no sistema que você está integrado ao Estoquei. (unique=true)
                  maxLength: 100
                  example: 10
                apelido:
                  type: string
                  description: Nome amigável que identifica o estabelecimento, de forma inequívoca, dentro de sua corporação. Não confundir com o nome de fantasia, que geralmente é único para todas as matrizes e filiais de sua corporação e é voltado à identificação de sua marca pelo cliente. (unique=true)
                  maxLength: 50
                  example: CD Fortaleza
                razaoSocial:
                  type: string
                  description: Razão social do estabelecimento.
                  maxLength: 250
                  example: Minha empresa ltda
                nomeFantasia:
                  type: string
                  description: Nome de fantasia do estabelecimento.
                  maxLength: 100
                  example: Minha empresa
                cnpj:
                  type: string
                  description: CNPJ do estabelecimento. Pode ser informado com ou sem máscara. (unique=true)
                  minLength: 11
                  maxLength: 18
                  example: 50.311.267/0001-78
                inscricaoEstadual:
                  type: string
                  description: Inscrição estadual do estabelecimento. Pode ser informada com ou sem máscara.
                  maxLength: 100
                  example: 12345641-7
                endereco:
                  description: 'Endereço real do estabelecimento, de onde os produtos sairão. Eventualmente poderá ser diferente do endereço fiscal, quando a empresa muda de endereço antes de atualizar seu cadastro junto a SEFAZ.<br>Este endereço será usado na geração de rotas para entrega dos produtos.<br>Este endereço não será apresentado nos documentos fiscais emitidos pelo sistema.'
                  allOf:
                    - $ref: '#/components/schemas/Endereco'
                enderecoFiscal:
                  description: 'Endereço fiscal do estabelecimento.<br>Este endereço irá constar nos documentos regulados pelo fisco (ex: NFe, MDFe etc).<br>Caso seja omitido o Estoquei irá assumir o valor informado no atributo endereço como sendo o endereço fiscal.'
                  allOf:
                    - $ref: '#/components/schemas/Endereco'                    
                email: 
                  type: string
                  format: email
                  maxLength: 100
                  example: exemplo@teste.com.br
                telefone:
                  type: string
                  format: phone
                  maxLength: 20
                  example: (85) 99999-1200
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/integracao/v2/produto:
    post:
      description: API para criação e atualização de produtos.
      tags: [Produto]
      security: 
        - bearedAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'Produto que será movimentado dentro do CD.'
              required:
                - id
                - codigo
                - nome
                - altura
                - largura
                - comprimento
                - unidadeMedida
              properties:
                id: 
                  type: string
                  maxLength: 100
                  description: ID (chave primária) do produto no sistema que está sendo integrado ao Estoquei. (unique=true)
                  example: 10
                codigo:
                  type: string
                  maxLength: 50
                  description: Referência interna do produto. Nome ou número, reduzido, adotado por sua empresa para identificar o produto em sem sistema.
                  example: 'Paracetamol'
                descricao: 
                  type: string
                  maxLength: 250
                  description: Descrição do produto.
                altura:
                  type: number
                  description: Altura do produto. Deverá ser informada na mesma unidade de medida adotada para os locais de armazenagem dos produtos (os endereços de armazenagem).
                largura:
                  type: number
                  description: Largura do produto. Deverá ser informada na mesma unidade de medida adotada para os locais de armazenagem dos produtos (os endereços de armazenagem).
                comprimento:
                  type: number
                  description: Comprimento do produto. Deverá ser informado na mesma unidade de medida adotada para os locais de armazenagem dos produtos (os endereços de armazenagem).      
                unidadeMedida:
                  allOf:
                    - $ref: '#/components/schemas/UnidadeMedida'
                loteObrigatorio: 
                  type: boolean
                  default: false
                  description: Indica se o Estoquei deverá exigir que o lote seja informado quando o produto for movimentado dentro do CD.
                validadeDoLoteObrigatoria:
                  type: boolean
                  default: false
                  description: Indica se o Estoquei deverá exigir que a data de validade do lote seja informada quando o produto for inventariado ou conferido em seu recebimento.
                fabricacaoDoLoteObrigatoria:
                  type: boolean
                  default: false
                  description: Indica se o Estoquei deverá exigir que a data de fabricação do lote seja informada quando o produto for inventariado ou conferido em seu recebimento.
                pesoBruto:
                  type: number
                pesoLiquido:
                  type: number
                multiploMovimentacao:
                  type: integer
                  default: 1
                  description: 'Indica ao Estoquei que sempre que o produto for movimentado deverá ser em uma quantidade múltipla da que foi informada neste atributo. Ex: Se for informado neste atributo o valor 10, o sistema só permitirá que os usuários transfiram de um local para outro 10 unidades, 20 unidades, 30 unidades etc, não permitindo, por exemplo, transferir 11 unidades.'
                instrucaoEmbalagem:
                  type: string
                  description: Mensagem de texto que deverá ser exibida aos usuários no momento que o produto estiver sendo embalado para envio, no processo de separação.
                idFabricante:
                  type: string
                  description: 'ID do fabricante. Deverá estar previamente cadastrado.'

      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
          
  /api/integracao/v2/produto/{idProduto}/gtin/{codigoGtin}:
    post:
      description: API para o cadastro de códigos GTIN (anteriormente chamado de EAN) dos produtos. Caso o código já exista para o produto referenciado o Estoquei irá atualizar o restante dos dados informados no Body.
      tags: [Produto - GTIN]
      security: 
        - bearedAuth: []
      parameters:
        - in: path
          name: idProduto
          required: true
          schema:
            type: string
          description: ID do produto.
        - in: path
          name: codigoGtin
          required: true
          schema:
            type: string
          description: Código GTIN do produto.          
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: 'Dados adicionais associados ao GTIN.'
              properties:
                quantidade:
                  type: integer
                  default: 1
                  description: Quando este código de barras for lido em qualquer tela do aplicativo a quantidade informada pelo usuário será multiplicada pela quantidade definida neste atributo.<br>Utilize esta funcionalidade quando o produto for armazenado e movimentado em caixas para que o usuário não precise realizar a leitura de cada produto dentro da caixa.
                deveGerarVolume:
                  type: boolean
                  default: false
                  description: Indica se o Estoquei deverá gerar um volume automaticamente quando este código for lido durante o processo de embalagem.
                alturaVolume:
                  type: number
                  description: Altura do volume que será criado caso o atributo deveGerarVolume tiver o valor true.
                larguraVolume:
                  type: number
                  description: Largura do volume que será criado caso o atributo deveGerarVolume tiver o valor true.
                comprimentoVolume:
                  type: number
                  description: Comprimento do volume que será criado caso o atributo deveGerarVolume tiver o valor true.
                pesoBrutoVolume:
                  type: number
                  description: Peso bruto do volume que será criado caso o atributo deveGerarVolume tiver o valor true.
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/ProdutoNotFoundError'
        '500':
          $ref: '#/components/responses/InternalError'
          
    delete:
      description: API para cadastro de códigos GTIN dos produtos.
      tags: [Produto - GTIN]
      security: 
        - bearedAuth: []                  
      parameters:
        - in: path
          name: idProduto
          required: true
          schema:
            type: string
          description: ID do produto.
        - in: path
          name: codigoGtin
          required: true
          schema:
            type: string
          description: Código GTIN do produto.
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/ProdutoNotFoundError'          
        '500':
          $ref: '#/components/responses/InternalError'          
                  
  /api/integracao/v2/produto/{idProduto}/armazenagem:
    post:
      description: API para o cadastro de regras de armazenagem dos produtos.
      tags: [Produto - Regras de armazenagem]
      security: 
        - bearedAuth: []
      parameters:
        - in: path
          name: idProduto
          required: true
          schema:
            type: string
          description: ID do produto.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depositos:
                  type: array
                  description: Lista dos depósitos/endereços fixos do produto.<br>Quando um endereço fixo é definido para o produto, ele somente poderá ser armazenado neste endereço.<br>O endereço fixo deverá estar cadastrado previamente no Estoquei.
                  items: 
                    type: object
                    required:
                      - nome
                      - idEstabelecimento
                    properties:
                      nome:             
                        type: string
                        description: Nome do endereço fixo.
                        example: A-01-B-01
                      cnpjEstabelecimento:
                        type: string
                        description: ID do estabelecimento que o endereço fixo pertence.
                        example: 50.311.267/0001-78
                subtiposDeposito:
                  type: array
                  description: 'Lista de substipos de depósito/endereços nos quais o produto poderá ser armazenado.<br>
                    O subtipo de depósito é uma subclassificação de um depósito. Ex: Nos depósitos destinado aos produtos em quarentena (tipo "quarentena") alguns são do subtipo "câmara fria".<br>
                    O subtipo de depósito deverá estar cadastrado previamente no Estoquei.'
                  items: 
                    type: object
                    required:
                      - subtipo
                      - cnpjEstabelecimento
                    properties:
                      subtipo:             
                        type: string
                        description: Nome do subtipo de depósito.
                        example: Câmara fria
                      cnpjEstabelecimento:
                        type: string
                        description: CNPJ do estabelecimento que o endereço fixo pertence.
                        example: 50.311.267/0001-78
                      prioridade:
                        type: integer
                        default: 1
                        description: Caso o produto possa ser armazenado em mais de um subtipo de depósito, é possível determinar através deste atributo a prioridade de escolha na hora da geração do mapa de internação.
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401': 
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/ProdutoNotFoundError'
        '500':
          $ref: '#/components/responses/InternalError'                   
  
  /api/integracao/v2/custo/{idEstabelecimento}:
    post:
      description: API para informar o custo dos produtos em um estabelecimento
      tags: [Custo]
      security: 
        - bearedAuth: []
      parameters:
        - in: path
          name: idEstabelecimento
          required: true
          schema:
            type: string
          description: ID do estabelecimento.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: Array contendo os custos dos produtos.
              items:
                type: object
                required:
                  - idProduto
                  - custo
                properties:
                  idProduto:
                    type: string
                    description: ID do produto.
                    example: COO123
                  custo:
                    type: number
                    description: Custo do produto.
                    example: 2340.12
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401': 
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: O ID informado em um dos dados cadastrais não foi encontrado.
          content:
            application/json:
              schema:        
                oneOf:
                  - $ref: '#/components/responses/ProdutoNotFoundError'
                  - $ref: '#/components/responses/EstabelecimentoNotFoundError'      
              examples:
                Produto não encontrado:
                  value:
                    message: Nenhum produto foi encontrado com o ID '123131231'
                Estabelecimento não encontrado:
                  value:
                    message: Nenhum estabelecimento foi encontrada com o ID 'xxxxxxxxx'
        '500':
          $ref: '#/components/responses/InternalError'
          
  /api/integracao/v2/custo/{idEstabelecimento}/{idProduto}:          
    get:
      description: API para consultar o custo de um produto em um estabelecimento
      tags: [Custo]
      security: 
        - bearedAuth: []
      parameters:
        - in: path
          name: idEstabelecimento
          required: true
          schema:
            type: string
          description: ID do estabelecimento.
        - in: path
          name: idProduto
          required: true
          schema:
            type: string
          description: ID do produto.          
      responses:
        '200':
          description: Objeto contendo o custo do produto.
          content:
            application/json:
              schema:
                type: object
                required: 
                  - custo
                properties:
                  custo:
                    type: number
                    description: Custo do produto
                    example: 3129.99
                    
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401': 
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: O ID informado em um dos dados cadastrais não foi encontrado.
          content:
            application/json:
              schema:        
                oneOf:
                  - $ref: '#/components/responses/ProdutoNotFoundError'
                  - $ref: '#/components/responses/EstabelecimentoNotFoundError'      
              examples:
                Produto não encontrado:
                  value:
                    message: Nenhum produto foi encontrado com o ID '123131231'
                Estabelecimento não encontrado:
                  value:
                    message: Nenhum estabelecimento foi encontrada com o ID 'xxxxxxxxx'
        '500':
          $ref: '#/components/responses/InternalError'          
          
  /api/integracao/v2/ordemderecebimento:
    post:
      description: API para recebimento de notas fiscais de entrada.
      tags: [Ordem de recebimento]
      security: 
        - bearedAuth: []      
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              description: 'Operação que representa um documento (fiscal ou não) que contém a lista de produtos que deverão ser recebidos pelo estabelecimento.'
              required:
                - idEmitente
                - documento
                - tipoOperacao
                - cnpjEstabelecimento
                - previsaoRecebimento
                - emitente
                - itens
                - previsaoChegada
              properties:
                idEmitente: 
                  type: string
                  description: ID do emitente. O emitente pode ser um cliente, fornecedor ou estabelecimento.
                  example: '12313133'
                documento:
                  type: object
                  description: Documento que identifica o recebimento dos produtos.
                  required: 
                    - numero
                    - serie
                    - tipo
                    - emissao
                  properties:
                    numero: 
                      type: integer
                      description: Número do documento. Somente poderá haver um documento e série por emitente. Caso um segundo documento com o mesmo número, série e emitente for enviado, o sistema irá tentar substituí-lo, podendo esta ação ser recusada caso o documento já esteja em atendimento.
                      example: 25854
                    serie:
                      type: integer
                      description: 'Série do documento. Para documentos que não possuem série informe um valor arbitrário (ex: 1).'
                      example: 1
                    tipo:
                      type: string
                      description: 'Tipo do documento. Texto livre.'
                      example: 'NFe'
                    emissao:
                      type: string
                      format: date-time
                      maxLength: 20
                      minLength: 20
                      example: '2019-12-31T17:32:28Z'
                      description: 'Data e hora de emissão do documento.'
                tipoOperacao:
                  type: string
                  description: Tipo da operação. Texto livre usado para identificar o tipo de operação que está motivando a entrada dos produtos (ex compra, devolução de cliente etc).
                  maxLength: 100
                  example: 'Compra'
                previsaoRecebimento:
                  type: string
                  format: date-time
                  example: '2019-12-31T17:32:28Z'
                  description: 'Data e hora prevista para recebimento dos produtos. A data e hora informada neste atributo afetaram a ordenação das ordens de recebimento na tela de gerenciamento de recebimento de produtos.'
                cnpjEstabelecimento:
                  type: string
                  description: CNPJ do estabelecimento que irá receber os produtos. Pode ser informado com ou sem máscara.
                  example: 50.311.267/0001-78
                itens:
                  type: array
                  minItems: 1
                  description: Array contendo a lista de itens que deverão ser recebidos.
                  items: 
                    type: object
                    required:
                      - produto
                      - quantidade
                    properties:
                      produto:
                        type: string
                        description: ID do produto
                        example: '12311344'
                      lote:
                        description: Lote que será recebido. Será obrigatório se o produto estiver configurado para exigir o lote no recebimento e o atributo informarLoteNoRecebimento deste objeto for igual a true.
                        allOf:
                          - $ref: '#/components/schemas/Lote'
                      informarLoteNoRecebimento: 
                        type: boolean
                        default: false
                        description: Caso seja informado o valor true neste atributo o sistema não irá exigir os dados do lote somente quando o usuário for conferir os produtos recebidos.
                        example: false
                      quantidade:
                        type: integer
                        description: Quantidade que será recebida
                        example: 10
                observacao:
                  type: string
                  maxLength: 2000       
                  description: Observação que deverá ser exibida na tela de gerenciamento de recebimento de produtos.
                  example: Não desmontar os paletes ao receber os produtos.
            examples:
              Sem lote:
                value:
                  documento:
                    emitente: '12313133'
                    numero: 25854
                    serie: 1
                    tipo: NFe
                    emissao: '2019-12-31T17:32:28Z'
                  tipoOperacao: Compra
                  previsaoRecebimento: '2019-12-31T17:32:28Z'
                  cnpjEstabelecimento: 50.311.267/0001-78
                  itens:
                    - produto: '12312321'
                      quantidade: 10
                    - produto: '98123787123'
                      quantidade: 2
                  observacao: Não desmontar os paletes ao receber os produtos.
              Com lote:
                value:
                  documento:
                    emitente: '12313133'
                    numero: 25854
                    serie: 1
                    tipo: NFe
                    emissao: '2019-12-31T17:32:28Z'
                  tipoOperacao: Compra
                  previsaoRecebimento: '2019-12-31T17:32:28Z'
                  cnpjEstabelecimento: 50.311.267/0001-78
                  itens:
                    - produto: '12312321'
                      quantidade: 10
                      lote:
                        numero: '123A34'
                        validade: '2020-12-31'
                        fabricacao: '2019-12-31'
                    - produto: '98123787123'
                      quantidade: 2
                  observacao: Não desmontar os paletes ao receber os produtos.           
              Com lote informado no recebimento:
                value:
                  documento:
                    emitente: '12313133'
                    numero: 25854
                    serie: 1
                    tipo: NFe
                    emissao: '2019-12-31T17:32:28Z'
                  tipoOperacao: Compra
                  previsaoRecebimento: '2019-12-31T17:32:28Z'
                  cnpjEstabelecimento: 50.311.267/0001-78
                  itens:
                    - produto: '12312321'
                      quantidade: 10
                      informarLoteNoRecebimento: true
                    - produto: '98123787123'
                      quantidade: 2
                  observacao: Não desmontar os paletes ao receber os produtos.                      
      responses:
        '200':
          $ref: '#/components/responses/OperationOk'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: O ID informado em um dos dados cadastrais não foi encontrado.
          content:
            application/json:
              schema:        
                oneOf:
                  - $ref: '#/components/responses/ProdutoNotFoundError'
                  - $ref: '#/components/responses/PessoaNotFoundError'      
              examples:
                Produto não encontrado:
                  value:
                    message: Nenhum produto foi encontrado com o ID '123131231'
                Pessoa não encontrada:
                  value:
                    message: Nenhuma pessoa foi encontrada com o ID 'xxxxxxxxx'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Pessoa:
      type: object
      description: >
        Pessoa associada a uma operação.<br>
        Poderá ser seu estabelecimento ou um fornecedor, cliente ou funcionário.<br>
        O cadastro de pessoa é único, não sendo possível cadastrar a mesma pessoa como cliente e funcionário, por exemplo.
      required:
        - codigo
        - nome
        - cnpjCpf
        - tipo
        - logradouro
        - numero
        - bairro
        - localidade
        - uf
        - cep
      properties:
        codigo:
          type: string
          description: Nome amigável (apelido) que identifica a pessoa de forma inequívoca.
          maxLength: 50
        nome:
          type: string
          description: Nome ou razão social da pessoa
          maxLength: 250
        cnpjCpf:
          type: string
          description: CNPJ ou CPF da pessoa. Pode ser informado com ou sem máscara.
          minLength: 11
          maxLength: 18
          example: 50.311.267/0001-78
        tipo:
          type: integer
          enum: 
            - 2
            - 4
            - 5
          description: > 
            Tipo da pessoa. Informe o tipo que qualifica a pessoa na maioria das operações que ela realiza junto a sua empresa. Se uma pessoa é um funcionário seu mas eventualmente realizada compras em sua empresa (se comporta como cliente), você deverá cadastrá-lo como funcionário.<br>
            Informe:
              * 2 para estabelecimento
              * 4 para fornecedor
              * 5 para cliente
        logradouro:
          type: string
          maxLength: 300
          description: Logradouro do endereço da pessoa
        numero:
          type: string
          maxLength: 10
          description: Número do endereço da pessoa
          example: 100
        complemento:
          type: string
          maxLength: 150
          description: Complemento do endereço da pessoa
        bairro: 
          type: string
          maxLength: 200
          description: Nome do bairro do endereço da pessoa
        localidade:
          $ref: '#/components/schemas/Localidade'
        uf:
          type: string
          minLength: 2
          maxLength: 2
          example: CE
          description: Sigla da UF do endereço da pessoa. Informe EX para endereços fora do Brasil.
        cep:
          type: string
          format: cep
          minLength: 8
          maxLength: 10
          example: 60.000-000
          description: CEP do endereço da pessoa. Pode ser informado com ou sem máscara.
        email: 
          type: string
          format: email
          maxLength: 100
          example: exemplo@teste.com.br
        telefone:
          type: string
          format: phone
          maxLength: 20
          example: (11) 99999-1200
    Localidade:
      type: object
      required:
        - nome
        - codigoIbge
      properties:
        nome:
          type: string
          maxLength: 200
          example: Fortaleza
        codigoIbge:
          type: integer
          example: 2304400
    Lote:
      type: object
      description: Lote do produto. Será obrigatório nas operações em que o produto esteja configurado para controlar o uso de lotes.
      required:
        - numero
      properties:
        numero:
          type: string
          maxLength: 100
          description: Número do lote
          example: 123A500-12
        validade:
          type: string
          format: date
          example: '2019-12-31'
          description: Data de validade do lote. Será obrigatório caso o produto esteja configurado para ter a data de validade do lote exigida.
        fabricacao:
          type: string
          format: date
          example: '2019-12-31'
          description: Data defabricação do lote. Será obrigatório caso o produto esteja configurado para ter a data de fabricação do lote exigida.
    UnidadeMedida:
      type: object
      required: 
        - codigo
        - nome
      properties:
        codigo:
          type: string
          maxLength: 20
          description: Sigla da unidade de medida
          example: Un
        nome:
          type: string
          maxLength: 100
          description: Nome da unidade de medida
          example: Unidade
    Endereco:
      type: object
      required: 
        - logradouro
        - numero
        - bairro
        - localidade
        - uf
        - cep
      properties:
        logradouro:
          type: string
          maxLength: 300
          description: Logradouro do endereço.
          example: Av Duque de Caxias
        numero:
          type: string
          maxLength: 10
          description: Número do endereço. 
          example: '100'
        complemento:
          type: string
          maxLength: 150
          description: Complemento do endereço.
          example: Sala 5
        bairro: 
          type: string
          maxLength: 200
          description: Nome do bairro do endereço.
          example: Centro
        localidade:
          description: Localidade do endereço.
          allOf:
            - $ref: '#/components/schemas/Localidade'
        uf:
          type: string
          minLength: 2
          maxLength: 2
          example: CE
          description: Sigla da UF do endereço. Informe EX para endereços fora do Brasil.
        cep:
          type: string
          format: cep
          minLength: 8
          maxLength: 10
          example: 60.000-000
          description: CEP do endereço. Pode ser informado com ou sem máscara.       
  responses:
    BadRequestError:
      description: 'O dado enviado não está de acordo com as regras definidas.<br>O desenvolvedor responsável pela integração deverá revisar o código-fonte de seu sistema e compará-lo com esta documentação para detectar e corrigir a falha.'
      content:
        application/json:
          schema:
            type: object
            required:
                - message
            properties: 
              message:
                type: string
                example: O atributo nome não foi informado.
    InternalError:
      description: 'Ocorreu uma falha no Estoquei que não havia sido prevista.<br>Este tipo de falha não faz parte do fluxo normal de operação do sistema, mas deverá ser previsto pelo desenvolvedor responsável pela integração com o Estoquei.<br>Caso ocorra, favor entrar em contato com o suporte do Estoquei informando o número do ticket retornado no response.'
      content:
        application/json:
          schema:
            type: object
            required:
                - message
            properties: 
              ticket: 
                type: string
                example: 123e4567-e89b-12d3-a456-556642440000
              message:
                type: string
                example: Uma falha inesperada ocorreu. Contacte o administrador do sistema.

    OperationOk:
      description: Operação realizada com sucesso.
      content:
        application/json:
          schema:
            type: object
            required:
                - message
            properties: 
              message:
                type: string
                example: Operação realizada com sucesso.
                
    UnauthorizedError:
      description: Token de acesso não informado ou inválido.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties: 
              message:
                type: string
                example: Token de acesso não informado ou inválido.
      
    ProdutoNotFoundError:
      description: O produto com o ID informado não foi encontrado no Estoquei.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties: 
              message:
                type: string
                example: Nenhum produto foi encontrado com o ID "xxxxxx".
      
    EstabelecimentoNotFoundError:
      description: O estabelecimento com o ID informado não foi encontrado no Estoquei.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties: 
              message:
                type: string
                example: Nenhum estabelecimento foi encontrado com o ID "xxxxxx".
                
    PessoaNotFoundError:
      description: A pessoa com o ID informado não foi encontrada no Estoquei.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties: 
              message:
                type: string
                example: Nenhuma pessoa foi encontrada com o ID "xxxxxx".
                
  securitySchemes:
    bearedAuth:
      type: apiKey
      in: header
      name: Authorization