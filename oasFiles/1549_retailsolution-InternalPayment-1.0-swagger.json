{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0",
    "title" : "API for managing internal payment data",
    "description" : "Module InternalPayment is used to support canteens and student facilites. The endpoints described here is used to manage the different accounts in a canteen or university/high-school.",
    "contact" : {
      "name" : "Retail Solution AS",
      "email" : "support@retailsolution.no"
    }
  },
  "paths" : {
    "/intpay/user/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "description" : "The id of the user account.",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 1
          }
        } ],
        "description" : "ID of the user object",
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "An user object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates a user account.",
        "parameters" : [ {
          "name" : "userId",
          "description" : "The id of the user account.",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Partial object describing what should be updated. Updates the fields based on the Id of the user.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "User account object created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a user account.",
        "parameters" : [ {
          "name" : "userId",
          "description" : "The id of the user account.",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 1
          }
        } ],
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "User account deleted."
          },
          "405" : {
            "description" : "User account cannot be deleted. Reasons could be remaining balance on account needs to be cleared."
          }
        }
      }
    },
    "/intpay/user/{userId}/deactivate" : {
      "put" : {
        "description" : "Deactivates a user account.",
        "parameters" : [ {
          "name" : "userId",
          "description" : "The id of the user account.",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "User account object deactivated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            }
          }
        }
      }
    },
    "/intpay/user" : {
      "get" : {
        "parameters" : [ {
          "name" : "UuId",
          "description" : "Find user account based on Uuid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SalaryNum",
          "description" : "Find user account based on SalaryNum",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "description" : "Query methods for getting user accounts based on UUid or SalaryNum",
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "An user object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new user account.",
        "requestBody" : {
          "description" : "Should not have Id set.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "security" : [ ],
        "tags" : [ "Users" ],
        "responses" : {
          "201" : {
            "description" : "User account object created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            }
          }
        }
      }
    },
    "/intpay/company" : {
      "get" : {
        "description" : "Gets a list of all active Companies.",
        "security" : [ ],
        "tags" : [ "Companies" ],
        "responses" : {
          "200" : {
            "description" : "Companies",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Companies"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Create a new company. Use only Name and ExternalId properties",
        "security" : [ ],
        "tags" : [ "Companies" ],
        "responses" : {
          "201" : {
            "description" : "Company created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/intpay/company/{companyId}" : {
      "put" : {
        "description" : "Update a company. Use only Name and ExternalId properties",
        "parameters" : [ {
          "name" : "companyId",
          "description" : "The id of the company account.",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "security" : [ ],
        "tags" : [ "Companies" ],
        "responses" : {
          "200" : {
            "description" : "Company updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/retailsolution/InternalPayment/1.0"
  }, {
    "description" : "Retail Solution Back Office Integration (stage environment)",
    "url" : "https://stage.retailsolution.no/ords/posmother"
  } ],
  "components" : {
    "schemas" : {
      "UserAccount" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "number",
            "example" : 1002,
            "readOnly" : true
          },
          "UuId" : {
            "type" : "string",
            "description" : "Universally unique identifier for the account. This is used for validating the physical access card.",
            "example" : "123e4567-e89b-12d3-a456-426655440000, 12345678901, D45F66A12E"
          },
          "SalaryNum" : {
            "type" : "string",
            "description" : "Foreign key from external HR/salary system."
          },
          "FirstName" : {
            "type" : "string",
            "example" : "John"
          },
          "LastName" : {
            "type" : "string",
            "example" : "Doe"
          },
          "MobilePhone" : {
            "type" : "string",
            "example" : "+4790011234"
          },
          "EmailAddress" : {
            "type" : "string",
            "example" : "vandalay@vandalayindustries.com"
          },
          "AccountType" : {
            "type" : "string",
            "enum" : [ "debit", "credit" ],
            "description" : "If this is not set, the default account type for the Company is used."
          },
          "Status" : {
            "type" : "string",
            "enum" : [ "active", "deactivated", "unkown" ],
            "description" : "User account status",
            "readOnly" : true
          },
          "Company" : {
            "$ref" : "#/components/schemas/Company"
          }
        },
        "required" : [ "FirstName", "LastName", "Company" ]
      },
      "Companies" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Company"
        }
      },
      "Company" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "number",
            "example" : 1002,
            "readOnly" : true
          },
          "ExternalId" : {
            "type" : "string",
            "example" : 10056,
            "description" : "Used as foreign key in external system"
          },
          "Name" : {
            "type" : "string",
            "example" : "Vandelay Industries"
          },
          "DefaultUserAccountType" : {
            "type" : "string",
            "enum" : [ "debit", "credit" ],
            "readOnly" : true
          },
          "FixedDepositAmount" : {
            "type" : "number",
            "example" : 500,
            "description" : "NOK 500.00 will be kredited to all active user accounts in company the first day of each month.",
            "readOnly" : true
          }
        }
      }
    },
    "securitySchemes" : {
      "oAuth2" : {
        "type" : "oauth2",
        "description" : "Client credentials. ClientID and secret will be received from RS Customer Service",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://stage.retailsolution.no/ords/posmother/oauth/token"
          }
        }
      }
    }
  }
}