openapi: 3.0.0
servers: 
  - url: https://uncvkwwnw5.execute-api.us-west-2.amazonaws.com/int/jetfeeder-service
  - url: https://gqjhhywgld.execute-api.us-west-2.amazonaws.com/stage/jetfeeder-service
info:
  description: Endpoints to get and send data of iQuatic, to integrate with JetFeeder devices. \n Each endpoint should include a Bearer Token as Authorization header. The steps to get the Bearer token you can found in the next Links
  version: "1.0.0"
  title: JetFeeder integration

externalDocs:
  description: Generate Bearer Token
  url: https://app.swaggerhub.com/apis/iquatic/iQuatic_BearerToken/1.0.0

tags:
  - name: Endpoints
    
paths:  
  /companies/{companyId}/farms/{farmId}/schedules:
    get:
      tags:
      - Endpoints
      summary: Get the weekly schedules
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchedulesResponse'
      parameters: 
        - name: companyId
          in: path
          required: true
          description: The id of the company
          schema:
            type: string
        - name: farmId
          in: path
          required: true
          description: The id of the farm
          schema:
            type: string
        - name: start
          in: query
          required: true
          description: The start timestamp that represent the start day of the week
          schema:
            type: string
        - name: end
          in: query
          required: true
          description: The end timestamp that represent the last day of the week. 
          schema:
            type: string
  /companies/{companyId}/farms/{farmId}/ponds/{pondId}/schedules:
    put:
      tags:
      - Endpoints
      summary: Inform if the downloaded schedule was succesfully applied on the devices
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
      parameters: 
        - name: companyId
          in: path
          required: true
          description: The id of the company
          schema:
            type: string
        - name: farmId
          in: path
          required: true
          description: The id of the farm
          schema:
            type: string
        - name: pondId
          in: path
          required: true
          description: The id of the pond
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ts:
                  type: integer
                  description: The timestamp that was used on get schedules, to inform that it was or not applied
                  
  /companies/{companyId}/metrics:
    put:
      tags:
      - Endpoints
      summary: Send metrics to iQuatic
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
      parameters: 
        - name: companyId
          in: path
          required: true
          description: The id of the company
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                companyId:
                  type: string
                  description: the id of the company
                farmId:
                  type: string
                  description: the id of the farm
                pondId:
                  type: string
                  description: the id of the pond
                ts:
                  type: integer
                  description: The timestamp of when that metric was created
                source:
                  type: object
                  properties:
                    type:
                      type: string
                      description: type of the source
                      default: other
                    ref:
                      type: object
                      properties:
                        screenId:
                          type: string
                          description: The reference of the source
                          default: other
                metricId:
                  type: string
                  description: the id of the metric
                  enum: 
                    - alkalinity
                    - weight
                    - weight-sample
                    - water-temperature
                    - water-level
                    - water-exchange
                    - water-depth
                    - visor-remaining-feed
                    - visor-dead
                    - turbidity
                    - sick
                    - hp-labs
                    - salinity
                    - potassium
                    - population
                    - ph
                    - nitrite
                    - nitrate
                    - molting
                    - magnesium
                    - hydrogen-sulfide
                    - gut-width
                    - gut-state
                    - feed-tray-remaining-feed
                    - feed-tray-dead
                    - feed
                    - do
                    - dead
                    - calcium
                    - ammonia
                value:
                  type: object
                  description: The corresponding value defined in Schemas section

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    GetSchedulesResponse:
      type: array
      items:
        type: object
        properties:
          Pool_id:
            type: string
            description: The id of the pond
          FeedTypeId:
            type: string
            description: Type of the feed
          KgFeedPerDay:
            type: integer
            description: How many kg will be used each day
          Monday:
            type: array
            items:
              type: object
              properties:
                Hour: 
                  type: integer
                  description: one of the 24 hours for each day
                ShouldFeed:
                  type: boolean
                  description: flag that indicates if in that hour the feeders should be on or off
    DefaultResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if was succesfully informed if the schedule was applied
    alkalinity:
      type: object
      properties:
        alkalinity:
          type: number
          minimum: 0
    ammonia:
      type: object
      properties:
        ammonia:
          type: number
          minimum: 0
          
    calcium:
      type: object
      properties:
        calcium:
          type: number
          minimum: 0

    dead:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        count:
          type: integer
          minimum: 1
        dead:
          type: object
          properties:
            recent:
              type: integer
              minimum: 0
            old:
              type: integer
              minimum: 0
    
    do:
      type: object
      properties:
        do:
          type: number
          
    feed:
      type: object
      properties:
        feedId:
          type: string
          minLength: 1
        feederType:
          type: string
          enum: [
            jetfeeder
          ]
        amount:
          type: number
          minimum: 0
          
    feed-tray-dead:
      type: object
      properties:
        dead:
          type: object
          properties:
            recent:
              type: integer
              minimum: 0
            old:
              type: integer
              minimum: 0
              
    feed-tray-remaining-feed:
      type: object
      properties:
        remainingFeedPct:
          type: integer
          enum: [
            0
            25
            50
            75
            100
          ]
          
    gut-state:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        count:
          type: integer
          minimum: 1
        gut:
          type: object
          properties:
            empty:
              type: integer
              minimum: 0
            
            full:
              type: integer
              minimum: 0
              
    gut-width:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        count:
          type: integer
          minimum: 1
        gut:
          type: object
          properties:
            thick:
              type: integer
              minimum: 0
            thin:
              type: integer
              minimum: 0
              
    hydrogen-sulfide:
      type: object
      properties:
        hydrogenSulfide:
          type: number
          minimum: 0

    magnesium:
      type: object
      properties:
        magnesium:
          type: number
          minimum: 0
          
    molting:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        states:
          type: object
          properties:
            normal:
              type: integer
              minimum: 0
            molting:
              type: integer
              minimum: 0
            postMolting:
              type: integer
              minimum: 0
            preMolting:
              type: integer
              minimum: 0

    nitrate:
      type: object
      properties:
        nitrate:
          type: number
          minimum: 0
          
    nitrite:
      type: object
      properties:
        nitrite:
          type: number
          minimum: 0

    ph:
      type: object
      properties:
        ph:
          type: number
          minimum: 0
          maximum: 14
          
    population:
      type: object
      properties:
        waterDepth:
          type: number
          minimum: 0
        dead:
          type: object
          properties:
            recent:
              type: integer
              minimum: 0
            
            old:
              type: integer
              minimum: 0
        sick:
          type: object
          properties:
            serious:
              type: integer
              minimum: 0
            
            mild:
              type: integer
              minimum: 0
        casts:
          type: object
          properties:
            total:
              type: integer
              minimum: 1
            
            empty:
              type: integer
              minimum: 0
        healthy:
          type: object
          properties:
            adult:
              type: integer
              minimum: 0
            
            juvenile:
              type: integer
              minimum: 0
    potassium:
      type: object
      properties:
        potassium:
          type: number
          minimum: 0

    salinity:
      type: object
      properties:
        salinity:
          type: number
          
    sick:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        count:
          type: integer
          minimum: 1
        sick:
          type: object
          properties:
            greenTails:
              type: integer
              minimum: 0
            whiteSpots:
              type: integer
              minimum: 0
            deformed:
              type: integer
              minimum: 0
            redTails:
              type: integer
              minimum: 0
              
    visor-dead:
      type: object
      properties:
        dead:
          type: object
          properties:
            recent:
              type: integer
              minimum: 0
            old:
              type: integer
              minimum: 0
    
    turbidity:
      type: object
      properties:
        turbidity:
          type: number
          minimum: 10
          maximum: 100
          
    visor-remaining-feed:
      type: object
      properties:
        remainingFeedPct:
          type: integer
          enum: [
            0
            25
            50
            75
            100
          ]
        remainingFeed:
          type: boolean
          
    water-depth:
      type: object
      properties:
        waterDepth:
          type: number
          minimum: 0
    water-exchange:
      type: object
      properties:
        exitPlanks:
          type: integer
        entrancePlanks:
          type: integer
          
    water-level:
      type: object
      properties:
        waterLevel:
          type: number
          
    water-temperature:
      type: object
      properties:
        waterTemperature:
          type: number
          
    weight:
      type: object
      properties:
        casts:
          type: integer
          minimum: 1
        weights:
          type: object
          properties:
            small:
              type: object
              properties:
                count:
                  type: integer
                  minimum: 0
                
                weight:
                  type: number
                  minimum: 0
            medium:
              type: object
              properties:
                count:
                  type: integer
                  minimum: 0
                
                weight:
                  type: number
                  minimum: 0
            large:
              type: object
              properties:
                count:
                  type: integer
                  minimum: 0
                
                weight:
                  type: number
                  minimum: 0
            xlarge:
              type: object
              properties:
                count:
                  type: integer
                  minimum: 0
                
                weight:
                  type: number
                  minimum: 0

security: 
  - bearerAuth: []
