openapi: 3.0.0
info:
  description: |
    API взаимодействия систем 
  version: "1.0.58"
  title: Tomato REST API
  contact:
    email: hanav@tomato-pizza.ru
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/Tomato-pizza/TomatoRestAPI/1.0.0
- description: боевой сервер
  url: https://d.tomato-pizza.ru:44300/ERP/hs/tomatoERP
- description: тестовый сервер
  url: https://d.tomato-pizza.ru:44300/IW_ERP/hs/tomatoERP

tags:
  - name: System
    description: Системные методы
  - name: Auth
    description: Методы авторизации и регистрации
  - name: Ref
    description: Методы работы со справочной информацией
  - name: Order
    description: Методы работы с заказом
  - name: Delivery
    description: Методы работы доставкой
  - name: Bonus
    description: Методы работы программой лояльности
  - name: OnlineDesk
    description: Методы работы онлайн-табло
  - name: Site
    description: Обмен с сайтом
  - name: Courier
    description: Методы работы курьером

paths:
  /System/SystemTime:
    post:
      tags:
        - System
      summary: Получение серверного времени
      description: Получение серверного времени
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TimeResult'
   
  /System/PingTime:
    post:
      tags:
        - System
      summary: Получение времени для отслеживания длительности ping-а между устройством и ДЦ
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PingTimeResult'
               
  /System/VersionAPI:
    post:
      tags:
        - System
      summary: Получение версии API
      description: Получение версии API
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/VersionResult'

  /System/RequestSuccess:
    post:
      tags:
        - System
      summary: Квитанция об успешном получении и обработке запроса
      description: Квитанция об успешном получении и обработке запроса
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
               
  /Auth/Registration:
    post:
      tags:
        - Auth
      summary: Регистрация устройства на сервере ERP
      description: Регистрация устройства на сервере ERP
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: header
          name: pushToken
          description: Токен push сообщений устройства
          required: false
          schema:
            type: string            
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RegistrationResult'
                
  /Auth/Authentificate:
    post:
      tags:
        - Auth
      summary: Авторизация официанта в системе
      description: Авторизация официанта в системе
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных пин-кода официанта        
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PinCodePerson'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PersonResult'
                
  /Auth/CourierAuthentificate:
    post:
      tags:
        - Auth
      summary: Авторизация курьера в системе
      description: Авторизация курьера в системе
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных пин-кода официанта        
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PinCodePerson'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PersonCourierResult'
                
  /Ref/Priority:
    post:
      tags:
        - Ref
      summary: Получение приоритетов подачи
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PriorityResult'
                
  /Ref/Menu:
    post:
      tags:
        - Ref
      summary: Получение меню
      description: >
        Получение меню со свойствами, характеристиками, топпингами и ценами +
        иконки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: header
          name: If-Modified-Since
          description: Дата последнего обновления
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входного параметра типа меню - 1 - доставка, 0 - основное меню
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MenuType'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuResult'
        '304':
          description: No modifi
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
  
  /Ref/CallCenterMenu:
    post:
      tags:
        - Ref
      summary: Получение меню для коллцентра
      description: >
        Получение меню со свойствами, характеристиками, топпингами и ценами +
        иконки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CallCenterMenuResult'
                
  /Ref/DeliveryMenu:
    post:
      tags:
        - Ref
      summary: Получение меню доставки
      description: >
        Получение меню со свойствами, характеристиками, топпингами и ценами +
        иконки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: header
          name: If-Modified-Since
          description: Дата последнего обновления
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuResult'
        '304':
          description: No modifi
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
 
 
  /Ref/Combos:
    post:
      tags:
        - Ref
      summary: Получение комбо-обедов
      description: Получение комбо-обедов
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ComboResult'
  
  /Ref/Actions:
    post:
      tags:
        - Ref
      summary: Получение акций
      description: Получение акций
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных даты на которую требуется получить акции
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DateActialMenu'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ActionResult'
          
  /Ref/Modifiers:
    post:
      tags:
        - Ref
      summary: Получение модификаторов/топпингов
      description: Получение модификаторов/топпингов
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных даты на которую требуется получить изменения в модификаторов. Дата нужна для получения цены на топпинги
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DateActialMenu'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ModifiersResult'

  /Ref/Tables:
    post:
      tags:
        - Ref
      summary: Получение столов
      description: Получение столов
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TablesResult'
  
  /Ref/Icon:
    post:
      tags:
        - Ref
      summary: Получение иконки элемента меню
      description: Получение иконки элемента меню
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения иконки
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IconRequesData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IconResult'  
    get:
      tags:
        - Ref
      summary: Получение иконки элемента меню
      description: Получение иконки элемента меню
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: header
          name: If-Modified-Since
          description: Дата последнего сохранения иконки
          required: true
          schema:
            type: string
        - in: query
          name: id
          description: Идентификатор элемента меню
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'image/png':
              schema:
                type: string
                format: binary

  /Ref/Couriers:
     post:
      tags:
        - Ref
      summary: Получение списка курьеров ресторана
      description: Получение курьеров курьеров ресторана
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CouriersResult'
  /Ref/Restaraunts:
     post:
      tags:
        - Ref
      summary: Получение списка организаций подключеных к МО
      description: Получение списка организаций подключеных к МО
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RestarauntsResult'
  
  /Ref/DeliveryType:
     post:
      tags:
        - Ref
      summary: Получение списка типов доставки
      description: Получение списка типов доставки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryTypeResult'
  
  /Ref/DeliveryMethod:
     post:
      tags:
        - Ref
      summary: Получение списка методов доставки
      description: Получение списка методов доставки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryMethodResult'
  
  /Ref/DeliveryPayType:
     post:
      tags:
        - Ref
      summary: Получение списка типов оплаты
      description: Получение списка типов оплаты
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryPayTypeResult'
                
  /Order/CreateOrder:
    post:
      tags:
      - Order
      summary: Создание заказа
      description: Создание заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для создания заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequesData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CreateOrderResult'
        '303':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CreateOrderErrorResult'
          
  /Order/UpdateOrder:
    post:
      tags:
      - Order
      summary: Обновление заказа
      description: Обновление заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для обновления заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderUpdateData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                
  /Order/UpdateGuests:
    post:
      tags:
      - Order
      summary: Изменение количества гостей в заказе
      description: Изменение количества гостей в заказе
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для обновления заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GuestsCountUpdate'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'

  /Order/ChangeTables:
    post:
      tags:
      - Order
      summary: Смена стола клиента
      description: Смена стола клиента
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для смены стола
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChangeTableRequestData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'

  /Order/ListOrders:
    post:
      tags:
      - Order
      summary: Список заказов
      description: Список заказов
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListOrdersResult'
  
  /Order/Order:
    post:
      tags:
      - Order
      summary: Подробная информация о заказе
      description: Подробная информация о заказе
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения подробной информации по заказу
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OrderResult'

  /Order/CancelPreBill:
    post:
      tags:
      - Order
      summary: Отмена пре-чека
      description: Отмена пре-чека
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для удаления пре-чека
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CancelPreBillData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'

  /Order/DeleteOrder:
    post:
      tags:
      - Order
      summary: Удаление заказа
      description: Удаление заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для удаления заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
  
  /Order/Transfer:
    post:
      tags:
      - Order
      summary: Перенос блюда с гостя на гостя
      description: Перенос блюда с гостя на гостя
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для переноса блюда
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransferData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
  
  /Order/Divide:
    post:
      tags:
      - Order
      summary: Деление блюда между гостями
      description: Деление блюда между гостями
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для деления блюда между гостями
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DivideData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
  
  /Delivery/OrderDelivery:
    post:
      tags:
      - Delivery
      summary: Подробная информация о заказе доставки
      description: Подробная информация о заказе доставки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения подробной информации по заказу
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryOrderRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryOrderResult'
  
  /Delivery/UpdateOrderDelivery:
    post:
      tags:
      - Delivery
      summary: Обновление данных заказа
      description: Обновление данных заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для обновления заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryOrderUpdateData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                
  /Delivery/ListOrderDelivery:
    post:
      tags:
      - Delivery
      summary: Краткая о заказе доставки
      description: Краткая информация о заказе доставки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryDate'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListOrdersDeliveryResult'              
  
  /Delivery/CommentForClient:
    post:
      tags:
      - Delivery
      summary: Массив комментариев по клиенту
      description: Массив комментариев по клиенту
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения подробной информации по заказу
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryCommentForClientRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryCommentForClientResult'
  
  /Delivery/AvailableStatusesAndActions:
    post:
      tags:
      - Delivery
      summary: Массив доступных переходов и действий для статуса
      description: Массив доступных переходов и действий для статуса
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения подробной информации по заказу
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryAvailableStatusesAndActionsRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryAvailableStatusesAndActionsResult'
  
  /Delivery/UpdateOrderDeliveryItems:
    post:
      tags:
      - Delivery
      summary: Обновление блюд заказа
      description: Обновление блюд заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для обновления заказа
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryOrderItemsUpdateData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                              
  /Delivery/OrderDeliveryItems:
    post:
      tags:
      - Delivery
      summary: Блюда заказа доставки
      description: Блюда заказа доставки
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения подробной информации по заказу
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeliveryOrderRequestResponsData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeliveryOrderItemsResult'
                
  /Bonus/Coupon:
    post:
      tags:
      - Bonus
      summary: Получение данных по купону
      description: Получение данных по купону
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения данных по купону
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Coupon'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CouponResult'
        '404':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
        '401':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'        
  /Bonus/Card:
    post:
      tags:
      - Bonus
      summary: Получение данных по карте Томато-бонус
      description: Получение данных по карте Томато-бонус
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для деления блюда между гостями
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CardResult'
 
  /Bonus/CardIsActive: 
    post:
      tags:
      - Bonus
      summary: Проверяет, актвина ли карта Томато-бонус
      description: Проверяет, актвина ли карта Томато-бонус
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных по карте
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: Карта активна
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
        '303':
          description: Карта не активна
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'

  /OnlineDesk/Desk:
    post:
      tags:
        - OnlineDesk
      summary: Получение данных для онлайн-табло
      description: Получение данных для онлайн-табло
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      
      requestBody:
        description: Логин в AD  
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LoginAD'
              
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OnlineDeskResult'              
  
  /OnlineDesk/DeskByRestuarant:
    post:
      tags:
        - OnlineDesk
      summary: Получение данных для онлайн-табло для ресторана
      description: Получение данных для онлайн-табло для ресторана
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Код ресторана для которого требуется получить данные  
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestuarantId'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OnlineDeskByRestuarantResult'   
  
  /Delivery/FastSearchDeliveryOrder:
    post:
      tags:
        - Delivery
      summary: Быстрый поиск
      description: Быстрый поиск
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для создания заказа доставки
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FastSearchDeliveryOrderData'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListOrdersDeliveryForSearchResult'                
        '500':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 
                
  /Delivery/SlowSearchDeliveryOrder:
    post:
      tags:
        - Delivery
      summary: Медленный поиск
      description: Медленный поиск
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для создания заказа доставки
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SlowSearchDeliveryOrderData'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListOrdersDeliveryForSearchResult'                
        '500':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 
  
  /Delivery/AddCommentForClient:
    post:
      tags:
      - Delivery
      summary: Добавление комментария к клиенту
      description: Добавление комментария к клиенту
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для деления блюда между гостями
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddCommentForClientData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                
  /Delivery/AddDeliveryOrder:
    post:
      tags:
        - Delivery
      summary: Добавление заказа в 1с
      description: Добавление заказа в 1с
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для создания заказа доставки
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SiteOrderDeliveryData'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'             
        '500':
          description: Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 
  
  /Delivery/PrintWayBill:
    get:
      tags:
        - Delivery
      summary: Получение печатной формы бланка заказа
      description: Получение печатной формы бланка заказа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: query
          name: extOrderId
          description: Идентификатор заказа
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/pdf':
              schema:
                type: string
                format: binary
                
  /Courier/CurrentPosition:
    post:
      tags:
      - Courier
      summary: Получение текущей позиции курьера
      description: Получение текущей позиции курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для получения текущей позиции курьера
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CouriersCurrenPosition'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CouriersCurrenPositionResult'
                
  /Courier/UpdateProfile:
    post:
      tags:
      - Courier
      summary: Обновление данных курьера
      description: Обновление данных курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Текст входных данных для обновления данных курьера
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PersonCourierData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                
  /Courier/ListCompletedRoutes:
    post:
      tags:
      - Courier
      summary: Завершенные маршруты курьера
      description: Завершенные маршруты курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IdCourier'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListRoutesResult' 
  
  /Courier/ActiveRoute:
    post:
      tags:
      - Courier
      summary: Активный маршрут курьера
      description: Активный маршрут курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IdCourier'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RouteResult' 
  
  /Courier/Point:
    post:
      tags:
      - Courier
      summary: точка маршрута
      description: точка маршрута
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UIDPoint'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PointComplexResult'              
                
  /Courier/ListPayments:
    post:
      tags:
      - Courier
      summary: опллаты курьера
      description: опллаты курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IdCourier'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListPaymentsResult' 
  
  /Courier/ChangeStatusPoint:
    post:
      tags:
      - Courier
      summary: Изменение статуса точек
      description: Изменение статуса точек
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Текст входных данных дата заказов     
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChangePoint'      
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 
                
  /Courier/PaymentList:
    get:
      tags:
        - Courier
      summary: Получение печатной формы рассчетного листа
      description: Получение печатной формы рассчетного листа
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: query
          name: id_courier
          description: Идентификатор курьера
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/pdf':
              schema:
                type: string
                format: binary
                
  /Courier/Avatar:
    get:
      tags:
        - Courier
      summary: Получение аватара курьера
      description: Получение аватара курьера
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
        - in: query
          name: id_courier
          description: Идентификатор курьера
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/png':
              schema:
                type: string
                format: binary
  /Site/NewGuest:
    post:
      tags:
        - Site
      summary: Создание нового клиента с сайта
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные для клиента
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GuestObj'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'
                
  /Site/UpdateGuest :
    post:
      tags:
        - Site
      summary: Обновление данных клиента с сайта
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные для клиента
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GuestForSite'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'      
      
  /Site/ActivateCard :
    post:
      tags:
        - Site
      summary: Активация карты клиента
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные активируемой карты  
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CardDataObj'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'   
             
  /Site/BlockCard :
    post:
      tags:
        - Site
      summary: Блокирование карты клиента
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные блокируемой карты  
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BlockCardData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult'                    

  /Site/ChangeCard :
    post:
      tags:
        - Site
      summary: Смена карты клиента
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные для смены карты  
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChangeCardData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 

  /Site/AddRecall :
    post:
      tags:
        - Site
      summary: Добавление отзыва по заказу
      parameters:
        - in: header
          name: token
          description: Токен устройства
          required: true
          schema:
            type: string
      requestBody:
        description: Данные отзыва
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RecallData'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiResult' 

components:
  schemas:
    apiResult:
      type: object
      discriminator:
        propertyName: apiResult
      properties:
        id:
          description: Уникальный идентификатор сообщения присвоенный сервером
          type: string
          example: '07715d26-f419-4e32-b2c2-4c2a43f1c3f8'
        status:
          description: Статус выполнения вызванной функции
          type: integer
          example: 200
        code:
          description: Код ошибки выполнения функции
          type: integer
          example: 205
        msg:
          description: Текст ошибки выполнения функции
          type: string
          example: "Текст ошибки выполнения функции"
        data:
          description: данные ответа
 
    RegistrationResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: string
            example: "Устройство пока не зарегистрировано в системе. Обратитесь в отдел IT"
            
    VersionResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: string
            example: "1.1.1.0"    

    TimeResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: string
            description: дата и время
            example: "2019-01-14T00:00:00"
            
    PingTimeResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: integer
            example: 62220205060120   
            
    PersonData:
      properties:
        personId:
          type: string
          description: Уникальный код сотрудника
          example: 221313-2
        name:
          type: string
          description: ФИО сотрудника
          example: Иванов Иван Иванович
        bill:
          description: сумма чеков
          type: integer
          example: 120000
        kpi:
          description: цели по блюдам
          type: array
          items:
            $ref: '#/components/schemas/Kpi'
        access:
          description: массив доступов
          type: array
          items:
            $ref: '#/components/schemas/AccessData'    

    CouriersCurrenPosition:
      properties:
        id_сourier:
          type: string
          description: уникальный код сотрудника
          example: '007'
        date:
          description: Дата на которую получаем позицию курьера
          type: string
          format: date
          example: '2020-02-02T20:20:02'
          
    CouriersCurrenPositionData:
      properties:
       lat:
          type: integer
          description: Широта
          example: 45.123656
       lon:
          type: integer
          description: Долгота
          example: -123.114767
         

    CouriersCurrenPositionResult:
      description: Ответ по текущей позиции курьера
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
           $ref: '#/components/schemas/CouriersCurrenPositionData'
 
    PersonCourierData:
      properties:
        id_сourier:
          type: string
          description: уникальный код сотрудника
          example: '007'
        name_сourier:
          type: string
          description: ФИО сотрудника
          example: Иванов Иван Иванович
        transport_type:
          description: тип транспорта 1 - Авто, 2 - Пешком
          type: integer
          enum:
          - 1 
          - 2 
        courier_type:
          description: тип курьера 1 - Курьер, 2 - Таксист
          type: integer
          enum:
          - 1 
          - 2   
        id_restaurant: 
          description: Код ресторана
          type: string
          example: '1'  
        restaurant: 
          description: Ресторан
          type: string
          example: 'Тула Макси' 
        id_status: 
          description: Код статуса курьера 1 - Доступен, 2 - Недоступен, 3 - Аварийный
          type: integer
          enum:
          - 1 
          - 2 
          - 3
        plan_time_work_start:
          description: Плановое время работы начало. В секундах от начала дня.
          type: integer
          example: 30000
        plan_time_work_end:
          description: Плановое время работы конец. В секундах от начала дня.
          type: integer
          example: 40000
        available_time_start:
          description: Доступен для заказов время начало. В секундах от начала дня.
          type: integer
          example: 31000
        available_time_end:
          description: Доступен для заказов время конец. В секундах от начала дня.
          type: integer
          example: 39000
        city:
          description: Город в котором работает курьер
          type: string
          example: 'Тула' 

    PersonResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
           $ref: '#/components/schemas/PersonData'
    
    PersonCourierResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
           $ref: '#/components/schemas/PersonCourierData'
           
    CouriersResult:
      description: Ответ по курьерам
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/CouriersItem'
              
    CouriersItem:
      properties:
        personId:
          type: string
          description: Уникальный код сотрудника
          example: "00221313-2"
        name:
          type: string
          description: ФИО сотрудника
          example: Иванов Иван Иванович
    RestarauntsResult:
      description: Ответ по ресторанам
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/RestarauntsItem'
    RestarauntsItem:
      properties:
        id:
          type: string
          description: Уникальный код ресторана
          example: "0000002"
        name:
          type: string
          description: Название ресторана
          example: 01 Алексин
    DeliveryTypeResult:
      description: Ответ по типам
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryTypeItem'
    DeliveryTypeItem:
      properties:
        id:
          type: integer
          description: Код типа
          example: 1
        name:
          type: string
          description: Название типа
          example: "Как можно скорее"
    DeliveryMethodResult:
      description: Ответ по методам
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryMethodItem'
    DeliveryMethodItem:
      properties:
        id:
          type: integer
          description: Код метода
          example: 1
        name:
          type: string
          description: Название метода
          example: "Самовывоз"  
    DeliveryPayTypeResult:
      description: Ответ по типам
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryPayTypeItem'
    DeliveryPayTypeItem:
      properties:
        id:
          type: integer
          description: Код типа
          example: 1
        name:
          type: string
          description: Название метода
          example: "Наличными"       
    PriorityResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PriorityItem'

    PriorityItem:
      description: Приоритет
      properties:
        id:
          description: Идентификатор приоритета
          type: string
          example: '6654612185'
        name:
          description: Наименование приоритета для официанта
          type: string
          example: Ждать указания гостя
 
    MenuResult:
      description: Ответ Menu
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/MenuItem'
    
    CallCenterMenuResult:
      description: Ответ 
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/CallCenterMenu'
    
    CallCenterMenu:
      description: Ответ 
      type: object
      allOf:
      - $ref: '#/components/schemas/RestarauntsItem'
      - properties:
          menu:
            type: array
            items:
              $ref: '#/components/schemas/MenuCallCenterItem'
              
    IconRequesData:
      description: Данные для получения иконки
      properties:
        id:
          description: Идентификатор элемента меню
          type: string
          example: '4946664234'
    
    IconResult:
      description: Ответ получения иконки
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: string
            description: строка в формате base64 с инофрмацией об иконке
    
    MenuItem:
      description: Блюдо ресторана
      properties:
        code:
          description: Код блюда
          type: string
          example: '6654612185'
        name:
          description: Наименование меню
          type: string
          example: Пицца пеперони
        parentId:
          description: Идентификатор родителя
          type: string
          example: '3342234'
        itsGroup:
          description: Это группа номенклатуры
          type: boolean
        price:
          description: Цена блюда в копейках
          type: string
          example: 10000
        descr:
          description: Описание блюда
          type: string
          example: Пицца пеперони блаблабла
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersMenuItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersMenuItem'
        background:
          description: фон кнопки раздела в МО
          type: string
          example: "#FFFFFF"
        priority:
          description: Идентификатор приоритета подачи
          type: string
          example: "6654612185"
        opts:
          description: Характеристики блюд
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicData'
            
    MenuCallCenterItem:
      description: Блюдо ресторана
      properties:
        id:
          description: Код блюда
          type: string
          example: '6654612185'
        name:
          description: Наименование меню
          type: string
          example: Пицца пеперони
        description:
          description: Описание блюда
          type: string
          example: Пицца пеперони блаблабла
        price:
          description: Цена блюда в копейках
          type: string
          example: 10000  
        servingSize:
          description: Выход блюда
          type: string
          example: 
        parentId:
          description: Идентификатор родителя
          type: string
          example: '3342234'
        parentName:
          description: Наименование родителя
          type: string
          example: Пиццы  
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersCallCenterItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersCallCenterItem'

    ComboResult:
      description: Ответ Combo
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/ComboVariant'

    ComboVariant:
      description: Комбо-обеды
      properties:
        id:
          description: Код комбо-обеда
          type: string
          example: '3332123'
        name:
          description: Наименование комбо-обеда
          type: string
          example: 'Комбо-обед 1'
        price:
          description: Стоимость комбо-обеда в копейках
          type: integer
          example: 20000
        items:
          description: Элементы комбо-обеда
          type: array
          items:
            $ref: '#/components/schemas/ComboItem'
        shedule:
          description: Расписание комбо-обеда
          type: array
          items:
            $ref: '#/components/schemas/Shedule'

    ComboItem:
      description: Элемент комбо-обеда
      properties:
        id:
          description: Код элемента комбо-обеда
          type: string
          example: '6654612185'
        name:
          description: Наименование элемента комбо-обеда
          type: string
          example: 'Пицца комбо-обеда'
        menu:
          description: Коды блюд, которые могут входить в элемент комбо-обеда
          type: array
          items:
            $ref: '#/components/schemas/comboDish'

    comboDish:
      description: Блюдо комбо-обеда
      properties:
        id:
          description: Код блюда комбо-обеда
          type: string
          example: '6654612185'
        increase:
          description: Надбавка к цене комбо в копейках
          type: integer
          example: 50
    
    ModifiersResult:
      description: Ответ Modifiers
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/ModifiersItem'

    ModifiersMenuItem:
      description: Модификатор блюд
      properties:
        id:
          description: Код модификатора
          type: string
          example: '6654612185'
        price:
          description: Стоимость блюда с учетом модификатороа в копейках
          type: integer
          example: 10000
        isDefault:
          description: признак модификатора по умолчанию
          type: boolean
          example: false
        modifiType:
          description: тип модификатора
          type: integer
          enum:
          - 1
          - 2
        groupId:
          description: код группы модификаторов
          type: string
          example: "00000000001"
          

    ModifiersItem:
      description: Модификатор блюд
      properties:
        id:
          description: Идентификатор модификатора
          type: string
          example: '1001351'
        code:
          description: Внеший код модификатора
          type: string
          example: '414'
        name:
          description: Наименование модификатора
          type: string
          example: Сливочный соус
        price:
          description: Стоимость модификатора в копейках
          type: integer
          example: 1000
        count:
          description: максимальное количество выбранного топпинга
          type: integer
          example: 1
        type:
          description: модификатор это или топпинг
          type: integer
          enum:
          - 1
          - 2
          example: 1          
        modifiType:
          description: тип модификатора
          type: integer
          enum:
          - 1
          - 2
        groupId:
          description: код группы модификаторов
          type: integer
          example: 1

    ModifiersCallCenterItem:
      description: Модификатор блюд
      properties:
        id:
          description: Идентификатор модификатора
          type: string
          example: '1001351'
        name:
          description: Наименование модификатора
          type: string
          example: Сливочный соус
        price:
          description: Стоимость модификатора в копейках
          type: integer
          example: 1000

          
    TablesResult:
      description: Ответ Tables
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TablesItem'

    TablesItem:
      description: Столы раруса
      properties:
        table:
          description: Идентификатор стола раруса
          type: integer
          example: 11
        personId:
          description: Идентификатор пользователя занявшего стол
          type: string
          example: '11231'
        separete:
          description: Признак разделения чеков по гостям
          type: boolean
          example: false
        printedAllPreBill:
          description: Признак распечатанных пречеков по всем гостям
          type: boolean
          example: false
        state:
          description: Статус заказа
          type: integer
          example: 3
        namePerson:
          description: Имя пользователя занявшего стол
          type: string
          example: 'Иванов Иван Иванович'
        orderId:
          description: Идентификатор заказа
          type: string
          example: 'CF0EB7C2-6132-44D6-AE3B-AA22DBFA96C8'
          
          
    CharacteristicData:
      description: Характеристики блюда
      properties:
        code:
          description: Код характеристики
          type: string
          example: '6654612185'
        name:
          description: Наименование характеристики
          type: string
          example: Овощная
          
    PinCodePerson:
      properties:
        pin:
          description: Пин-код официанта
          type: integer
          example: 22

    DeliveryDate:
      properties:
        deliveryDate:
          description: Дата за которую нужно получить заказы
          type: string
          format: date
          example: '2019-01-01T00:00:00'

    DateActialMenu:
      properties:
        date:
          description: Дата на которую требуется получить меню
          type: string
          format: date
          example: '2019-01-01T16:09:57'
 
    CreateOrderResult:
      description: Ответ CreateOrder
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: string
            description: Идентификатор заказа
            example: "1542a244-b948-4de3-ad90-db79d0d21317"  
    
    CreateOrderErrorResult:
      description: Ответ CreateOrder если стол уже занят
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/TablesItem'

    OrderRequestResponsData:
      description: Данные заказа
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '494-234234'
    
    DeliveryOrderRequestResponsData:
      description: Данные заказа
      properties:
        extOrderId:
          description: Идентификатор заказа
          type: string
          example: '494-234234'
    
    DeliveryCommentForClientRequestResponsData:
      description: Данные клиента
      properties:
        id:
          description: Идентификатор клиента
          type: string
          example: '15'
    
    DeliveryAvailableStatusesAndActionsRequestResponsData:
      description: Данные статуса
      properties:
        id:
          description: Идентификатор статуса
          type: string
          example: '0000001' 
        delivery_method:
          description: Метод доставки 1 - Курьер, 2 - Самовывоз
          type: integer
          enum:
          - 1
          - 2
          
    CancelPreBillData:
      description: Данные отменяемого пре-чека
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '494-234234'
        personId:
          description: Идентификатор официанта
          type: string
          example: '494-234234'
        guest:
          description: Номер гостя
          type: integer
          example: 1

    TransferData:
      description: Данные для переноса блюда
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '494-234234'
        personId:
          description: Идентификатор официанта
          type: string
          example: '494-234234'
        guest:
          description: Номер гостя c которого переносят блюдо
          type: integer
          example: 1
        newGuest:
          description: Номер гостя на которого переносят блюдо
          type: integer
          example: 1
        menuId:
          description: идентификатор блюда которое переносится
          type: string
          example: '49423132234234'
    
    DivideData:
      description: Данные для деления блюда
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '494-234234'
        personId:
          description: Идентификатор официанта
          type: string
          example: '494-234234'
        guest:
          description: Номер гостя чье блюдо можно поделить. Если -1 соответственно производится поиск нераспределенного (общего блюда)
          type: integer
          example: 1
        menuId:
          description: идентификатор блюда которое делится
          type: string
          example: '49423132234234'
        newGuests:
          description: массив гостей на которые требуется разделить блюдо
          type: array
          items:
            type: integer
          example: [1, 2, 3]
          
    OrderRequesData:
      description: Данные для создания заказа
      properties:
        data:
          description: Дата заказа
          type: string
          format: date-time
          example: '2019-01-01T16:09:57'
        personId:
          description: Идентификатор пользователя который создает заказ
          type: string
          example: "22223"
        table:
          description: Идентификатор стола на который делается заказ
          type: integer
          example: 111
        comment:
          description: Комментарий к заказу
          type: string
          example: "Ну заяц! Ну погоди!!!"

    OrderItemForUpdate:
      description: Элемент заказа гостя
      properties:
        menuItemId:
          description: Код блюда
          type: string
          example: '494-234234'
        erpUni:
          description: Уникальный идентификатор блюда при разделении.
          type: string
          example: ""
        dishUni:
          description: Уникальный идентификатор блюда в сессии.
          type: string
          example: ""
        sessionUni:
          description: Уникальный идентификатор сессии.
          type: string
          example: ""
        count:
          description: Количество блюд заказанных гостем
          type: integer
          example: 1
        price: 
          description: Стоимость блюда
          type: integer
          example: 10000
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersItem'
    
    ComboForUpdate:
      description: Элемент комбо гостя
      properties:
        id:
          description: Код комбо
          type: string
          example: '494-234234'
        count:
          description: Количество комбо-блюд заказанных гостем
          type: integer
          example: 1
        price: 
          description: Стоимость комбо-блюда в копейках
          type: integer
          example: 10000
        dishUni:
          description: Уникальный идентификатор комбо в сессии.
          type: string
          example: ""
        sessionUni:
          description: Уникальный идентификатор сессии.
          type: string
          example: ""          
        items:
          description: массив блюд комбо
          type: array
          items:
            $ref: '#/components/schemas/OrderItemForUpdate'

    ComboOrder:
      description: Элемент комбо гостя
      properties:
        id:
          description: Код комбо
          type: string
          example: '494-234234'
        count:
          description: Количество комбо-блюд заказанных гостем
          type: integer
          example: 1
        price: 
          description: Стоимость комбо-блюда в копейках
          type: integer
          example: 10000
        items:
          description: массив блюд комбо
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    OrderItem:
      description: Элемент заказа гостя
      properties:
        menuItemId:
          description: Код блюда
          type: string
          example: '494-234234'
        name:
          description: Наименование блюда
          type: string
          example: 'Пицца 4 сыра'
        count:
          description: Количество блюд заказанных гостем
          type: integer
          example: 1
        codeDish: 
          description: Внешний код блюда
          type: string
          example: "372"
        guid: 
          description: Идентификатор строки
          type: string
          example: "FA0B2649-1932-4AB7-9A3E-91FC5DEDB8C6"
        sessionUni: 
          description: Идентификатор сессии
          type: string
          example: "101"
        dishUni: 
          description: Идентификатор блюда в сессии
          type: string
          example: "101"
        erpUni: 
          description: Идентификатор блюда при разделении
          type: string
          example: ""
        state: 
          description: статус блюда
          type: integer
          example: 4
        timeOfReturn:
          description: Дата и время отдачи блюда гостю в UNIX формате
          type: integer
          example: 1571133610        
        price: 
          description: Стоимость блюда
          type: integer
          example: 10000
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/ModifiersItem'
          
    GuestForUpdate:
      description: Гость в заказе
      properties:
        number:
          description: номер гостя
          type: integer
          example: 1
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        coupon:
          description: купон гостя
          type: string
          example: "312113213"
        course:
          description: Приоритет подачи блюд
          type: string
          example: "1"
        orderItems:
          description: список блюд гостя
          type: array
          items:
            $ref: '#/components/schemas/OrderItemForUpdate' 
        comboItems:
          description: список комбо гостя
          type: array
          items:
            $ref: '#/components/schemas/ComboForUpdate' 

    Guest:
      description: Гость в заказе
      properties:
        number:
          description: номер гостя
          type: integer
          example: 1
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        coupon:
          description: купон гостя
          type: string
          example: "312113213"
        course:
          description: Приоритет подачи блюд
          type: string
          example: "1"
        orderItems:
          description: список блюд гостя
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        comboItems:
          description: список комбо гостя
          type: array
          items:
            $ref: '#/components/schemas/ComboOrder'
            
    GuestsCountUpdate:
      description: Данные заказа
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '43220834'
        personId:
          description: Идентификатор официанта
          type: string
          example: '233123'
        count:
          description: Новое количество гостей
          type: integer
          example: 2

    OrderUpdateData:
      description: Данные заказа
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '43220834'
        table:
          description: Номер стола
          type: integer
          example: 1
        personId:
          description: Идентификатор официанта
          type: string
          example: '233123'
        actionId:
          description: Код акции применненой к заказу
          type: string
          example: '233123'
        separete:
          description: Признак разделения чеков по гостям
          type: boolean
          example: false
        guests:
          description: гости заказа
          type: array
          items:
            $ref: '#/components/schemas/GuestForUpdate'   
    
    OrderComlexData:
      description: Данные заказа
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '43220834'
        table:
          description: Номер стола
          type: integer
          example: 1
        personId:
          description: Идентификатор официанта
          type: string
          example: '233123'
        namePerson:
          description: Имя официанта
          type: string
          example: 'Сергеев Сергей Сергеевич'
        actionId:
          description: Код акции применненой к заказу
          type: string
          example: '233123'
        lastUpdate:  
          description: Дата и время последнего обновления заказа
          type: string
          example: "2019-02-11T17:32:35"
        version:  
          description: версия заказа
          type: integer
          example: 9
        state:
          description: Статус заказа
          type: integer
          example: 3
        separete:
          description: Признак разделения чеков по гостям
          type: boolean
          example: false
        printedAllPreBill:
          description: Признак распечатанных пречеков по всем гостям
          type: boolean
          example: false
        comment:
          description: Комментарий к заказу
          type: string
          example: 'Здесь могла бы быть ваша реклама'
        orderName:
          description: Название заказа в кипере
          type: string
          example: '6.1'
        guests:
          description: гости заказа
          type: array
          items:
            $ref: '#/components/schemas/Guest'   
 
    OrderSimpleData:
      description: Данные заказа
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: 'd0e14f7c-43ca-415f-bdff-e0ab2780a59f'
        personId:
          description: Идентификатор официанта
          type: string
          example: '90030'
        namePerson:
          description: Имя официанта
          type: string
          example: 'Иванов Иван Иванович'
        table:
          description: Номер стола
          type: integer
          example: 2
        price:
          description: Сумма заказа в копейках
          type: integer
          example: 20000
        separete:
          description: Признак разделения чеков по гостям
          type: boolean
          example: false
        printedAllPreBill:
          description: Признак распечатанных пречеков по всем гостям
          type: boolean
          example: false
        version:
          description: версия заказа
          type: integer
          example: 8
        state:
          description: Статус заказа
          type: integer
          example: 3
        finished: 
          description: Признак того что заказ завершен
          type: integer
          example: 1
        createTime: 
          description: Дата создания заказа
          type: string
          example: "2019-02-11T17:32:35"
        finishTime: 
          description: Дата завершения заказа
          type: string
          example: "1899-12-30T00:00:00"
        comment: 
          description: Комментарий к заказу
          type: string
          example: "+100500"
        orderName: 
          description: Название заказа в кипере
          type: string
          example: "6.1"
          

    ChangeTableRequestData:
      description: Данные для смены стола
      properties:
        orderId:
          description: Идентификатор заказа
          type: string
          example: '43220834'
        personId:
          description: Идентификатор официанта
          type: string
          example: '90030'
        newTable:
          description: гости заказа
          type: string
          example: '55234'      

    ListOrdersResult:
      description: Ответ ListOrders
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/OrderSimpleData'
      
    OrderResult:
      description: Ответ Order
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/OrderComlexData'
    
    DeliveryOrderUpdateData:
      description: Данные заказа
      properties:
        extOrderId:
          description: Внешний идентификатор заказа
          type: string
          example: '43220834'
        personId:
          description: Идентификатор официанта
          type: string
          example: '233123'
        date:
          description: Дата создания заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        guest_count:
          description: Количество гостей
          type: integer
          example: 1
        guest_name:
          description: Имя гостя
          type: string
          example: 'Иванов Иван Иванович'
        guest_phone:
          description: Телефон гостя
          type: string
          example: '+79534221617'
        client:
          description: Код клиента
          type: string
          example: '15'
        count_comment_for_client:
          description: Количество комментариев по клиенту
          type: integer
          example: 10  
        cardRequest:
          description: Клиент хочет получить карту
          type: boolean
          example: true
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        coupon:
          description: Купон гостя
          type: string
          example: "312113213" 
        address:
          description: Адрес
          type: string
          example: '1'  
        porch:
          description: Подъезд 
          type: string
          example: '2'    
        floor: 
          description: Этаж
          type: string
          example: '3'    
        apartment: 
          description: Квартира
          type: string
          example: '4'   
        intercom: 
          description: Код домофона
          type: string
          example: '4444' 
        restaurant: 
          description: Ресторан
          type: string
          example: ''  
        restaurant_id: 
          description: Код ресторана
          type: string
          example: ''  
        source_restaurant: 
          description: Ресторан источник
          type: string
          example: ''   
        pay_type: 
          description: Тип оплаты 1 - Наличные, 2 - Картой, 3 - Онлайн оплата
          type: integer
          enum:
          - 1
          - 2
          - 3
        filing: 
          description: Сдача с
          type: integer
          example: 1000
        delivery_date:
          description: Дата доставки заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        delivery_type: 
          description: Тип доставки 1 - Как можно скорее, 2 - Ко времени 
          type: integer
          enum:
          - 1
          - 2
        delivery_time:
          description: Время доставки 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        delivery_method:
          description: Метод доставки 1 - Курьер, 2 - Самовывоз
          type: integer
          enum:
          - 1
          - 2
        delivery_time_forecast:  
          description: Минуты затраченные на доставку
          type: integer 
          example: 60  
        comment: 
          description: Комментарий
          type: string
          example: ''
        delayTime:
          description: Время до которого отложена отправка заказа на кухню 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        courier:  
          description: ФИО курьера
          type: string 
          example: Иванов Иван Иванович 
        courier_id:
          description: Идентификатор курьера 
          type: string
          example: '00000001'
        delivery_fee:  
          description: Оплата курьеру в копейках
          type: integer 
          example: 1000  
        price:  
          description: Сумма заказа в копейках
          type: integer 
          example: 500
        orderId: 
          description: Код заказа на кассе
          type: string
          example: '345' 
        table:
          description: Номер стола
          type: integer
          example: 1
        items:
          description: Блюда
          type: array
          items:
            $ref: '#/components/schemas/DeliveryOrderItem'
        printBill: 
          description: признак печати фискального чека
          type: boolean 
          example: true
        printWaybill: 
          description: признак печати путевого листа
          type: boolean 
          example: true
        id_status: 
          description: Идентификатор статуса
          type: string
          example: '00000001'
        status: 
          description: Наименование статуса
          type: string
          example: 'Новый' 
        order_source:  
          description: Откуда пришел заказ 1 - Сайт, 2 - Мобильное приложение 3 - Коллцентр
          type: integer
          enum:
          - 1
          - 2
          - 3  


 
    DeliveryOrderResult:
      description: Ответ Delivery Order
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/DeliveryOrderComlexData'
    
    DeliveryOrderComlexData:
      description: Данные заказа доставки
      properties:
        extOrderId:
          description: Внешний идентификатор заказа
          type: string
          example: '43220834'
        date:
          description: Дата создания заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        guest_count:
          description: Количество гостей
          type: integer
          example: 1
        guest_name:
          description: Имя гостя
          type: string
          example: 'Иванов Иван Иванович'
        guest_phone:
          description: Телефон гостя
          type: string
          example: '+79534221617'
        client:
          description: Код клиента
          type: string
          example: '15'
        count_comment_for_client:
          description: Количество комментариев по клиенту
          type: integer
          example: 10  
        cardRequest:
          description: Клиент хочет получить карту
          type: boolean
          example: true
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        coupon:
          description: Купон гостя
          type: string
          example: "312113213" 
        address:
          description: Адрес
          type: string
          example: '1'  
        porch:
          description: Подъезд 
          type: string
          example: '2'    
        floor: 
          description: Этаж
          type: string
          example: '3'    
        apartment: 
          description: Квартира
          type: string
          example: '4'   
        intercom: 
          description: Код домофона
          type: string
          example: '4444'  
        restaurant: 
          description: Ресторан
          type: string
          example: ''  
        restaurant_id: 
          description: Код ресторана
          type: string
          example: ''  
        source_restaurant: 
          description: Ресторан источник
          type: string
          example: ''   
        pay_type: 
          description: Тип оплаты 1 - Наличные, 2 - Картой, 3 - Онлайн оплата
          type: integer
          enum:
          - 1
          - 2
          - 3
        filing: 
          description: Сдача с
          type: integer
          example: 1000 
        delivery_date:
          description: Дата доставки заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        delivery_type: 
          description: Тип доставки 1 - Как можно скорее, 2 - Ко времени 
          type: integer
          enum:
          - 1
          - 2
        delivery_time:
          description: Время доставки 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        delivery_method:
          description: Метод доставки 1 - Курьер, 2 - Самовывоз
          type: integer
          enum:
          - 1
          - 2
        delivery_time_forecast:  
          description: Минуты затраченные на доставку
          type: integer 
          example: 60  
        durationDeliveryFoot:  
          description: длительность доставки пешком в минутах
          type: integer 
          example: 60  
        durationDeliveryAvto:  
          description: длительность доставки на авто в минутах
          type: integer 
          example: 60 
        distance:  
          description: расстояние до клиента в метрах
          type: integer 
          example: 60   
        courier:  
          description: ФИО курьера
          type: string 
          example: Иванов Иван Иванович 
        courier_id:  
          description: Код курьера
          type: string 
          example: '4444' 
        delivery_fee:  
          description: Оплата курьеру в копейках
          type: integer 
          example: 1000  
        items:
          description: Блюда
          type: array
          items:
            $ref: '#/components/schemas/DeliveryOrderItem'
        comment: 
          description: Комментарий
          type: string
          example: ''  
        orderId: 
          description: Код заказа на кассе
          type: string
          example: '345' 
        table:
          description: Номер стола
          type: integer
          example: 1
        price:  
          description: Сумма заказа в копейках
          type: integer 
          example: 500   
        delayTime:
          description: Время до которого отложена отправка заказа на кухню 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        id_status: 
          description: Идентификатор статуса
          type: string
          example: '00000001'
        status: 
          description: Наименование статуса
          type: string
          example: 'Новый' 
        status_date:  
          description: Дата и время изменения статуса YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        available_actions: 
          description: Доступные действия
          type: array
          items:
            $ref: '#/components/schemas/Act'
        available_statuses: 
          description: Доступные статусы
          type: array
          items:
            $ref: '#/components/schemas/Status'    
        order_source:  
          description: Откуда пришел заказ 1 - Сайт, 2 - Мобильное приложение 3 - Коллцентр
          type: integer
          enum:
          - 1
          - 2
          - 3    
    
    DeliveryOrderItemsUpdateData:
      description: Данные заказа
      properties:
        extOrderId:
          description: Внешний идентификатор заказа
          type: string
          example: '43220834'
        items:
          description: блюда
          type: array
          items:
            $ref: '#/components/schemas/DeliveryOrderItem'  
    
    DeliveryOrderItem:
      description: Элемент заказа гостя
      properties:
        id:
          description: Код блюда
          type: string
          example: '494-234234'
        name:
          description: Наименование блюда
          type: string
          example: 'Пицца 4 сыра'
        count:
          description: Количество блюд 
          type: integer
          example: 1
        price: 
          description: Стоимость блюда в копейках
          type: integer
          example: 10000
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/DeliveryModifiersItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/DeliveryModifiersItem'
   
    DeliveryCommentForClientResult:
      description: Ответ Delivery CommentForClient
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/DeliveryCommentForClientData'
    
    DeliveryCommentForClientData:
      description: Комментарии по клиенту
      properties:
        comments: 
          description: Комментарии по клиенту
          type: array
          items:
            $ref: '#/components/schemas/CommentForClient'   
    
    DeliveryAvailableStatusesAndActionsResult:
      description: Ответ Delivery AvailableStatusesAndActions
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/DeliveryAvailableStatusesAndActionsData'
    
    DeliveryAvailableStatusesAndActionsData:
      description: Доступные переходы статусов и действия 
      properties:
        available_statuses: 
          description: Доступные переходы статусов
          type: array
          items:
            $ref: '#/components/schemas/Status'
        available_actions: 
          description: Доступные действия
          type: array
          items:
            $ref: '#/components/schemas/Act' 
            
    DeliveryOrderItemsResult:
      description: Ответ Delivery Order Items
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/DeliveryOrderItem'
    
    CourierAvailableStatuses:
      description: Доступные переходы статусов 
      properties:
        available_statuses: 
          description: Доступные переходы статусов
          type: array
          items:
            $ref: '#/components/schemas/Status'
         
    SiteOrderItem:
      description: Элемент заказа гостя
      properties:
        id:
          description: Код блюда 1c
          type: string
          example: '494-234234'
        name:
          description: Наименование блюда
          type: string
          example: 'Пицца 4 сыра'
        count:
          description: Количество блюд 
          type: integer
          example: 1
        price: 
          description: Стоимость блюда в копейках
          type: integer
          example: 10000
        toppings:
          description: Массив топпингов
          type: array
          items:
            $ref: '#/components/schemas/SiteModifiersItem'
        modifiers:
          description: Массив модификаторов
          type: array
          items:
            $ref: '#/components/schemas/SiteModifiersItem'
            
    DeliveryModifiersItem:
      description: Модификатор блюд
      properties:
        id:
          description: Идентификатор модификатора
          type: string
          example: '1001351'
        name:
          description: Наименование модификатора
          type: string
          example: Сливочный соус
        count:
          description: Количество
          type: integer
          example: 1
        price:
          description: Стоимость модификатора в копейках
          type: integer
          example: 1000

    SiteModifiersItem:
      description: Модификатор блюд
      properties:
        id:
          description: Идентификатор модификатора
          type: string
          example: '1001351'
        name:
          description: Наименование модификатора
          type: string
          example: Сливочный соус
        count:
          description: Количество
          type: integer
          example: 1
        price:
          description: Стоимость модификатора в копейках
          type: integer
          example: 1000
          
    Status:
      description: Структура статуса
      properties:
        id:
          description: Код 
          type: string
          example: '1'
        name:
          description: Наименование 
          type: string
          example: 'Отменен'
        name_button:
          description: Наименование действия
          type: string
          example: 'Отменить' 
          
    Act:
      description: Структура действия
      properties:
        id:
          description: Код 
          type: string
          example: '1'
        name:
          description: Наименование 
          type: string
          example: 'Отменен'
        name_button:
          description: Наименование действия
          type: string
          example: 'Отменить' 
          
    CommentForClient:
      description: Структура комментария
      properties:
        date:
          description: Дата YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        restaurant:
          description: Ресторан 
          type: string
          example: 'Алексин'
        comment:
          description: Комментарий
          type: string
          example: 'не отвечает' 
          
    ListOrdersDeliveryResult:
      description: Ответ ListOrdersDelivery
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryOrderGroupStatus'
    
    ListOrdersDeliveryForSearchResult:
      description: Ответ ListOrdersDeliveryForSearchResult
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryOrderSimpleData'
    
    DeliveryOrderStatus:
      description: Данные заказа
      properties:
        id:
          description: Идентификатор статуса
          type: string
          example: '00000001'
        name:
          description: Название статуса
          type: string
          example: 'Новый'

    DeliveryOrderGroupStatus:
      description: Ответ 
      type: object
      allOf:
      - $ref: '#/components/schemas/DeliveryOrderStatus'
      - properties:
          orders:
            type: array
            items:
              $ref: '#/components/schemas/DeliveryOrderSimpleData'
            
    DeliveryOrderSimpleData:
      description: Данные заказа
      properties:
        extOrderId:
          description: Внешний идентификатор заказа
          type: string
          example: '43220834'
        date:
          description: Дата создания заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        id_status: 
          description: Идентификатор статуса
          type: string
          example: '00000001'
        status: 
          description: Наименование статуса
          type: string
          example: 'Новый'   
        status_date:  
          description: Дата и время изменения статуса YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'  
        guest_name:
          description: Имя гостя
          type: string
          example: 'Иванов Иван Иванович'
        address:
          description: Адрес
          type: string
          example: '1'  
        porch:
          description: Подъезд 
          type: string
          example: '2'    
        floor: 
          description: Этаж
          type: string
          example: '3'    
        apartment: 
          description: Квартира
          type: string
          example: '4'    
        delivery_date:
          description: Дата доставки заказа YYYY-MM-DDThh:mm:ss±hh:mm
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00' 
        delivery_type: 
          description: Тип доставки 1 - Как можно скорее, 2 - Ко времени 
          type: integer
          enum:
          - 1
          - 2
        delivery_time:
          description: Время доставки 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        delivery_method:
          description: Метод доставки 1 - Курьер, 2 - Самовывоз
          type: integer
          enum:
          - 1
          - 2
        delivery_time_forecast:  
          description: Минуты затраченные на доставку
          type: integer 
          example: 60   
        durationDeliveryFoot:  
          description: длительность доставки пешком в минутах
          type: integer 
          example: 60  
        durationDeliveryAvto:  
          description: длительность доставки на авто в минутах
          type: integer 
          example: 60 
        distance:  
          description: расстояние до клиента в метрах
          type: integer 
          example: 60 
        price:  
          description: Сумма заказа в копейках
          type: integer 
          example: 500  
        table:
          description: Номер стола
          type: integer
          example: 11  
        delayTime:
          description: Время до которого отложена отправка заказа на кухню 0001-01-01Thh:mm:ss±hh:mm
          type: string
          format: date
          example: '0001-01-01T10:00:00+04:00'
        available_statuses: 
          description: Доступные переходы статусов
          type: array
          items:
            $ref: '#/components/schemas/Status'
        available_actions: 
          description: Доступные действия
          type: array
          items:
            $ref: '#/components/schemas/Act'  

    CouponResult:
      description: Ответ Order
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/CouponData'
    
    CardResult:
      description: Ответ Order
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/CardData'

    CouponData:
      description: Данные купона
      properties:
        UID:
          description: UID
          type: string
          example: "9220019757027239393"
        name:  
          description: Наименование купона
          type: string
          example: "Бесплатная пицца"

    CardData:
      description: Данные по карте
      properties:
        status:
          description: Статус карты
          type: string
          enum:
          - Active
          - Block
        comment:
          description: Причина блокировки карты
          type: string
        client:
          description: Имя клиента
          type: string
          example: "Вася Пупкин"
        bonusSum:
          description: Сумма бонусных баллов
          type: integer
          example: 1000

    Coupon:
      description: Купон для которого требуется получить данные
      properties:
        extId:
          description: Номер купона
          type: string
        cardTomato:
          description: Номер карты Томато-бонус
          type: string
          
    Card:
      description: Карта Томато-бонус для которой требуется получить данные
      properties:
        id:
          description: Номер карты Томато-бонус
          type: string

    Shedule: 
      description: расписание выполенния
      properties:
        startDate:
          description: Начало расписания
          type: string
          example: '2019-01-01T00:00:00'
        endDate:  
          description: Окончание расписания
          type: string
          example: '2020-01-01T00:00:00'
        days:
          description: Детализация расписания по дням
          type: array
          items:
            $ref: '#/components/schemas/Day'
    
    Day:        
      description: расписание действия акции или комбо-обеда в течении дня 
      properties:
        dayEnum:
          description: День действия
          type: integer
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          example: 1
        startTime:
          description: Начало действия в определенный день
          type: string
          example: '12:00:00'
        endTime:
          description: окончание действия в определенный день
          type: string
          example: '18:00:00'

    ActionResult:
      description: Ответ Order
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/Action'

    Action:
      description: Акция
      properties:
        id:
          description: Код акции
          type: string
          example: "0000001"
        name:
          description: Название акции
          type: string
          example: Все бесплатно
        minimumCount:
          description: Минимальное количество блюд для запуска акции
          type: integer
          example: 2
        picture:
          description: Картинка для акции
          type: string
          format: binary
        msgActiveAction:
          description: Сообщении при активной акции
          type: string
          example: У вас активна акция 
        msgDeficitAction:
          description: Сообщение при нехватке 1 блюда
          type: string
          example: У вас не хватает 1 блюдо до акции
        condition:
          description: Условие акции
          type: string
          example: Просто выбери блюдо и получи его бесплатно
        shedule:
          $ref: '#/components/schemas/Shedule'
        menu:
          description: Название акции
          type: array
          items:
            $ref: '#/components/schemas/ActionMenuModifiers'
        territory:
          description: территории - соответствие города и ресторана
          type: array
          items:
            $ref: '#/components/schemas/Territory'
        deactivateDelivery:
          description: признак отключения доставки ко времени и на завтра на время акции
          type: boolean
          example: true
        active:
          description: признак активности акции
          type: boolean
          example: true
          
    
    ActionMenuModifiers:
      description: акционное сочетание блюд и модификаторов
      properties:
        menuId:
          description: идентификатор блюда меню
          type: string
          example: '22313123'
        modifierId:
          description: идентификатор модификатора
          type: string
          example: '6992034'

    Territory:
      description: соответветствия городов и ресторанов 
      properties:
        cityId:
          description: идентификатор города
          type: string
          example: '5553'
        restaurantId:
          description: идентификатор ресторана
          type: string
          example: '1290932'

    Kpi:
      description: Цели по блюдам
      properties:
        menuItemId:
          description: идентификатор блюда
          type: string
          example: '54234'
        plan:
          description: количество блюд по плану
          type: integer
          example: 4
        fact:
          description: количество блюд по факту
          type: integer
          example: 8
    
    AccessData: 
      description: Доступ
      properties:
        functional:
          description: Функционал
          type: string
          example: Зал
        role:
          description: Роль
          type: string
          example: Менеджер  

    OnlineDeskResult:
      description: Данные онлайн-доски
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/OnlineDeskSimpleData'

    OnlineDeskByRestuarantResult:
      description: Данные онлайн-доски
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/OnlineDeskComplexData'
    
    OnlineDeskSimpleData:
      description: Данные по ресторану
      properties:
        id:
          description: Идентификатор ресторана
          type: string
          example: ''
        name:
          description: Название ресторана
          type: string
          example: ''
        fillingTheHall:
          description: Посадка зала
          type: integer
          example: 65
        maxFillingTheHall:
          description: Максимальная посадка зала
          type: integer
          example: 65
        plan:
          description: План по выручке
          type: integer
          example: 100
        proceeds:
          $ref: '#/components/schemas/Proceeds'
        openChecks:
          $ref: '#/components/schemas/OpenChecks'

            
    OnlineDeskComplexData:
      description: Данные онлайн-доски
      type: object
      allOf:
      - $ref: '#/components/schemas/OnlineDeskSimpleData'
      - properties:
          dishesPlan:
            type: array
            items:
              $ref: '#/components/schemas/DishesPlan'
          waiters:
            type: array
            items:
              $ref: '#/components/schemas/Waiters'

    Proceeds: 
      description: Выручка
      properties:
        hall:
          description: Выручка зал
          type: integer
          example: 100
        delivery:
          description: Выручка доставка
          type: integer
          example: 100
          
    OpenChecks: 
      description: Открытые чеки
      properties:
        hall:
          description: Открытые чеки зал
          type: integer
          example: 100
        delivery:
          description: Открытые чеки доставка
          type: integer
          example: 100
          
    Waiters: 
      description: Данные по официанту
      properties:
        name:
          description: ФИО официанта
          type: string
          example: ''
        proceeds:
          description: Выручка всего
          type: integer
          example: 100
        openTables:
          description: Открыто столов
          type: integer
          example: 100
        dishesFact:
          type: array
          items:
            $ref: '#/components/schemas/DishesFact'
            
    DishesFact: 
      description: Данные по блюдам
      properties:
        name:
          description: Наименование блюда
          type: string
          example: 'борщ'
        fact:
          description: Факт по блюдам
          type: integer
          example: 100
    
    DishesPlan: 
      description: Данные по блюдам
      properties:
        name:
          description: Наименование блюда
          type: string
          example: 'борщ'
        plan:
          description: План по блюдам
          type: integer
          example: 100
          
    LoginAD:
      properties:
        login:
          description: логин
          type: string
          example: ''
          
    RestuarantId:
      properties:
        id:
          description: код ресторана
          type: string
          example: ''
    
    FastSearchDeliveryOrderData:
      description: Данные для поиска
      properties:
        string_for_search:
          description: строка для поиска
          type: string
          example: 'Иван'
    
    SlowSearchDeliveryOrderData:
      description: Данные для поиска
      properties:
        phone:
          description: Номер телефона
          type: string
          example: '+79534561514'
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        start_date:
          description: Дата начала периода YYYY-MM-DDThh:mm:ss±hh:mm  
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'  
        end_date:
          description: Дата окончания периода YYYY-MM-DDThh:mm:ss±hh:mm  
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'    
    
    AddCommentForClientData:
      description: Данные для добавления комментария
      properties:
        client:
          description: Код клиента
          type: string
          example: '15'   
        comment:
          description: комментарий
          type: string
          example: 'тест'   
          
    SiteOrderDeliveryData:
      description: Данные заказа
      properties:
        extOrderId:
          description: Внешний идентификатор заказа
          type: string
          example: '43220834'
        date:
          description: Дата создания заказа YYYY-MM-DDThh:mm:ss±hh:mm  
          type: string
          format: date
          example: '2009-02-15T10:00:00+04:00'
        guest_count:
          description: Количество гостей
          type: integer
          example: 1
        guest_name:
          description: Имя гостя
          type: string
          example: 'Иванов Иван Иванович'
        guest_phone:
          description: Телефон гостя
          type: string
          example: '+79534221617'
        client:
          description: Код клиента
          type: string
          example: '15'
        cardRequest:
          description: Клиент хочет получить карту
          type: boolean
          example: true
        cardTomato:
          description: Карта томато-бонус
          type: string
          example: "13212312"
        coupon:
          description: Купон гостя
          type: string
          example: "312113213"
        address:
          description: Адрес
          type: string
          example: '1'  
        porch:
          description: Подъезд 
          type: string
          example: '2'    
        floor: 
          description: Этаж
          type: string
          example: '3'    
        apartment: 
          description: Квартира
          type: string
          example: '4'  
        intercom: 
          description: Код домофона
          type: string
          example: '4444' 
        restaurant: 
          description: Код ресторана
          type: string
          example: '11'
        pay_type: 
          description: Тип оплаты 1 - Наличные, 2 - Картой курьеру, 3 - Онлайн оплата
          type: integer
          enum:
          - 1
          - 2
          - 3
        filing: 
          description: Сдача с в копейках
          type: integer
          example: 1000 
        delivery_type: 
          description: Тип доставки 1 - Как можно скорее, 2 - Ко времени 3 - На завтра
          type: integer
          enum:
          - 1
          - 2
          - 3
        delivery_time:
          description: Минуты от начала дня (в который заказ должен быть доставлен, если на завтра то это утро завтра) до времени доставки
          type: integer
          example: 60
        delivery_method:
          description: Метод доставки 1 - Курьер, 2 - Самовывоз
          type: integer
          enum:
          - 1
          - 2
        delivery_fee:  
          description: Оплата курьеру в копейках
          type: integer 
          example: 1000 
        delivery_time_forecast:  
          description: Минуты затраченные на доставку
          type: integer 
          example: 60   
        comment: 
          description: Комментарий
          type: string
          example: ''  
        order_source: 
          description: Откуда пришел заказ 1 - Сайт, 2 - Мобильное приложение 3 - Коллцентр
          type: integer
          enum:
          - 1
          - 2
          - 3  
        price:
          description: Сумма заказа в копейках
          type: integer 
          example: 1000 
        items:
          description: Блюда
          type: array
          items:
            $ref: '#/components/schemas/SiteOrderItem'
            
    CardDataObj:
      type: object
      discriminator:
        propertyName: CardDataObj    
      description: Данные для активации карты
      properties:
        clientId:
          description: Код клиента
          type: string
          example: '11231235'   
        card:
          description: номер карты
          type: string
          example: '00000111'


    BlockCardData:
      type: object
      allOf:
      - $ref: '#/components/schemas/CardDataObj'
      - properties:
          reason:
            type: string
            example: "Карта утеряна"

    ChangeCardData:
      type: object
      allOf:
      - $ref: '#/components/schemas/CardDataObj'
      - properties:
          newCard:
            description: номер новой карты
            type: string
            example: '00000111'
    
    GuestObj:
      type: object
      discriminator:
        propertyName: GuestObj    
      description: Данные клиента
      properties:
        id:
          description: Код клиента
          type: string
          example: '11231235'   
        phone:
          description: Телефон клиента
          type: string
          example: '79008888888'
        name:
          description: имя клиента
          type: string
          example: 'Вася'
          
    GuestForSite:
      type: object
      allOf:
      - $ref: '#/components/schemas/GuestObj'
      - properties:
          email:
            description: адрес электронной почты
            type: string
            example: 'qrqre@afdadf.dd'
          birthday:
            description: Дата рождения клиента 
            type: string
            example: '2000-12-12'
          bonuscard:
            description: номер карты Томато-бонус
            type: string
            example: '00000111'
          acceptInform:
            description: согласие на обработку информации 
            type: boolean
            example: true
          informChannel:
            description: Способ оповещений клиента (0 - смс, 1 - e-mail) 
            type: array
            items: 
              type: integer
              enum:
                - 0
                - 1
              example: 0
    MenuType:
      properties:
        type:
          description: тип меню (1 - доставка, 0 - зал)
          type: integer
          enum:
            - 0
            - 1
          example: 0
          
    IdCourier:
      properties:
        id_Courier:
          description: код курьера
          type: string
          example: '007'     
              
    UIDRoute:
      properties:
        uid_route:
          description: идентификатор маршрута
          type: string
          example: 'e2989ec9-5423-11ea-ba36-005056bfa5ba'
    
    UIDPoint:
      properties:
        uid_point:
          description: идентификатор точки
          type: string
          example: 'f2989ec9-5423-11ea-ba36-005056bfa5bd'
          
    RouteResult:
      description: маршрут
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/RouteData'
            
    ListRoutesResult:
      description: маршруты
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/RouteData'
    
    ListPaymentsResult:
      description: маршруты
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PaymentData'
    
    PaymentData:
      description: оплаты
      properties:
        sum:
          description: сумма оплаты в рублях
          type: integer
          example: 180
        name:
          description: имя типа оплаты
          type: string
          example: "Оплата по времени"
        detail:
          description: Детальная расшифровка по составу оплаты
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetail'
          
    PaymentDetail:
      description: Расшифровка типа оплаты
      properties:
        descr:
          description: Описание расшифровки
          type: string
          example: "с 11.00 до 17.00"
        count:
          description: Количество чего-то
          type: integer
          example: 9
        type:  
          description: тип единиц измерений
          type: integer
          enum:
          - 1 - часы
          - 2 - штуки
          - 3 - км
          - 4 - проценты
          - 0 - все остальное
          example: 1
        alg:
          description: алгоритм рассчета суммы оплаты
          type: string
          example: "1 час = 30 руб."
            
    RouteData:
      description: данные маршрута
      properties:
        uid_route:
          description: идентификатор маршрута
          type: string
          example: 'e2989ec9-5423-11ea-ba36-005056bfa5ba'
        id_status:
          description: код статуса маршрута 1 - В плане, 2 - В работе, 3 - Завершен
          type: string
          enum:
          - 1
          - 2
          - 3
        mileage:
          description: пробег
          type: integer
          example: 45
        bonus:
          description: бонус в рублях
          type: integer
          example: 180 
        planned_time:  
          description: плановое время в секундах от начала дня
          type: integer
          example: 40000
        delivery_time:  
          description: время доставки в секундах от начала дня
          type: integer
          example: 50000
        array_points:
          description: точки маршрута
          type: array
          items:
            $ref: '#/components/schemas/PointComplexData'
   
    PointComplexResult:
      description: точка
      type: object
      allOf:
      - $ref: '#/components/schemas/apiResult'
      - properties:
          data:
            $ref: '#/components/schemas/PointComplexData'
    
    PointComplexData:
      description: точка маршрута информация
      properties:
        uid_point:
          description: идентификатор маршрута
          type: string
          example: 'j2989ec9-5423-11ea-ba36-005056bfa5d'
        type_point:
          description: тип точки 1 - Ресторан , 2 - Гость
          type: string
          enum:
          - 1
          - 2
        lat:
          description: широта
          type: integer
          example: -21.8050846
        lon:
          description: долгота
          type: integer
          example: -49.089953
        id_status_point:
          description: код статуса точки 0 - В плане, 1 - Принят, 2 - Выполнен, 3 - Отменен, 4 - Пропущен, 5 - Завершен
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        current_point:
          description: признак текущей точки
          type: boolean
          example: true
        address:
          description: адрес
          type: string
          example: 'проспект Ленина 146'  
        plan_time:  
          description: плановое время в секундах от начала дня
          type: integer
          example: 40000
        fact_time:  
          description: фактическое время  в секундах от начала дня
          type: integer
          example: 50000
        guest_name:
          description: Имя гостя
          type: string
          example: 'Иванов Иван Иванович'
        guest_phone:
          description: Телефон гостя
          type: string
          example: '+79534221617'  
        restаurant_phone:
          description: Телефон ресторана
          type: string
          example: '+79534221617'  
        porch:
          description: Подъезд 
          type: string
          example: '2'    
        floor: 
          description: Этаж
          type: string
          example: '3'    
        apartment: 
          description: Квартира
          type: string
          example: '4'   
        intercom: 
          description: Код домофона
          type: string
          example: '4444'   
        pay_type: 
          description: Тип оплаты 1 - Наличные, 2 - Картой, 3 - Онлайн оплата
          type: integer
          enum:
          - 1
          - 2
          - 3
        filing: 
          description: Сдача с в рублях
          type: integer
          example: 100 
        comment: 
          description: Комментарий
          type: string
          example: ''  
        detail:
          description: детализация
          type: array
          items:
            $ref: '#/components/schemas/DetailPoint'    
    
    DetailPoint:
      description: детализация точки маршрута 
      properties:
        address:
          description: адрес
          type: string
          example: 'проспект Ленина 146' 
        items:
          description: список блюд гостя
          type: array
          items:
            $ref: '#/components/schemas/DeliveryOrderItem'
            
    ChangePoint:
      description: Данные для обновления статуса точки марштура 
      properties:
        uid_point:
          description: идентификатор 
          type: string
          example: 'проспект Ленина 146' 
        id_status_point: 
          description: код статуса точки 0 - В плане, 1 - Принят, 2 - Выполнен, 3 - Отменен, 4 - Пропущен, 5 - Завершен
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        amount_of_cash:
          description: сумма наличными приходит только в конечной точке маршрута!
          type: integer
          example: 1000

    RecallData:
      description: Данные отзыва
      properties:
        number:
          description: Код чека / заказа 
          type: integer
          example: 31213212
        bonus_card:
          description: номер карты
          type: integer
          example: 31213212  
        type:
          description: тип операции (Зал - 1/Доставка - 2)
          type: integer
          enum:
          - 1
          - 2
          example: 1
        recall_text:
          description: текст отзыва
          type: string
          example: 'все ок'
        photo:
          description: массив двоички фоток
          type: array
          items:
            type: string
            format: binary