{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "MembersList",
    "description" : "Common MembersList API",
    "version" : "10.2.1"
  },
  "paths" : {
    "/members/" : {
      "get" : {
        "tags" : [ "member" ],
        "summary" : "Get the list of Members associated with search criteria",
        "description" : "Returns a list of member object. \n\nSearch can be performed using Member Last Name, Member Number or by Member Date of Birth. Additional search fields can be included as needed by the configuration of the portal.\n",
        "operationId" : "members_list",
        "parameters" : [ {
          "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/PaginationQueryParameters/10.1#/components/parameters/orderingParam"
        }, {
          "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/PaginationQueryParameters/10.1#/components/parameters/pageParam"
        }, {
          "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/PaginationQueryParameters/10.1#/components/parameters/pageSizeParam"
        }, {
          "name" : "first_name",
          "in" : "query",
          "description" : "Member's first name to be used for search by first name. Partial searches can be implemented by Payer.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_name",
          "in" : "query",
          "description" : "Member's last name to be used for search by last name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_number",
          "in" : "query",
          "description" : "Unique member identifier associated with the member",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "birth_date",
          "in" : "query",
          "description" : "Members date of birth in YYYY-MM-DD format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "date_of_birth",
          "in" : "query",
          "description" : "Date of birth. *** DEPRECATED. Use birth_date parameter instead. *** Members date of birth in YYYY-MM-DD format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "phone_number",
          "in" : "query",
          "description" : "Members phone number in xxx-xxx-xxxx format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "999-999-9999"
          }
        }, {
          "name" : "market_segment",
          "in" : "query",
          "description" : "Market segment based search e.g. IFP, Medicare, Consumer Direct, Large Group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "line_of_business",
          "in" : "query",
          "description" : "Line of business based search e.g. Medical, Dental, Vision etc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_display_identifier",
          "in" : "query",
          "description" : "returns claims based on member_display identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_name",
          "in" : "query",
          "description" : "name searches against name fields including first, middle, last, and all name fields.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "minLength" : 3
          }
        }, {
          "name" : "ssn",
          "in" : "query",
          "description" : "member's ssn. Format nnnnnnnnn. .",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "minLength" : 9
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "member's email. Format xyz@xyz.xxx .",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "address_city",
          "in" : "query",
          "description" : "member's permanent address's city.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "address_state",
          "in" : "query",
          "description" : "member's permanent address's state.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "address_zip",
          "in" : "query",
          "description" : "member's permanent address's zipcode.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "minLength" : 5
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of member objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "count", "results" ],
                  "type" : "object",
                  "properties" : {
                    "count" : {
                      "type" : "integer",
                      "description" : "Count representing the total number of objects available to be returned in the results array"
                    },
                    "next" : {
                      "type" : "integer",
                      "description" : "query identifier defined by the api developer for getting the next set of records"
                    },
                    "previous" : {
                      "type" : "integer",
                      "description" : "query identifier defined by the api developer for getting the previous set of records"
                    },
                    "results" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/MemberModel/10.2.1#/components/schemas/Member"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/ErrorModel/10.0.2#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "https://api.swaggerhub.com/domains/Zipari-Core-Services/ErrorModel/10.0.2#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}