penapi: 3.0.0
info:
  description: Core API
  version: "1.0.0-oas3"
  title: Core API
tags:
  - name: CardProcessor
    description: Card Processor operations
  - name: PaymentProcessor
    description: Payment Processor operations
    
security:
  - bearerAuth: [] 
  
paths:
  /activateCard:
    post:
      tags:
        - CardProcessor
      description: ''
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
        '406':
          description: failure (wrong number)
          content:
            application/json:
              schema:
                type: string
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCard'
        description: activate card
        required: true

  /userStatus:
    get:
      tags:
        - CardProcessor
      description: ''
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatus'
        '400':
          description: failure
          content:
            application/json:
              schema:
                type: string
  /setUserInfo:
    post:
      tags:
        - CardProcessor
      description: ''
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
        '406':
          description: failure
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        description: set user info
        required: true
        
  /paymentInit:
    post:
      tags:
        - PaymentProcessor
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: 'errorCode = 0, startUrl contains the URL to proceed to'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '406':
          description: 'errorCode != 0, errorMessage contains text, startUtl is empty'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'

  /limits:
    get:
      tags:
        - PaymentProcessor
      description: ''
      responses:
        '200':
          description: Returns current deposit limits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Limit'

  /balance:
    get:
      tags:
        - PaymentProcessor
      description: ''
      responses:
        '200':
          description: Returns card balance
          content:
            application/json:
              schema:
                type: number

  /statement:
    get:
      tags:
        - PaymentProcessor
      description: ''
      parameters:
      - name: startDate
        in: query
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        schema:
          type: string
          format: date
      responses:
        '200':
          description: Returns list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Statement'

servers:
  - url: 'https://virtserver.swaggerhub.com/Project007/Core/1.0.0'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:

    ActivateCard:
      type: object
      required:
        - digits
      properties:
        digits:
          type: string
          pattern: '^\d{4}$'

    UserStatus:
      type: string
      enum:
        - CREATED
        - DEFFERED
        - REGISTERED
        - NOT_VERIFIED
        - VERIFIED
        - ACTIVE
        - BLOCKED

    UserInfo:
      type: object
      required:
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        birthDate:
          type: string
        idNumber:
          type: string
        idType:
          type: string
        country:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string

    PaymentRequest:
      type: object
      required:
        - paymentType
        - amount
      properties:
        paymentType:
          description: Payment type ID
          type: integer
          format: int32
        amount:
          description: Amount in EUR
          type: string
          pattern: '^\d+\.\d{2}$'

    PaymentStatus:
      type: object
      properties:
        errorCode:
          type: integer
        errorMessage:
          type: string
        startUrl:
          type: string
    
    Limit:
      type: object
      properties:
        paymentMethod:
          type: string
        amount:
          type: string
          pattern: '^\d+(\.\d+)?$'

    Statement:
      type: object
      properties:
        transDate:
          type: string
        transType:
          type: string
        transTypeDesc:
          type: string
        currency:
          type: string
        amount:
          type: string
          pattern: '^\d+\.\d{2}$'
        fee:
          type: string
          pattern: '^\d+\.\d{2}$'