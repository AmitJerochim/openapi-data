openapi: 3.0.1
info:
  title: YAMEE API
  version: v1
servers:
  - url: 'http://sensorik.techranco.dev/yamee'
    description: Generated server url
paths:
  /projects:
    get:
      tags:
        - projects-controller
      operationId: listProjects
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
        - projects-controller
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  '/projects/{id}':
    get:
      tags:
        - projects-controller
      operationId: getProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      tags:
        - projects-controller
      operationId: updateProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
        - projects-controller
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
  /roles:
    get:
      tags:
        - identity-controller
      operationId: getAuthorizedUserName
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
  /teams:
    get:
      tags:
        - team-controller
      operationId: getAll
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      tags:
        - team-controller
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
  '/teams/{id}':
    get:
      tags:
        - team-controller
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
    put:
      tags:
        - team-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      tags:
        - team-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
  /profiles:
    get:
      tags:
        - profile-controller
      operationId: getProfile
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    put:
      tags:
        - profile-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /users:
    get:
      tags:
        - user-controller
      operationId: getAll_1
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user-controller
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  '/users/{id}':
    get:
      tags:
        - user-controller
      operationId: get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - user-controller
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - user-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
      responses:
        '200':
          description: default response
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        goal:
          type: string
        startDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        team:
          $ref: '#/components/schemas/Team'
        probands:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Team:
      required:
        - name
      type: object
      properties:
        id:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        name:
          maxLength: 255
          minLength: 1
          type: string
        description:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    User:
      type: object
      properties:
        id:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Avatar:
      type: object
      properties:
        picture:
          type: string
        mimeType:
          type: string
          enum:
            - WORD
            - RTF
            - EXCEL
            - POWERPOINT
            - ODT
            - ODS
            - ODP
            - PDF
            - TXT
            - HTML
            - HTM
            - JPEG
            - JPG
            - PNG
            - SVG
            - GIF
            - BMP
            - CSV
            - XML
    Profile:
      type: object
      properties:
        id:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        firstName:
          type: string
        lastName:
          type: string
        nickname:
          type: string
        username:
          type: string
        aboutMe:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        address:
          type: string
        locale:
          type: object
          properties:
            displayName:
              type: string
            script:
              type: string
            country:
              type: string
            variant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            language:
              type: string
        userId:
          type: string
        avatar:
          $ref: '#/components/schemas/Avatar'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
