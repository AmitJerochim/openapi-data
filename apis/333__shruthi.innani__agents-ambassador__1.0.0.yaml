openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/shruthi.innani/agents-ambassador/1.0.0
info:
  description: API to fetch the ambassador information associated with the requested rewards account
  version: "1.0.0"
  title: agents ambassador
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: queries agents
    description: queries agents
paths:
  /queries/agents:
    post:
      summary: Fetches agent info
      description: Fetches the ambassador information associated with the requested rewards account
      parameters:
      - in: header
        name: Authorization
        description: Bearer Access Token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueriesAgentsRequest'
        description: queries agents request
      responses:
        200:
          description: agents info response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueriesAgentsResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFoundRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityError'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableError'
components:
  schemas:
    QueriesAgentsRequest:
      description: Queries Agents Request Object
      required:
        - queries
      type: object
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/Query'
    
    Query:
      description: Input query request for searching the agent info
      required:
        - id
      type: object
      properties:
        id:
          type: string
        values:
          type: array
          items:
            type: string
            
    QueriesAgentsResponse:
      description: Queries Agents Response Object
      required:
        - agents
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/AgentsInfo'
            
    AgentsInfo:
      description: Agents Info Response
      properties:
        eid:
          description: Ambassador EID
          type: string
          example: "TCMS861"
        firstName:
          description: Ambassador first name
          type: string
          example: "agent"
        lastName:
          description: Ambassador last name
          type: string
          example: "vinod"
        phoneNumber:
          description: Ambassador phone number
          type: string
          example: "9898989898"
        email:
          description: Ambassador email
          type: string
          example: "agent.vinod@marriott.com"
          
    InternalServerError:
      properties:
        messages:
          description: All error messages in array format.
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            - message: Internal Server Error,
              field: 500,
              type: user

    ServiceUnavailableError:
      properties:
        messages:
          description: All error messages in array format.
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            - message: Service Unavailable,
              field: 503,
              type: user

    UnprocessableEntityError:
      properties:
        messages:
          description: All error messages in array format.
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            - message: Invalid profile type.,
              field: profiletype.invalid,
              type: user


    Error:
      type: object
      description: Collection of messages describing any errors that occured during the request.
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'

    ErrorMessage:
      type: object
      description: The actual message that is meant for client to consume and use
      properties:
        code:
          type: string
          description: Internal custom Marriot error code
          example: '40001'
          maxLength: 50
        message:
          type: string
          description: User friendly message with basic information on what the error was
          example: 'ERROR: missing required parameters - requestBody.email'
          maxLength: 254
        field:
          type: string
          description: (OPTIONAL) Field that caused the error
          example: requestBody.email
          maxLength: 50
        moreinfo:
          type: string
          description: URL for full documentation on error code
          example: api.marriott.com/errors/40001
          maxLength: 254
        type:
          type: string
          description: type of message
          maxLength: 20
          enum:
            - user
            - dev
        status:
          type: integer
          description: >-
            the status of a specific error, meant to support 207 Multi-Status
            responses
          maxLength: 3
          enum:
            - 200
            - 201
            - 207
            - 400
            - 404
            - 412
            - 422
            - 500
            - 501
        source:
          type: string
          description: (OPTIONAL) The source system that caused the issue
          example: UGI
          maxLength: 30

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundRequest:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
