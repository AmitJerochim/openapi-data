openapi: 3.0.0
servers: []
info:
  description: This is myPassword API
  version: "1.0.0"
  title: myPassword API
  contact:
    email: DL-In-IAM@airbus.com
  
paths: 
  /systems:
    get:
      tags:
        - systems
      summary: Get All the systems
      operationId: getSystems
      description: Get the systems supported by myPassword
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/RemoteSystem'
                        status:
                          $ref: '#/components/schemas/Error'
        '404':
          description: Result Not Found
        '500':
          description: Server Error

  /users/{userid}/systems:
    get:
      tags:
        - systems
      summary: Get the systems assigned to you userid
      operationId: getUserSystems
      description: Get the user systems
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: user login
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/UserAccount'
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error
       
  /users/{userId}/systems/{systemId}:
    get:
      tags:
        - systems
      summary: Verify the user in different systems
      operationId: VerifyUserSystems
      description: Verify the user in different systems like myPassword, AD, windows, SAP, WINDCHILL etc
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemId
          required: true
          schema:
            type: string
          description: system ID for myPassword and AD is 0. Remaining types has systemID in myPassword DB.
        - in: query
          name: type
          required: true
          schema:
            type: string
          description: myPassword or AD or windows or SAP/WINDCHILL
        - in: query
          name: domain
          required: false
          schema:
            type: string
          description: EU or NA or AS
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/UserExists'
                    type: object
        '400': 
          description: Bad Request
        '500':
          description: server Error
          
  /users/{userid}/systems/default:
    post:
      tags:
        - systems
      summary: Add SAP systems into myPassword for a particular user
      operationId: AddDefaultSAPSystems
      description: Add SAP systems into myPassword for a particular user
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
      responses:
        '201':
          description: Created
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error
          
  /users/{userid}/systems/{systemid}:
    post:
      tags:
        - systems
      summary: Add the system to user
      operationId: AddSystemMyPassword
      description: Add SAP systems into myPassword for a particular user
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
        - in: query
          name: loginName
          required: true
          schema:
            type: string
          description: Enter the system login id
      responses:
        '201':
          description: Created
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400': 
          description: Bad Request
        '500':
          description: Server Error
    
    delete:
      tags:
        - systems
      summary: delete the system for user
      operationId: deleteSystem
      description: delete the systems in myPassword for a particular user
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
        
      responses:
        '202':
          description: Accepted
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400': 
          description: Bad Request
        '500':
          description: Server Error
          
  /users/{userid}/systems/{systemid}/password-reset:
    post:
      tags:
        - systems
      summary: Reset the password for WINDOWS, SAP and WINDCHILL Systems
      operationId: resetPassword
      description: Reset the password for WINDOWS, SAP and WINDCHILL Systems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
      responses:
        '202':
          description: Accepted
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error
          
  /users/{userid}/systems/{systemid}/password-change:
    post:
      tags:
        - systems
      summary: Change the Password for SAP
      operationId: changePassword
      description: Change the Password for SAP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
      responses:
        '202':
          description: Accepted
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400': 
          description: Bad Request
        '500':
          description: Server Error
          
  /users/{userid}/systems/sso-activate:
    post:
      tags:
        - systems
      summary: Activate SSO for SAP Systems
      operationId: ActivateSSO
      description: Activate SSO for SAP Systems
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: query
          name: systemType
          required: false
          schema:
            type: string
          description: windows or SAP or Windchill     
      responses:
        '202':
          description: Accepted
          content:
            application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400': 
          description: Bad Request
        '500':
          description: Server Error
  
  /users/{userid}/systems/{systemid}/unlock:
    post:
      tags:
        - systems
      summary: Unlock functionality for SAP systems
      operationId: UnlockFunctionality
      description: Unlock functionality for SAP Systems
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
      responses:
        '202':
          description: Accepted
          content:
              application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error 
  
  /users/{userId}/systems/{systemid}/verify-credentials:
    post:
      tags:
        - systems
      summary: Verify the user credentials in SAP, windows and Windchill systems
      operationId: VerifyUserAccount
      description: Verify the user credentials in SAP, windows and Windchill systems
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: NG ID of the user
        - in: path
          name: systemid
          required: true
          schema:
            type: string
          description: system id
      responses:
        '202':
          description: Accepted
          content:
              application/json:
                schema:
                      properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error 
  
  /questions:
    get:
      tags:
        - secretQA
      summary: Get All the questions
      operationId: getQuestions
      description: Get the Questions supported by myPassword
      parameters:
        - in: query
          name: language
          required: false
          schema:
            type: string
          description: default language - EN
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/Questions'
                        status:
                          $ref: '#/components/schemas/Error'
        '404':
          description: Result Not Found
        '500':
          description: Server Error       
  
  /users/{user_login}/questions:
    get:
      tags:
        - secretQA
      summary: Get only the Questions
      operationId: getUserQuestions
      description: Get only the Questions created by user
      parameters:
        - in: path
          name: user_login
          required: true
          schema:
            type: string
          description: Ng Id of the user
        - in: query
          name: language
          required: false
          schema:
            type: string
          description: default language - EN
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            type: integer
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '404':
          description: Result Not Found
        '500':
          description: Server Error       
  
  /users/{user_login}/answers:
    get:
      tags:
        - secretQA
      summary: Get the Questions and its answer by user
      operationId: getUserQuestionAnswer
      description: Get the Questions and its answer by user
      parameters:
        - in: path
          name: user_login
          required: true
          schema:
            type: string
          description: Ng Id of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/Answer'
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '404':
          description: Result Not Found
        '500':
          description: Server Error       
  
    post:
      tags:
        - secretQA
      summary: Add the Questions and its answer for a user
      operationId: AddUserQuestionsAnswer
      description: Add the Questions and its answer for a user
      requestBody:
        description: Must have 5 questions to create the user account.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/List'
                - type: object
                  properties:
                    Answer:
                      type: array
                      items:
                        $ref: '#/components/schemas/Answer'
      parameters:
        - in: path
          name: user_login
          required: true
          schema:
            type: string
          description: Ng Id of the user
      responses:
        '201':
          description: Created
          content:
            application/json:
                schema:
                    properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400': 
          description: Bad Request
        '500':
          description: Server Error
    
    put:
      tags:
        - secretQA
      summary: update the Questions or its answer for a user
      operationId: UpdateUserQuestionsAnswer
      description: Update the Questions or its answer for a user
      requestBody:
        description: send only updated questions and its answer set
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/List'
                - type: object
                  properties:
                    Answer:
                      type: array
                      items:
                        $ref: '#/components/schemas/Answer'
      parameters:
        - in: path
          name: user_login
          required: true
          schema:
            type: string
          description: Ng Id of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                    properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error       
  
  /users/{userid}/answers/verify:
    post:
      tags:
        - secretQA
      summary: Validate the each answer with the Question id
      operationId: VerifyUserQuestionsAnswer
      description: Validate the each answer with the Question id
      requestBody:
        description: send questions and its answer list to verify
        required: true
        content:
          application/json:
            schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/Answer'
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
          description: Ng Id of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/List'
                    - type: object
                      properties:
                        data: 
                          type: array
                          items: 
                            $ref: '#/components/schemas/CheckAnswer'
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error
  
  /scopes:
    get:
      tags:
        - scopes
      summary: get the scopes
      operationId: scopes
      description: get the scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
                schema:
                    properties:
                        id: 
                          type: integer
                        description:
                          type: string
  
  /scopes/{scopeid}/token:
    post:
      tags:
        - scopes
      summary: Generate the token from IAMAPI
      operationId: generateToken
      description: Generate the token
      parameters:
        - in: path
          name: scopeid
          required: true
          schema:
            type: integer
          description: Pass the scope either 1 or 2
      responses:
        '201':
          description: created
          content:
            application/json:
                schema:
                    properties:
                        data: 
                          type: string
                        status:
                          $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request
        '500':
          description: Server Error
  
components:
  schemas:   
    Error:
      type: object
      properties:
        error:
          type: boolean
        errorCode:
          type: integer
        errormsg:
          type: string
    List:
        type: object
    RemoteSystem:
      type: object
      properties:
        id:
          type: integer
        systemtype:
          type: string
        systemname:
          type: string
        systemlable:
          type: string
        description:
          type: string
    UserAccount:
        type: object
        properties:
          accountid:
            type: integer
          accountname:
            type: string
          accountlabel:
            type: string
          login:
            type: string
          isLocked:
            type: string
          systemType:
            type: string
          status:
            type: string
          isUnlockable:
            type: string
          userSSOEnabled:
            type: string
          environment:
            type: string
    UserExists:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserData'
        status:
          $ref: '#/components/schemas/Error'
    UserData:
      type: object
      properties:
        UserExists:
          type: boolean
        user_email:
          type: string
    Request:
      type: object
      required:
        - system_Type
        - client_login
      properties:
        system_Type:
          type: string
        client_login:
          type: string
        current_password:
          type: string
        new_password:
          type: string
    Questions:
      type: object
      properties:
        id:
          type: integer
        label: 
         type: string
    Answer:
      type: object
      properties:
        ordinal:
          type: integer
        questionid:
          type: integer
        answer:
          type: string
    CheckAnswer:
      type: object
      properties:
        questionId:
          type: integer
        IsAnswerVaid:
          type: boolean
