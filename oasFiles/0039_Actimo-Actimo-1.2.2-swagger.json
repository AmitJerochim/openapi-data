{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "Actimo API",
    "url" : "http://actimo.com/api/v1"
  } ],
  "info" : {
    "description" : "Proprietary API for Actimo ApS\n",
    "version" : "1.2.2",
    "title" : "Actimo API",
    "termsOfService" : "https://www.actimo.com/terms-conditions/",
    "contact" : {
      "email" : "devs@actimo.com"
    }
  },
  "tags" : [ {
    "name" : "account",
    "description" : "user accounts"
  }, {
    "name" : "assets",
    "description" : "assets used in theme editor"
  }, {
    "name" : "automations"
  }, {
    "name" : "contacts",
    "description" : "end users"
  }, {
    "name" : "clients"
  }, {
    "name" : "content"
  }, {
    "name" : "dashboards"
  }, {
    "name" : "device"
  }, {
    "name" : "folder"
  }, {
    "name" : "groups"
  }, {
    "name" : "integration",
    "description" : "Client-level integrations can add, update and remove existing contacts. Credentials may vary."
  }, {
    "name" : "media"
  }, {
    "name" : "messages"
  }, {
    "name" : "messagelock",
    "description" : "Only one user can edit a message at one time. This is represented by having the message lock, which can be requested and passed to other users."
  }, {
    "name" : "workspace",
    "description" : "Requires workspace feature"
  }, {
    "name" : "quiz"
  }, {
    "name" : "settings"
  }, {
    "name" : "stats"
  }, {
    "name" : "tools"
  }, {
    "name" : "tasks",
    "description" : "Current deferred tasks"
  }, {
    "name" : "util"
  } ],
  "paths" : {
    "/account/user" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get data associated with user",
        "operationId" : "account-getuser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Updates data associated with user",
        "operationId" : "account-update-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "User data to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/account/features/:feature/toggle" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Toggle user feature on or off",
        "operationId" : "account-togglefeature",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "path",
          "name" : "feature",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/account/features/:feature/settings" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Toggle user feature on or off",
        "operationId" : "account-featuresetting",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "path",
          "name" : "feature",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  ":setting1" : {
                    "type" : "string",
                    "example" : "default"
                  },
                  ":setting2" : {
                    "type" : "string",
                    "example" : "default"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/account/features/youtube/videos" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get all videos for Youtube feature",
        "operationId" : "account-getvideos",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/YoutubeVideo"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/account/register" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Register new user",
        "operationId" : "account-register",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "company" : {
                    "type" : "string",
                    "example" : "my company"
                  },
                  "email" : {
                    "type" : "string",
                    "example" : "my@email.com"
                  },
                  "country_code" : {
                    "type" : "string",
                    "example" : 1
                  },
                  "phone_number" : {
                    "type" : "string",
                    "example" : "(541) 754-3010"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          }
        }
      }
    },
    "/account/reset-password" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Request password reset for user",
        "operationId" : "account-resetpass",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "example" : "my@email.com"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          }
        }
      }
    },
    "/assets/" : {
      "post" : {
        "tags" : [ "assets" ],
        "summary" : "Upload asset file",
        "operationId" : "assets-upload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "query",
          "name" : "width",
          "description" : "optional asset width",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "height",
          "description" : "optional asset height",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "crop",
          "description" : "optional crop option",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "x2",
          "description" : "optional x2 option",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "files including data",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "youtube" : {
                    "type" : "integer"
                  },
                  "files" : {
                    "type" : "array",
                    "description" : "files as mime format",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/assets/bookmark" : {
      "post" : {
        "tags" : [ "assets" ],
        "summary" : "Upload bookmark asset file",
        "operationId" : "assets-upload-bookmark",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "files including data",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "youtube" : {
                    "type" : "integer"
                  },
                  "files" : {
                    "type" : "array",
                    "description" : "files as mime format",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/opt-out" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Opt contact out of receiving emails",
        "operationId" : "contacts-opt-out",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "in" : "path",
          "name" : "code",
          "description" : "Authentication code",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/opt-in" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Opt contact in to receiving emails",
        "operationId" : "contacts-opt-in",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "in" : "path",
          "name" : "code",
          "description" : "Authentication code",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/channel-preferences" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update contact channel preferences",
        "operationId" : "contacts-channel-preferences",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "in" : "path",
          "name" : "code",
          "description" : "Authentication code",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "requestBody" : {
          "description" : "Channel preference updates",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelPreferences"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get list of contacts",
        "operationId" : "contacts-get-multiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Search"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Create contact",
        "operationId" : "contacts-create-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "User data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContact"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "contacts" ],
        "summary" : "Delete multiple contacts",
        "operationId" : "contacts-delete-multiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "query",
          "name" : "ids",
          "description" : "list of contact ids",
          "schema" : {
            "type" : "string",
            "example" : "1,2,3"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact by id",
        "operationId" : "contacts-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update contact",
        "operationId" : "contacts-update-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "requestBody" : {
          "description" : "User data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContact"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "contacts" ],
        "summary" : "Delete contact",
        "operationId" : "contacts-delete-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/export/all/excel" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Export contacts to excel file (.xls)",
        "operationId" : "contacts-export-excel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "query",
          "name" : "ids",
          "description" : "contact ids to include: [\"id1\", \"id2\"]",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "description" : "contact fields to include: [\"field1\", \"field2\"]",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/vnd.ms-excel" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/export/download/:filename" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Download previously generated excel export",
        "operationId" : "contacts-export-excel-download",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "in" : "query",
          "name" : "filename",
          "description" : "name of file to download",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/vnd.ms-excel" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/messages" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact messages",
        "operationId" : "contacts-get-messages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Search"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactMessages"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/auth/events" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact authentication events",
        "operationId" : "contacts-get-auth-events",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Search"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactMessages"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/auth/reset" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Reset contact passcode",
        "operationId" : "contacts-reset-auth-event",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/auth/:keycode/passcode" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Reset keycode pin",
        "operationId" : "contacts-reset-keycode",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        } ],
        "requestBody" : {
          "description" : "code data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "passcode" : {
                    "$ref" : "#/components/schemas/Passcode"
                  },
                  "resetCode" : {
                    "$ref" : "#/components/schemas/ResetCode"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/auth/:keycode/request-reset" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Request keycode reset by channel",
        "operationId" : "contacts-request-reset-keycode",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "channel" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/auth/:keycode/resetcode/:tempcode" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact reset code using temporary code",
        "operationId" : "contacts-keycode-reset-tempcode",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "in" : "path",
          "name" : "tempcode",
          "schema" : {
            "type" : "string"
          },
          "description" : "temporary reset code",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : "{reset code}"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/auth/:keycode" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Verify contact keycode",
        "operationId" : "contacts-keycode-verify",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        } ],
        "requestBody" : {
          "description" : "code data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "passcode" : {
                    "$ref" : "#/components/schemas/Passcode"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "cookieKey" : {
                          "type" : "string"
                        },
                        "cookieValue" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:targetId/insights/:type" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact insights data by type",
        "operationId" : "contacts-get-insight-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/TargetContactId"
        }, {
          "in" : "path",
          "name" : "type",
          "schema" : {
            "type" : "string"
          },
          "description" : "all | pulse | rating | engagement | points | knowledge",
          "required" : true
        }, {
          "$ref" : "#/components/parameters/SourceContactId"
        }, {
          "$ref" : "#/components/parameters/SourceAuthCode"
        }, {
          "in" : "query",
          "name" : "messageId",
          "schema" : {
            "type" : "integer"
          },
          "description" : "id of origin message"
        }, {
          "in" : "query",
          "name" : "before",
          "schema" : {
            "type" : "integer"
          },
          "description" : "timestamp to use as limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Insight"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:targetId/updateSettings" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update contact profile settings",
        "operationId" : "contacts-update-settings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/TargetContactId"
        }, {
          "$ref" : "#/components/parameters/SourceContactId"
        }, {
          "$ref" : "#/components/parameters/SourceAuthCode"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/avatar" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update contact avatar",
        "operationId" : "contacts-update-avatar",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "$ref" : "#/components/parameters/AuthCode"
        } ],
        "requestBody" : {
          "content" : {
            "image/png" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/:projectId/groups" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get groups for contact in workspace",
        "operationId" : "contacts-get-groups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "$ref" : "#/components/parameters/ProjectId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "example" : 10
                        },
                        "groups" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/ContactGroup"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/groups" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update contact group memberships",
        "operationId" : "contacts-update-groups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactGroupUpdates"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/contacts/:id/relationships" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get contact relationships",
        "operationId" : "contacts-get-relationships",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactRelationship"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Add contact relationships",
        "operationId" : "contacts-update-relationships",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactRelationshipUpdates"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactRelationship"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/media:id" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "Get media item by id",
        "operationId" : "content-get-media",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "Get content",
        "operationId" : "content-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/MediaType"
        }, {
          "$ref" : "#/components/parameters/SearchTerm"
        }, {
          "$ref" : "#/components/parameters/SearchData"
        }, {
          "$ref" : "#/components/parameters/Count"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/All"
        }, {
          "$ref" : "#/components/parameters/Tags"
        }, {
          "$ref" : "#/components/parameters/OnlyTags"
        }, {
          "$ref" : "#/components/parameters/Order_old"
        }, {
          "$ref" : "#/components/parameters/Direction"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/fonts" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "Get user fonts",
        "operationId" : "content-get-fonts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/FontItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/:id" : {
      "delete" : {
        "tags" : [ "content" ],
        "summary" : "Delete content item",
        "operationId" : "content-delete-item",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Force"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/delete" : {
      "post" : {
        "tags" : [ "content" ],
        "summary" : "Delete multiple content items",
        "operationId" : "content-delete-multiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "force" : {
                    "type" : "boolean"
                  },
                  "ids" : {
                    "$ref" : "#/components/schemas/IntegerArray"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/:type" : {
      "post" : {
        "tags" : [ "content" ],
        "summary" : "Create content item of type",
        "operationId" : "content-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/MediaType"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateContentItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/content/:type/:id" : {
      "put" : {
        "tags" : [ "content" ],
        "summary" : "Update content item of type",
        "operationId" : "content-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/MediaType"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateContentItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/communicate" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get 'communicate' stats",
        "operationId" : "dashboards-get-communicate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsCommunicate"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/train" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get 'train' stats",
        "operationId" : "dashboards-get-train",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsTrain"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/pulse" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get 'pulse' stats",
        "operationId" : "dashboards-get-pulse",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsPulse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/rating" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get 'rating' stats",
        "operationId" : "dashboards-get-rating",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsRating"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/workspaces" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get stats for workspaces",
        "operationId" : "dashboards-get-workspaces",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsWorkspaces"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/communicate-categories" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get categories for 'communicate'",
        "operationId" : "dashboards-get-categories-communicate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardCategories"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/train-categories" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get categories for 'train'",
        "operationId" : "dashboards-get-categories-train",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardCategories"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/pulses" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get template list for 'pulse' messages",
        "operationId" : "dashboards-get-templates-pulse",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardCategories"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/ratings" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get template list for 'rating' messages",
        "operationId" : "dashboards-get-templates-rating",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardCategories"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/messages" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get stats for messages",
        "operationId" : "dashboards-get-messages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsMessages"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/social-stats" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get social stats",
        "operationId" : "dashboards-get-social",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsSocial"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/channels" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get social channels",
        "operationId" : "dashboards-get-channels",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardChannels"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/account" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get account stats",
        "operationId" : "dashboards-get-account",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardStatsAccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/products-usage" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get product usage",
        "operationId" : "dashboards-get-products",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardProducts"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/dashboards/product-updates" : {
      "get" : {
        "tags" : [ "dashboards" ],
        "summary" : "Get product updates",
        "operationId" : "dashboards-get-updates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DashboardProductUpdates"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/device/register" : {
      "put" : {
        "tags" : [ "device" ],
        "summary" : "Begin device verification process",
        "operationId" : "device-register",
        "parameters" : [ {
          "$ref" : "#/components/parameters/NativeAppKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "phone_number" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DeviceRegister"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/device/:requestId/verify" : {
      "put" : {
        "tags" : [ "device" ],
        "summary" : "Finish device verification process",
        "operationId" : "device-register-verify",
        "parameters" : [ {
          "$ref" : "#/components/parameters/RequestId"
        }, {
          "$ref" : "#/components/parameters/NativeAppKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DeviceVerify"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          }
        }
      }
    },
    "/device/refreshHomepages/:requestId" : {
      "get" : {
        "tags" : [ "device" ],
        "summary" : "Refresh the device homepages",
        "operationId" : "device-refresh-homepages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/RequestId"
        }, {
          "$ref" : "#/components/parameters/NativeAppKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DeviceVerify"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          }
        }
      }
    },
    "/device/:contactId" : {
      "get" : {
        "tags" : [ "device" ],
        "summary" : "Get registered devices for this contact",
        "operationId" : "device-get-for-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/AuthCodeHeader"
        }, {
          "$ref" : "#/components/parameters/ContactIdParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/ContactDevices"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "device" ],
        "summary" : "Adds, updates or remove devices from a contact",
        "operationId" : "device-update-for-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AuthCodeHeader"
        }, {
          "$ref" : "#/components/parameters/ContactIdParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "add" : {
                    "$ref" : "#/components/schemas/ContactDevices"
                  },
                  "update" : {
                    "$ref" : "#/components/schemas/ContactDevicesUpdate"
                  },
                  "remove" : {
                    "$ref" : "#/components/schemas/ContactDevicesRemove"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactDevices"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/device/:contactId/register-action/:type/:action" : {
      "put" : {
        "tags" : [ "device" ],
        "summary" : "Registers actions for a device",
        "operationId" : "device-register-action",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AuthCodeHeader"
        }, {
          "$ref" : "#/components/parameters/ContactIdParam"
        }, {
          "$ref" : "#/components/parameters/RegisterActionType"
        }, {
          "$ref" : "#/components/parameters/RegisterActionAction"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "$ref" : "#/components/schemas/DeviceRegisterActionData"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/message/:messageId" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automations for message",
        "operationId" : "decisiongraphs-get-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/MessageId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/message/:messageId" : {
      "post" : {
        "tags" : [ "automations" ],
        "summary" : "Add automation to message",
        "operationId" : "decisiongraphs-add-to-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/MessageId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "automations" ],
        "summary" : "Remove automation from message",
        "operationId" : "decisiongraphs-remove-from-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/MessageId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/contact/:contactId" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automations for contact",
        "operationId" : "decisiongraphs-get-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/toggle/:id/:contactId" : {
      "put" : {
        "tags" : [ "automations" ],
        "summary" : "Toggle automation for contact",
        "operationId" : "decisiongraphs-toggle-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "allOf" : [ {
                        "type" : "object",
                        "properties" : {
                          "stopped_at" : {
                            "type" : "string",
                            "example" : "2019-01-01T09:00:00.000Z"
                          }
                        }
                      }, {
                        "$ref" : "#/components/schemas/QWFields"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/contact/:contactId" : {
      "post" : {
        "tags" : [ "automations" ],
        "summary" : "Add automation to contact",
        "operationId" : "decisiongraphs-add-to-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/MessageId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "automations" ],
        "summary" : "Remove automation from contact",
        "operationId" : "decisiongraphs-remove-from-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/MessageId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automations",
        "operationId" : "decisiongraphs-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "automations" ],
        "summary" : "Create automation",
        "operationId" : "decisiongraphs-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDecisionGraph"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/copy" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Copy automation",
        "operationId" : "decisiongraphs-copy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automation by id",
        "operationId" : "decisiongraphs-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "automations" ],
        "summary" : "Delete automation",
        "operationId" : "decisiongraphs-delete-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Force"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "automations" ],
        "summary" : "Update automation",
        "operationId" : "decisiongraphs-update-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Force"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDecisionGraph"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DecisionGraph"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/messages" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get ids for automation messages",
        "operationId" : "decisiongraphs-get-messages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/DecisionGraphMessages"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "automations" ],
        "summary" : "Add automation to messages",
        "operationId" : "decisiongraphs-add-to-messages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "adds" : {
                    "$ref" : "#/components/schemas/IntegerArray"
                  },
                  "removes" : {
                    "$ref" : "#/components/schemas/IntegerArray"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/stats/overview" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automation stats overview",
        "operationId" : "decisiongraphs-get-stats-overview",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/DecisionGraphStats"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/stats/actions" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automation action stats",
        "operationId" : "decisiongraphs-get-stats-actions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/DecisionGraphStats"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/decisiongraphs/:id/stats/contacts" : {
      "get" : {
        "tags" : [ "automations" ],
        "summary" : "Get automation contact stats",
        "operationId" : "decisiongraphs-get-stats-contacts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/DecisionGraphStats"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Get folder with type (including items)",
        "operationId" : "folder-get-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Search"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Stats"
        }, {
          "$ref" : "#/components/parameters/SelectedType"
        }, {
          "$ref" : "#/components/parameters/Tags"
        }, {
          "$ref" : "#/components/parameters/Path"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Folder"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Create folder of type",
        "operationId" : "folder-create-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        } ],
        "requestBody" : {
          "description" : "Folder data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "folder" ],
        "summary" : "Delete folder of type",
        "operationId" : "folder-delete-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        }, {
          "$ref" : "#/components/parameters/Path"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type/rename" : {
      "put" : {
        "tags" : [ "folder" ],
        "summary" : "Rename folder with type",
        "operationId" : "folder-rename-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        } ],
        "requestBody" : {
          "description" : "Folder data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "new name"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type/folders" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Get folders with type",
        "operationId" : "folder-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Search"
        }, {
          "in" : "query",
          "name" : "ignore",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "description" : "folders to ignore"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Folder"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type/move" : {
      "put" : {
        "tags" : [ "folder" ],
        "summary" : "Move folder and subfolders",
        "operationId" : "folder-move-type",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        } ],
        "requestBody" : {
          "description" : "Folder data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "targetPath" : {
                    "type" : "string",
                    "example" : "1/1/folder 1/"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type/item" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Add items to folder",
        "operationId" : "folder-add-items",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        } ],
        "requestBody" : {
          "description" : "Item data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddFolderItems"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "folder" ],
        "summary" : "Delete folder items",
        "operationId" : "folder-delete-items",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        }, {
          "$ref" : "#/components/parameters/Path"
        }, {
          "in" : "query",
          "name" : "id",
          "schema" : {
            "type" : "integer"
          },
          "description" : "id of item to delete"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/folder/:type/bulkMove" : {
      "put" : {
        "tags" : [ "folder" ],
        "summary" : "Move folders and/or folder items",
        "operationId" : "folder-move-items",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/FolderType"
        } ],
        "requestBody" : {
          "description" : "Item data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveFolderItems"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Get integrations",
        "operationId" : "integration-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/IntegrationWithCredentials"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "integration" ],
        "summary" : "Update integrations",
        "operationId" : "integration-update-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        } ],
        "requestBody" : {
          "description" : "Integrations to add or update. Add id to object to update existing, omit to create new.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UpdateIntegration"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/IntegrationWithCredentials"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/exists" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Verify whether you have active integrations",
        "operationId" : "integration-get-exists",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "exists" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/basicInfo" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Get integrations",
        "operationId" : "integration-get-basic",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Integration"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/test" : {
      "put" : {
        "tags" : [ "integration" ],
        "summary" : "Test integration",
        "operationId" : "integration-test",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        } ],
        "requestBody" : {
          "description" : "Integration to test",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestIntegration"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "createdUpdated" : {
                          "type" : "integer"
                        },
                        "deleted" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/:id/deletePrivateKey" : {
      "put" : {
        "tags" : [ "integration" ],
        "summary" : "Delete private key for integration",
        "operationId" : "integration-delete-key",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/:id/sync" : {
      "put" : {
        "tags" : [ "integration" ],
        "summary" : "Synchronize integration",
        "operationId" : "integration-sync",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "qw_last_run" : {
                          "type" : "string",
                          "example" : "2019-01-01T09:00:00.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/:id" : {
      "delete" : {
        "tags" : [ "integration" ],
        "summary" : "Delete integration",
        "operationId" : "integration-delete",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/:type/groups" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Get groups for integration type",
        "operationId" : "integration-get-groups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/IntegrationType"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/IntegrationGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/integration/:type/groups/:id" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Get groups for integration type",
        "operationId" : "integration-get-group",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/IntegrationType"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/IntegrationGroup"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get groups",
        "operationId" : "groups-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactList"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Create group",
        "operationId" : "groups-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreateContactListOptions"
                }, {
                  "$ref" : "#/components/schemas/UpdateContactList"
                }, {
                  "$ref" : "#/components/schemas/ContactListMembers"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactList"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/:id" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get specific group",
        "operationId" : "groups-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactList"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Update group",
        "operationId" : "groups-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UpdateContactList"
                }, {
                  "$ref" : "#/components/schemas/ContactListMembers"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactList"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Delete group",
        "operationId" : "groups-delete-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Force"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/getGroupNames" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Get group names",
        "operationId" : "groups-get-names",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupIds" : {
                    "$ref" : "#/components/schemas/IntegerArray"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer"
                          },
                          "name" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/:id/members" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get group members",
        "operationId" : "groups-get-members",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Add members to group",
        "operationId" : "groups-add-members",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/OverwriteGroups"
        }, {
          "$ref" : "#/components/parameters/IgnoreEmptyValues"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UpdateContact"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Set group members",
        "operationId" : "groups-set-members",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UpdateContact"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/:id/sync" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Synchronize smart group",
        "operationId" : "groups-sync",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Force"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/from-recipients" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Create group from list of message recipients",
        "operationId" : "groups-from-recipients",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "recipientIds" : {
                    "$ref" : "#/components/schemas/IntegerArray"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContactList"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/:id/members/:contactId" : {
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Add member to group",
        "description" : "Add contact with contactId to group with Id and optionally update contact with request body values",
        "operationId" : "groups-add-member",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContact"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Remove member from group",
        "operationId" : "groups-remove-member",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/import" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Queues groups to be created from file (deferred)",
        "description" : "Creates task to import group from uploaded file",
        "operationId" : "groups-import",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/smart/count" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Count smart group query results/members",
        "operationId" : "groups-smart-count",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Query"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer",
                            "example" : 16
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/smart/" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Create smart group",
        "operationId" : "groups-smart-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSmartGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ContactList"
                        }, {
                          "$ref" : "#/components/schemas/UpdateSmartGroup"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/smart/:id" : {
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Update smart group",
        "operationId" : "groups-smart-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSmartGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ContactList"
                        }, {
                          "$ref" : "#/components/schemas/UpdateSmartGroup"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/groups/social/stats" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get social wall stats",
        "operationId" : "groups-get-stats",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "{group-id}" : {
                          "$ref" : "#/components/schemas/ContactListStats"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get all media",
        "operationId" : "media-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Create media item",
        "operationId" : "media-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "files including data",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "youtube" : {
                    "type" : "integer"
                  },
                  "files" : {
                    "type" : "array",
                    "description" : "files as mime format",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/delete" : {
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Delete uploaded media items (deferred)",
        "operationId" : "media-delete-multiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "ids of items to delete",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegerArray"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/:id" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get media item",
        "operationId" : "media-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "media" ],
        "summary" : "Update media item",
        "operationId" : "media-update-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "description" : "media item updates",
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UpdateContentItem"
                }, {
                  "type" : "object",
                  "properties" : {
                    "metadata" : {
                      "type" : "string"
                    },
                    "shared" : {
                      "type" : "boolean"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "media" ],
        "summary" : "Delete media item",
        "operationId" : "media-delete",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/:id/stats" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get media item stats",
        "operationId" : "media-get-stats",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "modules" : {
                            "$ref" : "#/components/schemas/ContentItemStats"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/:id/youtube/publish" : {
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Queues media to be published to Youtube",
        "operationId" : "media-youtube-publish",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/:id/messages" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get messages where media item is attached",
        "operationId" : "media-get-messages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/upload/:id" : {
      "delete" : {
        "tags" : [ "media" ],
        "summary" : "Delete uploaded media item",
        "operationId" : "media-delete-upload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/record" : {
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Create media item from recording",
        "operationId" : "media-create-recording",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "description" : "files including data",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "youtube" : {
                    "type" : "integer"
                  },
                  "files" : {
                    "type" : "object",
                    "description" : "files as mime format: { video: mime, audio: mime }",
                    "properties" : {
                      "video" : {
                        "type" : "string",
                        "format" : "binary"
                      },
                      "audio" : {
                        "type" : "string",
                        "format" : "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/merge" : {
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Merge multiple media items",
        "operationId" : "media-merge",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UpdateContentItem"
                }, {
                  "type" : "object",
                  "properties" : {
                    "tags" : {
                      "$ref" : "#/components/schemas/StringArray"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/merge/:id" : {
      "put" : {
        "tags" : [ "media" ],
        "summary" : "Merge one media item",
        "operationId" : "media-merge-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UpdateContentItem"
                }, {
                  "type" : "object",
                  "properties" : {
                    "tags" : {
                      "$ref" : "#/components/schemas/StringArray"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/media/preview/:id" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get media item preview",
        "operationId" : "media-get-preview",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/spreadsheet/parse" : {
      "post" : {
        "tags" : [ "media" ],
        "summary" : "Parse spreadsheet",
        "operationId" : "media-parse-xls",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/IgnoreLimit"
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "files" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get messages",
        "operationId" : "messages-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/SearchTerm"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/Offset"
        }, {
          "$ref" : "#/components/parameters/Count"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Create message",
        "operationId" : "messages-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete messages",
        "operationId" : "messages-delete",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Ids"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message by id",
        "operationId" : "messages-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Update message by id",
        "operationId" : "messages-update-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete message by id",
        "operationId" : "messages-delete-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/send" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Send message",
        "description" : "Uses settings on the message itself. Update message first to control channels.",
        "operationId" : "messages-send-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/dispatches" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message dispatches",
        "operationId" : "messages-get-dispatches",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageDispatch"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/access" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message access",
        "operationId" : "messages-get-access",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageAccess"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/access/:targetId" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message access for specific contact or contact list",
        "operationId" : "messages-get-access-specific",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactOrListId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageAccess"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/frequencySettings" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message frequency settings",
        "operationId" : "messages-get-frequency",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "type" : "object",
                          "properties" : {
                            "scheduled" : {
                              "type" : "string",
                              "example" : "2018-09-11T21:12:00.714Z"
                            }
                          }
                        }, {
                          "$ref" : "#/components/schemas/MessageFrequency"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Update message frequency settings",
        "operationId" : "messages-update-frequency",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageFrequency"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "type" : "object",
                          "properties" : {
                            "scheduled" : {
                              "type" : "string",
                              "example" : "2018-09-11T21:12:00.714Z"
                            }
                          }
                        }, {
                          "$ref" : "#/components/schemas/MessageFrequency"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/stats" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message stats",
        "operationId" : "messages-get-stats",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Bounce"
        }, {
          "$ref" : "#/components/parameters/ModuleDetails"
        }, {
          "$ref" : "#/components/parameters/Modules"
        }, {
          "$ref" : "#/components/parameters/Open"
        }, {
          "$ref" : "#/components/parameters/Unique"
        }, {
          "$ref" : "#/components/parameters/Since"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageStats"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/stats/:filter" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get filtered message stats",
        "operationId" : "messages-get-stats-filtered",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Bounce"
        }, {
          "$ref" : "#/components/parameters/ModuleDetails"
        }, {
          "$ref" : "#/components/parameters/Modules"
        }, {
          "$ref" : "#/components/parameters/Open"
        }, {
          "$ref" : "#/components/parameters/Unique"
        }, {
          "$ref" : "#/components/parameters/Since"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageStats"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/stats/download/:filename" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Download stats report as xls file",
        "operationId" : "messages-get-stats-xls",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/stats/bulk" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get stats for all messages",
        "operationId" : "messages-get-stats-bulk",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/BulkMessageStats"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/stats/bulkRecurring" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get stats for all recurring messages",
        "operationId" : "messages-get-stats-bulk-recurring",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/BulkMessageStats"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/recipients" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message recipients",
        "operationId" : "messages-get-recipients",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/recipients/logs" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message recipients logs",
        "operationId" : "messages-get-recipient-logs",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/recipients/logs/count" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Count recipient logs",
        "operationId" : "messages-count-recipient-logs",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/recipients/logs/:contactId" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get recipient logs for contact",
        "operationId" : "messages-get-recipient-log-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Add note to recipient logs for contact",
        "operationId" : "messages-update-recipient-log-contact",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "note" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          }
        }
      }
    },
    "/messages/:id/recipients/contacts" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message recipient contacts",
        "operationId" : "messages-get-recipient-contacts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/recipients/contacts/count" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Count recipient contacts",
        "operationId" : "messages-count-recipient-contacts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/contacts/:contactId" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get contact recipient status for message",
        "operationId" : "messages-get-contact-status",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageRecipientStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          }
        }
      }
    },
    "/messages/:id/feedback" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get feedback for message",
        "operationId" : "messages-get-feedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageFeedback"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Create feedback for message",
        "operationId" : "messages-create-feedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageFeedback"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/feedback/:itemId/toggleHide" : {
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Toggle hide feedback for message",
        "operationId" : "messages-toggle-feedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "hide" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageFeedback"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/uploads" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get uploads for message",
        "operationId" : "messages-get-uploads",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageUpload"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/uploads/:itemId" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get specific upload for message",
        "operationId" : "messages-get-upload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageUpload"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/uploads/:itemId/content" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get upload content for message",
        "operationId" : "messages-get-upload-content",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        }, {
          "$ref" : "#/components/parameters/Search"
        }, {
          "$ref" : "#/components/parameters/Count"
        }, {
          "$ref" : "#/components/parameters/PageSize"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Tags"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Direction"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        }, {
          "$ref" : "#/components/parameters/ModuleUploadId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ContentItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:keycode/upload/:itemId" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Upload file to message module",
        "operationId" : "messages-upload-file",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageUpload"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete upload for message",
        "operationId" : "messages-delete-upload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Update upload for message",
        "operationId" : "messages-update-upload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageUpload"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:keycode/feedback/:identifier" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Add feedback from message module",
        "operationId" : "messages-module-create-feedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/ModuleContactId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageFeedback"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageFeedback"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Remove feedback from message module",
        "operationId" : "messages-module-delete-feedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/ModuleContactId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/duplicate" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Duplicate message",
        "operationId" : "messages-duplicate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/duplicateTo" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Duplicate message (admin)",
        "operationId" : "messages-duplicate-to",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "user_id" : {
                    "type" : "integer"
                  },
                  "path" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/links" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message links",
        "operationId" : "messages-get-links",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLink"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Create message link",
        "operationId" : "messages-create-link",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageLink"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLink"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/links/:itemId" : {
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Update message link",
        "operationId" : "messages-update-link",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageLink"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLink"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete message link",
        "operationId" : "messages-delete-link",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ItemId"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/preview" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message links",
        "operationId" : "messages-get-preview",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "expires_at" : {
                            "type" : "string",
                            "example" : "2019-04-23T09:40:05.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/contactLink/:contactId" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message links",
        "operationId" : "messages-get-contact-link",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "link" : {
                            "type" : "string",
                            "example" : "https://app.actimo.com/m/TgdD1Ab"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/sidebars" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message sidebars",
        "operationId" : "messages-get-sidebars",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Sidebar"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "readOnly" : {
                              "type" : "boolean"
                            }
                          }
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/redirect/:keycode/:id" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Redirect from message with keycode to other message",
        "operationId" : "messages-redirect",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "prefix" : {
                            "type" : "string",
                            "example" : "c"
                          },
                          "keycode" : {
                            "type" : "string",
                            "example" : "lkjihgfedcba"
                          },
                          "link" : {
                            "type" : "string",
                            "example" : "/c/lkjihgfedcba"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:keycode/messagelist/:id" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get messages for messagelist",
        "operationId" : "messages-get-messagelist",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "options" : {
                            "type" : "object",
                            "properties" : {
                              "totalCount" : {
                                "type" : "integer"
                              },
                              "hasQuizRetake" : {
                                "type" : "boolean"
                              }
                            }
                          },
                          "messages" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/MessageListMessage"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:keycode/unreadCount" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get number of unread messages for messagelists",
        "operationId" : "messages-get-unread",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Keycode"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "{message list id}" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/cancelSendLater" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Cancel scheduled sendouts for message",
        "operationId" : "messages-cancel-delayed",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/sms/:phoneNumber/:verificationCode" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get data for message sms",
        "operationId" : "messages-get-code",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PhoneNumber"
        }, {
          "$ref" : "#/components/parameters/VerificationCode"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "sender" : {
                            "type" : "string"
                          },
                          "date" : {
                            "type" : "string",
                            "example" : "2019-04-23T09:40:05.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/shareReport" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Share analytics report for message",
        "operationId" : "messages-share-report",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "emails" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "example" : "e@mail.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/sharedReports" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get shared analytics reports for message",
        "operationId" : "messages-get-reports",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer"
                          },
                          "code" : {
                            "type" : "string",
                            "example" : "1234"
                          },
                          "email" : {
                            "type" : "string",
                            "example" : "e@mail.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/revokeSharedReport" : {
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Revoke shared analytics report for message",
        "operationId" : "messages-revoke-report",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "example" : "1234"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/requestMessageLock" : {
      "put" : {
        "tags" : [ "messagelock" ],
        "summary" : "Request lock for message",
        "operationId" : "messages-request-lock",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageLockRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLock"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/rejectMessageLock" : {
      "put" : {
        "tags" : [ "messagelock" ],
        "summary" : "Reject request for message lock",
        "operationId" : "messages-reject-lock",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "requesterId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLock"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/removeMessageLock" : {
      "put" : {
        "tags" : [ "messagelock" ],
        "summary" : "Remove message lock",
        "operationId" : "messages-remove-lock",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLock"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/acceptMessageLock" : {
      "put" : {
        "tags" : [ "messagelock" ],
        "summary" : "Accept request for message lock",
        "operationId" : "messages-accept-lock",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "requesterId" : {
                    "type" : "integer"
                  },
                  "requesterSession" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLock"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/messages/:id/takeoverMessageLock" : {
      "put" : {
        "tags" : [ "messagelock" ],
        "summary" : "Take over message lock",
        "operationId" : "messages-takeover-lock",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/MessageLock"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/" : {
      "get" : {
        "tags" : [ "workspace" ],
        "summary" : "Get workspaces for client (by API key)",
        "operationId" : "project-get-all",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "workspace" ],
        "summary" : "Create workspace",
        "operationId" : "project-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/user" : {
      "get" : {
        "tags" : [ "workspace" ],
        "summary" : "Get workspaces for user (by API key)",
        "operationId" : "project-get-user",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/select" : {
      "put" : {
        "tags" : [ "workspace" ],
        "summary" : "Select workspace (affects other API calls and flags)",
        "operationId" : "project-select",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/:id" : {
      "post" : {
        "tags" : [ "workspace" ],
        "summary" : "Update workspace",
        "operationId" : "project-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "workspace" ],
        "summary" : "Delete workspace",
        "operationId" : "project-delete",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/settings/:id" : {
      "get" : {
        "tags" : [ "workspace" ],
        "summary" : "Get workspace settings",
        "operationId" : "project-get-settings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ProjectExpandedSettings"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "workspace" ],
        "summary" : "Update workspace settings",
        "operationId" : "project-update-settings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectExpandedSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ProjectExpandedSettings"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/project/items" : {
      "get" : {
        "tags" : [ "workspace" ],
        "summary" : "Get workspace items",
        "operationId" : "project-get-items",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ProjectItems"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/quiz/contact/:contactId" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get quiz results for contact",
        "operationId" : "quiz-get-contact-results",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/ContactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/QuizResult"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/settings/:keyname" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Get setting for key",
        "operationId" : "settings-get-key",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Update setting for key",
        "operationId" : "settings-update-key",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "string",
                    "example" : "{various types}"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "settings" ],
        "summary" : "Delete setting for key",
        "operationId" : "settings-delete-key",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "304" : {
            "$ref" : "#/components/responses/304"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/settings/:keyname/workspaces" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Get setting for key in current workspace",
        "operationId" : "settings-get-key-workspaces",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/settings/:keyname/workspace/:id" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Get setting for key in workspace",
        "operationId" : "settings-get-key-workspace",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Update setting for key in workspace",
        "operationId" : "settings-update-key-workspace",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "string",
                    "example" : "{various types}"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "settings" ],
        "summary" : "Delete setting for key in workspace",
        "operationId" : "settings-delete-key-workspace",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "304" : {
            "$ref" : "#/components/responses/304"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/settings/:keyname/message/:id" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Get setting for key for message",
        "operationId" : "settings-get-key-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Update setting for key for message",
        "operationId" : "settings-update-key-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "string",
                    "example" : "{various types}"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "{various types}"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "delete" : {
        "tags" : [ "settings" ],
        "summary" : "Delete setting for key for message",
        "operationId" : "settings-delete-key-message",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Keyname"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200"
          },
          "304" : {
            "$ref" : "#/components/responses/304"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/stats/latest" : {
      "get" : {
        "tags" : [ "stats" ],
        "summary" : "Get latest stats",
        "operationId" : "stats-get-latest",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/Search"
        }, {
          "$ref" : "#/components/parameters/QueryId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Stats"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/client/:id/latest" : {
      "get" : {
        "tags" : [ "stats" ],
        "summary" : "Get user stats for client",
        "operationId" : "stats-client-get-latest",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/UserStats"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/client/:id/latest/export.:format/" : {
      "get" : {
        "tags" : [ "stats" ],
        "summary" : "Export user stats for client",
        "operationId" : "stats-client-export-latest",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AdminAPIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        }, {
          "$ref" : "#/components/parameters/Format"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/xls" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tasks/" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get all tasks",
        "operationId" : "tasks-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create task",
        "operationId" : "tasks-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTask"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tasks/:id" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task",
        "operationId" : "tasks-get-one",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Update task",
        "operationId" : "tasks-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTask"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tasks/:id/source" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Download source file of task",
        "operationId" : "tasks-get-source",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "description" : "binary file stream"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/403"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tasks/:id/result/download" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Download result file of task",
        "operationId" : "tasks-get-result",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "description" : "binary file stream"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/403"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tools/pulse" : {
      "get" : {
        "tags" : [ "tools" ],
        "summary" : "Get pulse message template",
        "operationId" : "tools-pulse-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/RecurringMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "tools" ],
        "summary" : "Create pulse message template",
        "operationId" : "tools-pulse-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "New pulse"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/IdArray"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/rating/pulse" : {
      "get" : {
        "tags" : [ "tools" ],
        "summary" : "Get rating message template",
        "operationId" : "tools-rating-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/RecurringMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      },
      "post" : {
        "tags" : [ "tools" ],
        "summary" : "Create rating message template",
        "operationId" : "tools-rating-create",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "New pulse"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/IdArray"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/tools/recurring/:id" : {
      "post" : {
        "tags" : [ "tools" ],
        "summary" : "Update recurring message template",
        "operationId" : "tools-recurring-update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        }, {
          "$ref" : "#/components/parameters/Id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "New pulse"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/IdArray"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    },
    "/util/chartData" : {
      "get" : {
        "tags" : [ "util" ],
        "summary" : "Get chart data",
        "operationId" : "util-chartdata-get",
        "parameters" : [ {
          "$ref" : "#/components/parameters/APIKey"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/components/schemas/StatusSuccess"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "cols" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "integer"
                              },
                              "type" : {
                                "type" : "string"
                              },
                              "label" : {
                                "type" : "string"
                              },
                              "p" : {
                                "type" : "integer"
                              }
                            }
                          }
                        },
                        "rows" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "c" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "v" : {
                                      "type" : "string",
                                      "example" : "string or integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "StatusSuccess" : {
        "type" : "string",
        "example" : "success"
      },
      "User" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "client_id" : {
              "type" : "integer"
            },
            "client_admin" : {
              "type" : "boolean"
            },
            "support_role" : {
              "type" : "string",
              "example" : "none"
            },
            "force_sms_allowed" : {
              "type" : "integer"
            },
            "username" : {
              "type" : "string",
              "example" : "my username"
            },
            "full_name" : {
              "type" : "string",
              "example" : "Warren Buffett"
            },
            "previous_login" : {
              "$ref" : "#/components/schemas/Date"
            },
            "latest_login" : {
              "$ref" : "#/components/schemas/Date"
            },
            "last_login" : {
              "$ref" : "#/components/schemas/Date"
            },
            "require_password_change" : {
              "type" : "boolean"
            },
            "features" : {
              "type" : "object"
            },
            "account_class_id" : {
              "type" : "integer"
            },
            "youtube" : {
              "type" : "object"
            },
            "selected_project" : {
              "type" : "integer"
            },
            "verified_at" : {
              "$ref" : "#/components/schemas/Date"
            },
            "verified" : {
              "type" : "boolean"
            }
          }
        }, {
          "$ref" : "#/components/schemas/UpdateUser"
        } ]
      },
      "YoutubeVideo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "example" : "video 1 title"
          }
        }
      },
      "UpdateUser" : {
        "type" : "object",
        "properties" : {
          "default_theme_id" : {
            "type" : "integer"
          },
          "default_group_id" : {
            "type" : "integer"
          },
          "locale" : {
            "type" : "string",
            "example" : "en-us"
          },
          "ui_view_settings" : {
            "type" : "string",
            "example" : "default"
          },
          "force_sms" : {
            "type" : "integer"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Warren"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Buffett"
          },
          "email" : {
            "type" : "string",
            "example" : "wb@berkhath.com"
          },
          "department" : {
            "type" : "string",
            "example" : "Management"
          },
          "country_code" : {
            "type" : "string",
            "example" : 1
          },
          "phone_number" : {
            "type" : "string",
            "example" : "(541) 754-3010"
          },
          "test_phone_number_code" : {
            "type" : "string",
            "example" : 1
          },
          "test_phone_number" : {
            "type" : "string",
            "example" : "(541) 754-3010"
          },
          "favourite_group_id" : {
            "type" : "integer"
          },
          "preferences" : {
            "type" : "object"
          },
          "delivery_preference" : {
            "type" : "string"
          },
          "setting_send_reminders_default" : {
            "type" : "boolean"
          },
          "setting_message_channel_sms_from_name_default" : {
            "type" : "string"
          },
          "setting_message_channel_sms_msg_template_default" : {
            "type" : "string"
          },
          "setting_message_channel_email_from_name_default" : {
            "type" : "string"
          },
          "setting_message_channel_email_from_address_default" : {
            "type" : "string"
          },
          "webhook_message_event_url" : {
            "type" : "string"
          },
          "list_settings" : {
            "type" : "object"
          }
        }
      },
      "ChannelPreferences" : {
        "type" : "object",
        "properties" : {
          "allow_sms" : {
            "type" : "boolean"
          },
          "allow_email" : {
            "type" : "boolean"
          }
        }
      },
      "ContactSettings" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ChannelPreferences"
        }, {
          "type" : "object",
          "properties" : {
            "allow_contact_info" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "Contact" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "user_id" : {
              "type" : "integer"
            },
            "shared" : {
              "type" : "boolean"
            },
            "name" : {
              "type" : "string",
              "example" : "Warren Buffett"
            },
            "opt_out" : {
              "type" : "boolean"
            },
            "msisdn" : {
              "type" : "string",
              "example" : "+4544332211"
            },
            "delivery_timezone" : {
              "type" : "string",
              "example" : "+00:00"
            },
            "source_type" : {
              "type" : "string",
              "example" : "tamigo"
            },
            "source_data" : {
              "type" : "string",
              "example" : "5b9f2fc6-5117-4411-9a10-fd76596ef6c5"
            },
            "active" : {
              "type" : "boolean"
            },
            "allow_contact_info" : {
              "type" : "boolean"
            },
            "allow_email" : {
              "type" : "boolean"
            },
            "allow_sms" : {
              "type" : "boolean"
            },
            "avatar_url" : {
              "type" : "string"
            },
            "created_by" : {
              "type" : "string",
              "example" : "Integration: tamigo"
            },
            "channel_preferences_updated" : {
              "$ref" : "#/components/schemas/Date"
            },
            "removed_from_group" : {
              "$ref" : "#/components/schemas/Date"
            },
            "isEditable" : {
              "type" : "boolean"
            },
            "isSynchronized" : {
              "type" : "boolean"
            },
            "seen_permission_message" : {
              "type" : "boolean"
            },
            "tags" : {
              "$ref" : "#/components/schemas/StringArray"
            },
            "existing_selected" : {
              "type" : "boolean"
            }
          }
        }, {
          "$ref" : "#/components/schemas/UpdateContact"
        }, {
          "$ref" : "#/components/schemas/TimestampsWithDeleted"
        } ]
      },
      "Contacts" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Contact"
        }
      },
      "UpdateContact" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string",
            "example" : "Management"
          },
          "company" : {
            "type" : "string",
            "example" : "Management"
          },
          "company_reg" : {
            "type" : "string"
          },
          "addr_line_1" : {
            "type" : "string"
          },
          "addr_line_2" : {
            "type" : "string"
          },
          "addr_city" : {
            "type" : "string"
          },
          "addr_state" : {
            "type" : "string"
          },
          "addr_zip" : {
            "type" : "string"
          },
          "addr_country" : {
            "type" : "string"
          },
          "country_code" : {
            "type" : "string",
            "example" : "+45"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "44332211"
          },
          "data1" : {
            "type" : "string",
            "example" : "custom data field"
          },
          "data2" : {
            "type" : "string",
            "example" : "custom data field"
          },
          "data3" : {
            "type" : "string",
            "example" : "custom data field"
          },
          "{data3-data20}" : {
            "type" : "string",
            "example" : "custom data fields"
          },
          "timezone" : {
            "type" : "string",
            "example" : "+00:00"
          },
          "manager_id" : {
            "type" : "integer"
          },
          "manager_name" : {
            "type" : "string"
          },
          "manager_type" : {
            "type" : "string"
          },
          "employee_id" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "ContactMessages" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "count" : {
                  "type" : "integer",
                  "example" : 10
                },
                "items" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "example" : 1
                      },
                      "subject" : {
                        "type" : "string",
                        "example" : "Message subject"
                      },
                      "delivered" : {
                        "$ref" : "#/components/schemas/Date"
                      },
                      "received" : {
                        "$ref" : "#/components/schemas/Date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResetCode" : {
        "type" : "string"
      },
      "Passcode" : {
        "type" : "string"
      },
      "Insight" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "$ref" : "#/components/schemas/StringArray"
          },
          "insightsBar" : {
            "type" : "integer",
            "example" : 2
          },
          "key" : {
            "type" : "string",
            "example" : "knowledge"
          },
          "type" : {
            "type" : "string",
            "example" : "knowledge"
          },
          "title" : {
            "type" : "string",
            "example" : "Knowledge"
          },
          "lowerThreshold" : {
            "type" : "number",
            "example" : 60
          },
          "upperThreshold" : {
            "type" : "number",
            "example" : 80
          },
          "possible" : {
            "type" : "number",
            "example" : 0
          },
          "value" : {
            "type" : "number",
            "example" : 20
          },
          "suffix" : {
            "type" : "string",
            "example" : "%"
          },
          "tips" : {
            "type" : "object"
          }
        }
      },
      "ContactGroup" : {
        "type" : "object",
        "properties" : {
          "group_id" : {
            "$ref" : "#/components/schemas/Id"
          },
          "group_name" : {
            "type" : "string",
            "example" : "Name of group"
          },
          "multi_workspace" : {
            "type" : "boolean",
            "description" : "true if group belongs to multiple workspaces"
          },
          "created_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "created_by" : {
            "type" : "string",
            "example" : "tamigo"
          },
          "deleted_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "deleted_by" : {
            "type" : "string",
            "example" : "api"
          }
        }
      },
      "ContactGroupUpdates" : {
        "type" : "object",
        "properties" : {
          "add" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "remove" : {
            "$ref" : "#/components/schemas/IntegerArray"
          }
        }
      },
      "ContactRelationship" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "MANAGER"
          },
          "contactId" : {
            "type" : "integer",
            "example" : 2
          },
          "contactName" : {
            "type" : "string"
          },
          "contactType" : {
            "type" : "string",
            "example" : "CONTACT"
          },
          "inProject" : {
            "type" : "boolean"
          }
        }
      },
      "ContactRelationshipUpdates" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "(relationship-type)" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5
                },
                "contactType" : {
                  "type" : "string",
                  "example" : "CONTACT"
                }
              }
            }
          }
        }
      },
      "CreateFolder" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string",
            "example" : "1/23/"
          }
        }
      },
      "Folder" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "type" : "object",
          "properties" : {
            "project_id" : {
              "type" : "integer"
            },
            "shared" : {
              "type" : "boolean"
            },
            "is_folder" : {
              "type" : "boolean"
            },
            "created_by" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Timestamps"
        }, {
          "$ref" : "#/components/schemas/CreateFolder"
        } ]
      },
      "AddFolderItems" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "{type of items being added}"
          },
          "id" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "path" : {
            "type" : "string",
            "example" : "1/23/"
          }
        }
      },
      "MoveFolderItems" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "itemType" : {
            "type" : "string",
            "example" : "content"
          },
          "type" : {
            "type" : "string",
            "example" : "content"
          },
          "folders" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "currentPath" : {
            "type" : "string",
            "example" : "1/23/"
          },
          "newPath" : {
            "type" : "string",
            "example" : "1/24/"
          }
        }
      },
      "FontItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "type" : "object",
          "properties" : {
            "shared" : {
              "type" : "boolean"
            },
            "title" : {
              "type" : "string",
              "example" : "font title"
            },
            "{type}_url" : {
              "type" : "string",
              "example" : "url.com/font"
            },
            "sources" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "{type}_url" : {
                    "type" : "string",
                    "example" : "url.com/font"
                  }
                }
              }
            }
          }
        } ]
      },
      "UpdateContentItem" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "example" : "video.mp4"
          },
          "description" : {
            "type" : "string"
          },
          "video_filters" : {
            "type" : "string"
          }
        }
      },
      "CreateContentItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateContentItem"
        }, {
          "type" : "object",
          "properties" : {
            "file_name" : {
              "type" : "string",
              "example" : "3e1e0873-9226-403f-b455-c78caf7fa278.mp4"
            },
            "file_type" : {
              "type" : "string",
              "example" : "video/mp4"
            },
            "file_path" : {
              "type" : "string",
              "example" : "url.com/video"
            },
            "full_path" : {
              "type" : "string",
              "example" : "url.com/video"
            },
            "raw_name" : {
              "type" : "string",
              "example" : "video.mp4"
            },
            "orig_name" : {
              "type" : "string",
              "example" : "video.mp4"
            },
            "file_ext" : {
              "type" : "string",
              "example" : ".mp4"
            },
            "file_size" : {
              "type" : "number",
              "example" : 1441748.0
            },
            "duration" : {
              "type" : "number"
            },
            "header" : {
              "type" : "string"
            },
            "show_branding" : {
              "type" : "boolean"
            },
            "branding_title" : {
              "type" : "string"
            },
            "branding_bg_color" : {
              "type" : "string",
              "example" : "58be34"
            },
            "show_branding_bg_image" : {
              "type" : "boolean"
            },
            "branding_bg_image_url" : {
              "type" : "string"
            },
            "menu_data" : {
              "type" : "object"
            },
            "metadata" : {
              "type" : "string"
            },
            "shared" : {
              "type" : "boolean"
            },
            "tags" : {
              "$ref" : "#/components/schemas/StringArray"
            }
          }
        } ]
      },
      "ContentItem" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "media_file_id" : {
              "type" : "integer",
              "example" : 1
            },
            "user_id" : {
              "type" : "integer",
              "example" : 1
            },
            "client_id" : {
              "type" : "integer",
              "example" : 1
            },
            "shared" : {
              "type" : "boolean"
            },
            "title" : {
              "type" : "string",
              "example" : "video.mp4"
            },
            "description" : {
              "type" : "string"
            },
            "file_name" : {
              "type" : "string",
              "example" : "3e1e0873-9226-403f-b455-c78caf7fa278.mp4"
            },
            "file_type" : {
              "type" : "string",
              "example" : "video/mp4"
            },
            "public_url" : {
              "type" : "string",
              "example" : "http://actimo-test.s3.amazonaws.com/video.mp4"
            },
            "thumbnail_url" : {
              "type" : "string",
              "example" : "url.com/thumbnail"
            },
            "file_ext" : {
              "type" : "string",
              "example" : ".mp4"
            },
            "file_size" : {
              "type" : "number",
              "example" : 1441748.0
            },
            "trim_start" : {
              "type" : "number"
            },
            "trim_duration" : {
              "type" : "number"
            },
            "progress" : {
              "type" : "number"
            },
            "metadata" : {
              "type" : "string"
            },
            "tags" : {
              "$ref" : "#/components/schemas/StringArray"
            },
            "status" : {
              "type" : "string",
              "example" : "uploaded"
            },
            "contentType" : {
              "type" : "object",
              "properties" : {
                "group" : {
                  "type" : "string",
                  "example" : "media"
                },
                "mime" : {
                  "type" : "string"
                }
              }
            },
            "youtube" : {
              "type" : "boolean"
            },
            "youtube_id" : {
              "type" : "string"
            },
            "video_filters" : {
              "type" : "string"
            },
            "width" : {
              "type" : "number"
            },
            "height" : {
              "type" : "number"
            },
            "project_ref_count" : {
              "type" : "integer"
            },
            "date_created" : {
              "$ref" : "#/components/schemas/Date"
            },
            "sources" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "media_file_format_id" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  },
                  "filename" : {
                    "type" : "string"
                  },
                  "media_format_file_size" : {
                    "type" : "number"
                  },
                  "width" : {
                    "type" : "number"
                  },
                  "height" : {
                    "type" : "number"
                  },
                  "total_bitrate" : {
                    "type" : "number"
                  },
                  "format" : {
                    "type" : "string"
                  },
                  "video_codec" : {
                    "type" : "string"
                  },
                  "video_bitrate" : {
                    "type" : "number"
                  },
                  "video_output_conf" : {
                    "type" : "string"
                  },
                  "audio_codec" : {
                    "type" : "string"
                  },
                  "audio_bitrate" : {
                    "type" : "number"
                  },
                  "frame_rate" : {
                    "type" : "number"
                  },
                  "thumbnail_count" : {
                    "type" : "integer"
                  },
                  "thumbnail_url_root" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateContentItem"
        }, {
          "$ref" : "#/components/schemas/TimestampsWithDeleted"
        } ]
      },
      "MediaItem" : {
        "type" : "object",
        "properties" : {
          "thumbnail" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "example" : "image"
          }
        }
      },
      "DashboardStatsCommunicate" : {
        "type" : "object",
        "properties" : {
          "open_rate" : {
            "$ref" : "#/components/schemas/DashboardTargetValue"
          },
          "messages_published" : {
            "type" : "integer"
          },
          "unique_message_views" : {
            "type" : "integer"
          },
          "unique_message_views_from_published" : {
            "type" : "integer"
          },
          "employees" : {
            "type" : "object",
            "properties" : {
              "active" : {
                "type" : "integer"
              },
              "asleep" : {
                "type" : "integer"
              },
              "bouncing" : {
                "type" : "integer"
              },
              "new" : {
                "type" : "integer"
              },
              "total" : {
                "type" : "integer"
              },
              "total_in_workspaces" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "DashboardStatsTrain" : {
        "type" : "object",
        "properties" : {
          "know_how" : {
            "$ref" : "#/components/schemas/DashboardTargetValue"
          },
          "trainings_completed" : {
            "type" : "integer"
          },
          "trainings_published" : {
            "type" : "integer"
          },
          "questions_answered" : {
            "type" : "integer"
          },
          "questions_correct" : {
            "type" : "integer"
          },
          "points_gained" : {
            "type" : "integer"
          },
          "training_breakdown" : {
            "type" : "object",
            "properties" : {
              "passed" : {
                "type" : "integer"
              },
              "failed" : {
                "type" : "integer"
              },
              "started" : {
                "type" : "integer"
              },
              "done" : {
                "type" : "integer"
              },
              "todo" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "DashboardStatsPulse" : {
        "type" : "object",
        "properties" : {
          "engagement" : {
            "$ref" : "#/components/schemas/DashboardTargetValue"
          },
          "surveys_answered" : {
            "type" : "integer"
          },
          "surveys_published" : {
            "type" : "integer"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "names" : {
                "$ref" : "#/components/schemas/StringArray"
              },
              "score" : {
                "$ref" : "#/components/schemas/NumberArray"
              }
            }
          }
        }
      },
      "DashboardStatsRating" : {
        "type" : "object",
        "properties" : {
          "ratings_published" : {
            "type" : "integer"
          },
          "ratings_finished" : {
            "type" : "integer"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "names" : {
                "$ref" : "#/components/schemas/StringArray"
              },
              "score" : {
                "$ref" : "#/components/schemas/NumberArray"
              },
              "target" : {
                "$ref" : "#/components/schemas/NumberArray"
              }
            }
          }
        }
      },
      "DashboardStatsWorkspaces" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer"
                },
                "name" : {
                  "type" : "string"
                },
                "editors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer"
                      },
                      "initials" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "isLoggedUser" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "open_rate" : {
                  "$ref" : "#/components/schemas/DashboardTargetValue"
                },
                "know_how" : {
                  "$ref" : "#/components/schemas/DashboardTargetValue"
                },
                "engagement" : {
                  "$ref" : "#/components/schemas/DashboardTargetValue"
                },
                "employees" : {
                  "type" : "object",
                  "properties" : {
                    "active" : {
                      "type" : "integer"
                    },
                    "total" : {
                      "type" : "integer"
                    }
                  }
                },
                "userIsEditor" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      },
      "DashboardStatsMessages" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "subject" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "example" : "normal"
            },
            "publish_date" : {
              "$ref" : "#/components/schemas/Timestamp"
            },
            "first_publish_date" : {
              "$ref" : "#/components/schemas/Timestamp"
            },
            "image_url" : {
              "type" : "string"
            },
            "stats" : {
              "type" : "object",
              "properties" : {
                "notified" : {
                  "type" : "integer"
                },
                "published" : {
                  "type" : "integer"
                },
                "viewed" : {
                  "type" : "integer"
                },
                "open_rate" : {
                  "type" : "integer"
                }
              }
            }
          }
        }
      },
      "DashboardStatsSocial" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "integer"
          },
          "comments" : {
            "type" : "integer"
          },
          "likes" : {
            "type" : "integer"
          },
          "posts" : {
            "type" : "integer"
          }
        }
      },
      "DashboardStatsAccount" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "type" : "object",
            "properties" : {
              "editors" : {
                "$ref" : "#/components/schemas/DashboardUsedLimit"
              },
              "employees" : {
                "$ref" : "#/components/schemas/DashboardUsedLimit"
              },
              "emails" : {
                "$ref" : "#/components/schemas/DashboardUsedLimit"
              },
              "smss" : {
                "$ref" : "#/components/schemas/DashboardUsedLimit"
              }
            }
          },
          "products" : {
            "$ref" : "#/components/schemas/DashboardProducts"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer"
                },
                "name" : {
                  "type" : "string"
                },
                "last_sync" : {
                  "$ref" : "#/components/schemas/Date"
                }
              }
            }
          },
          "period" : {
            "type" : "object",
            "properties" : {
              "from" : {
                "$ref" : "#/components/schemas/Timestamp"
              },
              "to" : {
                "$ref" : "#/components/schemas/Timestamp"
              }
            }
          }
        }
      },
      "DashboardTargetValue" : {
        "type" : "object",
        "properties" : {
          "target" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "integer"
          }
        }
      },
      "DashboardUsedLimit" : {
        "type" : "object",
        "properties" : {
          "used" : {
            "type" : "integer"
          },
          "limit" : {
            "type" : "integer"
          }
        }
      },
      "DashboardProduct" : {
        "type" : "object",
        "properties" : {
          "purchased" : {
            "type" : "boolean"
          },
          "activated" : {
            "type" : "boolean"
          },
          "used" : {
            "type" : "boolean"
          }
        }
      },
      "DashboardProducts" : {
        "type" : "object",
        "properties" : {
          "communicate" : {
            "$ref" : "#/components/schemas/DashboardProduct"
          },
          "train" : {
            "$ref" : "#/components/schemas/DashboardProduct"
          },
          "lead" : {
            "$ref" : "#/components/schemas/DashboardProduct"
          },
          "social_wall" : {
            "$ref" : "#/components/schemas/DashboardProduct"
          }
        }
      },
      "DashboardProductUpdates" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "DashboardCategories" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "name" : {
              "type" : "string"
            }
          }
        }
      },
      "DashboardChannels" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "name" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "example" : "DYNAMIC"
            }
          }
        }
      },
      "DeviceRegister" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string",
            "example" : "c2172f15-82ba-4ec8-b3ef-bde2d89a6f85"
          }
        }
      },
      "DeviceVerify" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "integer"
          },
          "clientName" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "integer"
          },
          "messageFaviconUrl" : {
            "type" : "string"
          },
          "messageLink" : {
            "type" : "string",
            "example" : "/c/abcd1234dcba"
          },
          "contactId" : {
            "type" : "integer"
          },
          "contactDepartment" : {
            "type" : "string"
          },
          "contactTitle" : {
            "type" : "string"
          },
          "contactAuthCookieKey" : {
            "type" : "string"
          },
          "contactAuthCookieValue" : {
            "type" : "string"
          },
          "contactAuthCode" : {
            "type" : "string"
          },
          "contactLastActive" : {
            "type" : "integer",
            "example" : "1549007753000"
          }
        }
      },
      "ContactDevices" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "push_key" : {
              "type" : "string"
            },
            "device_type" : {
              "type" : "string"
            },
            "browser_type" : {
              "type" : "string"
            }
          }
        }
      },
      "ContactDevicesUpdate" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "push_key" : {
              "type" : "string"
            }
          }
        }
      },
      "ContactDevicesRemove" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "push_key" : {
              "type" : "string"
            }
          }
        }
      },
      "CreateDecisionGraph" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "start_node" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "decision_graph" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "nodes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IdArray"
                }
              },
              "edges" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "string"
                    },
                    "end" : {
                      "type" : "string"
                    },
                    "predicate" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "example" : "event-registered"
                        },
                        "key_name" : {
                          "type" : "string",
                          "example" : "modules.buttongroup.1.click"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DecisionGraph" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "user_id" : {
              "type" : "integer"
            },
            "shared" : {
              "type" : "boolean"
            },
            "project_ref_count" : {
              "type" : "integer"
            },
            "progress_events" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "example" : [ "sent", "open" ]
            },
            "created_at" : {
              "$ref" : "#/components/schemas/Date"
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateDecisionGraph"
        } ]
      },
      "DecisionGraphMessages" : {
        "$ref" : "#/components/schemas/IntegerArray"
      },
      "DecisionGraphStat" : {
        "type" : "object",
        "properties" : {
          "last_0" : {
            "type" : "integer",
            "example" : 1
          },
          "last_7" : {
            "type" : "integer",
            "example" : 2
          },
          "last_30" : {
            "type" : "integer",
            "example" : 4
          },
          "last_90" : {
            "type" : "integer",
            "example" : 5
          },
          "last_365" : {
            "type" : "integer",
            "example" : 7
          }
        }
      },
      "DecisionGraphStats" : {
        "type" : "object",
        "properties" : {
          "running" : {
            "$ref" : "#/components/schemas/DecisionGraphStat"
          },
          "completed" : {
            "$ref" : "#/components/schemas/DecisionGraphStat"
          },
          "started" : {
            "$ref" : "#/components/schemas/DecisionGraphStat"
          }
        }
      },
      "DeviceRegisterActionData" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "integer"
          },
          "pushKey" : {
            "type" : "string"
          },
          "browserId" : {
            "type" : "string"
          }
        }
      },
      "TestIntegration" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "client_id" : {
            "type" : "integer"
          },
          "credentials" : {
            "type" : "object",
            "properties" : {
              "username" : {
                "type" : "string"
              },
              "password" : {
                "type" : "string"
              },
              "encryptionKey" : {
                "type" : "string"
              },
              "md5" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "UpdateIntegration" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TestIntegration"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "name" : {
              "type" : "string"
            },
            "active" : {
              "type" : "boolean"
            },
            "settings" : {
              "type" : "object",
              "properties" : {
                "syncType" : {
                  "type" : "string",
                  "example" : "pull"
                },
                "syncPeriodDays" : {
                  "type" : "integer",
                  "example" : 1
                },
                "syncTime" : {
                  "type" : "object",
                  "properties" : {
                    "hour" : {
                      "type" : "string",
                      "example" : "05"
                    },
                    "minute" : {
                      "type" : "string",
                      "example" : "30"
                    }
                  }
                }
              }
            }
          }
        } ]
      },
      "Integration" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "$ref" : "#/components/schemas/UpdateIntegration"
        } ]
      },
      "IntegrationWithCredentials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Integration"
        }, {
          "$ref" : "#/components/schemas/TestIntegration"
        } ]
      },
      "IntegrationGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "01d8094b-4ca4-4f5a-9773-f311cfbd0cc8"
          },
          "name" : {
            "type" : "string",
            "example" : "Group name"
          }
        }
      },
      "CreateContactListOptions" : {
        "type" : "object",
        "properties" : {
          "overwriteGroups" : {
            "type" : "boolean"
          }
        }
      },
      "ContactListMembers" : {
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/UpdateContact"
              }, {
                "type" : "object",
                "properties" : {
                  "groups" : {
                    "type" : "string",
                    "example" : "1, 2, 3"
                  }
                }
              } ]
            }
          }
        }
      },
      "UpdateContactList" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Group name"
          },
          "social_wall" : {
            "type" : "boolean"
          },
          "source_type" : {
            "type" : "string"
          },
          "source_data" : {
            "type" : "object"
          }
        }
      },
      "ContactList" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateContactList"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 5
            },
            "user_id" : {
              "type" : "integer"
            },
            "name" : {
              "type" : "string",
              "example" : "Group name"
            },
            "member_count" : {
              "type" : "integer"
            },
            "shared" : {
              "type" : "integer"
            },
            "project_ref_count" : {
              "type" : "integer"
            },
            "geo_mbr_sw_lat" : {
              "type" : "number",
              "example" : 55.685786599244594
            },
            "geo_mbr_sw_lng" : {
              "type" : "number",
              "example" : 12.55462646484375
            },
            "geo_mbr_ne_lat" : {
              "type" : "number",
              "example" : 55.6995014591531
            },
            "geo_mbr_ne_lng" : {
              "type" : "number",
              "example" : 12.578573226928711
            },
            "social_wall" : {
              "type" : "boolean"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Timestamps"
        } ]
      },
      "UpdateSmartGroup" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Smart group name"
          },
          "query" : {
            "type" : "string",
            "example" : "first_name IN(\"Svend\")"
          }
        }
      },
      "ContactListStats" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 5
          },
          "groupName" : {
            "type" : "string",
            "example" : "Group name"
          },
          "engagedContacts" : {
            "type" : "integer"
          },
          "numberOfPosts" : {
            "type" : "integer"
          },
          "numberOfComments" : {
            "type" : "integer"
          },
          "averageCommentsPerPost" : {
            "type" : "integer"
          },
          "numberOfLikes" : {
            "type" : "integer"
          },
          "numberOfMediaItems" : {
            "type" : "integer"
          }
        }
      },
      "ContentItemStats" : {
        "type" : "object",
        "properties" : {
          "{play0-play100}" : {
            "type" : "integer"
          }
        },
        "description" : "falloff chart values"
      },
      "CreateMessage" : {
        "type" : "object",
        "properties" : {
          "template_id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "add_to_homepage" : {
            "type" : "boolean"
          },
          "allow_unsubscribe" : {
            "type" : "boolean"
          },
          "anonymous" : {
            "type" : "boolean"
          },
          "shared" : {
            "type" : "boolean"
          },
          "bookmarked" : {
            "type" : "boolean"
          },
          "categories" : {
            "$ref" : "#/components/schemas/StringArray"
          },
          "force_sms" : {
            "type" : "boolean"
          },
          "channel_sms" : {
            "type" : "boolean"
          },
          "channel_sms_from_name" : {
            "type" : "string"
          },
          "channel_sms_msg_template" : {
            "type" : "string",
            "example" : "Hi #firstname#, a message for you: #link#"
          },
          "channel_sms_simple" : {
            "type" : "boolean"
          },
          "channel_voiceblast" : {
            "type" : "boolean"
          },
          "voiceprofile_id" : {
            "type" : "integer"
          },
          "channel_ivr" : {
            "type" : "boolean"
          },
          "channel_ivr_msisdn" : {
            "type" : "string"
          },
          "channel_ivr_prefer_tollfree" : {
            "type" : "boolean"
          },
          "open_limit" : {
            "type" : "integer"
          },
          "tags" : {
            "$ref" : "#/components/schemas/StringArray"
          },
          "modules" : {
            "type" : "object",
            "properties" : {
              "{module type}" : {
                "type" : "object",
                "properties" : {
                  "{module id}" : {
                    "$ref" : "#/components/schemas/Module"
                  }
                }
              }
            }
          },
          "ft" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "recurring_message_id" : {
            "type" : "integer"
          },
          "content_language" : {
            "type" : "string",
            "example" : "en-US"
          },
          "channel_email" : {
            "type" : "boolean"
          },
          "channel_email_from_address" : {
            "type" : "string"
          },
          "channel_email_from_name" : {
            "type" : "string"
          },
          "channel_email_subject" : {
            "type" : "string"
          },
          "email_first_page" : {
            "type" : "boolean"
          },
          "disable_deeplink" : {
            "type" : "boolean"
          },
          "must_read" : {
            "type" : "boolean"
          },
          "webhook_message_event_url" : {
            "type" : "string"
          },
          "delay_till" : {
            "$ref" : "#/components/schemas/Timestamp"
          },
          "delivery_days" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "delivery_hour_start" : {
            "type" : "integer"
          },
          "delivery_hour_end" : {
            "type" : "integer"
          },
          "delivery_preference" : {
            "$ref" : "#/components/schemas/StringArray"
          },
          "quiz_retake_interval" : {
            "type" : "number"
          },
          "quiz_retake_max_attempts" : {
            "type" : "number"
          },
          "quiz_retake_message" : {
            "type" : "string"
          },
          "starred" : {
            "type" : "string"
          },
          "send_reminders" : {
            "type" : "boolean"
          },
          "reminder_rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringArray"
            }
          },
          "reminder_items" : {
            "$ref" : "#/components/schemas/StringArray"
          }
        }
      },
      "Message" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "$ref" : "#/components/schemas/CreateMessage"
        }, {
          "type" : "object",
          "properties" : {
            "group_id" : {
              "type" : "integer"
            },
            "message_insights_enabled" : {
              "type" : "boolean"
            },
            "authentication" : {
              "type" : "object"
            },
            "created_by" : {
              "type" : "string"
            },
            "expiration_date" : {
              "$ref" : "#/components/schemas/Date"
            },
            "expired_at" : {
              "$ref" : "#/components/schemas/Date"
            },
            "expiration_after" : {
              "$ref" : "#/components/schemas/Timestamp"
            },
            "type" : {
              "type" : "string",
              "example" : "normal"
            },
            "status" : {
              "type" : "string",
              "example" : "pending"
            },
            "reminders_sent" : {
              "type" : "integer"
            },
            "send_start" : {
              "$ref" : "#/components/schemas/Date"
            },
            "send_finish" : {
              "$ref" : "#/components/schemas/Date"
            },
            "scheduled" : {
              "$ref" : "#/components/schemas/Date"
            },
            "publish_in_app" : {
              "type" : "boolean"
            },
            "status_info" : {
              "type" : "string"
            },
            "group" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer"
                },
                "name" : {
                  "type" : "string"
                },
                "total_recipients" : {
                  "type" : "integer"
                },
                "size" : {
                  "type" : "integer"
                }
              }
            },
            "stats" : {
              "type" : "object",
              "properties" : {
                "notified" : {
                  "type" : "integer"
                },
                "published" : {
                  "type" : "integer"
                },
                "viewed" : {
                  "type" : "integer"
                },
                "open_rate" : {
                  "type" : "integer"
                }
              }
            },
            "sidebar" : {
              "$ref" : "#/components/schemas/Sidebar"
            }
          }
        }, {
          "$ref" : "#/components/schemas/TimestampsWithDeleted"
        } ]
      },
      "Module" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "buttongroup"
          },
          "header" : {
            "type" : "string"
          }
        }
      },
      "SendMessage" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "contacts" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "groups" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "sendOptions" : {
            "type" : "object",
            "properties" : {
              "smsFromName" : {
                "type" : "boolean"
              }
            }
          },
          "isTest" : {
            "type" : "boolean"
          },
          "scheduled" : {
            "type" : "boolean"
          }
        }
      },
      "MessageDispatch" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "sendout_type" : {
            "type" : "string",
            "example" : "normal"
          },
          "contacts" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "groups" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "status" : {
            "type" : "string"
          },
          "scheduled" : {
            "$ref" : "#/components/schemas/Date"
          },
          "sent" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "MessageAccess" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "client_id" : {
            "type" : "integer"
          },
          "modular_message_id" : {
            "type" : "integer"
          },
          "contact_id" : {
            "type" : "integer"
          },
          "contact_list_id" : {
            "type" : "integer"
          },
          "from_contact_list_id" : {
            "type" : "integer"
          },
          "message_dispatch_id" : {
            "type" : "integer"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "contact_active" : {
            "type" : "boolean"
          },
          "group_name" : {
            "type" : "string"
          }
        }
      },
      "MessageFrequency" : {
        "type" : "object",
        "properties" : {
          "interval" : {
            "type" : "string",
            "example" : "monthly"
          },
          "selected" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "locked" : {
            "type" : "boolean"
          }
        }
      },
      "MessageStats" : {
        "type" : "object",
        "properties" : {
          "latestUpdate" : {
            "type" : "integer",
            "example" : 1556694901000
          },
          "unique" : {
            "type" : "object",
            "properties" : {
              "sent" : {
                "type" : "object",
                "properties" : {
                  "total" : {
                    "type" : "integer"
                  },
                  "{source type}" : {
                    "type" : "integer"
                  }
                }
              },
              "open" : {
                "$ref" : "#/components/schemas/OpenStats"
              },
              "modules" : {
                "$ref" : "#/components/schemas/ModuleStats"
              }
            }
          },
          "modules" : {
            "type" : "object",
            "properties" : {
              "{module type}" : {
                "$ref" : "#/components/schemas/ModuleStats"
              }
            }
          },
          "open" : {
            "$ref" : "#/components/schemas/OpenStats"
          },
          "bounce" : {
            "type" : "object",
            "properties" : {
              "{source type}" : {
                "type" : "integer"
              }
            }
          },
          "topLevel" : {
            "type" : "object",
            "properties" : {
              "push" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "pull" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "total" : {
                "$ref" : "#/components/schemas/PushPullStat"
              }
            }
          },
          "overall" : {
            "$ref" : "#/components/schemas/OverallStats"
          },
          "recipients" : {
            "type" : "object",
            "properties" : {
              "{contact id}" : {
                "type" : "object",
                "properties" : {
                  "{module type}" : {
                    "$ref" : "#/components/schemas/ModuleStats"
                  },
                  "open" : {
                    "$ref" : "#/components/schemas/OpenStats"
                  }
                }
              }
            }
          },
          "moduleDetails" : {
            "type" : "object",
            "properties" : {
              "{module type}" : {
                "type" : "object",
                "properties" : {
                  "{module id}" : {
                    "type" : "object",
                    "properties" : {
                      "{interaction type}" : {
                        "type" : "object",
                        "properties" : {
                          "ids" : {
                            "$ref" : "#/components/schemas/IntegerArray"
                          },
                          "value" : {
                            "type" : "integer"
                          },
                          "publicValue" : {
                            "type" : "integer"
                          },
                          "total" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "quiz" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "questionsCorrect" : {
                  "type" : "integer"
                },
                "questionsAnswered" : {
                  "type" : "integer"
                },
                "questionsTotal" : {
                  "type" : "integer"
                },
                "pointsEarned" : {
                  "type" : "integer"
                },
                "pointsPossible" : {
                  "type" : "integer"
                },
                "attempts" : {
                  "type" : "integer"
                }
              }
            }
          }
        }
      },
      "BulkMessageStats" : {
        "type" : "object",
        "properties" : {
          "{message id}" : {
            "type" : "object",
            "properties" : {
              "push" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "pull" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "total" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "public" : {
                "$ref" : "#/components/schemas/PushPullStat"
              },
              "bounce" : {
                "type" : "object",
                "properties" : {
                  "{source type}" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      },
      "MessageRecipient" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "recipient_id" : {
            "type" : "integer"
          },
          "group_id" : {
            "type" : "integer"
          },
          "contact_id" : {
            "type" : "integer"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phone_number_code" : {
            "type" : "string"
          },
          "phone_number" : {
            "type" : "string"
          },
          "msisdn" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "is_test" : {
            "type" : "boolean"
          },
          "delivered" : {
            "type" : "boolean"
          },
          "received" : {
            "type" : "boolean"
          },
          "click_state" : {
            "type" : "string"
          },
          "sent_date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "contact" : {
            "$ref" : "#/components/schemas/Contact"
          },
          "group" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer"
              },
              "name" : {
                "type" : "string"
              },
              "total_recipients" : {
                "type" : "integer"
              },
              "size" : {
                "type" : "integer"
              },
              "member_count" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "KeycodeStatus" : {
        "type" : "object",
        "properties" : {
          "keycode" : {
            "type" : "string",
            "example" : "VIFbpab88W"
          },
          "status" : {
            "type" : "string",
            "example" : "failure"
          },
          "status_info" : {
            "type" : "string"
          }
        }
      },
      "MessageRecipientStatus" : {
        "type" : "object",
        "properties" : {
          "sms" : {
            "$ref" : "#/components/schemas/KeycodeStatus"
          },
          "email" : {
            "$ref" : "#/components/schemas/KeycodeStatus"
          }
        }
      },
      "CreateMessageFeedback" : {
        "type" : "object",
        "properties" : {
          "target_contact_id" : {
            "type" : "integer"
          },
          "module_id" : {
            "type" : "integer"
          },
          "content" : {
            "type" : "string"
          }
        }
      },
      "MessageFeedback" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "contact_id" : {
              "type" : "integer"
            },
            "recipient_id" : {
              "type" : "integer"
            },
            "hide_comment" : {
              "type" : "boolean"
            },
            "created_at" : {
              "$ref" : "#/components/schemas/Date"
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateMessageFeedback"
        } ]
      },
      "MessageUpload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "module_upload_id" : {
            "type" : "integer"
          },
          "modular_message_id" : {
            "type" : "integer"
          },
          "contact_id" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "file_type" : {
            "type" : "string"
          },
          "file_subtype" : {
            "type" : "string"
          },
          "file_size" : {
            "type" : "integer"
          },
          "metadata" : {
            "type" : "object"
          },
          "url" : {
            "type" : "string"
          },
          "created_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "deleted_at" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "PushPullStat" : {
        "type" : "object",
        "properties" : {
          "sent" : {
            "type" : "integer"
          },
          "open" : {
            "type" : "integer"
          },
          "openExlPull" : {
            "type" : "integer"
          },
          "bounce" : {
            "type" : "integer"
          },
          "notOpen" : {
            "type" : "integer"
          },
          "sentPublished" : {
            "type" : "integer"
          }
        }
      },
      "OpenStats" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer"
          },
          "outbound" : {
            "type" : "integer"
          },
          "platform" : {
            "type" : "object",
            "properties" : {
              "{platform type}" : {
                "type" : "object",
                "properties" : {
                  "{browser type}" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "source" : {
            "type" : "object",
            "properties" : {
              "{source type}" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "OverallStats" : {
        "type" : "object",
        "properties" : {
          "{source type}" : {
            "type" : "integer"
          }
        }
      },
      "ModuleStats" : {
        "type" : "object",
        "properties" : {
          "{module id}" : {
            "type" : "object",
            "properties" : {
              "{child id}" : {
                "type" : "object",
                "properties" : {
                  "click" : {
                    "type" : "integer"
                  }
                }
              },
              "view" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "CreateMessageLink" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "MessageLink" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "modular_message_id" : {
              "type" : "integer"
            },
            "code" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            },
            "rootUrl" : {
              "type" : "string",
              "example" : "root.url.com/"
            },
            "url" : {
              "type" : "string",
              "example" : "root.url.com/l/{code}"
            },
            "qrUrl" : {
              "type" : "string",
              "example" : "https://api.qrserver.com/v1/create-qr-code/?data="
            },
            "qrThumb" : {
              "type" : "string"
            },
            "timestamp" : {
              "$ref" : "#/components/schemas/Date"
            },
            "expires_at" : {
              "$ref" : "#/components/schemas/Date"
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateMessageLink"
        } ]
      },
      "MessageListMessage" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "unread" : {
            "type" : "integer"
          },
          "subject" : {
            "type" : "string",
            "example" : "Full message subject"
          },
          "oneLiner" : {
            "type" : "string",
            "example" : "Short message teaser"
          },
          "displayDate" : {
            "$ref" : "#/components/schemas/Timestamp"
          },
          "media" : {
            "$ref" : "#/components/schemas/MediaItem"
          },
          "last_sent_date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "quiz" : {
            "$ref" : "#/components/schemas/QuizResult"
          },
          "socialStats" : {
            "type" : "object",
            "properties" : {
              "likes" : {
                "type" : "integer"
              },
              "comments" : {
                "type" : "integer"
              },
              "views" : {
                "type" : "integer"
              }
            }
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "categoryId" : {
                  "type" : "integer"
                },
                "name" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "Sidebar" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "type" : "object",
          "properties" : {
            "shared" : {
              "type" : "boolean"
            },
            "project_ref_count" : {
              "type" : "integer"
            },
            "header" : {
              "type" : "string"
            },
            "menu_bg_color" : {
              "type" : "string",
              "example" : "ffffff"
            },
            "menu_color" : {
              "type" : "string",
              "example" : "000000"
            },
            "show_branding" : {
              "type" : "boolean"
            },
            "branding_title" : {
              "type" : "string"
            },
            "branding_bg_color" : {
              "type" : "string",
              "example" : "000000"
            },
            "show_branding_bg_image" : {
              "type" : "boolean"
            },
            "branding_bg_image_url" : {
              "type" : "string"
            },
            "show_unread_count" : {
              "type" : "boolean"
            },
            "menu_data" : {
              "type" : "string",
              "example" : "[{ ... }]"
            },
            "tags" : {
              "$ref" : "#/components/schemas/StringArray"
            },
            "ft" : {
              "type" : "string"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Timestamps"
        } ]
      },
      "ProjectSettings" : {
        "type" : "object",
        "properties" : {
          "permissionsRequired" : {
            "type" : "boolean"
          },
          "permissionsMessageId" : {
            "type" : "integer"
          }
        }
      },
      "ProjectItems" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "message" : {
            "$ref" : "#/components/schemas/IntegerArray"
          },
          "{other}" : {
            "$ref" : "#/components/schemas/IntegerArray"
          }
        }
      },
      "ProjectExpandedSettings" : {
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "user:id" : {
                  "type" : "integer"
                },
                "access_level" : {
                  "type" : "string",
                  "example" : "full | view | none"
                }
              }
            }
          },
          "items" : {
            "$ref" : "#/components/schemas/ProjectItems"
          },
          "settings" : {
            "$ref" : "#/components/schemas/ProjectSettings"
          }
        }
      },
      "Project" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "client_id" : {
              "type" : "integer"
            },
            "name" : {
              "type" : "string"
            },
            "settings" : {
              "$ref" : "#/components/schemas/ProjectSettings"
            }
          }
        }, {
          "$ref" : "#/components/schemas/TimestampsWithDeleted"
        } ]
      },
      "QuizResult" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "object",
            "properties" : {
              "earned" : {
                "type" : "number"
              },
              "percentCorrect" : {
                "type" : "string",
                "example" : "60%"
              }
            }
          },
          "categories" : {
            "type" : "object",
            "properties" : {
              "{category name}" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer"
                    },
                    "title" : {
                      "type" : "string"
                    },
                    "completed" : {
                      "type" : "boolean"
                    },
                    "percentCorrect" : {
                      "type" : "number",
                      "example" : 0.75
                    },
                    "overallPercentCorrect" : {
                      "type" : "number",
                      "example" : 1.0
                    },
                    "contacts" : {
                      "type" : "integer"
                    },
                    "pointsEarned" : {
                      "type" : "integer"
                    },
                    "pointsPossible" : {
                      "type" : "integer"
                    },
                    "received" : {
                      "$ref" : "#/components/schemas/Date"
                    },
                    "sendDate" : {
                      "$ref" : "#/components/schemas/Date"
                    }
                  }
                }
              }
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "UpdateRecurringMessage" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "template_message_id" : {
            "type" : "integer"
          },
          "folder_path" : {
            "type" : "string",
            "example" : "1/23/Rating/something/"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "RecurringMessage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecurringMessage"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "client_id" : {
              "type" : "integer"
            },
            "type" : {
              "type" : "string",
              "example" : "rating | pulse"
            },
            "frequency_settings" : {
              "type" : "object",
              "properties" : {
                "scheduled" : {
                  "$ref" : "#/components/schemas/Date"
                },
                "interval" : {
                  "type" : "string",
                  "example" : "weekly | monthly | ..."
                },
                "selected" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "example" : [ "selected weeks, months, ..." ]
                  }
                }
              }
            },
            "template_message_id" : {
              "type" : "integer"
            },
            "scheduled" : {
              "type" : "object"
            },
            "folder_path" : {
              "type" : "string",
              "example" : "1/23/Rating/something/"
            },
            "active" : {
              "type" : "boolean"
            },
            "nextRunTimestamp" : {
              "$ref" : "#/components/schemas/Timestamp"
            },
            "next_sendout" : {
              "$ref" : "#/components/schemas/Date"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Timestamps"
        }, {
          "$ref" : "#/components/schemas/QWFields"
        } ]
      },
      "CreateTask" : {
        "type" : "object",
        "properties" : {
          "task_type" : {
            "type" : "string"
          },
          "task_name" : {
            "type" : "string"
          },
          "task_args" : {
            "type" : "object",
            "properties" : {
              "selected_project" : {
                "type" : "string"
              },
              "{various}" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Task" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "$ref" : "#/components/schemas/CreateTask"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "example" : "pending | queued | success"
            },
            "priority" : {
              "type" : "integer"
            },
            "delay_till" : {
              "$ref" : "#/components/schemas/Timestamp"
            },
            "begun" : {
              "$ref" : "#/components/schemas/Date"
            },
            "ended" : {
              "$ref" : "#/components/schemas/Date"
            },
            "info" : {
              "type" : "string"
            }
          }
        } ]
      },
      "MessageLockRequest" : {
        "type" : "object",
        "properties" : {
          "lockUserId" : {
            "type" : "integer",
            "example" : 1
          },
          "lockSession" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "MessageLock" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "messageId" : {
              "type" : "integer"
            },
            "lockRequested" : {
              "type" : "boolean"
            },
            "lockGranted" : {
              "type" : "boolean"
            },
            "lockRejected" : {
              "type" : "boolean"
            }
          }
        }, {
          "$ref" : "#/components/schemas/MessageLockRequest"
        } ]
      },
      "Stats" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Ids"
        }, {
          "type" : "object",
          "properties" : {
            "communication_id" : {
              "type" : "integer"
            },
            "modular_message_id" : {
              "type" : "integer"
            },
            "message_dispatch_id" : {
              "type" : "integer"
            },
            "sender_user_id" : {
              "type" : "integer"
            },
            "parent_id" : {
              "type" : "integer"
            },
            "recipient_id" : {
              "type" : "integer"
            },
            "contact_id" : {
              "type" : "integer"
            },
            "first_name" : {
              "type" : "string"
            },
            "last_name" : {
              "type" : "string"
            },
            "department" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            },
            "phone_number_code" : {
              "type" : "string",
              "example" : "+45"
            },
            "phone_number" : {
              "type" : "string",
              "example" : "11223344"
            },
            "msisdn" : {
              "type" : "string",
              "example" : "+4511223344"
            },
            "note" : {
              "type" : "string"
            },
            "state" : {
              "type" : "string"
            },
            "context" : {
              "type" : "object"
            },
            "last_sent_date" : {
              "$ref" : "#/components/schemas/Date"
            },
            "delivered" : {
              "$ref" : "#/components/schemas/Date"
            },
            "received" : {
              "$ref" : "#/components/schemas/Date"
            },
            "expired_at" : {
              "$ref" : "#/components/schemas/Date"
            },
            "survey_complete" : {
              "type" : "boolean"
            },
            "reminded" : {
              "type" : "boolean"
            },
            "hidden" : {
              "type" : "boolean"
            },
            "send_email" : {
              "type" : "boolean"
            },
            "send_sms" : {
              "type" : "boolean"
            },
            "send_voiceblast" : {
              "type" : "boolean"
            },
            "is_test" : {
              "type" : "boolean"
            },
            "sms_keycode" : {
              "type" : "string"
            },
            "crosslink_keycode" : {
              "type" : "string"
            },
            "sender_logo" : {
              "type" : "string"
            },
            "status" : {
              "type" : "integer"
            },
            "playbacks" : {
              "type" : "integer"
            },
            "open_count" : {
              "type" : "integer"
            },
            "authentication" : {
              "type" : "object"
            },
            "reminder_rules" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StringArray"
              }
            },
            "reminder_items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "example" : "interval"
                  },
                  "count" : {
                    "type" : "integer"
                  },
                  "interval" : {
                    "type" : "integer",
                    "example" : 3600000
                  }
                }
              }
            },
            "sent_reminders" : {
              "type" : "integer"
            },
            "delivery_hour_start" : {
              "type" : "integer"
            },
            "delivery_hour_end" : {
              "type" : "integer"
            },
            "delivery_days" : {
              "$ref" : "#/components/schemas/IntegerArray"
            },
            "delivery_timezone" : {
              "type" : "string",
              "example" : "+01:00"
            }
          }
        }, {
          "$ref" : "#/components/schemas/QWFields"
        }, {
          "type" : "object",
          "properties" : {
            "contact" : {
              "$ref" : "#/components/schemas/Contact"
            },
            "message" : {
              "$ref" : "#/components/schemas/Message"
            }
          }
        } ]
      },
      "UserStat" : {
        "type" : "object",
        "properties" : {
          "{message_id}" : {
            "type" : "integer"
          },
          "total" : {
            "type" : "integer"
          }
        }
      },
      "UserStats" : {
        "type" : "object",
        "properties" : {
          "{user_id}" : {
            "type" : "object",
            "properties" : {
              "sent" : {
                "$ref" : "#/components/schemas/UserStat"
              },
              "recipients" : {
                "$ref" : "#/components/schemas/UserStat"
              },
              "open" : {
                "$ref" : "#/components/schemas/UserStat"
              },
              "bounce" : {
                "$ref" : "#/components/schemas/UserStat"
              }
            }
          }
        }
      },
      "Id" : {
        "type" : "integer",
        "example" : 1
      },
      "Ids" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "client_id" : {
            "type" : "integer"
          },
          "user_id" : {
            "type" : "integer"
          }
        }
      },
      "UUID" : {
        "type" : "string",
        "example" : "b9678165-7682-4cc7-9921-ba4c3924abdb"
      },
      "Date" : {
        "type" : "string",
        "example" : "2019-01-21T12:25:59.000Z"
      },
      "Timestamp" : {
        "type" : "integer",
        "example" : 1420046600000
      },
      "Timestamps" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "updated_at" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "TimestampsWithDeleted" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "updated_at" : {
            "$ref" : "#/components/schemas/Date"
          },
          "deleted_at" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "QWFields" : {
        "type" : "object",
        "properties" : {
          "qw_status" : {
            "type" : "string",
            "example" : "pending | queued | completed"
          },
          "qw_priority" : {
            "type" : "integer"
          },
          "qw_delay_till" : {
            "$ref" : "#/components/schemas/Timestamp"
          },
          "qw_processor" : {
            "type" : "string"
          },
          "qw_processing_start_date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "qw_processing_end_date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "qw_status_info" : {
            "type" : "string"
          }
        }
      },
      "IdArray" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "$ref" : "#/components/schemas/Id"
            }
          }
        }
      },
      "IntegerArray" : {
        "type" : "array",
        "items" : {
          "type" : "integer"
        },
        "example" : [ 1, 2, 3 ]
      },
      "NumberArray" : {
        "type" : "array",
        "items" : {
          "type" : "integer"
        },
        "example" : [ 1.0, 2.0, 3.0 ]
      },
      "StringArray" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "example" : [ "string1", "string2", "string3" ]
      }
    },
    "parameters" : {
      "APIKey" : {
        "in" : "header",
        "name" : "api-key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "description" : "API key issued by Actimo"
      },
      "AdminAPIKey" : {
        "in" : "header",
        "name" : "api-key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "description" : "Requires an API key with admin access"
      },
      "NativeAppKey" : {
        "in" : "header",
        "name" : "native-app-key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "description" : "Native App key issued by Actimo"
      },
      "AuthCodeHeader" : {
        "in" : "header",
        "name" : "auth-code",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "description" : "Contact Auth Code"
      },
      "ContactId" : {
        "in" : "path",
        "name" : "id",
        "schema" : {
          "type" : "integer"
        },
        "description" : "contact id",
        "required" : true
      },
      "ContactIdParam" : {
        "in" : "path",
        "name" : "contactId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "contact id",
        "required" : true
      },
      "ContactIdQuery" : {
        "in" : "query",
        "name" : "contactId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "contact id"
      },
      "ModuleUploadId" : {
        "in" : "query",
        "name" : "moduleUploadId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "upload module id"
      },
      "TargetContactId" : {
        "in" : "path",
        "name" : "targetId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "id of target contact",
        "required" : true
      },
      "Keyname" : {
        "in" : "path",
        "name" : "keyname",
        "schema" : {
          "type" : "string"
        },
        "description" : "settings key",
        "required" : true
      },
      "PhoneNumber" : {
        "in" : "path",
        "name" : "phoneNumber",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      },
      "VerificationCode" : {
        "in" : "path",
        "name" : "verificationCode",
        "schema" : {
          "type" : "string",
          "example" : "1234"
        },
        "required" : true
      },
      "Keycode" : {
        "in" : "path",
        "name" : "keycode",
        "schema" : {
          "type" : "string"
        },
        "description" : "unique contact message keycode",
        "required" : true
      },
      "Page" : {
        "in" : "query",
        "name" : "page",
        "schema" : {
          "type" : "integer"
        },
        "description" : "page to show"
      },
      "PageSize" : {
        "in" : "query",
        "name" : "pageSize",
        "schema" : {
          "type" : "integer"
        },
        "description" : "number of results per page"
      },
      "Format" : {
        "in" : "query",
        "name" : "format",
        "schema" : {
          "type" : "string"
        },
        "description" : "export format"
      },
      "Order" : {
        "in" : "query",
        "name" : "order",
        "schema" : {
          "type" : "string"
        },
        "description" : "field,order to sort by (example: timestamp,DESC)"
      },
      "Search" : {
        "in" : "query",
        "name" : "search",
        "schema" : {
          "type" : "string"
        },
        "description" : "search term to use as filter"
      },
      "SearchTerm" : {
        "in" : "query",
        "name" : "search",
        "schema" : {
          "type" : "string"
        },
        "description" : "search term to use as filter"
      },
      "SourceContactId" : {
        "in" : "query",
        "name" : "sourceId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "source contact id",
        "required" : true
      },
      "SourceAuthCode" : {
        "in" : "query",
        "name" : "sourceAuthCode",
        "schema" : {
          "type" : "string"
        },
        "description" : "auth code for source user",
        "required" : true
      },
      "AuthCode" : {
        "in" : "query",
        "name" : "authCode",
        "schema" : {
          "type" : "string"
        },
        "description" : "contact auth code",
        "required" : true
      },
      "ProjectId" : {
        "in" : "query",
        "name" : "projectId",
        "schema" : {
          "type" : "string"
        },
        "description" : "workspace id",
        "required" : true
      },
      "FolderType" : {
        "in" : "path",
        "name" : "type",
        "schema" : {
          "type" : "string"
        },
        "description" : "folder type",
        "required" : true
      },
      "Stats" : {
        "in" : "query",
        "name" : "stats",
        "schema" : {
          "type" : "string"
        }
      },
      "SelectedType" : {
        "in" : "query",
        "name" : "selectedType",
        "schema" : {
          "type" : "string"
        }
      },
      "Tags" : {
        "in" : "query",
        "name" : "tags",
        "schema" : {
          "type" : "string"
        },
        "description" : "tags to include"
      },
      "Path" : {
        "in" : "query",
        "name" : "path",
        "schema" : {
          "type" : "string"
        },
        "description" : "path components to include"
      },
      "Bounce" : {
        "in" : "query",
        "name" : "bounce",
        "schema" : {
          "type" : "string"
        },
        "description" : "whether or not to include bounce statistics"
      },
      "ModuleDetails" : {
        "in" : "query",
        "name" : "moduleDetails",
        "schema" : {
          "type" : "string"
        },
        "description" : "whether or not to include moduleDetails statistics"
      },
      "Modules" : {
        "in" : "query",
        "name" : "modules",
        "schema" : {
          "type" : "string"
        },
        "description" : "whether or not to include module statistics"
      },
      "Open" : {
        "in" : "query",
        "name" : "open",
        "schema" : {
          "type" : "string"
        },
        "description" : "whether or not to include open statistics"
      },
      "Unique" : {
        "in" : "query",
        "name" : "unique",
        "schema" : {
          "type" : "string"
        },
        "description" : "whether or not to include unique statistics"
      },
      "Since" : {
        "in" : "query",
        "name" : "since",
        "schema" : {
          "type" : "string"
        },
        "description" : "unix timestamp for lower bound of stats times"
      },
      "Filter" : {
        "in" : "path",
        "name" : "filter",
        "schema" : {
          "type" : "string"
        },
        "description" : "stats filter to apply, ie: clicks:modules.buttongroup.5.13.click",
        "required" : true
      },
      "Id" : {
        "in" : "path",
        "name" : "id",
        "schema" : {
          "type" : "integer"
        },
        "description" : "item id",
        "required" : true
      },
      "ModuleContactId" : {
        "in" : "path",
        "name" : "identifier",
        "schema" : {
          "type" : "string"
        },
        "description" : "accepts moduleId (89) or moduleId followed by targetContactId (89-12)",
        "required" : true
      },
      "ItemId" : {
        "in" : "path",
        "name" : "itemId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "subitem id",
        "required" : true
      },
      "ContactOrListId" : {
        "in" : "path",
        "name" : "targetId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "id of contact or contact list",
        "required" : true
      },
      "QueryId" : {
        "in" : "query",
        "name" : "id",
        "schema" : {
          "type" : "integer"
        },
        "description" : "limit results to specific item"
      },
      "Limit" : {
        "in" : "query",
        "name" : "limit",
        "schema" : {
          "type" : "integer"
        },
        "description" : "maximum results to return"
      },
      "Offset" : {
        "in" : "query",
        "name" : "offset",
        "schema" : {
          "type" : "integer"
        },
        "description" : "results to skip"
      },
      "MessageId" : {
        "in" : "path",
        "name" : "messageId",
        "schema" : {
          "type" : "integer"
        },
        "description" : "message id",
        "required" : true
      },
      "RequestId" : {
        "in" : "path",
        "name" : "requestId",
        "schema" : {
          "type" : "string"
        },
        "description" : "The request ID gotten from /device/register (example: c2172f15-82ba-4ec8-b3ef-bde2d89a6f85)",
        "required" : true
      },
      "ShortcodeId" : {
        "in" : "path",
        "name" : "id",
        "schema" : {
          "type" : "integer"
        },
        "description" : "client shortcode id",
        "required" : true
      },
      "MediaType" : {
        "in" : "query",
        "name" : "type",
        "schema" : {
          "type" : "string"
        },
        "description" : "all | video | audio | image | buttongroup | text"
      },
      "Order_old" : {
        "in" : "query",
        "name" : "order",
        "schema" : {
          "type" : "string"
        },
        "description" : "field to sort by (example: timestamp)"
      },
      "Direction" : {
        "in" : "query",
        "name" : "direction",
        "schema" : {
          "type" : "string"
        },
        "description" : "order to sort by: ASC | DESC"
      },
      "OnlyTags" : {
        "in" : "query",
        "name" : "onlyTags",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "apply search term filtering only to tags"
      },
      "Count" : {
        "in" : "query",
        "name" : "count",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "returns only count of items"
      },
      "All" : {
        "in" : "query",
        "name" : "all",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "do not filter for current project"
      },
      "SearchData" : {
        "in" : "query",
        "name" : "searchData",
        "schema" : {
          "type" : "object",
          "properties" : {
            "moduleUploadId" : {
              "type" : "integer"
            },
            "contactId" : {
              "type" : "integer"
            }
          }
        },
        "description" : "data to use as subfilter"
      },
      "Force" : {
        "in" : "query",
        "name" : "force",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "force action"
      },
      "Ids" : {
        "in" : "query",
        "name" : "ids",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "pass for each message to delete: ?ids=1&ids=2",
        "required" : true
      },
      "IntegrationType" : {
        "in" : "query",
        "name" : "type",
        "schema" : {
          "type" : "string"
        },
        "description" : "azuread | bamboo | csv | odata | planday | samesystem | tamigo"
      },
      "OverwriteGroups" : {
        "in" : "query",
        "name" : "overwriteGroups",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "pass true to overwrite existing groups"
      },
      "IgnoreLimit" : {
        "in" : "query",
        "name" : "ignoreLimit",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "whether to ignore default limit"
      },
      "IgnoreEmptyValues" : {
        "in" : "query",
        "name" : "ignoreEmptyValues",
        "schema" : {
          "type" : "boolean"
        },
        "description" : "pass true to ignore empty fields"
      },
      "Query" : {
        "in" : "query",
        "name" : "query",
        "schema" : {
          "type" : "string"
        },
        "description" : "smart group query: i.e. first_name IN(\"Test\")"
      },
      "RegisterActionType" : {
        "in" : "query",
        "name" : "type",
        "schema" : {
          "type" : "string"
        },
        "description" : "pre | system",
        "required" : true
      },
      "RegisterActionAction" : {
        "in" : "query",
        "name" : "action",
        "schema" : {
          "type" : "string"
        },
        "description" : "accepted | denied | shown | prompt",
        "required" : true
      }
    },
    "responses" : {
      "200" : {
        "description" : "Ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "$ref" : "#/components/schemas/StatusSuccess"
                }
              }
            }
          }
        }
      },
      "304" : {
        "description" : "Not modified"
      },
      "400" : {
        "description" : "Bad request"
      },
      "401" : {
        "description" : "Unauthorized"
      },
      "403" : {
        "description" : "Forbidden"
      },
      "404" : {
        "description" : "Not found"
      }
    }
  }
}