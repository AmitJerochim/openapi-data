penapi: 3.0.0
info:
  version: 'v1'
  title: 'Flexigroup BPAY''s APIs '
  description: 'You can see the designs here: https://www.figma.com/file/BwaByr9fpvM8c1QTNGez9Uhp/Humm-v1.0---UX-UI---Current---(in-production)?node-id=7228%3A93570'
tags:
- name: Billers
  description: Manage saved biller codes
- name: Bills
  description: Paying a bill and see what has billed
- name: Suggestion
  description: Suggestions when searching biller names
- name: E-Commerce
  description: Payment gateway
paths:
  /ecommerce/{ProductCode}/cancel/{BillId}: 
    get:
      tags:
        - E-Commerce 
      summary: Cancel E-Commerce
      description:  When the transaction is failed after that it call this API.
      operationId: CancelEcommerce
      security: []
      parameters:
        - name: ProductCode
          in: path
          description: This parameter determines which product is.
          required: true
          schema:
            type: string
            example: HUMM
        - name: BillId
          in: path
          description: This parameter determines the Id of the bill.
          required: true
          schema:
            type: string
            format: uuid
            example: '00000000-0000-0000-0000-000000000000'
      responses:
        '200':
          description: Redirect to the BPAY client site
  /ecommerce/{ProductCode}/complete/{BillId}: 
    get:
      tags:
        - E-Commerce 
      summary: Complete E-Commerce
      description:  When the transaction is successful after that it call this API.
      operationId: CompleteEcommerce
      security: []
      parameters:
        - name: x_account_Id
          in: query
          schema:
            type: string
        - name: x_test
          in: query
          schema:
            type: string
        - name: x_amount
          in: query
          schema:
            type: string
        - name: x_currency
          in: query
          schema:
            type: string
        - name: x_reference
          in: query
          schema:
            type: string
        - name: x_purchase_number
          in: query
          schema:
            type: string
        - name: x_gateway_reference
          in: query
          schema:
            type: string
        - name: x_result
          in: query
          schema:
            type: string
        - name: x_timestamp
          in: query
          schema:
            type: string
        - name: x_signature
          in: query
          schema:
            type: string
        - name: ProductCode
          in: path
          description: This parameter determines which product is.
          required: true
          schema:
            type: string
            example: HUMM
        - name: BillId
          in: path
          description: This parameter determines the Id of the bill.
          required: true
          schema:
            type: string
            format: uuid
            example: '00000000-0000-0000-0000-000000000000'
      responses:
        '200':
          description: Redirect to the BPAY client site
  /billers:
   get:
      tags:
        - Billers
      summary: Get all saved billers
      description: List all of the billers that the user has saved
      parameters:
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
        - $ref: "#/components/parameters/countParam"
        - $ref: "#/components/parameters/pageParam"
      security: 
        - oAuth: []
      responses:
        '200':
          description: Successful
          headers:
            x-count:
              schema:
                type: integer
              description: 'The count of all billers'
            x-page:
              schema:
                type: integer
              description: 'Current page number'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billers'
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '500':
          description: Server Internal Error
  /billers/{id}:
    get:
      tags: 
        - Billers
      summary: Get detail of the biller
      description: Get detail of the biller by Id
      operationId: getBillerById
      security: 
        - oAuth: []
      parameters:
        - $ref: "#/components/parameters/billIdParam"
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillerDetails'
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '403':
          description: Access Checkup
                - 'User does not has access to this biller'
        '404':
          description: Not Found
                  - 'The selected biller does not exist'
        '500':
          description: Server Internal Error
    put:
      tags:
        - Billers
      summary: Edit saved biller
      description: Edit saved biller
      operationId: updateBillById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillerDetailsWithoutId'
      security: 
        - oAuth: []
      parameters:
        - $ref: "#/components/parameters/billIdParam"
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request 
        '401':
          description: Validating/Authenticating user (security)
        '403':
          description: Access Checkup
                - 'User does not has access to this biller'
        '404':
          description: Not Found
                  - 'The selected biller does not exist'
        '500':
          description: Server Internal Error
    delete:
      tags:
        - Billers
      summary: Remove saved biller
      description: Remove saved biller associated to the user
      operationId: deleteSavedBillById
      security: 
        - oAuth: []
      parameters:
        - $ref: "#/components/parameters/billIdParam"
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '403':
          description: Access Checkup
                - 'User does not has access to this biller'
        '404':
          description: Not Found
                  - 'The selected biller does not exist'
        '500':
          description: Server Internal Error
  /bills:
   get:
      tags:
        - Bills
      summary: List all paid bills
      description: List all paid bills that user had paid them through the Flexigroup Bpay middle layer
      parameters:
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
        - $ref: "#/components/parameters/countParam"
        - $ref: "#/components/parameters/pageParam"
      security: 
        - oAuth: []
      responses:
        '200':
          description: Successful
          headers:
            x-count:
              schema:
                type: integer
              description: 'The count of all paids'
            x-page:
              schema:
                type: integer
              description: 'current page number'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bills'
        '400':
          description: Bad Request
        '401':
          description: Balidating/Authenticating user (security)
        '500':
          description: Server Internal Error
   post:
      tags:
        - Bills
      summary: Initial a request of paying a bill
      description: Initial a request of paying a bill and responses that if user can pay this bill or not. if the bill can be payed, it returns a 307 redirect response and the client should redirect user to the e-commerce gateway.
      parameters:
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
      security: 
        - oAuth: []
      requestBody:
        description: all parameters are required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayingBillParam'
      responses:
        '307':
          description: Successful and redirect
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '409':
          description: The biller code does not exist
        '500':
          description: Server Internal Error
  /bills/{id}:
    get:
      tags: 
        - Bills
      summary: Returns a bill's detail
      description: Returns a bill's detail
      operationId: getDetailById
      security: 
        - oAuth: []
      parameters:
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
        - $ref: "#/components/parameters/billIdParam"
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '403':
          description: Access Checkup
                - 'User does not has access to this biller'
        '404':
          description: Not Found
                  - 'The selected bills does not exist'
        '500':
          description: Server Internal Error
  /suggestion/{BillerCode}:
    get:
      tags: 
        - Suggestion
      summary: Suggest biller name while typing
      description:  Suggest biller name while typing, there is no need to completely send whole the biller code, it searches biller codes like a string.
      operationId: suggestByTyping
      security: 
        - oAuth: []
      parameters:
        - $ref: "#/components/parameters/productCodeParam"
        - $ref: "#/components/parameters/appTypeParam"
        - $ref: "#/components/parameters/appVerParam"
        - $ref: "#/components/parameters/billerCodeParam"
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suggestion'
        '400':
          description: Bad Request
        '401':
          description: Validating/Authenticating user (security)
        '500':
          description: Server Internal Error
components:
  parameters:
    billIdParam:
      name: id
      in: path
      description: 'Id of Bill to return'
      required: true
      schema:
        type: string
        format: uuid
        default: '00000000-0000-0000-0000-000000000000'
    billerCodeParam:
      name: BillerCode
      in: path
      description: it is biller Code to return
      required: true
      schema:
        type: string
    productCodeParam:
      name: x-product-code
      in: header
      description: 'A unique code that determins witch App is calling the API. e.g.: HUMM , BUNDLE , SKY , ...'
      required: true
      schema:
        type: string
        default: HUMM
    appTypeParam:
      name: x-app-type
      in: header
      description: 'The platform that client is running. e.g.: ANDROID ,  IOS , WEB'
      required: true
      schema:
        type: string
        default: WEB
    appVerParam:
      name: x-app-ver
      in: header
      description: 'Client''s app version'
      required: true
      schema:
        type: string
        default: 1.2.1
    countParam:
      name: x-count
      in: header
      description: 'The count of all'
      schema:
        type: integer
        default: 10
    pageParam:
      name: x-page
      in: header
      description: 'Current page number'
      schema:
        type: integer
        default: 1
  schemas:
    Biller:
      type: object
      properties:
        billerId:
          type: string
          format: uuid
          default: '00000000-0000-0000-0000-000000000000'
        billerName:
          type: string
          default: 'AGL'
        billerCode:
          type: integer
          default: 77657
        crn:
          type: string
          default: '872E872389W73'
        logoUrl:
          type: string
          default: 'Url'
    Billers:
      type: array
      items:
        $ref: '#/components/schemas/Biller'
      example:
          - billerId: '00000000-0000-0000-0000-000000000001'
            billerName:  'AGL'
            billerCode: 77657
            crn: '872E872389W73'
          - billerId: '00000000-0000-0000-0000-000000000002'
            billerName:  'Sydney Water'
            billerCode: 77770
            crn: '872E872389W73'
          - billerId: '00000000-0000-0000-0000-000000000002'
            billerName:  'Foxtel'
            billerCode: 77345
            crn: '872E872389W73'
    BillerDetails:
      type: object
      properties:
        billerId:
          type: string
          format: uuid
          default: '00000000-0000-0000-0000-000000000000'
        billerName:
          type: string
          default: 'AGL'
        billerCode:
          type: integer
          default: 77657
        billerCRN:
          type: string
          default: '872E872389W73'
    BillerDetailsWithoutId:
      type: object
      properties:
        billerName:
          type: string
          default: 'AGL'
        billerCode:
          type: integer
          default: 77657
        billerCRN:
          type: string
          default: '872E872389W73'
    Bills:
      type: array
      items:
        $ref: '#/components/schemas/Bill'
      example:
          - billId: '00000000-0000-0000-0000-000000000100'
            billerName:  'AGL Electricity'
            billerCode: 'BD437GD'
            crn: '872E872389I45'
            amount: 175.76
            date: '11/21/2019'
          - billId: '00000000-0000-0000-0000-000000000101'
            billerName:  'AGL Electricity'
            billerCode: 'BD437GD'
            crn: '872E872389W73'
            amount: 260.00
            date: '12/01/2019'
          - billId: '00000000-0000-0000-0000-000000000102'
            billerName:  'Sydney Water'
            billerCode: 'BD437GD'
            crn: '872E872389X6Y'
            amount: 75.76
            date: '12/10/2019'
    Bill:
      type: object
      properties:
        billId:
          type: string
          format: uuid
          default: '00000000-0000-0000-0000-000000000000'
        billerName:
          type: string
          default: 'Sydney Water'
        billerCode:
          type: string
          default: 'BD437GD'
        crn:
          type: string
          default: '872E872389W73'
        amount:
          type: number
        date: 
          type: string
    PayingBillParam:
      type: object
      properties:
        billerName:
          type: string
        billerCode:
          type: string
        amount:
          type: number
        crn:
          type: string
        saveBiller:
          type: boolean
    Suggestion:
      type: object
      properties:
        billerCode:
          type: number
          format: int 
        billerName:
          type: string
      example:
        - billerCode: 77657
          billerName:  'TAX OFFICE PAYMENTS'
   
  securitySchemes:
    oAuth:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes: {}
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FlexiGroup/BPAY/v1
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FlexiGroup/api/v1/bpay