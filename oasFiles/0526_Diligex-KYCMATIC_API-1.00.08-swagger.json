{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Diligex/KYCMATIC_API/1.00.08"
  } ],
  "info" : {
    "description" : "<b>Introduction</b><br/><br/>The REST API allows KYCMATIC clients to integrate through a REST/JSON web service accessible exclusively over HTTPS using message authentication via managed API keys.<br/><br/><b>Authorisation</b><br/><br/>A private API key will be provided per integration. This will allow the customerâ€™s system to access the REST API functions. The API key should be kept private and is to be included in the header of the request as X-Integration-Key.<br/><br/>Furthermore, the caller IPs need to be provided to Diligex so that they will be white listed by the API. Multiple IPs can be provided if needed.<br/><br/><b>Example Headers:</b><br/><br/>X-Integration-Key - 26f6bb3b-ca49-4b7c-a5a1-8697750db9e2<br/><br/><b>REST API Testing</b><br/><br/>Access to a test environment will be provided for testing purposes.<br/><br/>",
    "version" : "1.00.08",
    "title" : "KYCMATIC REST API provided by Diligex"
  },
  "externalDocs" : {
    "description" : "About Diligex",
    "url" : "https://www.diligex.eu/"
  },
  "paths" : {
    "/customer" : {
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "Create / Update Customer",
        "description" : "This REST API call accepts all the necessary details to create/update a customer and returns back the created/update customer. To create a new customer the id must be passed as -1.",
        "operationId" : "createUpdateCustomer",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer created/updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                },
                "example" : {
                  "id" : 74343,
                  "personTypeId" : 1,
                  "identificationNumber" : "897047M",
                  "identificationTypeId" : 1,
                  "idExpiryDate" : "2022-11-27",
                  "titleId" : 1,
                  "firstName" : "James",
                  "lastName" : "Williams",
                  "genderId" : 1,
                  "dateOfBirth" : "1984-11-27",
                  "email" : "j.williams@email.com",
                  "emailConsent" : true,
                  "telephone" : "+356 224 343 23",
                  "mobile" : "+356 796 321 23",
                  "address1" : "Joe House",
                  "address2" : "Cambridge Street",
                  "address3" : "Siggiewi",
                  "postcode" : "SGW 4600",
                  "countryOfResidenceCode" : "MT",
                  "mailSameAsResidence" : false,
                  "mailingAddress1" : "Mailing House",
                  "mailingAddress2" : "Dingli Street",
                  "mailingAddress3" : "Dingli",
                  "mailingPostcode" : "DLG 2362",
                  "mailingCountryCode" : "MT",
                  "countryOfBirthCode" : "MT",
                  "placeOfBirth" : "Pieta`",
                  "nationalityCode" : "MT",
                  "countryOfOperationCode" : "MT",
                  "otherCountryConnections" : [ {
                    "countryCode" : "GB",
                    "connectionTypeId" : 5
                  } ],
                  "employmentStatusId" : 6,
                  "occupation" : "Senior Project Manager",
                  "industryId" : 24,
                  "totalEarningId" : 2,
                  "politicallyExposedPerson" : true,
                  "pepName" : "George Borg",
                  "pepRelationshipId" : 2,
                  "pepPositionId" : 5,
                  "sanctions" : true,
                  "sanctionedDate" : "2014-07-12",
                  "adverseMedia" : false,
                  "terrorismLinks" : false,
                  "financialCrime" : false,
                  "freezingOrders" : false,
                  "highNetWorth" : false,
                  "faceToFace" : true,
                  "individualInvestorsProgram" : false,
                  "relationshipIntermediary" : true,
                  "annualTurnoverId" : 3,
                  "legalEntityTypeId" : 7,
                  "legalEntityStatusId" : 7,
                  "languageCode" : "en",
                  "ongoingMonitoring" : true,
                  "ongoingMonitoringEndDate" : "2020-12-31"
                }
              }
            }
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Customer Id not found"
          },
          "409" : {
            "description" : "Conflict, customer already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/Customer"
              },
              "example" : {
                "id" : -1,
                "personTypeId" : 1,
                "identificationNumber" : "897047M",
                "identificationTypeId" : 1,
                "idExpiryDate" : "2022-11-27",
                "titleId" : 1,
                "firstName" : "James",
                "lastName" : "Williams",
                "genderId" : 1,
                "dateOfBirth" : "1984-11-27",
                "email" : "j.williams@email.com",
                "emailConsent" : true,
                "telephone" : "+356 224 343 23",
                "mobile" : "+356 796 321 23",
                "address1" : "Joe House",
                "address2" : "Cambridge Street",
                "address3" : "Siggiewi",
                "address4" : null,
                "postcode" : "SGW 4600",
                "countryOfResidenceCode" : "MT",
                "mailSameAsResidence" : true,
                "mailingAddress1" : "Mailing House",
                "mailingAddress2" : "Dingli Street",
                "mailingAddress3" : "Dingli",
                "mailingAddress4" : null,
                "mailingPostcode" : "SGW 4600",
                "mailingCountryCode" : "MT",
                "countryOfBirthCode" : "MT",
                "placeOfBirth" : "Pieta`",
                "nationalityCode" : "MT",
                "countryOfOperationCode" : "MT",
                "otherCountryConnections" : [ {
                  "countryCode" : "GB",
                  "connectionTypeId" : 5
                } ],
                "employmentStatusId" : 6,
                "occupation" : "Senior Project Manager",
                "industryId" : 24,
                "anticipatedActivityLevelId" : 24,
                "lastReviewDate" : "2019-07-07",
                "nextReviewDate" : "2019-07-12",
                "politicallyExposedPerson" : true,
                "pepName" : "George Borg",
                "pepRelationshipId" : 2,
                "pepPositionId" : 5,
                "pepComments" : null,
                "sanctions" : true,
                "sanctionedList" : null,
                "sanctionedDate" : "2014-07-12",
                "sanctionedComments" : null,
                "adverseMedia" : false,
                "adverseMediaComments" : null,
                "terrorismLinks" : false,
                "terrorismLinksComments" : null,
                "financialCrime" : false,
                "financialCrimeComments" : null,
                "freezingOrders" : false,
                "freezingOrdersComments" : null,
                "highNetWorth" : false,
                "faceToFace" : true,
                "individualInvestorsProgram" : false,
                "relationshipIntermediary" : true,
                "mainActivity" : null,
                "annualTurnoverId" : 3,
                "legalEntityTypeId" : 7,
                "legalEntityStatusId" : 7,
                "natureObjectPurposeOfFoundation" : null,
                "notes" : null,
                "languageCode" : "en",
                "ongoingMonitoring" : true,
                "ongoingMonitoringEndDate" : "2020-12-31"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get Customer By Id",
        "description" : "This function returns a customer object.",
        "operationId" : "getCustomerById",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "query",
          "name" : "CustomerId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Customer Id to get"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                },
                "example" : {
                  "id" : 86,
                  "code" : "C0005",
                  "personTypeId" : 2,
                  "relationshipStatusId" : 2,
                  "companyName" : "ABC Ltd",
                  "companyRegistrationNo" : "C234225",
                  "dateOfIncorporation" : "2019-02-07",
                  "email" : "abc@gmail.com",
                  "emailConsent" : false,
                  "anticipatedActivityLevelId" : 9,
                  "lastReviewDate" : "2019-03-12",
                  "nextReviewDate" : "2019-03-31",
                  "politicallyExposedPerson" : false,
                  "sanctions" : false,
                  "legalEnforcements" : false,
                  "adverseMedia" : false,
                  "terrorismLinks" : false,
                  "financialCrime" : false,
                  "freezingOrders" : false,
                  "highNetWorth" : false,
                  "faceToFace" : false,
                  "individualInvestorsProgram" : false,
                  "relationshipIntermediary" : false,
                  "telephone" : "+356 21 123 456",
                  "mobile" : "+356 79 123 456",
                  "address1" : "a1",
                  "address2" : "a2",
                  "address3" : "a3",
                  "address4" : "a4",
                  "postcode" : "PO",
                  "countryOfResidenceCode" : "NL",
                  "mailSameAsResidence" : false,
                  "industryId" : 4,
                  "notes" : "Test comment",
                  "mainActivity" : "Startup",
                  "contactPerson" : "John Smith",
                  "contactPhone" : false,
                  "countryOfOperationCode" : "US",
                  "annualTurnoverId" : 6,
                  "legalEntityTypeId" : 3,
                  "legalEntityStatusId" : 3
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Customer Id provided"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "customer" ],
        "summary" : "Delete Customer",
        "description" : "This REST API call performs a logical delete of the customer.",
        "operationId" : "deleteCustomer",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "path",
          "name" : "CustomerId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Customer Id to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer deleted"
          },
          "400" : {
            "description" : "Invalid Customer Id provided"
          },
          "403" : {
            "description" : "Unable to delete customer because it is linked to one or more activities"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/customer/link" : {
      "put" : {
        "tags" : [ "customer" ],
        "summary" : "Link Customer with Activity",
        "description" : "This call accepts a JSON object with CustomerId, ActivityId and CustomerTypeId with the purpose of linking a customer with an activity.",
        "operationId" : "linkCustomer",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "path",
          "name" : "CustomerId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Customer Id"
        }, {
          "in" : "path",
          "name" : "ActivityId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 71,
          "description" : "Activity Id"
        }, {
          "in" : "path",
          "name" : "CustomerTypeId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "required" : true,
          "example" : 0,
          "description" : "Customer Type Id - If left empty it will default to 0 = Client (see lookup list provided separately)\""
        } ],
        "responses" : {
          "200" : {
            "description" : "Link saved successfully"
          },
          "204" : {
            "description" : "CustomerId, ActivityId or CustomerTypeId does not exist"
          }
        }
      }
    },
    "/customer/unlink" : {
      "delete" : {
        "tags" : [ "customer" ],
        "summary" : "Delete Link between Customer and Activity",
        "description" : "This REST API call performs a logical delete of the link between a Customer and an Activity.",
        "operationId" : "unlinkCustomerActivity",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "path",
          "name" : "CustomerId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Customer Id"
        }, {
          "in" : "path",
          "name" : "ActivityId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 71,
          "description" : "Activity Id"
        }, {
          "in" : "path",
          "name" : "CustomerTypeId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "required" : true,
          "example" : 0,
          "description" : "Customer Type Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer Involvement link deleted"
          },
          "400" : {
            "description" : "Invalid Involvement Id provided, Invalid Parent Id provided"
          },
          "204" : {
            "description" : "Customer not found or Link not found between the parent and involvement"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/customer/involvement" : {
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "Create / Update Customer Involvement",
        "description" : "This REST API call accepts all the necessary details to create/update a customer involvement and returns back the created/update customer involvement. To create a new customer involvement the id must be passed as -1.",
        "operationId" : "createUpdateCustomerInvolvement",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Involvement created/updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Involvement"
                },
                "example" : {
                  "id" : 1423,
                  "parentId" : 86,
                  "involvementTypeIds" : [ 4, 5 ],
                  "percentOwnership" : 100,
                  "dulyAuthorised" : null,
                  "personTypeId" : 1,
                  "identificationNumber" : "897047M",
                  "identificationTypeId" : 1,
                  "idExpiryDate" : "2022-11-27",
                  "titleId" : 1,
                  "firstName" : "James",
                  "lastName" : "Williams",
                  "genderId" : 1,
                  "dateOfBirth" : "1984-11-27",
                  "email" : "j.williams@email.com",
                  "emailConsent" : true,
                  "telephone" : "+356 224 343 23",
                  "mobile" : "+356 796 321 23",
                  "address1" : "Joe House",
                  "address2" : "Cambridge Street",
                  "address3" : "Mellieha",
                  "postcode" : "MLH 4363",
                  "countryOfResidenceCode" : "MT",
                  "mailSameAsResidence" : true,
                  "countryOfBirthCode" : "MT",
                  "placeOfBirth" : "Zabbar",
                  "nationalityCode" : "MT",
                  "countryOfOperationCode" : "MT",
                  "otherCountryConnections" : [ {
                    "countryCode" : "EE",
                    "connectionTypeId" : 5
                  } ],
                  "employmentStatusId" : 6,
                  "occupation" : "Senior Project Manager",
                  "industryId" : 24,
                  "anticipatedActivityLevelId" : 24,
                  "politicallyExposedPerson" : true,
                  "pepName" : "George Borg",
                  "pepRelationshipId" : 2,
                  "pepPositionId" : 5,
                  "sanctions" : false,
                  "adverseMedia" : true,
                  "adverseMediaComments" : "Adverse Media has been found on James Williams related to AML",
                  "terrorismLinks" : false,
                  "financialCrime" : false,
                  "freezingOrders" : false,
                  "highNetWorth" : false,
                  "faceToFace" : true,
                  "individualInvestorsProgram" : false,
                  "relationshipIntermediary" : true,
                  "annualTurnoverId" : 3,
                  "legalEntityTypeId" : 7,
                  "legalEntityStatusId" : 7
                }
              }
            }
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Customer not found"
          },
          "409" : {
            "description" : "Conflict, customer already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/Customer"
              },
              "example" : {
                "id" : -1,
                "parentId" : 86,
                "involvementTypeIds" : [ 4, 5 ],
                "percentOwnership" : 100,
                "personTypeId" : 1,
                "identificationNumber" : "897047M",
                "identificationTypeId" : 1,
                "idExpiryDate" : "2022-11-27",
                "titleId" : 1,
                "firstName" : "James",
                "lastName" : "Williams",
                "genderId" : 1,
                "dateOfBirth" : "1984-11-27",
                "email" : "j.williams@email.com",
                "emailConsent" : true,
                "telephone" : "+356 224 343 23",
                "mobile" : "+356 796 321 23",
                "address1" : "Joe House",
                "address2" : "Cambridge Street",
                "address3" : "Mellieha",
                "postcode" : "MLH 4363",
                "countryOfResidenceCode" : "MT",
                "countryOfBirthCode" : "MT",
                "placeOfBirth" : "Zabbar",
                "nationalityCode" : "MT",
                "countryOfOperationCode" : "MT",
                "otherCountryConnections" : [ {
                  "countryCode" : "DK",
                  "connectionTypeId" : 5
                } ],
                "employmentStatusId" : 6,
                "occupation" : "Senior Project Manager",
                "industryId" : 24,
                "anticipatedActivityLevelId" : 24,
                "lastReviewDate" : "2019-07-07",
                "nextReviewDate" : "2019-07-12",
                "politicallyExposedPerson" : true,
                "pepName" : "George Borg",
                "pepRelationshipId" : 2,
                "pepPositionId" : 5,
                "pepComments" : null,
                "sanctions" : false,
                "sanctionedList" : null,
                "sanctionedDate" : null,
                "sanctionedComments" : null,
                "adverseMedia" : true,
                "adverseMediaComments" : "Adverse Media has been found on James Williams related to AML",
                "terrorismLinks" : false,
                "terrorismLinksComments" : null,
                "financialCrime" : false,
                "financialCrimeComments" : null,
                "freezingOrders" : false,
                "freezingOrdersComments" : null,
                "highNetWorth" : false,
                "faceToFace" : true,
                "individualInvestorsProgram" : false,
                "relationshipIntermediary" : true,
                "annualTurnoverId" : 3,
                "legalEntityTypeId" : 7,
                "legalEntityStatusId" : 7
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get Customer Involvement By Id and Parent Id",
        "description" : "This function returns a customer involvement object.",
        "operationId" : "getCustomerInvolvementByIdAndParentId",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "query",
          "name" : "InvolvementId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Involvement Id to get"
        }, {
          "in" : "query",
          "name" : "ParentId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Parent Id of respective Involvement"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Involvement"
                },
                "example" : {
                  "id" : 1423,
                  "parentId" : 86,
                  "involvementTypeIds" : [ 4, 5 ],
                  "percentOwnership" : 100,
                  "dulyAuthorised" : null,
                  "personTypeId" : 1,
                  "identificationNumber" : "897047M",
                  "identificationTypeId" : 1,
                  "idExpiryDate" : "2022-11-27",
                  "titleId" : 1,
                  "firstName" : "James",
                  "lastName" : "Williams",
                  "genderId" : 1,
                  "dateOfBirth" : "1984-11-27",
                  "email" : "j.williams@email.com",
                  "emailConsent" : true,
                  "telephone" : "+356 224 343 23",
                  "mobile" : "+356 796 321 23",
                  "address1" : "Joe House",
                  "address2" : "Cambridge Street",
                  "address3" : "Mellieha",
                  "postcode" : "MLH 4363",
                  "countryOfResidenceCode" : "MT",
                  "mailSameAsResidence" : true,
                  "countryOfBirthCode" : "MT",
                  "placeOfBirth" : "Zabbar",
                  "nationalityCode" : "MT",
                  "countryOfOperationCode" : "MT",
                  "otherCountryConnections" : [ {
                    "countryCode" : "DK",
                    "connectionTypeId" : 5
                  } ],
                  "employmentStatusId" : 6,
                  "occupation" : "Senior Project Manager",
                  "industryId" : 24,
                  "anticipatedActivityLevelId" : 24,
                  "politicallyExposedPerson" : true,
                  "pepName" : "George Borg",
                  "pepRelationshipId" : 2,
                  "pepPositionId" : 5,
                  "sanctions" : false,
                  "adverseMedia" : true,
                  "adverseMediaComments" : "Adverse Media has been found on James Williams related to AML",
                  "terrorismLinks" : false,
                  "financialCrime" : false,
                  "freezingOrders" : false,
                  "highNetWorth" : false,
                  "faceToFace" : true,
                  "individualInvestorsProgram" : false,
                  "relationshipIntermediary" : true,
                  "annualTurnoverId" : 3,
                  "legalEntityTypeId" : 7,
                  "legalEntityStatusId" : 7
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Customer Id provided"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/customer/involvement/unlink" : {
      "delete" : {
        "tags" : [ "customer" ],
        "summary" : "Delete Link between Customer and Involvement",
        "description" : "This REST API call performs a logical delete of the link between a Customer and an Involvement.",
        "operationId" : "unlinkCustomerInvolvement",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "path",
          "name" : "InvolvementId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Involvement Id"
        }, {
          "in" : "path",
          "name" : "ParentId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 196,
          "description" : "Parent Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer Involvement link deleted"
          },
          "400" : {
            "description" : "Invalid Involvement Id provided, Invalid Parent Id provided"
          },
          "403" : {
            "description" : "Link not found between the parent and involvement"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/activity" : {
      "post" : {
        "tags" : [ "activity" ],
        "summary" : "Create / Update Activity",
        "description" : "This REST API call accepts all the necessary details to create/update a activity and returns back the created/updated activity. To create a new activity the id must be passed as -1.",
        "operationId" : "createUpdateActivity",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Activity created/updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedActivity"
                },
                "example" : {
                  "id" : 2145,
                  "internalRefNo" : "ABC_2019_07_27",
                  "activityTypeId" : 1,
                  "dateOfActivity" : "2019-07-25",
                  "value" : 189000,
                  "sourceOfTransactionFundsIds" : [ 1 ],
                  "sourceOfWealthIds" : [ 1 ],
                  "countryOfTransactionFundsCodes" : [ "MT" ],
                  "paymentMethodIds" : [ 13 ],
                  "currencyId" : 48,
                  "createdBy" : "API",
                  "modifiedBy" : "API",
                  "formKey" : "59c0b205-0210-4a8d-91e7-1deaf3df00a0"
                }
              }
            }
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Activity not found"
          },
          "409" : {
            "description" : "Conflict, activity already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedActivity"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/requestBodies/Activity"
              },
              "example" : {
                "id" : -1,
                "internalRefNo" : "ABC_2019_07_27",
                "activityTypeId" : 1,
                "dateOfActivity" : "2019-07-25",
                "value" : 189000,
                "sourceOfTransactionFundsIds" : [ 1 ],
                "sourceOfWealthIds" : [ 1 ],
                "countryOfTransactionFundsCodes" : [ "MT" ],
                "paymentMethodIds" : [ 13 ],
                "currencyId" : 48
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "activity" ],
        "summary" : "Get Activity By Id",
        "description" : "This function returns a activity object.",
        "operationId" : "getActivityById",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "query",
          "name" : "ActivityId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 109,
          "description" : "Activity Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedActivity"
                },
                "example" : {
                  "id" : 109,
                  "internalRefNo" : "ABC_2019_07_27",
                  "activityTypeId" : 1,
                  "dateOfActivity" : "2019-07-25",
                  "value" : 189000,
                  "sourceOfTransactionFundsIds" : [ 1 ],
                  "sourceOfWealthIds" : [ 1 ],
                  "countryOfTransactionFundsCodes" : [ "MT" ],
                  "paymentMethodIds" : [ 13 ],
                  "currencyId" : 48,
                  "numberOfCustomers" : 1,
                  "numberOfDocuments" : 0,
                  "riskAnalysisProgress" : 0,
                  "createdBy" : "API",
                  "modifiedBy" : "API"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Activity Id provided"
          },
          "204" : {
            "description" : "Activity not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "activity" ],
        "summary" : "Delete Activity",
        "description" : "This REST API call performs a logical delete of the activity.",
        "operationId" : "deleteActivity",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        }, {
          "in" : "path",
          "name" : "ActivityId",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "required" : true,
          "example" : 86,
          "description" : "Activity Id to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "Activity deleted"
          },
          "400" : {
            "description" : "Invalid Activity Id provided"
          },
          "403" : {
            "description" : "Unable to delete activity because it is linked to one or more customers"
          },
          "204" : {
            "description" : "Activity not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/transaction/highvalue" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "Insert top 6 High Value Transactions",
        "description" : "This REST API call accepts all the necessary details to create a list of transactions linked to a customer.",
        "operationId" : "createHighValueTransaction",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Transactions created successfully"
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HighValueTransaction"
                }
              },
              "example" : [ {
                "customerId" : 2145,
                "transactionDate" : "2019-07-25",
                "amount" : 25000,
                "activityTypeId" : 72,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 13
              }, {
                "customerId" : 2145,
                "transactionDate" : "2019-07-26",
                "amount" : 12000,
                "activityTypeId" : 73,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 12
              } ]
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/transaction/activityTypeMonth" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "Insert aggregate amount per activity type per month",
        "description" : "This REST API call accepts all the necessary details to create an aggregate amount per activity type per month linked to a customer.",
        "operationId" : "createActivityTypeMonthAggregate",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Record/s created successfully"
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ActivityTypeMonthAmount"
                }
              },
              "example" : [ {
                "customerId" : 2145,
                "year" : 2019,
                "month" : 8,
                "totalAmount" : 25000,
                "activityTypeId" : 72,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 13
              }, {
                "customerId" : 2145,
                "year" : 2019,
                "month" : 8,
                "totalAmount" : 12000,
                "activityTypeId" : 73,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 12
              } ]
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/transaction/activityTypeAll" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "Insert aggregate amount per activity type since registration date",
        "description" : "This REST API call accepts all the necessary details to create an aggregate amount per activity type since registration date linked to a customer.",
        "operationId" : "createActivityTypeAggregate",
        "parameters" : [ {
          "in" : "header",
          "name" : "X-Integration-Key",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "26f6bb3b-ca49-4b7c-a5a1-8697750db9e2",
          "description" : "Integration Key"
        } ],
        "responses" : {
          "200" : {
            "description" : "Record/s created successfully"
          },
          "401" : {
            "description" : "Authorisation information is missing or invalid"
          },
          "204" : {
            "description" : "Customer not found"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ActivityTypeAmount"
                }
              },
              "example" : [ {
                "customerId" : 2145,
                "totalAmount" : 35000,
                "activityTypeId" : 72,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 13
              }, {
                "customerId" : 2145,
                "totalAmount" : 42000,
                "activityTypeId" : 73,
                "jurisdictionCountryCode" : "MT",
                "paymentMethodId" : 12
              } ]
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Customer" : {
        "type" : "object",
        "required" : [ "id", "personTypeId" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : -1,
            "example" : 94382,
            "description" : "A unique identifier for each customer record. To create a new customer pass -1"
          },
          "personTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 2,
            "example" : "1",
            "description" : "Person Type (1 = Natural Person, 2 = Legal Entity)"
          },
          "identificationNumber" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "897047M",
            "description" : "Identification Number such as ID Card, Passport, Driving Licence etc..."
          },
          "identificationTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 5,
            "example" : 1,
            "description" : "Identification Document Type (1 = Identity Card, 2 = Passport, 3 = Residence Card, 4 = Driving Licence, 5 = Other)"
          },
          "idExpiryDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2022-11-27",
            "description" : "I.D. Document Expiry Date (yyyy-MM-dd)"
          },
          "titleId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 5,
            "example" : 1,
            "description" : "Title (1 = Dr., 2 = Mr., 3 = Mrs., 4 = Ms., 5 = Sir.)"
          },
          "firstName" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "James",
            "description" : "First Name"
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Williams",
            "description" : "Last Name"
          },
          "companyName" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "ABC Ltd",
            "description" : "Company Name (for Legal Entity)"
          },
          "companyRegistrationNo" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "C01234",
            "description" : "Company Registration Number (for Legal Entity)"
          },
          "dateOfIncorporation" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2011-11-27",
            "description" : "Date Company was Incorporated in yyyy-MM-dd format  (for Legal Entity)"
          },
          "genderId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 3,
            "example" : 1,
            "description" : "Gender (1 = Male, 2 = Female, 3 = Gender Neutral)"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "1984-11-27",
            "description" : "Date of Birth (yyyy-MM-dd)"
          },
          "email" : {
            "type" : "string",
            "maxLength" : 255,
            "example" : "j.williams@email.com",
            "description" : "Email Address"
          },
          "emailConsent" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Customer given consent to send emails?"
          },
          "telephone" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "+356 224 343 23",
            "description" : "Telephone Number"
          },
          "mobile" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "+356 796 321 23",
            "description" : "Mobile Number"
          },
          "contactPhone" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "+356 224 343 23",
            "description" : "Telephone/Mobile Number (for Legal Entity)"
          },
          "contactPerson" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "John Smith",
            "description" : "Contact Person (for Legal Entity)"
          },
          "address1" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Joe House",
            "description" : "Address Line 1 - House Name"
          },
          "address2" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Cambridge Street",
            "description" : "Address Line 2 - Street Name"
          },
          "address3" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Siggiewi",
            "description" : "Address Line 3 - Town"
          },
          "address4" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : null,
            "description" : "Address Line 4 - Other"
          },
          "postcode" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "SGW 4600",
            "description" : "Address Postcode"
          },
          "countryOfResidenceCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Country of Residence - For list of Country Codes (see lookup list provided separately)"
          },
          "mailSameAsResidence" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is the mailing address same as residencial adress?"
          },
          "mailingAddress1" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Mailing House",
            "description" : "Mailing Address Line 1 - House Name"
          },
          "mailingAddress2" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Dingli Street",
            "description" : "Mailing Address Line 2 - Street Name"
          },
          "mailingAddress3" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : "Dingli",
            "description" : "Mailing Address Line 3 - Town"
          },
          "mailingAddress4" : {
            "type" : "string",
            "maxLength" : 100,
            "example" : null,
            "description" : "Mailing Address Line 4 - Other"
          },
          "mailingPostcode" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "SGW 4600",
            "description" : "Mailing Address Postcode"
          },
          "mailingCountryCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Mailing Country - For list of Country Codes (see lookup list provided separately)"
          },
          "countryOfBirthCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Country of Birth - For list of Country Codes (see lookup list provided separately)"
          },
          "placeOfBirth" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 50,
            "example" : "Pieta`",
            "description" : "Place of Birth"
          },
          "nationalityCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Nationality - For list of Country Codes (see lookup list provided separately)"
          },
          "countryOfOperationCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Country of Operation/Incorporation (for Legal Entity) - For list of Country Codes (see lookup list provided separately)"
          },
          "otherCountryConnections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryConnection"
            },
            "description" : "Connections with Other Countries"
          },
          "employmentStatusId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 9,
            "example" : 6,
            "description" : "Employment Status (1 = Self-employed, 2 = Employed full-time, 3 = Employed part-time, 4 = Temporarily unemployed, but looking for work, 5 = Unemployed, and not looking for work, 6 = Homemaker / Housewife / Family carer, 7 = Student, 8 = Retired / Pensioner, 9 = Unable to work)"
          },
          "occupation" : {
            "type" : "string",
            "maxLength" : 200,
            "example" : "Senior Project Manager",
            "description" : "Profession / Trade / Occupation"
          },
          "industryId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 41,
            "example" : 24,
            "description" : "Working Industry (see lookup list provided separately)"
          },
          "totalEarningId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "example" : 5,
            "description" : "Total Annual Earnings (see lookup list provided separately)"
          },
          "relationshipStatusId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 2,
            "example" : 2,
            "description" : "Relationship Status between Service Provider and the Customer (1 = Occasional Transaction, 2 = Business Relationship)"
          },
          "anticipatedActivityLevelId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 41,
            "example" : 24,
            "description" : "Anticipated Level of Activity (see lookup list provided separately)"
          },
          "lastReviewDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2019-07-07",
            "description" : "Last Review Date (yyyy-MM-dd)"
          },
          "nextReviewDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2019-07-12",
            "description" : "Next Review Date (yyyy-MM-dd)"
          },
          "politicallyExposedPerson" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is Politicaly Exposed Person?"
          },
          "pepName" : {
            "type" : "string",
            "maxLength" : 200,
            "example" : "George Borg",
            "description" : "PEP Full Name (if PEP = true)"
          },
          "pepRelationshipId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 6,
            "example" : 2,
            "description" : "Relationship to PEP (if PEP = true) (1 = A close associate, 2 = A parent, 3 = An in-law, 4 = Child, 5 = Spouse / Partner, 6 = Self)"
          },
          "pepPositionId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 17,
            "example" : 5,
            "description" : "Position of PEP (if PEP = true) (see lookup list provided separately)"
          },
          "pepComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to PEP (if PEP = true)",
            "example" : null
          },
          "sanctions" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is Sanctioned?"
          },
          "sanctionedList" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "List of sanctions (if sanctions = true)",
            "example" : null
          },
          "sanctionedDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2014-07-12",
            "description" : "Sanctioned Date (yyyy-MM-dd) (if sanctions = true)"
          },
          "sanctionedComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to sanctions (if sanctions = true)",
            "example" : null
          },
          "adverseMedia" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Has Adverse Media?"
          },
          "adverseMediaComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to adverse media (if adverseMedia = true)",
            "example" : null
          },
          "terrorismLinks" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Has Terrorism Links?"
          },
          "terrorismLinksComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to terrorism links (if terrorismLinks = true)",
            "example" : null
          },
          "financialCrime" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Reports related to Financial Crime?"
          },
          "financialCrimeComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to financial crime (if financialCrime = true)",
            "example" : null
          },
          "freezingOrders" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Has Freezing Orders?"
          },
          "freezingOrdersComments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any comments related to freezing orders (if freezingOrders = true)",
            "example" : null
          },
          "highNetWorth" : {
            "type" : "boolean",
            "example" : false,
            "description" : "High Net Worth? (only if Natural Person)"
          },
          "faceToFace" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Met Face to Face? (only if Natural Person)"
          },
          "individualInvestorsProgram" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Individual Investors Program? (only if Natural Person)"
          },
          "relationshipIntermediary" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Relationship was established through an Intermediary?"
          },
          "mainActivity" : {
            "type" : "string",
            "maxLength" : 500,
            "description" : "Main Activity (only if Legal Entity)",
            "example" : null
          },
          "annualTurnoverId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 6,
            "example" : 3,
            "description" : "Annual Turnover (only if Legal Entity) (see lookup list provided separately)"
          },
          "legalEntityTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 8,
            "example" : 7,
            "description" : "Legal Entity Type (only if Legal Entity) (see lookup list provided separately)"
          },
          "legalEntityStatusId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 8,
            "example" : 7,
            "description" : "Legal Entity Status (only if Legal Entity) (see lookup list provided separately)"
          },
          "natureObjectPurposeOfFoundation" : {
            "type" : "string",
            "maxLength" : 200,
            "description" : "Nature, Object, Purpose of Foundation (only if Legal Entity and type is Foundation)",
            "example" : null
          },
          "notes" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any notes/comments relating to the customer",
            "example" : null
          },
          "sendLink" : {
            "type" : "boolean",
            "description" : "Whether email with link to fill further documentation should be sent to the customer/player or not. If the property value is null or not sent, it will default to True.",
            "example" : false
          },
          "languageCode" : {
            "type" : "string",
            "maxLength" : 5,
            "example" : "en",
            "description" : "Language code to be used for sending email/displaying of the KYC Form in the respective language. If not provided, language is default to English."
          },
          "ongoingMonitoring" : {
            "type" : "boolean",
            "description" : "Whether the customer should be monitored in relation to Adverse Media, Sanctions and PEP checks",
            "example" : true
          },
          "ongoingMonitoringEndDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "description" : "If ongoingMonitoring is 'true', when should Ongoing Monitoring be stopped? The End Date is no required in which case Ongoing Monitoring will stay on forever (can still be manually switched OFF from KYCMATIC portal)",
            "example" : "2020-12-31"
          }
        },
        "xml" : {
          "name" : "Customer"
        }
      },
      "CountryConnection" : {
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Connection with Other Country - For list of Country Codes (see lookup list provided separately)"
          },
          "connectionTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 8,
            "example" : 2,
            "description" : "Connection Type with Country (1 = Place of Birth, 2 = Family Connections, 3 = Business Connections, 4 = Source of Wealth, 5 = Assets/Property, 6 = Source of Funds, 7 = Shareholding Company, 8 = Subsidiary Company)"
          }
        },
        "xml" : {
          "name" : "CountryConnection"
        }
      },
      "Activity" : {
        "type" : "object",
        "required" : [ "id", "internalRefNo", "activityTypeId", "dateOfActivity" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : -1,
            "example" : 94382,
            "description" : "A unique identifier for each activity record. To create a new activity pass -1"
          },
          "internalRefNo" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "ABC001",
            "description" : "Internal Reference Number (can be configured to be auto-generated in which case it will not be mandatory)"
          },
          "activityTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 100,
            "example" : 2,
            "description" : "Activity Type (see lookup list provided separately)"
          },
          "dateOfActivity" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2019-06-27",
            "description" : "Date of Activity (yyyy-MM-dd)"
          },
          "dateOfRegistration" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2017-06-27",
            "description" : "Date of Registration (yyyy-MM-dd) - this field applies only for Gaming Companies"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 100,
            "maximum" : 2000000000,
            "example" : 750000,
            "description" : "Value/Amount of Transaction (for Gaming Companies this is Total Deposits in Past Year)"
          },
          "sourceOfTransactionFundsIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1,
              "maximum" : 5
            },
            "example" : [ 1 ],
            "description" : "Source of Transaction Funds (see lookup list provided separately)"
          },
          "sof_BankLoanAmount" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 100,
            "maximum" : 2000000000,
            "example" : 50000,
            "description" : "Source of Funds Bank Loan Amount (only applicable if 'Bank Loan' selected as source of funds)"
          },
          "sof_PrivateLoanAmount" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 100,
            "maximum" : 2000000000,
            "example" : 50000,
            "description" : "Source of Funds Private Loan Amount (only applicable if 'Private Loan' selected as source of funds)"
          },
          "sof_PrivateLoanPerson" : {
            "type" : "string",
            "maxLength" : 200,
            "description" : "Source of Funds Private Loan Person (only applicable if 'Private Loan' selected as source of funds)"
          },
          "sof_Other" : {
            "type" : "string",
            "maxLength" : 200,
            "example" : null,
            "description" : "Other Source of Funds (only applicable if 'Other' selected as source of funds)"
          },
          "sourceOfWealthIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1,
              "maximum" : 16
            },
            "example" : [ 1 ],
            "description" : "Source of Wealth (see lookup list provided separately)"
          },
          "countryOfTransactionFundsCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "maxLength" : 2
            },
            "example" : [ "MT" ],
            "description" : "Country of Transaction Funds (see lookup list provided separately)"
          },
          "paymentMethodIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1,
              "maximum" : 13
            },
            "example" : [ 1, 8 ],
            "description" : "Method/s of Payment (see lookup list provided separately)"
          },
          "valueInCash" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 100,
            "maximum" : 2000000000,
            "example" : 50000,
            "description" : "Value paid in Cash (required if Payment Method = Cash)"
          },
          "creditTermId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 3,
            "example" : 1,
            "description" : "Credit Term (1 = Weekly, 2 = Monthly, 3 = Annual, 4 = Bi-Annual Repayment)"
          },
          "repaymentValue" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 100,
            "maximum" : 2000000000,
            "example" : 50000,
            "description" : "Repayment Value"
          },
          "repaymentDueDate" : {
            "type" : "string",
            "maxLength" : 200,
            "description" : "Repayment Due Date (free-text)",
            "example" : "Payment to be done at the end of every month"
          },
          "repaymentFullEstimatedDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2020-01-30",
            "description" : "Full Repayment Estimated Date (yyyy-MM-dd)"
          },
          "maturityDurationId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 2,
            "example" : 1,
            "description" : "Maturity Duration (1 = Long-term, 2 = Short-term)"
          },
          "beneficiaryOfInvestmentId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 4,
            "example" : 3,
            "description" : "Beneficiary of Investment (1 = Investment Account Holder, 2 = Nominated Third Party, 3 = Designated Third Party, 4 = Charity/NGO)"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 158,
            "example" : 48,
            "description" : "Currency (48 = euro)  (see complete lookup list provided separately)"
          },
          "comments" : {
            "type" : "string",
            "maxLength" : 4000,
            "description" : "Any notes/comments relating to the activity",
            "example" : null
          },
          "customerId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "example" : 9342,
            "description" : "Customer Id to link a customer automatically with activity"
          }
        },
        "xml" : {
          "name" : "Activity"
        }
      },
      "ExtendedActivity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Activity"
        }, {
          "type" : "object",
          "properties" : {
            "numberOfCustomers" : {
              "type" : "integer",
              "format" : "int32"
            },
            "numberOfDocuments" : {
              "type" : "integer",
              "format" : "int32"
            },
            "riskAnalysisProgress" : {
              "type" : "integer",
              "format" : "int32"
            },
            "createdBy" : {
              "type" : "string"
            },
            "modifiedBy" : {
              "type" : "string"
            }
          }
        } ]
      },
      "Involvement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Customer"
        }, {
          "type" : "object",
          "properties" : {
            "parentId" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : -1,
              "example" : 86,
              "description" : "Customer Id of Parent"
            },
            "involvementTypeIds" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 1,
                "maximum" : 20
              },
              "example" : [ 4 ],
              "description" : "Involvement Type such as UBO, Director, Shareholder etc... (see lookup list provided separately)"
            },
            "percentOwnership" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 0,
              "maximum" : 100,
              "description" : "The percentage of ownership in parent Company (only required if Involvement Type is UBO or Shareholder)"
            },
            "dulyAuthorised" : {
              "type" : "boolean",
              "example" : true,
              "description" : "Whether authorisation has been given to represent the company (only required if Signatory"
            }
          }
        } ]
      },
      "HighValueTransaction" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "example" : 7,
            "description" : "Customer Id"
          },
          "transactionDate" : {
            "type" : "string",
            "format" : "date",
            "minLength" : 10,
            "maxLength" : 10,
            "example" : "2019-07-14",
            "description" : "Date of Transaction (yyyy-MM-dd) (only provide date if not an aggregate per month)"
          },
          "activityTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 219,
            "example" : 72,
            "description" : "Activity Type (see lookup list provided separately)"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 2000000000,
            "example" : 25000,
            "description" : "Amount/Value of money deposited"
          },
          "jurisdictionCountryCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Country of Transaction Funds (see lookup list provided separately)"
          },
          "paymentMethodId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 13,
            "example" : 8,
            "description" : "Method of Payment (see lookup list provided separately)"
          }
        },
        "xml" : {
          "name" : "HighValueTransaction"
        }
      },
      "ActivityTypeAmount" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "example" : 7,
            "description" : "Customer Id"
          },
          "activityTypeId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 219,
            "example" : 72,
            "description" : "Activity Types (see lookup list provided separately)"
          },
          "totalAmount" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 2000000000,
            "example" : 25000,
            "description" : "Amount/Value of money deposited"
          },
          "jurisdictionCountryCode" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "MT",
            "description" : "Country of Transaction Funds (see lookup list provided separately)"
          },
          "paymentMethodId" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 13,
            "example" : 8,
            "description" : "Method of Payment (see lookup list provided separately)"
          }
        },
        "xml" : {
          "name" : "ActivityTypeAmount"
        }
      },
      "ActivityTypeMonthAmount" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityTypeAmount"
        }, {
          "type" : "object",
          "properties" : {
            "year" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 2000,
              "example" : 2019,
              "description" : "Year of aggregate amount"
            },
            "month" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1,
              "maximum" : 12,
              "example" : 7,
              "description" : "Month of aggregate amount"
            }
          }
        } ]
      }
    },
    "requestBodies" : {
      "Customer" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Customer"
            }
          }
        },
        "description" : "Customer details object",
        "required" : true
      },
      "Activity" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Activity"
            }
          }
        },
        "description" : "Activity details object",
        "required" : true
      },
      "Involvement" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Involvement"
            }
          }
        },
        "description" : "Involvement details object",
        "required" : true
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "X-Integration-Key",
        "in" : "header"
      }
    }
  }
}