openapi: 3.0.0
servers:
  - url: 'https://order.bentoweb.com/api'
info:
  version: "1.0.0-oas3"
  title: BentoWeb Order API
  description: >-
    BentoWeb Order API using for manage order. Please ask our team for client_id and client_secret.
tags:
  - name: Order
    description: Manage order (get, print, update status)
  - name: Cart
    description: Create cart for checkout
security:
  - password: []
paths:
  /order/list/{store_id}:
    get:
      summary: Order list
      description: get order list of certain store
      tags:
        - Order
      parameters: 
        - in: path
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: action
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5]
          description: (1 Open Order, 2 Pending Verify Order, 3 Shipping Order, 4 Complete Order, 5 Cancel Order) // ถ้าไม่ส่ง action มา จะดึง All Order
        - in: query
          name: langs
          schema:
            type: string
            enum:
              - th
              - en
              - jp
        - in: query
          name: date_created_start
          schema:
            type: string
          description: filter by date_created start (greater than and equal >=) YYYY-mm-dd HH:ii:ss ex. "2018-04-03 17:13:00"
        - in: query
          name: date_created_end
          schema:
            type: string
          description: filter by date_created end (less than or equal <=) YYYY-mm-dd HH:ii:ss ex. "2018-04-03 17:13:00"
        - in: query
          name: date_modified_start
          schema:
            type: string
          description: filter by date_modified start (greater than and equal >=) YYYY-mm-dd HH:ii:ss ex. "2018-04-03 17:13:00"
        - in: query
          name: date_modified_end
          schema:
            type: string
          description: filter by date_modified end (less than or equal <=) YYYY-mm-dd HH:ii:ss ex. "2018-04-03 17:13:00"
        - in: query
          name: q
          schema:
            type: string
          description: Search order number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
          description: Limit
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Offset
        - in: query
          name: order
          schema:
            type: string
          description: Order by (ex. date_modified,desc หรือ date_created,desc) 
        - in: query
          name: is_cod
          schema:
            type: integer
            enum: [0, 1]
          description: If is_cod 1 filter only Cash on delevery [COD] Order
        - in: query
          name: order_from
          schema:
            type: integer
            default: 0
          description: Order from [1 = Web, 2 = Mobile, 3 = FB, 4 = Android, 5 = iOS, 6 = Web POS, 8 = Mobile POS, 9 = Tablet POS]
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/{order_id}:
    get:
      summary: Order info
      description: get Order info
      tags:
        - Order
      parameters: 
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/order-full/{order_id}:
    get:
      summary: Full order info with order items
      description: get full order info with order items
      tags:
        - Order
      parameters: 
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/detail/{order_id}:
    get:
      summary: Order detail html
      description: get order detail html
      tags:
        - Order
      parameters: 
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/print-invoice/{order_id}:
    get:
      summary: Get invoice HTML for printing
      description: Get invoice HTML for printing
      tags:
        - Order
      parameters: 
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: langs
          schema:
            type: string
          required: false
          description: th|en|jp|cn
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/print-receipt/{order_id}:
    get:
      summary: Get receipt HTML for printing
      description: Get receipt HTML for printing
      tags:
        - Order
      parameters: 
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: langs
          schema:
            type: string
          required: false
          description: th|en|jp|cn
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/sell-report/{store_id}:
    get:
      summary: Get sell report
      description: Get sell report group by product variant ID, order from, pos customer id
      tags:
        - order
      parameters: 
        - in: path
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/save-payment:
    post:
      summary: update order status to paid
      description: update order status to paid
      tags:
        - Order
      parameters: 
        - in: query
          name: order_id
          schema:
            type: array
            items:
              type: integer
              format: int64
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: payment_method
          schema:
            type: string
          description: payment method unique ID (if change)
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
  /order/save-shipping:
    post:
      summary: update order status to delivered
      description: update order status to delivered
      tags:
        - Order
      parameters: 
        - in: query
          name: order_id
          schema:
            type: array
            items:
              type: integer
              format: int64
          required: true
          description: Order ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: shipping_datetime
          schema:
            type: string
            format: date-time
          required: true
          description: date time of delivery (YYYY-MM-DD HH:ii:ss)
        - in: query
          name: shipping_ems
          schema:
            type: string
          required: false
          description: Tracking
        - in: query
          name: shipping_method
          schema:
            type: string
          required: false
          description: Shipping method unique ID (ใช้เมื่อต้องการเปลี่ยนแปลงการจัดส่ง ตัวเลือกการจัดส่งสามารถดึงข้อมูลได้จาก "https://app.swaggerhub.com/apis/SemanticTouch/BentowebProduct/1.0.0-oas3" จาก enpoint "/store/shipping/store_id")
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  # Cart API
  /cart-api:
    post:
      summary: Create cart
      description: Create a new cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/{cart_id}:
    get:
      summary: Get cart info
      description: Get cart info
      tags:
        - Cart
      parameters: 
        - in: path
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/discount:
    post:
      summary: Add discount
      description: Add discount by discount code
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: discount_code
          schema:
            type: string
          required: true
          description: Discount code
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete discount
      description: Delete discount in cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: discount_code
          schema:
            type: string
          required: true
          description: Discount code
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/custom-discount:
    post:
      summary: Add custom discount
      description: Add custom discount
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: custom_discount_type
          schema:
            type: string
            enum: [p, f]
          required: true
          description: ระบุ p = percent, f = ค่าเงิน
        - in: query
          name: custom_discount_calculate
          schema:
            type: integer
          required: true
          description: จำนวนที่ต้องการเป็นส่วนลด
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete custom discount
      description: Delete custom discount in cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
          
          
  /cart-api/customer-address:
    post:
      summary: Add custom address to cart
      description: Add custom address to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: customer_address_id
          schema:
            type: integer
          required: true
          description: ID customer address
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete custom address
      description: Delete custom address
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
          
  /cart-api/guest-address:
    post:
      summary: Add guest address to cart
      description: Add guest address to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: guest_address_id
          schema:
            type: integer
          required: true
          description: ID guest address
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete guest address
      description: Delete guest address
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
  
  /cart-api/special-req:
    post:
      summary: Add special request to cart
      description: Add special request to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: text
          schema:
            type: string
          required: true
          description: Specials request text
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete special request
      description: Delete special request
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
          
          
  /cart-api/payment:
    post:
      summary: Add payment method to cart
      description: Add payment method to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: payment_key
          schema:
            type: string
          required: true
          description: Payment ID
        - in: query
          name: shipping_key
          schema:
            type: string
          required: false
          description: If has select shipping please send shipping key to this endpoint too, For check chaining shipping and payment method
        - in: query
          name: is_anonymous
          schema:
            type: integer
            enum: [0, 1]
          required: false
          description: Is anonymous checkout
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete payment method
      description: Delete payment method
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
          
          
  /cart-api/shipping:
    post:
      summary: Add shipping method to cart
      description: Add shipping method to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: store_id
          schema:
            type: integer
          required: true
          description: Store ID
        - in: query
          name: shipping_key
          schema:
            type: string
          required: true
          description: Shipping ID
        - in: query
          name: customer_address_id
          schema:
            type: integer
          required: false
          description: Customer Address ID [โปรดส่งค่าฟิลด์ใดฟิล์ดหนึ่งมา customer_address_id หรือ guest_address_id]
        - in: query
          name: guest_address_id
          schema:
            type: integer
          required: false
          description: Guest Address ID [โปรดส่งค่าฟิลด์ใดฟิล์ดหนึ่งมา customer_address_id หรือ guest_address_id]
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete shipping method
      description: Delete shipping method
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error  
          
  /cart-api/product:
    post:
      summary: Add product item to cart
      description: Add product item to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: product_variant_id
          schema:
            type: integer
          required: true
          description: Product variant ID
        - in: query
          name: qty
          schema:
            type: integer
          required: true
          description: Quantity
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete all product item to cart
      description: Delete all product item to cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/product/{item_code}:
    put:
      summary: Update product qty by item code
      description: Update product qty by item code
      tags:
        - Cart
      parameters: 
        - in: path
          name: item_code
          schema:
            type: string
          required: true
          description: Item Code
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        - in: query
          name: qty
          schema:
            type: integer
          required: true
          description: Qty
        
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
    delete:
      summary: Delete product item by item code
      description: Delete product item by item code
      tags:
        - Cart
      parameters: 
        - in: path
          name: item_code
          schema:
            type: string
          required: true
          description: Product variant ID
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
        
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/calculate:
    post:
      summary: Calculate cart
      description: Calculate cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/checkout:
    post:
      summary: Checkout cart
      description: Checkout cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
  /cart-api/clear-item:
    post:
      summary: Clear item
      description: Clear all item in cart
      tags:
        - Cart
      parameters: 
        - in: query
          name: cart_id
          schema:
            type: string
          required: true
          description: Cart ID
      responses:
        '200':
          description: status 1 = OK, status 0 = Error
          
components:
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://login.bentoweb.com/oauth/token'
          scopes: {}
