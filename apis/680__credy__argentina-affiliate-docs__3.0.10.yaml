openapi: 3.0.0
info:
  title: Argentina Affiliate Documentation
  description: >
    # Introduction 


    Credy is a company that specializes on the quality lead generation. \

    This document further describes fdfhow to integrate API to send leads to
    Credy.\

    If you have any questions, please do not hesitate to contact the IT manager
    at [it@credy.eu](mailto:it@credy.eu).


    ## General information


    Production URL: [https://api.credy.eu/v3/](https://api.credy.eu/v3/)


    Staging URL:
    [http://api.staging.credy.eu/v3/](http://api.staging.credy.eu/v3/)


    API supports post fields, XML and JSON.


    To get response error messages in Spanish, "Accept-Language" header’s value
    must be set to according ISO code. Ex: `es` or `es-AR`.

    ## Authorization

    Authorization is performed with OAuth 2.0 Client Credentials Grant.
    
    When requesting token, the client key and secret key must be sent in request body.

    Client key and secret key will be assigned to you by Credy.
    
    The requests to api must be authenticated with [bearer token](https://tools.ietf.org/html/rfc6749#section-7.1).

    ## Lead registration flow


    1. Request is sent to /v3/customers


    2. If request is successful, customer uuid must be stored


    3. Request is sent to /v3/leads with previously stored customer uuid in
    query parameter "customer" *ex.
    /v3/leads?customer=a3ff7c20-e9e8-43a0-bfb7-71a5cf43b8d3* 
    
    4. When the lead is accepted by api (under_investigation is received from POST lead), please redirect the customer to https://www.credy.es/form-loading/?uuid={UUID} (where {UUID} is replaced by the uuid that you receive from POST lead)
    
  version: "3.0.10"
servers:
 - url: 'http://api.staging.credy.eu/v3/'
   description: Staging server
 - url: 'https://api.credy.eu/v3/'
   description: Production server
paths:
  /customers:
    post:
      description: Register customer
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            To get response error messages in Spanish, header’s value must be set
            to according ISO code. Ex: `es` or `es-AR`.
          required: false
          style: simple
          explode: false
          schema:
            format: string
          example: es-AR
      requestBody:
        description: Customer info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer is registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
      security:
        - oAuth: []
  /leads:
    post:
      description: Register lead
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            To get response error messages in Spanish, header’s value must be set
            to according ISO code. Ex: `es` or `es-AR`.
          required: false
          style: simple
          explode: false
          schema:
            format: string
          example: id-ID
        - name: customer
          in: query
          description: Customer uuid from `/customers` response
          required: true
          style: form
          explode: true
          schema:
            format: string
          example: df0f997b-72ae-480a-88a8-4bd73ee89dae
      requestBody:
        description: Lead info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
          application/xml:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LeadResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
      security:
        - oAuth:
            - allow_custom_pingtree
  /country/price-list:
    get:
      description: Get lenders prices
      responses:
        '200':
          description: Lenders prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryPricesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CountryPricesResponse'
        '401':
          description: Lenders prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryPricesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CountryPricesResponse'
      security:
        - oAuth:
            - get_country_price_list
components:
  schemas:
    PrimaryAddress:
      required:
        - city
        - house_number
        - postal_code
        - street
      type: object
      properties:
        postal_code:
          type: string
          description: 'Format: /^[A-Z]{1}[0-9]{4}$/'
          example: A1234
        city:
          type: string
          example: La Camella
        street:
          type: string
          example: Ruela Armenta
        house_number:
          type: string
          example: '1'
        flat_number:
          type: string
          description: ''
          example: '4'
    EmployerAddress:
      required:
        - city
      type: object
      properties:
        postal_code:
          type: string
          description: 'Format: /^[A-Z]{1}[0-9]{4}$/'
          example: A1234
        city:
          type: string
          example: La Camella
        street:
          type: string
          example: Ruela Armenta
        house_number:
          type: string
          example: '1'
        flat_number:
          type: string
          description: ''
          example: '4'
    Agreements:
      required:
        - data_proccessing_policy
        - terms_of_service
      type: object
      properties:
        data_proccessing_policy:
          type: boolean
        terms_of_service:
          type: boolean
    Customer:
      type: object
      required:
        - first_name
        - last_name
        - gender
        - password
        - birth_date
        - personal_id
        - bank_account
        - marital_status
        - nationality
        - dependant_count
        - email
        - phone
        - phone_plan
        - address
        - lives_at_registered_address
        - housing_type
        - neto_income
        - monthly_expenses
        - education
        - occupation
        - agreements
        - signature
        - has_loan
        - credit_score
      properties:
        first_name:
          type: string
          example: 'Cristian'
        last_name:
          type: string
          example: Posada
        nationality:
          type: string
          example: AR
          description: 'max length: 2'
        gender:
          type: string
          example: 'MALE'
          enum:
            - MALE
            - FEMALE
        birth_date:
          type: string
          example: '1990-01-01'
          description: 'Format: Y-m-d'
        password:
          type: string
          example: randomPassword
        email:
          type: string
          example: jlorente@mailinator.com
        personal_id:
          type: string
          example: '12345678'
        marital_status:
          type: string
          enum:
            - SINGLE
            - MARRIED
            - DIVORCED
            - WITH_PARTNER
            - WIDOW
          example: 'MARRIED'
        bank_account:
          type: string
          example: '3308921685962090928453'
          description: 'Format: /[0-9]{22}/'
        education:
          type: string
          enum:
            - NO_EDUCATION
            - BASIC_SCHOOL
            - HIGH_SCHOOL
            - BACHELOR
            - MASTER
            - PHD
            - INDUSTRIAL_SCHOOL
          example: 'HIGH_SCHOOL'
        notes:
          type: string
          enum:
            - PURCHASE_OF_FOOD
            - BUYING_ELECTRONICS
            - CREATE_CREDIT_HISTORY
            - SCHOOL_EXPENSES
            - UNFORESEEN_EXPENSE
            - MEDICAL_EXPENSES
            - MAINTENANCE_OR_REPAIR_OF_HOUSE
            - PAY_ANOTHER_LOAN
            - PAYMENT_OF_SERVICES
            - FOR_MY_BUSINESS
            - TRAVEL
            - OTHER
          example: 'TRAVEL'
        phone:
          type: string
          example: '8101234567'
        phone_plan:
          type: string
          enum:
            - PREPAID
            - CONTRACT
        phone2:
          type: string
          example: '8101234567'
        address:
          $ref: '#/components/schemas/PrimaryAddress'
        lives_at_registered_address:
          type: boolean
        secondary_address:
          $ref: '#/components/schemas/PrimaryAddress'
          description: required when `lives_at_registered_address` is false
        housing_type:
          type: string
          enum:
            - RENTED_ROOM
            - RENTED_APARTMENT_OR_HOUSE
            - OWN_HOUSE_OR_APARTMENT
            - WITH_PARENTS
          example: 'RENTED_ROOM'
        occupation:
          type: string
          enum:
            - EMPLOYED_INDEFINITE_PERIOD
            - STUDENT
            - MATERNITY_LEAVE
            - PENSIONER1
            - OWN_BUSINESS
            - FREELANCER
            - UNEMPLOYED
          example: 'WRITTEN_CONTRACT_OR_ORDER'
        neto_income:
          type: integer
          format: int32
          example: 1500
        monthly_expenses:
          type: integer
          format: int32
          example: 900 
        employer_address:
          $ref: '#/components/schemas/EmployerAddress'
          description: |
            required when `occupation` is in:
            - EMPLOYED_INDEFINITE_PERIOD
            - EMPLOYED_SPECIFIED_PERIOD
            - WRITTEN_CONTRACT_OR_ORDER
        remuneration_deadline:
          type: string
          example: yyyy-mm-dd
          description: |
            required when `occupation` is not in  :
            - UNEMPLOYED
        employed_since:
          type: string
          example: yyyy-mm-dd
          description: |
            required when `occupation` is in:
            - EMPLOYED_INDEFINITE_PERIOD
            - EMPLOYED_SPECIFIED_PERIOD
            - WRITTEN_CONTRACT_OR_ORDER
        employer:
          type: string
          description: |
            required when `occupation` is in:
            - EMPLOYED_INDEFINITE_PERIOD
            - EMPLOYED_SPECIFIED_PERIOD
            - WRITTEN_CONTRACT_OR_ORDER
        current_job_position:
          type: string
          description: |
            required when `occupation` is in:
            - EMPLOYED_INDEFINITE_PERIOD
            - EMPLOYED_SPECIFIED_PERIOD
            - WRITTEN_CONTRACT_OR_ORDER
        employer_phone:
          type: string
          example: 8101234567
          description: |
            required when `occupation` is in:
            - EMPLOYED_INDEFINITE_PERIOD
            - EMPLOYED_SPECIFIED_PERIOD
            - WRITTEN_CONTRACT_OR_ORDER
        employment_place:
          type: string
          enum:
            - OFFICE
            - FACTORY
            - HOME
            - STREET_STALL
            - DOOR_TO_DOOR
            - ON_THE_STREET
            - FIXED_PREMISES
        credit_score:
          type: string
          enum:
            - EXCELLENT_MORE_THAN_750
            - GOOD_650_TO_749
            - STABLE_520_TO_649
            - LOW_300_TO_619
            - DONT_KNOW
            - NO_CREDIT_HISTORY
          example: GOOD_650_TO_749
        salary_to_personal_account:
          type: boolean
          example: true
          description: |
            required when `occupation` is not in  :
            - UNEMPLOYED
        tax_id_number:
          type: string
          example: MACJ170517PRN
        business_registration_date:
          type: string
          example: yyyy-mm-dd
          description: |
            required when `occupation` is in:
            - ECONOMIC_ACTIVITY
        university_name:
          type: string
          description: |
            required when `occupation` is in:
            - OCCUPATION_STUDENT
        university_city:
          type: string
          description: |
            required when `occupation` is in:
            - OCCUPATION_STUDENT
        credit_card_verification:
          type: string
          description: 'Format: /^\d{4}$/'
        has_beneficiary:
          type: boolean
          example: false
        has_loan:
          type: boolean
          example: false
        carBrand:
          type: string
          example: Audi
          description: |
            required when `product` is:
            - CAR
        carModel:
          type: string
          example: q8
          description: |
            required when `product` is:
            - CAR
        carYear:
          type: string
          example: 2010
          description: |
            required when `product` is:
            - CAR
        bad_credit_history:
          type: boolean
          example: false
        agreements:
          $ref: '#/components/schemas/Agreements'
      xml:
        name: request
    Lead:
      required:
        - ip_address
        - loan_period
        - loan_purpose
        - loan_sum
        - signature
      type: object
      properties:
        loan_sum:
          type: integer
          description: Amount of credit requested by customer
          format: int32
          example: 2000
        loan_period:
          type: integer
          description: Term for credit requested
          format: int32
          example: 30
        ip_address:
          type: string
          description: IP address of customer
          example: 192.168.0.255
        loan_purpose:
          type: string
          example: Wedding
        pingtree:
          type: array
          description: Custom lenders order. Requires `allow_custom_pingtree` oAuth scope
          items:
            type: string
            example: b3345507-8298-4bd1-843a-6a968e593f00
      xml:
        name: request
    ValidationErrors:
      type: array
      xml:
        name: response
      items:
        $ref: '#/components/schemas/ValidationErrors_inner'
    CustomerResponse:
      xml:
        name: response
      allOf:
        - type: object
          properties:
            uuid:
              type: string
              example: b3345507-8298-4bd1-843a-6a968e593f00
        - $ref: '#/components/schemas/Customer'
    LeadResponse:
      type: object
      properties:
        uuid:
          type: string
          example: b3345507-8298-4bd1-843a-6a968e593f00
        loan_sum:
          type: string
          example: '250.00'
        loan_period:
          type: string
          example: '30'
        status:
          type: string
          example: UNDER_INVESTIGATION
        date_created:
          type: string
          example: '2017-01-04 08:33:09'
        product:
          type: string
          example: PAYDAY
      xml:
        name: response
    CountryPricesResponse:
      type: array
      xml:
        name: response
      items:
        $ref: '#/components/schemas/CountryPricesResponse_inner'
    UnauthorizedResponse:
      type: object
      properties:
        name:
          type: string
          example: Unauthorized
        message:
          type: string
          example: Your request was made with invalid credentials.
        code:
          type: integer
          format: int32
          example: 0
        status:
          type: integer
          format: int32
          example: 401
      xml:
        name: response
    ValidationErrors_inner:
      type: object
      properties:
        field:
          type: string
          example: email
        message:
          type: string
          example: Email address is invalid
    CountryPricesResponse_inner:
      type: object
      properties:
        name:
          type: string
          example: Lender 1
        uiid:
          type: string
          example: b3345507-8298-4bd1-843a-6a968e593f00
        prices:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
              properties:
                price:
                  type: string
                  example: '12.40'
                currency:
                  type: string
                  example: EUR
            example:
              accepted:
                price: '12.40'
                currency: EUR
  responses:
    CustomerSuccess:
      description: Customer is registered
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerResponse'
        application/xml:
          schema:
            $ref: '#/components/schemas/CustomerResponse'
    LeadSuccess:
      description: Lead is under investigation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LeadResponse'
        application/xml:
          schema:
            $ref: '#/components/schemas/LeadResponse'
    CountryPricesResponse:
      description: Lenders prices
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountryPricesResponse'
        application/xml:
          schema:
            $ref: '#/components/schemas/CountryPricesResponse'
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrors'
        application/xml:
          schema:
            $ref: '#/components/schemas/ValidationErrors'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
        application/xml:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
  parameters:
    AcceptLanguageHeader:
      name: Accept-Language
      in: header
      description: >-
        To get response error messages in Spanish, header’s value must be set to
        according ISO code. Ex: `es` or `es-AR`.
      required: false
      style: simple
      explode: false
      schema:
        format: string
      example: id-ID
    CustomerUuid:
      name: customer
      in: query
      description: Customer uuid from `/customers` response
      required: true
      style: form
      explode: true
      schema:
        format: string
      example: df0f997b-72ae-480a-88a8-4bd73ee89dae
#  securitySchemes:
#    oAuth:
#      type: oauth2
#      description: This API uses OAuth 2 with the clientCredentials grant flow.
#      flows:
#        clientCredentials:
#          tokenUrl: token
#          scopes:
#            get_country_price_list: Get country price list
#            allow_custom_pingtree: Allow custom lenders order
#            get_provider_lenders_list: Get lender list
