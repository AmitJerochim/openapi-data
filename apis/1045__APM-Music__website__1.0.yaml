openapi: 3.0.0
info:
  version: "1.0"
  title: ''
  description: ''
paths:
  /addressbook:
    # TODO Find out how email addresses are added to the address book. It does not look like it's done through the front end / search client.
    get:
      description: Returns a list of matching email addresses from the address book
      parameters:
        - name: prefix
          in: query
          required: false
          description: Prefix to use when searching the address book search
          schema:
            type: string
        - name: limit
          in: query
          required: true
          description: Limits the number of email addresses to be returned
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned the list of matching email addresses
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
        '403':
          description: Access denied for users that are not logged in
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                example:
                  - Access denied for user anonymous
  /projects:
    get:
      description: Returns a list of projects.
      parameters:
        - name: offset
          in: query
          required: true
          description: Specifies the page number of the project to be returned
          schema:
            type: integer
        - name: limit
          in: query
          required: true
          description: Limits the number of projects to be returned
          schema:
            type: integer
        - name: sort
          in: query
          required: true
          description: How to sort the list of projects
          schema:
            type: string
            # TODO is archived used?
            enum:
              - alpha
              - created
              - modified
              - archived
        - name: sort_direction
          in: query
          required: true
          description: How to sort the list of projects
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: box
          in: query
          required: true
          description: What category of projects to be retuned
          schema:
            type: string
            enum:
              - mine
              - inbox
              - sent
              - archived
        - name: parent
          in: query
          required: false
          description: Returns child projects of a parent project
          schema:
            type: integer
        - name: title
          in: query
          required: false
          description: Searches for projects where the title contains the value
          schema:
            type: string
            enum:
              - mine
              - inbox
              - sent
              - archived
      responses:
        '200':
          description: Successfully returned the project list
          content:
            '*/*':
              schema:
                # TODO - Remove response's total_entries item
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        total_entries:
                          type: number
                      example:
                        total_entries: 2
                    - type: array
                      items:
                        $ref: '#/components/schemas/ProjectHeader'
                minItems: 2
                maxItems: 2
    post:
      description: Creates a new project
      responses:
        '200':
          description: Successfully returned the project details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                client:
                  type: string
                comments:
                  type: string
              # TODO optimize this member as an array of aktracks
                tracks:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
              # TODO verify this member
                albums:
                  type: array
                  items:
                    type: string
                parent:
                  type: integer
  '/projects/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      description: Returns project details
      parameters:
        - name: token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully returned the project details
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDetail'
        '404':
          description: Project not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                example:
                  - Project not found.
    delete:
      description: Deletes a project
      responses:
        '200':
          description: Successfully deleted the project
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: boolean
    # TODO find out why PATCH is called twice when editing the project title
    patch:
      description: Updates a project
      responses:
        '200':
          description: Successfully updated the project
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDetail'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comments:
                  type: string
                client:
                  type: string
                title:
                  type: string
                archived:
                  type: boolean
                parent:
                  type: integer
  /recent-searches:
    get:
      description: Returns the list of recent searches
      responses:
        '200':
          description: Successfully retun the list of recent searches
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    query_terms:
                      type: string
                    query_url:
                      type: string
                    created:
                      type: integer
                    is_saved:
                      type: integer
        # TODO verify type - should be an integer
                    id:
                      type: string
                example:
                  - query_terms: >-
                      [{"type":"tag","field":"genre","value":"Indie","operation":"must"}]
                    query_url: >-
                      search/%5B%7B%22field%22%3A%22genre%22%2C%22value%22%3A%22Indie%22%2C%22label%22%3A%22Indie%20Rock%22%2C%22operation%22%3A%22must%22%2C%22quick%22%3Atrue%7D%5D
                    created: 1580402305
                    is_saved: 0
                    id: '3492250'
                  - query_terms: >-
                      [{"type":"text","field":["tags","track_title","track_description","album_title","album_description","lyrics","library","composer"],"value":"Afrika","operation":"must"}]
                    query_url: >-
                      search/%5B%7B%22field%22%3A%5B%22tags%22%2C%22track_title%22%2C%22track_description%22%2C%22album_title%22%2C%22album_description%22%2C%22lyrics%22%2C%22library%22%2C%22composer%22%5D%2C%22type%22%3A%22text%22%2C%22value%22%3A%22Afrika%22%2C%22is_regular%22%3Atrue%2C%22is_query%22%3Atrue%2C%22operation%22%3A%22must%22%7D%5D
                    created: 1580340252
                    is_saved: 1
                    id: '4918165'
    post:
      description: Add a search event and returns the list of recent searches
      responses:
        '200':
          description: >-
            Successfully added an audition event and returned the list of recent
            auditions
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    query_terms:
                      type: string
                    query_url:
                      type: string
                    created:
                      type: integer
                    is_saved:
                      type: integer
                    id:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                query_terms:
                  type: object
                  properties:
                    terms:
                      type: string
                query_url:
                  type: object
                  properties:
                    url:
                      type: string
                is_saved:
                  type: integer
  /most-recent/audition:
    get:
      description: Returns the list of the 200 most recent auditions
      responses:
        '200':
          description: Successfully returned the list of recent auditions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecentAuditions'
    post:
      description: Add an audition event and returns the list of recent auditions
      responses:
        '200':
          description: >-
            Successfully added an audition event and returned the list of recent
            auditions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecentAuditions'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                track_id:
                  type: string
              example:
                track_id: CEZ_BIB_0116_00801
  /most-recent/download:
    get:
      description: Returns the list of the 100 most recent downloads
      responses:
        '200':
          description: Successfully returned the list of recent downloads
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecentDownloads'
    post:
      description: Log a download
      responses:
        '200':
          description: Successfully logged a download
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecentDownloads'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                track_id:
                  type: string
  /saved-searches:
    get:
      description: Returns the list of saved searches
      responses:
        '200':
          description: Returns the list of saved searches
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    query_terms:
                      type: string
                    query_url:
                      type: string
                    is_saved:
                      type: integer
                    title:
                      type: string
                example:
                  - query_terms: >-
                      [{"type":"text","field":["tags","track_title","track_description","album_title","album_description","lyrics","library","composer"],"value":"Afrika","operation":"must"}]
                    query_url: >-
                      search/%5B%7B%22field%22%3A%5B%22tags%22%2C%22track_title%22%2C%22track_description%22%2C%22album_title%22%2C%22album_description%22%2C%22lyrics%22%2C%22library%22%2C%22composer%22%5D%2C%22type%22%3A%22text%22%2C%22value%22%3A%22Afrika%22%2C%22is_regular%22%3Atrue%2C%22is_query%22%3Atrue%2C%22operation%22%3A%22must%22%7D%5D
                    created: 1580340252
                    is_saved: 1
                    title: Test 2
                    id: '4918165'
    post:
      description: Add a saved search and returns the list of saved searches
      responses:
        '200':
          description: >-
            Successfully added a saved search and returned the list of saved
            searches
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    query_terms:
                      type: string
                    query_url:
                      type: string
                    is_saved:
                      type: integer
                    title:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                query_terms:
                  type: object
                  properties:
                    terms:
                      type: string
                query_url:
                  type: object
                  properties:
                    url:
                      type: string
                is_saved:
                  type: integer
                title:
                  type: string
  '/saved-searches/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    delete:
      description: Deletes a saved search
      responses:
        '200':
          description: Successfully deleted a saved search
          content:
            '*/*':
              schema:
                # TODO why is this an array? always returns [true]. Should be {true}.
                type: array
                items:
                  type: boolean
    patch:
      description: Updates a saved search
      responses:
        '200':
          description: Successfully updated a saved search
          content:
            '*/*':
              schema:
                # TODO why is this an array? always returns []. Should be nothing.
                type: array
                items:
                  type: string
                example: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
  /users/current:
    post:
      description: Returns the details of the current user
      responses:
        '200':
          description: Successfully returned the details of the current user
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: User not logged in
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                example:
                  - There is no active user.
      requestBody:
        content:
          application/json:
      # send {} for body
            schema:
              type: object
              example: {}
  /users/forgot-password:
    post:
      description: Send a forgot password email
      responses:
        '200':
          description: Successfully sent the fogot password email
          content:
            '*/*':
              schema:
                # TODO why is this an array? always returns [true]. Should be {true}.
                type: array
                items:
                  type: boolean
                example:
                  - true
        '404':
          description: Invalid user name or an e-mail address
          content:
            '*/*':
              schema:
                # TODO why is this an array? always returns [true]. Should be {true}.
                type: array
                items:
                  type: string
                example:
                  - >-
                    <em class="placeholder">chris@blablabla.com</em> is not
                    recognized as a user name or an e-mail address.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: chris@snipsys.com
  /users/login:
    post:
      description: Logs a user in
      responses:
        '200':
          description: Successfully logged the user in
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Wrong username or password
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                example:
                  - Wrong username or password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                marketo:
                  type: string
              example:
                username: cvandermerwe@apmmusic.com
                password: mypassword
                marketo: 'id:959-PXD-755&token:_mch-apmmusic.com-1580391181465-30789'
  /users/logout:
    post:
      description: Logs a user out
      responses:
        '200':
          description: Successfully logged the user out
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: object
                  properties:
                    search:
                      type: object
                      properties:
                        canAdd:
                          type: boolean
                        canRemove:
                          type: boolean
                        canSort:
                          type: boolean
                        canChangeRestrictions:
                          type: boolean
                        canCreateMetadataReport:
                          type: boolean
                    playlists:
                      type: object
                      properties:
                        canAdd:
                          type: boolean
                        canRemove:
                          type: boolean
                        canEdit:
                          type: boolean
                        canSort:
                          type: boolean
                        canView:
                          type: boolean
                    projects:
                      type: object
                      properties:
                        canAdd:
                          type: boolean
                        canRemove:
                          type: boolean
                        canSort:
                          type: boolean
                    canChangeRestrictions:
                      type: boolean
                    canChangeFacebook:
                      type: boolean
                    canEditPlaylists:
                      type: boolean
                    canCreateMetadataReport:
                      type: boolean
                restrictions:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      group:
                        type: string
                      selected:
                        type: boolean
                id:
                  type: integer
                email:
                  type: string
                name:
                  type: string
                downloadPrefs:
                  type: array
                  items:
                    type: string
                downloadAuth:
                  type: boolean
                marketo:
                  type: string
                needsNeedledrop:
                  type: boolean
                sid:
                  type: string
                ssid:
                  type: string
                moralityClause:
                  type: boolean
                editPlaylists:
                  type: boolean
                editRestrictions:
                  type: boolean
                editFacebook:
                  type: boolean
                siteID:
                  type: string
                canCreateMetadataReport:
                  type: boolean
                provisional:
                  type: boolean
                downloadcount:
                  type: integer
                searchRestrictions:
                  type: string
                defaultSearchRestriction:
                  type: integer
                cuesheetSsoToken:
                  type: string
  /search-restrictions:
    get:
      description: Returns the list of search restrictions
      responses:
        '200':
          description: Successfully returned the list of search restrictions
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    group:
                      type: string
                example:
                  - id: 1
                    title: Morality
                    group: ''
                  - id: 7
                    title: Adobe
                    group: sid
                  - id: 5
                    title: APM Canada
                    group: sid
                  - id: 3
                    title: APM US
                    group: sid
                  - id: 8
                    title: Facebook
                    group: sid
                  - id: 4
                    title: Freeform
                    group: sid
                  - id: 6
                    title: Global
                    group: sid
  /search-restrictions/token:
    post:
      description: Returns the JWT for a specific search restriction
      responses:
        '200':
          description: Successfully returned the search restriction JWT
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                example:
                  - >-
                    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.W3sidHlwZSI6ImNvbXBvc2l0ZSIsImZpZWxkIjoidXNlcmluZm8iLCJ2YWx1ZSI6W3sidHlwZSI6InRleHQiLCJ2YWx1ZSI6IjAiLCJmaWVsZCI6InVzZXJpZCIsIm9wZXJhdGlvbiI6ImluY2x1ZGUifV0sIm9wZXJhdGlvbiI6ImluY2x1ZGUifSx7InR5cGUiOiJ0YWciLCJ2YWx1ZSI6IlVTIiwiZmllbGQiOlsicmVzdHJpY3RlZF90byJdLCJvcGVyYXRpb24iOiJtdXN0In1d.N4wYVgW8VnoKSZApYYjGqS2T3Tud_f4oHDCcKrBqPqg
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                searchRestrictions:
                  type: array
                  items:
                    type: integer
              example: '{"searchRestrictions":[7]}'
servers:
  - url: 'https://www.apmmusic.com/api/1.0'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        downloadPrefs:
          type: array
          items:
            type: string
        downloadAuth:
          type: boolean
        marketo:
          type: string
        needsNeedledrop:
          type: boolean
        sid:
          type: string
        ssid:
          type: string
        moralityClause:
          type: boolean
        editPlaylists:
          type: boolean
        editRestrictions:
          type: boolean
        editFacebook:
          type: boolean
        siteID:
          type: string
        canCreateMetadataReport:
          type: boolean
        provisional:
          type: boolean
        downloadcount:
          type: integer
        searchRestrictions:
          type: string
        defaultSearchRestriction:
          type: integer
        cuesheetSsoToken:
          type: string
      example:
        id: 20
        email: cvandermerwe@apmmusic.com
        name: Chris van der Merwe
        downloadPrefs:
          - Mp3 320KB
        downloadAuth: true
        marketo: 'id:959-PXD-755&token:_mch-apmmusic.com-1513720466555-91283'
        needsNeedledrop: false
        sid: c5InsXksq1ONX_irj86nb7zA-EL4Pj-dkxpCUzegpDw
        ssid: c5InsXksq1ONX_irj86nb7zA-EL4Pj-dkxpCUzegpDw
        moralityClause: false
        editPlaylists: true
        editRestrictions: true
        editFacebook: false
        siteID: '1'
        canCreateMetadataReport: true
        provisional: false
        downloadcount: 0
        searchRestrictions: >-
          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.W3sidHlwZSI6ImNvbXBvc2l0ZSIsImZpZWxkIjoidXNlcmluZm8iLCJ2YWx1ZSI6W3sidHlwZSI6InRleHQiLCJ2YWx1ZSI6IjIwIiwiZmllbGQiOiJ1c2VyaWQiLCJvcGVyYXRpb24iOiJpbmNsdWRlIn1dLCJvcGVyYXRpb24iOiJpbmNsdWRlIn0seyJ0eXBlIjoidGFnIiwidmFsdWUiOiJVUyIsImZpZWxkIjpbInJlc3RyaWN0ZWRfdG8iXSwib3BlcmF0aW9uIjoibXVzdCJ9XQ.BR4PkyUiJx9VTj3aAcH3hVe1WNn8WPP9xoM10q8USy8
        defaultSearchRestriction: 3
        cuesheetSsoToken: >-
          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiIyMCIsIm5hbWUiOiJDaHJpcyB2YW4gZGVyIE1lcndlIiwibWFpbCI6ImN2YW5kZXJtZXJ3ZUBhcG1tdXNpYy5jb20ifQ.0Ow4mpozm21yDrYhYv1xVBdn4pUFLKuJYs1ryVb-UhY
    # Many of these fields should be removed
    ProjectHeader:
      type: object
      properties:
        id:
          type: integer
          description: Project id
        title:
          type: string
          description: Project title
        comments:
          type: string
          description: Project comments
        client:
          type: string
          description: Project client
        creator:
          type: object
          description: Details of whom created the project
          properties:
            id:
              # TODO Is this needed? Change to string for Cognito.
              type: integer
              description: Drupal user id
        created:
          type: integer
          description: Unix timestap of when the project was created
        modified:
          type: integer
          description: Unix timestap of when the project was last modified
        parent:
          type: integer
          description: Parent project id
        child_counts:
          type: integer
          description: Number of child projects
        isShared:
          type: boolean
          description: Flag to indicate if the project is shared
        archived:
          type: boolean
          description: Flag to indicate if the project is archived
      example:
        id: 443173
        title: APM Radio
        comments: ''
        client: ''
        creator:
          id: 20
        created: 1476478421
        modified: 1580411485
        parent: null
        child_counts: 2
        isShared: false
        archived: false
    ProjectDetail:
      type: object
      properties:
        tracks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Track id in aktrack format
              comments:
                #TODO null is returned if there are no commnets but it would be better to not include the field
                type: string
                description: Comments
        albums:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Album id in akcd format
              comments:
                type: string
                description: Description
              # TODO how is this set??
              isExplicit:
                type: boolean
                description: Explicit flag
        id:
          type: integer
          description: Project id
        title:
          type: string
          description: Project title
        comments:
          type: string
          description: Project comments
        client:
          type: string
          description: Project client
        creator:
          type: object
          description: Details of whom created the project
          properties:
            id:
              # TODO Is this needed? Change to string for Cognito.
              type: integer
              description: Drupal user id
        created:
          type: integer
          description: Unix timestap of when the project was created
        modified:
          type: integer
          description: Unix timestap of when the project was last modified
        parent:
          type: integer
          description: Parent project id
        child_counts:
          type: integer
          description: Number of child projects
        isShared:
          type: boolean
          description: Flag to indicate if the project is shared
        archived:
          type: boolean
          description: Flag to indicate if the project is archived
      example:
        tracks:
          - id: JGM_JGM_0039_00901
            comments: What a great track!
          - id: JGM_JGM_0039_00301
            comments: null
          - id: JGM_JGM_0039_01101
            comments: null
        albums:
          - id: JMP-0026
            comments: null
            isExplicit: false
        id: 443173
        title: APM Radio
        comments: ''
        client: ''
        creator:
          id: 20
        created: 1476478421
        modified: 1580411485
        parent: null
        child_counts: 2
        isShared: false
        archived: false
    RecentAuditions:
      type: object
      properties:
        tracks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Track ID in aktrack format
              created:
                type: integer
                description: Unix timestamp of the audition
        creator:
          type: object
          properties:
            id:
              # TODO review type
              type: string
              description: Drupal user id
      example:
        tracks:
          - id: KPM_JM_0224_00201
            created: 1580309361
          - id: LQC_INSD_0152_00301
            created: 1579293108
          - id: LQC_INSD_0152_00101
            created: 1579293001
        creator:
          id: '20'
    RecentDownloads:
      type: object
      properties:
        tracks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Track ID in aktrack format
              created:
                type: integer
                description: Unix timestamp of the download
        creator:
          type: object
          properties:
            id:
              # TODO review type
              type: string
              description: Drupal user id
      example:
        tracks:
          - id: KPM_JM_0224_00201
            created: 1580309361
          - id: LQC_INSD_0152_00301
            created: 1579293108
          - id: LQC_INSD_0152_00101
            created: 1579293001
        creator:
          id: '20'