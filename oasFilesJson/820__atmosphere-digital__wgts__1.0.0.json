{"openapi":"3.0.1","info":{"title":"WGTS Campaign Server API","description":"This is the documentation for the WGTS backend API which connects to Luminate CRM to retrieve and display donations. It requires JSON web token authentication and uses Laravel to deliver JSON responses in a predictable REST resource schema.","termsOfService":"https://atmosphere.us/terms/","contact":{"email":"alex.cameron@atmosphere.us"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"version":"1.0.0"},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"},"servers":[{"description":"SwaggerHub API Auto Mocking","url":"https://virtserver.swaggerhub.com/atmosphere-digital/wgts/1.0.0"},{"url":"https://api.wgts-dashboard.com/"}],"paths":{"/authenticate":{"post":{"tags":["Authentication"],"summary":"Provides JWT auth token","description":"Validates email and password credentials and issues a JWT auth token for accessing the API.","parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"Payload of authentication fields normally required for login","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string","format":"email","default":"first.last@atmosphere.us"},"password":{"type":"string","default":"cstr8media"}}}}}},"responses":{"200":{"$ref":"#/components/responses/JWTToken"},"201":{"$ref":"#/components/responses/JWTToken"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/logout":{"get":{"tags":["Authentication"],"summary":"Invalidates auth token","description":"Nukes all current tokens for the user, forcing them to request a fresh one.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/me":{"get":{"tags":["Authentication"],"summary":"Authenticated user object (whoami)","description":"Displays a print-out of the currently authenticated user's details.","security":[{"JWT":["user.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"responses":{"200":{"description":"A single representation of the logged in user's account object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/refresh":{"post":{"tags":["Authentication"],"summary":"Provides fresh JWT auth token","description":"Authenticates user and provides a new, fresh JWT auth token from the previous one.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"responses":{"200":{"$ref":"#/components/responses/JWTToken"},"201":{"$ref":"#/components/responses/JWTToken"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/activity":{"get":{"tags":["Activity"],"summary":"List of user activities","security":[{"JWT":["activity.index","activity.slice","activity.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of activities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activities"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/activity/{activity_id}":{"get":{"tags":["Activity"],"summary":"Display a single activity record","description":"Access a detailed representation of a morphable activity record, including its deeper relationships.","security":[{"JWT":["activity.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"activity_id","in":"path","description":"ID of activity to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/campaigns":{"get":{"tags":["Campaigns"],"summary":"List of campaigns","security":[{"JWT":["campaigns.index","campaigns.slice","campaigns.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of campaigns","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Campaigns"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Campaigns"],"summary":"Store a new campaign","security":[{"JWT":["campaigns.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Campaign"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Campaign"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/campaigns/{campaign_id}":{"get":{"tags":["Campaigns"],"summary":"Display a single campaign record","description":"Access a detailed representation of a campaign record, including its deeper relationships.","security":[{"JWT":["campaigns.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"campaign_id","in":"path","description":"ID of campaign to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Campaign"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Campaigns"],"summary":"Update a single campaign record","security":[{"JWT":["campaigns.update"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"campaign_id","in":"path","description":"ID of campaign to update","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Campaign"}}}},"responses":{"200":{"description":"A representation of the updated record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Campaign"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Campaigns"],"summary":"Delete a single campaign record","security":[{"JWT":["campaigns.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"campaign_id","in":"path","description":"ID of campaign to remove","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/checks":{"get":{"tags":["Checks"],"summary":"List of scheduled Luminate API checks","security":[{"JWT":["checks.index","checks.slice"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of api checks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Checks"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/checks/{check_id}":{"get":{"tags":["Checks"],"summary":"Display a single cron check record","description":"Access a detailed representation of a scheduled check record","security":[{"JWT":["checks.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"check_id","in":"path","description":"ID of check to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Check"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/donations":{"get":{"tags":["Donations"],"security":[{"JWT":["donations.index","donations.slice","donations.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of donations","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donations"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Donations"],"summary":"Store a new donation","security":[{"JWT":["donations.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Donation"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donation"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/donations/{donation_id}":{"get":{"tags":["Donations"],"summary":"Display a single donation record","description":"Access a detailed representation of a donation record, including its deeper relationships.","security":[{"JWT":["donations.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"donation_id","in":"path","description":"ID of donation to update","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donation"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Donations"],"summary":"Update a single donation record","security":[{"JWT":["donations.update"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"donation_id","in":"path","description":"ID of donation to return","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Donation"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Donations"],"summary":"Delete a single donation record","security":[{"JWT":["donations.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"donation_id","in":"path","description":"ID of donation to remove","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/donors":{"get":{"tags":["Donors"],"summary":"List of campaign donors","security":[{"JWT":["donors.index","donors.slice","donors.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of donors","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donors"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Donors"],"summary":"Store a new donor","security":[{"JWT":["donors.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Donor"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donor"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/donors/{donor_id}":{"get":{"tags":["Donors"],"summary":"Display a single donor record","description":"Access a detailed representation of a donor record, including its deeper relationships.","security":[{"JWT":["donors.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"donor_id","in":"path","description":"ID of donor to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Donor"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Donors"],"summary":"Update a single donor record","security":[{"JWT":["donors.update"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"donor_id","in":"path","description":"ID of donor to update","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Donor"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Donors"],"summary":"Delete a single donor record","security":[{"JWT":["donors.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"donor_id","in":"path","description":"ID of donor to remove","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/intentions":{"get":{"tags":["Intentions"],"summary":"List of campaign promotion intentions","security":[{"JWT":["intentions.index","intentions.slice","intentions.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of promotion intentions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Intentions"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Intentions"],"summary":"Store a new campaign intention","security":[{"JWT":["intentions.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Intention"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Intention"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/intentions/{intention_id}":{"get":{"tags":["Intentions"],"summary":"Display a single intention record","description":"Access a detailed representation of an intention record, including its deeper relationships.","security":[{"JWT":["intentions.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"intention_id","in":"path","description":"ID of intention to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Intention"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Intentions"],"summary":"Update a single intention record","security":[{"JWT":["intentions.update"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"intention_id","in":"path","description":"ID of intention to return","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Intention"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Intentions"],"summary":"Delete a single intention record","security":[{"JWT":["intentions.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"intention_id","in":"path","description":"ID of intention to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/media":{"get":{"tags":["Media"],"summary":"List of uploaded/attached media files","security":[{"JWT":["media.index","media.slice","media.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of media attachments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Medias"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/media/{media_id}":{"get":{"tags":["Media"],"summary":"Display a single media record","description":"Access a detailed representation of a media record, including its deeper relationships.","security":[{"JWT":["media.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"media_id","in":"path","description":"ID of media item to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Media"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Media"],"summary":"Delete a single media record","security":[{"JWT":["donations.media"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"media_id","in":"path","description":"ID of media to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/notes":{"get":{"tags":["Notes"],"summary":"List of recorded notes","security":[{"JWT":["notes.index","notes.slice","notes.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of notes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Notes"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/notes/{note_id}":{"get":{"tags":["Notes"],"summary":"Display a single note record","description":"Access a detailed representation of a note record, including its deeper relationships.","security":[{"JWT":["notes.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"note_id","in":"path","description":"ID of note to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Notes"],"summary":"Update a single note record","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"note_id","in":"path","description":"ID of note to update","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Notes"],"summary":"Delete a single note record","security":[{"JWT":["notes.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"note_id","in":"path","description":"ID of note to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/notifications":{"get":{"tags":["Notifications"],"summary":"List of dispatched notifications","security":[{"JWT":["notifications.index","notifications.slice","notifications.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of system notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Notifications"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/notifications/{notification_id}":{"get":{"tags":["Notifications"],"summary":"Display a single notification record","description":"Access a detailed representation of a notification record, including its deeper relationships.","security":[{"JWT":["notifications.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"notification_id","in":"path","description":"ID of notification to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Notification"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/permissions":{"get":{"tags":["Permissions"],"summary":"List of available system permissions","security":[{"JWT":["permissions.index","permissions.slice","permissions.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of available permisions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permissions"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/permissions/{permission_id}":{"get":{"tags":["Permissions"],"summary":"Display a single permission record","description":"Access a detailed representation of a permission record, including its deeper relationships.","security":[{"JWT":["permissions.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"permission_id","in":"path","description":"ID of permission to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/pledges":{"get":{"tags":["Pledges"],"summary":"List of campaign pledges","security":[{"JWT":["pledges.index","pledges.slice","pledges.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of campaign pledges","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pledges"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Pledges"],"summary":"Store a new campaign pledge","security":[{"JWT":["pledges.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Pledge"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pledge"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/pledges/{pledge_id}":{"get":{"tags":["Pledges"],"summary":"Display a single pledge record","description":"Access a detailed representation of a pledge record, including its deeper relationships.","security":[{"JWT":["pledges.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"pledge_id","in":"path","description":"ID of pledge to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pledge"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Pledges"],"summary":"Update a single pledge record","security":[{"JWT":["pledges.update"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"pledge_id","in":"path","description":"ID of pledge to update","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Pledge"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Pledges"],"summary":"Delete a single pledge record","security":[{"JWT":["pledges.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"pledge_id","in":"path","description":"ID of pledge to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/promotions":{"get":{"tags":["Promotions"],"summary":"List of campaign promotion windows","security":[{"JWT":["promotions.index","promotions.slice","promotions.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of campaign promotions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Promotions"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Promotions"],"summary":"Store a new campaign promotion","security":[{"JWT":["promotions.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/promotions/{promotion_id}":{"get":{"tags":["Promotions"],"summary":"Display a single promotion record","description":"Access a detailed representation of a promotion record, including its deeper relationships.","security":[{"JWT":["pronotions.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"promotion_id","in":"path","description":"ID of promotion to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Promotions"],"summary":"Update a single promotion record","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"promotion_id","in":"path","description":"ID of promotion to update","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Promotions"],"summary":"Delete a single promotion record","security":[{"JWT":["promotions.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"promotion_id","in":"path","description":"ID of promotion to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/roles":{"get":{"tags":["Roles"],"summary":"List of available system roles","security":[{"JWT":["roles.index","roles.slice","roles.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of roles","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Roles"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/roles/{role_id}":{"get":{"tags":["Roles"],"summary":"Display a single role record","description":"Access a detailed representation of a role record, including its deeper relationships.","security":[{"JWT":["roles.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"role_id","in":"path","description":"ID of role to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/searches":{"get":{"tags":["Searches"],"summary":"List of record searches","security":[{"JWT":["searches.index","searches.slice","searches.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of user searches","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Searches"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/searches/{search_id}":{"get":{"tags":["Searches"],"summary":"Display a single search record","description":"Access a detailed representation of a search record, including its deeper relationships.","security":[{"JWT":["searches.view"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"search_id","in":"path","description":"ID of search to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Search"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/statuses":{"get":{"tags":["Statuses"],"summary":"List of stored statuses","security":[{"JWT":["statuses.index","statuses.slice","statuses.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of stored statuses","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Statuses"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/statuses/{status_id}":{"get":{"tags":["Statuses"],"summary":"Display a single status record","description":"Access a detailed representation of a status record, including its deeper relationships.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"status_id","in":"path","description":"ID of status to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/tags":{"get":{"tags":["Tags"],"summary":"List of stored tags","security":[{"JWT":["tags.index","tags.slice","tags.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of stored tags","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tags"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/tags/{tag_id}":{"get":{"tags":["Tags"],"summary":"Display a single tag record","description":"Access a detailed representation of a tag record, including its deeper relationships.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"tag_id","in":"path","description":"ID of tag to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/teams":{"get":{"tags":["Teams"],"summary":"List of available teams","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"responses":{"200":{"description":"A paged list of available teams","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Teams"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Teams"],"summary":"Store a new team","security":[{"JWT":["teams.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Team"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/teams/{team_id}":{"get":{"tags":["Teams"],"summary":"Display a single tean record","description":"Access a detailed representation of a team record, including its deeper relationships.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"team_id","in":"path","description":"ID of team to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Teams"],"summary":"Update a single tean record","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"team_id","in":"path","description":"ID of team to return","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Team"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Teams"],"summary":"Delete a single team record","security":[{"JWT":["teams.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"team_id","in":"path","description":"ID of team to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/users":{"get":{"tags":["Users"],"summary":"List of system authorized users","description":"A paginated collection of users able to authenticate and make requests of the API.","security":[{"JWT":["users.index","users.slice","users.search"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/Page"},{"$ref":"#/components/parameters/Timeslice"},{"$ref":"#/components/parameters/OrderBy"},{"$ref":"#/components/parameters/OrderDir"},{"$ref":"#/components/parameters/Filter"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"$ref":"#/components/parameters/SearchQuery"},{"$ref":"#/components/parameters/Proximity"},{"$ref":"#/components/parameters/Radius"},{"$ref":"#/components/parameters/SkipCache"}],"responses":{"200":{"description":"A paged collection of users","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Users"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"post":{"tags":["Users"],"summary":"Store a new user","security":[{"JWT":["users.store"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"201":{"description":"A representation of the created object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"422":{"$ref":"#/components/responses/UnprocessableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}},"/users/{user_id}":{"get":{"tags":["Users"],"summary":"Display a single user record","description":"Access a detailed representation of a user record, including its deeper relationships.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"$ref":"#/components/parameters/EagerLoad"},{"$ref":"#/components/parameters/Include"},{"name":"user_id","in":"path","description":"ID of user to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"A single item record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"put":{"tags":["Users"],"summary":"Update a user record","description":"Update part or all of a single user record and/or its relationships.","security":[{"JWT":[]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"user_id","in":"path","description":"ID of user to update","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"description":"A list of key:value fields and values which should fill the object's properties","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"200":{"$ref":"#/components/responses/Succeeded"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}},"delete":{"tags":["Users"],"summary":"Delete a user record","description":"Soft-delete an entire user record and its relationships.","security":[{"JWT":["users.destroy"]}],"parameters":[{"$ref":"#/components/parameters/JSONHeader"},{"name":"user_id","in":"path","description":"ID of user to remove","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Deleted"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"405":{"$ref":"#/components/responses/MethodNotAllowedError"},"406":{"$ref":"#/components/responses/NotAcceptableError"},"429":{"$ref":"#/components/responses/RateLimitingError"},"500":{"$ref":"#/components/responses/InternalServerError"},"502":{"$ref":"#/components/responses/BadGatewayError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"504":{"$ref":"#/components/responses/GatewayTimeoutError"}}}}},"components":{"securitySchemes":{"JWT":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"parameters":{"JSONHeader":{"name":"Accept","required":true,"in":"header","description":"Which format the API should respond with (JSON)","schema":{"type":"string","default":"application/json"}},"JWTToken":{"name":"Authorization","required":true,"in":"header","description":"Bearer JWT authorization","schema":{"type":"string","default":"Bearer <token>"}},"Page":{"name":"page","required":false,"in":"query","description":"The page number of the resultset to provide","schema":{"type":"integer","format":"int64","default":1,"minimum":1}},"Timeslice":{"name":"timeslice","required":false,"in":"query","description":"Records within a specific timeframe","schema":{"type":"string","format":"date-time","default":"created_at;ISO8601-start|ISO8601-end"}},"OrderBy":{"name":"order_by","required":false,"in":"query","description":"Which field to use to sort the resultset","schema":{"type":"string","default":"created_at"}},"OrderDir":{"name":"order_dir","required":false,"in":"query","description":"Which direction the sorting should use","schema":{"type":"string","enum":["ASC","DESC"],"default":"DESC"}},"Filter":{"name":"filter","required":false,"in":"query","description":"A list of fields to ONLY retrieve, ignoring all others","schema":{"type":"string","default":"id;email;created_at"}},"EagerLoad":{"name":"with","required":false,"in":"query","description":"A list of relationships to eager load with the model","schema":{"type":"string","default":"permissions"}},"Include":{"name":"include","required":false,"in":"query","description":"A list of fractal includes to process and activate in the response","schema":{"type":"string","default":"city.country"}},"SearchQuery":{"name":"q","required":false,"in":"query","description":"A text keyword to search records for","schema":{"type":"string"}},"Proximity":{"name":"coords","required":false,"in":"query","description":"A set of geographic coordinates to form a 'nearby' center (lat, lng)","schema":{"type":"string","default":"38.942719,-77.326767"}},"Radius":{"name":"radius","required":false,"in":"query","description":"A distance in meters forming a circle of proximity","schema":{"type":"integer","format":"int64","default":16000,"minimum":1}},"SkipCache":{"name":"skipCache","required":false,"in":"query","description":"Whether or not to bypass cached results","schema":{"type":"boolean","enum":[true,false]}}},"responses":{"Succeeded":{"description":"The request succeeded."},"Created":{"description":"The request has been fulfilled and has resulted in one or more new resources being created."},"BadRequestError":{"description":"The server cannot or will not process the request due to something that is perceived to be a client error."},"UnauthorizedError":{"description":"The request has not been applied because it lacks valid authentication credentials for the target resource."},"ForbiddenError":{"description":"The server understood the request but refuses to authorize it."},"NotFoundError":{"description":"The origin server did not find a current representation for the target resource or is not willing to disclose that one exists."},"MethodNotAllowedError":{"description":"The method received in the request-line is known by the origin server but not supported by the target resource."},"NotAcceptableError":{"description":"The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation."},"TimeoutError":{"description":"The server did not receive a complete request message within the time that it was prepared to wait."},"ConflictError":{"description":"The request could not be completed due to a conflict with the current state of the target resource."},"GoneError":{"description":"The target resource is no longer available at the origin server and that this condition is likely to be permanent."},"PreconditionFailedError":{"description":"One or more conditions given in the request header fields evaluated to false when tested on the server."},"TooLargeError":{"description":"The server is refusing to process a request because the request payload is larger than the server is willing or able to process."},"UnsupportedMediaError":{"description":"The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource."},"UnprocessableError":{"description":"The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions."},"RateLimitingError":{"description":"The user has sent too many requests in a given amount of time."},"InternalServerError":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request."},"NotImplementedError":{"description":"The server does not support the functionality required to fulfill the request."},"BadGatewayError":{"description":"The server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request."},"ServiceUnavailableError":{"description":"The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay."},"GatewayTimeoutError":{"description":"The server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request."},"Deleted":{"description":"A confirmation the object has been (soft)-deleted","content":{"application/json":{"schema":{"type":"object","properties":{"msg":{"type":"string"}}}}}},"JWTToken":{"description":"A JWT auth token has been generated.","content":{"application/json":{"schema":{"type":"object","properties":{"token_type":{"type":"string","description":"The type of authentication to use (Bearer)","default":"Bearer"},"expires_in":{"type":"integer","description":"Length of time in minutes before token needs refreshing","default":3600},"access_token":{"type":"string","description":"API access key to be supplied in HTTP header"}}}}}}},"schemas":{"Activities":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}},"Activity":{"type":"object","properties":{"activity_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"log_name":{"description":"The log category/type","type":"string","default":"default"},"description":{"description":"Free-form information about the activity","type":"string"},"causer":{"description":"A user object of the record who undertook the activity","$ref":"#/components/schemas/User"},"subject":{"description":"A (mixed) object the causer was acting upon","anyOf":[{"$ref":"#/components/schemas/Campaign"},{"$ref":"#/components/schemas/Donation"},{"$ref":"#/components/schemas/Donor"},{"$ref":"#/components/schemas/Intention"},{"$ref":"#/components/schemas/Media"},{"$ref":"#/components/schemas/Note"},{"$ref":"#/components/schemas/Notification"},{"$ref":"#/components/schemas/Permission"},{"$ref":"#/components/schemas/Pledge"},{"$ref":"#/components/schemas/Promotion"},{"$ref":"#/components/schemas/Role"},{"$ref":"#/components/schemas/Search"},{"$ref":"#/components/schemas/Team"},{"$ref":"#/components/schemas/User"}]},"properties":{"description":"A generic JSON object with additional information about the activity","type":"string","default":"{}"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}}},"Campaigns":{"type":"array","items":{"$ref":"#/components/schemas/Campaign"}},"Campaign":{"type":"object","properties":{"campaign_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"remote_id":{"type":"string","description":"The ID of the campaign in the remote API for cross-referencing"},"title":{"type":"string","description":"A friendly name to identify the object, which can be converted into a slug","default":"Seasonal Campaign To Raise Funds"},"slug":{"type":"string","description":"An anlphanumeric slug representation of the object's title"},"lang":{"description":"A 2-digit ISO language code","type":"string","enum":["en","fr","es"],"default":"en"},"timezone":{"type":"string","description":"The timezone the results should be calculated in","enum":["UTC","EST","CST","PST","America/New_York"],"default":"America/New_York"},"currency":{"type":"string","description":"The currency donations should be calculated in","enum":["USD","CAD","GBP","EUR"],"default":"USD"},"type":{"type":"string","description":"The type of campaign, e.g. fundraising, disposal, labor","enum":["fundraising"],"default":"fundraising"},"description":{"description":"A larger description of the campaign which provides more information","type":"string","maximum":255},"url":{"description":"A related web link which can be included for more information","type":"string","default":"https://connect.wgts919.com/donate"},"starts_at":{"description":"A UTC datetime in ISO 8601 format specifying when the campaign starts","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"ends_at":{"description":"A UTC datetime in ISO 8601 format specifying when the campaign ends","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"city":{"description":"A central city location which can act as the pinpoint of the campaign HQ when geolocating donors/donations","type":"string","default":"Baltimore"},"state":{"type":"string","description":"A central 2-digit state code which can act as the pinpoint of the campaign HQ when geolocating donors/donations","maximum":2,"default":"MD"},"zip":{"description":"A generic postal code which can act as the pinpoint of the campaign HQ when geolocating donors/donations","type":"string","maximum":5,"default":"20850"},"country":{"description":"A generic 2-digit ISO country code which can act as the pinpoint of the campaign HQ when geolocating donors/donations","type":"string","enum":["US","CA","UK"],"maximum":2,"default":"US"},"latitude":{"description":"A valid WSG84 (SRID 4326) latitude decimal of the campaign HQ physical location for geolocating donors/donations","type":"number","format":"float","minimum":-90,"maximum":90,"default":39.116772},"longitude":{"description":"A valid WSG84 (SRID 4326) longitude decimal of the campaign HQ physical location for geolocating donors/donations","type":"number","format":"float","minimum":-180,"maximum":180,"default":-77.181358},"radius":{"description":"A default distance in meters specifying how far the campaign reaches or targets geographically","type":"integer","format":"float","default":16000},"coords":{"description":"A GeoJSON object describing the location associated with the record","type":"object"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"donations":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Donations"},"intentions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Intentions"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"pledges":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Pledges"},"promotions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Promotions"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["type","title","starts_at","ends_at"]},"Checks":{"type":"array","items":{"$ref":"#/components/schemas/Check"}},"Check":{"type":"object","properties":{"check_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"started_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"finished_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"changes":{"description":"The amount of records inserted","type":"integer","format":"int64"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}},"required":["started_at","finished_at"]},"Donations":{"type":"array","items":{"$ref":"#/components/schemas/Donation"}},"Donation":{"type":"object","properties":{"donation_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"promotion_id":{"description":"Identifier of the promotion associated with the record","type":"integer","format":"int64"},"donor_id":{"description":"Identifier of the donor associated with the record","type":"integer","format":"int64"},"type":{"description":"Whether the donation is from an individual or entity","type":"string","enum":["individual","couple","group","corporate"],"default":"individual"},"src":{"description":"Where the record originated","type":"string","enum":["luminate","api"],"default":"luminate"},"channel":{"description":"Where the donor was prompted to make the donation from","type":"string","enum":["website","email","phone","sms","postal"],"default":"website"},"event_id":{"description":"Identifier of the system trigger associated with the donation","type":"string"},"display_as":{"description":"What to display publicly instead of the donor's real name","type":"string"},"campaign_remote":{"description":"Identifier of the linked campaign on the remote API","type":"string"},"transaction_id":{"description":"Identifier of the foreign record on the remote API","type":"string"},"occurrence":{"description":"How many times the donation should happen","type":"integer","format":"int64","default":0},"amount":{"description":"The fixed monetary total of the donation","type":"number","format":"float","default":0},"total":{"description":"The fixed aggregate financial total over time","type":"number","format":"float","default":0},"level_id":{"description":"Identifier of the donation level on the remote API","type":"string"},"form_id":{"description":"Identifier of the web form used for payment on the remote API","type":"string"},"processor_id":{"description":"Identifier of the e-com payment provider's card transaction on the remote API","type":"string"},"ref_number":{"description":"Identifier of the payment reference number on the remote API","type":"string"},"tender_type":{"description":"Identifier of the payment method on the remote API","type":"string","enum":["ACH","CREDIT_CARD","X_CHECKOUT"],"default":"CREDIT_CARD"},"anon":{"description":"Whether or not the donation should be displayed as anonymous","type":"boolean","default":false},"comments":{"description":"Additional comments or feedback given with the donation","type":"string"},"payment_made_at":{"description":"Datetime of the actual financial settlement from the financial institution (not when the commitment was made)","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"campaign":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Campaign"},"donor":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Donor"},"intention":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Intention"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"promotion":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Promotion"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["donation_id","promotion_id","type","src","channel","event_id","campaign_remote","transaction_id","occurrence","amount","form_id","processor_id","ref_number","tender_type","anon","payment_made_at"]},"Donors":{"type":"array","items":{"$ref":"#/components/schemas/Donor"}},"Donor":{"type":"object","properties":{"donor_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"type":{"description":"Whether the donor is an individual or entity","type":"string","enum":["individual","couple","group","corporate"],"default":"individual"},"src":{"description":"Where the record originated","type":"string","enum":["luminate","api"],"default":"luminate"},"channel":{"description":"Where the donor came from","type":"string","enum":["website","email","phone","sms","postal"],"default":"website"},"event_id":{"description":"Identifier of the system trigger associated with the donor's creation","type":"string"},"const_id":{"description":"Identifier of the donor's constituent record on the remote API","type":"string"},"member_id":{"description":"Identifier of the donor's membership record on the remote API","type":"string"},"remote_user":{"description":"Identifier of the donor's user record on the remote API","type":"string"},"first":{"description":"The donor's first (given) name","type":"string"},"last":{"description":"The donor's last (family) name","type":"string"},"display_as":{"description":"How the donor's name should be represented in public","type":"string"},"email":{"description":"The donor's email address","type":"string","format":"email"},"sex":{"description":"The donor's sex","type":"string","maximum":1,"enum":["M","F","X"],"default":"X"},"phone":{"description":"The donor's phone number in E164 international format","type":"string"},"password":{"description":"The donor's plain text password for making requests to the API","type":"string"},"street":{"description":"The donor's physical street address (lines 1 and 2, plus apt/suite)","type":"string"},"city":{"description":"The donor's city","type":"string"},"state":{"type":"string","description":"The donor's 2-digit state code","maximum":2},"zip":{"description":"The donor's zip/postal code","type":"string","maximum":5},"country":{"description":"The donor's generic 2-digit ISO country code","type":"string","enum":["US","CA","UK"],"maximum":2,"default":"US"},"latitude":{"description":"A valid WSG84 (SRID 4326) latitude decimal of the donor's address","type":"number","format":"float","minimum":-90,"maximum":90,"default":39.116772},"longitude":{"description":"A valid WSG84 (SRID 4326) longitude decimal of the donor'a address","type":"number","format":"float","minimum":-180,"maximum":180,"default":-77.181358},"coords":{"description":"A GeoJSON object describing the location associated with the record","type":"object"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"donations":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Donations"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["type","src","channel","event_id","const_id","member_id","remote_user","first","last","email","sex","street","city","state","zip","country"]},"Intentions":{"type":"array","items":{"$ref":"#/components/schemas/Intention"}},"Intention":{"type":"object","properties":{"intention_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"campaign_id":{"description":"Identifier of the campaign associated with the record","type":"integer","format":"int64"},"promotion_id":{"description":"Identifier of the promotion associated with the record","type":"integer","format":"int64"},"title":{"description":"A friendly name or headline for the intention snapshot","type":"string"},"slug":{"description":"An auto-generated alphanumeric slug of the title field with","type":"string"},"description":{"description":"Information about the promotion intention"},"type":{"description":"The nature of the promotion and its outcome","type":"string","enum":["target","giveaway","matching"],"default":"target"},"countable":{"description":"Which element or vector of the intention should be displayed, calculated, or aggregated","type":"string","enum":["amount","donors","donations","products","pledges"],"default":"amount"},"counter":{"description":"A static referential figure used in the calculation or display for comparison, such as a running total or number of items available to give away","type":"integer","format":"int64","default":0},"params":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"constraints":{"description":"A generic JSON object with additional properties needing to be stored with the object for calculations","type":"string","default":"{}"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"campaign":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Campaign"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"promotion":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Promotion"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["campaign_id","promotion_id","title","type","countable","counter"]},"Medias":{"type":"array","items":{"$ref":"#/components/schemas/Media"}},"Media":{"type":"object","properties":{"id":{"description":"Identifer of the record","type":"integer","format":"int64"},"model_type":{"description":"The internal class name of the data model linked to the item","type":"string"},"model":{"description":"Representation of the parent object","anyOf":[{"$ref":"#/components/schemas/Campaign"},{"$ref":"#/components/schemas/Donation"},{"$ref":"#/components/schemas/Donor"},{"$ref":"#/components/schemas/Intention"},{"$ref":"#/components/schemas/Note"},{"$ref":"#/components/schemas/Pledge"},{"$ref":"#/components/schemas/Promotion"},{"$ref":"#/components/schemas/Team"},{"$ref":"#/components/schemas/User"}]},"collection_name":{"description":"Which collection the item belongs to","type":"string"},"name":{"description":"Friendly name of the item for use when displaying it","type":"string"},"file_name":{"description":"Name of the physical file on disk","type":"string"},"mime_type":{"description":"Content type discovered within the file when it was added","type":"string","default":"image/jpeg"},"disk":{"description":"The internal name of the disk volume on which the physical file is stored","type":"string","default":"local"},"size":{"description":"The size in bytes of the physical file","type":"integer"},"manipulations":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"object"},"custom_properties":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"object"},"responsive_images":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"object"},"order_column":{"description":"Which position the media should be displayed","type":"integer","format":"int64"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}},"required":["collection_name","name","model","file_name"]},"Notes":{"type":"array","items":{"$ref":"#/components/schemas/Note"}},"Note":{"type":"object","properties":{"note_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"noteable_type":{"description":"Internal class name of the object associated with the record","type":"string"},"noteable":{"description":"Representation of the parent object the note is attached to","anyOf":[{"$ref":"#/components/schemas/Campaign"},{"$ref":"#/components/schemas/Donation"},{"$ref":"#/components/schemas/Donor"},{"$ref":"#/components/schemas/Intention"},{"$ref":"#/components/schemas/Media"},{"$ref":"#/components/schemas/Pledge"},{"$ref":"#/components/schemas/Promotion"},{"$ref":"#/components/schemas/Team"},{"$ref":"#/components/schemas/User"}]},"content":{"description":"The text contained within the record","type":"string"},"author":{"description":"Representation of the record author","$ref":"#/components/schemas/User"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}},"required":["content"]},"Notifications":{"type":"array","items":{"$ref":"#/components/schemas/Notification"}},"Notification":{"type":"object","properties":{"id":{"description":"Identifer of the record","type":"integer","format":"int64"},"type":{"description":"What category of message the record is","type":"string"},"notifiable":{"description":"Representation of the user being notified","$ref":"#/components/schemas/User"},"data":{"description":"A generic JSON object with additional properties needing to be stored with the object for calculations","type":"object"},"read_at":{"description":"A UTC datetime in ISO 8601 format specifying when the notification was read","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}}},"Permissions":{"type":"array","items":{"$ref":"#/components/schemas/Permission"}},"Permission":{"type":"object","properties":{"permnission_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"name":{"description":"Friendly identifier of the permission in dot notation","type":"string","default":"models.operation"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"permissions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Permissions"},"roles":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Roles"},"users":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/User"}},"required":["name"]},"Pledges":{"type":"array","items":{"$ref":"#/components/schemas/Pledge"}},"Pledge":{"type":"object","properties":{"pledge_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"campaign_id":{"description":"Identifier of the campaign associated with the record","type":"integer","format":"int64"},"promotion_id":{"description":"Identifier of the promotion associated with the record","type":"integer","format":"int64"},"intention_id":{"description":"Identifier of the promotion intention associated with the record","type":"integer","format":"int64"},"type":{"description":"Whether the donor is an individual or entity","type":"string","enum":["individual","couple","group","corporate"],"default":"individual"},"channel":{"description":"Where the donor came from","type":"string","enum":["website","email","phone","sms","postal"],"default":"website"},"event_id":{"description":"Identifier of the system trigger associated with the donor's creation","type":"string"},"first":{"description":"The donor's first (given) name","type":"string"},"last":{"description":"The donor's last (family) name","type":"string"},"display_as":{"description":"How the donor's name should be represented in public","type":"string"},"email":{"description":"The donor's email address","type":"string","format":"email"},"phone":{"description":"The donor's phone number in E164 international format","type":"string"},"street":{"description":"The donor's physical street address (lines 1 and 2, plus apt/suite)","type":"string"},"city":{"description":"The donor's city","type":"string"},"state":{"type":"string","description":"The donor's 2-digit state code","maximum":2},"zip":{"description":"The donor's zip/postal code","type":"string","maximum":5},"country":{"description":"The donor's generic 2-digit ISO country code","type":"string","enum":["US","CA","UK"],"maximum":2,"default":"US"},"latitude":{"description":"A valid WSG84 (SRID 4326) latitude decimal of the donor's address","type":"number","format":"float","minimum":-90,"maximum":90,"default":39.116772},"longitude":{"description":"A valid WSG84 (SRID 4326) longitude decimal of the donor'a address","type":"number","format":"float","minimum":-180,"maximum":180,"default":-77.181358},"coords":{"description":"A GeoJSON object describing the location associated with the record","type":"object"},"occurrence":{"description":"How many times the donation should happen","type":"integer","format":"int64","default":0},"amount":{"description":"The fixed monetary total of the donation","type":"number","format":"float","default":0},"total":{"description":"The fixed aggregate financial total over time","type":"number","format":"float","default":0},"anon":{"description":"Whether or not the donation should be displayed as anonymous","type":"boolean","default":false},"promised_at":{"description":"A UTC datetime in ISO 8601 format specifying when the pledge was recorded","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"promised_to":{"description":"Representation of the user to whom the pledge was made","type":"object"},"includable_at":{"description":"A UTC datetime in ISO 8601 format specifying when the pledge should be included in fundraising totals","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"expires_at":{"description":"A UTC datetime in ISO 8601 format specifying when the pledge should expire (90 days)","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"collected_at":{"description":"A UTC datetime in ISO 8601 format specifying when the pledge was collected","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"collected_by":{"description":"Representation of a user object responsible for finalising the donation","type":"object"},"merged_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was merged into a donation","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"merged_to":{"description":"Representation of donation object the pledge finally associated with","type":"object"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"campaign":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Campaign"},"promotion":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Promotion"},"intention":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Intention"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["campaign_id","promotion_id","intention_id","type","channel","first","last","email","sex","street","city","state","zip","country","occurrence","amount","total","promised_at","includable_at"]},"Promotions":{"type":"array","items":{"$ref":"#/components/schemas/Promotion"}},"Promotion":{"type":"object","properties":{"promotion_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"campaign_id":{"description":"Identifier of the campaign associated with the record","type":"integer","format":"int64"},"lang":{"description":"A 2-digit ISO language code","type":"string","enum":["en","fr","es"],"default":"en"},"timezone":{"type":"string","description":"The timezone the results should be calculated in","enum":["UTC","EST","CST","PST","America/New_York"],"default":"America/New_York"},"currency":{"type":"string","description":"The currency donations should be calculated in","enum":["USD","CAD","GBP","EUR"],"default":"USD"},"title":{"type":"string","description":"A friendly name to identify the object, which can be converted into a slug","default":"Seasonal Campaign To Raise Funds"},"slug":{"type":"string","description":"An anlphanumeric slug representation of the object's title"},"description":{"description":"A larger description of the promotion which provides more information","type":"string","maximum":255},"city":{"description":"A central city location which can act as the pinpoint of the promotion when geolocating donors/donations","type":"string","default":"Baltimore"},"state":{"type":"string","description":"A central 2-digit state code which can act as the pinpoint of the promotion when geolocating donors/donations","maximum":2,"default":"MD"},"zip":{"description":"A generic postal code which can act as the pinpoint of the promotion when geolocating donors/donations","type":"string","maximum":5,"default":"20850"},"country":{"description":"A generic 2-digit ISO country code which can act as the pinpoint of the promotion when geolocating donors/donations","type":"string","enum":["US","CA","UK"],"maximum":2,"default":"US"},"latitude":{"description":"A valid WSG84 (SRID 4326) latitude decimal of the promotion's physical location for geolocating donors/donations","type":"number","format":"float","minimum":-90,"maximum":90,"default":39.116772},"longitude":{"description":"A valid WSG84 (SRID 4326) longitude decimal of the promotion's physical location for geolocating donors/donations","type":"number","format":"float","minimum":-180,"maximum":180,"default":-77.181358},"radius":{"description":"A default distance in meters specifying how far the promotion reaches or targets geographically","type":"integer","format":"float","default":16000},"coords":{"description":"A GeoJSON object describing the location associated with the record","type":"object"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"campaign":{"description":"Optional full representation of the parent record","$ref":"#/components/schemas/Campaign"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"donations":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Donations"},"intentions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Intentions"}},"required":["campaign_id","title","starts_at","ends_at"]},"Roles":{"type":"array","items":{"$ref":"#/components/schemas/Role"}},"Role":{"type":"object","properties":{"role_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"name":{"description":"Friendly identifier of the role in slug notation","type":"string","default":"somegroup"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"permissions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Permissions"},"users":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/User"}},"required":["name"]},"Searches":{"type":"array","items":{"$ref":"#/components/schemas/Search"}},"Search":{"type":"object","properties":{"search_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"searcher":{"description":"Representation of the user who requested the search","$ref":"#/components/schemas/User"},"searchable_type":{"description":"Internal class name of the record type which was searched","anyOf":[{"$ref":"#/components/schemas/Campaign"},{"$ref":"#/components/schemas/Donation"},{"$ref":"#/components/schemas/Donor"},{"$ref":"#/components/schemas/Intention"},{"$ref":"#/components/schemas/Media"},{"$ref":"#/components/schemas/Note"},{"$ref":"#/components/schemas/Notification"},{"$ref":"#/components/schemas/Permission"},{"$ref":"#/components/schemas/Pledge"},{"$ref":"#/components/schemas/Promotion"},{"$ref":"#/components/schemas/Role"},{"$ref":"#/components/schemas/Search"},{"$ref":"#/components/schemas/Team"},{"$ref":"#/components/schemas/User"}]},"query":{"description":"The text keyword provided by the user","type":"string"},"page":{"description":"The numeric number of the paged results retrieved","type":"integer","format":"int64"},"results":{"description":"The number of results sent back","type":"integer","format":"int64"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}}},"Statuses":{"type":"array","items":{"$ref":"#/components/schemas/Status"}},"Status":{"type":"object","properties":{"id":{"description":"Identifer of the record","type":"integer","format":"int64"},"name":{"description":"Friendly language title of the status","type":"string"},"reason":{"description":"Open description field specifying the context of the status association","type":"string"},"model_type":{"description":"Internal class name of the object being given the status","type":"string"},"model":{"description":"Representation of the object being acted upon","anyOf":[{"$ref":"#/components/schemas/Campaign"},{"$ref":"#/components/schemas/Donation"},{"$ref":"#/components/schemas/Donor"},{"$ref":"#/components/schemas/Intention"},{"$ref":"#/components/schemas/Note"},{"$ref":"#/components/schemas/Pledge"},{"$ref":"#/components/schemas/Promotion"},{"$ref":"#/components/schemas/Team"},{"$ref":"#/components/schemas/User"}]},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}}},"Tags":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}},"Tag":{"type":"object","properties":{"tag_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"name":{"description":"Friendly title of the tag with multi-lingual correlation","type":"object"},"slug":{"description":"Alphanumeric slug of the title with multi-lingual correlation","type":"object"},"type":{"description":"Grouping associated with the unique tag","type":"string"},"order_column":{"description":"Numeric specifier of order in which the tag should be displayed","type":"integer","format":"int64"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"}}},"Teams":{"type":"array","items":{"$ref":"#/components/schemas/Team"}},"Team":{"type":"object","properties":{"team_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"owner":{"$ref":"#/components/schemas/User"},"owner_id":{"description":"Foreign ID of the user who created the team","type":"integer","format":"int64"},"name":{"type":"string","default":"My New Team"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"members":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/User"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notes"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"}},"required":["owner_id","name"]},"Users":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"User":{"type":"object","properties":{"user_id":{"description":"Identifer of the record","type":"integer","format":"int64"},"org":{"description":"The organisation tag to which the user belongs","type":"string","enum":["wgts","atmo"],"default":"wgts"},"first":{"description":"The user's first (given) name","type":"string","default":"John"},"last":{"description":"The user's last (family) name","type":"string","default":"Doe"},"email":{"description":"The user's login email address","type":"string","format":"email","default":"first.last@wgts919.com"},"password":{"description":"The user's login password","type":"string","minimum":5,"default":"cstr8media"},"phone":{"description":"An E164 internationally-formatted phone number","type":"string","default":"+17030001234"},"lang":{"description":"A 2-digit ISO language code","type":"string","enum":["en","fr","es"],"default":"en"},"timezone":{"type":"string","description":"The timezone the user is in","enum":["UTC","EST","CST","PST","America/New_York"],"default":"America/New_York"},"currency":{"type":"string","description":"The currency the user views donations in","enum":["USD","CAD","GBP","EUR"],"default":"USD"},"city":{"description":"The user's city","type":"string","default":"Baltimore"},"state":{"type":"string","description":"A central 2-digit state code","maximum":2,"default":"MD"},"zip":{"description":"A generic postal code","type":"string","maximum":5,"default":20850},"country":{"description":"A generic 2-digit ISO country code","type":"string","enum":["US","CA","UK"],"maximum":2,"default":"US"},"latitude":{"description":"A valid WSG84 (SRID 4326) latitude decimal of the user's physical location","type":"number","format":"float","minimum":-90,"maximum":90,"default":39.116772},"longitude":{"description":"A valid WSG84 (SRID 4326) longitude decimal of the user's physical location","type":"number","format":"float","minimum":-180,"maximum":180,"default":-77.181358},"coords":{"description":"A GeoJSON object describing the location associated with the record","type":"object"},"last_login_at":{"description":"A UTC datetime in ISO 8601 format specifying when the user last authenticated a JWT token","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"last_activity_at":{"description":"A UTC datetime in ISO 8601 format specifying the last time the user made a request to the API","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"email_verified_at":{"description":"A UTC datetime in ISO 8601 format specifying when the user's account was confirmed","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"meta":{"description":"A generic JSON object with additional properties needing to be stored with the object","type":"string","default":"{}"},"created_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was created","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"updated_at":{"description":"A UTC datetime in ISO 8601 format specifying when the record was updated","type":"string","format":"date-time","default":"2004-02-12T15:19:21+00:00"},"creator":{"description":"System user object representing the person who created the record (if manually entered)","$ref":"#/components/schemas/User"},"activities":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Activities"},"media":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Medias"},"notes":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Notifications"},"permissions":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Permissions"},"roles":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Roles"},"searches":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Searches"},"statuses":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Statuses"},"tags":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Tags"},"teams":{"description":"Optional full representation of the child HasMany records","$ref":"#/components/schemas/Teams"}},"required":["org","first","last","email","password","phone","city","state","zip","country","latitude","longitude"]}}}}