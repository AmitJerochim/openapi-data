penapi: 3.0.0
info:
  description: Prophius-Core
  version: 1.0.0
  title: Prophius-Core main APIs
  contact:
    email: devops@prophius.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Prophius/ProphiusCoreAPI/1.0.0
  - url: 'https://prophius-api.com/api/v1'
    description: Staging URL
tags:
  - name: Prophius Core
    description: Prophius Core APIs
paths:
  /users:
    get:
      tags:
        - Get User Request
      summary: Returns logged in user details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    post:
      tags:
        - Create User Request
      summary: Creates users
      security: []
      requestBody:
        description: User Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersRequestPostBody'
      responses:
        '201':
          description: OK
    patch:
      tags:
        - Update User Request
      summary: Update user
      security:
        - BearerAuth: []
      requestBody:
        description: User Request Patch Object
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersRequestPatchBody'
      responses:
        '200':
          description: OK
  /users/login:
    post:
      tags:
        - Login User Request
      summary: Logs in a user
      security: []
      requestBody:
        description: User Login Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersLoginRequestPostBody'
      responses:
        '200':
          description: OK
  '/users/search/{user_id}':
    parameters:
      - name: user_id
        in: path
        required: true
        content:
          application/json:
            schema:
              type: string
        description: user id for which user details should be retrieved
    get:
      tags:
        - Search User Request
      summary: Search for a user with a provided id
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
  /merchants:
    get:
      tags:
        - Get Merchant Request
      summary: Returns logged in merchant details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    post:
      tags:
        - Create Merchant Request
      summary: Creates merchants
      security:
        - BearerAuth: []
      requestBody:
        description: Merchants Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchantsRequestPostBody'
      responses:
        '201':
          description: OK
    patch:
      tags:
        - Update Merchant Request
      summary: Update merchant
      security:
        - BearerAuth: []
      requestBody:
        description: Merchant Request Patch Object
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchantsRequestPatchBody'
      responses:
        '200':
          description: OK
  /merchants/login:
    post:
      tags:
        - Login Merchant Request
      summary: Logs in a merchant
      security: []
      requestBody:
        description: Merchant Login Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchantsLoginRequestPostBody'
      responses:
        '200':
          description: OK
  '/merchants/search/{merchant_id}':
    parameters:
      - name: merchant_id
        in: path
        required: true
        content:
          application/json:
            schema:
              type: string
        description: merchant id for which user details should be retrieved
    get:
      tags:
        - Search Merchant Request
      summary: Search for a merchant with a provided id
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
  /categories:
    get:
      tags:
        - Categories
      summary: Returns merchant categories
      security: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    post:
      tags:
        - Create Categories
      summary: Creates merchant categories
      security:
        - BearerAuth: []
      requestBody:
        description: Categories Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/categoriesRequestPostBody'
      responses:
        '201':
          description: OK
  '/categories/{id}':
    parameters:
      - name: id
        in: path
        required: true
        content:
          application/json:
            schema:
              type: string
        description: Id of the category to be matched
    get:
      tags:
        - Get Specific Category
      summary: Returns merchant category with provided id
      security: []
      parameters:
        - in: path
          name: id
          required: true
          content:
            application/json:
              schema:
                type: string
          description: id of category to be retrieved
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    patch:
      tags:
        - Update Specific Category Request
      summary: Update available merchant category with provided id
      security:
        - BearerAuth: []
      requestBody:
        description: Categories Request Patch Object
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/categoriesRequestPatchBody'
      responses:
        '200':
          description: OK
  /banks:
    get:
      tags:
        - Get Bank Request
      summary: Returns available banks
      security: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    post:
      tags:
        - Create Banks Request
      summary: Creates banks
      security:
        - BearerAuth: []
      requestBody:
        description: Banks Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/banksRequestPostBody'
      responses:
        '201':
          description: OK
  '/banks/{id}':
    parameters:
      - name: id
        in: path
        required: true
        content:
          application/json:
            schema:
              type: string
        description: id of the bank to be matched
    get:
      tags:
        - Get Specific Bank Request
      summary: Returns bank that matches provided id
      security: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    patch:
      tags:
        - Update Specific Banks Request
      summary: Update bank that matches provided ID
      security:
        - BearerAuth: []
      requestBody:
        description: Banks Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/banksRequestPatchBody'
      responses:
        '200':
          description: OK
  /banks/login:
    post:
      tags:
        - Login Banks Request
      summary: Logs in a bank to an admin portal
      security: []
      requestBody:
        description: Bank Login Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/banksLoginRequestPostBody'
      responses:
        '200':
          description: OK
  /transactions:
    get:
      tags:
        - Get Transactions
      summary: Returns user transactions
      security: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
    post:
      tags:
        - Create Transactions
      summary: Creates transactions
      security:
        - BearerAuth: []
      requestBody:
        description: Transactions Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transactionsRequestPostBody'
      responses:
        '201':
          description: OK
  /transactions/collection:
    post:
      tags:
        - Collect Posted Transaction
      summary: Returns transactions
      security:
        - BearerAuth: []
      requestBody:
        description: Transaction Collection Request Post Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transactioncollectionRequestPostBody'
      responses:
        '200':
          description: OK
        '400':
          description: EXPIRED
        '404':
          description: NOT FOUND
components:
  schemas:
    usersRequestPostBody:
      type: object
      properties:
        first_name:
          type: string
          format: string
        last_name:
          type: string
          format: string
        username:
          type: string
          format: string
        msisdn:
          type: string
          format: string
        gender:
          type: string
          format: string
        password:
          type: string
          format: string
        age_category:
          type: string
          format: string
        address:
          type: string
          format: string
        device_token:
          type: string
          format: string
        country:
          type: string
          format: string
        avatar:
          type: string
          format: string
      required:
        - first_name
        - last_name
        - username
        - msisdn
        - gender
        - password
        - age_category
        - address
        - device_token
        - country
        - avatar
    usersRequestPatchBody:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/usersRequestPostBody'
    usersLoginRequestPostBody:
      type: object
      properties:
        msisdn:
          type: string
          format: string
        password:
          type: string
          format: string
        device_token:
          type: string
          format: string
      required:
        - msisdn
        - password
        - device_token
    merchantsRequestPostBody:
      type: object
      properties:
        name:
          type: string
          format: string
        msisdn:
          type: string
          format: string
        email:
          type: string
          format: string
        business_name:
          type: string
          format: string
        password:
          type: string
          format: string
        address:
          type: string
          format: string
        category:
          type: string
          format: string
        device_token:
          type: string
          format: string
        country:
          type: string
          format: string
        avatar:
          type: string
          format: string
      required:
        - name
        - msisdn
        - email
        - business_name
        - password
        - address
        - category
        - device_token
        - country
        - avatar
    merchantsRequestPatchBody:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/merchantsRequestPostBody'
    merchantsLoginRequestPostBody:
      type: object
      properties:
        merchant_code:
          type: string
          format: string
        password:
          type: string
          format: string
        device_token:
          type: string
          format: string
      required:
        - merchant_code
        - password
        - device_token
    categoriesRequestPostBody:
      type: object
      properties:
        name:
          type: string
          format: string
        status:
          type: integer
          format: integer
      required:
        - name
        - status
    categoriesRequestPatchBody:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/categoriesRequestPostBody'
    banksRequestPostBody:
      type: object
      properties:
        name:
          type: string
          format: string
        country:
          type: string
          format: string
        currency:
          type: string
          format: string
        username:
          type: string
          format: string
        password:
          type: string
          format: string
        status:
          type: integer
          format: integer
      required:
        - name
        - country
        - currency
        - username
        - password
        - status
    banksRequestPatchBody:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/banksRequestPostBody'
    banksLoginRequestPostBody:
      type: object
      properties:
        username:
          type: string
          format: string
        password:
          type: string
          format: string
      required:
        - username
        - password
    transactionsRequestPostBody:
      type: object
      properties:
        from_user:
          type: integer
          format: integer
        recipient_id:
          type: integer
          format: integer
        amount:
          type: integer
          format: integer
        trx_code:
          type: string
          format: string
        init_trx_hash:
          type: string
          format: string
        nonce:
          type: string
          format: string
        timestamp_1:
          type: string
          format: string
      required:
        - from_user
        - recipient_id
        - amount
        - trx_code
        - init_trx_hash
        - nonce
        - timestamp_1
    transactioncollectionRequestPostBody:
      type: object
      properties:
        transaction_id:
          type: string
          format: string
        collection_token:
          type: string
          format: string
      required:
        - transaction_id
        - collection_token