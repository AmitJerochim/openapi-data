{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "API Gateway v1.0",
    "version" : "v1.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "Bearer" : [ ]
  } ],
  "tags" : [ {
    "name" : "Auth"
  }, {
    "name" : "Customer"
  }, {
    "name" : "Invoice"
  }, {
    "name" : "Supplier"
  }, {
    "name" : "Creditor Agreement"
  } ],
  "paths" : {
    "/portfolio/{portfolio}/Identity/Token" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Gets the berer token for authentication of other API Gateway calls",
        "operationId" : "Identity_GetToken",
        "consumes" : [ "text/plain", "application/json", "text/json", "application/*+json" ],
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "username" : "string",
                  "password" : "string"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : "{username=string, password=string}"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : "{username=string, password=string}"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : "{username=string, password=string}"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : { }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/BranchCode/" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get branch codes",
        "operationId" : "GetBranchCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/BranchCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific branch code",
        "operationId" : "GetBranchCodeByID",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BranchCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CountryCode" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get country codes",
        "operationId" : "GetCountryCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CountryCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific country code",
        "operationId" : "GetCountryCodeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CurrencyCode" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get currency codes",
        "operationId" : "GetCurrencyCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CurrencyCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific currency code",
        "operationId" : "GetCurrencyCodeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CustomerType" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get customer types",
        "operationId" : "GetCustomerType",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CustomerType/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific customer type",
        "operationId" : "GetCustomerTypeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/DistrictCode" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get district codes",
        "operationId" : "GetDistrictCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/DistrictCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific district code",
        "operationId" : "GetDistrictCodeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistrictCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/DocumentSendingProfile" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get document sending profiles",
        "operationId" : "GetDocumentSendingProfile",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/DocumentSendingProfile/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific document sending profile",
        "operationId" : "GetDocumentSendingProfileById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSendingProfile"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/LanguageCode" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get language codes",
        "operationId" : "GetLanguageCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/LanguageCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific language code",
        "operationId" : "GetLanguageCodeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/PaymentMethod" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get payment methods",
        "operationId" : "GetPaymentMethod",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/PaymentMethod/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific payment method",
        "operationId" : "GetPaymentMethodById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SalesPerson" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get sales persons",
        "operationId" : "GetSalesPerson",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SalesPerson/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific sales person",
        "operationId" : "GetSalesPersonById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesPerson"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/Users" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get users",
        "operationId" : "GetUsers",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/Users/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific user",
        "operationId" : "GetUsersById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/TransactionType" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get transaction types",
        "operationId" : "GetTransactionTypes",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/TransactionType/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific transaction types",
        "operationId" : "GetTransactionType",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SupplierType" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get supplier types",
        "operationId" : "GetSupplierTypes",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SupplierType/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific supplier type",
        "operationId" : "GetSupplierType",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/ChargeCode" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get charge codes",
        "operationId" : "GetChargeCodes",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/ChargeCode/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific charge code",
        "operationId" : "GetChargeCode",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeCode"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CreditorInvoiceStatus" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get creditor invoice statuses",
        "operationId" : "GetCreditorInvoiceStatuses",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/CreditorInvoiceStatus/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific creditor invoice status",
        "operationId" : "GetCreditorInvoiceStatus",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorInvoiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/InterestType" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get interest types",
        "operationId" : "GetInterestTypes",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/InterestType/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific interest type",
        "operationId" : "GetInterestType",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SupplierInvoiceType" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get supplier invoice types",
        "operationId" : "GetSupplierInvoiceTypes",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/SupplierInvoiceType/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific supplier invoice type",
        "operationId" : "GetSupplierInvoiceType",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierInvoiceType"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/TemplateContract" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get template contracts",
        "operationId" : "GetTemplateContracts",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/configuration/TemplateContract/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get a specific template contract",
        "operationId" : "GetTemplateContract",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateContract"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Invoices/ImportInvoice" : {
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Insert a new invoice, customer, invoice lines and additional invoice data",
        "operationId" : "PostInvoice",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "ImportInvoice"
                  },
                  "included" : [ {
                    "type" : "Customer",
                    "attributes" : {
                      "internalCustomerNumber" : "0",
                      "template" : null,
                      "companyNumber" : null,
                      "customerType" : null,
                      "responsible" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "zipCode" : null,
                      "city" : null,
                      "countryCode" : null,
                      "languageCode" : null,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "email" : null,
                      "einvoicingAddress" : null,
                      "vatCode" : null,
                      "overDueDebitType" : null,
                      "overDueInterestRate" : 0,
                      "overDueGraceDays" : 0,
                      "reminderGraceDays" : 0,
                      "reminderGroup" : null,
                      "documentSendingProfile" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "Invoice",
                    "attributes" : {
                      "internalInvoiceNumber" : "0",
                      "creditorAgreement" : null,
                      "customer" : null,
                      "externalCustomerNo" : null,
                      "externalInvoiceNumber" : null,
                      "externalInvoiceOCR" : null,
                      "dueDate" : "0001-01-01T00:00:00",
                      "partPayment" : false,
                      "partPaymentInterest" : 0,
                      "partPaymentInterestRate" : 0,
                      "partPaymentFrequency" : null,
                      "partPaymentMinAmount" : 0,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "currencyRate" : 0,
                      "netAmount" : 0,
                      "netAmountVATFree" : 0,
                      "vatAmount" : 0,
                      "rounding" : 0,
                      "totalAmount" : 0,
                      "vatCode" : null,
                      "vatPercent" : 0,
                      "privateLabel" : null,
                      "creditorInvoiceDate" : "0001-01-01T00:00:00",
                      "reminderGraceDays" : 0,
                      "overdueDebitType" : null,
                      "overdueInterestType" : null,
                      "overdueInterestRate" : 0,
                      "documentSendingProfile" : null,
                      "invoiceDescription" : null,
                      "factoringDDReceivingAccount" : null,
                      "factoringDDCustomerAccount" : null,
                      "invoiceFee" : 0,
                      "invoiceFeePercent" : 0,
                      "useInvoiceFeeFromImport" : false,
                      "creditFee" : 0,
                      "creditFeePercent" : 0,
                      "useCreditFeeFromImport" : false,
                      "reminderFee" : 0,
                      "reminderFeePercent" : 0,
                      "useReminderFeeFromImport" : false,
                      "creditScoring" : false,
                      "creditStatus" : 40,
                      "creditDecisionInfo" : null,
                      "paymentReference" : null,
                      "salesChannel" : null
                    }
                  }, {
                    "type" : "InvoiceLine",
                    "attributes" : {
                      "internalInvoiceLineId" : 0,
                      "articleNo" : null,
                      "description" : null,
                      "numberOfUnits" : 0,
                      "netPricePerUnit" : 0,
                      "vatAmount" : 0,
                      "totalAmount" : 0
                    }
                  }, {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "ImportInvoice"
                  },
                  "included" : [ {
                    "type" : "Customer",
                    "attributes" : {
                      "internalCustomerNumber" : "0",
                      "template" : null,
                      "companyNumber" : null,
                      "customerType" : null,
                      "responsible" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "zipCode" : null,
                      "city" : null,
                      "countryCode" : null,
                      "languageCode" : null,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "email" : null,
                      "einvoicingAddress" : null,
                      "vatCode" : null,
                      "overDueDebitType" : null,
                      "overDueInterestRate" : 0,
                      "overDueGraceDays" : 0,
                      "reminderGraceDays" : 0,
                      "reminderGroup" : null,
                      "documentSendingProfile" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "Invoice",
                    "attributes" : {
                      "internalInvoiceNumber" : "0",
                      "creditorAgreement" : null,
                      "customer" : null,
                      "externalCustomerNo" : null,
                      "externalInvoiceNumber" : null,
                      "externalInvoiceOCR" : null,
                      "dueDate" : "0001-01-01T00:00:00",
                      "partPayment" : false,
                      "partPaymentInterest" : 0,
                      "partPaymentInterestRate" : 0,
                      "partPaymentFrequency" : null,
                      "partPaymentMinAmount" : 0,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "currencyRate" : 0,
                      "netAmount" : 0,
                      "netAmountVATFree" : 0,
                      "vatAmount" : 0,
                      "rounding" : 0,
                      "totalAmount" : 0,
                      "vatCode" : null,
                      "vatPercent" : 0,
                      "privateLabel" : null,
                      "creditorInvoiceDate" : "0001-01-01T00:00:00",
                      "reminderGraceDays" : 0,
                      "overdueDebitType" : null,
                      "overdueInterestType" : null,
                      "overdueInterestRate" : 0,
                      "documentSendingProfile" : null,
                      "invoiceDescription" : null,
                      "factoringDDReceivingAccount" : null,
                      "factoringDDCustomerAccount" : null,
                      "invoiceFee" : 0,
                      "invoiceFeePercent" : 0,
                      "useInvoiceFeeFromImport" : false,
                      "creditFee" : 0,
                      "creditFeePercent" : 0,
                      "useCreditFeeFromImport" : false,
                      "reminderFee" : 0,
                      "reminderFeePercent" : 0,
                      "useReminderFeeFromImport" : false,
                      "creditScoring" : false,
                      "creditStatus" : 40,
                      "creditDecisionInfo" : null,
                      "paymentReference" : null,
                      "salesChannel" : null
                    }
                  }, {
                    "type" : "InvoiceLine",
                    "attributes" : {
                      "internalInvoiceLineId" : 0,
                      "articleNo" : null,
                      "description" : null,
                      "numberOfUnits" : 0,
                      "netPricePerUnit" : 0,
                      "vatAmount" : 0,
                      "totalAmount" : 0
                    }
                  }, {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "ImportInvoice"
                  },
                  "included" : [ {
                    "type" : "Customer",
                    "attributes" : {
                      "internalCustomerNumber" : "0",
                      "template" : null,
                      "companyNumber" : null,
                      "customerType" : null,
                      "responsible" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "zipCode" : null,
                      "city" : null,
                      "countryCode" : null,
                      "languageCode" : null,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "email" : null,
                      "einvoicingAddress" : null,
                      "vatCode" : null,
                      "overDueDebitType" : null,
                      "overDueInterestRate" : 0,
                      "overDueGraceDays" : 0,
                      "reminderGraceDays" : 0,
                      "reminderGroup" : null,
                      "documentSendingProfile" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "Invoice",
                    "attributes" : {
                      "internalInvoiceNumber" : "0",
                      "creditorAgreement" : null,
                      "customer" : null,
                      "externalCustomerNo" : null,
                      "externalInvoiceNumber" : null,
                      "externalInvoiceOCR" : null,
                      "dueDate" : "0001-01-01T00:00:00",
                      "partPayment" : false,
                      "partPaymentInterest" : 0,
                      "partPaymentInterestRate" : 0,
                      "partPaymentFrequency" : null,
                      "partPaymentMinAmount" : 0,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "currencyRate" : 0,
                      "netAmount" : 0,
                      "netAmountVATFree" : 0,
                      "vatAmount" : 0,
                      "rounding" : 0,
                      "totalAmount" : 0,
                      "vatCode" : null,
                      "vatPercent" : 0,
                      "privateLabel" : null,
                      "creditorInvoiceDate" : "0001-01-01T00:00:00",
                      "reminderGraceDays" : 0,
                      "overdueDebitType" : null,
                      "overdueInterestType" : null,
                      "overdueInterestRate" : 0,
                      "documentSendingProfile" : null,
                      "invoiceDescription" : null,
                      "factoringDDReceivingAccount" : null,
                      "factoringDDCustomerAccount" : null,
                      "invoiceFee" : 0,
                      "invoiceFeePercent" : 0,
                      "useInvoiceFeeFromImport" : false,
                      "creditFee" : 0,
                      "creditFeePercent" : 0,
                      "useCreditFeeFromImport" : false,
                      "reminderFee" : 0,
                      "reminderFeePercent" : 0,
                      "useReminderFeeFromImport" : false,
                      "creditScoring" : false,
                      "creditStatus" : 40,
                      "creditDecisionInfo" : null,
                      "paymentReference" : null,
                      "salesChannel" : null
                    }
                  }, {
                    "type" : "InvoiceLine",
                    "attributes" : {
                      "internalInvoiceLineId" : 0,
                      "articleNo" : null,
                      "description" : null,
                      "numberOfUnits" : 0,
                      "netPricePerUnit" : 0,
                      "vatAmount" : 0,
                      "totalAmount" : 0
                    }
                  }, {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "ImportInvoice"
                  },
                  "included" : [ {
                    "type" : "Customer",
                    "attributes" : {
                      "internalCustomerNumber" : "0",
                      "template" : null,
                      "companyNumber" : null,
                      "customerType" : null,
                      "responsible" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "zipCode" : null,
                      "city" : null,
                      "countryCode" : null,
                      "languageCode" : null,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "email" : null,
                      "einvoicingAddress" : null,
                      "vatCode" : null,
                      "overDueDebitType" : null,
                      "overDueInterestRate" : 0,
                      "overDueGraceDays" : 0,
                      "reminderGraceDays" : 0,
                      "reminderGroup" : null,
                      "documentSendingProfile" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "Invoice",
                    "attributes" : {
                      "internalInvoiceNumber" : "0",
                      "creditorAgreement" : null,
                      "customer" : null,
                      "externalCustomerNo" : null,
                      "externalInvoiceNumber" : null,
                      "externalInvoiceOCR" : null,
                      "dueDate" : "0001-01-01T00:00:00",
                      "partPayment" : false,
                      "partPaymentInterest" : 0,
                      "partPaymentInterestRate" : 0,
                      "partPaymentFrequency" : null,
                      "partPaymentMinAmount" : 0,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "currencyRate" : 0,
                      "netAmount" : 0,
                      "netAmountVATFree" : 0,
                      "vatAmount" : 0,
                      "rounding" : 0,
                      "totalAmount" : 0,
                      "vatCode" : null,
                      "vatPercent" : 0,
                      "privateLabel" : null,
                      "creditorInvoiceDate" : "0001-01-01T00:00:00",
                      "reminderGraceDays" : 0,
                      "overdueDebitType" : null,
                      "overdueInterestType" : null,
                      "overdueInterestRate" : 0,
                      "documentSendingProfile" : null,
                      "invoiceDescription" : null,
                      "factoringDDReceivingAccount" : null,
                      "factoringDDCustomerAccount" : null,
                      "invoiceFee" : 0,
                      "invoiceFeePercent" : 0,
                      "useInvoiceFeeFromImport" : false,
                      "creditFee" : 0,
                      "creditFeePercent" : 0,
                      "useCreditFeeFromImport" : false,
                      "reminderFee" : 0,
                      "reminderFeePercent" : 0,
                      "useReminderFeeFromImport" : false,
                      "creditScoring" : false,
                      "creditStatus" : 40,
                      "creditDecisionInfo" : null,
                      "paymentReference" : null,
                      "salesChannel" : null
                    }
                  }, {
                    "type" : "InvoiceLine",
                    "attributes" : {
                      "internalInvoiceLineId" : 0,
                      "articleNo" : null,
                      "description" : null,
                      "numberOfUnits" : 0,
                      "netPricePerUnit" : 0,
                      "vatAmount" : 0,
                      "totalAmount" : 0
                    }
                  }, {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportInvoiceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Invoices/{invoiceid}/InvoiceAdditionalDataById/{id}" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Get invoice additional data by id",
        "operationId" : "GetInvoiceAdditionalDataById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "Delete invoice additional data ",
        "operationId" : "DeleteInvoiceAdditionalDataById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/portfolio/{portfolio}/Invoices/{invoiceid}/InvoiceAdditionalData" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Get invoice additional data",
        "operationId" : "GetInvoiceAdditionalDataByInvoice",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice" ],
        "summary" : "Update an existing additional invoice data",
        "operationId" : "PutInvoiceAdditionalData",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Insert a new additional invoice data",
        "operationId" : "PostInvoiceAdditionalData",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : [ {
                    "type" : "InvoiceAdditionalData",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceAdditionalData"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/customers/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer",
        "operationId" : "GetCustomerById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/customers/" : {
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer",
        "operationId" : "Put",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null,
                      "AUID" : 0
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "AUID" : 0,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null,
                      "AUID" : 0
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "AUID" : 0,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null,
                      "AUID" : 0
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "AUID" : 0,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null,
                      "AUID" : 0
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "AUID" : 0,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer",
        "operationId" : "PostCustomers",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customers",
                    "attributes" : {
                      "expireDate13B" : null,
                      "licenseNumber13B" : null,
                      "overDueFeeInterestRate" : 0,
                      "overDueFeeDays" : 0,
                      "overDueFeeAmount" : 0,
                      "overDueFeeExtralineCode" : null,
                      "parentCompany" : null,
                      "parent" : null,
                      "creditScore" : null,
                      "estYear" : null,
                      "bankCode" : null,
                      "statusCode" : null,
                      "riskCode" : null,
                      "reminderGroup" : 1,
                      "sundry" : null,
                      "marcoRef" : null,
                      "parentNumber" : null,
                      "extra" : null,
                      "invoiceAddressReminder" : 0,
                      "sendInvoiceBy" : 0,
                      "invoiceConsolidateCode" : 0,
                      "vatCode13B" : 0,
                      "latestInvoiceNumber" : 0,
                      "includeInIncrease" : 0,
                      "badDebtTable2" : null,
                      "customerTypeExternal" : null,
                      "guarantorReminderFromNo" : 0,
                      "externalCustomerNo" : null,
                      "stopped" : false,
                      "scrambled" : false,
                      "registrationDate" : null,
                      "restrictedAccess" : false,
                      "transactionType" : null,
                      "documentSendingProfile" : null,
                      "eInvoicingAddress" : null,
                      "collection" : 0,
                      "dunsNumber" : null,
                      "manager" : null,
                      "timestamp" : null,
                      "badDebtStatus" : null,
                      "badDebtText4" : null,
                      "badDebtText3" : null,
                      "badDebtText2" : null,
                      "badDebtText1" : null,
                      "badDebtTable4" : null,
                      "badDebtTable3" : null,
                      "badDebtTable1" : null,
                      "latestInvoiceDate" : null,
                      "turnoverThisYear" : 0,
                      "bankgiro" : null,
                      "paymentMethod" : null,
                      "currencyCode" : null,
                      "languageCode" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "salesPerson" : null,
                      "responsibel" : null,
                      "customerStatus" : null,
                      "customerType" : null,
                      "employeeNumber" : null,
                      "companyNumber" : null,
                      "postgiro" : null,
                      "turnoverLastYear" : 0,
                      "bankAccount" : null,
                      "telephoneWork" : null,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "creditLimit" : 0,
                      "reminderGraceDays" : 0,
                      "overDueGraceDays" : 0,
                      "overDueInterestRate" : 0,
                      "overDueDebitType" : null,
                      "reminderFee" : 0,
                      "invoiceFee" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneHome" : null,
                      "templateId" : null
                    }
                  },
                  "included" : [ {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : true,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }, {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "AddressCode" : null,
                      "Name" : null,
                      "Address1" : null,
                      "Address2" : null,
                      "Address3" : null,
                      "City" : null,
                      "ZipCode" : null,
                      "CountryCode" : null,
                      "CustomerType" : null,
                      "MarcoRef" : null
                    }
                  }, {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "MarcoRef" : null,
                      "SendInvoiceBy" : 0,
                      "Email" : null,
                      "Telefax" : null,
                      "CountryCode" : null,
                      "ZipCode" : null,
                      "EInvoicingAddress" : null,
                      "City" : null,
                      "Address2" : null,
                      "Address1" : null,
                      "Name" : null,
                      "AddressCode" : null,
                      "Address3" : null,
                      "officialAddress" : null
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerBankAccount/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer bank account",
        "operationId" : "GetCustomerCustomerBankAccountById",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerBankAccount" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer bank accounts",
        "operationId" : "GetCustomerBankAccount",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer bank account",
        "operationId" : "PutCustomerBankAccount",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer bank account",
        "operationId" : "PostCustomerBankAccount",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "cleringNo" : null,
                      "bankAccount" : null,
                      "default" : false,
                      "description" : null,
                      "iban" : null,
                      "ibanPrint" : null,
                      "timestamp" : null,
                      "extra1" : null,
                      "extra2" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "example" : {
                "data" : {
                  "type" : "customerBankAccounts",
                  "attributes" : {
                    "bank" : null,
                    "cleringNo" : null,
                    "bankAccount" : null,
                    "default" : false,
                    "description" : null,
                    "iban" : null,
                    "ibanPrint" : null,
                    "timestamp" : null,
                    "extra1" : null,
                    "extra2" : null
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerBankAccount"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerid}/CustomerInstallationAddress/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer installation address",
        "operationId" : "GetCustomerInstallationAddressById",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerid}/CustomerInstallationAddress" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer installation addresses",
        "operationId" : "GetCustomerInstallationAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer installation address",
        "operationId" : "PutCustomerInstallationAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null,
                      "aUID" : 0
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null,
                      "aUID" : 0
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null,
                      "aUID" : 0
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null,
                      "aUID" : 0
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer installation address",
        "operationId" : "PostCustomerInstallationAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInstallationAddress",
                    "attributes" : {
                      "addressCode" : null,
                      "name" : null,
                      "address1" : null,
                      "address2" : null,
                      "address3" : null,
                      "city" : null,
                      "zipCode" : null,
                      "countryCode" : null,
                      "customerType" : null,
                      "marcoRef" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInstallationAddress"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerid}/CustomerInvoiceAddress/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer invoice address",
        "operationId" : "GetCustomerInvoiceAddressbyId",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerid}/CustomerInvoiceAddress" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer invoice addresses",
        "operationId" : "GetCustomerInvoiceAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer invoice address",
        "operationId" : "PutCustomerInvoiceAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "aUID" : 0,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "aUID" : 0,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "aUID" : 0,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "aUID" : 0,
                      "officialAddress" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer invoice address",
        "operationId" : "PostCustomerInvoiceAddress",
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "officialAddress" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "customerInvoiceAddress",
                    "attributes" : {
                      "marcoRef" : null,
                      "sendInvoiceBy" : 0,
                      "email" : null,
                      "telefax" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "eInvoicingAddress" : null,
                      "city" : null,
                      "address2" : null,
                      "address1" : null,
                      "name" : null,
                      "addressCode" : null,
                      "address3" : null,
                      "officialAddress" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerProperty/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer propery",
        "operationId" : "GetCustomerPropertyByPropertyName",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete customer property ",
        "operationId" : "DeleteCustomerProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerProperty" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer's properties",
        "operationId" : "GetCustomerProperties",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProperty"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer property",
        "operationId" : "PutCustomerProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer property",
        "operationId" : "PostCustomerProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInvoiceAddress"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerKYCAnswer/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a specific customer kyc answer",
        "operationId" : "GetCustomerKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete customer kyc answer ",
        "operationId" : "DeleteCustomerKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/{customerId}/CustomerKYCAnswer" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer's kyc answers",
        "operationId" : "GetCustomerKYCAnswers",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer kyc answer",
        "operationId" : "PutCustomerKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Insert a new customer kyc answer",
        "operationId" : "PostCustomerKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Customers/CustomerExposureFactoring" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get a customer exposure factoring",
        "operationId" : "GetCustomerExposureFactoring",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyNumber",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExposureFactoringQuery"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{id}" : {
      "get" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Get a specific creditor agreement",
        "operationId" : "GetCAById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/" : {
      "put" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Update an existing creditor agreement",
        "operationId" : "PutCreditorAgreement",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Insert a new creditor agreement",
        "operationId" : "PostCreditorAgreement",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreement",
                    "attributes" : {
                      "creditorAgreementID" : 0,
                      "description" : null,
                      "creditor" : null,
                      "startDate" : null,
                      "endDate" : null,
                      "writeOffCharge" : 0,
                      "writeOffOverdueInterest" : 0,
                      "scheduledPaymentTerms" : 0,
                      "partPaymentEnabled" : 0,
                      "partPaymentDefaultTemplate" : null,
                      "regressEnabled" : 0,
                      "regressNumberOfDays" : 0,
                      "regressMinimumAmount" : 0,
                      "collectionEnabled" : 0,
                      "collectionNumberOfDays" : 0,
                      "collectionMinimumAmount" : 0,
                      "currencyCode" : null,
                      "graceDaysReminder" : 0,
                      "graceDaysOverdueInterest" : 0,
                      "overdueInterestRate" : 0,
                      "interestType" : null,
                      "overdueInterestType" : null,
                      "overdueDebitType" : 0,
                      "interestBaseDate" : null,
                      "interestBase" : 0,
                      "interestMargin" : 0,
                      "interestAdjustment" : 0,
                      "annualFee" : 0,
                      "reconciliationAccount" : null,
                      "borrowingBaseAmount" : 0,
                      "balanceAccountAmount" : 0,
                      "limitAmount" : 0,
                      "limitRemainingAmount" : 0,
                      "paymentToleranceAmount" : 0,
                      "directPaymentPercent" : 0,
                      "reminderGroup" : 0,
                      "isActive" : true,
                      "transactionType" : null,
                      "productTemplate" : 0,
                      "productType" : 0,
                      "numberOfReminders" : 0,
                      "creditorInvoiceType" : null,
                      "paymentMethod" : null,
                      "numberOfRoundingDecimalsOfFees" : 0
                    }
                  },
                  "included" : [ {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "paymentDateDay" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }, {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "creditorAgreementID" : 0,
                      "portfolio" : null,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/CreditorAgreementTemplateByProductId/{id}" : {
      "get" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Get a specific creditor agreement template",
        "operationId" : "GetCATemplateById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreement"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsSharedCharges/{id}" : {
      "get" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Get a specific creditor agreement shared charge",
        "operationId" : "GetSharedChargeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsSharedCharges" : {
      "put" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Update an existing creditor agreement shared charge",
        "operationId" : "PutCreditorAgreementSharedCharges",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Insert a new creditor agreement shared charge",
        "operationId" : "PostCreditorAgreementSharedCharges",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementSharedCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "sharePercentage" : 0,
                      "selfInvoiceStatus" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsReminderCharges/{id}" : {
      "get" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Get a specific creditor agreement reminder charge",
        "operationId" : "GetReminderChargeById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsReminderCharges" : {
      "put" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Update an existing creditor agreement reminder charge",
        "operationId" : "PutCreditorAgreementReminderCharges",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Insert a new creditor agreement reminder charge",
        "operationId" : "PostCreditorAgreementReminderCharges",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementReminderCharges",
                    "attributes" : {
                      "auid" : 0,
                      "chargeCode" : null,
                      "amount" : 0,
                      "vatCode" : 0
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsPaymentCriteria/{id}" : {
      "get" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Get a specific creditor agreement payment criteria",
        "operationId" : "GetPaymentCriteriaById",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/CreditorAgreements/{agreementId}/CreditorAgreementsPaymentCriteria" : {
      "put" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Update an existing creditor agreement payment criteria",
        "operationId" : "PutCreditorAgreementsPaymentCriteria",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Creditor Agreement" ],
        "summary" : "Insert a new creditor agreement payment criteria",
        "operationId" : "PostCreditorAgreementsPaymentCriteria",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "CreditorAgreementPaymentCriteria",
                    "attributes" : {
                      "auid" : 0,
                      "paymentDateDay" : 0
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{id}" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get a specific supplier",
        "operationId" : "GetSupplier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/" : {
      "put" : {
        "tags" : [ "Supplier" ],
        "summary" : "Update an existing supplier",
        "operationId" : "PutSupplier",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Supplier" ],
        "summary" : "Insert a new supplier",
        "operationId" : "PostSupplier",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "suppliers",
                    "attributes" : {
                      "payWhenPaidFixed" : 0,
                      "bankAccountName" : null,
                      "annuityContactPerson" : null,
                      "capitalizedContactPerson" : null,
                      "annuityCommissionReceiver" : null,
                      "capitalizedCommissionReceiver" : null,
                      "capitalizedPercentageRent" : 0,
                      "payWhenPaidVariable" : 0,
                      "capitalizedType" : null,
                      "rentSecondaryType" : null,
                      "percentageRentPrimary2" : 0,
                      "rentPrimaryType2" : null,
                      "percentageRentPrimary1" : 0,
                      "rentPrimaryType1" : null,
                      "selfInvoicing" : 0,
                      "supplierChannel" : null,
                      "percentageRentSecondary" : 0,
                      "turnoverLastYear" : 0,
                      "whenSelfInvoicing" : 0,
                      "privateLabel" : 0,
                      "invoiceLayoutSI_ID" : null,
                      "iimestamp" : null,
                      "mandateSignatureDate" : null,
                      "lastRunDate" : null,
                      "taxPaidAtPaymRec" : null,
                      "nAFCode" : null,
                      "rCSNumber" : null,
                      "additionalDaysPwB" : 0,
                      "shareCapitalAmount" : 0,
                      "calcParamPercWalkaway" : 0,
                      "calcParamPercChurn" : 0,
                      "calculationMethodWalkaway" : null,
                      "calculationMethodChurn" : null,
                      "settlementReasonWalkaway" : null,
                      "settlementReasonChurn" : null,
                      "linkedToCustomer" : null,
                      "legalForm" : null,
                      "turnoverthisYear" : 0,
                      "balance" : 0,
                      "creditLimitDate" : null,
                      "countryCode" : null,
                      "zipCode" : null,
                      "city" : null,
                      "address3" : null,
                      "address2" : null,
                      "address1" : null,
                      "sortName" : null,
                      "languageCode" : null,
                      "name" : null,
                      "contactPerson" : null,
                      "responsibel" : null,
                      "supplierStatus" : null,
                      "supplierType" : null,
                      "companyNumber" : null,
                      "supplierAgreement" : 0,
                      "currencyCode" : null,
                      "paymentMethod" : null,
                      "bankgiro" : null,
                      "creditLimit" : 0,
                      "branchCode" : null,
                      "countyCode" : null,
                      "districtCode" : null,
                      "bank" : null,
                      "vatNumber" : null,
                      "vatCode" : 0,
                      "internet" : null,
                      "email" : null,
                      "telex" : null,
                      "telefax" : null,
                      "telephoneMobil" : null,
                      "telephoneExt" : null,
                      "telephoneWork" : null,
                      "telephoneHome" : null,
                      "bankAccount" : null,
                      "postgiro" : null,
                      "invoiceLayoutCommissionSI_ID" : null,
                      "transactionType" : null,
                      "externalSupplierNo" : null
                    }
                  },
                  "included" : [ {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : true,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }, {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }, {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierBankAccount/{id}" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get a specific supplier bank account",
        "operationId" : "GetSupplierBankAccountByID",
        "parameters" : [ {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierBankAccount" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get supplier bank accounts",
        "operationId" : "GetSupplierBankAccount",
        "parameters" : [ {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Supplier" ],
        "summary" : "Update an existing supplier bank account",
        "operationId" : "PutSupplierBankAccount",
        "parameters" : [ {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "data" : {
                "type" : "supplierBankAccounts",
                "attributes" : {
                  "id" : 0,
                  "bank" : null,
                  "clearingNo" : null,
                  "bankAccount" : null,
                  "iban" : null,
                  "defaultAccount" : false,
                  "description" : null,
                  "ibanPrint" : null,
                  "contractFinancingAccount" : false
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "portfolio" : null,
                      "supplier" : null,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "id" : 0,
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Supplier" ],
        "summary" : "Insert a new supplier bank account",
        "operationId" : "PostSupplierBankAccount",
        "parameters" : [ {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "supplierBankAccounts",
                    "attributes" : {
                      "bank" : null,
                      "clearingNo" : null,
                      "bankAccount" : null,
                      "iban" : null,
                      "defaultAccount" : false,
                      "description" : null,
                      "ibanPrint" : null,
                      "contractFinancingAccount" : false
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierBankAccount"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierProperty/{id}" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get a specific supplier property",
        "operationId" : "GetSupplierPropertyByPropertyName",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Supplier" ],
        "summary" : "Delete supplier property ",
        "operationId" : "DeleteSupplierProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierProperty" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get supplier's properties",
        "operationId" : "GetSupplierProperties",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Supplier" ],
        "summary" : "Update an existing supplier property",
        "operationId" : "PutSupplierProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "auid" : 0,
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Supplier" ],
        "summary" : "Insert a new supplier property",
        "operationId" : "PostSupplierProperty",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientProperties",
                    "attributes" : {
                      "propertyName" : null,
                      "propertyValue" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierKYCAnswer/{id}" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get a specific supplier property",
        "operationId" : "GetSupplierKYCByPropertyName",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierProperty"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Supplier" ],
        "summary" : "Delete supplier kyc answer ",
        "operationId" : "DeleteSupplierKYC",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/portfolio/{portfolio}/suppliers/{supplierId}/SupplierKYCAnswer" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get suppliers's kyc answers",
        "operationId" : "GetSupplierKYCAnswers",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Supplier" ],
        "summary" : "Update an existing supplier kyc answer",
        "operationId" : "PutSupplierKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "auid" : 0,
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Supplier" ],
        "summary" : "Insert a new supplier kyc answer",
        "operationId" : "PostSupplierKYCAnswer",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "data" : {
                    "type" : "clientKYCAnswer",
                    "attributes" : {
                      "questionId" : null,
                      "answer" : null,
                      "description" : null
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierKYCAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/{portfolio}/Suppliers/SupplierExposureFactoring" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get supplier exposure factoring",
        "operationId" : "GetSupplierExposureFactoring",
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyNumber",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierExposureFactoringQuery"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Customer" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "customer" : {
            "type" : "string",
            "description" : "Customer identity"
          },
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "companyNumber" : {
            "type" : "string",
            "description" : "Company identity"
          },
          "employeeNumber" : {
            "type" : "string",
            "description" : "Employee number. Information purpose"
          },
          "customerType" : {
            "type" : "string",
            "description" : "Customer type"
          },
          "customerStatus" : {
            "type" : "string",
            "description" : "Obsolete. Is always set to '-'"
          },
          "responsibel" : {
            "type" : "string",
            "description" : "Responsible user at the portfolio owner"
          },
          "salesPerson" : {
            "type" : "string",
            "description" : "Sales person"
          },
          "contactPerson" : {
            "type" : "string",
            "description" : "Contact person at the customer side"
          },
          "name" : {
            "type" : "string",
            "description" : "Customer Name"
          },
          "sortName" : {
            "type" : "string",
            "description" : "Sort name. Is normally the same as Name"
          },
          "address1" : {
            "type" : "string",
            "description" : "Address field 1"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address field 2"
          },
          "address3" : {
            "type" : "string",
            "description" : "Address field 3"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Zip Code"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country Code"
          },
          "languageCode" : {
            "type" : "string",
            "description" : "Language Code"
          },
          "currencyCode" : {
            "type" : "string",
            "description" : "Currency Code"
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Payment Method"
          },
          "bankgiro" : {
            "type" : "string",
            "description" : "Bank Giro"
          },
          "postgiro" : {
            "type" : "string",
            "description" : "Post Giro"
          },
          "bankAccount" : {
            "type" : "string",
            "description" : "Bank Account"
          },
          "telephoneHome" : {
            "type" : "string",
            "description" : "Home telephone number"
          },
          "telephoneWork" : {
            "type" : "string",
            "description" : "Work telephone number"
          },
          "telephoneExt" : {
            "type" : "string",
            "description" : "Work telephone extension"
          },
          "telephoneMobil" : {
            "type" : "string",
            "description" : "Mobile telephone number"
          },
          "telefax" : {
            "type" : "string",
            "description" : "Fax number"
          },
          "telex" : {
            "type" : "string",
            "description" : "Telex identity"
          },
          "email" : {
            "type" : "string",
            "description" : "E-mail address."
          },
          "internet" : {
            "type" : "string",
            "description" : "Web site address"
          },
          "vatCode" : {
            "type" : "integer",
            "description" : "VAT code",
            "format" : "int32"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "VAT number"
          },
          "bank" : {
            "type" : "string",
            "description" : "Obsolete. Replaced by sub-table CustomerBankAccount."
          },
          "districtCode" : {
            "type" : "string",
            "description" : "District code"
          },
          "countyCode" : {
            "type" : "string",
            "description" : "Country Code"
          },
          "branchCode" : {
            "type" : "string",
            "description" : "Branch Code"
          },
          "invoiceFee" : {
            "type" : "number",
            "description" : "Not used. Default Invoice fee for contracts is set via selected contract type and/or payment method",
            "format" : "double"
          },
          "reminderFee" : {
            "type" : "number",
            "description" : "Not used. Reminder fee is set at reminder text level",
            "format" : "double"
          },
          "overDueDebitType" : {
            "type" : "string",
            "description" : "Overdue Interest calculation method.0=Nominal interest + additional %;1=Defined %;2=Default Value interest table rate + additional %;3=Fee and Interest means that a fee is charged up to a selected number of days and interest thereafter for late payments. Used as suggested value when new contracts are registered"
          },
          "overDueInterestRate" : {
            "type" : "number",
            "description" : "Overdue interest rate. Interacts with OverDue Debit Type. Defines either the additional % for methods 0 & 2, or the actual % to be used for method 1. Used as suggested value when new contracts are registered.",
            "format" : "float"
          },
          "overDueGraceDays" : {
            "type" : "integer",
            "description" : "Overdue grace days. Extra Day span before selected when reminder proposal is created. I.e. this day value is added to the due date during the reminder processing, when invoices are processed and evaluated. Used as suggested value when new contracts are registered",
            "format" : "int32"
          },
          "reminderGraceDays" : {
            "type" : "integer",
            "description" : "Reminder grace days. Extra Day span before selected when reminder proposal is created. I.e. this day value is added to the due date during the reminder processing, when invoices are processed and evaluated. Used as suggested value when new contracts are registered.",
            "format" : "int32"
          },
          "creditLimit" : {
            "type" : "number",
            "description" : "Can be used to limit the contract amounts that are allowed for a customer",
            "format" : "double"
          },
          "creditLimitDate" : {
            "type" : "string",
            "description" : "Can be used to restrict contract approval after the defined date",
            "format" : "date-time"
          },
          "balance" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "turnoverThisYear" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "turnoverLastYear" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "latestInvoiceDate" : {
            "type" : "string",
            "description" : "Obsolete",
            "format" : "date-time"
          },
          "latestInvoiceNumber" : {
            "type" : "integer",
            "description" : "Obsolete",
            "format" : "int32"
          },
          "invoiceConsolidateCode" : {
            "type" : "integer",
            "description" : "Obsolete",
            "format" : "int32"
          },
          "sendInvoiceBy" : {
            "type" : "integer",
            "description" : "Obsolete",
            "format" : "int32"
          },
          "invoiceAddressReminder" : {
            "type" : "integer",
            "description" : "Invoice address reminder. Facilitates customer unique reminder processing. Requires adaption before use. 0=Send to Customer; 1=Send to Invoice Address",
            "format" : "int32"
          },
          "extra" : {
            "type" : "string",
            "description" : "Extra. Only applicable if CustomerModification AVR/CAB is in use (normally not used). This will expose the Extra field in the Customer forms where an identification code given to the customer used for Direct Debit (RID) to Bank shall be entered"
          },
          "parentNumber" : {
            "type" : "string",
            "description" : "Parent number for risk reporting purposes. Has only informative purpose"
          },
          "marcoRef" : {
            "type" : "string",
            "description" : "The Business Partner number at the external part that ProFinance interacts with. Normally set automatically by the CreateContract interface"
          },
          "sundry" : {
            "type" : "string",
            "description" : "Sundry. Optional text field named sundry in GUI. A field that can be used arbitrarily"
          },
          "reminderGroup" : {
            "type" : "integer",
            "description" : "Reminder group. Reminder group for a specific customer",
            "format" : "int32"
          },
          "riskCode" : {
            "type" : "string",
            "description" : "Risk code. Risk code set by using the sub-form risk classification in the customer registration/maintenance routines"
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code. Status code set by using the sub-form risk classification in the customer registration/maintenance routines"
          },
          "bankCode" : {
            "type" : "string",
            "description" : "Bank code set by using the sub-form risk classification in the customer registration/maintenance routines"
          },
          "estYear" : {
            "type" : "string",
            "description" : "Year of establishment set by using the sub-form risk classification in the customer registration/maintenance routines"
          },
          "creditScore" : {
            "type" : "string",
            "description" : "Credit score calculated by using the sub-form risk classification in the customer registration/maintenance routines"
          },
          "parent" : {
            "type" : "string",
            "description" : "Not used"
          },
          "parentCompany" : {
            "type" : "string",
            "description" : "Refers to another customer that has been linked to the current customer. I.e. the parent customer that owns the current customer. Used by the frame agreement concept to define a linked parent company"
          },
          "overDueFeeExtralineCode" : {
            "type" : "string",
            "description" : "Overdue fee extra line code. Only applicable if OverDue Debit Type=3. Extra line that shall be used when overdue fee is created."
          },
          "overDueFeeAmount" : {
            "type" : "number",
            "description" : "Overdue fee amount. Only applicable if OverDue Debit Type=3. Overdue fee amount to be invoiced",
            "format" : "double"
          },
          "overDueFeeDays" : {
            "type" : "integer",
            "description" : "\"Overdue fee days. Only applicable if Overdue Debit Type=3. Number of days between due date and payment date where only a fee is to be created. Which fee that is used is defined as overdue fee at customer level. If this day span is exceeded, overdue interest will also be calculated from due date + (Fee - Numberofdays) up to payment date by using OverDue Fee Interest Rate. Used as suggested value when new contracts are registered",
            "format" : "int32"
          },
          "overDueFeeInterestRate" : {
            "type" : "number",
            "description" : "Overdue fee interest rate. Only applicable if Overdue Debit Type=3. Overdue interest rate that will be used after OverDue Fee Days has been exceeded. Used as suggested value when new contracts are registered",
            "format" : "float"
          },
          "licenseNumber13B" : {
            "type" : "string",
            "description" : "13B license number. The customer’s VAT 13B License Number. Only applicable/visible in specific countries"
          },
          "expireDate13B" : {
            "type" : "string",
            "description" : "13B expire date. Displays the date the VAT 13 exempt expires. Only applicable/visible in specific countries",
            "format" : "date-time"
          },
          "vatCode13B" : {
            "type" : "integer",
            "description" : "Displays the date the VAT 13 exempt expires. Only applicable/visible in specific countries.",
            "format" : "int32"
          },
          "includeInIncrease" : {
            "type" : "integer",
            "description" : "Defines if the Include in Increase Calculation should be automatically enabled/checked, when new contracts are entered for the specific customer. 0=No; 1=Yes",
            "format" : "int32"
          },
          "badDebtTable1" : {
            "type" : "string",
            "description" : "Bad debt table 1. Bad debt classification item 1. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtTable2" : {
            "type" : "string",
            "description" : "Bad debt table 2. Bad debt classification item 2. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtTable3" : {
            "type" : "string",
            "description" : "Bad debt table 3. Bad debt classification item 3. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtTable4" : {
            "type" : "string",
            "description" : "Bad debt table 4. Bad debt classification item 4. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtText1" : {
            "type" : "string",
            "description" : "Bad debt text 1. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtText2" : {
            "type" : "string",
            "description" : "Bad debt text 2. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtText3" : {
            "type" : "string",
            "description" : "Bad debt text 3. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtText4" : {
            "type" : "string",
            "description" : "Bad debt text 4. Is set by using the bad debt maintenance routine to classify the customer in different ways"
          },
          "badDebtStatus" : {
            "type" : "string",
            "description" : "Bad debt status for the customer. Is set by using the bad debt maintenance routine."
          },
          "timestamp" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "System field. Used to handle concurrent updates of a customer record",
            "format" : "byte"
          },
          "manager" : {
            "type" : "string",
            "description" : "Obsolete"
          },
          "dunsNumber" : {
            "type" : "string",
            "description" : "Duns number. Only relevant when the ProFront module is installed. Used for storage of the customer's identity at Dun & Bradstreet if applicable"
          },
          "collection" : {
            "type" : "integer",
            "description" : "Collection. Is automatically set if any customer invoice is included in the collection Id interface (B1 - Import Collection Data) execution",
            "format" : "int32"
          },
          "eInvoicingAddress" : {
            "type" : "string",
            "description" : " Customer E-Invoicing identifier. Is mandatory of Document Sending Profile is pre-set to use E-Invoicing"
          },
          "documentSendingProfile" : {
            "type" : "string",
            "description" : "Document sending profile. The document sending profile that the customer will normally use to receive invoices, reminders and other documents"
          },
          "transactionType" : {
            "type" : "string",
            "description" : "Transaction type. Transaction Type for booking of e.g. On Account Payments. Is set at initial registration with transaction type set on the selected Customer Type"
          },
          "restrictedAccess" : {
            "type" : "boolean",
            "description" : "Restricted access. Defines if the customer has been set as restricted access. 0=No; 1=Yes. If=1 then only users that have the restricted access options set as active will be able to see the customer. If the user does not have restricted access, then the customer will not be visible anywhere for that user"
          },
          "registrationDate" : {
            "type" : "string",
            "description" : "Registration date. The date when the customer was initially registered",
            "format" : "date-time"
          },
          "scrambled" : {
            "type" : "boolean",
            "description" : "Scrambled. Defines if the customer has been scrambled. 0=No; 1=Yes. Refers to specific customer fields that have been defined for scrambling."
          },
          "stopped" : {
            "type" : "boolean",
            "description" : ""
          },
          "externalCustomerNo" : {
            "type" : "string",
            "description" : "External Customer Number"
          },
          "guarantorReminderFromNo" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32"
          },
          "customerTypeExternal" : {
            "type" : "string",
            "description" : ""
          },
          "bankAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerBankAccount"
            }
          },
          "installationAddresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerInstallationAddress"
            }
          },
          "invoiceAddresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerInvoiceAddress"
            }
          },
          "customerProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProperty"
            }
          },
          "customerKYCAnswers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerKYCAnswer"
            }
          }
        }
      },
      "SalesPerson" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "portfolio" : {
            "type" : "string"
          },
          "salesPerson" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "positionCode" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "address3" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "telephoneHome" : {
            "type" : "string"
          },
          "telephoneWork" : {
            "type" : "string"
          },
          "telephoneExt" : {
            "type" : "string"
          },
          "telephoneMobil" : {
            "type" : "string"
          },
          "telefax" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "districtCode" : {
            "type" : "string"
          },
          "internet" : {
            "type" : "string"
          }
        }
      },
      "Users" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "user" : {
            "type" : "string"
          },
          "portfolio" : {
            "type" : "string"
          },
          "passWord" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "type" : "string"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "address3" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "telephoneHome" : {
            "type" : "string"
          },
          "telephoneWork" : {
            "type" : "string"
          },
          "telephoneExt" : {
            "type" : "string"
          },
          "telephoneMobil" : {
            "type" : "string"
          },
          "telefax" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "districtCode" : {
            "type" : "string"
          },
          "category" : {
            "type" : "integer",
            "format" : "int32"
          },
          "exchangeProfile" : {
            "type" : "string"
          },
          "pwChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pwLastFailedLogin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pwNumConsecutiveFailedLogin" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pwMaximumPasswordAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdByUser" : {
            "type" : "string"
          },
          "createdDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "usid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userGroup" : {
            "type" : "string"
          },
          "responsibleRange" : {
            "type" : "string"
          },
          "billingAgent" : {
            "type" : "integer",
            "format" : "int32"
          },
          "baTeamLeader" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cashCollector" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ccTeamLeader" : {
            "type" : "integer",
            "format" : "int32"
          },
          "baTeamLeaderUser" : {
            "type" : "string"
          },
          "ccTeamLeaderUser" : {
            "type" : "string"
          },
          "useLandingPage" : {
            "type" : "boolean"
          },
          "isDomainUser" : {
            "type" : "boolean"
          },
          "domain" : {
            "type" : "string"
          },
          "domainUserName" : {
            "type" : "string"
          },
          "isDefaultCompany" : {
            "type" : "boolean"
          },
          "privilegedUser" : {
            "type" : "boolean"
          },
          "scramble" : {
            "type" : "boolean"
          }
        }
      },
      "ImportInvoiceDTO" : {
        "type" : "object",
        "properties" : {
          "auid" : {
            "format" : "uuid",
            "type" : "string"
          },
          "customer" : {
            "$ref" : "#/components/schemas/CustomerDTO"
          }
        }
      },
      "CustomerDTO" : {
        "type" : "object",
        "properties" : {
          "internalCustomerNumber" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string"
          },
          "companyNumber" : {
            "type" : "string"
          },
          "customerType" : {
            "type" : "string"
          },
          "responsible" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "address3" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "officialAddress" : {
            "type" : "boolean"
          },
          "languageCode" : {
            "type" : "string"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "einvoicingAddress" : {
            "type" : "string"
          },
          "vatCode" : {
            "type" : "string"
          },
          "overDueDebitType" : {
            "type" : "string"
          },
          "overDueInterestRate" : {
            "format" : "float",
            "type" : "number"
          },
          "overDueGraceDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "reminderGraceDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "reminderGroup" : {
            "type" : "string"
          },
          "documentSendingProfile" : {
            "type" : "string"
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoiceDTO"
          }
        }
      },
      "InvoiceDTO" : {
        "type" : "object",
        "properties" : {
          "internalInvoiceNumber" : {
            "type" : "string"
          },
          "creditorAgreement" : {
            "type" : "string"
          },
          "customer" : {
            "type" : "string"
          },
          "externalCustomerNo" : {
            "type" : "string"
          },
          "externalInvoiceNumber" : {
            "type" : "string"
          },
          "externalInvoiceOCR" : {
            "type" : "string"
          },
          "dueDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "partPayment" : {
            "type" : "boolean"
          },
          "partPaymentInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "partPaymentInterestRate" : {
            "format" : "double",
            "type" : "number"
          },
          "partPaymentFrequency" : {
            "type" : "string"
          },
          "partPaymentMinAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "paymentMethod" : {
            "type" : "string"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "currencyRate" : {
            "format" : "double",
            "type" : "number"
          },
          "netAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "netAmountVATFree" : {
            "format" : "double",
            "type" : "number"
          },
          "vatAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "rounding" : {
            "format" : "double",
            "type" : "number"
          },
          "totalAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "vatCode" : {
            "type" : "string"
          },
          "vatPercent" : {
            "format" : "float",
            "type" : "number"
          },
          "privateLabel" : {
            "type" : "string"
          },
          "creditorInvoiceDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "reminderGraceDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "overdueDebitType" : {
            "type" : "string"
          },
          "overdueInterestType" : {
            "type" : "string"
          },
          "overdueInterestRate" : {
            "format" : "double",
            "type" : "number"
          },
          "documentSendingProfile" : {
            "type" : "string"
          },
          "invoiceDescription" : {
            "type" : "string"
          },
          "factoringDDReceivingAccount" : {
            "type" : "string"
          },
          "factoringDDCustomerAccount" : {
            "type" : "string"
          },
          "invoiceFee" : {
            "format" : "double",
            "type" : "number"
          },
          "invoiceFeePercent" : {
            "format" : "double",
            "type" : "number"
          },
          "useInvoiceFeeFromImport" : {
            "type" : "boolean"
          },
          "creditFee" : {
            "format" : "double",
            "type" : "number"
          },
          "creditFeePercent" : {
            "format" : "double",
            "type" : "number"
          },
          "useCreditFeeFromImport" : {
            "type" : "boolean"
          },
          "reminderFee" : {
            "format" : "double",
            "type" : "number"
          },
          "reminderFeePercent" : {
            "format" : "double",
            "type" : "number"
          },
          "useReminderFeeFromImport" : {
            "type" : "boolean"
          },
          "creditScoring" : {
            "type" : "boolean"
          },
          "creditDecisionInfo" : {
            "type" : "string"
          },
          "creditStatus" : {
            "format" : "int32",
            "type" : "integer",
            "description" : "10 - Approved, 20 - ManualDecision, 30 - Complement, 40 - Rejected",
            "enum" : [ 10, 20, 30, 40 ]
          },
          "paymentReference" : {
            "type" : "string"
          },
          "salesChannel" : {
            "type" : "string"
          },
          "invoiceLines" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceLineDTO"
            }
          },
          "invoiceAdditionalData" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceAdditionalData"
            }
          }
        }
      },
      "InvoiceLineDTO" : {
        "type" : "object",
        "properties" : {
          "auid" : {
            "format" : "int32",
            "type" : "integer"
          },
          "articleNo" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "numberOfUnits" : {
            "format" : "int32",
            "type" : "integer"
          },
          "netPricePerUnit" : {
            "format" : "double",
            "type" : "number"
          },
          "vatAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "totalAmount" : {
            "format" : "double",
            "type" : "number"
          }
        }
      },
      "InvoiceAdditionalData" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "AUID. Unique identifier"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Invoice Number"
          },
          "propertyName" : {
            "type" : "string",
            "description" : "Name of the property"
          },
          "propertyValue" : {
            "type" : "string",
            "description" : "Property Value"
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "lastChangedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last change date for this object"
          }
        }
      },
      "CustomerProperty" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "AUID. Unique identifier"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Customer Id"
          },
          "supplierId" : {
            "type" : "string",
            "description" : "Always null"
          },
          "propertyName" : {
            "type" : "string",
            "description" : "Name of the property"
          },
          "propertyValue" : {
            "type" : "string",
            "description" : "Property Value"
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "lastChangedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last change date for this object"
          }
        }
      },
      "SupplierProperty" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "AUID. Unique identifier"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Always null"
          },
          "supplierId" : {
            "type" : "string",
            "description" : "Supplier Id"
          },
          "propertyName" : {
            "type" : "string",
            "description" : "Name of the property"
          },
          "propertyValue" : {
            "type" : "string",
            "description" : "Property Value"
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "lastChangedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last change date for this object"
          }
        }
      },
      "CustomerKYCAnswer" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "AUID. Unique identifier"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Customer Id"
          },
          "questionId" : {
            "type" : "string",
            "description" : "Question id"
          },
          "answer" : {
            "type" : "string",
            "description" : "Answer"
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "lastChangedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last change date for this object"
          }
        }
      },
      "SupplierKYCAnswer" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "AUID. Unique identifier"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio"
          },
          "supplierId" : {
            "type" : "string",
            "description" : "Supplier Id"
          },
          "questionId" : {
            "type" : "string",
            "description" : "Question id"
          },
          "answer" : {
            "type" : "string",
            "description" : "Answer"
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "lastChangedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last change date for this object"
          }
        }
      },
      "CreditorAgreement" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "creditorAgreementID" : {
            "type" : "string",
            "description" : "AUID. Unique identifier"
          },
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "description" : {
            "type" : "string",
            "description" : "Creditor agreement description"
          },
          "creditor" : {
            "type" : "string",
            "description" : "Creditor = Supplier. Link to supplier in table Supplier"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creditor Agreement start date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creditor Agreement end date"
          },
          "writeOffCharge" : {
            "type" : "integer",
            "description" : "Defines if Charge should be written off. 0 = No; 1 = Yes",
            "format" : "int16",
            "enum" : [ "0", "1" ]
          },
          "writeOffOverdueInterest" : {
            "type" : "integer",
            "description" : "Defines if Overdue interest should be written off. 0 = No; 1 = Yes",
            "format" : "int16",
            "enum" : [ "0", "1" ]
          },
          "scheduledPaymentTerms" : {
            "type" : "integer",
            "description" : "Defines if Self-invoicing calculation has payment terms conditions. 0 = No; Manual; No date conditions; 1 = Yes; Scheduled terms; Conditions must be met; Check if day exists in CreditorAgreementPaymentCriteria;",
            "format" : "int16",
            "enum" : [ "0", "1" ]
          },
          "partPaymentEnabled" : {
            "type" : "integer",
            "description" : "Defines if Part-payment contract creation is available on Creditor agreement. 0 = No; 1 = Yes",
            "format" : "int16",
            "enum" : [ "0", "1" ]
          },
          "partPaymentDefaultTemplate" : {
            "type" : "string",
            "description" : "Part-payment contract template identity"
          },
          "regressEnabled" : {
            "type" : "string",
            "description" : "Defines if  Regress is available on Creditor agreement. 0 = No; 1 = Yes",
            "enum" : [ "0", "1" ]
          },
          "regressNumberOfDays" : {
            "type" : "integer",
            "description" : "Regress number of days. Day limit restriction before selecting invoice for Regress calculation.",
            "format" : "int32"
          },
          "regressMinimumAmount" : {
            "type" : "number",
            "description" : "Regress minimum amount. Minimum amount restriction before selecting invoice for Regress calculation",
            "format" : "double"
          },
          "collectionEnabled" : {
            "type" : "integer",
            "description" : "Defines if  Collection is available on Creditor agreement. 0 = No; 1 = Yes",
            "format" : "int16",
            "enum" : [ "0", "1" ]
          },
          "collectionNumberOfDays" : {
            "type" : "integer",
            "description" : "Collection number of days. Day limit restriction before selecting invoice for Collection calculation.",
            "format" : "int32"
          },
          "collectionMinimumAmount" : {
            "type" : "number",
            "description" : "Collection minimum amount. Minimum amount restriction before selecting invoice for Collection calculation",
            "format" : "double"
          },
          "currencyCode" : {
            "type" : "string",
            "description" : "Currency code. Link to table CurrencyCode."
          },
          "graceDaysReminder" : {
            "type" : "integer",
            "description" : "Reminder grace days. Extra Day span before creating additional reminder invoice during Reminder update",
            "format" : "int32"
          },
          "graceDaysOverdueInterest" : {
            "type" : "integer",
            "description" : "Overdue grace days. Day limit restriction before any debit of overdue interest is executed",
            "format" : "int32"
          },
          "overdueInterestRate" : {
            "type" : "number",
            "description" : "Overdue interest rate. Interest rate used for calculating overdue interest amount",
            "format" : "double"
          },
          "interestType" : {
            "type" : "string",
            "description" : "Interest type. Basis for Interest changes"
          },
          "interestBaseDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Interest base date.  Interest Type date for Creditor Agreement"
          },
          "interestBase" : {
            "type" : "number",
            "description" : "Interest Base rate. Interest Type base value for Creditor agreement",
            "format" : "double"
          },
          "interestMargin" : {
            "type" : "number",
            "description" : "Interest Margin rate. Interest Type margin value for Creditor agreement",
            "format" : "double"
          },
          "interestAdjustment" : {
            "type" : "number",
            "description" : "Interest Adjustment rate. Interest Type adjustment value for Creditor agreement",
            "format" : "double"
          },
          "annualFee" : {
            "type" : "number",
            "description" : "For informational purposes. Not used in our system",
            "format" : "double"
          },
          "reconciliationAccount" : {
            "type" : "string",
            "description" : "Reconciliation account"
          },
          "borrowingBaseAmount" : {
            "type" : "number",
            "description" : "Current Creditor agreement Borrowing base amount",
            "format" : "double"
          },
          "balanceAccountAmount" : {
            "type" : "number",
            "description" : "Current Creditor agreement Balance account amount",
            "format" : "double"
          },
          "limitAmount" : {
            "type" : "number",
            "description" : "Current Creditor agreement Limit amount",
            "format" : "double"
          },
          "limitRemainingAmount" : {
            "type" : "number",
            "description" : "Current Creditor agreement remaining Limit amount",
            "format" : "double"
          },
          "paymentToleranceAmount" : {
            "type" : "number",
            "description" : "Payment tolerance. Defines amount that is allowed to deviate from invoice payment on Creditor agreement",
            "format" : "double"
          },
          "directPaymentPercent" : {
            "type" : "number",
            "description" : "Direct payment percent. Current Creditor agreement Advance percent. Takes values from interval [0, 100]",
            "format" : "double"
          },
          "reminderGroup" : {
            "type" : "integer",
            "description" : "Reminder group. Reminder group for Creditor Agreement. Link to table TextCodes.",
            "format" : "int16"
          },
          "isActive" : {
            "type" : "string",
            "description" : "obsolete",
            "enum" : [ "true", "false" ]
          },
          "transactionType" : {
            "type" : "string",
            "description" : "Transaction type. Link to table TransactionType."
          },
          "productTemplate" : {
            "type" : "integer",
            "description" : "Creditor agreement product. Link to table CreditorAgreementProduct.",
            "format" : "int32"
          },
          "productType" : {
            "type" : "integer",
            "description" : "Product type. Link to table CreditorAgreementProductType",
            "format" : "int32",
            "enum" : [ "1", "2", "3" ]
          },
          "numberOfReminder" : {
            "type" : "integer",
            "description" : "Number of Reminder on Creditor Agreement ",
            "format" : "int32"
          },
          "creditorInvoiceType" : {
            "type" : "string",
            "description" : "Creditor Invoice Type"
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Payment Method"
          },
          "numberOfRoundingDecimalsOfFees" : {
            "type" : "integer",
            "description" : "Number of rounding decimals of fees",
            "format" : "int32"
          },
          "creditorAgreementSharedCharges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditorAgreementSharedCharges"
            }
          },
          "creditorAgreementReminderCharges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditorAgreementReminderCharges"
            }
          },
          "creditorAgreementPaymentCriteria" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditorAgreementPaymentCriteria"
            }
          }
        }
      },
      "CreditorAgreementSharedCharges" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "string",
            "description" : "AUID. Unique identifier"
          },
          "creditorAgreementID" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Creditor Agreement ID"
          },
          "portfolio" : {
            "type" : "integer",
            "description" : "Portfolio",
            "format" : "int32"
          },
          "chargeCode" : {
            "type" : "string",
            "description" : "Charge Code"
          },
          "system" : {
            "type" : "string",
            "description" : "System"
          },
          "sharePercentage" : {
            "type" : "number",
            "description" : "Share Percentage",
            "format" : "double"
          },
          "selfInvoiceStatus" : {
            "type" : "string",
            "description" : "Self Invoice Status",
            "enum" : [ "", "Paid" ]
          }
        }
      },
      "CreditorAgreementReminderCharges" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "string",
            "description" : "AUID. Unique identifier"
          },
          "creditorAgreementID" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Creditor Agreement ID"
          },
          "portfolio" : {
            "type" : "integer",
            "description" : "Portfolio",
            "format" : "int32"
          },
          "chargeCode" : {
            "type" : "string",
            "description" : "Charge Code"
          },
          "system" : {
            "type" : "string",
            "description" : "System"
          },
          "amount" : {
            "type" : "number",
            "description" : "Reminder Charge Amount",
            "format" : "double"
          },
          "vatCode" : {
            "type" : "number",
            "description" : "Vat Code",
            "format" : "double"
          }
        }
      },
      "CreditorAgreementPaymentCriteria" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "auid" : {
            "type" : "string",
            "description" : "AUID. Unique identifier"
          },
          "creditorAgreementID" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Creditor Agreement ID"
          },
          "paymentDateDay" : {
            "type" : "integer",
            "description" : "Payment Date Day",
            "format" : "int32"
          }
        }
      },
      "CurrencyCode" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "currencyCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rate" : {
            "type" : "number",
            "format" : "double"
          },
          "currencyCodeExternal" : {
            "type" : "string"
          },
          "currencyInvoiceText" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "rounding" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roundTo" : {
            "type" : "number",
            "format" : "double"
          },
          "locked" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LanguageCode" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "languageCode" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "languageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "installed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "countryCode" : {
            "type" : "string"
          },
          "cultureInfo" : {
            "type" : "string"
          },
          "dateFormatAUID" : {
            "type" : "integer",
            "format" : "int32"
          },
          "currencyDecimalSeparator" : {
            "type" : "string"
          },
          "currencyGroupSeparator" : {
            "type" : "string"
          }
        }
      },
      "CustomerBankAccount" : {
        "type" : "object",
        "properties" : {
          "AUID" : {
            "type" : "integer",
            "description" : "AUID. Unique identifier",
            "format" : "int32"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "customer" : {
            "type" : "string",
            "description" : "Customer identity"
          },
          "bank" : {
            "type" : "string",
            "description" : "Bank identity"
          },
          "cleringNo" : {
            "type" : "string",
            "description" : "Clearing no. Clearing number retrieved via the selected Bank"
          },
          "bankAccount" : {
            "type" : "string",
            "description" : "Customer bank account"
          },
          "Default" : {
            "type" : "boolean",
            "description" : "Defines one bank account that shall be used as the default account. The default bank is displayed as initial value when new contracts are entered."
          },
          "description" : {
            "type" : "string",
            "description" : "Customer bank account name/description"
          },
          "iBAN" : {
            "type" : "string",
            "description" : "IBAN definition if applicable"
          },
          "iBANPrint" : {
            "type" : "string",
            "description" : "IBAN definition for use in printed output if applicable"
          },
          "timestamp" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "System field. Used to handle concurrent updates of a customer bank record.",
            "format" : "byte"
          },
          "extra1" : {
            "type" : "string",
            "description" : "Extra 1. Optional field that may be applicable if extended Bank account concept is in use"
          },
          "extra2" : {
            "type" : "string",
            "description" : "Extra 2. Optional field that may be applicable if extended Bank account concept is in use"
          }
        }
      },
      "DistrictCode" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "districtCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "InvoicingAddress" : {
        "type" : "object",
        "properties" : {
          "invoicingAddressID" : {
            "type" : "string"
          },
          "marcoRef" : {
            "type" : "string"
          }
        }
      },
      "SupplierType" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string"
          },
          "supplierType" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "category" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          }
        }
      },
      "CustomerType" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "portfolio" : {
            "type" : "string"
          },
          "customerType" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "category" : {
            "type" : "integer",
            "format" : "int32"
          },
          "solarita" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "reminderTextCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "classification" : {
            "type" : "integer",
            "format" : "int32"
          },
          "auiD_CU" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PaymentMethod" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "paymentMethod" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dueDays" : {
            "type" : "number",
            "format" : "float"
          },
          "paymentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "account" : {
            "type" : "string"
          },
          "vatSchedule" : {
            "type" : "integer",
            "format" : "int32"
          },
          "activeTypeCode" : {
            "type" : "string"
          },
          "invoiceFee" : {
            "type" : "number",
            "format" : "double"
          },
          "interfaceLogicalFileName" : {
            "type" : "string"
          },
          "interfaceCategory" : {
            "type" : "string"
          },
          "bank" : {
            "type" : "string"
          },
          "acauid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "countryCode" : {
            "type" : "string"
          },
          "workPaymentMethod" : {
            "type" : "string"
          }
        }
      },
      "CustomerInstallationAddress" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "customer" : {
            "type" : "string",
            "description" : "Customer identity"
          },
          "addressCode" : {
            "type" : "string",
            "description" : "Address Code identifying a specific address"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the installation address"
          },
          "address1" : {
            "type" : "string",
            "description" : "Address 1"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address 2"
          },
          "address3" : {
            "type" : "string",
            "description" : "Address 3"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Zip Code"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country Code"
          },
          "customerType" : {
            "type" : "string",
            "description" : "Customer Type"
          },
          "marcoRef" : {
            "type" : "string",
            "description" : "Marco ref. Business Partner number (optional)"
          },
          "AUID" : {
            "type" : "integer",
            "description" : "AUID. Unique identifier",
            "format" : "int32"
          }
        }
      },
      "BranchCode" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "branchCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "DocumentSendingProfile" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "portfolio" : {
            "type" : "string"
          },
          "externalPrint" : {
            "type" : "integer",
            "format" : "int32"
          },
          "diskFileType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eDocumentFormat" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sendEmail" : {
            "type" : "boolean"
          },
          "emailAttachment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eInvoice" : {
            "type" : "boolean"
          },
          "invoicePrint" : {
            "type" : "boolean"
          }
        }
      },
      "TransactionType" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string"
          },
          "transactionType" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "required" : {
            "type" : "integer",
            "format" : "int32"
          },
          "proLedger" : {
            "type" : "integer",
            "format" : "int32"
          },
          "classification" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ChargeCode" : {
        "type" : "object",
        "properties" : {
          "cA_Portfolio" : {
            "type" : "string"
          },
          "cA_System" : {
            "type" : "string"
          },
          "cA_ChargeCode" : {
            "type" : "string"
          },
          "cA_Description" : {
            "type" : "string"
          },
          "cA_Account" : {
            "type" : "string"
          },
          "cA_Amount" : {
            "format" : "double",
            "type" : "number"
          },
          "cA_Required" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_RepeatToExtensionPeriodEnd" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_Category" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_ConsolidateSepCharge" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_IncludeInProRataCalculation" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_AmountType" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_LateFeePaymentAccount" : {
            "type" : "string"
          },
          "cA_IncludeInIncrease" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_ExcludeFromCreditValidation" : {
            "format" : "int32",
            "type" : "integer"
          },
          "cA_ExcludeFromAdjustment" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "CreditorInvoiceStatus" : {
        "type" : "object",
        "properties" : {
          "iS_Portfolio" : {
            "type" : "string"
          },
          "iS_Description" : {
            "type" : "string"
          },
          "iS_IncludedInBorrowingBase" : {
            "type" : "boolean"
          },
          "IS_StatusName" : {
            "type" : "string"
          }
        }
      },
      "InterestType" : {
        "type" : "object",
        "properties" : {
          "iT_Portfolio" : {
            "type" : "string"
          },
          "iT_InterestType" : {
            "type" : "string"
          },
          "iT_Description" : {
            "type" : "string"
          },
          "iT_Date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "iT_Rate" : {
            "format" : "float",
            "type" : "number"
          },
          "iT_Floor" : {
            "format" : "float",
            "type" : "number"
          },
          "iT_Threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "iT_ChangeType" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_ChangeMethod" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_Number" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_Utilization" : {
            "format" : "double",
            "type" : "number"
          },
          "iT_Remaining" : {
            "format" : "double",
            "type" : "number"
          },
          "iT_UtilizationLimit" : {
            "format" : "double",
            "type" : "number"
          },
          "iT_InternalRate" : {
            "format" : "float",
            "type" : "number"
          },
          "iT_Note" : {
            "type" : "string"
          },
          "iT_UpdateStatus" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_ChangeDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "iT_ChangeTime" : {
            "format" : "date-time",
            "type" : "string"
          },
          "iT_InterestChangeDay" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_InterestReadingDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_CurrencyCode" : {
            "type" : "string"
          },
          "iT_Category" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_ExternalCode" : {
            "type" : "string"
          },
          "iT_ContractLenght" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_DebitPeriod" : {
            "type" : "string"
          },
          "iT_CalculationMethod" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_MonthAdjustmentBegin" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_MonthAdjustmentEnd" : {
            "format" : "int32",
            "type" : "integer"
          },
          "iT_NonOfficialMarketRate" : {
            "type" : "boolean"
          }
        }
      },
      "SupplierInvoiceType" : {
        "type" : "object",
        "properties" : {
          "sT_Portfolio" : {
            "type" : "string"
          },
          "sT_InvoiceType" : {
            "type" : "string"
          },
          "sT_Description" : {
            "type" : "string"
          },
          "sT_BookingTypeInvoice" : {
            "type" : "string"
          },
          "sT_BookingTypePayment" : {
            "type" : "string"
          },
          "sT_ServiceInvoice" : {
            "format" : "int32",
            "type" : "integer"
          },
          "sT_UseArrivalBooking" : {
            "format" : "int32",
            "type" : "integer"
          },
          "sT_GroupType" : {
            "type" : "string"
          },
          "sT_APAccount" : {
            "type" : "string"
          },
          "sT_APVatAccount" : {
            "type" : "string"
          },
          "sT_APNetAccount" : {
            "type" : "string"
          },
          "sT_InvCategory" : {
            "type" : "string"
          },
          "sT_AuthorizedRequired" : {
            "type" : "boolean"
          },
          "sT_SegrOfDutyRequired" : {
            "type" : "boolean"
          },
          "sT_DeliveryApprovalRequired" : {
            "type" : "boolean"
          },
          "sT_DescCode" : {
            "type" : "string"
          },
          "sT_UserDefType" : {
            "type" : "boolean"
          },
          "sT_ContractApprovalReq" : {
            "type" : "boolean"
          },
          "sT_SerialNumberReq" : {
            "type" : "boolean"
          },
          "sT_AllowApportion" : {
            "type" : "boolean"
          },
          "sT_PayMethod" : {
            "type" : "string"
          },
          "sT_PayTerms" : {
            "format" : "int32",
            "type" : "integer"
          },
          "sT_UCPayMethod" : {
            "type" : "boolean"
          },
          "sT_UCPayTerms" : {
            "type" : "boolean"
          },
          "sT_UCAPNetAccount" : {
            "type" : "boolean"
          },
          "sT_AllowPSAddNewSupplierInvoice" : {
            "type" : "boolean"
          },
          "sT_Classification" : {
            "format" : "int32",
            "type" : "integer"
          },
          "sT_APVatCurrDiffAccount" : {
            "type" : "string"
          },
          "sT_BookingType" : {
            "type" : "string"
          },
          "sT_APInUse" : {
            "type" : "boolean"
          }
        }
      },
      "TemplateContract" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string"
          },
          "contract" : {
            "type" : "string"
          },
          "activityCode" : {
            "format" : "int32",
            "type" : "integer"
          },
          "statusCode" : {
            "type" : "string"
          },
          "customer" : {
            "type" : "string"
          },
          "addressCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "contractType" : {
            "type" : "string"
          },
          "contractPool" : {
            "type" : "string"
          },
          "responsibel" : {
            "type" : "string"
          },
          "districtCode" : {
            "type" : "string"
          },
          "receiver" : {
            "type" : "string"
          },
          "salesPerson" : {
            "type" : "string"
          },
          "contractDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cancellationMonths" : {
            "format" : "int32",
            "type" : "integer"
          },
          "extensionMonths" : {
            "format" : "int32",
            "type" : "integer"
          },
          "preTerminationCond" : {
            "format" : "int32",
            "type" : "integer"
          },
          "portfolioNameCode" : {
            "format" : "int32",
            "type" : "integer"
          },
          "invoiceLayout" : {
            "type" : "string"
          },
          "invoiceSortCode" : {
            "type" : "string"
          },
          "invoiceConsolidateCode" : {
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          },
          "messageRepeat" : {
            "format" : "int32",
            "type" : "integer"
          },
          "interestRateOnInv" : {
            "format" : "int32",
            "type" : "integer"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string"
          },
          "customerAccount" : {
            "type" : "string"
          },
          "receivingAccount" : {
            "type" : "string"
          },
          "invoiceFee" : {
            "format" : "double",
            "type" : "number"
          },
          "reminderFee" : {
            "format" : "double",
            "type" : "number"
          },
          "chargeCode" : {
            "type" : "string"
          },
          "chargeAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "preTerminationFee" : {
            "format" : "float",
            "type" : "number"
          },
          "overDueDebitType" : {
            "format" : "int32",
            "type" : "integer"
          },
          "overDueInterestRate" : {
            "format" : "float",
            "type" : "number"
          },
          "overDueGraceDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "reminderGraceDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "retroactiveAmortInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "retroactiveChangeInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "retroactiveOverDueInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "invDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "invPeriod" : {
            "format" : "int32",
            "type" : "integer"
          },
          "invStartDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "invEndDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "invDueDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "invAmortization" : {
            "format" : "double",
            "type" : "number"
          },
          "invInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "invOtherInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "invCharges" : {
            "format" : "double",
            "type" : "number"
          },
          "invInvoiceFee" : {
            "format" : "double",
            "type" : "number"
          },
          "invExtraLines" : {
            "format" : "double",
            "type" : "number"
          },
          "invAddedServices" : {
            "format" : "double",
            "type" : "number"
          },
          "invNetAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "invVatAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "invTotalAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "totAmortization" : {
            "format" : "double",
            "type" : "number"
          },
          "totInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "totOtherInterest" : {
            "format" : "double",
            "type" : "number"
          },
          "totCharges" : {
            "format" : "double",
            "type" : "number"
          },
          "totInvoiceFee" : {
            "format" : "double",
            "type" : "number"
          },
          "totExtraLines" : {
            "format" : "double",
            "type" : "number"
          },
          "totAddedServices" : {
            "format" : "double",
            "type" : "number"
          },
          "amortThisYear" : {
            "format" : "double",
            "type" : "number"
          },
          "interestThisYear" : {
            "format" : "double",
            "type" : "number"
          },
          "interestPrevYear" : {
            "format" : "double",
            "type" : "number"
          },
          "numberOfReminders" : {
            "format" : "int32",
            "type" : "integer"
          },
          "numberOfCancellations" : {
            "format" : "int32",
            "type" : "integer"
          },
          "numberOfInvoices" : {
            "format" : "int32",
            "type" : "integer"
          },
          "dateCancellation" : {
            "format" : "date-time",
            "type" : "string"
          },
          "dateDebtRecovery" : {
            "format" : "date-time",
            "type" : "string"
          },
          "dateExeAuktion" : {
            "format" : "date-time",
            "type" : "string"
          },
          "table1" : {
            "type" : "string"
          },
          "table2" : {
            "type" : "string"
          },
          "table3" : {
            "type" : "string"
          },
          "text1" : {
            "type" : "string"
          },
          "text2" : {
            "type" : "string"
          },
          "text3" : {
            "type" : "string"
          },
          "invoiceExtraTextCode" : {
            "type" : "string"
          },
          "invoiceSepCharges" : {
            "format" : "int32",
            "type" : "integer"
          },
          "invoiceSepExtraLine" : {
            "format" : "int32",
            "type" : "integer"
          },
          "invoiceSepAddedServices" : {
            "format" : "int32",
            "type" : "integer"
          },
          "currencyInvoiceText" : {
            "format" : "int32",
            "type" : "integer"
          },
          "templateCustomer" : {
            "type" : "string"
          },
          "externalInvoicePrint" : {
            "format" : "int32",
            "type" : "integer"
          },
          "leaseCategory" : {
            "type" : "string"
          },
          "paymentReference" : {
            "type" : "string"
          },
          "referenceDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "paymentAccount" : {
            "format" : "int32",
            "type" : "integer"
          },
          "invoiceToCustomer" : {
            "type" : "string"
          },
          "regulatedAgreement" : {
            "format" : "int32",
            "type" : "integer"
          },
          "autoStart" : {
            "format" : "int32",
            "type" : "integer"
          },
          "riskCode" : {
            "format" : "int32",
            "type" : "integer"
          },
          "fundingType" : {
            "type" : "string"
          },
          "rateAuthority" : {
            "type" : "string"
          },
          "btNumber" : {
            "type" : "string"
          },
          "frameAgreement" : {
            "type" : "string"
          },
          "commissionCaptialised" : {
            "format" : "int32",
            "type" : "integer"
          },
          "commissionAnnuity" : {
            "format" : "int32",
            "type" : "integer"
          },
          "xgsCostCenter" : {
            "type" : "string"
          },
          "transno" : {
            "type" : "string"
          },
          "registrationChargeOnSepInvoice" : {
            "format" : "int32",
            "type" : "integer"
          },
          "overDueFeeDays" : {
            "format" : "int32",
            "type" : "integer"
          },
          "overDueFeeInterestRate" : {
            "format" : "float",
            "type" : "number"
          },
          "includeInIncrease" : {
            "format" : "int32",
            "type" : "integer"
          },
          "privateLabel" : {
            "format" : "int32",
            "type" : "integer"
          },
          "settlementInvoiceTo" : {
            "type" : "string"
          },
          "paymentMethodVarSvcs" : {
            "type" : "string"
          },
          "billingAgent" : {
            "type" : "string"
          },
          "cashCollector" : {
            "type" : "string"
          },
          "badDebtStatus" : {
            "type" : "string"
          },
          "xPPSMainContractID" : {
            "format" : "int64",
            "type" : "integer"
          },
          "documentSendingProfile" : {
            "type" : "string"
          },
          "annualChargeCode" : {
            "type" : "string"
          },
          "annualChargeAmount" : {
            "format" : "double",
            "type" : "number"
          },
          "annualChargeOnSepInvoice" : {
            "format" : "int32",
            "type" : "integer"
          },
          "summarizeInterestAndAmortization" : {
            "format" : "int32",
            "type" : "integer"
          },
          "capitalDebtOnInv" : {
            "format" : "int32",
            "type" : "integer"
          },
          "endCustomer" : {
            "type" : "string"
          },
          "aUID_FG" : {
            "format" : "int32",
            "type" : "integer"
          },
          "lTVRatio" : {
            "format" : "double",
            "type" : "number"
          },
          "code_CFS" : {
            "type" : "string"
          }
        }
      },
      "LoginModel" : {
        "required" : [ "password", "userName" ],
        "type" : "object",
        "properties" : {
          "userName" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "CustomerExposureFactoringQuery" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "customerId" : {
            "type" : "integer"
          },
          "customerTotalAR" : {
            "type" : "decimal"
          },
          "customerDueAR" : {
            "type" : "decimal"
          },
          "customerCreditLimit" : {
            "type" : "decimal"
          },
          "customerCreditLimitDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerExposure" : {
            "type" : "decimal"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "SupplierExposureFactoringQuery" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "supplierId" : {
            "type" : "integer"
          },
          "supplierTotalAR" : {
            "type" : "decimal"
          },
          "supplierDueAR" : {
            "type" : "decimal"
          },
          "supplierCreditLimit" : {
            "type" : "decimal"
          },
          "supplierCreditLimitDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "supplierExposure" : {
            "type" : "decimal"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "Supplier" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "supplier" : {
            "type" : "string",
            "description" : "Supplier identity"
          },
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "companyNumber" : {
            "type" : "string",
            "description" : "Company identity"
          },
          "supplierType" : {
            "type" : "string",
            "description" : "Supplier type"
          },
          "supplierStatus" : {
            "type" : "string",
            "description" : "Obsolete"
          },
          "responsibel" : {
            "type" : "string",
            "description" : "Responsible user at the portfolio owner side"
          },
          "contactPerson" : {
            "type" : "string",
            "description" : "Contract person at the supplier side"
          },
          "supplierAgreement" : {
            "type" : "integer",
            "description" : "Obsolete",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Supplier name"
          },
          "sortName" : {
            "type" : "string",
            "description" : "Is normally the same as Supplier name. Is used in most search routines"
          },
          "address1" : {
            "type" : "string",
            "description" : "Address 1"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address 2"
          },
          "address3" : {
            "type" : "string",
            "description" : "Address 3"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Zip Code"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country Code"
          },
          "languageCode" : {
            "type" : "string",
            "description" : "Language Code"
          },
          "currencyCode" : {
            "type" : "string",
            "description" : "Currency Code"
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Payment Method"
          },
          "bankgiro" : {
            "type" : "string",
            "description" : "Bank Giro"
          },
          "postgiro" : {
            "type" : "string",
            "description" : "Post Giro"
          },
          "bankAccount" : {
            "type" : "string",
            "description" : "Bank account"
          },
          "telephoneHome" : {
            "type" : "string",
            "description" : "Home telephone number"
          },
          "telephoneWork" : {
            "type" : "string",
            "description" : "Work telephone number"
          },
          "telephoneExt" : {
            "type" : "string",
            "description" : "Work telephone extension"
          },
          "telephoneMobil" : {
            "type" : "string",
            "description" : "Mobile telephone number"
          },
          "telefax" : {
            "type" : "string",
            "description" : "Telefax number"
          },
          "telex" : {
            "type" : "string",
            "description" : "Telex identity"
          },
          "email" : {
            "type" : "string",
            "description" : "E-mail address"
          },
          "internet" : {
            "type" : "string",
            "description" : "Internet. Web site address"
          },
          "vatCode" : {
            "type" : "integer",
            "description" : "VAT code",
            "format" : "int32"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "VAT number"
          },
          "bank" : {
            "type" : "string",
            "description" : "Bank"
          },
          "districtCode" : {
            "type" : "string",
            "description" : "District Code"
          },
          "countyCode" : {
            "type" : "string",
            "description" : "Country Code"
          },
          "branchCode" : {
            "type" : "string",
            "description" : "BranchCode"
          },
          "creditLimit" : {
            "type" : "number",
            "description" : "Credit Limit. Not used. Only informative purpose",
            "format" : "double"
          },
          "creditLimitDate" : {
            "type" : "string",
            "description" : "Credit limit end date. Not used. Only informative purpose",
            "format" : "date-time"
          },
          "balance" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "turnoverThisYear" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "turnoverLastYear" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "supplierChannel" : {
            "type" : "string",
            "description" : "Supplier channel"
          },
          "selfInvoicing" : {
            "type" : "integer",
            "description" : "Self invoicing. Defines if the self invoicing routine shall process a specific supplier at self invoicing, 0 = No, 1 = Yes",
            "format" : "int32"
          },
          "rentPrimaryType1" : {
            "type" : "string",
            "description" : "Rent primary type 1. Commission type for period commission"
          },
          "percentageRentPrimary1" : {
            "type" : "number",
            "description" : "Percentage rent primary 1. Commission percentage for Rent Primary Type1",
            "format" : "double"
          },
          "rentPrimaryType2" : {
            "type" : "string",
            "description" : "Obsolete"
          },
          "percentageRentPrimary2" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "rentSecondaryType" : {
            "type" : "string",
            "description" : "Obsolete"
          },
          "percentageRentSecondary" : {
            "type" : "number",
            "description" : "Obsolete",
            "format" : "double"
          },
          "capitalizedType" : {
            "type" : "string",
            "description" : "Capitalized type. Commission type for capitalized commission"
          },
          "capitalizedPercentageRent" : {
            "type" : "number",
            "description" : "Capitalized percentage rent. Commission percentage for Capitalized Type",
            "format" : "double"
          },
          "capitalizedCommissionReceiver" : {
            "type" : "string",
            "description" : "Capitalized commission receiver. Commission receiver for capitalized commission"
          },
          "annuityCommissionReceiver" : {
            "type" : "string",
            "description" : "Annuity commission receiver. Commission receiver for period commission"
          },
          "capitalizedContactPerson" : {
            "type" : "string",
            "description" : "Capitalized contact person. Contact person at the Capitalized Commission Receiver"
          },
          "annuityContactPerson" : {
            "type" : "string",
            "description" : "Annuity commission receiver. Contact person at the Annuity Commission Receiver"
          },
          "bankAccountName" : {
            "type" : "string",
            "description" : "Bank account name"
          },
          "payWhenPaidFixed" : {
            "type" : "integer",
            "description" : "Pay when paid fixed. Defines rule for how fixed service invoices shall be paid to the supplier versus the customer service invoices. 0=Pay When Due; 1=Pay When Paid; 2=Pay When Billed",
            "format" : "int32"
          },
          "payWhenPaidVariable" : {
            "type" : "integer",
            "description" : "Pay when paid variable. Defines rule for how variable service invoices shall be paid to the supplier versus the customer service invoices. 0=Pay When Due; 1=Pay When Paid",
            "format" : "int32"
          },
          "whenSelfInvoicing" : {
            "type" : "integer",
            "description" : "When self invoicing. Setting for when self invoicing of fixed service shall be triggered. 0=At AR Invoicing; 1=At Payment Term Fulfilled",
            "format" : "int32"
          },
          "additionalDaysPwB" : {
            "type" : "integer",
            "description" : "Additional days PwB. Only applicable if Pay When Paid Fixed = 2. Number of days. Supplier service invoice cannot be paid until a defined number of days, after the invoice date of the corresponding customer service charge invoice, has passed",
            "format" : "int32"
          },
          "privateLabel" : {
            "type" : "integer",
            "description" : "Private label. Private Labels allow branding of reports (e.g. customer invoices) connected to different partners",
            "format" : "int32"
          },
          "linkedToCustomer" : {
            "type" : "string",
            "description" : "Linked to customer. Settlement invoices can only be sent to customers. In order to invoice settlement to the Supplier/CCSS of the contract, this option can be used. By entering the supplier"
          },
          "settlementReasonChurn" : {
            "type" : "string",
            "description" : "Settlement reason churn. Link to Settlement Reason in table SettlementReason. If set, then the settlement reason will be used in the quote routine if contracts, where the supplier is used, is calculated for churn value"
          },
          "settlementReasonWalkaway" : {
            "type" : "string",
            "description" : "Settlement reason walkaway. If set, then the settlement reason will be used in the quote routine if contracts, where the supplier is used, is calculated for walkaway value"
          },
          "calculationMethodChurn" : {
            "type" : "string",
            "description" : "Calculation method churn. Calculation method that will be used, if set, in the quote routine if contracts, where the supplier is used, is calculated for churn value"
          },
          "calculationMethodWalkaway" : {
            "type" : "string",
            "description" : "Calculation method walkaway. Calculation method that will be used, if set, in the quote routine if contracts, where the supplier is used, is calculated for walkaway value"
          },
          "calcParamPercChurn" : {
            "type" : "number",
            "description" : "Calc parameter percentage churn. Calculation percentage that will be used, if set, in the quote routine if contracts, where the supplier is used, is calculated for churn value",
            "format" : "float"
          },
          "calcParamPercWalkaway" : {
            "type" : "number",
            "description" : "Calc parameter percentage walkaway. Calculation percentage that will be used, if set, in the quote routine if contracts, where the supplier is used, is calculated for walkaway value",
            "format" : "float"
          },
          "legalForm" : {
            "type" : "string",
            "description" : "Legal form. Only applicable for self invoicing of supplier fixed service invoices. If the field shall be used or not depends on if the business wants to use the field. It must then in turn be included in the invoice layout for self invoicing."
          },
          "shareCapitalAmount" : {
            "type" : "number",
            "description" : "Share capital amount. Only applicable for self invoicing of supplier fixed service invoices. If the field shall be used or not depends on if the business wants to use the field. It must then in turn be included in the invoice layout for self invoicing",
            "format" : "double"
          },
          "rcsNumber" : {
            "type" : "string",
            "description" : "RCS number. Only applicable for self invoicing of supplier fixed service invoices. If the field shall be used or not depends on if the business wants to use the field. It must then in turn be included in the invoice layout for self invoicing"
          },
          "nafCode" : {
            "type" : "string",
            "description" : "NAF code. Only applicable for self invoicing of supplier fixed service invoices. If the field shall be used or not depends on if the business wants to use the field. It must then in turn be included in the invoice layout for self invoicing"
          },
          "taxPaidAtPaymRec" : {
            "type" : "string",
            "description" : "Tax paid at payment received. Only applicable for self invoicing of supplier fixed service invoices. If the field shall be used or not depends on if the business wants to use the field. It must then in turn be included in the invoice layout for self invoicing"
          },
          "lastRunDate" : {
            "type" : "string",
            "description" : "Last run date. Last date the supplier was included in a self invoicing execution",
            "format" : "date-time"
          },
          "mandateSignatureDate" : {
            "type" : "string",
            "description" : "Mandate signature date. Date/time when the supplier was created.",
            "format" : "date-time"
          },
          "timestamp" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "System field. Used to handle concurrent updates of a supplier record",
            "format" : "byte"
          },
          "invoiceLayoutSI_ID" : {
            "type" : "integer",
            "description" : "Invoice layout SI ID. Invoice layout to use for self invoicing",
            "format" : "int32"
          },
          "invoiceLayoutCommissionSI_ID" : {
            "type" : "integer",
            "description" : "Not used",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string",
            "description" : "Transaction type. Transaction Type for booking of e.g. supplier invoices and payments"
          },
          "bankAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupplierBankAccount"
            }
          },
          "ExternalSupplierNo" : {
            "type" : "string",
            "description" : "External Supplier Number"
          },
          "supplierProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupplierProperty"
            }
          },
          "supplierKYCAnswers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupplierKYCAnswer"
            }
          }
        }
      },
      "CustomerResult" : {
        "type" : "object",
        "properties" : {
          "customerID" : {
            "type" : "string"
          },
          "marcoRef" : {
            "type" : "string"
          }
        }
      },
      "CountryCode" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "countryCode" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "alpha2Code" : {
            "type" : "string"
          }
        }
      },
      "CustomerInvoiceAddress" : {
        "type" : "object",
        "properties" : {
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "customer" : {
            "type" : "string",
            "description" : "Customer identity"
          },
          "addressCode" : {
            "type" : "string",
            "description" : "Address code. Unique customer address identifier for entered address items. The main customer address is not considered as a invoice address item"
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "adress1" : {
            "type" : "string",
            "description" : "Address 1"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address 2"
          },
          "address3" : {
            "type" : "string",
            "description" : "Address 3"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Zip Code"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country code."
          },
          "telefax" : {
            "type" : "string",
            "description" : "Telefax number"
          },
          "email" : {
            "type" : "string",
            "description" : "Used if the document profile for the user is pre-set for E-mail"
          },
          "sendInvoiceBy" : {
            "type" : "integer",
            "description" : "Obsolete",
            "format" : "int32"
          },
          "marcoRef" : {
            "type" : "string",
            "description" : "Marco ref. Business Partner number (optional)"
          },
          "eInvoicingAddress" : {
            "type" : "string",
            "description" : "Used if the document profile for the user is pre-set for E-Invoicing"
          },
          "AUID" : {
            "type" : "integer",
            "description" : "AUID. Unique identifier",
            "format" : "int32"
          },
          "officialAddress" : {
            "type" : "boolean",
            "description" : "Official Address.  0=No; 1=Yes. Official invoice address is used for sending invoice"
          }
        }
      },
      "Charge" : {
        "type" : "object",
        "properties" : {
          "chargeCode" : {
            "type" : "string",
            "description" : "Charge code. Charge code identity"
          },
          "chargeAmount" : {
            "type" : "number",
            "description" : "Charge amount. Is used as default value when a specific charge code is selected during registration of a charge",
            "format" : "double"
          },
          "chargeDescription" : {
            "type" : "string",
            "description" : "Description. Charge description"
          },
          "repeatToExtensionPeriodEnd" : {
            "type" : "integer",
            "description" : "Repeat to end of contract tenor. Creates charges in all future periods if activated. 0=No; 1=Yes. Is used as default value when a specific charge code is selected during registration of a charge",
            "format" : "int32"
          },
          "invoiceToCustomer" : {
            "type" : "string"
          },
          "separateInvoice" : {
            "type" : "integer",
            "format" : "int32"
          },
          "separateLine" : {
            "type" : "integer",
            "description" : "Defines it a charge code shall be created as a separate line on the invoice. 0=No; 1=Yes. Is used as initial default setting when new charges are created using a specific charge code",
            "format" : "int32"
          }
        }
      },
      "CustomerExposureQueryPost" : {
        "type" : "object",
        "properties" : {
          "familyID" : {
            "type" : "string"
          },
          "parentID1" : {
            "type" : "string"
          },
          "parentID2" : {
            "type" : "string"
          },
          "parentID3" : {
            "type" : "string"
          },
          "familyType" : {
            "type" : "string"
          },
          "portfolio" : {
            "type" : "string"
          }
        }
      },
      "SupplierBankAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "AUID. Unique identifier",
            "format" : "int32"
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Portfolio number"
          },
          "supplier" : {
            "type" : "string",
            "description" : "Supplier identity"
          },
          "bank" : {
            "type" : "string",
            "description" : "Bank"
          },
          "clearingNo" : {
            "type" : "string",
            "description" : "Clearing Number"
          },
          "bankAccount" : {
            "type" : "string",
            "description" : "Bank Account"
          },
          "iban" : {
            "type" : "string",
            "description" : "IBAN Account"
          },
          "defaultAccount" : {
            "type" : "boolean",
            "description" : "Default account. 0=No; 1=Yes. Default account is displayed as initial value in the supplier invoice payment routine"
          },
          "description" : {
            "type" : "string",
            "description" : "Description. Bank account name"
          },
          "ibanPrint" : {
            "type" : "string",
            "description" : "IBAN print. Optional field that can be used to control if IBAN is to be printed on documents or not. Requires adaption of print logic"
          },
          "contractFinancingAccount" : {
            "type" : "boolean",
            "description" : "Contract Financing Account"
          }
        }
      },
      "CustomerExposure" : {
        "type" : "object",
        "properties" : {
          "isValid" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "object",
            "properties" : { }
          },
          "customerTotalAR" : {
            "type" : "number",
            "format" : "double"
          },
          "customerDueAR" : {
            "type" : "number",
            "format" : "double"
          },
          "customerCreditLimit" : {
            "type" : "number",
            "format" : "double"
          },
          "customerCreditLimitDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerExposure" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "apiKey",
        "description" : "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}