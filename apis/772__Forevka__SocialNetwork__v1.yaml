openapi: 3.0.1
info:
  title: My API
  version: v1
paths:
  /Authorization:
    get:
      tags:
        - Authorization
      parameters:
        - name: email
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutRegistrationViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutRegistrationViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutRegistrationViewModel'
  '/Comments/{commentId}':
    get:
      tags:
        - Comments
      operationId: commentId
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
  '/Comments/{commentId}/Reactions':
    get:
      tags:
        - Comments
      operationId: commentIdReaction
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Comments:
    post:
      tags:
        - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommentViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommentViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
    patch:
      tags:
        - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCommentViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EditCommentViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditCommentViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutCommentViewModel'
  '/Posts/{postId}':
    get:
      tags:
        - Posts
      operationId: postId
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
  '/Posts/{postId}/Reactions':
    get:
      tags:
        - Posts
      operationId: postIdReaction
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Reaction/Comment/{commentId}:
    post:
      tags:
        - Reaction
      operationId: addCommentIdReaction
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Reaction/Comment/{reactionId}:
    delete:
      tags:
        - Reaction
      operationId: deleteCommentIdReaction
      parameters:
        - name: reactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Reaction/Post/{postId}:
    post:
      tags:
        - Reaction
      operationId: addPostIdReaction
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Reaction/Post/{reactionId}:
    delete:
      tags:
        - Reaction
      operationId: deletePostIdReaction
      parameters:
        - name: reactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /Posts:
    post:
      tags:
        - Posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PostViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
    patch:
      tags:
        - Posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPostViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EditPostViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditPostViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutPostViewModel'
  /Registration:
    post:
      tags:
        - Registration
      parameters:
        - name: email
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutUserRegisterViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OutUserRegisterViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OutUserRegisterViewModel'
components:
  schemas:
    OutRegistrationViewModel:
      type: object
      properties:
        access_token:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    OutCommentViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        postId:
          type: string
          format: uuid
      additionalProperties: false
    CommentViewModel:
      required:
        - postId
        - text
      type: object
      properties:
        text:
          type: string
        postId:
          type: string
          format: uuid
      additionalProperties: false
    EditCommentViewModel:
      required:
        - commentId
        - text
      type: object
      properties:
        commentId:
          type: string
          format: uuid
        text:
          type: string
      additionalProperties: false
    OutPostViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        userId:
          type: string
          format: uuid
        comments:
          type: array
          items:
            $ref: '#/components/schemas/OutCommentViewModel'
          nullable: true
      additionalProperties: false
    PostViewModel:
      required:
        - text
      type: object
      properties:
        text:
          type: string
        date:
          type: string
          format: date-time
      additionalProperties: false
    EditPostViewModel:
      required:
        - id
        - text
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
      additionalProperties: false
    OutUserRegisterViewModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\""
      name: Authorization
      in: header
  
security:
  - Bearer: []
servers:
  - url: http://82.146.37.127/
