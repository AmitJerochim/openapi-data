penapi: 3.0.0
info:
  description: |
    This is color report API 
    [https://github.com/Em2see/creport](https://github.com/Em2see/creport)
  version: "1.0.0-oas3"
  title: Color report
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: tormoz-ne@mail.ru
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: note
    description: Access to notes
  - name: file
    description: Files operations
  - name: user
    description: Operations about user
  - name: msg
    description: Notifications and other messages
paths:
  '/file/{fileName}':
    get:
      tags:
        - file
      summary: Get file
      description: Returns file which can be css or image
      operationId: getFile
      parameters:
        - name: fileName
          in: path
          description: ID of file to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: File not found
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
  /file:
    post:
      tags:
        - file
      summary: Send file
      description: 'Returns user settings, supported actions'
      operationId: uploadFile
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The uploaded file data
                  type: string
                  format: binary
              required:
                - file
  /user:
    get:
      tags:
        - user
      summary: Get user settings
      description: 'Returns user settings, supported actions'
      operationId: getUser
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
    put:
      tags:
        - user
      summary: Update user settings
      description: Update user settings
      operationId: updateUser
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
  /users:
    get:
      tags:
        - user
      summary: Get user settings
      description: 'Returns user settings, supported actions'
      operationId: getAllUsers
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
    post:
      tags:
        - user
      summary: Update user settings
      description: Update user settings
      operationId: updateUsers
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/delegate:
    get:
      tags:
        - user
      summary: Get list of delegates for user
      description: Returns delegetes list and settings for user
      operationId: getUserDelegates
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
    post:
      tags:
        - user
      summary: Set user delegates
      description: Set user delegates
      operationId: setDelegates
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  '/user/login/{userId}':
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUserBehalf
      parameters:
        - name: userId
          in: path
          description: The user name for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid username/password supplied
      security:
        - creport_auth:
            - admin
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  '/user/logout/{userId}':
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUserBehalf
      parameters:
        - name: userId
          in: path
          description: The user name for login
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
  /notes:
    get:
      tags:
        - note
      summary: Get current notes
      description: Returns current notes and updated notes
      operationId: getCurrentNotes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
    post:
      tags:
        - note
      summary: Get weeks on specific weeks
      description: Returns motes on provided weeks list
      operationId: getHistoryNotes
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        description: Updated user object
        required: true
  /weeks:
    get:
      tags:
        - note
      summary: Get current notes
      description: Returns current notes
      operationId: getWeeks
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Week'
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
  /msg:
    get:
      tags:
        - msg
      summary: Get current notes
      description: Returns current notes
      operationId: getMessages
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
    post:
      tags:
        - msg
      summary: Get current notes
      description: Returns current notes
      operationId: sendNewMessage
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - superuser
  '/msg/{msgId}':
    put:
      tags:
        - msg
      summary: Update message
      description: Update or confirm receive message
      operationId: updateMessage
      parameters:
        - in: path
          name: msgId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
      security:
        - creport_auth:
            - delegate
            - user
            - admin
            - superuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageResponse'
        required: true
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://virtserver.swaggerhub.com/te_am8/messager/1.0.0'
  - url: 'http://virtserver.swaggerhub.com/te_am8/messager/1.0.0'
  - url: 'ws://virtserver.swaggerhub.com/te_am8/messager/1.0.0'
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: Updated users objects
      required: true
  securitySchemes:
    creport_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            delegate: user with provided limitations
            user: read your pets
            admin: >-
              able to modify users, modify messages, login on behalf of other
              users.
            superuser: able to send messages. modify users.
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    Note:
      type: object
      properties:
        id:
          type: integer
          format: int64
        weekId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        LastUpdate:
          type: integer
          format: date-time
        text:
          type: integer
          format: int32
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        bestBefore:
          type: integer
          format: date-time
        text:
          type: integer
          format: int32
    MessageResponse:
      type: object
      properties:
        text:
          type: integer
          format: int32
    Week:
      type: object
      properties:
        id:
          type: integer
          format: int64
        year:
          type: integer
          format: int64
        weekNum:
          type: integer
          format: int64
        startDate:
          type: integer
          format: date-time
        endDate:
          type: integer
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        behalfOf:
          $ref: '#/components/schemas/Delegate'
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
        session:
          type: integer
          description: Current session id
    Delegate:
      type: object
      properties:
        behalfOf:
          $ref: '#/components/schemas/User'
        startDate:
          type: integer
          format: date-time
        endDate:
          type: integer
          format: date-time
    Category:
      type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string