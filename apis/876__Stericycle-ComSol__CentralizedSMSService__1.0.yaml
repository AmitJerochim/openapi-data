openapi: 3.0.0
info:
  version: '1.0'
  title: 'CentralizedSMSService'
  description: 'Centralized SMS Service api specification'
  contact:
    name: "Stericycle - Prompt Support"
    email: "support@promptalert.com"
    url: "https://solutions.stericyclecommunications.com"
paths:
 /api/v1/sendsms: 
    post: 
       summary: "Send sms to the given number using Twilio."
       description: "Accepts the message, validate it, and send the message using twilio." 
       operationId: sendsms
       tags:
        - sendsms
       requestBody: 
        content: 
         application/json: 
          schema: 
           $ref: '#/components/schemas/SendMessageRequest'
        required: true
       responses: 
        default:
         description: Ok
         content: 
          application/json: 
           schema: 
            $ref: '#/components/schemas/ApiResponse'
           example:
                Message: ["Message queued successfully"]
        200: 
         description: Ok
         content: 
          application/json: 
           schema: 
            $ref: '#/components/schemas/ApiResponse'
           example:
                Message: ["Message queued successfully"]
        400: 
         description: "Bad Request"
         content: 
          application/json: 
           schema: 
            $ref: '#/components/schemas/ApiResponse'
           example:
                Message: [ "Invalid request body", "Please provide all the required fields"]    
        401: 
         description: Unauthorized
         content: 
          application/json: 
           schema: 
            $ref: '#/components/schemas/ApiResponse'
           example:
                Message: ["Invalid / No Authorization token"]
        500: 
         description: "Internal server error"
         content: 
          application/json: 
           schema: 
            $ref: '#/components/schemas/ApiResponse'
           example:
                Message: ["Internal server error occured"]    
       security: 
         - api_key: [] 
       x-amazon-apigateway-request-validator: basic
       x-amazon-apigateway-integration: 
          type: aws
          httpMethod: POST
          uri: "arn:aws:apigateway:us-east-1:states:action/StartExecution"
          credentials: "arn:aws:iam::338173691800:role/APIGatewayToStepFunction "
          requestTemplates: 
            application/json: |-
              {
                    "input": "$util.escapeJavaScript($input.json('$'))",
                    "stateMachineArn" : "arn:aws:states:us-east-1:338173691800:stateMachine:centralizedsms-state-machine-dev"
              }
          responses: 
           '200': 
            statusCode: "200"
            responseTemplates: 
              application/json: |-
                {
                   "message": ["Message queued successfully"]
                }
x-amazon-apigateway-request-validators: 
 basic: 
  validateRequestBody: true
  validateRequestParameters: false
x-amazon-apigateway-gateway-responses: 
 BAD_REQUEST_BODY: 
  statusCode: 400
  responseTemplates: 
   application/json: |-
                {
                     "message": [$context.error.messageString,"Please provide all the required fields"]
                }
 UNAUTHORIZED: 
  statusCode: 401
  responseTemplates: 
   application/json: |-
                {
                     "message": ["Invalid / No Authorization token"]
                }
 ACCESS_DENIED: 
  statusCode: 403
  responseTemplates:
    application/json: |-
                {
                     "message": ["Invalid / No Authorization token"]
                }
components: 
 schemas: 
  SendMessageRequest: 
   required: 
    - destinationNumber
    - messageContent
    - sendingNumber
    - statusCallBackURL
   type: object
   properties: 
    sendingNumber: 
     maxLength: 20
     minLength: 5
     pattern: "^[0-9]*$"
     type: string
     description: "Number from which the message needs to send. It should be a twilio number / verified number"
     example: "6470000000"
    destinationNumber: 
     maxLength: 20
     minLength: 10
     type: string
     pattern: "^[0-9]*$"
     description: "Number to which the message needs to send."
     example: "4071111111"
    messageContent: 
     maxLength: 1000
     type: string
     description: "Message content which needs to be sent to the given number."
     example: "Test message"
    startWindow: 
     type: string
     pattern: "^(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])*$"
     description: "Start time to send message."
     example: "10:00:00"
    stopWindow: 
     type: string
     pattern: "^(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])*$"
     description: "End time to send message."
     example: "17:00:00"
    timeZoneUTC: 
     type: string
     pattern: "^(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])*$"
     description: "UTC offsent time."
     example: "-04:00"
    statusCallBackURL: 
     type: string
     description: "URL to fetch callback result of the message sent."
     example: "https://postb.in/b/1576510488361-9598537825513"
  ApiResponse: 
   type: object
   properties: 
    Message: 
     type: array
     items: 
      type: string
 securitySchemes: 
  api_key: 
   type: apiKey
   name: "x-api-key"
   in: header
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Stericycle-ComSol/CentralizedSMSService/1.0
