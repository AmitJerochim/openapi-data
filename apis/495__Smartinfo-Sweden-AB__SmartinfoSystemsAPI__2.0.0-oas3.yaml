openapi: 3.0.2
info:
  title: Smartinfo Systems API
  description: >-
    This API is used by thirdparty developers to access and upload information
    in the Smartinfo platform.
  version: "2.0.0-oas3"
  termsOfService: 'https://www.smartinfo.se/'
  contact:
    name: Smartinfo AB
    url: 'https://www.smartinfo.se/support'
    email: support@smartinfo.se
  license:
    name: Smartinfo License Terms
    url: 'https://www.smartinfo.se/'

servers:
  - url: 'https://archive2.smartinfo.se/Neutron/json'
    description: Production Server https
    variables:
      New Variable 1:
        default: ""
  - url: 'http://localhost/Neutron/json'
    description: Local test server

security:
  - BearerAuth: []

tags:
  - name: General
    description: General endpoints used to test functionality and connection.
  - name: User
    description: User related endpoints such as login, logout and password management.
  - name: Database
    description: Database related endpoints such as get user databases and select active database.
  - name: Search
    description: Search endpoints. Search for information and get query results.
  - name: Documents
    description: Document related endpoints. Get, add and delete functions.
  
    
paths:

  /jsAbout:
    get:
      tags:
      - General
      summary: About Smartinfo API and server.
      description: Return information about the Smartinfo API server service.
      operationId: jsAbout
      security:  []   # No security
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: string
                type: "string"
                example: {jsAboutResult: "This is the Smartinfo Server API service. Current time on server 2019-12-24 08:42"}

  /jsLogonUser:
    post:
      tags:
      - User
      summary: User login.
      description: Logon user with provided username, password and provided API-Key in **X-API-Key** header. The [LogonResultModel]() object received after successful logon will contain the JWT token you should supply in all future requests. This token should be added to the **Authorization** header. The JWT token is retrieved from the [LogonResultModel]() object in the *JWT_Token* property. This token expires normally 480 minutes after issuance. The number of minutes before expiration can be changed by Smartinfo administrators, based on user preferences and type of usage.

      operationId: jsLogonUser
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
             properties:
              username:
                type: string
              password:
                type: string
            example:
              username: TestUser
              password: ui23yojkbal978234!¤@£€123
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogonResultModel'
 
  /jsGetUserObject:
    post:
      tags:
      - User
      summary: Get current user info.
      description: Get the [UserModel]() object containing information about current user.
      operationId: jsGetUserObject
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        400:
          description: Invalid token
          
  /jsLogOutUser:
    post:
      tags:
      - User
      summary: Log out user.
      description: Log out current user.
      operationId: jsLogOutUser
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  jsLogOutUserResult:
                    type: boolean
              example:
                jsLogOutUserResult: true
        400:
          description: Invalid token

  /jsGetUserDatabases:
    post:
      tags:
      - Database
      summary: Get an array of all user databases.
      description: If user has access to multiple databases use this call to get an array of all available databases for the current user.

      operationId: jsGetUserDatabases
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseModels'
        400:
          description: Invalid token
          
  /jsSelectDatabase:
    post:
      tags:
      - Database
      summary: Select active database to use.
      description: If user has access to multiple databases use this call to select the active database to use in future calls. The *databaseID* should be a zero-based index of database to use from collection of  [DatabaseModels]()  retrieved in  [jsGetUserDatabases]().                              
      operationId: jsSelectDatabase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                databaseID:
                  type: integer
            example:
              databaseID: 3
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseModel'
        400:
          description: Invalid token

  /jsQueryAllByCustomDataEX:
    post:
      tags:
      - Search
      summary: Search using single metadata value.
      description: Performs a search based on metadata value. Will return all documents that matches the value in provided metadata field *columnID*.
      operationId: jsQueryAllByCustomDataEX
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                columnID:
                  type: integer
                value:
                  type: string
            example:
              columnID: 1
              value: "Information"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/QueryResultsModel'
        400:
          description: Invalid token
      
  /jsQueryAllWithFilter:
    post:
      tags:
      - Search
      summary: Search using single metadata value.
      description: Performs a search based on metadata value. Will return all documents that matches the value in provided metadata field *columnID*. Caller can supply a [QueryFilterModel]() filter to limit the search according to set values in filter.

      operationId: jsQueryAllWithFilter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                columnID:
                  type: integer
                value:
                  type: string
                filterModel:
                  $ref: '#/components/schemas/QueryFilterModel'
            example:
              columnID: 1
              value: "Information"
              queryFilter:
                IncludeExported: false
                IncludeExpired: false
                IncludeCheckedOut: true
                IncludeDeleted: false
                ItemOwner: ''
                SelectedDateRange: 0
                DateRangeFrom: '1999-12-02'
                DateRangeTo: '2019-12-24'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResultsModel'
        400:
          description: Invalid token

  /jsQueryAllFulltextWithFilter:
    post:
      tags:
      - Search
      summary: Performs a fulltext search on all data in system.
      description: Performs a fulltext search on all data in system. Will return all documents that contains the search value. Caller can supply a [QueryFilterModel]() filter to limit the search according to set values in filter.

      operationId: jsQueryAllFulltextWithFilter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
                filterModel:
                  $ref: '#/components/schemas/QueryFilterModel'
            example:
              value: "Information"
              filterModel:
                IncludeExported: false
                IncludeExpired: false
                IncludeCheckedOut: true
                IncludeDeleted: false
                ItemOwner: ''
                SelectedDateRange: 0
                DateRangeFrom: '1999-12-02'
                DateRangeTo: '2019-12-24'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResultsModel'
        400:
          description: Invalid token

  /jsQueryAllAdvanced:
    post:
      tags:
      - Search
      summary: Performs a fulltext search on all data in system.
      description: Performs a search with supplied array of [QueryParameterModel]() in system. Caller can supply a [QueryFilterModel]() filter to limit the search according to set values in filter.

      operationId: jsQueryAllAdvanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                filterModel:
                  $ref: '#/components/schemas/QueryFilterModel'
                queryParameters:
                  type: array
                  items:
                    $ref: '#/components/schemas/QueryParameterModel'
                  
            example:
              filterModel:
                IncludeExported: false
                IncludeExpired: false
                IncludeCheckedOut: true
                IncludeDeleted: false
                ItemOwner: ''
                SelectedDateRange: 0
                DateRangeFrom: '1999-12-02'
                DateRangeTo: '2019-12-24'
              queryParameters:
                Likeness: 40
                OperandBetweenValues: 20
                IsRange: false
                IsWFItemNumber: false
                ColumnID: 0
                DataTypeID: 1
                Value: ''
                ValueFrom: ''
                ValueTo: ''
                AllActiveDeviations: false
                AllFavorites: false
                AllDocumentTemplates: false
                UseDocumentID: false
                UseWFItemID: false
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResultsModel'
        400:
          description: Invalid token

  /jsAddDocument:
    post:
      tags:
      - Documents
      summary: Add new document.
      description: Add new [DocumentModel]() to the backend system. Make sure to supply at least one [FileModel]() in *Files[]* property.
      operationId: jsAddDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                document:
                  $ref: '#/components/schemas/DocumentModel'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  DocumentID:
                    type: integer
                  IsAddSuccessful:
                    type: boolean
              example:
                DocumentID: 18965
                IsAddSuccessful: true
        400:
          description: Invalid token
  
  /jsGetDocumentByID:
    post:
      tags:
      - Documents
      summary: Get document by ID.
      description: Get the [DocumentModel]() object based on supplied *id*.

      operationId: jsGetDocumentByID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
            example:
                id: 18965
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModel'
        400:
          description: Invalid token

  /jsGetFileByID:
    post:
      tags:
      - Documents
      summary: Get file by ID.
      description: Get the [FileModel]() object based on supplied *id*.

      operationId: jsGetFileByID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
            example:
                id: 27384
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
        400:
          description: Invalid token

  /jsDeleteDocumentByID:
    post:
      tags:
      - Documents
      summary: Delete document by ID.
      description: Delete the [DocumentModel]() object with suppled *id*. This will flag the document as deleted in backend system and will not physically remove the document.

      operationId: jsDeleteDocumentByID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
            example:
                id: 18965
      responses:
        200:
          description: Successful response
        400:
          description: Invalid token


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
  
  
  schemas:
    
    DatabaseModels:
      type: array
      items:
        $ref: '#/components/schemas/DatabaseModel'
      
    LogonResultModel:
      title: LogonResultModel
      type: object
      properties:
        IsAuthenticated:
          type: boolean
        LoginResult:
          type: string
        UserGuid:
          type: string
        Username:
          type: string
        JWT_Token:
          type: string
          
    FileModel:
      title: FileModel
      type: object
      properties:
        ID:
          type: integer
        DocumentID:
          type: integer
        FileName:
          type: string
        OriginalFullFileName:
          type: string
        FileSize:
          type: integer
          format: int64
        FileExtension:
          type: string
        RelativeStoragePath:
          type: string
        RelativeStorageFileName:
          type: string
        Deleted:
          type: boolean
        StoreFileInDB:
          type: boolean
        DBFileID:
          type: integer
        Version:
          type: integer
        CreatedBy:
          type: string
        DeletedBy:
          type: string
        ModifiedBy:
          type: string
        VersionStatus:
          type: integer
        VersionStatusText:
          type: string
        VersionComment:
          type: string
        TotalVersions:
          type: integer
        HasVersions:
          type: boolean
        IsCheckedOut:
          type: boolean
        IsFileBytesLoaded:
          type: boolean
        IsViewerSupportedFile:
          type: boolean
        IsViewerSupportedDocumentFile:
          type: boolean
        HasThumbnailImage:
          type: boolean
        FileDate:
          type: string
        DateCreated:
          type: string
        DateModified:
          type: string
        DateDeleted:
          type: string
        Versions:
          type: array
          items:
            $ref: '#/components/schemas/FileModel'
        Base64FileInput:
          type: string
          format: byte
        ThumbnailImageBase64:
          type: string
          format: byte
      
      
    NoteModel:
      title: NoteModel
      type: object
      properties:
        ID:
          type: integer
        CreatedBy:
          type: string
        Deleted:
          type: boolean
        DateCreated:
          type: string
        DateModified:
          type: string
        DateDeleted:
          type: string
        DeletedBy:
          type: string
        ModifiedBy:
          type: string
        NoteText:
          type: string
        Version:
          type: integer
        DocumentID:
          type: integer
        WFItemID:
          type: integer

    HistoryModel:
      title: HistoryModel
      type: object
      properties:
        ID:
          type: integer
        CreatedBy:
          type: string
        HistoryUser:
          type: string
        DateCreated:
          type: string
        HistoryText:
          type: string
        System:
          type: string
        Type:
          type: integer

    ReminderModel:
      title: ReminderModel
      type: object
      properties:
        ID:
          type: integer
        DocumentID:
          type: integer
        NotificationsSent:
          type: integer
        Name:
          type: string
        CreatedBy:
          type: string
        ModifiedBy:
          type: string
        Note:
          type: string
        Message:
          type: string
        ExternalUsersToNotify:
          type: string
        Dismissed:
          type: boolean
        SendNotificationEmail:
          type: boolean
        OverDue:
          type: boolean
        TriggerDateReached:
          type: boolean
        ReminderDate:
          type: string
        ReminderEndDate:
          type: string
        TriggerDate:
          type: string
        DateDismissed:
          type: string
        DateCreated:
          type: string
        DateModified:
          type: string
        DateLastNotificationSent:
          type: string
        DueInTimeString:
          type: string
        SelectedTimeSpan:
          type: object
        Users:
          type: array
          items:
            type: string
        Groups:
          type: array
          items:
            type: string
    
    DocumentModel:
      title: DocumentModel
      type: object
      properties:
        ID:
          type: integer
        DocumentName:
          type: string
        IsInWorkFlow: 
          type: boolean
        HasFile:
          type: boolean
        HasCustomData: 
          type: boolean
        UserGuid:
          type: string
        BatchesID:
          type: integer
        Note:
          type: string
        SecurityCode:
          type: string
        CreatedBy:
          type: string
        ModifiedBy:
          type: string
        DeletedBy:
          type: string
        DocumentTitle:
          type: string
        ItemNamingInfoID:
          type: integer
        AutoFolderInfoID:
          type: integer
        IsPossibleMatch:
          type: boolean
        IsCustomDataEXFromExternal:
          type: boolean
        IsCheckedOut:
          type: boolean
        IsSecured:
          type: boolean
        IsTemplate:
          type: boolean
        IsScanned:
          type: boolean
        DocumentHasReminders:
          type: boolean
        Dirty:
          type: boolean
        Version:
          type: integer
        DeviationStatus:
          type: integer
        CurrentDeviationUser:
          type: string
        DeviationNote:
          type: string
        IsFavourite:
          type: boolean
        IsAuthorizedToViewDocument:
          type: boolean
        DateDeviationCompleted:
          type: string
        DateDeviationChange:
          type: string
        DateAdded:
          type: string
        DateModified:
          type: string
        DateDeleted:
          type: string
        CustomDataEXs:
          type: array
          items:
            $ref: '#/components/schemas/CustomDataEXModel'
        Notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteModel'
        History:
          type: array
          items:
            $ref: '#/components/schemas/HistoryModel'
        Files:
          type: array
          items:
            $ref: '#/components/schemas/FileModel'
        Reminders:
          type: array
          items:
            $ref: '#/components/schemas/ReminderModel'
        AccessGroups: 
          type: array
          items:
            type: string
        AccessGroupNames:
          type: array
          items:
            type: string
        AccessUsers:
          type: array
          items:
            type: string
        AccessUserNames:
          type: array
          items:
            type: string
        Base64FileInput:
          type: string
          format: byte
        Filename:
          type: string
      
    WFItemModel:
      title: WFItemModel
      type: object
      properties:
        ID:
          type: integer
        InstanceGUID:
          type: string
        WFGuid:
          type: string
        TimesCheckedOut:
          type: integer
        ItemGroupID:
          type: integer
        ItemGroupName:
          type: string
        ItemID:
          type: string
        ItemTitle:
          type: string
        ItemTypeID:
          type: integer
        ItemType:
          type: string
        ItemGroup:
          type: string
        ItemTypeName:
          type: string
        Note:
          type: string
        StatusText:
          type: string
        OwnedBy:
          type: string
        CreatedBy:
          type: string
        CompletedBy:
          type: string
        DeletedBy:
          type: string
        CheckedOutBy:
          type: string
        PreviouslyCheckedOutBy:
          type: string
        CurrentUser:
          type: string
        State:
          type: string
        MissedDocuments:
          type: string
        Deleted:
          type: boolean
        Completed:
          type: boolean
        OverDue:
          type: boolean
        CheckedOut:
          type: boolean
        IsMine:
          type: boolean
        Exported:
          type: boolean
        Dirty:
          type: boolean
        HasPossibleMatches:
          type: boolean
        ItemStatus:
          type: integer
        DateCreated:
          type: string
        DateDeleted:
          type: string
        DateExported:
          type: string
        DateCompleted:
          type: string
        DateStarted:
          type: string
        DateLastCheckOut:
          type: string
        DateDue:
          type: string
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentModel'
        Notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteModel'
        History:
          type: array
          items:
            $ref: '#/components/schemas/HistoryModel'
        MissingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentModel'
        PossibleMatchedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentModel'
        ItemStatusColors:
          type: array
          items:
            type: string
        Reminders:
          type: array
          items:
            $ref: '#/components/schemas/ReminderModel'
        MissingInfoNote:
          type: string
        MissedDocumentsText:
          type: string
        IsFavourite:
          type: boolean
        IsAuthorizedToViewWFItem:
          type: boolean
  
    CustomDataEXModel:
      title: CustomDataEXModel
      type: object
      properties:
        ID:
          type: integer
        ColumnID:
          type: integer
        DocumentID:
          type: integer
        ValueString:
          type: string
        ColumnName:
          type: string
        ColumnLabel:
          type: string
        Description:
          type: string
        DefaultValue:
          type: string
        IsBoolean:
          type: boolean
        IsLookup:
          type: boolean
        IsFixed:
          type: boolean
        IsVisible:
          type: boolean
        IsQueryable:
          type: boolean
        IsShownInResults:
          type: boolean
        IsShownInWFItemResults:
          type: boolean
        IsReadOnly:
          type: boolean
        IsTitle:
          type: boolean
        IsStartDate:
          type: boolean
        IsEndDate:
          type: boolean
        IsTerm:
          type: boolean
        IsPeriodOfNotice:
          type: boolean
        IsReminderDaysBeforeDue:
          type: boolean
        IsAmount:
          type: boolean
        AllowMultiple:
          type: boolean
        DataTypeID:
          type: integer
        DataTypeName:
          type: string
        LookupValues:
          type: array
          items: 
            type: string
    
    WFItemGroupModel:
      title: WFItemGroupModel
      type: object
      properties:
        ID:
          type: integer
        GroupName:
          type: string
        DisplayName:
          type: string
        Version:
          type: integer
    
    WFItemTypeModel:
      title: WFItemTypeModel
      type: object
      properties:
        ID:
          type: integer
        DefaultDaysBeforeOverDue:
          type: integer
        TypeName:
          type: string
        DisplayName:
          type: string
        TypeFilterString:
          type: string
        Note:
          type: string
        Version:
          type: integer
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/WFItemGroupModel'
      
    DatabaseModel:
      title: DatabaseModel
      type: object
      properties:
        Index:
          type: integer
        DatabaseName:
          type: string
        DatabaseGuid:
          type: string
        DBVersion:  
          type: string
        CreationDate:
          type: string
        LastUpdated:
          type: string
        DatabaseSize:
          type: integer
        ItemStorageFullPath: 
          type: string
        TotalFiles:
          type: integer
        TotalWorkFlowItems:
          type: integer
        TotalDocuments:
          type: integer
        TotalBatches:
          type: integer
        ConnectionString:
          type: string
        WFItemGroups:
          type: array
          items:
            $ref: '#/components/schemas/WFItemGroupModel'
        WFItemTypes: 
          type: array
          items:
            $ref: '#/components/schemas/WFItemTypeModel'
        CustomDataEXColumns:
          type: array
          items:
            $ref: '#/components/schemas/CustomDataEXModel'
          
    GroupModel:
      title: GroupModel
      type: object
      properties:
        ID:
          type: integer
        GroupGuid:
          type: string
        GroupName:
          type: string
        DisplayName:
          type: string
        Description:
          type: string
        SystemAppModules:
          type: integer
        Users:
          type: array
          items: 
            $ref: '#/components/schemas/UserModel'
        Databases: 
          type: array
          items: 
            $ref: '#/components/schemas/DatabaseModel' 

    UserModel:
      title: UserModel
      type: object
      properties:
        AccountLockedTime: 
          type: string
        AccountLocksCount:
          type: integer
        ActiveDatabase:
          $ref: '#/components/schemas/DatabaseModel'
        ApplicationMode:
          type: integer
        Company: 
          type: string
        DatabaseInfos: 
          type: array
          items: 
            $ref: '#/components/schemas/DatabaseModel' 
        Description: 
          type: string
        DisplayName:
          type: string
        DomainName:
          type: string
        Email:
          type: string
          format: email
        FirstName:
          type: string
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupModel'
        ID:
          type: integer
        IsAccountActive:
          type: boolean
        IsAccountLocked:
          type: boolean
        IsApproved:
          type: boolean
        IsDBAdmin:
          type: boolean
        IsLoggedIn:
          type: boolean
        IsSysAdmin:
          type: boolean
        IsWEBenabled:
          type: boolean
        LastName:
          type: string
        LoginResult:
          type: string
        Mobile:
          type: string
        OtherUsers:
          type: array
          items: 
            type: object
        Password:
          type: string
        Phone:
          type: string
        UserGuid:
          type: string
        UserInitials:
          type: string
        UserName:
          type: string
        UserTicketGuid:
          type: string
    
    WFItemQueryFilterModel:
      title: WFItemQueryFilterModel
      type: object
      properties:
        IncludeCompleted:
          type: boolean
        IncludeExported:
          type: boolean
        IncludeCheckedOut:
          type: boolean
        IncludeNew:
          type: boolean
        IncludeDeleted:
          type: boolean
        IncludeInProgress:
          type: boolean
        IncludeOnlyMyWFItems:
          type: boolean
        GroupID:
          type: integer
        ItemTypeID:
          type: integer
        ItemOwner:
          type: string
        DateRangeFrom:
          type: string
          format: dateTime
        DateRangeTo:
          type: string
          format: dateTime
        AvailableDateRanges: 
          type: array
          items:
            properties:
              DateRange:
                type: integer
              DisplayName:
                type: string
        SelectedDateRange:
          properties:
            DateRange:
              type: integer
            DisplayName:
              type: string
    
    QueryFilterModel:
      title: QueryFilterModel
      type: object
      properties:
        IncludeExported:
          type: boolean
        IncludeExpired:
          type: boolean
        IncludeCheckedOut:
          type: boolean
        IncludeDeleted:
          type: boolean
        ItemOwner:
          type: string
        SelectedDateRange:
          type: integer
        DateRangeFrom:
          type: string
          format: dateTime
        DateRangeTo:
          type: string
          format: dateTime
    
    QueryParameterModel:
      title: QueryParameterModel
      type: object
      properties:
        Likeness:
          type: integer
        OperandBetweenValues:
          type: integer
        IsRange:
          type: boolean
        IsWFItemNumber:
          type: boolean
        ColumnID:
          type: integer
        DataTypeID:
          type: integer
        Value:
          type: string
        ValueFrom:
          type: string
        ValueTo:
          type: string
        AllActiveDeviations:
          type: boolean
        AllFavorites:
          type: boolean
        AllDocumentTemplates:
          type: boolean
        UseDocumentID:
          type: boolean
        UseWFItemID:
          type: boolean

    
    QueryResultsModel:
      title: QueryResultsModel
      type: object
      properties:
        ResultCountTotal:
           type: integer
        ResultCountWFItems:
           type: integer
        ResultCountDocuments:
           type: integer
        ResultCountHiddenDocuments:
           type: integer
        ResultCountHiddenWFItems:
           type: integer
        ResultCountHiddenTotal:
           type: integer
        Columns:
          type: array
          items:
            $ref: '#/components/schemas/CustomDataEXModel'
        WFItemColumns: 
          type: array
          items:
            type: string
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentModel'
        WFItems: 
          type: array
          items:
            $ref: '#/components/schemas/WFItemModel'
        WFItemQueryFilter: 
          $ref: '#/components/schemas/WFItemQueryFilterModel'