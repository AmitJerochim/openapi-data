openapi: "3.0.2"
info:
  title: ScanViS Server API
  version: v1
  description: General Cloud Engine API Document 
servers:
  - url: 'http://localhost:2021'
    description: dev
paths:
  /api/v1/jemex/auth/login/:
    post:
      tags: 
      - Auth
      summary: Auth login
      requestBody:
        description: jemex request body
        content:
          application/json:
              schema:
                type: object
                properties:
                  fr_consent:
                    type: boolean
                  frphoto_url:
                    type: string
                  frphoto_validated:
                    type: boolean
                  profile_photo_url:
                    type: string
                  profile_photo_validated:
                    type: boolean
      responses:
        '200':
          description: Success response
          headers:
            token:
              schema:
                type: string
              description: jwt use next request
        '401':
          $ref: '#/components/responses/401'
  
  /api/v1/jemex/face/verification/:
    post:
      tags: 
      - face
      summary: Quality Verification
      parameters:
        - in: header
          name: token
          schema:
            type: integer
          description: jwt from last request
      requestBody:
          description: signature
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    image:
                      type: string
                      format: binary
      responses:
        '200':     
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
        '401':
          $ref: '#/components/responses/401'

  /api/v1/jemex/face/confirmation/:
    post:
      tags: 
      - face
      summary: confirm qv image
      parameters:
        - in: header
          name: token
          schema:
            type: integer
          description: jwt from last request
      requestBody:
        description: image from qv pass
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success response
          headers:
            token:
              schema:
                type: string
              description: jwt use next request
          content:
            application/json:
              schema:
                type: object
                properties:
                  qv_image_url:
                    type: string
        '401':
          $ref: '#/components/responses/401'

  /api/v1/jemex/face/comparision/:
    post:
      tags: 
      - face
      summary: face comparision
      parameters:
        - in: header
          name: token
          schema:
            type: integer
          description: jwt from last request
      requestBody:
        description: image to comparision
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success response
          headers:
            token:
              schema:
                type: string
              description: jwt use next request
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  score:
                    type: string
        '401':
          $ref: '#/components/responses/401'
          
  /api/v1/jemex/profile/confirmation/:
    post:
      tags: 
      - profile
      summary: profile update
      parameters:
        - in: header
          name: token
          schema:
            type: integer
          description: jwt from last request
        - in: query
          name: is_same_frphoto
          schema:
            type: boolean
      requestBody:
        description: profile image
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success response
          headers:
            token:
              schema:
                type: string
              description: jwt use next request
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile_photo_url:
                    type: string
        '401':
          $ref: '#/components/responses/401'

  /api/v1/jemex/result/submit/:
    post:
      tags:
      - submit
      summary: submit result to jemex
      parameters:
        - in: header
          name: token
          schema:
            type: integer
          description: jwt from last request
      
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  sign:
                    type: string
                  frphoto_profile_is_same:
                    type: boolean
                  frphoto_url:
                    type: string
                  frphoto_verified:
                    type: boolean
                  profile_photo_update_at:
                    type: integer
                  profile_photo_url:
                    type: string
                  RPV_status:
                    type: boolean
                  RPV_verified_at:
                    type: integer
                    example: 1544153985349
        '401':
          $ref: '#/components/responses/401'

components:
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
    basicAuth:
      type: http
      scheme: basic
    signAuth:
      type: apiKey
      in: header
      name: X-Signature
      description: Signature used to auth invite api.
  schemas:
    UUID:
      type: string
      format: uuid
      example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    ID:
      type: integer
      format: int32
      example: 2
    Timestamp:
      type: integer
      example: 1544153985349
    ImageURL:
      type: string
      description: image url
      example: 'https://example.com/images/123'
    ImageURLs:
      type: object
      description: image src and thumbnial urls.
      properties:
        id:
          $ref: '#/components/schemas/ID'
        src:
          $ref: '#/components/schemas/ImageURL'
        thumbnail:
          $ref: '#/components/schemas/ImageURL'
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
      - message
      - code
    ErrorResp:
      type: object
      description: For some field error, errors key is the field name.<br>For other error, like 401, 403, key is '_default'
      properties:
        status_code:
          type: integer
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
  parameters:
    basic:
      name: Authorization
      in: header
      required: true
      description: 'Basic authrization, format is `Basic {base64(email:pass)}`'
      schema:
        type: string
    token:
      name: Authorization
      in: header
      required: true
      description: 'Token authrization, format is `Token {{Token}}`'
      schema:
        type: string
        default: 'Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NDQ4NTQwNjk3MjUsInVzZXIiOnsiaWQiOjEsImVtYWlsIjoiYUB0LmlvIn19.LtPRG0jl_Ta3L_6CwBUSnBquBeQFC4qyBerVt8aGj74'
    sign:
      name: X-Signature
      in: header
      required: true
      description: Signature authrization, format is `{{Signature}}`
      schema:
        type: string
        default: 'bT0wJmk9NiZ2PTcmcz1wdTNjNjV6V1JjYUg1cTVYU2lBZUdwYnE2OUk='
        
  responses:
    '204':
      description: No Content
    '401':
      description: Unauthroized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResp'
          example:
            status_code: 401
            errors:
              _default:
              - message: Authentication credentials were not provided.
                code: not_authenticated
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResp'
          example:
            status_code: 404
            errors:
              _default:
              - message: Not found.
                code: not_found
