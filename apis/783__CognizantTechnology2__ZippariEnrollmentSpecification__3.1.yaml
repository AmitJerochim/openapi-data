openapi: 3.0.0
info:
  version: '3.1'
  title: 'Zippari API Specification'
  description: 'API Specifications for Payers to implement for integration with Zipari Broker Portal and Shopping Portal'
servers: 
  - url: https://virtserver.swaggerhub.com/Zipari-Core-Services/zipari_broker_portal_v_3_0_0_payer_api_specification/3.1

tags:
- name: "enrollment"
- name: "application status"
paths: 
    /applications/individual:
      post:
        tags:
        - "enrollment"
        summary: "Post individual application data to payer"
        description: "Application or Enrollment Submission API is a standard Zipari Product API for submission of the application data captured as part of the enrollment submission workflow to the enrollment system of record. This API schema supports enrollment submissions for Individual & Family, Medicare and Supplemental market segments."
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Enrollment"
        responses:
          200:
            description: "Sucessfully submitted the application. For real time integrations, response code of 422 can be used for Validation Errors and the EnrollmentStatus returns all the validation errors to be displayed to the users."
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/EnrollmentStatus"
          403:
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/Error" 
          422:
            description: "Data Processing Failed"  
            content:
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'
      put:
        tags:
        - "enrollment"
        summary: "Post updated individual application data to payer"
        description: "Application or Enrollment Submission API is a standard Zipari Product API for submission of the application data captured as part of the enrollment submission workflow to the enrollment system of record. This API schema supports enrollment submissions for Individual & Family, Medicare and Supplemental market segments."
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Enrollment"
        responses:
          200:
            description: "Sucessfully submitted the application. For real time integrations, response code of 422 can be used for Validation Errors and the EnrollmentStatus returns all the validation errors to be displayed to the users."
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/EnrollmentStatus"
          403:
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/Error" 
          422:
            description: "Data Processing Failed"  
            content:
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'
                  
    /applications/individual/{application_number}/status:
      get:
        tags:
        - "application status"
        summary: "Get application enrollment status"
        description: "Return a enrollment status object."
        parameters:
          - in: path
            name: application_number
            required: true
            description: "unique identifier of the application"
            schema:
              type: "string"
        responses:
          200:
            description: "Sucessfully submitted the application. For real time integrations, response code of 422 can be used for Validation Errors and the EnrollmentStatus returns all the validation errors to be displayed to the users."
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/EnrollmentStatus"
          403:
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/Error" 
          422:
            description: "Data Processing Failed"  
            content:
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'  
          
        
        
components:
  schemas:
  
    ValidationError:
      type: object
      properties:
        code:
          type: "integer"
          format: "$int32"
        user_friendly_message:
          type: "string"
          description: "a message to be displayed for the user to understand the error and take action"
        field_name:
          type: "string"
          description: "field name associated with the error message."
      
    Error:
      type: object
      properties:
        code:
          type: "integer"
          format: "$int32"
        user_friendly_message:
          type: "string"
        system_message:
          type: "string"
        validation_errors:
          type: "array"
          description: "error messages associated with any data level validations or orther validations. optional attribute needed only to get more details of the error."
          items:
            $ref: "#/components/schemas/ValidationError"
      
    EnrollmentStatus:    
      type: object
      properties:
        application_id:
          type: "string"
          description: "unique identifier of the application generated by Zipari"
        application_submitted_date:
          type: "string"
          description: "application (enrollment) submit date and time"
          format: "$datetime"
        status_update_date: 
          type: "string"
          description: "application / enrollment status updated on date"
          format: "$datetime"
        status:
          type: "string"
          description: "enrollment status (configurable enum values)"
          enum:
          - "pending"
          - "effectuated"
          - "withdrawn"
          - "denied "
        confirmation_number:
          type: "string"
          description: "an unique number generated for the enrollment submission by the payer system."
        error:
          type: "object"
          $ref: "#/components/schemas/Error"
      
    QuestionResponse:
      type: object
      properties:
        question_id:
          type: "string"
          description: "unique identifier for the question"
        response:
          type: "string"
          description: "user response for the question"
        additional_responses:
          type: "array"
          description: "list of sub questions and its responses"
          items: {}
        uploaded_files:
          type: "array"
          description: "List of files uploaded as part of the question."
          items:
           $ref: "#/components/schemas/Document"
         
    Document:
      type: object
      required:
      - "id"
      - "file_type"
      - "file_name"
      - "url"
      - "document_category"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the document which can be used for referencing the document"
        file_type:
          type: "string"
          description: "Type of the file"
          enum:
          - "pdf"
          - "worddoc"
          - "excel"
          - "jpeg"
          - "tif"
          - "png"
        file_name:
          type: "string"
          description: "Display name of the document. This name will be used for display on user interface"
        url:
          type: "string"
          description: "URL for accessing the document from the source rpository."
        effective_date:
          type: "string"
          description: "Effective date on which the document can be displayed to the user."
          format: "$YYYY-MM-DD"
        termination_date:
          type: "string"
          description: "Date after which the document is no longer visible for the user."
          format: "$YYYY-MM-DD"
        document_date:
          type: "string"
          description: "Date of creation of the document."
          format: "$YYYY-MM-DD"
        document_category:
          type: "string"
          description: "carrier specific document categorization for filtering. New categories can be included based on configuration."
          enum:
          - "Claims"
          - "Benefits"
          - "Forms"
          - "jpeg"
          - "tif"
          - "png"
        language:
          type: "string"
          description: "language of the document ( English, Spanish etc)"
          
    PaymentInformation:
      type: object
      properties:
        payment_id:
          type: "string"
          description: "Generic payment identifier. This will usually be either a confirmation number or a transaction id provided by the payment gateway vendor."
        method_of_payment:
          type: "string"
          description: "payment method selected by the user."
          enum:
          - "eft"
          - "credit_card"
          - "social_security"
          - "rail_road"
    Signature:
      type: object
      properties:
        name:
          type: "string"
          description: "name of the signee"
        signature_datetime:
          type: "string"
          description: "date of signature (attestation)"
          format: "$MM-DD-YYYY HH:MM:SS"
        signee_type:
          type: "string"
          description: "type of the person performing the signature"
          enum:
          - "enrollee"
          - "authorized_person"
          - "broker"
          - "sales_rep"
   
    Name:
      type: object
      required:
      - "first_name"
      - "last_name"
      description: "Defines the Name of the Person"
      properties:
        first_name:
          type: "string"
        last_name:
          type: "string"
        middle_name:
          type: "string"
        prefix:
          type: "string"
        suffix:
          type: "string"
          
    Address:
      type: object
      required:
      - "street_name_1"
      - "city_name"
      - "zip_code"
      - "state"
      - "address_type "
      properties:
        street_name_1:
          type: "string"
          description: "Street Name" 
        street_name_2:
          type: "string"
          description: "Optional additional lines for Street Name" 
        street_name_3:
          type: "string"
          description: "Optional additional lines for Street Name" 
        city_name:
          type: "string"
          description: "Name of the City" 
        zip_code:
          type: "string"
          description: "Zipcode" 
          format: "000000"
        state:
          type: "string"
          description: "State name" 
        address_type:
          type: "string"
          description: "Physical or Mailing address" 
          enum:
          - "physical"
          - "mailing"
          
    Contact:
      type: object
      properties:
        contact_id:
          type: "string"
          description: "unique identifier for contact assigned by the payer"
        name:
          type: "object"
          $ref: "#/components/schemas/Name"
        gender:
          type: "string"
          description: "gender of the contact"
        addresses:
          type: "array"
          items:
            $ref : "#/components/schemas/Address"
        contact_relationship:
          type: "string"
          description: "The nature of the relationship between the member and the contact person."
         
    Group:
      type: object
      properties:
        group_number:
          type: "string"
          description: "unique identifier of the group. used for group based portal view configurations."
        group_name:
          type: "string"
          description: "name of the group / company"
        effective_date:
          type: "string"
          description: "group effective date"
          format: "$YYYY-MM-DD"
        termination_date:
          type: "string"
          description: "group termination date "
          format: "$YYYY-MM-DD"
        group_status:
          type: "string"
          description: "status of the group"
          enum:
          - "active"
          - "terminated"
    Broker:
      type: object
      required:
      - "broker_id"
      - "name"
      properties:
        id:
          type: "string"
          description: "unique identifier for the broker assigned by Zipari"
        broker_id:
          type: "string"
          description: "unique identifier for a broker assigned by the payer system"
        name:
          type: "string"
          $ref: "#/components/schemas/Name"
        addresses:
          type: "array"
          description: "addresses associated with the broker"
          items:
            $ref: "#/components/schemas/Address"
        phone_number:
          type: "string"
          description: "brokers phone number."
        email_address:
          type: "string"
          description: "email address of the broker. Conditionally required if email based functionalities are enabled."
        npn:
          type: "string"
          description: "brokers national producer number"
    
    Member:
      type: object
      required: 
      - "member_number"
      - "name"
      properties:
        member_number:
          type: "string"
          description: "unique member identifier assigned by the payer"
        member_display_identifier: 
          type: "string"
          description: "Member number used for display on Portal. This is typically a member recognizable identifier e.g. ID on the ID Card. This number is used only for display purposes and not used by any API."
        name:
          type: "object"
          $ref: "#/components/schemas/Name"
        ssn:
          type: "string"
          description: "Members social security number"
        gender:
          type: "string"
          description: "Members gender"  
          enum:
          - "male"
          - "female"
          - "not_specified"
        birth_date:
          type: "string"
          description: "members Date of Birth "
          format: "$YYYY-MM-DD"
        tobacco_use:
          type: "boolean"
          description: "Does the member uses tobacco or not"
        marital_status:
          type: "string"
          description: "Members marital status" 
        ethnicity:
          type: "string"
          description: "The ethnicity of the member"    
        home_phone:
          type: "string"
          description: "Members registered home phone number"    
        cell_phone:
          type: "string"
          description: "Members registered cell phone number"  
        office_phone:
          type: "string"
          description: "Members registered office phone number" 
        primary_phone_type:
          type: "string"
          description: "Members preferred phone contact type"    
          enum:
          - "home"
          - "cell"
          - "office"
        email_address:
          type: "string"
          description: "Members registered email address  "    
        primary_language:
          type: "string"
          description: "Members primary language"  
        secondary_language:
          type: "string"
          description: "Members secondary language"    
        has_disability:
          type: "string"
          description: "Member disability status" 
        relationship_to_subscriber:
          type: "string"
          description: "Members relationship to subscriber ( This is not needed for Medicare Market)" 
          enum:
          - "Self"
          - "Spouse"
          - "Daughter"
          - "Son"
        subscriber_number :
          type: "string"
          description: "Identifier of the Primary Subscriber Members relationship to subscriber ( This is not needed for Medicare Market)" 
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/Address"
        privacy_restriction:
          type: "boolean"
          description: "(Yes/No) flag providing instruction on whether the member has any privacy data access restriction enabled. (Yes - Restricted, No - Not Restricted.)" 
          
          
    MemberCoverage:
      type: object
      required: 
      - "member_coverage_id"
      - "external_plan_id"
      - "effective_date"
      - "termination_date"
      - "members"
      properties:
        member_coverage_id:
          type: "string"
          description: "unique identifier for the member to coverage association. Ideally this is an identifier that crossmaps the member to a specific coverage. This id is used as an input parameter in the /benefit-periods API."
        external_plan_id: 
          type: "string"
          description: "unique plan identifier assigned by the payer. This plan idenitifier is used for retrieving benefits assoicated with the plan."
        effective_date:
          type: "string"
          description: "member coverage effective date "
          format: "$YYYY-MM-DD"
        termination_date:
          type: "string"
          description: "member coverage termination date"
          format: "$YYYY-MM-DD" 
        members:
          type: "array"
          items:
            $ref: "#/components/schemas/Member"
    
    ProductCoverage:
      type: object
      required: 
      - "product_coverage_type"
      - "member_coverages"
      properties:
        product_coverage_id:
          type: "string"
          description: "A unique product coverage identifier that is used to uniquely identify Product Coverage level information. This is different from a Member Coverage Id which is unique to a member."
        product_coverage_type:
          type: "string"
          description: "type of product coverage"
          enum:
          - "medical"
          - "dental"
          - "vision"
          - "drug"
          - "life"
          - "accident"
          - "medicare"
          - "medigap"
        effective_date:
          type: "string"
          description: "coverage effective date "
          format: "$YYYY-MM-DD"
        termination_date:
          type: "string"
          description: "coverage termination date"
          format: "$YYYY-MM-DD" 
        external_plan_id: 
          type: "string"
          description: "unique plan identifier assigned by the payer. This plan idenitifier is used for retrieving benefits assoicated with the plan."
        external_plan_name:
          type: "string"
          description: "name of the plan as provided on enrollment."
        external_plan_name_sbc_url:
          type: "string"
          description: "url to access plan sbc. optional field."
          format: "url" 
        member_coverages:
          type: "array"
          description: "details of members who have elected the product coverage."
          items:
            $ref: "#/components/schemas/MemberCoverage"
            
        
    
    Application:      
      type: object
      required:
      - "id"
      - "created_at"
      - "submitted_date"
      - "state"
      - "address_type "
      properties:
        id:
          type: "string"
          description: "unique identifier of the application generated by Zipari"
        created_at:
          type: "string"
          format: "date-time"
          description: "application (enrollment) creation date and time"
        submitted_date*:
          type: "string"
          format: "date-time"
          description: "application (enrollment) submitted date and time"
        confirmation_number:
          type: "string"
          description: "unique application confirmation number provided by the payer system for a submitted application. Used for client systems which uses the confirmation number for application lookup for resubmissions."
        client_id:
          type: "string"
          description: "client id associated with the application submitted from the broker portal. This is a zipari internal id used for cross referencing applications generated for a specific client."
        app_filing_entity:
          type: "string"
          description: "Who submitted the application (applicant, broker, power of attorney, customer service rep, direct sales agent)"
          enum:
          - "applicant"
          - "broker"
          - "poa"
          - "csr"
          - "dsa"
        enrollment_questionnaire_responses:
          type: "array"
          description: "responses to the questions associated with the enrollment application"
          items:
            $ref: "#/components/schemas/QuestionResponse"
        uploaded_files:
          type: "array"
          description: "List of files uploaded as part of the application."
          items:
           $ref: "#/components/schemas/Document"
        payment_info:
          type: object
          $ref: "#/components/schemas/PaymentInformation"
        signatures:
          type: "array"
          description: "signatures associated with the application."
          items:
           $ref: "#/components/schemas/Signature"
    Policy:
      type: object
      required: 
      - "product_coverages"
      properties:
        policy_number:
          type: "string"
          description: "unique policy identifier"
        policy_status:
          type: "string"
          description: "status of the policy"
          enum:
          - "active"
          - "terminated"
          - "inactive"
        policy_status_reason:
          type: "string"
          description: "reason for status being terminated or inactive"
        policy_premium:
          type: "string"
          description: "premium associated with the policy"
        effective_date:
          type: "string"
          description: "policy effective date"
          format: "$YYYY-MM-DD"
        termination_date:
          type: "string"
          description: "policy termination date"
          format: "$YYYY-MM-DD"
        product_coverages:
          type: "array"
          description: "coverages associated with the policy."
          items:
            $ref: "#/components/schemas/ProductCoverage"
        group:
          type: "object"
          $ref: "#/components/schemas/Group"
        policy_contacts:
          type: "array"
          description: "Contact person associated with the policy on behalf od the member"   
          items:
            $ref: "#/components/schemas/Contact"
            
            
    Enrollment:
      type: object
      properties:
        application:
          type: "object"
          $ref: "#/components/schemas/Application"
        agents:
          type: "array"
          description: "broker assoicated with the enrollment application"
          items:
            $ref: "#/components/schemas/Broker"
        policies:
          type: "array"
          description: "policy and coverage details assoicated with the enrollment application"
          items:
            $ref: "#/components/schemas/Policy"
