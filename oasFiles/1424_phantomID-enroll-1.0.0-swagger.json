{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "Demo server",
    "url" : "https://virtserver.swaggerhub.com"
  } ],
  "info" : {
    "description" : "This API is used to enroll user",
    "version" : "1.0.0",
    "title" : "Enroll/Auth",
    "contact" : {
      "email" : "phantom@no-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "enroll",
    "description" : "Operations available for enrollment"
  }, {
    "name" : "authenticate",
    "description" : "Operations available for authentication"
  } ],
  "paths" : {
    "/auth" : {
      "post" : {
        "tags" : [ "authenticate" ],
        "summary" : "authenticates a user's fingerprint",
        "operationId" : "authUser",
        "description" : "By passing in appropriate images, a user's fingerprint can be authenticated\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "1.0.0" : {
                "value" : "1.0.0",
                "summary" : "version 1.0.0 of the API"
              }
            }
          }
        }, {
          "in" : "query",
          "name" : "type",
          "description" : "the type of enrollment",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "examples" : {
            "fingerprint" : {
              "value" : "fingerprint",
              "summary" : "enroll using finger"
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/requestBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successfully enrolled/queued",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResponseBody"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/enroll" : {
      "get" : {
        "tags" : [ "enroll" ],
        "summary" : "checks if a user is enrolled",
        "operationId" : "getEnrollment",
        "description" : "by calling this API we can verify is a user has been enrolled",
        "parameters" : [ {
          "in" : "header",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "1.0.0" : {
                "value" : "1.0.0",
                "summary" : "version 1 of the API"
              }
            }
          }
        }, {
          "in" : "header",
          "name" : "userid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "dummyUser" : {
                "value" : "dummyuser",
                "summary" : "userid of the enrolled user"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "enrollment absent/present",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResponseBody"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "delete" : {
        "tags" : [ "enroll" ],
        "summary" : "delete's a user enrollment",
        "operationId" : "delEnrollment",
        "description" : "by calling this API we can delete a user enrollment",
        "parameters" : [ {
          "in" : "header",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "1.0.0" : {
                "value" : "1.0.0",
                "summary" : "version 1 of the API"
              }
            }
          }
        }, {
          "in" : "header",
          "name" : "userid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "dummyUser" : {
                "value" : "dummyuser",
                "summary" : "userid of the enrolled user"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "enrollment absent/present",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResponseBody"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "enroll" ],
        "summary" : "enrolls a user's fingerprint",
        "operationId" : "enrollUser",
        "description" : "By passing in appropriate images, a user's fingerprint can be enrolled\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : {
              "1.0.0" : {
                "value" : "1.0.0",
                "summary" : "version 1.0.0 of the API"
              }
            }
          }
        }, {
          "in" : "query",
          "name" : "type",
          "description" : "the type of enrollment",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "examples" : {
            "fingerprint" : {
              "value" : "fingerprint",
              "summary" : "enroll using finger"
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/requestBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successfully enrolled/queued",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResponseBody"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "requestBody" : {
        "type" : "object",
        "properties" : {
          "userID" : {
            "type" : "string",
            "format" : "uuid"
          },
          "referenceID" : {
            "type" : "string"
          },
          "deviceDetails" : {
            "type" : "string",
            "example" : "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9"
          },
          "fingerprintImages" : {
            "type" : "string",
            "format" : "binary",
            "example" : "file1,file2,file3"
          }
        }
      },
      "ResponseBody" : {
        "type" : "object",
        "properties" : {
          "responseCode" : {
            "type" : "string",
            "example" : 200
          },
          "responseMessage" : {
            "type" : "string",
            "example" : "Enrollment Success"
          },
          "enrollment_status" : {
            "type" : "string",
            "example" : "ENROLLED,DELETED,NOT_ENROLLED,NOT_DELETED,NA"
          },
          "score" : {
            "type" : "string",
            "example" : "10/50, 30/50, 50/50"
          }
        }
      }
    }
  }
}