penapi: 3.0.0
info:
  description: This is a example of chat REST API
  version: "1.5.0"
  title: Chat REST API
  contact:
    email: lisakonov@ukr.net
    name: Sergey
    url: https://github.com/lissergey/chat-rest-api
tags:
  - name: Messages
paths:
  /messages/all/:
    get:
      tags:
        - Messages
      summary: Get all messages
      operationId: getAllMessage
      description: Get all messages from database. E.g.  https://chat-api-app.herokuapp.com/api/messages/all/
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addNewMessage'
        '400':
          description: bad input parameter
  /messages/:
    get:
      tags:
        - Messages
      summary: Get user by 10 per page
      operationId: getMessagesWithPagination
      parameters:
        - name: p
          in: query
          description: page number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      description: Get user by 10 per page. E.g. https://chat-api-app.herokuapp.com/api/messages?p=1
  /messages/add/:
    post:
      tags:
        - Messages
      operationId: addNewMessage
      description: Add new message to database.
      responses:
        '201':
          description: Message created
        '400':
          description: 'Invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNewMessage'
      summary: Adds new message to database
  /messages/single/{id}:
    get:
      tags:
        - Messages
      summary: Gets message by ID
      operationId: searchMessageById
      description: Get one message by ID.  https://chat-api-app.herokuapp.com/api/messages/single/5e4d45b1f35487582dcc8998
      parameters:
        - in: path
          name: id
          description: message id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addNewMessage'
        '400':
          description: bad input parameter
  /messages/{id}:  
    put:
      tags:
        - Messages
      summary: " Updates the selected message"
      operationId: updateMessage
      parameters:
        - in: path
          name: id
          description: message id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID
        '404':
          description: Message not found
        '405':
          description: Validation exception
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNewMessage'
      description: " Update the selected message by ID. "
    delete:
      tags:
        - Messages
      summary: Deleted selected message
      description: Deleted selected message  by ID.
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          description: Message ID.
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid message id supplied
        '404':
          description: Message not found
servers:
  - url: 'https://chat-api-app.herokuapp.com/api/'
    description: Heroku
  - description: DigitalOcean
    url: http://46.101.187.203:3000/api/
components:
  schemas:
    addNewMessage:
      type: object
      required:
        - name
        - email
        - text
      properties:
        name:
          type: string
          example: John
        email:
          type: string
          example: john@email.com
        text:
          type: string
          example: your text
        createDate:
          type: string
        updateDate: 
          type: string