{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://customer064752706910.kinexon.com"
  } ],
  "info" : {
    "description" : "HBL Live API. HTTP Basic Auth. is required to access all routes.",
    "version" : "1.0.6",
    "title" : "HBL Live"
  },
  "tags" : [ {
    "name" : "Stats",
    "description" : "Match, Team and player statistics"
  }, {
    "name" : "Events",
    "description" : "Match, Team and player events ordered by timestamp in descending order."
  } ],
  "paths" : {
    "/hbl/v1/match/{matchId}/stats" : {
      "get" : {
        "tags" : [ "Stats" ],
        "description" : "Reponse contains statistics for a match, team or players depending on the paramters below\n",
        "parameters" : [ {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterPlayers",
          "in" : "query",
          "description" : "Comma seperated list of league ids",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterTeam",
          "in" : "query",
          "description" : "Either 'home' or 'away'. Not working if filterPlayers is set.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "If set, statisitcs will be aggregated. Sum, avg, max depending on the metric.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Statistics",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/stats"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid match Id"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/match/{matchId}/event/jump" : {
      "get" : {
        "tags" : [ "Events" ],
        "description" : "Reponse contains jump events for a match, team or players depending on the paramters below\n",
        "parameters" : [ {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterPlayers",
          "in" : "query",
          "description" : "Comma seperated list of league ids",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterTeam",
          "in" : "query",
          "description" : "Either 'home' or 'away'. Not working if filterPlayers is set",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit response to X events",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "List offset. Use in combination with 'limit'",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Jumps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/jump"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid match Id"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/match/{matchId}/event/pass" : {
      "get" : {
        "tags" : [ "Events" ],
        "description" : "Reponse contains pass events for a match, team or players depending on the paramters below\n",
        "parameters" : [ {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterPlayers",
          "in" : "query",
          "description" : "Comma seperated list of league ids",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterTeam",
          "in" : "query",
          "description" : "Either 'home' or 'away'. Not working if filterPlayers is set.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit response to X events",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "List offset. Use in combination with 'limit'",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Passes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/pass"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid match Id"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/match/{matchId}/event/shot" : {
      "get" : {
        "tags" : [ "Events" ],
        "description" : "Reponse contains shot events for a match, team or players depending on the paramters below\n",
        "parameters" : [ {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterPlayers",
          "in" : "query",
          "description" : "Comma seperated list of league ids",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterTeam",
          "in" : "query",
          "description" : "Either 'home' or 'away'. Not working if filterPlayers is set.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit response to X events",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "List offset. Use in combination with 'limit'",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Shots",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/shot"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid match Id"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Events" ],
        "description" : "Post shot",
        "parameters" : [ {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/newShot"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Response message"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/livematches" : {
      "get" : {
        "tags" : [ "Live-Matches" ],
        "description" : "Returns a list of active match IDs\n",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "[\"hbl-123456\"]"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/match/{matchId}/clock/start" : {
      "post" : {
        "tags" : [ "Clock" ],
        "description" : "Starts the game clock for a match\n",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "{\"success\":true/false}"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    },
    "/hbl/v1/match/{matchId}/clock/stop" : {
      "post" : {
        "tags" : [ "Clock" ],
        "description" : "Stops the game clock for a match\n",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "query",
          "description" : "Your API key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "matchId",
          "in" : "path",
          "description" : "match id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "{\"success\":true/false}"
          },
          "401" : {
            "description" : "Not authorized"
          }
        },
        "security" : [ {
          "Secured" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "Secured" : {
        "type" : "http",
        "scheme" : "basic"
      }
    },
    "schemas" : {
      "newShot" : {
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "description" : "ISO 8601 datetime string",
            "example" : "2019-11-19T13:05:12+01:00"
          },
          "player_id" : {
            "type" : "integer",
            "description" : "The player's league Id/secondary identifier",
            "example" : 123
          },
          "type" : {
            "type" : "integer",
            "description" : "0 = saved; 1 = goal; 2 = post; 3 = missed; 4 = blocked",
            "example" : 1
          },
          "action_id" : {
            "type" : "string",
            "description" : "Action ID",
            "example" : "abc123"
          },
          "game_clock" : {
            "type" : "integer",
            "description" : "Gameclock in seconds",
            "example" : 120
          },
          "shot_position" : {
            "type" : "string",
            "description" : "Shot position (L6,C6,R6,...)",
            "example" : "L9"
          },
          "shot_target" : {
            "type" : "string",
            "description" : "Shot target (LT,MT,RT,...)",
            "example" : "LB"
          }
        }
      },
      "stats" : {
        "properties" : {
          "player_id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon player id (not available if aggregate is set to true)"
          },
          "league_id" : {
            "type" : "string",
            "example" : 1331543,
            "description" : "Secondary player identifier (not available if aggregate is set to true)"
          },
          "speed_max" : {
            "type" : "number",
            "example" : 9.090636,
            "description" : "Player's max. speed in m/s"
          },
          "speed_distance_per_time" : {
            "type" : "number",
            "example" : 1.010632,
            "description" : "Player's avg. speed in m/s"
          },
          "distance_total" : {
            "type" : "number",
            "example" : 1285.1238,
            "description" : "Total distance in m"
          },
          "time_on_playing_field" : {
            "type" : "number",
            "example" : 152.1314,
            "description" : "Player's time on playing field in s"
          },
          "time_ball_possession" : {
            "type" : "number",
            "example" : 12.524268,
            "description" : "Player's ball possession time in s"
          }
        }
      },
      "jump" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon internal event id"
          },
          "player_id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon player id"
          },
          "league_id" : {
            "type" : "string",
            "example" : "1331543",
            "description" : "Secondary player identifier"
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-03-28 10:47:49",
            "description" : "UTC date string"
          },
          "airtime" : {
            "type" : "number",
            "example" : 0.040632,
            "description" : "Player's jump airtime"
          },
          "jump_height" : {
            "type" : "number",
            "example" : 0.41632,
            "description" : "Player's jump height (USE WITH CAUTION)"
          }
        }
      },
      "pass" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon internal event id"
          },
          "player_id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon player id"
          },
          "league_id" : {
            "type" : "integer",
            "example" : 1331543,
            "description" : "Secondary player identifier"
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-03-28 10:47:49",
            "description" : "UTC date string"
          },
          "distance" : {
            "type" : "number",
            "example" : 2.040632,
            "description" : "Pass distance in m"
          },
          "speed_ball" : {
            "type" : "number",
            "example" : 4.010641,
            "description" : "Pass speed in m/s"
          },
          "success" : {
            "type" : "integer",
            "example" : 1,
            "description" : "1 for a successful pass, 0 for an unsuccessful pass"
          }
        }
      },
      "shot" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon internal event id"
          },
          "player_id" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Kinexon player id"
          },
          "league_id" : {
            "type" : "integer",
            "example" : 1331543,
            "description" : "Secondary player identifier"
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-03-28 10:47:49",
            "description" : "UTC date string"
          },
          "distance" : {
            "type" : "number",
            "example" : 7.834386,
            "description" : "Shot distance in m"
          },
          "speed_ball" : {
            "type" : "number",
            "example" : 14.264555,
            "description" : "Shot speed in m/s"
          },
          "shot_position_x" : {
            "type" : "number",
            "example" : -12.524268
          },
          "shot_position_y" : {
            "type" : "number",
            "example" : 2.343296
          },
          "hit_position_y" : {
            "type" : "number",
            "example" : -0.70604
          },
          "hit_position_z" : {
            "type" : "number",
            "example" : 0.085177
          },
          "success" : {
            "type" : "integer",
            "example" : 1,
            "description" : "0 = No goal; 1= Goal"
          },
          "goalkeeper_id" : {
            "type" : "integer",
            "example" : 123,
            "description" : "Kinexon goalkeeper id"
          },
          "goalkeeper_league_id" : {
            "type" : "integer",
            "example" : 12345,
            "description" : "Secondary goalkeeper identifier"
          },
          "validated" : {
            "type" : "integer",
            "description" : "0 = Not merged with scouting data; 1= Merged with scouting data"
          },
          "action_id" : {
            "type" : "string",
            "description" : "Action ID",
            "example" : "abc123"
          }
        }
      }
    }
  }
}