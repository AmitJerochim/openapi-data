{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is an organizational news API.  You can find \nout more about Organizational API at \n[Github](https://github.com/ibrahnerd7/organization-api) \n",
    "version" : "1.0.0-oas3",
    "title" : "Organizational API",
    "contact" : {
      "email" : "ibrahmaina7@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "users",
    "description" : "Everything about your users",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "departments",
    "description" : "Access to departments"
  }, {
    "name" : "news",
    "description" : "Operations about news",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/users/new" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Add a new user to the organization",
        "operationId" : "addUser",
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User object that needs to be added to the store",
          "required" : true
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Finds All Users",
        "description" : "This outputs all users in the organization",
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No users found"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/users/{userId}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find user by ID",
        "description" : "Returns a single user",
        "operationId" : "getUserById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/users/department/{departmentId}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find user by department",
        "description" : "Returns all users from a single department",
        "operationId" : "getUserByDepartment",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "description" : "ID of department to return users from.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/departments/new" : {
      "post" : {
        "tags" : [ "departments" ],
        "summary" : "Creates a new department",
        "operationId" : "addDepartment",
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            }
          },
          "description" : "User object that needs to be added to the store",
          "required" : true
        }
      }
    },
    "/departments" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "Finds All departments",
        "description" : "This outputs all departments in the organization",
        "operationId" : "getDepartments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Department"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Department"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No users found"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/departments/{departmentId}" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "Find user by ID",
        "description" : "Returns a single user",
        "operationId" : "getDepartmentById",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "description" : "ID of department to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/news/new" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Creates a new department",
        "operationId" : "addNews",
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/News"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/News"
              }
            }
          },
          "description" : "News object that needs to be added to the organization",
          "required" : true
        }
      }
    },
    "/news" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "Finds All news",
        "description" : "This outputs all news in the organization",
        "operationId" : "getAllNews",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/News"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No news found"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/news/{newsId}" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "Find news by ID",
        "description" : "Returns a single news",
        "operationId" : "getNews",
        "parameters" : [ {
          "name" : "newsId",
          "in" : "path",
          "description" : "ID of department to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "News not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/news/department/:departmentId" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "Find news in a department",
        "description" : "Returns a news from department with the id",
        "operationId" : "getNewsByDepartment",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "description" : "ID of department to find news",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/News"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "News not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    }
  },
  "servers" : [ {
    "url" : "https://ibrapi.herokuapp.com"
  } ],
  "components" : {
    "securitySchemes" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
            "scopes" : {
              "write:pets" : "modify pets in your account",
              "read:pets" : "read your pets"
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    },
    "schemas" : {
      "Department" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "employees_count" : {
            "type" : "integer"
          },
          "news_url" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "department_id" : {
            "type" : "integer"
          }
        },
        "xml" : {
          "name" : "Department"
        }
      },
      "News" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "department_id" : {
            "type" : "integer"
          }
        },
        "xml" : {
          "name" : "News"
        }
      }
    }
  }
}