openapi: 3.0.0
# Added by API Auto Mocking Plugin

info:
  description: NEURON NBI API Interface, used to make calls into Neuron from a backend system to retrieve or set TR-069 parameters and ACS features.
  version: "0.1.5"
  title: NEURON NBI API
  contact:
    email: devops@neuron.nz
    

paths:
  /V1/api/groups/{GroupID}/authenticate:
    get:
      summary: Get JWT token to Authenticate With Neuron NBI.
      operationId: JWT Login.
      description: |
        To request resources from neuron NBI, a JWT Token is Required. Basic authentication with "Authorization" header containing user credentials
      parameters:
        - name: "GroupID"
          in: path
          description: "Group ID of Neuron User attempting to Authenticate"
          required: true
          schema:
            type: string
            example: "100"
          
      responses:
        200:
          description: "Authentication successful, response should include JWT token"
          content:
            application/json:
              schema: 
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    format: string
                    example: "d290f1ee-6c54-4b01-90e6"
                  
        401:
          description: Authentication failed. Incorrect Username/Password
        403:
          description: "User does not have NBI permission"
        500:
          description: "Internal Error."
          
          
     
  /V1/api/groups/{GroupID}/cpes:
    get:
      security:
        - JWTAuth: []
      summary: Get CPEs for a group.
      operationId: Get Group CPEs.
      description: Get CPEs for a group matching the following conditions.
      parameters:
        - name: GroupID
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - in: query
          name: all
          schema:
            type: boolean
          description: true to return devices that have not yet contacted the ACS e.g. newly created via NBI (default false)
        - in: query
          name: allgroups
          schema:
            type: boolean
          description: true to return devices for all Neuron Groups. (Requires admin user, default false)
        - in: query
          name: withparams
          schema:
            type: boolean
          description: true to return stored device parameters. may result in very large datasets. (default false)
        - in: query
          name: withtasks
          schema:
            type: boolean
          description: true to return task list. (default false)
        - in: query
          name: withflags
          schema:
            type: boolean
          description: true to return device flags. (default false)
        - in: query
          name: limit
          schema:
            type: integer
          description: limit response to this many CPEs
        - in: query
          name: skip
          schema:
            type: integer
          description: skip this many CPEs from start of result
        - in: query
          name: rpcmethods
          schema:
            type: boolean
          description: true to return device RPCMethods array. (Requires previous GetRPCMethods RPC, default false)
        - in: query
          name: order
          schema:
            type: string
          description: order results by given key (May take a long time for large estates)
        - in: query
          name: productclass
          schema:
            type: string
          description: Return only devices of given Product Class (multiple instances supported)
      responses:
        200:
          description: Successful operation. Response will contain an array of CPEs matching conditions.
        204:
          description: No CPEs match conditions.
        400:
          description: Error parsing Query argument.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
    post:
      security:
        - JWTAuth: []
      summary: Add new CPE(s).
      operationId: Add new CPE
      description: |
        Add a new CPE to Neuron for the Group.
      parameters:
        - name: GroupID
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation. Returns counts for number of devices Created, Replaced, and skipped.
          content:
            application/json:
              schema: 
                type: object
                required:
                  - skipped
                  - created
                  - replaced
                properties:
                  skipped:
                    type: string
                    format: int
                    example: 0
                  created:
                    type: string
                    format: int
                    example: 50
                  replaced:
                    type: string
                    format: int
                    example: 0
        400:
          description: Error parsing POST body.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPE'
              
  /V1/api/groups/{GroupID}/history:
    get:
      security:
        - JWTAuth: []
      summary: Retrieve RPC history for a group within a timeframe.
      operationId: Get RPC History
      description: |
        Retrieve all RPCs sent by neuron within a timeframe for Group.
      parameters:
        - name: "GroupID"
          in: "path"
          description: Group ID found in Neuron under group info.
          required: true
          schema: 
            type: string
        - in: query
          name: period
          schema:
            type: integer
          description: The period for which to return RPC history in minutes before current time, or \"from\" parameter, if set (default 30)
        - in: query
          name: from
          schema:
            type: integer
          description: The time in Unix time that the period argument will go back from (default now)
        - in: query
          name: rpc
          schema:
            type: boolean
          description: Return RPC XML with results. Requires Save XML options to be enabled in Group Management (default false)
        - in: query
          name: skipped
          schema:
            type: boolean
          description: Return tasks that were skipped due to unmet conditions. Requires Keep failed Conditional tasks to be enabled in Group Management (default false) 
      responses:
        200:
          description: Successful operation.
        204:
          description: No tasks match criteria.
        400:
          description: Error in query argument.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/bootfeed:
    get:
      security:
        - JWTAuth: []
      summary: Get Bootfeed for a group 
      description: Returns a websocket that returns details of any sessions for the group that are initiated by an inform with either a "0 BOOTSTRAP" or "1 BOOT" event.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
      responses:
        101:
          description: Successful operation.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/flags:
    post:
      security:
        - JWTAuth: []
      summary: Pre-Provision Device Flags 
      description: Allows preloading of device flags for use in provisioning and configuration.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Failed to unmarshal POST body.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
                                    
  /V1/api/groups/{GroupID}/cpes/{Serial}:
    get:
      security:
        - JWTAuth: []
      summary: Retrieve a CPE
      operationId: Get a CPE by serial number.
      description: |
        Lookup and retrieve a CPE based on the CPE serial number.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
        - in: query
          name: withparams
          schema:
            type: boolean
          description: true to return any stored device parameters. May result in large datasets. (default false)
        - in: query
          name: withtasks
          schema:
            type: boolean
          description: true to return device task list. (default false)
        - in: query
          name: withflags
          schema:
            type: boolean
          description: true to return device flags. (default false)
      responses:
        200:
          description: Successful operation.
        400:
          description: Error parsing query argument.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        404:
          description: CPE not Found.
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/assignowner:
    post:
      security:
        - JWTAuth: []
      summary: Assign an Owner to a device
      operationId: Assign Owner
      description: Assigns an owner ID to a CPE
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        400:
          description: Invalid POST body
        409:
          description: Device Already has owner assigned
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        404:
          description: Device not found
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignOwner'
  /V1/api/groups/{GroupID}/cpes/{Serial}/unassignowner:
    post:
      security:
        - JWTAuth: []
      summary: Unassign Owner from device
      operationId: Unassign Device
      description: Unassigns the Owner from a device
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        404:
          description: Device not found
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/bootfeed:
    get:
      security:
        - JWTAuth: []
      summary: Get a BootFeed for a device
      operationId: Get CPE Bootfeed
      description:  Returns a websocket that returns details of any sessions for the CPE that are initiated by an inform with either a "0 BOOTSTRAP" or "1 BOOT" event.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        101:
          description: Successful operation.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        404:
          description: Device not found
        500:
          description: Internal Error.
                             
  /V1/api/groups/{GroupID}/cpes/{Serial}/history:
    get:
      security:
        - JWTAuth: []
      summary: Retrieve RPC history for a CPE within a timeframe.
      operationId: Get CPE RPC History
      description: |
        Retrieve all RPCs sent by neuron within a timeframe.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
        - in: query
          name: period
          schema:
            type: integer
          description: The period for which to return RPC history in minutes before current time, or \"from\" parameter, if set (default 30)
        - in: query
          name: from
          schema:
            type: integer
          description: The time in unix time that the period argument will go back from (default now)
        - in: query
          name: rpc
          schema:
            type: boolean
          description: Return RPC XML with results. Requires Save XML options to be enabled in Group Management (default false)
        - in: query
          name: skipped
          schema:
            type: boolean
          description: Return tasks that were skipped due to unmet conditions. Requires Keep failed Conditional tasks to be enabled in Group Management (default false) 
      responses:
        200:
          description: Successful operation.
        400:
          description: Error parsing query argument.
        204:
          description: No tasks match criteria.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/status:
    get:
      security:
        - JWTAuth: []
      summary: Retrieve Device ACS Status.
      operationId: Get Device ACS Status
      description: |
        Retrieve the ACS Status of a Device.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not Found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
                   
  /V1/api/groups/{GroupID}/cpes/{Serial}/connectionrequest:
    get:
      security:
        - JWTAuth: []
      summary: Connection Request
      operationId: Connection Request
      description: Perform Connection Request on Device
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Request Error.
        404:
          description: CPE not found.
        408:
          description: Request Timeout.
        503:
          description: Device is busy.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
          
  /V1/api/groups/{GroupID}/cpes/{Serial}/connectionrequestinfo:
    get:
      security:
        - JWTAuth: []
      summary: Connection Request Info
      operationId: Connection Request Info
      description: "Retrieve Connection Request Information so the external application"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/flags:
    get:
      security:
        - JWTAuth: []
      summary: Get CPE flags.
      operationId: Get Flags
      description: "Retrieve Flags set on CPE"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        204:
          description: No flags set.
        404:
          description: Device not found.
        403:
          description: Authentication failed. Token invalid or Expired.
        500:
          description: Internal Error.
    post:
      security:
        - JWTAuth: []
      summary: Set CPE flags.
      operationId: Set Flags
      description: "Set flags on CPE"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flags'
      responses:
        200:
          description: Successful operation.
        204:
          description: Error.
        400:
          description: Failed to unmarshal post body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/tasks:
    get:
      security:
        - JWTAuth: []
      summary: Get CPE task queue.
      operationId: Get Tasks
      description: "Retrieve task queue of cpe"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        204:
          description: Task list empty.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
    post:
      security:
        - JWTAuth: []
      summary: Set CPE Task Queue.
      operationId: Set Tasks
      description: "Set task queue on CPE. Existing tasks will be removed"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskQueue'
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
    delete:
      security:
        - JWTAuth: []
      summary: Clear CPE Task Queue.
      operationId: Delete All Tasks
      description: "Clear task queue on CPE"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation
        404:
          description: Device not Found
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
          
  /V1/api/groups/{GroupID}/cpes/{Serial}/tasks/{TaskName}:
    delete:
      security:
        - JWTAuth: []
      summary: Delete a Task from CPE Queue.
      operationId: Delete Task
      description: "Delete a Task from CPE Queue"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
        - name: "TaskName"
          in: "path"
          description: "Id of Task to delete."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation. Deleted Task Will be returned.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
          
  /V1/api/groups/{GroupID}/cpes/{Serial}/parameters:
    get:
      security:
        - JWTAuth: []
      summary: Get Stored Device Parameters.
      operationId: Get Parameters
      description: "Retrieve all stored parameters for CPE"
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
        - name: all
          in: query
          description: Return all stored parameters for device (default false) (may result in large response)
          schema: 
            type: boolean
        - name: param
          in: query
          description: Name of parameter or object to return. Supports multiple instances
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        204:
          description: No Parameters in Database.
        404:
          description: Device not Found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/setparametervalues:
    post:
      security:
        - JWTAuth: []
      summary: Add an SPV RPC to device queue.
      operationId: SetParameterValues RPC
      description: Add a SetParameterValues RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetParameterValues'
      
  /V1/api/groups/{GroupID}/cpes/{Serial}/getparametervalues:
    post:
      security:
        - JWTAuth: []
      summary: Add an SPV RPC to Device queue.
      operationId: GetParameterValues RPC
      description: Add a GetParameterValues RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterValues'
  /V1/api/groups/{GroupID}/cpes/{Serial}/reboot:
    post:
      security:
        - JWTAuth: []
      summary: Add a Reboot RPC to device queue.
      operationId: Reboot RPC
      description: Add a Reboot RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
  /V1/api/groups/{GroupID}/cpes/{Serial}/factoryreset:
    post:
      security:
        - JWTAuth: []
      summary: Add a Factory Reset RPC to device queue.
      operationId: FactoryReset RPC
      description: Add a FactoryReset RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
    
  /V1/api/groups/{GroupID}/cpes/{Serial}/upload:
    post:
      security:
        - JWTAuth: []
      summary: Add an Upload RPC to device queue.
      operationId: Upload RPC
      description: Add an Upload RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'

  /V1/api/groups/{GroupID}/cpes/{Serial}/download:
    post:
      security:
        - JWTAuth: []
      summary: Add a Factory Reset RPC to device queue.
      operationId: Download RPC
      description: Add a FactoryReset RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        400:
          description: Invalid POST body.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Download'
  /V1/api/groups/{GroupID}/cpes/{Serial}/addobject:
    post:
      security:
        - JWTAuth: []
      summary: Add an Add Object RPC to device queue.
      operationId: AddObject RPC
      description: |
        Add an AddObject RPC to the CPE's Task Queue
        
        
        NOTE: There must be exactly 1 item in parameters array.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddObject'
              
  /V1/api/groups/{GroupID}/cpes/{Serial}/deleteobject:
    post:
      security:
        - JWTAuth: []
      summary: Add a Delete Object RPC to device queue.
      operationId: DeleteObject RPC
      description: |
        Add a DeleteObject RPC to the CPE's Task Queue
        
        
        NOTE: Ther must be exactly 1 item in parameters array.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObject'
  /V1/api/groups/{GroupID}/cpes/{Serial}/setparameterattributes:
    post:
      security:
        - JWTAuth: []
      summary: Add a SetParameterAttributes RPC to device queue.
      operationId: SetParameterAttributes RPC
      description: |
        Create a Set Parameter Attributes RPC and add it to the device queue.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetParameterAttributes'
  /V1/api/groups/{GroupID}/cpes/{Serial}/getparameterattributes:
    post:
      security:
        - JWTAuth: []
      summary: Add a GetParameterAttributes RPC to device queue.
      operationId: GetParameterAttributes RPC
      description: |
        Create a Get Parameter Attributes RPC and add it to the device queue.
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterAttributes'
  /V1/api/groups/{GroupID}/cpes/{Serial}/scheduleinform:
    post:
      security:
        - JWTAuth: []
      summary: Add a ScheduleInform RPC to device queue.
      operationId: ScheduleInform RPC
      description: Add a ScheduleInform RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid POST body.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInform'
  /V1/api/groups/{GroupID}/cpes/{Serial}/getrpcmethods:
    post:
      security:
        - JWTAuth: []
      summary: Add a GetRPCMethods RPC to device queue.
      operationId: GetRPCMethods RPC
      description: Add a GetRPCMethods RPC to the CPE's Task Queue
      parameters:
        - name: "GroupID"
          in: "path"
          description: "Group ID found in Neuron under group info."
          required: true
          schema: 
            type: string
        - name: "Serial"
          in: "path"
          description: "Serial of CPE."
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Successful operation.
        404:
          description: Device not found.
        401:
          description: Authentication required. Token may be invalid or Expired.
        403:
          description: Access denied. User does not have permission to perform action
        500:
          description: Internal Error.
    


components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
      
  schemas:
    AssignOwner:
      type: object
      required:
        - user
      properties:
        user:
          type: string
          format: string
          example: userid
    DeleteObject:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            "name" : "InternetGatewayDevice.LANDevice.2."
          }]
    AddObject:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            "name" : "InternetGatewayDevice.LANDevice."
          }]
    QueueGetParameterValues:
      type: object
      required:
        - parameters
        - action
      properties:
        action:
          type: string
          example: "GetParameterValues"
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
          }]
    QueueSetParameterValues:
      type: object
      required:
        - parameters
        - action
      properties:
        action:
          type: string
          example: "SetParameterValues"
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
            'value' : 'Home WiFi 1'
          }]
    GetParameterValues:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
          }]
    SetParameterValues:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
            'value' : 'Home WiFi 1'
          }]
    Upload:
      type: object
      required:
        - url
        - delayseconds
        - filetype
      properties:
        url:
          type: string
          format: string
          example: http://upload.com
        delayseconds:
          type: string
          format: string
          example: "0"
        filetype:
          type: string
          format: string
          example: 1 Vendor Configuration File
        username:
          type: string
          format: string
          example: username
        password:
          type: string
          format: string
          example: password
          
    Download:
      type: object
      required:
        - name
        - url
        - delayseconds
        - filetype
        - filesize
      properties:
        name:
          type: string
          format: string
          example: download-name
        url:
          type: string
          format: string
          example: http://download.com
        delayseconds:
          type: string
          format: string
          example: "0"
        filetype:
          type: string
          format: string
          example: 1 Firmware Upgrade Image
        filesize:
          type: string
          format: string
          example: "0"
        targetfilename:
          type: string
          format: string
          example: name-of-upgrade
        username:
          type: string
          format: string
          example: username
        password:
          type: string
          format: string
          example: password
    SetParameterAttributes:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
            'accesslistchange' : 'true',
            'accesslist':[
              'Subscriber'
              ],
            'notificationchange':'false'
          },{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.2.SSID',
            'accesslistchange' : 'false',
            'notificationchange':'true',
            'notification':'2'
          }
          ]
    GetParameterAttributes:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: object
          format: string
          example: [{
            'name' : 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID',
          }]
    ScheduleInform:
      type: object
      required:
        - delayseconds
      properties:
        delayseconds:
          type: string
          format: string
          example: "30"
    CPE:
      type: array 
      items:
        type: object
        required:
          - description
          - serial
          - productClass
          - oui
          - manufacturer
          - group
        properties:
          description:
            type: string
            format: string
            example: "A WiFi Router"
          serial:
            type: string
            format: string
            example: 123456789ABC
          productClass:
            type: string
            format: string
            example: WiFi-Router
          oui:
            type: string
            format: string
            example: UOI90
          manufacturer:
            type: string
            format: string
            example: SuperWifi
          group:
            type: string
            format: string
            example: 23238090hjo0
    Flags:
      type: array 
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            type: string
            format: string
            example: "prov"
          value:
            type: string
            format: string
            example: "complete"
    TaskQueue:
      type: array 
      items:
        oneOf:
          - $ref: '#/components/schemas/QueueGetParameterValues'
          - $ref: '#/components/schemas/QueueSetParameterValues'