{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a sample server Medication Review.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version" : "1.0.0-oas3",
    "title" : "Swagger MedReview",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "Raja.Perumal3@loblaw.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "MedReview",
    "description" : "Medication Review for Shoppersdrugmart Patient",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/MedReview" : {
      "post" : {
        "tags" : [ "MedReview" ],
        "summary" : "Return all Medication Review for eligible patient",
        "description" : "",
        "operationId" : "returnMedReview",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedcheckDeterminationResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedcheckDeterminationResponse"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "MedReview_auth" : [ "write:Meds", "read:Meds" ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/requestHeader"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/requestHeader"
              }
            }
          },
          "description" : "Return eligble Rx for the Patient",
          "required" : true
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://MedReview.swagger.io/v2"
  }, {
    "url" : "http://MedReview.swagger.io/v2"
  } ],
  "components" : {
    "securitySchemes" : {
      "MedReview_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://MedReview.swagger.io/oauth/dialog",
            "scopes" : {
              "read:Meds" : "List unique Rx that qualifies for Medication Review",
              "write:Meds" : "List unique Rx "
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    },
    "schemas" : {
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "requestHeader" : {
        "type" : "object",
        "properties" : {
          "consumerName" : {
            "type" : "string",
            "example" : "AccuroEMR"
          },
          "banner" : {
            "type" : "string",
            "example" : "ShoppersDrugMart"
          },
          "lang" : {
            "type" : "string",
            "enum" : [ "English", "French" ]
          },
          "provinceCode" : {
            "type" : "string",
            "enum" : [ "British Columbia", "Ontario", "Sasketchwan", "Alberta", "Nova Scotia", "New Brunswick", "Quebec", "Manitoba" ]
          },
          "consumerSendTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "correlationID" : {
            "type" : "string"
          },
          "shipDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reason" : {
            "type" : "string",
            "example" : "MedReview"
          },
          "requestBody" : {
            "type" : "array",
            "xml" : {
              "name" : "requesBdy",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/requestBody"
            }
          }
        },
        "xml" : {
          "name" : "requestHeader"
        }
      },
      "inputParam" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "inputParam"
        }
      },
      "queryCrit" : {
        "type" : "object",
        "properties" : {
          "patientId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "storeNumber" : {
            "type" : "string"
          },
          "inputParameter" : {
            "type" : "array",
            "xml" : {
              "name" : "inputParameter",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/inputParam"
            }
          }
        },
        "xml" : {
          "name" : "queryCrit"
        }
      },
      "requestBody" : {
        "type" : "object",
        "properties" : {
          "queryCriteria" : {
            "type" : "array",
            "xml" : {
              "name" : "queryCriteria",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/queryCrit"
            }
          }
        },
        "xml" : {
          "name" : "requestBody"
        }
      },
      "addres" : {
        "type" : "object",
        "properties" : {
          "addressLineOne" : {
            "type" : "string",
            "example" : "1 downstreet"
          },
          "cityName" : {
            "type" : "string",
            "example" : "Alberta"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "Canada"
          },
          "consumerId" : {
            "type" : "string",
            "example" : "101001"
          },
          "postalCode" : {
            "type" : "string",
            "example" : "M2J0A9"
          },
          "primaryPhoneNumber" : {
            "type" : "integer",
            "example" : "416282737"
          },
          "provinceCode" : {
            "type" : "string",
            "example" : "saskatchwan"
          }
        },
        "xml" : {
          "name" : "addres"
        }
      },
      "store" : {
        "type" : "object",
        "properties" : {
          "storenumber" : {
            "type" : "string",
            "example" : "1509"
          },
          "storeName" : {
            "type" : "string",
            "example" : "ShoppersDrugMart Victoria Park"
          },
          "address" : {
            "type" : "array",
            "xml" : {
              "name" : "address",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/addres"
            }
          }
        },
        "xml" : {
          "name" : "store"
        }
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "example" : "Tony"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Stark"
          },
          "address" : {
            "type" : "array",
            "xml" : {
              "name" : "address",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/addres"
            }
          }
        },
        "xml" : {
          "name" : "Person"
        }
      },
      "Patient" : {
        "type" : "object",
        "properties" : {
          "dateOfBirth" : {
            "type" : "string",
            "format" : "YYYY-MM-DD",
            "example" : "1995-01-09"
          },
          "consumerId" : {
            "type" : "string",
            "example" : "123443"
          },
          "isactive" : {
            "type" : "boolean",
            "example" : "true"
          },
          "noKnownAllergyFlag" : {
            "type" : "boolean",
            "example" : "false"
          },
          "createTimestamp" : {
            "type" : "string",
            "format" : "YYYY-MM-DDT00:00:00-00:00",
            "example" : "1995-01-09T01:00:00-05:00"
          },
          "lastUpdateTimestamp" : {
            "type" : "string",
            "format" : "YYYY-MM-DDT00:00:00",
            "example" : "1995-01-09T01:00:00-05:00"
          },
          "Person" : {
            "type" : "array",
            "xml" : {
              "name" : "Person",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Person"
            }
          },
          "genderTypeCode" : {
            "type" : "string",
            "enum" : [ "male", "female", "Undefined" ]
          },
          "patienttype" : {
            "type" : "string",
            "example" : "regular"
          },
          "InsuranceCoverage" : {
            "type" : "array",
            "xml" : {
              "name" : "InsuranceCoverage",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/InsuranceCoverage"
            }
          }
        },
        "xml" : {
          "name" : "Patient"
        }
      },
      "InsuranceCoverage" : {
        "type" : "object",
        "properties" : {
          "carrierId" : {
            "type" : "integer",
            "example" : "11212"
          },
          "groupId" : {
            "type" : "integer",
            "example" : "11"
          },
          "clientId" : {
            "type" : "integer",
            "example" : "12231"
          },
          "benefitsCardholderRelationshipCode" : {
            "type" : "string",
            "example" : "spouse"
          },
          "isActive" : {
            "type" : "boolean",
            "example" : "true"
          },
          "priority" : {
            "type" : "integer",
            "example" : "1"
          },
          "cardIdentifier" : {
            "type" : "string",
            "example" : "12"
          },
          "consumerId" : {
            "type" : "string",
            "example" : "111212"
          },
          "insuranceCoverageIdentifier" : {
            "type" : "string",
            "example" : "4567754"
          },
          "thirdPartyConsumerIdentifier" : {
            "type" : "string",
            "example" : "6655"
          }
        },
        "xml" : {
          "name" : "InsuranceCoverage"
        }
      },
      "manufacturer" : {
        "type" : "object",
        "properties" : {
          "manufacturerNameEnglish" : {
            "type" : "string",
            "example" : "Teva"
          },
          "manufacturerId" : {
            "type" : "integer",
            "example" : "12121"
          },
          "prefix" : {
            "type" : "string",
            "example" : "VB"
          },
          "vendorCode" : {
            "type" : "string",
            "example" : "AT"
          },
          "manufacturerNameFrench" : {
            "type" : "string",
            "example" : "Teve"
          }
        },
        "xml" : {
          "name" : "manufacturer"
        }
      },
      "gpi" : {
        "type" : "object",
        "properties" : {
          "GPINumber" : {
            "type" : "integer",
            "example" : "12121"
          },
          "descriptionEnglish" : {
            "type" : "string",
            "example" : "Vignite Vibre"
          },
          "descriptionFrench" : {
            "type" : "string",
            "example" : "Vignite Vibres"
          },
          "isActive" : {
            "type" : "boolean",
            "example" : "true"
          }
        },
        "xml" : {
          "name" : "gpi"
        }
      },
      "ring" : {
        "type" : "object",
        "properties" : {
          "ringId" : {
            "type" : "integer",
            "example" : "12121"
          },
          "isActive" : {
            "type" : "boolean",
            "example" : "true"
          },
          "updateTimestamp" : {
            "type" : "string",
            "format" : "YYYY-MM-DDT00:00:00",
            "example" : "1995-01-09T01:00:00-05:00"
          }
        },
        "xml" : {
          "name" : "ring"
        }
      },
      "dosageform" : {
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "example" : "Topical"
          },
          "id" : {
            "type" : "integer",
            "example" : "1234"
          },
          "shortName" : {
            "type" : "string",
            "example" : "Top"
          }
        },
        "xml" : {
          "name" : "dosageform"
        }
      },
      "packSizeUOMCode" : {
        "type" : "object",
        "properties" : {
          "packSizeUoMTypeCode" : {
            "type" : "string",
            "example" : "gram"
          }
        },
        "xml" : {
          "name" : "packSizeUOMCode"
        }
      },
      "drug" : {
        "type" : "object",
        "properties" : {
          "din" : {
            "type" : "integer",
            "example" : "1234112"
          },
          "isimmunization" : {
            "type" : "boolean",
            "example" : "false"
          },
          "chemicalLabelNameEnglish" : {
            "type" : "string",
            "example" : "PIMECROLIMUS 1%"
          },
          "chemicalLabelNameFrench" : {
            "type" : "string",
            "example" : "PIMECROLIMUS 1%"
          },
          "tradeNameEnglish" : {
            "type" : "string",
            "example" : "ELIDEL CRM"
          },
          "tradeNameFrench" : {
            "type" : "string",
            "example" : "ELIDEL"
          },
          "drugDescription" : {
            "type" : "string",
            "example" : "ELIDEL CRM"
          },
          "productGroup" : {
            "type" : "string",
            "example" : "DERMATOLOGICALS, ETHICALS"
          },
          "dintype" : {
            "type" : "string",
            "example" : "din"
          },
          "dosageform" : {
            "type" : "array",
            "xml" : {
              "name" : "dosageform",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/dosageform"
            }
          },
          "manufacturer" : {
            "type" : "array",
            "xml" : {
              "name" : "manufacturer",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/manufacturer"
            }
          },
          "schedule" : {
            "type" : "string",
            "example" : "Schedule 1"
          },
          "gpi" : {
            "type" : "array",
            "xml" : {
              "name" : "gpi",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/gpi"
            }
          },
          "ring" : {
            "type" : "array",
            "xml" : {
              "name" : "ring",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ring"
            }
          }
        },
        "xml" : {
          "name" : "drug"
        }
      },
      "prescription" : {
        "type" : "object",
        "properties" : {
          "prescriptionNumber" : {
            "type" : "integer",
            "example" : "765432"
          },
          "refillsRemainingCount" : {
            "type" : "integer",
            "example" : "1"
          },
          "prescriptionDate" : {
            "type" : "string",
            "format" : "YYYY-MM-DDT00:00:00",
            "example" : "1995-01-09T01:00:00-05:00"
          },
          "prescriptionExpirationDate" : {
            "type" : "string",
            "format" : "YYYY-MM-DDT00:00:00-00:00",
            "example" : "1997-01-09T01:00:00-05:00"
          },
          "SIGCode" : {
            "type" : "string",
            "example" : "AP AA (SCALY RASH) 2D UNTIL CLEAR THEN QD F 2 WKS THEN Q OTHER DAY F 2 WKS"
          },
          "SIGDescriptionPatientLanguage" : {
            "type" : "string",
            "example" : "APPLY TO AFFECTED AREA (SCALY RASH) TWICE DAILY UNTIL CLEAR FOR 2 WEEKS THEN EVERY OTHER DAY FOR 2 WEEKS"
          },
          "prescribedPack" : {
            "type" : "array",
            "xml" : {
              "name" : "prescribedPack",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/prescribedPack"
            }
          },
          "fillStatusCode" : {
            "type" : "string",
            "example" : "Refills Remain"
          },
          "prescriber" : {
            "type" : "array",
            "xml" : {
              "name" : "prescriber",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/prescriber"
            }
          }
        },
        "xml" : {
          "name" : "prescription"
        }
      },
      "prescribedPack" : {
        "type" : "object",
        "properties" : {
          "strength" : {
            "type" : "integer",
            "example" : "20"
          },
          "GTIN" : {
            "type" : "string",
            "example" : 6.0752850551E10
          },
          "packSize" : {
            "type" : "integer",
            "example" : "30"
          },
          "strengthUOMCode" : {
            "type" : "string",
            "example" : "%"
          },
          "drug" : {
            "type" : "array",
            "xml" : {
              "name" : "drug",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/drug"
            }
          }
        },
        "xml" : {
          "name" : "prescribedPack"
        }
      },
      "prescriber" : {
        "type" : "object",
        "properties" : {
          "isActiveFlag" : {
            "type" : "boolean",
            "example" : "true"
          },
          "prescriberTypeCode" : {
            "type" : "string",
            "example" : "ON-Physician"
          },
          "Person" : {
            "type" : "array",
            "xml" : {
              "name" : "Person",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Person"
            }
          }
        },
        "xml" : {
          "name" : "prescriber"
        }
      },
      "MedOut" : {
        "type" : "object",
        "properties" : {
          "inputParam" : {
            "type" : "array",
            "xml" : {
              "name" : "inputParam",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/inputParam"
            }
          },
          "patient" : {
            "type" : "array",
            "xml" : {
              "name" : "patient",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Patient"
            }
          },
          "prescription" : {
            "type" : "array",
            "xml" : {
              "name" : "prescription",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/prescription"
            }
          },
          "store" : {
            "type" : "array",
            "xml" : {
              "name" : "store",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/store"
            }
          }
        },
        "xml" : {
          "name" : "MedOut"
        }
      },
      "MedcheckDeterminationResponse" : {
        "type" : "object",
        "properties" : {
          "odm:DecisionID" : {
            "type" : "string",
            "example" : "12213-1212-1212-121238"
          },
          "odm:MedOut" : {
            "type" : "array",
            "xml" : {
              "name" : "odm:MedOut",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MedOut"
            }
          }
        },
        "xml" : {
          "name" : "MedcheckDeterminationResponse"
        }
      }
    }
  }
}