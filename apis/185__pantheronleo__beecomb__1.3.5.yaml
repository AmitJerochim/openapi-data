openapi: 3.0.0
info:
  version: "1.3.5"
  title: "BeeComb API"
  description: "Overall BeeComb API endpoints"
servers:
  - url: https://api.beecomb.com.my/api
    description: Production server
  - url: https://api.staging.beecomb.com.my/api
    description: Staging server
  - url: http://localhost:1337/api
    description: Local server
paths:
  "/auth/m/signup":
    post:
      summary: Mobile app sign up
      description: Normal username sign up from mobile app. User will receive a confirmation email from BeeComb. Verification link only valid for 24 hours. If user verify after 24 hours, that user need to redo the sign up process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBasic'
            example:
              fullname: Alden Koepp
              username: Alden_Koepp
              password: NdgOVa5U5Ut0i83
              email: Alden_Koepp@hotmail.com
      responses:
        "200":
          $ref: '#/components/responses/CreateSuccess'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/auth/m/login":
    post:
      summary: Mobile app login
      description: Normal username login from mobile app. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
            example:
              username: Alden_Koepp
              password: NdgOVa5U5Ut0i83
      responses:
        "200":
          $ref: '#/components/responses/AppLoginSuccess'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/auth/m/facebook":
    post:
      summary: Mobile app sign up via Facebook
      description: Username sign in or sign up from mobile app using facebook oauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBasic'
            example:
              id: xxxxxxxxxx
              fullname: Alden Koepp
              email: Alden_Koepp@hotmail.com
      responses:
        "200":
          $ref: '#/components/responses/AppLoginSuccess'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/auth/m/google":
    post:
      summary: Mobile app sign up via Google
      description: Username sign in or sign up from mobile app using google oauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBasic'
            example:
              id: xxxxxxxxxx
              fullname: Alden Koepp
              email: Alden_Koepp@hotmail.com
      responses:
        "200":
          $ref: '#/components/responses/AppLoginSuccess'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/verify":
    post:
      summary: Email confirmation
      description: Email confirmation via verification link that user clicked from email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                e:
                  type: string
                  description: Encoded encrypted string
                t:
                  type: string
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/onboard/smart-recommendation":
    post:
      summary: User onboarding flow
      description: Store user onboarding info for smart recommendation purpose
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User id
                ageRangeFrom:
                  type: number
                  description: User age range from
                ageRangeTo:
                  type: number
                  description: User age range to
                gender:
                  type: string
                  description: User gender
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/onboard/non-sellable":
    post:
      summary: User onboarding flow
      description: Store user onboarding info for non sellable product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User id
                mobile:
                  type: string
                  description: User mobile phone number
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/onboard/payment":
    post:
      summary: User onboarding flow
      description: Store user onboarding info for non sellable product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User id
                mobile:
                  type: string
                  description: User mobile phone number
                address1:
                  type: string
                  description: User address line 1
                address2:
                  type: string
                  description: User address line 2
                postcode:
                  type: string
                  description: Postcode id
                state:
                  type: string
                  description: Postcode id
                city:
                  type: string
                  description: City name
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/onboard/notification":
    post:
      summary: User onboarding flow
      description: Store user onboarding info for notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pushNotificationId:
                  type: string
                  description: User id
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/reset-password":
    post:
      summary: Reset password
      description: New temporary code will be sent to user's email. Encoded string <b>e</b>, is needed to send as request body for updating new password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Encoded encrypted string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  e:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/new-password":
    patch:
      summary: Update new password
      description: Temporary code that user receive, encoded string from reset password endpoint and new password are all needed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                e:
                  type: string
                  description: Encoded encrypted string
                temporaryPassword:
                  type: string
                  description: Temporary password
                newPassword:
                  type: string
                  description: New password
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/advertisements":
    get:
      description: Read available advertisement by today
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
      responses:
        "200":
          description: Array of active advertisement
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: "#/components/schemas/Advertisement"
                  count:
                    type: integer
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/exhibitions":
    get:
      description: Read available exhibition by today
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
      responses:
        "200":
          description: Array of active advertisement
          content:
            application/json:
              schema:
                type: object
                properties:
                  exhibitions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Exhibition"
                  count:
                    type: integer
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/exhibition-detail":
    get:
      description: Read available exhibition by today
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
      responses:
        "200":
          description: Array of active advertisement
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  centre:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      code:
                        type: string
                  booths:
                    type: array
                    items:
                      $ref: "#/components/schemas/ExhibitionBooth"
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/companies/{id}/products":
    get:
      description: Read products by company id
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '733de7e4-df15-4600-9c2e-b71a38136434'
      responses:
        "200":
          description: Array of active products by selected company
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  count:
                    type: integer
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/visitors/booth":
    post:
      description: Create new visit log on booth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitorBooth"
            example:
              user: "02c81af8-08f5-4860-9cd9-4fc599ec7ce6"
              company: "733de7e4-df15-4600-9c2e-b71a38136434"
      responses:
        "200":
          $ref: "#/components/responses/VisitorSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/visitors/product":
    post:
      description: Create new visit log on booth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitorProduct"
            example:
              user: "02c81af8-08f5-4860-9cd9-4fc599ec7ce6"
              company: "733de7e4-df15-4600-9c2e-b71a38136434"
              product: "37d5fe9d-bbdd-4b3d-9d31-6cee9b5b9e07"
      responses:
        "200":
          $ref: "#/components/responses/VisitorSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/inquiries/product":
    post:
      description: Create inquiry for product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                message:
                  type: string
            example:
              product: "37d5fe9d-bbdd-4b3d-9d31-6cee9b5b9e07"
              message: "Any discount for this product?"
      responses:
        "200":
          $ref: "#/components/responses/CreateSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/inquiries/{id}":
    post:
      description: Create inquiry for product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                message:
                  type: string
            example:
              message: "I would like to know more"
      responses:
        "200":
          $ref: "#/components/responses/CreateSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
    get:
      description: Read inquiry by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '733de7e4-df15-4600-9c2e-b71a38136434'
      responses:
        "200":
          description: Inquiry info with messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquiry:
                    $ref: "#/components/schemas/Inquiry"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/messages":
    get:
      description: Retrieve all inquiry messages
      responses:
        "200":
          $ref: "#/components/responses/InquiryMessageSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/carts":
    post:
      description: Create new cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
            example:
              product: "37d5fe9d-bbdd-4b3d-9d31-6cee9b5b9e07"
              quantity: 1
      responses:
        "200":
          $ref: "#/components/responses/NormalSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
    get:
      description: Retrieve all carts belong to logon user
      responses:
        "200":
          $ref: "#/components/responses/CartSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/carts/quantity":
    post:
      description: Update cart quantity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
            example:
              cart: "873d87ea-ecda-4626-a605-3c47a757b0ac"
              quantity: 1
      responses:
        "200":
          $ref: "#/components/responses/NormalSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/shipping-rate-checking":
    post:
      description: Check shipping rate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                carts:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          $ref: "#/components/responses/ShippingRatesSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/shipping-order":
    post:
      description: Place shipping order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingOrders:
                  type: array
                  items:
                    type: object
                    properties:
                      carts:
                        type: array
                        items:
                          type: string
                      serviceId:
                        type: string
      responses:
        "200":
          $ref: "#/components/responses/ShippingOrderSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/payment":
    post:
      description: Request for making payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payments:
                  type: array
                  items:
                    type: object
                    properties:
                      carts:
                        type: array
                        items:
                          type: string
                      orderId:
                        type: string
                      parcelId:
                        type: string
      responses:
        "200":
          $ref: "#/components/responses/PaymentGatewaySuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/parcel-status":
    post:
      description: Inquiry parcel status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/ParcelStatusSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/states":
    get:
      description: Read state
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
      responses:
        "200":
          description: Array of active states
          content:
            application/json:
              schema:
                type: object
                properties:
                  states:
                    type: array
                    items:
                      $ref: "#/components/schemas/State"
                  count:
                    type: integer
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/postcodes":
    get:
      description: Read postcode
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/SortParam"
        - $ref: "#/components/parameters/QueryParam"
      responses:
        "200":
          description: Array of active postcodes
          content:
            application/json:
              schema:
                type: object
                properties:
                  postcodes:
                    type: array
                    items:
                      $ref: "#/components/schemas/Postcode"
                  count:
                    type: integer
                required: 
                  - count
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/address":
    put:
      description: Update user's address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                address2:
                  type: string
                city:
                  type: string
                postcode:
                  type: string
                state:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/UpdateSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/mobile":
    put:
      description: Update user's mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/UpdateSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: '#/components/responses/InternalServerError'
  "/m/email":
    post:
      description: Send email to recipient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                  example: '<your_own_email_addr>'
                subject:
                  type: string
                  example: Testing on sending email
                html:
                  type: string
                  example: '<p>Testing <b>email body</b></p>'
              required:
                - to
                - subject
                - html
      responses:
        "200":
          $ref: "#/components/responses/NormalSuccess"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Company:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        businessCert:
          type: string
        address:
          type: string
        email:
          type: string
        phone:
          type: string
        mobile:
          type: string
        website:
          type: string
        facebookPageUrl:
          type: string
        isVerified:
          type: boolean
        createdAt:
          type: string
          format: date
          readOnly: true
    Inquiry:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date
          readOnly: true
        code:
          type: string
        subject:
          type: string
        isResponded:
          type: boolean
        isTicketClosed:
          type: boolean
        isFirstConversation:
          type: boolean
        company:
          type: string
        messages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              createdAt:
                type: string
                format: date
              message:
                type: string
              inquiry:
                type: string
              repliedBy:
                type: string
              receivedFrom:
                type: string
          
    Advertisement:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        companyId:
          type: string
        companyName:
          type: string
        advertisementType:
          type: string
        filename:
          type: string
        createdAt:
          type: string
          format: date
          readOnly: true
        startAt:
          type: string
          format: date
          readOnly: true
        endAt:
          type: string
          format: date
          readOnly: true
    Exhibition:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        centre:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            code:
              type: string
    ExhibitionBooth:
      type: object
      properties:
        id: 
          type: string
        position:
          type: string
        companyId:
          type: string
        companyName:
          type: string
        hallId:
          type: string
        hallName:
          type: string
    Postcode:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          type: string
    State:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        categoryGroup:
          type: string
        category:
          type: string
        subcategory:
          type: string
        details:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        description:
          type: string
        isSellable:
          type: boolean
        price:
          type: number
        discount:
          type: number
        isDiscPeriodSet:
          type: boolean
        discountStart:
          type: string
          format: date
        discountEnd:
          type: string
          format: date
        quantityOnHand:
          type: number
        isFreeShipping:
          type: boolean
        brand:
          type: string
        model:
          type: string
        sku:
          type: string
        boxItems: 
          type: array
          items:
            type: string
        isWarrantyProvided:
          type: boolean
        warranty:
          type: string
        isColorSet:
          type: boolean
        colors:
          type: array
          items:
            type: object
            properties:
              color:
                type: string
              hexcode:
                type: string
              image:
                type: string
        createdAt:
          type: string
          format: date
          readOnly: true
          
    InquiryCategory:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        createdAt:
          type: string
          format: date
          readOnly: true
    VisitorBooth:
      type: object
      properties:
        user:
          type: string
        company:
          type: string
    VisitorProduct:
      type: object
      properties:
        user:
          type: string
        company:
          type: string
        product:
          type: string
    Cart:
      type: object
      properties:
        product:
          type: string
          description: Product Id
        cart:
          type: string
          description: Cart Id
        quantity:
          type: number
    UserBasic:
      type: object
      properties:
        fullname:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required:
        - fullname
        - username
        - password
        - email
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    User:
      allOf:
        - $ref: '#/components/schemas/UserBasic'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            mobile:
              type: string
            address:
              type: string
            isFirstLogin:
              type: boolean
            isAddressSet:
              type: boolean
            isBlocked:
              type: boolean
            googleId:
              type: string
              writeOnly: true
            facebookId:
              type: string
              writeOnly: true
            instagramId:
              type: string
              writeOnly: true
            isRegisteredViaOAuth:
              type: boolean
            accessCompanies:
              type: array
              items:
                $ref: "#/components/schemas/InquiryCategory"
    CreateSuccess:
      type: object
      properties:
        message:
          type: string
      example:
        message: Successful create new <record>
    AppLoginSuccess:
      allOf:
        - $ref: '#/components/schemas/CreateSuccess'
        - type: object
          properties:
            token:
              type: string
            user:
              $ref: '#/components/schemas/User'
          example:
            token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRiODg4MzY1LWY0ZDctNGJhZi04MmE1LTMyZDg1ZWI2YzkwMiIsImlhdCI6MTU3MjA2MTM2MCwiZXhwIjoxNTcyMDkwMTYwfQ.1X-h3wQuq5CRHp4OG_zCrGde5FmfCLVt3eKSSPvLXwI'
            user: 
              id: '0619b52b-720f-4daa-a9e8-c352637b25b6'
              fullname: Alden Koepp
              username: Alden_Koepp
              mobile: ''
              address: ''
              isFirstLogin: true
              isAddressSet: true
  parameters:
    PageParam:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
      required: false
    LimitParam:
      name: limit
      in: query
      description: Number of records to retrieve
      schema:
        type: integer
      required: false
    SortParam:
      name: sort
      in: query
      description: Sort fields, separated by comma.
      schema:
        type: string
      required: false
    QueryParam:
      name: query
      in: query
      description: Query on filterable fields
      schema:
        type: string
      required: false
  responses:
    CreateSuccess:
      description: Return with successful message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSuccess'
    AppLoginSuccess:
      description: Normal user login success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppLoginSuccess'
    FindSuccess:
      description: Return specific targetted record
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InquiryCategory"
    UpdateSuccess:
      description: Return with update successful message
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: Successful update <record>
    DeleteSuccess:
      description: Return with delete successful message
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: Successful delete <record>
    NormalSuccess:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Success action message
            required:
              - message
    CartSuccess:
      description: Cart success response
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                quantity:
                  type: number
                isPaid:
                  type: boolean
                product:
                  type: object
                  properties:
                    id:
                      type: string
                    createdAt:
                      type: string
                      format: date
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    quantityOnHand:
                      type: number
                    discount:
                      type: number
                    discountStart:
                      type: string
                      format: date
                    discountEnd:
                      type: string
                      format: date
                    isFreeShipping:
                      type: boolean
                    isSellable:
                      type: boolean
                    isDiscPeriodSet:
                      type: boolean
                    sku:
                      type: string
                    isWarrantyProvided:
                      type: boolean
                    dimLength:
                      type: number
                    dimWidth:
                      type: number
                    dimHeight:
                      type: number
                    weight:
                      type: number
                    isColorSet:
                      type: boolean
                    isSuspended:
                      type: boolean
                    categoryGroup:
                      type: string
                    category:
                      type: string
                    subcategory:
                      type: string
                    brand:
                      type: string
                    model:
                      type: string
                    images:
                      type: array
                      items:
                        type: string
                    details:
                      type: array
                      items:
                        type: string
                    boxItems:
                      type: array
                      items:
                        type: string
                    colors:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          hexcode:
                            type: string
                          sequence:
                            type: number
                          image:
                            type: string
    InquiryMessageSuccess:
      description: Inquiry message success response
      content:
        application/json:
          schema:
            type: object
            properties: 
              inquiryMessages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    createdAt:
                      type: string
                      format: date
                    message:
                      type: string
                    inquiry:
                      type: string
                    repliedBy:
                      type: string
                    receivedFrom:
                      type: string
                    code:
                      type: string
                    subject:
                      type: string
                    company:
                      type: string
                    isResponded:
                      type: boolean
                    isTicketClosed:
                      type: boolean
    ShippingRatesSuccess:
      description: Shipping rate success response
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                REQ_ID: 
                  type: string
                status: 
                  type: string
                remarks: 
                  type: string
                rates:
                  type: array
                  items:
                    type: object
                    properties:
                      rate_id:
                        type: string
                      service_detail:
                        type: string
                      service_id:
                        type: string
                      service_type:
                        type: string
                      courier_id:
                        type: string
                      courier_logo:
                        type: string
                      scheduled_start_date:
                        type: string
                      pickup_date:
                        type: string
                        format: date
                      delivery:
                        type: string
                      price:
                        type: string
                      addon_price:
                        type: string
                      shipment_price:
                        type: string
                      service_name:
                        type: string
                      courier_name:
                        type: string
                      require_min_order:
                        type: number
                      dropoff_point:
                        type: array
                        items:
                          type: object
                          properties:
                            point_id:
                              type: string
                            point_name:
                              type: string
                            point_contact:
                              type: string
                            point_addr1:
                              type: string
                            point_addr2:
                              type: string
                            point_addr3:
                              type: string
                            point_addr4:
                              type: string
                            point_postcode:
                              type: string
                            point_city:
                              type: string
                            point_state:
                              type: string
                            price:
                              type: number
                      pickup_point:
                        type: array
                        items:
                          type: object
                          properties:
                            point_id:
                              type: string
                            point_name:
                              type: string
                            point_contact:
                              type: string
                            point_addr1:
                              type: string
                            point_addr2:
                              type: string
                            point_addr3:
                              type: string
                            point_addr4:
                              type: string
                            point_postcode:
                              type: string
                            point_city:
                              type: string
                            point_state:
                              type: string
                            price:
                              type: number
    ShippingOrderSuccess:
      description: Shipping order success response
      content:
        application/json:
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    REQ_ID:
                      type: string
                    parcel_number:
                      type: string
                    order_number:
                      type: string
                    price:
                      type: string
                    status:
                      type: string
                    remarks:
                      type: string
                    courier:
                      type: string
    PaymentGatewaySuccess:
      description: Request for payment success response
      content:
        application/json:
          schema:
            type: object
            properties:
              paymentHash:
                type: string
    ParcelStatusSuccess:
      description: Parcel status successful message
      content:
        application/json:
          schema:
            type: object
            properties:
              shipmentStatus:
                type: array
                items:
                  type: object
                  properties:
                    parcel_number:
                      type: string
                    ship_status:
                      type: string
    VisitorSuccess:
      description: Return with successful message
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              visitorCounts:
                type: number
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something is wrong
            required:
              - message
    Forbidden:
      description: Forbidden
    Unauthorized:
      description: Unauthorized, usually indicate user can access to particular endpoint but token is expired. New login is required.
    InternalServerError:
      description: Error from internal server
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string