openapi: 3.0.0
info:
  title: KMS Reports API
  description: This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
  version: "1.0.3"
servers:
  - url: 'https://wa-pd-ne-kms-dashboard-api-test.azurewebsites.net'
    description: SwaggerHub API Auto Mocking
security:
  - application:
      - read
      - write
paths:
  /tasks:
    summary: gets tasks list
    get:
      description: returns all tasks
      parameters:
        - name: skip
          in: query
          description: number of items to skip
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: take
          in: query
          description: number of items to take
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KMSTasks'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      description: returns tasks filtered
      parameters:
        - name: skip
          in: query
          description: number of items to skip
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: take
          in: query
          description: number of items to take
          required: false
          style: form
          explode: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KMSTasks'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    put:
      description: 'creates new or updates existed record in DB. This enpoint will be triggered from MSFlow, in particular - Custom connector'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KMSTaskFromFlow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSTaskFromFlow'
  /groupid:
    description: "Gets group id for document"
    get:
      description: "Gets group id for document by id GUID"
      parameters: 
        - name: id
          in: query
          description: Document unique ID
          required: true
          style: form
          example: b2741128-b944-4e75-9a6d-906fec1e73fa
          explode: true
          schema:
            type: string
            description: "document GUID"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                description: GroupID
                example: 826780e9-8e62-470a-8d96-00c2de7814fe
  /kmsuser: 
    description: "Gets current user details"
    get:
      description: "Gets current user details"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
  /activity:
    summary: Add new activity
    post:
      summary: This is endpoint to track activity from flow and frontend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /exportData:
    description: "Exports tasks between start and end date"
    get:
      description: "Exports tasks between start and end date"
      parameters: 
        - name: start
          in: query
          description: UTC date value in ticks
          required: true
          style: form
          example: '1570568400'
          explode: true
          schema:
            type: string
            description: "Picked start date from which export tasks data"
        - name: end
          in: query
          description: UTC date value in ticks
          required: true
          style: form
          example: '1570568400'
          explode: true
          schema:
            type: string
            description: "Picked end date from which export tasks data"
      responses:
        '200':
          description: Success
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                description: Generates excel file with all tasks between start and end dates
components:
  schemas:
    KMSTaskBase: 
      type: object
      required: 
       - CreatedDate
      properties:
        ExpiryDate:
          type: string
          description: UTC date value in ticks
          example: '1568118588604'
        CreatedDate:
          type: string
          description: UTC date value in ticks
          example: '1568118588604'
        Action:
          type: string
          description: Task action Enum
          example: "Review"
          enum:
            - Approve
            - Review
            - Archive
        Process:
          type: string
          description: Task type Enum
          example: "Upload"
          enum:
            - Upload
            - Renewal
    KMSTask:
      type: object
      description: "This model will be returned to UI"
      allOf:
        - $ref: '#/components/schemas/KMSTaskBase'
        - type: object
          properties:
            File:
              type: object
              description: File details
              allOf:
                - $ref: '#/components/schemas/FileMetadata'
            AssignedUsers:
              type: array
              items:
                $ref: '#/components/schemas/PersonExtended'
            ActionButtons:
              type: array
              items:
                $ref: '#/components/schemas/ActionButton'
    KMSTaskFromFlow:
      type: object
      description: "This model comes from Flow"
      allOf:
        - $ref: '#/components/schemas/KMSTaskBase'
        - type: object
          required:
            - DocumentId
            - AssignedUserEmail
            - AssigneeType
            - GroupId
            - WebUrl
          properties: 
            DocumentId:
              type: string
              example: "c1431273-bc11-4054-86ce-48e8b066756e"
              description: SP Document internal ID
            AssignedUserEmail:
              type: string
              description: "User assigned to the current task"
              example: "adam.smith@bat.com"
            AssigneeType:
              type: string
              example: "Owner"
              enum: 
                - Reviewer
                - Owner
                - KM
            Status:
              type: string
              description: Task status Enum
              example: "InProgress"
              enum:
                - Assigned
                - InProgress
                - Completed
            GroupId:
              type: string
              description: GUID
              example: b2741128-b944-4e75-9a6d-906fec1e73fa
            WebUrl:
              type: string
              description: Url of the web where document leaves
              example: 'https://mediaict.sharepoint.com/sites/KMSTest03'
            ActionButtonsJSON:
              type: string
              description: Serialized actions buttons are created as JSON string in flow
              example: 'hello'
    KMSTasks:
      type: object
      properties:
        Tasks:
          type: array
          description: List of requested task objects
          items:
            $ref: '#/components/schemas/KMSTask'
        Next:
          type: boolean
          description: If more items could be taken?
          example: false
        Skip:
          type: integer
          description: Describes current position
          example: 10
        Take:
          type: integer
          description: How many items must be returned by current request. May not be equal to number of returned tasks.
          example: 5
        Total:
          type: integer
          description: Total count of items available
          example: 33
    Person:
      type: object
      properties:
        DisplayName:
          type: string
          example: Adam Smith
        EMail:
          type: string
          example: adam.smith@bat.com/
    PersonExtended:
      type: object
      allOf:
        - $ref: "#/components/schemas/Person"
        - type: object
          properties: 
            AssigneeType:
              type: string
              example: "Reviewer"
              enum: 
                - Reviewer
                - Owner
                - KM
    UserDetails: 
      type: object
      properties:
        AssigneeType:
          type: string
          example: "KM"
          enum: 
            - Reviewer
            - Owner
            - KM
    ActionButton: 
      type: object
      properties:
        DisplayText:
          type: string
          description: "Text to be displayed on UI"
          example: "Approve"
        Url: 
          type: string
          description: "Url to the flow"
          example: "http://flow.microsoft.com/guid=111"
    Filter:
      type: object
      properties:
        SeverityLevel:
          type: string
          description: task type to be retrieved
          example: Low
          enum:
            - Low
            - Medium
            - High
            - Upcoming
            - InProgress
            - ExpiringSoon
        User:
          type: string
          description: user for whom tasks should be retrieved
          example: adam.smith@bat.com
        Process:
          type: string
          description: Task type Enum
          enum:
            - All
            - Upload
            - Renew
        Action:
          type: string
          description: Task action Enum
          enum:
            - All
            - Approve
            - Review
            - Archive
    FileMetadata:
      properties:
        URL:
          type: string
          example: http://www.org/MyFileName.docx
        Name:
          type: string
          example: MyFileName.docx
        Type:
          type: string
          enum:
            - docx
            - xlsx
            - pptx
    Activity:
      properties:
        CreatedDate:
          type: string
          description: UTC date value in ticks
          example: '1568118588604'
        ActivityType:
          type: string
          description: Activity type Enum
          example: "DocumentRenewed"
          enum:
            - Search
            - Filter
            - DocumentSearchView
            - DocumentUploaded
            - DocumentApproved
            - DocumentRenewed
            - DocumentArchivedSystem
            - DocumentArchivedKM
        SearchTerm:
          type: string
          description: Search term
          example: 'Wololo'
        DocumentId:
          type: string
          example: "c1431273-bc11-4054-86ce-48e8b066756e"
          description: SP Document internal ID
        SearchFilter:
          type: string
          description: Search filter
          example: 'Wololo'
        WebUrl:
          type: string
          description: Web Id where document stores
          example: 'c1431273-bc11-4054-86ce-48e8b066756e'
    inline_response_400:
      type: object
      properties:
        message:
          type: string
  responses:
    404Error:
      description: Invalid Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
  parameters:
    PageLimit:
      name: limit
      in: query
      description: limit the number of items
      required: false
      style: form
      explode: true
      schema:
        type: integer
    PageOffset:
      name: offset
      in: query
      description: starting position page of results
      required: false
      style: form
      explode: true
      schema:
        type: integer
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/ff9c7474-421d-4957-8d47-c4b64dec87b5/oauth2/token'
          scopes:
            .default: default scope
