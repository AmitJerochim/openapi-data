{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SFMOHD API",
    "description" : "The first version of the SFMO Housing API is an exciting step in providing information to listings to apply.  We want to make it easy for you, to build apps and have open access to city Listing data to apply for affordable housing\nThere are two ways to connect to the api-\nThe listing data is public domain and can be accessed at <publicsite>/salesforce.com/apexrest\nYou can connect your listing information to this\nTo connect a full fledge application to the city data in order to facilitate applications please email the city, and we will get you the proper credentials.\nAll application data requires oauth to connect.\n",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://salesforce.com/services/apexrest"
  } ],
  "security" : [ {
    "restrictedAccess" : [ "Listing", "ListingDetails", "LotteryMember", "UnitSummary", "ShortForm", "Person", "ami" ]
  }, {
    "public" : [ ]
  } ],
  "paths" : {
    "/Listing/*" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "API used to return the list of Listings that match criteria",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "sfdc listing id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "sfdc listing ids split by ','",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "householdsize",
          "in" : "query",
          "description" : "household size",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "incomelevel",
          "in" : "query",
          "description" : "income level",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "childrenUnder6",
          "in" : "query",
          "description" : "number of children under 6",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preference",
          "in" : "query",
          "description" : "Certificate of Preference, Ellis Act, Live\\Work",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Listing__c"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/LotteryResult/Summary/{listingID}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "API used to return the Lottery results",
        "parameters" : [ {
          "name" : "listingID",
          "in" : "path",
          "description" : "this returns the application lottery results, bucket results are empty",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListingResult"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/Listing/LotteryResult/Bucket/{listingID}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "This returns the bucket of lottery results, application results are empty the bucket of results is a list of applicaition results by preference - we may need to add additional filter parameters to define result set size - default is to return top 100",
        "parameters" : [ {
          "name" : "listingID",
          "in" : "path",
          "description" : "listingID for the application",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListingResult"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/Listing/LotteryResult/{listingID}/{lotteryNumber}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "This returns the Listing result - with 1 applicationResult inside this is the Application with the appropriate lottery number.  If no lotteryNumber fits, applicationsResult will be empty.  If listingID\n is incorrect it will error.",
        "parameters" : [ {
          "name" : "listingID",
          "in" : "path",
          "description" : "listingID for lottery",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lotteryNumber",
          "in" : "path",
          "description" : "lottery number to look up",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotteryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/LotteryResult/{listingID}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "This returns the Listing result - with applicationResults for the listing.  If listingId doesn't  fit, applicationsResult will be empty.  If listingId isIncorrect it will error.",
        "parameters" : [ {
          "name" : "listingID",
          "in" : "path",
          "description" : "listingID for lottery",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotteryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/ListingDetails/*" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "This returns the Listing information and its summary information.",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "sfdc listing id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "sfdc listing id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "householdsize",
          "in" : "query",
          "description" : "household size",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "incomelevel",
          "in" : "query",
          "description" : "income level",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "childrenUnder6",
          "in" : "query",
          "description" : "number of children under 6",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preference",
          "in" : "query",
          "description" : "Certificate of Preference, Ellis Act, Live\\Work",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listing details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ListingDetails"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/ListingDetails/Criteria/" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "This queries the Listing information and its summary information.",
        "parameters" : [ {
          "name" : "householdsize",
          "in" : "query",
          "description" : "household size",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "incomelevel",
          "in" : "query",
          "description" : "income level",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "childrenUnder6",
          "in" : "query",
          "description" : "number of children under 6",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preference",
          "in" : "query",
          "description" : "Certificate of Preference, Ellis Act, Live\\Work",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listingdetails queried by criteria <this end point doesn't exist it is proposed>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ListingDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/Listing/EligibilityCheck/{listingid}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "API used to return the eligibility info for a given listing that matches criteria",
        "parameters" : [ {
          "name" : "listingid",
          "in" : "path",
          "description" : "sfdc listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Listing eligibility details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eligibility"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/Units/{listingid}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns Units for listing based on Listing ID.",
        "parameters" : [ {
          "name" : "listingid",
          "in" : "path",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Unit__c"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/Units/" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns Units for listing based on Listing ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Unit__c"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/LotteryPreference/{id}'" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns lottery Preference by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "lottery preference id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Lottery_Preference__c"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/LotteryPreference/" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns lottery preferences by ID.  If not id is provided it returns all lottery preferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "lottery preference id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "lottery ids separated by ',' ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Lottery_Preference__c"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/Listing/UnitSummary/{listingid}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "API used to return the list of Units summary for a given listing",
        "parameters" : [ {
          "name" : "listingid",
          "in" : "path",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitSummaries"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/UnitStats/{listingid}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns unitType and totalUnits of Listing. Also returns the Minimum Occupancy, Maximum Occupancy, Minimum Square Foot and Maximum Square Foot from the Units",
        "parameters" : [ {
          "name" : "listingid",
          "in" : "path",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitStat"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Listing/Preferences/{listingID}" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "API used to return the list of Listing Preferences",
        "parameters" : [ {
          "name" : "listingID",
          "in" : "path",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Preferences for a giving Listing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ListingPreference"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/LotteryMember/*" : {
      "get" : {
        "tags" : [ "Listing" ],
        "description" : "returns lottery Members for listing - either id or ids is required",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "listing id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "listing ids by ',' ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Units by listing ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Lottery_Member__c"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Parameters",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "LotteryMember", "Listing" ]
        } ]
      }
    },
    "/ami/*" : {
      "get" : {
        "tags" : [ "AMI" ],
        "description" : "Returns the ami table value based on 2 passed in parameters",
        "parameters" : [ {
          "name" : "chartType",
          "in" : "query",
          "description" : "type of chart for AMI",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "year",
          "in" : "query",
          "description" : "year of the chart for the ami",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "percent",
          "in" : "query",
          "description" : "Percent of median",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "amount",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "householdsize",
          "in" : "query",
          "description" : "household size",
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AMI entry",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AMI"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ami/calc/" : {
      "get" : {
        "tags" : [ "AMI" ],
        "description" : "Calculates the percentage ami based off household and amount and returns ami",
        "parameters" : [ {
          "name" : "chartType",
          "in" : "query",
          "description" : "type of chart for AMI",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "year",
          "in" : "query",
          "description" : "year of the chart for the ami",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "percent",
          "in" : "query",
          "description" : "percent",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "amount",
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AMI entry",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AMI"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/ami/charts/" : {
      "get" : {
        "tags" : [ "AMI" ],
        "description" : "returns the list of application charts type and years for those chart types",
        "responses" : {
          "200" : {
            "description" : "returns a list of AMI objects where the chart and year are filled out only.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AMI"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/Person/{contactid}" : {
      "get" : {
        "tags" : [ "Person" ],
        "description" : "This returns a Perons account data.  This is their contact information",
        "parameters" : [ {
          "name" : "contactid",
          "in" : "path",
          "description" : "sfdc contact id put into the path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of listings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid contactId or ContactId nor found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/Person/" : {
      "post" : {
        "tags" : [ "Person" ],
        "description" : "Check for valid person contactId Id and update",
        "requestBody" : {
          "description" : "Person request body",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Person"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Person"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid contactId ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Person contactId not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "Person" ]
        } ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/agents/" : {
      "get" : {
        "tags" : [ "Agents" ],
        "description" : "deletes specified Rental Assistance",
        "parameters" : [ {
          "name" : "rentalAssistanceId",
          "in" : "path",
          "description" : "ID Rental Assistance To Delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/RentalAssistance/{rentalAssistanceId}" : {
      "delete" : {
        "tags" : [ "Rental Assistance" ],
        "description" : "deletes specified Rental Assistance",
        "parameters" : [ {
          "name" : "rentalAssistanceId",
          "in" : "path",
          "description" : "ID Rental Assistance To Delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          }
        }
      }
    },
    "/shortForm/list/{ContactID}" : {
      "get" : {
        "tags" : [ "Shortform Application" ],
        "description" : "This returns shortform type data (applications related to the contact) based on request criteria.",
        "parameters" : [ {
          "name" : "ContactID",
          "in" : "path",
          "description" : "external webappID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShortForm"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/shortForm/{shortFormId}" : {
      "get" : {
        "tags" : [ "Shortform Application" ],
        "description" : "ShortForm type data based on request criteria.",
        "parameters" : [ {
          "name" : "shortFormId",
          "in" : "path",
          "description" : "ID of shortform",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/LeasingAgentPortal/shortForm/{shortFormId}" : {
      "get" : {
        "tags" : [ "Shortform Application - Leasing Agent Portal" ],
        "description" : "ShortForm type data based on request criteria.",
        "parameters" : [ {
          "name" : "shortFormId",
          "in" : "path",
          "description" : "ID of shortform",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/LeasingAgentPortal/shortForm/Archive/{snapshotId}" : {
      "get" : {
        "tags" : [ "Shortform Application - Leasing Agent Portal" ],
        "description" : "ShortForm type data based on request criteria.",
        "parameters" : [ {
          "name" : "snapshotId",
          "in" : "path",
          "description" : "ID of shortform",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied or user does not have access",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/shortForm/" : {
      "post" : {
        "tags" : [ "Shortform Application" ],
        "description" : "get Application and its Application Members by passing the application id",
        "requestBody" : {
          "description" : "id of shortform places",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShortForm"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/LeasingAgentPortal/shortForm/" : {
      "post" : {
        "tags" : [ "Shortform Application - Leasing Agent Portal" ],
        "description" : "get Application and its Application Members by passing the application id",
        "requestBody" : {
          "description" : "id of shortform places",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShortForm"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "body"
      },
      "put" : {
        "tags" : [ "Shortform Application - Leasing Agent Portal" ],
        "description" : "get Application and its Application Members by passing the application id",
        "requestBody" : {
          "description" : "id of shortform places",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShortForm"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/shortForm/delete/{shortformid}" : {
      "delete" : {
        "tags" : [ "Shortform Application" ],
        "description" : "deletes specified application",
        "parameters" : [ {
          "name" : "shortformid",
          "in" : "path",
          "description" : "ID shortForm To Delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/shortForm/delete/" : {
      "post" : {
        "tags" : [ "Shortform Application" ],
        "description" : "deletes specified application",
        "requestBody" : {
          "description" : "id of shortform places",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "shortformId" ],
                "properties" : {
                  "shortformId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/shortForm/Attachment/" : {
      "post" : {
        "tags" : [ "Shortform Application" ],
        "description" : "upload attachment to shortform.",
        "parameters" : [ {
          "name" : "Name",
          "in" : "header",
          "description" : "Name of file",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ContentType",
          "in" : "header",
          "description" : "Contenttype",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Attachment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attachment"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "file"
      }
    },
    "/shortForm/Attachment/{FileId}" : {
      "get" : {
        "tags" : [ "Shortform Application" ],
        "description" : "upload attachment to shortform.",
        "parameters" : [ {
          "name" : "FileId",
          "in" : "path",
          "description" : "ID of File",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "blob" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "file"
      }
    },
    "/shortForm/contact/delete" : {
      "post" : {
        "tags" : [ "Shortform Application" ],
        "description" : "deletes specified contact from household  - use \"delete\" instead",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "contactId" ],
                "properties" : {
                  "contactId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Invalid contactId supplied",
            "content" : { }
          },
          "404" : {
            "description" : "contactId not found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ]
      }
    },
    "/shortForm/File/*" : {
      "post" : {
        "tags" : [ "Shortform Application" ],
        "description" : "API used to upload a file into salesforce to an Application",
        "requestBody" : {
          "description" : "body of attachment encoded as binary",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShortForm"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShortForm"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "content" : { }
          },
          "404" : {
            "description" : "Short form not found",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/shortForm/File/{attachmentId}" : {
      "get" : {
        "tags" : [ "Shortform Application" ],
        "description" : "upload attachment to shortform.",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "ID of attachment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attachment"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "security" : [ {
          "restrictedAccess" : [ "ShortForm" ]
        } ],
        "x-codegen-request-body-name" : "file"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Account" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Sobject type"
              },
              "url" : {
                "type" : "string",
                "description" : "URl of account record"
              }
            }
          },
          "Id" : {
            "type" : "string",
            "description" : "the account id"
          },
          "RecordTypeId" : {
            "type" : "string",
            "description" : "the recordtype id of account"
          },
          "Name" : {
            "type" : "string",
            "description" : "Name of account"
          },
          "Contacts" : {
            "type" : "object",
            "properties" : {
              "totalSize" : {
                "type" : "integer",
                "description" : "Number of contacts"
              },
              "done" : {
                "type" : "boolean",
                "description" : "system data"
              },
              "records" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Sobject type"
              },
              "url" : {
                "type" : "string",
                "description" : "URl of Contact record"
              }
            }
          },
          "Id" : {
            "type" : "string",
            "description" : "the contact id"
          },
          "AccountId" : {
            "type" : "string",
            "description" : "account record Id"
          },
          "FirstName" : {
            "type" : "string",
            "description" : "FirstName of contact"
          },
          "LastName" : {
            "type" : "string",
            "description" : "LastName of contact"
          },
          "Email" : {
            "type" : "string",
            "description" : "Email of contact"
          },
          "Lending_Agent_Status__c" : {
            "type" : "string",
            "description" : "Lending Agent status"
          },
          "Lending_Agent_Inactive_Date__c" : {
            "type" : "string",
            "description" : "Lending Agent inactive datw"
          },
          "NMLS__c" : {
            "type" : "string",
            "description" : "MMLS"
          },
          "BMR_Certified__c" : {
            "type" : "boolean",
            "description" : "BMR certified"
          },
          "DALP_Certified__c" : {
            "type" : "boolean",
            "description" : "DALP certified"
          },
          "MCC_Certified__c" : {
            "type" : "boolean",
            "description" : "MCC certified"
          },
          "Accepting_New_MOHCD_Clients__c" : {
            "type" : "boolean",
            "description" : "Accepting New MOHCD Clients"
          },
          "RecordTypeId" : {
            "type" : "string",
            "description" : "recordtype id of contact"
          }
        }
      },
      "UnitSummaries" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnitSummary"
            }
          },
          "reserved" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnitSummary"
            }
          }
        },
        "description" : "summary statistics of a given unit type per listing"
      },
      "UnitSummary" : {
        "type" : "object",
        "properties" : {
          "listingID" : {
            "type" : "string",
            "description" : "the listing id"
          },
          "unitType" : {
            "type" : "string",
            "description" : "the type of unit.  (1br, 2br, studio)"
          },
          "totalUnits" : {
            "type" : "integer",
            "description" : "total number of units at this type per this listing"
          },
          "minOccupancy" : {
            "type" : "integer",
            "description" : "fewest tenants available at this unittype"
          },
          "maxOccupancy" : {
            "type" : "integer",
            "description" : "most tenants available at this unittype"
          },
          "minSquareFt" : {
            "type" : "integer",
            "description" : "Smallest unit at this type for this listing"
          },
          "maxSquareFt" : {
            "type" : "integer",
            "description" : "largest unit at this type for this listing"
          },
          "minMonthlyRent" : {
            "type" : "number",
            "description" : "lowest rent at this type for this listing"
          },
          "maxMonthlyRent" : {
            "type" : "number",
            "description" : "highest rent at this type for this listing"
          },
          "minRentalMinIncome" : {
            "type" : "number",
            "description" : "lowest minimum required income at this type for this listing"
          },
          "maxRentalMinIncome" : {
            "type" : "number",
            "description" : "highest minimum required income at this type for this listing"
          },
          "minPercentIncome" : {
            "type" : "number",
            "description" : "lowest rent percent income at this type for this listing"
          },
          "maxPercentIncome" : {
            "type" : "number",
            "description" : "max rent percent income at this type for this listing"
          },
          "priorities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "summary statistics of a given unit type per listing"
      },
      "ListingDetails" : {
        "type" : "object",
        "properties" : {
          "listingID" : {
            "type" : "string",
            "description" : "the listing id"
          },
          "chartTypes" : {
            "$ref" : "#/components/schemas/AMI"
          },
          "prioritiesDescriptor" : {
            "type" : "array",
            "description" : "asdf",
            "items" : {
              "$ref" : "#/components/schemas/PRDescriptor"
            }
          },
          "reservedDescriptor" : {
            "type" : "array",
            "description" : "asdf",
            "items" : {
              "$ref" : "#/components/schemas/PRDescriptor"
            }
          },
          "unitSummaries" : {
            "$ref" : "#/components/schemas/UnitSummaries"
          },
          "doesMatch" : {
            "type" : "boolean",
            "description" : "does listing match passed criteria"
          },
          "listing" : {
            "$ref" : "#/components/schemas/Listing__c"
          }
        },
        "description" : "summary statistics of a given unit type per listing"
      },
      "PRDescriptor" : {
        "type" : "object",
        "properties" : {
          "listingId" : {
            "type" : "string",
            "description" : "the listing id"
          },
          "Name" : {
            "type" : "string",
            "description" : "the priority name"
          },
          "shortDescription" : {
            "type" : "string",
            "description" : "abbreviated description"
          },
          "numberOfUnits" : {
            "type" : "number",
            "description" : "this is the number of units with the priority, when this object is the context of a listing.  Otherwise it is n/a - "
          }
        },
        "description" : "Priority/Reserved type descriptor "
      },
      "Listing__c" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string",
            "description" : ""
          },
          "Building_Name__c" : {
            "type" : "string",
            "description" : ""
          },
          "Building_Street_Address__c" : {
            "type" : "string",
            "description" : ""
          },
          "Building_City__c" : {
            "type" : "string",
            "description" : ""
          },
          "Building_State__c" : {
            "type" : "string",
            "description" : ""
          },
          "Building_Zip_Code__c" : {
            "type" : "string",
            "description" : ""
          },
          "Developer__c" : {
            "type" : "string",
            "description" : "Name of the Developer for the Building."
          },
          "Description__c" : {
            "type" : "string",
            "description" : "Description of the Listing"
          },
          "Neighborhood__c" : {
            "type" : "string",
            "description" : "Neighborhood for the listing."
          },
          "Year_Built__c" : {
            "type" : "number",
            "description" : "",
            "format" : "double"
          },
          "Application_Due_Date__c" : {
            "type" : "string",
            "description" : "Due Date for Applications for the lottery for this listing.",
            "format" : "date"
          },
          "Building_URL__c" : {
            "type" : "string",
            "description" : ""
          },
          "Legal_Disclaimers__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_Organization__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_Street_Address__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_City__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_State__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_Postal_Code__c" : {
            "type" : "string",
            "description" : ""
          },
          "Application_Phone__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Summary__c" : {
            "type" : "string",
            "description" : "Summary of the Lottery Results."
          },
          "Listing_Other_Notes__c" : {
            "type" : "string",
            "description" : "Listing Other Notes."
          },
          "Lottery_Results_Date__c" : {
            "type" : "string",
            "description" : "Date Lottery Results are posted",
            "format" : "date"
          },
          "Lottery_End__c" : {
            "type" : "string",
            "description" : "End of the Lottery - DateTime",
            "format" : "date-time"
          },
          "Lottery_End_Time__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Venue__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Street_Address__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_City__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Date__c" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "Credit_Rating__c" : {
            "type" : "string",
            "description" : ""
          },
          "Criminal_History__c" : {
            "type" : "string",
            "description" : ""
          },
          "Eviction_History__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Name__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Title__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Email__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Phone__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Street__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_City__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_State__c" : {
            "type" : "string",
            "description" : ""
          },
          "Leasing_Agent_Zip__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Results__c" : {
            "type" : "boolean",
            "description" : "Indicates there is at least one lottery winner"
          },
          "Lottery_Winners__c" : {
            "type" : "number",
            "description" : "Rollup sumary with Count of people who have been selected as winning lottery and therefore, the status of their lottery member = Winner.",
            "format" : "double"
          },
          "Accepting_applications_at_leasing_agent__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "Accepting_applications_by_PO_Box__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "Blank_paper_application_can_be_picked_up__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "Deposit_Min__c" : {
            "type" : "number",
            "description" : ""
          },
          "Deposit_Max__c" : {
            "type" : "number",
            "description" : ""
          },
          "Costs_Not_Included__c" : {
            "type" : "string",
            "description" : "Detailed Information about other costs not included with rent. Converted to text field from currency."
          },
          "Lottery_Preferences__c" : {
            "type" : "string",
            "description" : ""
          },
          "Program_Type__c" : {
            "type" : "string",
            "description" : ""
          },
          "Amenities__c" : {
            "type" : "string",
            "description" : ""
          },
          "Accessibility__c" : {
            "type" : "string",
            "description" : ""
          },
          "Building_Selection_Criteria__c" : {
            "type" : "string",
            "description" : ""
          },
          "Required_Documents__c" : {
            "type" : "string",
            "description" : ""
          },
          "Smoking_Policy__c" : {
            "type" : "string",
            "description" : "Will be set via code from Property."
          },
          "Pet_Policy__c" : {
            "type" : "string",
            "description" : ""
          },
          "Reserved_community_type__c" : {
            "type" : "string",
            "description" : ""
          },
          "Reserved_community_type_description__c" : {
            "type" : "string",
            "description" : ""
          },
          "Reserved_community_minimum_age__c" : {
            "type" : "number",
            "description" : ""
          },
          "Reserved_community_maximum_age__c" : {
            "type" : "number",
            "description" : ""
          },
          "Total_number_of_building_units__c" : {
            "type" : "number",
            "description" : ""
          },
          "hasWaitlist__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "Number_of_people_currently_on_waitlist__c" : {
            "type" : "number",
            "description" : ""
          },
          "Maximum_waitlist_size__c" : {
            "type" : "number",
            "description" : ""
          },
          "Total_waitlist_openings__c" : {
            "type" : "number",
            "description" : ""
          },
          "Accepting_Online_Applications__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "First_Come_First_Served__c" : {
            "type" : "boolean",
            "description" : "Indicates there is at least one lottery winner"
          },
          "Units_Available__c" : {
            "type" : "number",
            "description" : ""
          },
          "SASE_Required_for_Lottery_Ticket__c" : {
            "type" : "boolean",
            "description" : ""
          },
          "nGeneral_Application_Total__c" : {
            "type" : "number",
            "description" : ""
          },
          "Reserved_Community_Requirement__c" : {
            "type" : "string",
            "description" : ""
          },
          "Office_Hours__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_Status__c" : {
            "type" : "string",
            "description" : ""
          },
          "Project_ID__c" : {
            "type" : "string",
            "description" : ""
          },
          "LastModifiedDate" : {
            "type" : "string",
            "description" : "",
            "format" : "date"
          },
          "Marketing_URL__c" : {
            "type" : "string",
            "description" : ""
          },
          "Marketing_Short_Code__c" : {
            "type" : "string",
            "description" : ""
          },
          "Lottery_URL__c" : {
            "type" : "string",
            "description" : ""
          },
          "LotteryResultsURL__c" : {
            "type" : "string",
            "description" : ""
          },
          "Services_Onsite__c" : {
            "type" : "string",
            "description" : ""
          },
          "Units_Building_Special_Message__c" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : ""
      },
      "Unit__c" : {
        "type" : "object",
        "properties" : {
          "Unit_Type__c" : {
            "type" : "string",
            "description" : "Description of units."
          },
          "BMR_Rent_Monthly__c" : {
            "type" : "number",
            "description" : "Monthly Rent for BMR Unit"
          },
          "BMR_Rental_Minimum_Monthly_Income_Needed__c" : {
            "type" : "number",
            "description" : ""
          },
          "Unit_Square_Footage__c" : {
            "type" : "number",
            "description" : "Square Footage of the Unit.",
            "format" : "double"
          },
          "Unit_Number__c" : {
            "type" : "string",
            "description" : ""
          },
          "Unit_Floor__c" : {
            "type" : "string",
            "description" : ""
          },
          "Number_of_Bathrooms__c" : {
            "type" : "number",
            "description" : "",
            "format" : "double"
          },
          "isReservedCommunity__c" : {
            "type" : "boolean",
            "description" : "is this unit reserved or not"
          },
          "rent_percent_of_income__c" : {
            "type" : "number",
            "description" : "percent in the format of 100.00 (whole numbers not decimals) showing rent precent of income",
            "format" : "double"
          },
          "Status__c" : {
            "type" : "string",
            "description" : ""
          },
          "Property_Type__c" : {
            "type" : "string",
            "description" : ""
          },
          "Priority_Type__c" : {
            "type" : "string",
            "description" : ""
          },
          "Priority_Grouping__c" : {
            "type" : "string",
            "description" : ""
          },
          "Reserved_Type__c" : {
            "type" : "string",
            "description" : ""
          },
          "AMI_chart_type__c" : {
            "type" : "string",
            "description" : ""
          },
          "AMI_chart_year__c" : {
            "type" : "number",
            "description" : ""
          },
          "of_AMI_for_Pricing_Unit__c" : {
            "type" : "number",
            "description" : ""
          }
        },
        "description" : ""
      },
      "AMI" : {
        "type" : "object",
        "properties" : {
          "chartType" : {
            "type" : "string",
            "description" : "precentage"
          },
          "year" : {
            "type" : "number",
            "description" : "4 digit year of the chart"
          },
          "percent" : {
            "type" : "number",
            "description" : "precentage"
          },
          "numOfHousehold" : {
            "type" : "number",
            "description" : "number of people"
          },
          "amount" : {
            "type" : "number",
            "description" : "amount of threshhold"
          }
        },
        "description" : "summary statistics of a given unit type per listing"
      },
      "Lottery_Preference__c" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "description" : ""
          },
          "Name" : {
            "type" : "string",
            "description" : ""
          },
          "Description__c" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : ""
      },
      "Lottery_Member__c" : {
        "type" : "object",
        "properties" : {
          "Lottery_Number__c" : {
            "type" : "number",
            "description" : "Lottery Number for the Specific Lottery Member.",
            "format" : "double"
          },
          "Rank__c" : {
            "type" : "number",
            "description" : "Rank of the Lottery Member in the Lottery Results",
            "format" : "double"
          },
          "Listing__c" : {
            "type" : "string",
            "description" : "Rank of the Lottery Member in the Lottery Results"
          },
          "Status__c" : {
            "type" : "string",
            "description" : "Status of the Lottery Member for the given Lottery"
          }
        },
        "description" : "Lotttery Members. Will ultimately be a join of contacts and listings but initially it will just be a child of listings with information about the lottery results."
      },
      "ShortForm" : {
        "type" : "object",
        "properties" : {
          "appRTType" : {
            "type" : "string",
            "description" : "Application Record Type"
          },
          "ID" : {
            "type" : "string",
            "description" : "Sfdc ID"
          },
          "name" : {
            "type" : "string",
            "description" : "name"
          },
          "listingID" : {
            "type" : "string",
            "description" : "listing ID for SFDC"
          },
          "primaryApplicant" : {
            "$ref" : "#/components/schemas/Person"
          },
          "alternateContact" : {
            "$ref" : "#/components/schemas/Person"
          },
          "householdMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Person"
            }
          },
          "shortFormPreferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShortFormPreference"
            }
          },
          "referral" : {
            "type" : "string",
            "description" : "how applicant found out about the program (multiselect)"
          },
          "agreeToTerms" : {
            "type" : "boolean",
            "description" : "applicant agrees to terms of application"
          },
          "householdVouchersSubsidies" : {
            "type" : "string",
            "description" : "household has vouchers or subsidies - Value {true, false, <blank>}"
          },
          "annualIncome" : {
            "type" : "number",
            "description" : "either annual or monthly needs to be specified"
          },
          "monthlyIncome" : {
            "type" : "number",
            "description" : "either annual or monthly needs to be specified"
          },
          "totalMonthlyRent" : {
            "type" : "number",
            "description" : "Total monthly rent, in dollars, paid by applicant and all household members on the application."
          },
          "status" : {
            "type" : "string",
            "description" : "application status"
          },
          "applicationLanguage" : {
            "type" : "string",
            "description" : "application language"
          },
          "applicationSubmissionType" : {
            "type" : "string",
            "description" : "application submission type"
          },
          "applicationSubmittedDate" : {
            "type" : "string",
            "description" : "application submission date",
            "format" : "date"
          },
          "lotteryNumber" : {
            "type" : "string",
            "description" : "lottery number"
          },
          "lotteryNumberManual" : {
            "type" : "string",
            "description" : "lottery number"
          },
          "formMetadata" : {
            "type" : "string",
            "description" : "form metadat"
          },
          "adaPrioritiesSelected" : {
            "type" : "string",
            "description" : "ADA Priorities Selected"
          },
          "hasPublicHousing" : {
            "type" : "string",
            "description" : "Answer to public housing question: \"Yes\" or \"No\", defaults to blank."
          },
          "hasMilitaryService" : {
            "type" : "string",
            "description" : "Answer to question about military service: \"Yes\" or \"No\", defaults to blank."
          },
          "hasDevelopmentalDisability" : {
            "type" : "string",
            "description" : "Answer to question about disability: \"Yes\" or \"No\", defaults to blank."
          },
          "answeredCommunityScreening" : {
            "type" : "string",
            "description" : "Answer to community building screening question: \"Yes\" or \"No\", defaults to blank."
          },
          "householdAssets" : {
            "type" : "number",
            "description" : "household Assets"
          },
          "processingStatus" : {
            "type" : "string",
            "description" : "processing Status"
          },
          "HHTotalIncomeWithAssets" : {
            "type" : "number",
            "description" : "HH Total Income With Assets"
          },
          "externalSessionId" : {
            "type" : "string",
            "description" : "external session Id"
          },
          "numberOfDependents" : {
            "type" : "number",
            "description" : "number Of Dependents"
          },
          "snapshotId" : {
            "type" : "string",
            "description" : "snapshot Id"
          },
          "didApplicantUseHousingCounselingAgency" : {
            "type" : "string",
            "description" : "did Applicant Use Housing Counseling Agency"
          },
          "housingCounselingAgency" : {
            "type" : "string",
            "description" : "housing Counseling Agency"
          },
          "otherHousingCounselingAgency" : {
            "type" : "string",
            "description" : "other Housing Counseling Agency"
          },
          "hasSenior" : {
            "type" : "string",
            "description" : "Reserved Senior"
          },
          "subStatus" : {
            "type" : "string",
            "description" : "subStatus"
          },
          "interviewScheduledDate" : {
            "type" : "string",
            "description" : "interview Scheduled Date",
            "format" : "date"
          },
          "finalHouseholdIncome" : {
            "type" : "number",
            "description" : "final Household Income"
          },
          "confirmedHouseholdAnnualIncome" : {
            "type" : "string",
            "description" : "confirmed Household Annual Income"
          }
        },
        "description" : "ShortForm for housing"
      },
      "LotteryResult" : {
        "type" : "object",
        "properties" : {
          "listingID" : {
            "type" : "string",
            "description" : "listing ID"
          },
          "LotteryBuckets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LotteryBucket"
            }
          },
          "URL" : {
            "type" : "string",
            "description" : "randome.org url"
          },
          "lotteryResultsURL" : {
            "type" : "string",
            "description" : "link to a file"
          },
          "lotteryAppTotal" : {
            "type" : "number",
            "description" : "total applications for  lottery"
          },
          "lotteryCity" : {
            "type" : "string",
            "description" : "listing lottery City"
          },
          "lotteryDate" : {
            "type" : "string",
            "description" : "lottery date ",
            "format" : "date"
          },
          "lotteryEndTime" : {
            "type" : "string",
            "description" : "lottery date ",
            "format" : "date"
          },
          "lotteryPreferences" : {
            "type" : "string",
            "description" : "preferences"
          },
          "lotteryResults" : {
            "type" : "boolean",
            "description" : "lotteryResults"
          },
          "officeHours" : {
            "type" : "string",
            "description" : "office hours"
          }
        },
        "description" : "lottery result"
      },
      "ListingPreference" : {
        "type" : "object",
        "properties" : {
          "listingPreferenceID" : {
            "type" : "string",
            "description" : "salesforce ID"
          },
          "listingID" : {
            "type" : "string",
            "description" : "listing salesforce ID"
          },
          "name" : {
            "type" : "string",
            "description" : "preference"
          },
          "preferenceName" : {
            "type" : "string",
            "description" : "preference name"
          },
          "order" : {
            "type" : "number",
            "description" : "order to display in"
          },
          "pdfUrl" : {
            "type" : "string",
            "description" : "pdf url"
          },
          "description" : {
            "type" : "string",
            "description" : "description"
          },
          "readMoreUrl" : {
            "type" : "string",
            "description" : "readMore Url",
            "format" : "url"
          },
          "NRHPDistrict" : {
            "type" : "string",
            "description" : "neighborhood district "
          },
          "requiresProof" : {
            "type" : "boolean",
            "description" : "requires Proof"
          },
          "appTotal" : {
            "type" : "number",
            "description" : "total number of people who have applied "
          },
          "unitsAvailable" : {
            "type" : "number",
            "description" : "total units available "
          },
          "preferenceProofRequirementDescription" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "Listing preference"
      },
      "ShortFormPreference" : {
        "type" : "object",
        "properties" : {
          "recordTypeDevName" : {
            "type" : "string",
            "description" : "preference record type (COP, DTHP etc..)"
          },
          "shortformPreferenceID" : {
            "type" : "string",
            "description" : "shortform preference ID"
          },
          "applicationID" : {
            "type" : "string",
            "description" : "application ID"
          },
          "appMemberID" : {
            "type" : "string",
            "description" : "application Member ID"
          },
          "naturalKey" : {
            "type" : "string",
            "description" : "naturalKey"
          },
          "listingPreferenceID" : {
            "type" : "string",
            "description" : "listing Preference ID"
          },
          "preferenceProof" : {
            "type" : "string",
            "description" : "type of proof given "
          },
          "lwPreferenceProof" : {
            "type" : "string",
            "description" : "live work type of proof given "
          },
          "optOut" : {
            "type" : "boolean",
            "description" : "optOut"
          },
          "individualPreference" : {
            "type" : "string",
            "description" : "individual Preference"
          },
          "certificateNumber" : {
            "type" : "string",
            "description" : "certificate Number"
          },
          "requiresProof" : {
            "type" : "boolean",
            "description" : "requires Proof"
          },
          "postLotteryValidation" : {
            "type" : "string",
            "description" : "post Lottery Validation"
          },
          "address" : {
            "type" : "string",
            "description" : "address"
          },
          "city" : {
            "type" : "string",
            "description" : "city"
          },
          "state" : {
            "type" : "string",
            "description" : "state"
          },
          "zip" : {
            "type" : "string",
            "description" : "zip"
          }
        },
        "description" : "Application preference"
      },
      "ListingResult" : {
        "type" : "object",
        "properties" : {
          "listingID" : {
            "type" : "string",
            "description" : "listing ID"
          },
          "bucketResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreferenceBucket"
            }
          },
          "applicationResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationResult"
            }
          },
          "URL" : {
            "type" : "string",
            "description" : "randome.org url"
          },
          "lotteryResultsURL" : {
            "type" : "string",
            "description" : "link to a file"
          },
          "liveWorkPreferenceAppTotal" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "liveWorkPreferenceUnitsAvailable" : {
            "type" : "number",
            "description" : "total slots for preference"
          },
          "certOfPreferenceAppTotal" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "certOfPreferenceUnitsAvailable" : {
            "type" : "number",
            "description" : "total slots for preference"
          },
          "displacedPreferenceAppTotal" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "displacedPreferenceUnitsAvailable" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "neighborhoodPreferenceAppTotal" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "neighborhoodPreferenceUnitsAvailable" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "generalLotteryAppTotal" : {
            "type" : "number",
            "description" : "total applications for general lottery"
          },
          "lotteryCity" : {
            "type" : "string",
            "description" : "listing lottery City"
          },
          "lotteryDate" : {
            "type" : "string",
            "description" : "lottery date ",
            "format" : "date"
          },
          "lotteryEndTime" : {
            "type" : "string",
            "description" : "lottery date ",
            "format" : "date"
          },
          "lotteryPreferences" : {
            "type" : "string",
            "description" : "preferences"
          },
          "lotteryResults" : {
            "type" : "boolean",
            "description" : "lotteryResults"
          },
          "officeHours" : {
            "type" : "string",
            "description" : "office hours"
          }
        },
        "description" : "lottery result - deprecated"
      },
      "Eligibility" : {
        "type" : "object",
        "properties" : {
          "listing ID" : {
            "type" : "string",
            "description" : "the listing id"
          },
          "householdEligibilityResult" : {
            "type" : "string",
            "description" : "the household eligibility result.  (Match, Too Big, Too Small)"
          },
          "incomeEligibilityResult" : {
            "type" : "integer",
            "description" : "the household eligibility result. (Match, Too High, Too Low)"
          },
          "householdMatch" : {
            "type" : "boolean",
            "description" : "does household match passed criteria"
          },
          "incomeMatch" : {
            "type" : "boolean",
            "description" : "does income match passed criteria"
          }
        },
        "description" : "eligibility information per listing"
      },
      "LotteryBucket" : {
        "type" : "object",
        "properties" : {
          "PreferenceName" : {
            "type" : "string",
            "description" : "Preference name, (liveWork,COP,DCP,Neighborhood)"
          },
          "TotalSubmitted" : {
            "type" : "number",
            "description" : "total applications for preference"
          },
          "UnitsAvailable" : {
            "type" : "number",
            "description" : "total slots for preference"
          },
          "PreferenceResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreferenceResult"
            }
          }
        },
        "description" : "list of application results by preference"
      },
      "PreferenceResult" : {
        "type" : "object",
        "properties" : {
          "applicationID" : {
            "type" : "string",
            "description" : "ApplicationID ID"
          },
          "lotteryNumber" : {
            "type" : "string",
            "description" : "the lottery number  "
          },
          "preferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this live work - which are treated as one preference"
          },
          "lotteryRank" : {
            "type" : "integer",
            "description" : "raw lottery rank returned form drawing",
            "format" : "int32"
          }
        },
        "description" : "ApplicationResult"
      },
      "PreferenceBucket" : {
        "type" : "object",
        "properties" : {
          "PreferenceName" : {
            "type" : "string",
            "description" : "Preference name, (liveWork,COP,DCP,Neighborhood)"
          },
          "bucketResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BucketResult"
            }
          }
        },
        "description" : "(deprecated) - list of application results by preference  "
      },
      "BucketResult" : {
        "type" : "object",
        "properties" : {
          "applicationID" : {
            "type" : "string",
            "description" : "ApplicationID ID"
          },
          "lotteryNumber" : {
            "type" : "string",
            "description" : "the lottery number  "
          },
          "preferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this live work - which are treated as one preference"
          },
          "lotteryRank" : {
            "type" : "integer",
            "description" : "raw lottery rank returned form drawing",
            "format" : "int32"
          }
        },
        "description" : "bucket result (deprecated) "
      },
      "ApplicationResult" : {
        "type" : "object",
        "properties" : {
          "applicationID" : {
            "type" : "string",
            "description" : "ApplicationID ID"
          },
          "liveWorkPreference" : {
            "type" : "boolean",
            "description" : "true/false"
          },
          "liveWorkPreferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this live work - which are treated as one preference"
          },
          "displacedPreference" : {
            "type" : "boolean",
            "description" : "true/false"
          },
          "displacedPreferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this preference"
          },
          "certOfPreference" : {
            "type" : "boolean",
            "description" : "true/false"
          },
          "certOfPreferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this preference"
          },
          "neighborhoodPreference" : {
            "type" : "boolean",
            "description" : "true/false"
          },
          "neighborhoodPreferenceRank" : {
            "type" : "number",
            "description" : "raw rank for this preference"
          },
          "generalLotteryRank" : {
            "type" : "number",
            "description" : "raw rank for general lottery"
          },
          "lotteryNumber" : {
            "type" : "string",
            "description" : "the lottery number  "
          },
          "lotteryRank" : {
            "type" : "integer",
            "description" : "raw lottery rank returned form drawing",
            "format" : "int32"
          }
        },
        "description" : "ApplicationResult (deprecated) "
      },
      "Attachment" : {
        "type" : "object",
        "properties" : {
          "attachmentID" : {
            "type" : "string",
            "description" : "Attachment ID"
          },
          "fileID" : {
            "type" : "string",
            "description" : "File ID"
          },
          "customAttachmentID" : {
            "type" : "string",
            "description" : "custom Attachment ID"
          },
          "ApplicationID" : {
            "type" : "string",
            "description" : "3rd party webAppID that api consumers can set ID - shoud be unique per source and ID"
          },
          "ApplicationMemberID" : {
            "type" : "string",
            "description" : "App Member ID"
          },
          "ApplicationPreferenceID" : {
            "type" : "string",
            "description" : "App Preference ID"
          },
          "DocumentType" : {
            "type" : "string",
            "description" : "document Type"
          },
          "UploadedDate" : {
            "type" : "string",
            "description" : "date the file was submitted - if blank defaulted to today",
            "format" : "date"
          },
          "Body" : {
            "type" : "string",
            "description" : "base64 encoded blob string",
            "format" : "base64"
          },
          "BodyLength" : {
            "type" : "number",
            "description" : "the length in bytes"
          },
          "Description" : {
            "type" : "string",
            "description" : "the description of the file"
          },
          "fileName" : {
            "type" : "string",
            "description" : "file Name"
          }
        },
        "description" : "Applicant Contact"
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "webAppID" : {
            "type" : "string",
            "description" : "3rd party webAppID that api consumers can set ID - shoud be unique per source and ID"
          },
          "appMemberID" : {
            "type" : "string",
            "description" : "App Member ID"
          },
          "applicationID" : {
            "type" : "string",
            "description" : "Application ID"
          },
          "contactID" : {
            "type" : "string",
            "description" : "sfdc contact ID - null for everyone but primary applicant"
          },
          "firstName" : {
            "type" : "string",
            "description" : "first name"
          },
          "lastName" : {
            "type" : "string",
            "description" : "the listing id"
          },
          "middleName" : {
            "type" : "string",
            "description" : "middle name"
          },
          "DOB" : {
            "type" : "string",
            "description" : "date of Birth",
            "format" : "date"
          },
          "email" : {
            "type" : "string",
            "description" : "email"
          },
          "phone" : {
            "type" : "string",
            "description" : "phone number"
          },
          "phoneType" : {
            "type" : "string",
            "description" : "phone number type (Home, Work,Cell)"
          },
          "alternatePhone" : {
            "type" : "string",
            "description" : "alternate phone number"
          },
          "alternatePhoneType" : {
            "type" : "string",
            "description" : "alternate number type (Home, Work, Cell)"
          },
          "address" : {
            "type" : "string",
            "description" : "Primary Address"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "state" : {
            "type" : "string",
            "description" : "State"
          },
          "zip" : {
            "type" : "string",
            "description" : "Zip"
          },
          "mailingAddress" : {
            "type" : "string",
            "description" : "Mailing address"
          },
          "mailingCity" : {
            "type" : "string",
            "description" : "Mailing City"
          },
          "mailingState" : {
            "type" : "string",
            "description" : "Mailing State"
          },
          "mailingZip" : {
            "type" : "string",
            "description" : "Mailing zip"
          },
          "workInSf" : {
            "type" : "string",
            "description" : "Member works in SF - Value {true, false, <blank>}"
          },
          "gender" : {
            "type" : "string",
            "description" : "gender, can have multiple options. e.g.'male,transgendered-male'"
          },
          "genderOther" : {
            "type" : "string",
            "description" : "other gender"
          },
          "sexualOrientation" : {
            "type" : "string",
            "description" : "sexual orientation"
          },
          "sexualOrientationOther" : {
            "type" : "string",
            "description" : "other sexual orientation"
          },
          "hiv" : {
            "type" : "boolean",
            "description" : "hiv"
          },
          "ethnicity" : {
            "type" : "string",
            "description" : "ethnicity"
          },
          "race" : {
            "type" : "string",
            "description" : "race"
          },
          "sexAtBirth" : {
            "type" : "string",
            "description" : "sex At Birth"
          },
          "language" : {
            "type" : "string",
            "description" : "language"
          },
          "languageOther" : {
            "type" : "string",
            "description" : "other language - if language is other"
          },
          "relationship" : {
            "type" : "string",
            "description" : "relationship to primary applicant"
          },
          "alternateContactType" : {
            "type" : "string",
            "description" : "picklist of types for alternate contact"
          },
          "agency" : {
            "type" : "string",
            "description" : "only if alternateContactType == 'Social worker or housing counselor'"
          },
          "appMemberType" : {
            "type" : "string",
            "description" : "maps to household member type"
          },
          "alternateContactTypeOther" : {
            "type" : "string",
            "description" : "only if alternateContactType is other"
          },
          "hasSameAddressAsApplicant" : {
            "type" : "string",
            "description" : "only for household members to indicate separate address - Value {true, false, <blank>}"
          },
          "preferenceAddressMatch" : {
            "type" : "string",
            "description" : "the front end can validate that the neighborhood preference matches- Value {match, unmatched, <blank>}  "
          },
          "noPhone" : {
            "type" : "boolean",
            "description" : "the front end validates if user has phone"
          },
          "noEmail" : {
            "type" : "boolean",
            "description" : "the front end validates if user has an email"
          },
          "noAddress" : {
            "type" : "boolean",
            "description" : "the front end validates if user has an address"
          },
          "hasAltMailingAddress" : {
            "type" : "boolean",
            "description" : "the front end validates if user has an alternative mailing address"
          },
          "xCoordinate" : {
            "type" : "string",
            "description" : "x Coordinate"
          },
          "yCoordinate" : {
            "type" : "string",
            "description" : "y Coordinate"
          },
          "whichComponentOfLocatorWasUsed" : {
            "type" : "string",
            "description" : "which Component Of Locator Was Used"
          },
          "candidateScore" : {
            "type" : "number",
            "description" : "candidate Scor"
          },
          "nickname" : {
            "type" : "string",
            "description" : "nickname"
          },
          "maritalStatus" : {
            "type" : "string",
            "description" : "marital Status"
          },
          "preferenceStatus" : {
            "type" : "string",
            "description" : "preference Status"
          }
        },
        "description" : "Applicant Contact"
      },
      "Attachment__C" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "string",
            "description" : "Salesforce AttachmentID"
          },
          "ParentId" : {
            "type" : "string",
            "description" : "the application id"
          },
          "Name" : {
            "type" : "string",
            "description" : "the preference Name"
          },
          "ContentType" : {
            "type" : "string",
            "description" : "the content type"
          },
          "BodyLength" : {
            "type" : "number",
            "description" : "the length in bytes"
          },
          "Body" : {
            "type" : "string",
            "description" : "url to the download : /services/data/v36.0/sobjects/Attachment/<AttachmenID>/Body "
          },
          "Description" : {
            "type" : "string",
            "description" : "the description of the file"
          }
        },
        "description" : "deprecated  - Applicant Contact"
      },
      "UnitStat" : {
        "type" : "object",
        "properties" : {
          "listingID" : {
            "type" : "string",
            "description" : ""
          },
          "unitType" : {
            "type" : "string",
            "description" : ""
          },
          "totalUnits" : {
            "type" : "number",
            "description" : ""
          },
          "minOccupancy" : {
            "type" : "number",
            "description" : ""
          },
          "maxOccupancy" : {
            "type" : "number",
            "description" : ""
          },
          "minSquareFt" : {
            "type" : "number",
            "description" : ""
          },
          "maxSquareFt" : {
            "type" : "number",
            "description" : ""
          }
        },
        "description" : "Stats of Units"
      }
    },
    "securitySchemes" : {
      "restrictedAccess" : {
        "type" : "oauth2",
        "flows" : {
          "password" : {
            "tokenUrl" : "https://test.salesforce.com/services/oauth2/token",
            "scopes" : {
              "Listing" : "Information of a particular listing, including qualifications, to apply for listing as well as details on the listing itself - this is available via public and pwd based oauth\n",
              "ListingDetails" : "Listing information coupled with detailed information on unit summary data, and if a criteria was passed in the request, it will show the \"match\" on the citeria\n",
              "UnitSummary" : "summary information on particular unit types for a listing",
              "ShortForm" : "the shortform application for a particular person for a particular listing this includes contact/household information for a person",
              "LotteryMember" : "current lottery memebers for a given listing",
              "Person" : "primary applicant/person who will have applications connected to them.",
              "ami" : "ami calculation"
            }
          }
        }
      },
      "public" : {
        "type" : "apiKey",
        "name" : "access_token",
        "in" : "query"
      }
    }
  }
}